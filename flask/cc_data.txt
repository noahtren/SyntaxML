[['=', 0.043701986548437065], ['{', 0.02646652182500494], ['if', 0.024179548218759422], ['}', 0.02395344969177833], ['the', 0.020242315248916287], ['//', 0.019592606838051082], ['return', 0.013799806646776927], ['a', 0.010413526409347484], ['==', 0.009519527635996965], ['*/', 0.00903094691102633], ['/*', 0.009012755075522105], ['to', 0.00854756385334262], ['!=', 0.008461802343108412], ['for', 0.007918646111625103], ['case', 0.007663960414565942], ['is', 0.00717537968959531], ['of', 0.007009054336413818], ['tree', 0.0067361768038504315], ['else', 0.005883759368795285], ['&&', 0.005371789141033504], ['in', 0.005031341933740137], ['const', 0.004839028244124037], ['NULL)', 0.003960622472634282], ['type', 0.003760512282087799], ['void', 0.003521419586889404], ['and', 0.0033992744056467457], ['int', 0.003227751385178332], ['that', 0.003173175878665655], ['break;', 0.0031627805440918116], ['||', 0.00315758287680489], ['bool', 0.0031108038712225955], ['be', 0.0030718213665706833], ['we', 0.0030536295310664573], ['#include', 0.002778153164859611], ['an', 0.002778153164859611], ['false;', 0.002580641807956589], ['Expression*', 0.0025754441406696674], ['NULL', 0.002468891961287774], ['-', 0.0024351071239227836], ['not', 0.0023467467800451156], ['The', 0.002276578271671674], ['it', 0.0022713806043847522], ['this', 0.0022505899352370656], [';;', 0.0022401946006632223], ['true;', 0.0022116074305851535], ['();', 0.0021726249259332413], ['loc);', 0.0021128517521336425], ['Type*', 0.0020504797446905827], ['|', 0.002032287909186357], ['are', 0.0019855089036040626], [':', 0.0019699159017432977], ['as', 0.001962119400812915], ['new', 0.0019387298980217678], ['i', 0.0019387298980217678], ['+', 0.0019153403952306206], ['or', 0.001878956724222169], ['<', 0.0018711602232917867], ['p', 0.001852968387787561], ['0;', 0.0018269800513529529], ['unsigned', 0.0018009917149183446], ['This', 0.0017100325373972161], ['function', 0.0017048348701102945], ['by', 0.001639864029023774], ['If', 0.0016320675280933918], ['<<', 0.0015644978533634105], ['with', 0.0015541025187895672], ['Location', 0.0014865328440595862], ['can', 0.0014631433412684387], ['Return', 0.0014397538384772913], ['1;', 0.0014345561711903698], ['static', 0.0014215620029730657], ['*', 0.0013955736665384575], ['1},', 0.0013669864964603886], ['have', 0.0013409981600257805], ['NULL,', 0.0012942191544434857], ['We', 0.0012656319843654168], ['?', 0.0012656319843654168], ['NULL;', 0.0012396436479308087], ['location);', 0.0012084576442092788], ['return;', 0.00117987047413121], ['which', 0.0011772716404877491], ['type.', 0.0011746728068442883], ['NULL);', 0.0011512833040531409], ['char', 0.0011148996330446895], ['#', 0.0010915101302535423], ['value', 0.0010733182947493165], ['will', 0.0010733182947493165], ['0)', 0.0010629229601754732], ['from', 0.0010473299583147085], ['all', 0.0010421322910277868], ['Named_object*', 0.0010213416218801002], ['std::string', 0.000997952119088953], ['*)', 0.0009953532854454921], ['call', 0.0009355801116458934], ['>', 0.0009329812780024325], ['expression', 0.0009069929415678244], ['(tree', 0.0009069929415678244], ['should', 0.0008991964406374419], ['type,', 0.0008965976069939811], ['used', 0.000883603438776677], ['then', 0.0008810046051332162], ['switch', 0.0008680104369159121], ['Bexpression*', 0.0008680104369159121], ['ret', 0.0008420221004813039], ['(const', 0.0008342255995509216], ['name', 0.0008290279322639999], ['no', 0.0008238302649770783], ['loop', 0.0008186325976901566], ['result', 0.0008082372631163134], ['while', 0.0008082372631163134], ['gcc_assert', 0.0008056384294728526], ['struct', 0.0008004407621859309], ['false,', 0.0008004407621859309], ['but', 0.0008004407621859309], ['on', 0.0008004407621859309], ['()', 0.0007848477603251661], ['1', 0.0007770512593947836], ['size_t', 0.0007770512593947836], ['any', 0.0007744524257513228], ['so', 0.0007588594238905579], ['need', 0.0007484640893167146], ['\\', 0.0007380687547428714], ['at', 0.000730272253812489], ['use', 0.000730272253812489], ['A', 0.0007250745865255673], ['code', 0.0007146792519517241], ['&', 0.0007094815846648024], ['"', 0.0006990862500909591], ['variable', 0.0006808944145867335], ['only', 0.000673097913656351], ['default:', 0.0006653014127259686], ['t', 0.0006653014127259686], ['into', 0.0006653014127259686], ['expression.', 0.000660103745439047], ['(TREE_TYPE', 0.000660103745439047], ['true,', 0.0006575049117955861], ['location)', 0.0006497084108652037], ['field', 0.0006497084108652037], ['may', 0.0006419119099348213], ['General', 0.0006367142426478996], ['/', 0.0006341154090044388], ['())', 0.000631516575360978], ['pointer', 0.000631516575360978], ['types', 0.0006211212407871348], ['0);', 0.0006055282389263698], ['Build', 0.0006055282389263698], ['NHV,', 0.0006055282389263698], ['printf', 0.0006055282389263698], ['};', 0.0006003305716394482], ['class', 0.000589935237065605], ['esac', 0.000589935237065605], ['++p)', 0.0005847375697786833], ['when', 0.0005769410688483008], ['GNU', 0.00057434223520484], ['ret;', 0.0005665457342744576], ['has', 0.0005665457342744576], ['0', 0.0005561503997006143], ['Public', 0.0005535515660571535], ['License', 0.0005509527324136927], ['do', 0.0005509527324136927], ['see', 0.000548353898770232], ['std::string&', 0.0005431562314833103], ['array', 0.0005431562314833103], ['");', 0.0005405573978398495], ['1,', 0.000532760896909467], ['NULL_TREE;', 0.000532760896909467], ['0,', 0.0005301620632660062], ['set', 0.0005223655623356238], ['go_unreachable();', 0.0005171678950487022], ['method', 0.0005145690614052413], ['ast_dump_context->ostream()', 0.0005145690614052413], ['TREE_TYPE', 0.0005093713941183197], ['tm_file="${tm_file}', 0.0005093713941183197], ['file', 0.0005067725604748589], ['bloc);', 0.0005015748931879372], ['GCC', 0.0005015748931879372], ['Make', 0.0004937783922575548], ['interface', 0.0004937783922575548], ['whether', 0.0004937783922575548], ["don't", 0.000491179558614094], ['true', 0.0004885807249706332], ['gogo,', 0.0004885807249706332], ['Type', 0.00048598189132717236], ['error', 0.00048598189132717236], ['++i)', 0.00047818539039678993], ['continue;', 0.0004755865567533291], ['char*', 0.00046519122217948585], ['(TREE_CODE', 0.00046519122217948585], ['1);', 0.00046519122217948585], ['this->advance_token();', 0.00046519122217948585], ['(size_t', 0.00046259238853602503], ['must', 0.00046259238853602503], ['Btype*', 0.0004599935548925642], ['there', 0.0004521970539621818], ['go_error_at(this->location(),', 0.00044440055303179935], ['Check', 0.00044440055303179935], ['visit', 0.00044440055303179935], ['X', 0.00044440055303179935], ['function.', 0.0004418017193883385], ['name,', 0.0004392028857448777], ['<=', 0.00043660405210141687], ['+=', 0.00043660405210141687], ['>=', 0.00043400521845795605], ['statement', 0.00043400521845795605], ['i++)', 0.0004314063848144953], ['HOST_WIDE_INT', 0.0004314063848144953], ['For', 0.00042880755117103445], ['first', 0.00042880755117103445], ['#define', 0.0004262087175275736], ['representation', 0.0004262087175275736], ['s', 0.0004262087175275736], ['backend', 0.0004184122165971912], ['one', 0.0004184122165971912], ['TRAVERSE_CONTINUE;', 0.00041581338295373037], ['named', 0.0004106157156668087], ['out', 0.0004028192147364263], ['number', 0.00040022038109296547], ['Get', 0.00039762154744950464], ['Statement*', 0.00039762154744950464], ['());', 0.00039502271380604387], ['constant', 0.00039502271380604387], ['index', 0.00039502271380604387], ['test', 0.00039502271380604387], ['(),', 0.00039242388016258304], ['Typed_identifier_list*', 0.0003898250465191222], ['Expression_list*', 0.0003898250465191222], ['functions', 0.0003872262128756614], ['version', 0.0003872262128756614], ['list', 0.00038462737923220056], ['offset', 0.00038462737923220056], ['tmake_file="${tmake_file}', 0.00037942971194527896], ['Free', 0.0003742320446583573], ['Set', 0.0003742320446583573], ['wide_int', 0.0003742320446583573], ['Software', 0.0003690343773714357], ['1)', 0.0003690343773714357], ['this->location();', 0.0003690343773714357], ['its', 0.0003664355437279749], ['false);', 0.0003664355437279749], ['because', 0.00036383671008451406], ['same', 0.00035604020915413164], ['before', 0.00035604020915413164], ['data', 0.00035604020915413164], ['args,', 0.0003534413755106708], ['variables', 0.0003534413755106708], ['address', 0.0003534413755106708], ['build2', 0.0003534413755106708], ['echo', 0.0003534413755106708], ['more', 0.00035084254186721], ['check', 0.00035084254186721], ['gcc_unreachable', 0.00034824370822374916], ['loc', 0.00034824370822374916], ['traverse)', 0.00034824370822374916], ['expr', 0.00034824370822374916], ['fields', 0.00034824370822374916], ['up', 0.00034824370822374916], ['defined', 0.00034824370822374916], ['Operator', 0.00034824370822374916], ['already', 0.00034824370822374916], ['error_mark_node)', 0.00034824370822374916], ['block', 0.0003456448745802884], ['sizeof', 0.00034304604093682756], ['size', 0.00034304604093682756], ['Y', 0.00034304604093682756], ['either', 0.00034044720729336673], ['Class', 0.0003378483736499059], ['fi', 0.0003378483736499059], ['current', 0.00033524954000644513], ['3,', 0.0003326507063629843], ['init', 0.0003326507063629843], ['public:', 0.0003300518727195235], ['Temporary_statement*', 0.0003300518727195235], ['methods', 0.00032745303907606265], ['string', 0.00032745303907606265], ['package', 0.00032745303907606265], ['},', 0.00032745303907606265], ['elfos.h', 0.00032745303907606265], ['rtx', 0.00032745303907606265], ['TRAVERSE_EXIT)', 0.00032485420543260183], ['Block*', 0.00032485420543260183], ['this->result_', 0.00032485420543260183], ['reference', 0.00032225537178914106], ['it.', 0.00032225537178914106], ['TRAVERSE_EXIT;', 0.00032225537178914106], ['than', 0.00031965653814568023], ['go_assert(saw_errors());', 0.0003170577045022194], ['Named_type*', 0.0003170577045022194], ['using', 0.0003170577045022194], ['decl', 0.0003170577045022194], ['without', 0.0003144588708587586], ['Add', 0.0003144588708587586], ['each', 0.0003144588708587586], ['statement.', 0.0003144588708587586], ['other', 0.00031186003721529775], ['types.', 0.000309261203571837], ['long', 0.000309261203571837], ['value.', 0.000309261203571837], ['exit', 0.000309261203571837], ['object', 0.00030666236992837615], ['location', 0.00030666236992837615], ['values', 0.0003040635362849153], ['(decl)', 0.0003040635362849153], ['Go', 0.0003014647026414545], ['#undef', 0.0003014647026414545], ['was', 0.0003014647026414545], ['function,', 0.00029886586899799373], ['Bstatement*', 0.00029886586899799373], ['int64_t', 0.00029886586899799373], ['extra_options="${extra_options}', 0.00029886586899799373], ['does', 0.0002962670353545329], ['(unsigned', 0.0002936682017110721], ['Function_type*', 0.0002936682017110721], ['D', 0.0002936682017110721], ['copy', 0.00029106936806761125], ['where', 0.00029106936806761125], ['argument', 0.0002884705344241504], ['ref', 0.0002884705344241504], ['.', 0.0002884705344241504], ['See', 0.00028587170078068965], ['two', 0.00028587170078068965], ['In', 0.00028587170078068965], ['even', 0.000280674033493768], ['been', 0.000280674033493768], ['Returns', 0.000280674033493768], ['just', 0.00027807519985030717], ['label', 0.00027807519985030717], ['builtin', 0.00027547636620684634], ['public', 0.00027287753256338557], ['this;', 0.00027287753256338557], ['Z', 0.00027287753256338557], ['(int', 0.00027027869891992475], ['free', 0.00027027869891992475], ['later', 0.0002676798652764639], ['given', 0.0002676798652764639], ['after', 0.0002676798652764639], ['end', 0.0002676798652764639], ['Dump', 0.00026248219798954227], ['this->location());', 0.00026248219798954227], ['go_error_at(location,', 0.00026248219798954227], ['Node*', 0.00026248219798954227], ['token', 0.00026248219798954227], ['var', 0.0002598833643460815], ['T', 0.0002598833643460815], ['t)', 0.0002598833643460815], ['build_address', 0.00025728453070262067], ['(t);', 0.00025728453070262067], ['always', 0.00025468569705915984], ['Expression', 0.00025468569705915984], ['statements', 0.00025468569705915984], ['n', 0.000252086863415699], ['convert', 0.000252086863415699], ['C', 0.00024948802977223824], ['descriptor', 0.00024948802977223824], ['bits', 0.00024948802977223824], ['op', 0.00024948802977223824], ['complain,', 0.0002468891961287774], ['they', 0.0002442903624853166], ['context)', 0.0002442903624853166], ['them', 0.0002442903624853166], ['"shli",', 0.0002442903624853166], ['ast_dump_context)', 0.00024169152884185576], ['private:', 0.00024169152884185576], ['${target}', 0.00024169152884185576], ['Copyright', 0.00023909269519839497], ['loc,', 0.00023909269519839497], ['(build_ctype', 0.00023909269519839497], ['(i', 0.00023909269519839497], ['(type,', 0.00023909269519839497], ['c', 0.00023649386155493414], ['symbol', 0.00023649386155493414], ['build_expr', 0.00023649386155493414], ['delete', 0.00023389502791147334], ['right', 0.00023129619426801251], ['NULL_TREE);', 0.00023129619426801251], ['constraint', 0.00023129619426801251], ['dbxelf.h', 0.00023129619426801251], ['Expression_list();', 0.00022869736062455171], ['val', 0.00022869736062455171], ['len', 0.00022869736062455171], ['|=', 0.00022869736062455171], ['t,', 0.0002260985269810909], ['single', 0.0002260985269810909], ['integer', 0.0002260985269810909], ['returns', 0.0002260985269810909], ['bloc));', 0.00022349969333763006], ['add', 0.00022349969333763006], ['emit_insn', 0.00022349969333763006], ['declaration', 0.00022090085969416926], ['some', 0.00022090085969416926], ['create', 0.00022090085969416926], ['initializer', 0.00022090085969416926], ['global', 0.00022090085969416926], ['error_mark_node;', 0.00022090085969416926], ['size_int', 0.00022090085969416926], ['make', 0.00021830202605070844], ['temporary', 0.00021830202605070844], ['NULL_TREE,', 0.00021830202605070844], ['log_msg', 0.00021830202605070844], ['--', 0.00021570319240724764], ['NULL))', 0.00021570319240724764], ['part', 0.00021570319240724764], ['Type::make_error_type();', 0.00021570319240724764], ["can't", 0.00021570319240724764], ['here', 0.00021570319240724764], ['type;', 0.00021570319240724764], ['(Typed_identifier_list::const_iterator', 0.00021570319240724764], ['loop.', 0.00021570319240724764], ['TREE_OPERAND', 0.00021570319240724764], ['tm_defines="${tm_defines}', 0.00021570319240724764], ['(reg:SI', 0.00021570319240724764], ['found', 0.0002131043587637868], ['file.', 0.0002131043587637868], ['pass', 0.0002131043587637868], ['terms', 0.0002131043587637868], ['2)', 0.0002131043587637868], ['(callexp,', 0.0002131043587637868], ['want', 0.00021050552512032598], ['get', 0.00021050552512032598], ['++p;', 0.00021050552512032598], ['(t,', 0.00021050552512032598], ['runtime', 0.00020790669147686519], ['gogo)', 0.00020790669147686519], ['you', 0.00020790669147686519], ['start', 0.00020790669147686519], ['Traverse', 0.00020790669147686519], ['variable.', 0.00020790669147686519], ['arg', 0.00020790669147686519], ['along', 0.00020530785783340436], ['expr,', 0.00020530785783340436], ['x', 0.00020530785783340436], ['"expected', 0.00020530785783340436], ['map', 0.00020530785783340436], ['length', 0.00020530785783340436], ['zero', 0.00020270902418994356], ['An', 0.00020270902418994356], [';', 0.00020270902418994356], ['"invalid', 0.00020270902418994356], ['(loc,', 0.00020270902418994356], ['FLOAT', 0.00020270902418994356], ['and/or', 0.00020011019054648273], ['modify', 0.00020011019054648273], ['inner', 0.00020011019054648273], ['2,', 0.00019751135690302193], ['also', 0.00019751135690302193], ['element', 0.00019751135690302193], ['basic', 0.00019751135690302193], ['0));', 0.00019751135690302193], ['under', 0.0001949125232595611], ['hope', 0.0001949125232595611], ['received', 0.0001949125232595611], ['left', 0.0001949125232595611], ['multiple', 0.0001949125232595611], ['since', 0.0001949125232595611], ['template', 0.0001949125232595611], ['args', 0.00019231368961610028], ['(at', 0.00019231368961610028], ['You', 0.00019231368961610028], ['export', 0.00019231368961610028], ['point', 0.00019231368961610028], ['bit', 0.00019231368961610028], ['j', 0.00019231368961610028], ['CONSTRUCTOR_APPEND_ELT', 0.00019231368961610028], ['input', 0.00019231368961610028], ['t;', 0.00018971485597263948], ['through', 0.00018971485597263948], ['(C)', 0.00018971485597263948], ['version.', 0.00018971485597263948], ['Lower', 0.00018971485597263948], ['would', 0.00018971485597263948], ['different', 0.00018971485597263948], ['arguments', 0.00018971485597263948], ['true);', 0.00018971485597263948], ['1>&2', 0.00018971485597263948], ['Create', 0.00018711602232917866], ['range', 0.00018711602232917866], ['assignment', 0.00018711602232917866], ['%s', 0.00018711602232917866], ['One', 0.00018711602232917866], ['hash', 0.00018711602232917866], ['Note', 0.00018451718868571786], ['fntype', 0.00018451718868571786], ['name)', 0.00018451718868571786], ['Foundation,', 0.00018451718868571786], ['software;', 0.00018451718868571786], ['redistribute', 0.00018451718868571786], ['published', 0.00018451718868571786], ['Foundation;', 0.00018451718868571786], ['option)', 0.00018451718868571786], ['distributed', 0.00018451718868571786], ['useful,', 0.00018451718868571786], ['WARRANTY;', 0.00018451718868571786], ['implied', 0.00018451718868571786], ['warranty', 0.00018451718868571786], ['FOR', 0.00018451718868571786], ['PARTICULAR', 0.00018451718868571786], ['PURPOSE.', 0.00018451718868571786], ['details.', 0.00018451718868571786], ['GCC;', 0.00018451718868571786], ['COPYING3.', 0.00018451718868571786], ['called', 0.00018191835504225703], ['(t', 0.00018191835504225703], ['Inc.', 0.00018191835504225703], ['your', 0.00018191835504225703], ['WITHOUT', 0.00018191835504225703], ['ANY', 0.00018191835504225703], ['MERCHANTABILITY', 0.00018191835504225703], ['FITNESS', 0.00018191835504225703], ['<http://www.gnu.org/licenses/>.', 0.00018191835504225703], ['mpz_t', 0.00018191835504225703], ['const;', 0.00018191835504225703], ['results', 0.00018191835504225703], ['NULL_TREE)', 0.00018191835504225703], ['compound_expr', 0.00018191835504225703], ['frontend', 0.00017931952139879623], ['could', 0.00017931952139879623], ['Write', 0.00017931952139879623], ["doesn't", 0.00017931952139879623], ['operand', 0.00017931952139879623], ['build_ctype', 0.00017931952139879623], ['outer', 0.00017931952139879623], ['TypeInfo', 0.00017931952139879623], ['[', 0.00017931952139879623], ['Convert', 0.0001767206877553354], ['literal', 0.0001767206877553354], ['target', 0.0001767206877553354], ['Struct_field_list*', 0.0001767206877553354], ['SHIFT', 0.0001767206877553354], ['2},', 0.0001767206877553354], ['calls', 0.00017412185411187458], ['these', 0.00017412185411187458], ['identifier', 0.00017412185411187458], ['about', 0.00017412185411187458], ['va_gc>', 0.00017412185411187458], ['ASSERT_EQ', 0.00017152302046841378], ['such', 0.00017152302046841378], ['fn', 0.00017152302046841378], ['Numeric_constant', 0.00017152302046841378], ['type)', 0.00017152302046841378], ['Use', 0.00016892418682495295], ['name.', 0.00016892418682495295], ['Struct_type*', 0.00016892418682495295], ['Gogo*', 0.00016892418682495295], ['pf', 0.00016892418682495295], ['b', 0.00016892418682495295], ['(TREE_OPERAND', 0.00016892418682495295], ['code,', 0.00016632535318149215], ['location,', 0.00016632535318149215], ['build', 0.00016632535318149215], ['conversion', 0.00016632535318149215], ['might', 0.00016632535318149215], ['closure', 0.00016632535318149215], ['buf,', 0.00016632535318149215], ['base', 0.00016632535318149215], ['parameter', 0.00016632535318149215], ['next', 0.00016632535318149215], ['default', 0.00016632535318149215], ['this->layout_field', 0.00016632535318149215], ['newlib-stdint.h', 0.00016632535318149215], ['ccreg', 0.00016632535318149215], ['e', 0.00016372651953803133], ['names', 0.00016372651953803133], ['being', 0.00016372651953803133], ['comparison', 0.00016372651953803133], ['(void)', 0.00016372651953803133], ['("CODE_FOR_ashldi3",', 0.00016372651953803133], ['Zero)', 0.00016372651953803133], ['FIXME:', 0.00016112768589457053], ['It', 0.00016112768589457053], ['snprintf(buf,', 0.00016112768589457053], ['cannot', 0.00016112768589457053], ['";', 0.0001585288522511097], ['between', 0.0001585288522511097], ['slice', 0.0001585288522511097], ['ref,', 0.0001585288522511097], ['vector', 0.0001585288522511097], ['blocks', 0.0001585288522511097], ['void_type_node,', 0.0001585288522511097], ['table', 0.00015593001860764888], ['information', 0.00015593001860764888], ['this->set_is_error();', 0.00015593001860764888], ['(this->type_', 0.00015593001860764888], ['val);', 0.00015593001860764888], ['import', 0.00015593001860764888], ['order', 0.00015593001860764888], ['compiler', 0.00015593001860764888], ['std::string*', 0.00015593001860764888], ['source', 0.00015333118496418808], ['expressions', 0.00015333118496418808], ['this->type_', 0.00015333118496418808], ['handle', 0.00015333118496418808], ['composite', 0.00015333118496418808], ['Identifier::idPool', 0.00015333118496418808], ['RETURN,', 0.00015333118496418808], ['go_error_at(this->location_,', 0.00015073235132072725], ['inline', 0.00015073235132072725], ['%', 0.00015073235132072725], ['(type);', 0.00015073235132072725], ['(decl);', 0.00015073235132072725], ['("', 0.00015073235132072725], ['code.', 0.00014813351767726645], ['never', 0.00014813351767726645], ['array.', 0.00014813351767726645], ['here.', 0.00014813351767726645], ['local', 0.00014813351767726645], ['Bvariable*', 0.00014813351767726645], ['know', 0.00014813351767726645], ["it's", 0.00014813351767726645], ['bytes', 0.00014813351767726645], ['0))', 0.00014813351767726645], ['*e)', 0.00014813351767726645], ['add_stmt', 0.00014813351767726645], ['fprintf(file,', 0.00014813351767726645], ['%qs",', 0.00014553468403380562], ['done', 0.00014553468403380562], ['whose', 0.00014553468403380562], ['original', 0.00014553468403380562], ['module', 0.00014553468403380562], ['get_identifier', 0.00014553468403380562], ['fprintf', 0.00014553468403380562], ['*,', 0.00014553468403380562], ['(expr,', 0.00014553468403380562], ['nested', 0.00014553468403380562], [']', 0.00014553468403380562], ['ARG_UNUSED', 0.00014553468403380562], ['flags', 0.00014293585039034482], ['val,', 0.00014293585039034482], ['complex', 0.00014293585039034482], ['thunk', 0.00014293585039034482], ['(nt', 0.00014293585039034482], ['AST', 0.00014293585039034482], ['TYPE', 0.00014293585039034482], ['(decl->csym)', 0.00014293585039034482], ['Linemap::predeclared_location();', 0.000140337016746884], ['TREE_CODE', 0.000140337016746884], ['Expression::make_error(location);', 0.000140337016746884], ['parameters', 0.000140337016746884], ['builtin_decl_explicit', 0.000140337016746884], ['gnu-user.h', 0.000140337016746884], ['CALL_EXPR_ARG', 0.000140337016746884], ['write', 0.00013773818310342317], ['within', 0.00013773818310342317], ['sure', 0.00013773818310342317], ['vals', 0.00013773818310342317], ['real', 0.00013773818310342317], ['val;', 0.00013773818310342317], ['try', 0.00013773818310342317], ['There', 0.00013773818310342317], ['temp', 0.00013773818310342317], ['result;', 0.00013773818310342317], ['error_mark_node', 0.00013773818310342317], ['BrigBase', 0.00013773818310342317], ['find', 0.00013773818310342317], ['constraints', 0.00013773818310342317], ['std::endl;', 0.00013773818310342317], ['no)', 0.00013513934945996237], ['t1', 0.00013513934945996237], ['(type)', 0.00013513934945996237], ['declaration.', 0.00013513934945996237], ['(dump_file,', 0.00013513934945996237], ['gccbrig_tree_type_for_hsa_type', 0.00013513934945996237], ['x;', 0.00013513934945996237], ['tree,', 0.00013513934945996237], ['ARG1,', 0.00013513934945996237], ['(XEXP', 0.00013513934945996237], ['insn', 0.00013513934945996237], ['Call_expression*', 0.00013254051581650155], ['GCC.', 0.00013254051581650155], ['record', 0.00013254051581650155], ['both', 0.00013254051581650155], ['means', 0.00013254051581650155], ['Bfunction*', 0.00013254051581650155], ['vals,', 0.00013254051581650155], ['GMP_RNDN);', 0.00013254051581650155], ['Statement::make_temporary(NULL,', 0.00013254051581650155], ['These', 0.00013254051581650155], ['fields->begin();', 0.00013254051581650155], ['last', 0.00013254051581650155], ['build_int_cst', 0.00013254051581650155], ["'", 0.00013254051581650155], ['${tm_file}', 0.00013254051581650155], ['goto', 0.00012994168217304075], ['support', 0.00012994168217304075], ['cond', 0.00012994168217304075], ['receiver', 0.00012994168217304075], ['nt', 0.00012994168217304075], ['ret);', 0.00012994168217304075], ['store', 0.00012994168217304075], ['uses', 0.00012994168217304075], ['result);', 0.00012994168217304075], ['tree_stl_vec', 0.00012994168217304075], ['in_decl);', 0.00012994168217304075], ['count', 0.00012734284852957992], ['block.', 0.00012734284852957992], ['escape', 0.00012734284852957992], ['initialization', 0.00012734284852957992], ['memory', 0.00012734284852957992], ['contains', 0.00012734284852957992], ['package,', 0.00012734284852957992], ['stride', 0.00012734284852957992], ['header', 0.00012734284852957992], ['OK', 0.00012734284852957992], ['value;', 0.00012734284852957992], ['concept', 0.00012734284852957992], ['"Unknown', 0.00012734284852957992], ['%s",', 0.00012474401488611912], ['their', 0.00012474401488611912], ['#endif', 0.00012474401488611912], ['protected:', 0.00012474401488611912], ['cases', 0.00012474401488611912], ['like', 0.00012474401488611912], ['package.', 0.00012474401488611912], ['btype,', 0.00012474401488611912], ['loops', 0.00012474401488611912], ['len,', 0.00012474401488611912], ['Handle', 0.00012474401488611912], ['*);', 0.00012474401488611912], ['condition', 0.00012474401488611912], ['uint32_type_node,', 0.00012474401488611912], ['versioning', 0.00012474401488611912], ['body', 0.00012474401488611912], ['""', 0.00012474401488611912], ['[bb', 0.00012474401488611912], ['Token*', 0.00012474401488611912], ['nil', 0.0001221451812426583], ['When', 0.0001221451812426583], ['avoid', 0.0001221451812426583], ['abstract', 0.0001221451812426583], ['2;', 0.0001221451812426583], ['overflow', 0.0001221451812426583], ['2', 0.0001221451812426583], ['type);', 0.0001221451812426583], ['DECL_CONTEXT', 0.0001221451812426583], ["Don't", 0.0001221451812426583], ['d_convert', 0.0001221451812426583], ['DECL_INITIAL', 0.0001221451812426583], ['output', 0.0001221451812426583], ['inform', 0.0001221451812426583], ['All', 0.00011954634759919748], ['enum', 0.00011954634759919748], ['Typed_identifier_list();', 0.00011954634759919748], ['representation.', 0.00011954634759919748], ['va_list', 0.00011954634759919748], ['Verify', 0.00011954634759919748], ['gogo', 0.00011954634759919748], ['(c', 0.00011954634759919748], ['this->seen_', 0.00011954634759919748], ['underlying', 0.00011954634759919748], ['(Struct_field_list::const_iterator', 0.00011954634759919748], ['TYPE.', 0.00011954634759919748], ['t2', 0.00011954634759919748], ['*d)', 0.00011954634759919748], ['args);', 0.00011954634759919748], ['Package*', 0.00011954634759919748], ['(set', 0.00011954634759919748], ['this->peek_token();', 0.00011954634759919748], ['U2;', 0.00011954634759919748], ['generated', 0.00011694751395573667], ['bloc', 0.00011694751395573667], ['r', 0.00011694751395573667], ['NAME,', 0.00011694751395573667], ['references', 0.00011694751395573667], ['many', 0.00011694751395573667], ['side', 0.00011694751395573667], ['empty', 0.00011694751395573667], ['inserter,', 0.00011694751395573667], ['Traversal.', 0.00011694751395573667], ['handled', 0.00011694751395573667], ['Named_object*,', 0.00011694751395573667], ['VAL', 0.00011694751395573667], ['converted', 0.00011694751395573667], ['pv', 0.00011694751395573667], ['Implements', 0.00011694751395573667], ['FuncDeclaration', 0.00011694751395573667], ['1));', 0.00011694751395573667], ['vec<constructor_elt,', 0.00011694751395573667], ['ARG2,', 0.00011694751395573667], ['sed', 0.00011694751395573667], ['Look', 0.00011434868031227586], ['json::object', 0.00011434868031227586], ['>>', 0.00011434868031227586], ['(Expression_list::const_iterator', 0.00011434868031227586], ['seen', 0.00011434868031227586], ['n;', 0.00011434868031227586], ['i;', 0.00011434868031227586], ['build_decl', 0.00011434868031227586], ['(decl,', 0.00011434868031227586], ['base;', 0.00011434868031227586], ['top', 0.00011434868031227586], ['Radix', 0.00011434868031227586], ['/*=============================================*/', 0.00011434868031227586], ['"system.h"', 0.00011174984666881503], ['Statement_inserter*', 0.00011174984666881503], ['bt', 0.00011174984666881503], ['decl;', 0.00011174984666881503], ['Location);', 0.00011174984666881503], ['(*p', 0.00011174984666881503], ['(p', 0.00011174984666881503], ['reduction', 0.00011174984666881503], ['buf;', 0.00011174984666881503], ['instruction', 0.00011174984666881503], ['int_size_in_bytes', 0.00011174984666881503], ['name);', 0.00011174984666881503], ['get_symbol_decl', 0.00011174984666881503], ['TstCond', 0.00011174984666881503], ['Y;', 0.00011174984666881503], ['Type::make_function_type(NULL,', 0.00010915101302535422], ['"config.h"', 0.00010915101302535422], ['error_at', 0.00010915101302535422], ['constant.', 0.00010915101302535422], ['(type', 0.00010915101302535422], ['Variable*', 0.00010915101302535422], ['string.', 0.00010915101302535422], ['call.', 0.00010915101302535422], ['value,', 0.00010915101302535422], ['needs', 0.00010915101302535422], ['work', 0.00010915101302535422], ['elements', 0.00010915101302535422], ['exp', 0.00010915101302535422], ['over', 0.00010915101302535422], ['level', 0.00010915101302535422], ['form', 0.00010915101302535422], ['(t))', 0.00010915101302535422], ['(e->type),', 0.00010915101302535422], ['Array_type*', 0.0001065521793818934], ['"coretypes.h"', 0.0001065521793818934], ['passed', 0.0001065521793818934], ['innermost', 0.0001065521793818934], ['rhs,', 0.0001065521793818934], ['requires', 0.0001065521793818934], ['dump', 0.0001065521793818934], ['special', 0.0001065521793818934], ['calling', 0.0001065521793818934], ['shift', 0.0001065521793818934], ['types,', 0.0001065521793818934], ['unnamed', 0.0001065521793818934], ['entry', 0.0001065521793818934], ['(code,', 0.0001065521793818934], ['declared', 0.0001065521793818934], ['linux.h', 0.0001065521793818934], ['jump', 0.0001065521793818934], ['Contributed', 0.00010395334573843259], ['namespace', 0.00010395334573843259], ['pointer.', 0.00010395334573843259], ['Whether', 0.00010395334573843259], ['nc;', 0.00010395334573843259], ['fields->end();', 0.00010395334573843259], ['instead', 0.00010395334573843259], ['(name', 0.00010395334573843259], ['NAME', 0.00010395334573843259], ['(make_location_t', 0.00010395334573843259], ['definition', 0.00010395334573843259], ['d_save_expr', 0.00010395334573843259], ['len;', 0.00010395334573843259], ['offset);', 0.00010395334573843259], ['TRAVERSE_SKIP_COMPONENTS;', 0.00010395334573843259], ['this->register_builtin_type(gogo,', 0.00010395334573843259], ['branch', 0.00010395334573843259], ['tm_file="dbxelf.h', 0.00010395334573843259], ['emit_move_insn', 0.00010395334573843259], ['log_return', 0.00010395334573843259], ['functions.', 0.00010135451209497178], ['this->type_;', 0.00010135451209497178], ['take', 0.00010135451209497178], ['*p', 0.00010135451209497178], ['(true)', 0.00010135451209497178], ['float', 0.00010135451209497178], ['language', 0.00010135451209497178], ['location));', 0.00010135451209497178], ['false', 0.00010135451209497178], ['way', 0.00010135451209497178], ['-1', 0.00010135451209497178], ['sets', 0.00010135451209497178], ['operation', 0.00010135451209497178], ['t1,', 0.00010135451209497178], ['simple', 0.00010135451209497178], ['alignment', 0.00010135451209497178], ['scope', 0.00010135451209497178], ['",', 0.00010135451209497178], ['typedef', 0.00010135451209497178], ['build_libcall', 0.00010135451209497178], ['build_constructor', 0.00010135451209497178], ['(build_expr', 0.00010135451209497178], ['mask', 0.00010135451209497178], ['ptr_type_node,', 0.00010135451209497178], ['ARG3,', 0.00010135451209497178], ['template<typename', 0.00010135451209497178], ['constraint.', 0.00010135451209497178], ['*s)', 0.00010135451209497178], ['t->ctype', 0.00010135451209497178], ['(Failure,', 0.00010135451209497178], ['Interface_type*', 9.875567845151097e-05], ['give', 9.875567845151097e-05], ['during', 9.875567845151097e-05], ['Determine', 9.875567845151097e-05], ['reference.', 9.875567845151097e-05], ['extra', 9.875567845151097e-05], ['element_type', 9.875567845151097e-05], ['required', 9.875567845151097e-05], ['call,', 9.875567845151097e-05], ['arg);', 9.875567845151097e-05], ['assign', 9.875567845151097e-05], ['message', 9.875567845151097e-05], ['literal.', 9.875567845151097e-05], ['now', 9.875567845151097e-05], ['size,', 9.875567845151097e-05], ['attribute', 9.875567845151097e-05], ['t);', 9.875567845151097e-05], ['use_gcc_stdint=wrap', 9.875567845151097e-05], ['147', 9.875567845151097e-05], ['this->lineoff_', 9.875567845151097e-05], ['ast_dump_context->print_indent();', 9.875567845151097e-05], ['%qs', 9.615684480805014e-05], ['(fndecl)', 9.615684480805014e-05], ['handling', 9.615684480805014e-05], ['signed', 9.615684480805014e-05], ['error.', 9.615684480805014e-05], ['context->gogo();', 9.615684480805014e-05], ['(struct', 9.615684480805014e-05], ['s;', 9.615684480805014e-05], ['constructor', 9.615684480805014e-05], ['rtype', 9.615684480805014e-05], ['bb', 9.615684480805014e-05], ['Generate', 9.615684480805014e-05], ['build_pointer_type', 9.615684480805014e-05], ['ident', 9.615684480805014e-05], ['(reason', 9.615684480805014e-05], ['${tm_file}"', 9.615684480805014e-05], ['TODO:', 9.355801116458933e-05], ['require', 9.355801116458933e-05], ['hand', 9.355801116458933e-05], ['Ast_dump_context*', 9.355801116458933e-05], ['character', 9.355801116458933e-05], ['1]', 9.355801116458933e-05], ['ok', 9.355801116458933e-05], ['Expression::make_temporary_reference(temp,', 9.355801116458933e-05], ['one.', 9.355801116458933e-05], ['That', 9.355801116458933e-05], ['directly', 9.355801116458933e-05], ['contain', 9.355801116458933e-05], ['binary', 9.355801116458933e-05], ['precision', 9.355801116458933e-05], ['Expression::make_unary(OPERATOR_AND,', 9.355801116458933e-05], ['context', 9.355801116458933e-05], ['bool>', 9.355801116458933e-05], ['ins', 9.355801116458933e-05], ['i);', 9.355801116458933e-05], ['generate', 9.355801116458933e-05], ['ptr', 9.355801116458933e-05], ['routine', 9.355801116458933e-05], ['Dsymbol', 9.355801116458933e-05], ['TREE_USED', 9.355801116458933e-05], ['-e', 9.355801116458933e-05], ['reg', 9.355801116458933e-05], ['Unnamed_label*', 9.355801116458933e-05], ['this->linebuf_;', 9.355801116458933e-05], ['descriptor.', 9.095917752112852e-05], ['Type::lookup_integer_type("int");', 9.095917752112852e-05], ['No', 9.095917752112852e-05], ['created', 9.095917752112852e-05], ['object.', 9.095917752112852e-05], ['val)', 9.095917752112852e-05], ['ast', 9.095917752112852e-05], ['4', 9.095917752112852e-05], ['*p;', 9.095917752112852e-05], ['them.', 9.095917752112852e-05], ['operands', 9.095917752112852e-05], ['errors', 9.095917752112852e-05], ['st', 9.095917752112852e-05], ['type");', 9.095917752112852e-05], ['Do', 9.095917752112852e-05], ['emit', 9.095917752112852e-05], ['basic_block', 9.095917752112852e-05], ['NULL_TREE', 9.095917752112852e-05], ['correct', 9.095917752112852e-05], ['build_boolop', 9.095917752112852e-05], ['DECL_ARTIFICIAL', 9.095917752112852e-05], ['Module', 9.095917752112852e-05], ['this->ss_', 9.095917752112852e-05], ['BadCond', 9.095917752112852e-05], ['build_nt', 9.095917752112852e-05], ['loc));', 8.83603438776677e-05], ['(UNKNOWN_LOCATION,', 8.83603438776677e-05], ['scope.', 8.83603438776677e-05], ['(type));', 8.83603438776677e-05], ['match', 8.83603438776677e-05], ['referenced', 8.83603438776677e-05], ['inserter->insert(temp);', 8.83603438776677e-05], ['initializer.', 8.83603438776677e-05], ['operator', 8.83603438776677e-05], ['conditional', 8.83603438776677e-05], ['better', 8.83603438776677e-05], ['time', 8.83603438776677e-05], ['index,', 8.83603438776677e-05], ['key', 8.83603438776677e-05], ['label.', 8.83603438776677e-05], ['another', 8.83603438776677e-05], ['tree_code', 8.83603438776677e-05], ['block,', 8.83603438776677e-05], ['(tb->ty', 8.83603438776677e-05], ['member', 8.83603438776677e-05], ['(t)', 8.83603438776677e-05], ['needed', 8.83603438776677e-05], ['*value', 8.83603438776677e-05], ['tm_defines="$tm_defines', 8.83603438776677e-05], ['("\\n");', 8.83603438776677e-05], ['int,', 8.576151023420689e-05], ['loc)', 8.576151023420689e-05], ['func', 8.576151023420689e-05], ['associated', 8.576151023420689e-05], ['refer', 8.576151023420689e-05], ['i,', 8.576151023420689e-05], ['field.', 8.576151023420689e-05], ['methods.', 8.576151023420689e-05], ['refers', 8.576151023420689e-05], ['rather', 8.576151023420689e-05], ['init,', 8.576151023420689e-05], ['program', 8.576151023420689e-05], ['group', 8.576151023420689e-05], ['"))', 8.576151023420689e-05], ['specific', 8.576151023420689e-05], ['otherwise', 8.576151023420689e-05], ['TREE_PUBLIC', 8.576151023420689e-05], ['exp)', 8.576151023420689e-05], ['dynamic', 8.576151023420689e-05], ['byte', 8.576151023420689e-05], ['archive', 8.576151023420689e-05], ['Read', 8.576151023420689e-05], ['statements.', 8.576151023420689e-05], ['D.', 8.576151023420689e-05], ['placeholder', 8.576151023420689e-05], ['ARG4,', 8.576151023420689e-05], ['t1);', 8.576151023420689e-05], ['glibc-stdint.h', 8.576151023420689e-05], ['emit_jump_insn', 8.576151023420689e-05], ['Type::make_pointer_type(Type::make_void_type());', 8.316267659074608e-05], ['JSON', 8.316267659074608e-05], ['location_t', 8.316267659074608e-05], ['Otherwise', 8.316267659074608e-05], ['itself.', 8.316267659074608e-05], ['variables.', 8.316267659074608e-05], ['4;', 8.316267659074608e-05], ['Find', 8.316267659074608e-05], ['-1;', 8.316267659074608e-05], ['bool*', 8.316267659074608e-05], ['final', 8.316267659074608e-05], ['n,', 8.316267659074608e-05], ['rhs', 8.316267659074608e-05], ['struct.', 8.316267659074608e-05], ['look', 8.316267659074608e-05], ['index.', 8.316267659074608e-05], ['depending', 8.316267659074608e-05], ['(0,', 8.316267659074608e-05], ['b,', 8.316267659074608e-05], ['expr);', 8.316267659074608e-05], ['(exp,', 8.316267659074608e-05], ['exp);', 8.316267659074608e-05], ['value);', 8.316267659074608e-05], ['base->byteCount;', 8.316267659074608e-05], ['supported', 8.316267659074608e-05], ['tm_file="elfos.h', 8.316267659074608e-05], ['kernel', 8.316267659074608e-05], ['call_builtin_fn', 8.316267659074608e-05], ['(Z', 8.316267659074608e-05], ['X;', 8.316267659074608e-05], ['frontend.', 8.056384294728526e-05], ['expressions.', 8.056384294728526e-05], ['"tree.h"', 8.056384294728526e-05], ['method.', 8.056384294728526e-05], ['table.', 8.056384294728526e-05], ['mpfr_t', 8.056384294728526e-05], ['inserter)', 8.056384294728526e-05], ["'0'", 8.056384294728526e-05], ['4)', 8.056384294728526e-05], ['r;', 8.056384294728526e-05], ['Expression::make_error(this->location());', 8.056384294728526e-05], ['change', 8.056384294728526e-05], ['common', 8.056384294728526e-05], ['yet', 8.056384294728526e-05], ['access', 8.056384294728526e-05], ['list.', 8.056384294728526e-05], ['equality', 8.056384294728526e-05], ['node', 8.056384294728526e-05], ['(!', 8.056384294728526e-05], ['0),', 8.056384294728526e-05], ['build1', 8.056384294728526e-05], ['ClassDeclaration', 8.056384294728526e-05], ['arrays', 8.056384294728526e-05], ['anonymous', 8.056384294728526e-05], [')', 8.056384294728526e-05], ['term', 8.056384294728526e-05], ['DECL_CHAIN', 8.056384294728526e-05], ['vtable', 8.056384294728526e-05], ['ret)', 8.056384294728526e-05], ['*t)', 8.056384294728526e-05], ['I', 8.056384294728526e-05], ['(uint32_type_node,', 8.056384294728526e-05], ['("CODE_FOR_ashlsi3",', 8.056384294728526e-05], ['tsubst_flags_t', 8.056384294728526e-05], ['in_decl)', 8.056384294728526e-05], ['json::string', 7.796500930382444e-05], ['(MSG_NOTE,', 7.796500930382444e-05], ['-=', 7.796500930382444e-05], ['NULL.', 7.796500930382444e-05], ['going', 7.796500930382444e-05], ['Export', 7.796500930382444e-05], ['Flatten', 7.796500930382444e-05], ['us', 7.796500930382444e-05], ['(op', 7.796500930382444e-05], ['expr;', 7.796500930382444e-05], ['GC', 7.796500930382444e-05], ['register', 7.796500930382444e-05], ['enough', 7.796500930382444e-05], ['field,', 7.796500930382444e-05], [':=', 7.796500930382444e-05], ['lhs', 7.796500930382444e-05], ['debug', 7.796500930382444e-05], ['above', 7.796500930382444e-05], ['Given', 7.796500930382444e-05], ['(expr);', 7.796500930382444e-05], ['encoding', 7.796500930382444e-05], ['digits', 7.796500930382444e-05], ['BrigInstBase', 7.796500930382444e-05], ['select', 7.796500930382444e-05], ['(MODIFY_EXPR,', 7.796500930382444e-05], ['mode', 7.796500930382444e-05], ['this->location_);', 7.796500930382444e-05], ['format', 7.796500930382444e-05], ['(field)', 7.796500930382444e-05], ['path', 7.796500930382444e-05], ['*reason', 7.796500930382444e-05], ['gas=yes', 7.796500930382444e-05], ['(const_int', 7.796500930382444e-05], ['b->add_statement(s);', 7.796500930382444e-05], ['&b)', 7.796500930382444e-05], ['nothing', 7.536617566036362e-05], ['used.', 7.536617566036362e-05], ['fntype,', 7.536617566036362e-05], ['explicit', 7.536617566036362e-05], ['state', 7.536617566036362e-05], ['evaluate', 7.536617566036362e-05], ['btype', 7.536617566036362e-05], ['really', 7.536617566036362e-05], ['stack', 7.536617566036362e-05], ['itself', 7.536617566036362e-05], ['Import', 7.536617566036362e-05], ['floating', 7.536617566036362e-05], ['s);', 7.536617566036362e-05], ['looking', 7.536617566036362e-05], ['specified', 7.536617566036362e-05], ['implement', 7.536617566036362e-05], ['Initialize', 7.536617566036362e-05], ['back', 7.536617566036362e-05], ['those', 7.536617566036362e-05], ['"",', 7.536617566036362e-05], ['(this->classification_)', 7.536617566036362e-05], ['hidden', 7.536617566036362e-05], ['alias', 7.536617566036362e-05], ['nest', 7.536617566036362e-05], ['search', 7.536617566036362e-05], ['...', 7.536617566036362e-05], ['C++', 7.536617566036362e-05], ['library', 7.536617566036362e-05], ['gcc', 7.536617566036362e-05], ['*base)', 7.536617566036362e-05], ['were', 7.536617566036362e-05], ['(*this);', 7.536617566036362e-05], ['named_object', 7.536617566036362e-05], ['real_t', 7.536617566036362e-05], ['prec);', 7.536617566036362e-05], ['build_typeinfo', 7.536617566036362e-05], ['os', 7.536617566036362e-05], ['rtx_insn', 7.536617566036362e-05], ['(jump,', 7.536617566036362e-05], ['break', 7.536617566036362e-05], ['sign,', 7.536617566036362e-05], ['DST', 7.536617566036362e-05], ['One;', 7.536617566036362e-05], ['(Y', 7.536617566036362e-05], ['args)', 7.536617566036362e-05], ['actual', 7.276734201690281e-05], ['implementation', 7.276734201690281e-05], ['Type::lookup_integer_type("uintptr");', 7.276734201690281e-05], ['name;', 7.276734201690281e-05], ['...)', 7.276734201690281e-05], ['*>', 7.276734201690281e-05], ['Record', 7.276734201690281e-05], ['signop', 7.276734201690281e-05], ['virtual', 7.276734201690281e-05], ['class.', 7.276734201690281e-05], ['Type_context', 7.276734201690281e-05], ['setting', 7.276734201690281e-05], ['pointers', 7.276734201690281e-05], ['heap.', 7.276734201690281e-05], ['outside', 7.276734201690281e-05], ['v', 7.276734201690281e-05], ['(bits', 7.276734201690281e-05], ['static_cast<unsigned', 7.276734201690281e-05], ['what', 7.276734201690281e-05], ['ptr,', 7.276734201690281e-05], ['constants', 7.276734201690281e-05], ['b);', 7.276734201690281e-05], ['ensure', 7.276734201690281e-05], ["isn't", 7.276734201690281e-05], ['receive', 7.276734201690281e-05], ['%d', 7.276734201690281e-05], ['imported', 7.276734201690281e-05], ['go', 7.276734201690281e-05], ['lower', 7.276734201690281e-05], ['element_count', 7.276734201690281e-05], ['m', 7.276734201690281e-05], ['DECL_EXTERNAL', 7.276734201690281e-05], ['interchange', 7.276734201690281e-05], ['(code', 7.276734201690281e-05], ['(type))', 7.276734201690281e-05], ['size.', 7.276734201690281e-05], ['vec_safe_push', 7.276734201690281e-05], ['libcall_types[type]', 7.276734201690281e-05], ['GENERIC', 7.276734201690281e-05], ['track', 7.276734201690281e-05], ['T.', 7.276734201690281e-05], ['is:', 7.276734201690281e-05], ['(init', 7.276734201690281e-05], ['add_int_reg_note', 7.276734201690281e-05], ['REG_BR_PROB,', 7.276734201690281e-05], ['(false,', 7.276734201690281e-05], ['T>', 7.276734201690281e-05], ['token->location();', 7.276734201690281e-05], ['.\\n",', 7.276734201690281e-05], ['(X', 7.276734201690281e-05], ['how', 7.0168508373442e-05], ['known', 7.0168508373442e-05], ['(val,', 7.0168508373442e-05], ['identical', 7.0168508373442e-05], ['still', 7.0168508373442e-05], ['simply', 7.0168508373442e-05], ['Type_context*)', 7.0168508373442e-05], ['location),', 7.0168508373442e-05], ['least', 7.0168508373442e-05], ['move', 7.0168508373442e-05], ['checking', 7.0168508373442e-05], ['here,', 7.0168508373442e-05], ['(ret', 7.0168508373442e-05], ['valid', 7.0168508373442e-05], ['c;', 7.0168508373442e-05], ['based', 7.0168508373442e-05], ['expr)', 7.0168508373442e-05], ['comparison.', 7.0168508373442e-05], ['left,', 7.0168508373442e-05], ['possible', 7.0168508373442e-05], ['method,', 7.0168508373442e-05], ['loop,', 7.0168508373442e-05], ['pa', 7.0168508373442e-05], ['off', 7.0168508373442e-05], ['Function*', 7.0168508373442e-05], ['f', 7.0168508373442e-05], ['it,', 7.0168508373442e-05], ['structure', 7.0168508373442e-05], ['warning', 7.0168508373442e-05], ['start,', 7.0168508373442e-05], ['Typed_identifier*', 7.0168508373442e-05], ['Skip', 7.0168508373442e-05], ['<-', 7.0168508373442e-05], ['remove', 7.0168508373442e-05], ['double', 7.0168508373442e-05], ['(fd', 7.0168508373442e-05], ['via', 7.0168508373442e-05], ['Otherwise,', 7.0168508373442e-05], ['TYPE_MODE', 7.0168508373442e-05], ['2016-2019', 7.0168508373442e-05], ['build_resize_convert_view', 7.0168508373442e-05], ['built-in', 7.0168508373442e-05], ['off_t', 7.0168508373442e-05], ['(1,', 7.0168508373442e-05], ['(result,', 7.0168508373442e-05], ['TREE_ADDRESSABLE', 7.0168508373442e-05], ['chainon', 7.0168508373442e-05], ['ARG5,', 7.0168508373442e-05], ['term_list::iterator', 7.0168508373442e-05], ['gnu_ld=yes', 7.0168508373442e-05], ['newlib-stdint.h"', 7.0168508373442e-05], ['(*node)', 7.0168508373442e-05], ['this->error_expression();', 7.0168508373442e-05], ['cur,', 7.0168508373442e-05], ['represented', 6.756967472998119e-05], ['define', 6.756967472998119e-05], ['(i);', 6.756967472998119e-05], ['needed.', 6.756967472998119e-05], ['Type::COMPARE_TAGS,', 6.756967472998119e-05], ['second', 6.756967472998119e-05], ['int)', 6.756967472998119e-05], ['takes', 6.756967472998119e-05], ['sink', 6.756967472998119e-05], ['case.', 6.756967472998119e-05], ['pend)', 6.756967472998119e-05], ['variable,', 6.756967472998119e-05], ['opcode', 6.756967472998119e-05], ['delete[]', 6.756967472998119e-05], ['fields.', 6.756967472998119e-05], ['(;', 6.756967472998119e-05], ['hold', 6.756967472998119e-05], ['Expression**', 6.756967472998119e-05], ['this->args();', 6.756967472998119e-05], ['recover', 6.756967472998119e-05], ['lhs,', 6.756967472998119e-05], ['traverse', 6.756967472998119e-05], ['p->second;', 6.756967472998119e-05], ['values.', 6.756967472998119e-05], ['"fold-const.h"', 6.756967472998119e-05], ['3)', 6.756967472998119e-05], ['stmts', 6.756967472998119e-05], ['(i,', 6.756967472998119e-05], ['sequence', 6.756967472998119e-05], ['build3', 6.756967472998119e-05], ['convert_expr', 6.756967472998119e-05], ['TREE_READONLY', 6.756967472998119e-05], ['TYPE_FIELDS', 6.756967472998119e-05], ['brig', 6.756967472998119e-05], ['Bindings*', 6.756967472998119e-05], ['(char', 6.756967472998119e-05], ['fd', 6.756967472998119e-05], ['(e->e1);', 6.756967472998119e-05], ['cpu', 6.756967472998119e-05], ['i386/unix.h', 6.756967472998119e-05], ['(d);', 6.756967472998119e-05], ['cstore', 6.756967472998119e-05], ['enclosing,', 6.756967472998119e-05], ['sign);', 6.756967472998119e-05], ['Node::Escape_state*', 6.756967472998119e-05], ['(debug_level', 6.756967472998119e-05], ['dsuffix(location())', 6.756967472998119e-05], ['this->expression(PRECEDENCE_NORMAL,', 6.756967472998119e-05], ['(One', 6.756967472998119e-05], ['U2)', 6.756967472998119e-05], ['fndecl', 6.497084108652037e-05], ['dump_printf_loc', 6.497084108652037e-05], ['big', 6.497084108652037e-05], ['zero,', 6.497084108652037e-05], ['converting', 6.497084108652037e-05], ['pointer,', 6.497084108652037e-05], ['context,', 6.497084108652037e-05], ['var,', 6.497084108652037e-05], ['cast', 6.497084108652037e-05], ['unary', 6.497084108652037e-05], ['EXPR', 6.497084108652037e-05], ['parse', 6.497084108652037e-05], ['initialize', 6.497084108652037e-05], ['array,', 6.497084108652037e-05], ['this->type();', 6.497084108652037e-05], ['this->code_', 6.497084108652037e-05], ['run', 6.497084108652037e-05], ['Block(enclosing,', 6.497084108652037e-05], ['too', 6.497084108652037e-05], ['uintptr_type,', 6.497084108652037e-05], ['results,', 6.497084108652037e-05], ['returned', 6.497084108652037e-05], ['appears', 6.497084108652037e-05], ['result.', 6.497084108652037e-05], ['frame', 6.497084108652037e-05], ['normal', 6.497084108652037e-05], ['init;', 6.497084108652037e-05], ['defined.', 6.497084108652037e-05], ['*fd', 6.497084108652037e-05], ['res', 6.497084108652037e-05], ['Only', 6.497084108652037e-05], ['boolean_false_node;', 6.497084108652037e-05], ['line', 6.497084108652037e-05], ['1.', 6.497084108652037e-05], ['(Type', 6.497084108652037e-05], ['decl,', 6.497084108652037e-05], ['keep', 6.497084108652037e-05], ['(cond,', 6.497084108652037e-05], ['exported', 6.497084108652037e-05], ['added', 6.497084108652037e-05], ['op0len,', 6.497084108652037e-05], ['Layout', 6.497084108652037e-05], ['segment', 6.497084108652037e-05], ['(e->op', 6.497084108652037e-05], ['hash_fntype,', 6.497084108652037e-05], ['Half', 6.497084108652037e-05], ['digits,', 6.497084108652037e-05], ['%qT', 6.497084108652037e-05], ['Try', 6.237200744305956e-05], ['obj->set', 6.237200744305956e-05], ['()));', 6.237200744305956e-05], ['wide_int_ref', 6.237200744305956e-05], ['(buf,', 6.237200744305956e-05], ['context.', 6.237200744305956e-05], ['interface.', 6.237200744305956e-05], ['context->backend()->error_expression();', 6.237200744305956e-05], ['Numeric_constant*', 6.237200744305956e-05], ['determine', 6.237200744305956e-05], ['asm_name,', 6.237200744305956e-05], ['")";', 6.237200744305956e-05], ['Expression::make_error(loc);', 6.237200744305956e-05], ['efb->write_c_string("', 6.237200744305956e-05], ['*val,', 6.237200744305956e-05], ['ctype', 6.237200744305956e-05], ['analysis', 6.237200744305956e-05], ['not.', 6.237200744305956e-05], ['except', 6.237200744305956e-05], ['pe', 6.237200744305956e-05], ['(args', 6.237200744305956e-05], ['channel', 6.237200744305956e-05], ['actually', 6.237200744305956e-05], ['object,', 6.237200744305956e-05], ['(this->end_', 6.237200744305956e-05], ['magic', 6.237200744305956e-05], ['V', 6.237200744305956e-05], ['symbol.', 6.237200744305956e-05], ['(input_location,', 6.237200744305956e-05], ['(ClassDeclaration', 6.237200744305956e-05], ['(this);', 6.237200744305956e-05], ['interchange.', 6.237200744305956e-05], ['k', 6.237200744305956e-05], ['stmt', 6.237200744305956e-05], ['initialized', 6.237200744305956e-05], ['(a,', 6.237200744305956e-05], ['inside', 6.237200744305956e-05], ['build_nop', 6.237200744305956e-05], ['d_array_convert', 6.237200744305956e-05], ['pend', 6.237200744305956e-05], ['Pekka', 6.237200744305956e-05], ['Jaaskelainen', 6.237200744305956e-05], ['<pekka.jaaskelainen@parmance.com>', 6.237200744305956e-05], ['Processor', 6.237200744305956e-05], ['Tech.', 6.237200744305956e-05], ['call_builtin', 6.237200744305956e-05], ['(NULL,', 6.237200744305956e-05], ['declarations', 6.237200744305956e-05], ['(size_type_node,', 6.237200744305956e-05], ['op1len,', 6.237200744305956e-05], ['n);', 6.237200744305956e-05], ['build_frontend_type', 6.237200744305956e-05], ['semantic', 6.237200744305956e-05], ['(tmp1,', 6.237200744305956e-05], ['5', 6.237200744305956e-05], ['defer', 6.237200744305956e-05], ['type_tree', 6.237200744305956e-05], ['index_temp', 6.237200744305956e-05], ['(t->ctype)', 6.237200744305956e-05], ['orig,', 6.237200744305956e-05], ['Emit', 5.977317379959874e-05], ['json::array', 5.977317379959874e-05], ['appropriate', 5.977317379959874e-05], ['2);', 5.977317379959874e-05], ['HOST_BITS_PER_WIDE_INT;', 5.977317379959874e-05], ['expression,', 5.977317379959874e-05], ['do_copy()', 5.977317379959874e-05], ['able', 5.977317379959874e-05], ['necessary.', 5.977317379959874e-05], ['something', 5.977317379959874e-05], ["won't", 5.977317379959874e-05], ['undefined', 5.977317379959874e-05], ['(imp->peek_char()', 5.977317379959874e-05], ['information.', 5.977317379959874e-05], ['sign', 5.977317379959874e-05], ['MPC_RNDNN);', 5.977317379959874e-05], ['otherwise.', 5.977317379959874e-05], ['cond,', 5.977317379959874e-05], ['len);', 5.977317379959874e-05], ['own', 5.977317379959874e-05], ['checks', 5.977317379959874e-05], ['(fntype', 5.977317379959874e-05], ['arguments.', 5.977317379959874e-05], ['embedded', 5.977317379959874e-05], ['until', 5.977317379959874e-05], ['returning', 5.977317379959874e-05], ['old', 5.977317379959874e-05], ['pp', 5.977317379959874e-05], ['order.', 5.977317379959874e-05], ['index);', 5.977317379959874e-05], ['0)))', 5.977317379959874e-05], ['Put', 5.977317379959874e-05], ['size;', 5.977317379959874e-05], ['++pf)', 5.977317379959874e-05], ['Helper', 5.977317379959874e-05], ['followed', 5.977317379959874e-05], ['following', 5.977317379959874e-05], ['TRUE', 5.977317379959874e-05], ['fold_build2', 5.977317379959874e-05], ['d_truthvalue_conversion', 5.977317379959874e-05], ['*tb', 5.977317379959874e-05], ['(ap,', 5.977317379959874e-05], ['(name),', 5.977317379959874e-05], ['"brig-code-entry-handler.h"', 5.977317379959874e-05], ['assume', 5.977317379959874e-05], ['fall', 5.977317379959874e-05], ['read', 5.977317379959874e-05], ['"%s:', 5.977317379959874e-05], ['names.', 5.977317379959874e-05], ['(dump_enabled_p', 5.977317379959874e-05], ['Now', 5.977317379959874e-05], ['s)', 5.977317379959874e-05], ['module.', 5.977317379959874e-05], ['(HOST_WIDE_INT', 5.977317379959874e-05], ['SIGNED);', 5.977317379959874e-05], ['prec,', 5.977317379959874e-05], ['constraints.', 5.977317379959874e-05], ['bt;', 5.977317379959874e-05], ['yes', 5.977317379959874e-05], ['xyes;', 5.977317379959874e-05], ['XEXP', 5.977317379959874e-05], ['TREE_VEC_ELT', 5.977317379959874e-05], ['Milestone', 5.977317379959874e-05], ['image', 5.977317379959874e-05], ['8)', 5.717434015613793e-05], ['compare', 5.717434015613793e-05], ['tmp', 5.717434015613793e-05], ['(sgn', 5.717434015613793e-05], ['constants.', 5.717434015613793e-05], ['appear', 5.717434015613793e-05], ['mpc_t', 5.717434015613793e-05], ['invalid', 5.717434015613793e-05], ['statement,', 5.717434015613793e-05], ['info', 5.717434015613793e-05], ['data.', 5.717434015613793e-05], ['space', 5.717434015613793e-05], ['written', 5.717434015613793e-05], ['OPERATOR_MINUS:', 5.717434015613793e-05], ['OPERATOR_XOR:', 5.717434015613793e-05], ['context->function()->func_value()->get_decl();', 5.717434015613793e-05], ['this->op_', 5.717434015613793e-05], ['^', 5.717434015613793e-05], ['arg_type', 5.717434015613793e-05], ['every', 5.717434015613793e-05], ['thunk.', 5.717434015613793e-05], ['arguments"));', 5.717434015613793e-05], ['Map_type*', 5.717434015613793e-05], ['zero.', 5.717434015613793e-05], ['put', 5.717434015613793e-05], ['parameter.', 5.717434015613793e-05], ['params', 5.717434015613793e-05], ['bfunction', 5.717434015613793e-05], ['assigned', 5.717434015613793e-05], ['evaluated', 5.717434015613793e-05], ['index;', 5.717434015613793e-05], ['previous', 5.717434015613793e-05], ['initial', 5.717434015613793e-05], ['stored', 5.717434015613793e-05], ['*this;', 5.717434015613793e-05], ['"stringpool.h"', 5.717434015613793e-05], ['back-end', 5.717434015613793e-05], ['user', 5.717434015613793e-05], ['loops.', 5.717434015613793e-05], ['edge', 5.717434015613793e-05], ['Mark', 5.717434015613793e-05], ['()))', 5.717434015613793e-05], ['vec<tree,', 5.717434015613793e-05], ['flags,', 5.717434015613793e-05], ['operands[1],', 5.717434015613793e-05], ['m_parent.m_cf->append_statement', 5.717434015613793e-05], ['off_t*', 5.717434015613793e-05], ['field;', 5.717434015613793e-05], ['memcpy', 5.717434015613793e-05], ['identity', 5.717434015613793e-05], ['create_field_decl', 5.717434015613793e-05], ['(elms,', 5.717434015613793e-05], ['null_pointer_node;', 5.717434015613793e-05], ['BLOCKS_NEEDED', 5.717434015613793e-05], ['"");', 5.717434015613793e-05], ['(strcmp', 5.717434015613793e-05], ['def_fn_type', 5.717434015613793e-05], ['(ENUM,', 5.717434015613793e-05], ['i386/att.h', 5.717434015613793e-05], ['ATTR_SPEC', 5.717434015613793e-05], ['log_insn', 5.717434015613793e-05], ['insns', 5.717434015613793e-05], ['Statement', 5.717434015613793e-05], ['(c2', 5.717434015613793e-05], ['dst,', 5.717434015613793e-05], ['this->make_expression(ret);', 5.717434015613793e-05], ['U2', 5.717434015613793e-05], ['U1;', 5.717434015613793e-05], ['Substitute', 5.717434015613793e-05], ['substitution', 5.717434015613793e-05], ['Authors.', 5.457550651267711e-05], ['rights', 5.457550651267711e-05], ['reserved.', 5.457550651267711e-05], ['governed', 5.457550651267711e-05], ['BSD-style', 5.457550651267711e-05], ['license', 5.457550651267711e-05], ['LICENSE', 5.457550651267711e-05], ['"go-system.h"', 5.457550651267711e-05], ['currently', 5.457550651267711e-05], ['ap;', 5.457550651267711e-05], ['representing', 5.457550651267711e-05], ['chain', 5.457550651267711e-05], ['nil,', 5.457550651267711e-05], ['max', 5.457550651267711e-05], ['do_determine_type(const', 5.457550651267711e-05], ['(function', 5.457550651267711e-05], ['uintptr_type', 5.457550651267711e-05], ['unknown', 5.457550651267711e-05], ['int_type', 5.457550651267711e-05], ['imp->read_type();', 5.457550651267711e-05], ['OP', 5.457550651267711e-05], ['our', 5.457550651267711e-05], ['parent', 5.457550651267711e-05], ['LHS', 5.457550651267711e-05], ['barrier', 5.457550651267711e-05], ['functions,', 5.457550651267711e-05], ['true.', 5.457550651267711e-05], ['++p,', 5.457550651267711e-05], ['guard', 5.457550651267711e-05], ['ptrsize,', 5.457550651267711e-05], ['bits.', 5.457550651267711e-05], ['Tstruct)', 5.457550651267711e-05], ['strides', 5.457550651267711e-05], ['tree);', 5.457550651267711e-05], ['allow', 5.457550651267711e-05], ['First', 5.457550651267711e-05], ['skip', 5.457550651267711e-05], ['care', 5.457550651267711e-05], ['TYPE_PRECISION', 5.457550651267711e-05], ['(type),', 5.457550651267711e-05], ['anything', 5.457550651267711e-05], ['libcall', 5.457550651267711e-05], ['d_array_value', 5.457550651267711e-05], ['operands[2]);', 5.457550651267711e-05], ['S', 5.457550651267711e-05], ['To', 5.457550651267711e-05], ['std::vector<const', 5.457550651267711e-05], ['build_call_expr', 5.457550651267711e-05], ['modify_expr', 5.457550651267711e-05], ['immediately', 5.457550651267711e-05], ['#else', 5.457550651267711e-05], ['i)', 5.457550651267711e-05], ['val[i]', 5.457550651267711e-05], ['min', 5.457550651267711e-05], ['this,', 5.457550651267711e-05], ['ARG6,', 5.457550651267711e-05], ['this->read_identifier();', 5.457550651267711e-05], ['tracker', 5.457550651267711e-05], ['predicate', 5.457550651267711e-05], ['(fields', 5.457550651267711e-05], ['function);', 5.457550651267711e-05], ['plus_constant', 5.457550651267711e-05], ['(Pmode,', 5.457550651267711e-05], ['(thunk)', 5.457550651267711e-05], ['log_rtx', 5.457550651267711e-05], ['(m_ccreg,', 5.457550651267711e-05], ['this->linebuf_', 5.457550651267711e-05], ['this->add_semi_at_eol_', 5.457550651267711e-05], ['built_in', 5.457550651267711e-05], ['btype->get_tree();', 5.457550651267711e-05], ['may_be_composite_lit,', 5.457550651267711e-05], ['Radix;', 5.457550651267711e-05], ['(pp,', 5.457550651267711e-05], ['chan', 5.1976672869216296e-05], ['e,', 5.1976672869216296e-05], ['creating', 5.1976672869216296e-05], ['"cannot', 5.1976672869216296e-05], ['subexpressions', 5.1976672869216296e-05], ['a,', 5.1976672869216296e-05], ['gets', 5.1976672869216296e-05], ['RHS', 5.1976672869216296e-05], ['VAL.', 5.1976672869216296e-05], ['Here', 5.1976672869216296e-05], ['efb)', 5.1976672869216296e-05], ['ret,', 5.1976672869216296e-05], ['10,', 5.1976672869216296e-05], ['(this->op_', 5.1976672869216296e-05], ['pass.', 5.1976672869216296e-05], ['OPERATOR_PLUS:', 5.1976672869216296e-05], ['OPERATOR_AND:', 5.1976672869216296e-05], ['OPERATOR_MULT:', 5.1976672869216296e-05], ["we're", 5.1976672869216296e-05], ['through.', 5.1976672869216296e-05], ['left_val,', 5.1976672869216296e-05], ['comparisons', 5.1976672869216296e-05], ['optimize', 5.1976672869216296e-05], ['64:', 5.1976672869216296e-05], ['expected', 5.1976672869216296e-05], ['around', 5.1976672869216296e-05], ['sum', 5.1976672869216296e-05], ['argument.', 5.1976672869216296e-05], ['arg,', 5.1976672869216296e-05], ['arguments,', 5.1976672869216296e-05], ['gimple', 5.1976672869216296e-05], ['depth', 5.1976672869216296e-05], ['go_assert(p', 5.1976672869216296e-05], ['label,', 5.1976672869216296e-05], ['id', 5.1976672869216296e-05], ['(bb);', 5.1976672869216296e-05], ['N', 5.1976672869216296e-05], ['"\\n");', 5.1976672869216296e-05], ['(expr)', 5.1976672869216296e-05], ['exp;', 5.1976672869216296e-05], ['(exp);', 5.1976672869216296e-05], ['front-end', 5.1976672869216296e-05], ['(exp)', 5.1976672869216296e-05], ['component_ref', 5.1976672869216296e-05], ['convert_to_integer', 5.1976672869216296e-05], ['build_int_cstu', 5.1976672869216296e-05], ['Keep', 5.1976672869216296e-05], ['(methods', 5.1976672869216296e-05], ['(decl))', 5.1976672869216296e-05], ['StructDeclaration', 5.1976672869216296e-05], ['corresponding', 5.1976672869216296e-05], ['ARGS', 5.1976672869216296e-05], ['(ptr_type_node,', 5.1976672869216296e-05], ['xlen,', 5.1976672869216296e-05], ['o0', 5.1976672869216296e-05], ['*overflow', 5.1976672869216296e-05], ['#ifdef', 5.1976672869216296e-05], ['GTY(())', 5.1976672869216296e-05], ['DECL_LANG_SPECIFIC', 5.1976672869216296e-05], ['VersionCondition::addPredefinedGlobalIdent', 5.1976672869216296e-05], ['continue', 5.1976672869216296e-05], ['files', 5.1976672869216296e-05], ['(tb1->ty', 5.1976672869216296e-05], ['flags)', 5.1976672869216296e-05], ['exp->write_c_string("', 5.1976672869216296e-05], ['this->seen_alias_', 5.1976672869216296e-05], ['arch', 5.1976672869216296e-05], ['eval', 5.1976672869216296e-05], ['gen_reg_rtx', 5.1976672869216296e-05], ['*no_add_attrs', 5.1976672869216296e-05], ['REGNO', 5.1976672869216296e-05], ['uint64_type_node,', 5.1976672869216296e-05], ['%s\\n",', 5.1976672869216296e-05], ['this->clauses_.begin();', 5.1976672869216296e-05], ['this->clauses_.end();', 5.1976672869216296e-05], ['FLOAT>', 5.1976672869216296e-05], ['no;', 4.9377839225755484e-05], ['top-level', 4.9377839225755484e-05], ['(location_t', 4.9377839225755484e-05], ['HOST_BITS_PER_WIDE_INT', 4.9377839225755484e-05], ['1))', 4.9377839225755484e-05], ['buf', 4.9377839225755484e-05], ['b)', 4.9377839225755484e-05], ['traverse);', 4.9377839225755484e-05], ['enclosing', 4.9377839225755484e-05], ['bvar', 4.9377839225755484e-05], ['represent', 4.9377839225755484e-05], ['down', 4.9377839225755484e-05], ['remaining', 4.9377839225755484e-05], ['Translate_context', 4.9377839225755484e-05], ['exp,', 4.9377839225755484e-05], ['predeclared', 4.9377839225755484e-05], ['TRAVERSE_EXIT', 4.9377839225755484e-05], ['example,', 4.9377839225755484e-05], ['this->expr_->type();', 4.9377839225755484e-05], ['resulting', 4.9377839225755484e-05], ['cases.', 4.9377839225755484e-05], ['ptype', 4.9377839225755484e-05], ['op,', 4.9377839225755484e-05], ['-1,', 4.9377839225755484e-05], ['implicit', 4.9377839225755484e-05], ['shift)', 4.9377839225755484e-05], ['(imp->match_c_string("', 4.9377839225755484e-05], ['methods,', 4.9377839225755484e-05], ['packages.', 4.9377839225755484e-05], ['gogo->add_statement(s);', 4.9377839225755484e-05], ['So', 4.9377839225755484e-05], ['case,', 4.9377839225755484e-05], ['target.', 4.9377839225755484e-05], ['gc', 4.9377839225755484e-05], ['now.', 4.9377839225755484e-05], ['produce', 4.9377839225755484e-05], ['map.', 4.9377839225755484e-05], ['internal', 4.9377839225755484e-05], ['std::vector<Backend::Btyped_identifier>', 4.9377839225755484e-05], ['"import', 4.9377839225755484e-05], ['TYPE,', 4.9377839225755484e-05], ['most', 4.9377839225755484e-05], ['symbols', 4.9377839225755484e-05], ['(0)', 4.9377839225755484e-05], ['(dump_file', 4.9377839225755484e-05], ['(j', 4.9377839225755484e-05], ['"diagnostic.h"', 4.9377839225755484e-05], ['OP0', 4.9377839225755484e-05], ['scalar', 4.9377839225755484e-05], ['(error_operand_p', 4.9377839225755484e-05], ['Tsarray)', 4.9377839225755484e-05], ['->', 4.9377839225755484e-05], ['comment', 4.9377839225755484e-05], ['characters', 4.9377839225755484e-05], ["'.'", 4.9377839225755484e-05], ['attributes', 4.9377839225755484e-05], ['BrigType16_t', 4.9377839225755484e-05], ['arith_type,', 4.9377839225755484e-05], ['BITS_PER_UNIT;', 4.9377839225755484e-05], ['(brig_opcode', 4.9377839225755484e-05], ['BRIG', 4.9377839225755484e-05], ['instructions', 4.9377839225755484e-05], ['((const', 4.9377839225755484e-05], ['member.', 4.9377839225755484e-05], ['size);', 4.9377839225755484e-05], ['iterator', 4.9377839225755484e-05], ['Loc&', 4.9377839225755484e-05], ['equal', 4.9377839225755484e-05], ['likely', 4.9377839225755484e-05], ['(name);', 4.9377839225755484e-05], ['against', 4.9377839225755484e-05], ['objects', 4.9377839225755484e-05], ['Start', 4.9377839225755484e-05], ['*t', 4.9377839225755484e-05], ['TREE_CHAIN', 4.9377839225755484e-05], ['make_node', 4.9377839225755484e-05], ['t2);', 4.9377839225755484e-05], ['(i),', 4.9377839225755484e-05], ['ident,', 4.9377839225755484e-05], ['canonize', 4.9377839225755484e-05], ['make_frontend_typeinfo', 4.9377839225755484e-05], ['(mod,', 4.9377839225755484e-05], ['d_pushdecl', 4.9377839225755484e-05], ['rest_of_decl_compilation', 4.9377839225755484e-05], ['(ident,', 4.9377839225755484e-05], ['TREE_VALUE', 4.9377839225755484e-05], ['Declare', 4.9377839225755484e-05], ['/*---------------------------------------------------------------------------', 4.9377839225755484e-05], ['---------------------------------------------------------------------------*/', 4.9377839225755484e-05], ['iter', 4.9377839225755484e-05], ['pack', 4.9377839225755484e-05], ['proof_result', 4.9377839225755484e-05], ['{"<limits.h>",', 4.9377839225755484e-05], ['"<climits>"}', 4.9377839225755484e-05], ['Finish', 4.9377839225755484e-05], ['default_use_cxa_atexit=yes', 4.9377839225755484e-05], ['t-slibgcc"', 4.9377839225755484e-05], ['GEN_INT', 4.9377839225755484e-05], ['send', 4.9377839225755484e-05], ['(function);', 4.9377839225755484e-05], ['*node,', 4.9377839225755484e-05], ['longdouble', 4.9377839225755484e-05], ['*m', 4.9377839225755484e-05], ['(s);', 4.9377839225755484e-05], ['sign))', 4.9377839225755484e-05], ['intrinsic', 4.9377839225755484e-05], ['src);', 4.9377839225755484e-05], ['(var_decl)', 4.9377839225755484e-05], ['std::string&,', 4.9377839225755484e-05], ['requirement', 4.9377839225755484e-05], ['value_temp', 4.9377839225755484e-05], ['real_c_float', 4.9377839225755484e-05], ['(Radix', 4.9377839225755484e-05], ['various', 4.6779005582294664e-05], ['bool,', 4.6779005582294664e-05], ['prefix', 4.6779005582294664e-05], ['"tree-pretty-print.h"', 4.6779005582294664e-05], ['buf);', 4.6779005582294664e-05], ['Expression::make_integer_ul(0,', 4.6779005582294664e-05], ['Since', 4.6779005582294664e-05], ['points', 4.6779005582294664e-05], ['maximum', 4.6779005582294664e-05], ['ast_dump_context->dump_type(this->type_);', 4.6779005582294664e-05], ['lowering', 4.6779005582294664e-05], ['closure.', 4.6779005582294664e-05], ['parameters.', 4.6779005582294664e-05], ['Func_expression*', 4.6779005582294664e-05], ['10;', 4.6779005582294664e-05], ['imp->require_c_string("', 4.6779005582294664e-05], ['ignore', 4.6779005582294664e-05], ['(this->seen_)', 4.6779005582294664e-05], ['pexpr)', 4.6779005582294664e-05], ['Unicode', 4.6779005582294664e-05], ['indirect', 4.6779005582294664e-05], ['this.', 4.6779005582294664e-05], ['struct,', 4.6779005582294664e-05], ['right,', 4.6779005582294664e-05], ['bound', 4.6779005582294664e-05], ['Method*', 4.6779005582294664e-05], ['worry', 4.6779005582294664e-05], ['"%s', 4.6779005582294664e-05], ['args->size()', 4.6779005582294664e-05], ['Expression_list::const_iterator', 4.6779005582294664e-05], ['direct', 4.6779005582294664e-05], ['applied', 4.6779005582294664e-05], ['pointers.', 4.6779005582294664e-05], ['end,', 4.6779005582294664e-05], ['offset,', 4.6779005582294664e-05], ['starting', 4.6779005582294664e-05], ['garbage', 4.6779005582294664e-05], ['++pv)', 4.6779005582294664e-05], ['fixed', 4.6779005582294664e-05], ['void*', 4.6779005582294664e-05], ['ctor', 4.6779005582294664e-05], ['Label*', 4.6779005582294664e-05], ['"d-tree.h"', 4.6779005582294664e-05], ['DECL_NAME', 4.6779005582294664e-05], ['()),', 4.6779005582294664e-05], ['below', 4.6779005582294664e-05], ['(loop);', 4.6779005582294664e-05], ['(expr))', 4.6779005582294664e-05], ['(TREE_SIDE_EFFECTS', 4.6779005582294664e-05], ['fold_convert', 4.6779005582294664e-05], ['delegate', 4.6779005582294664e-05], ['indirect_ref', 4.6779005582294664e-05], ['va_end', 4.6779005582294664e-05], ['cst', 4.6779005582294664e-05], ['stream.', 4.6779005582294664e-05], ['Expand', 4.6779005582294664e-05], ['format,', 4.6779005582294664e-05], ['(Loc', 4.6779005582294664e-05], ["we've", 4.6779005582294664e-05], ['component', 4.6779005582294664e-05], ['offset)', 4.6779005582294664e-05], ['statements,', 4.6779005582294664e-05], ['List', 4.6779005582294664e-05], ['pkgpath', 4.6779005582294664e-05], ['section', 4.6779005582294664e-05], ['compiling', 4.6779005582294664e-05], ['*decl)', 4.6779005582294664e-05], ["'this'", 4.6779005582294664e-05], ['assignments', 4.6779005582294664e-05], ['VarDeclaration', 4.6779005582294664e-05], ['layout', 4.6779005582294664e-05], ['arg0,', 4.6779005582294664e-05], ['Should', 4.6779005582294664e-05], ['arg;', 4.6779005582294664e-05], ['strlen', 4.6779005582294664e-05], ['unsignedp', 4.6779005582294664e-05], ['HOST_HALF_WIDE_INT', 4.6779005582294664e-05], ['wi::shwi', 4.6779005582294664e-05], ['(decl));', 4.6779005582294664e-05], ['stub', 4.6779005582294664e-05], ['(e->e2);', 4.6779005582294664e-05], ['tuple', 4.6779005582294664e-05], ['gogo->backend()->error_type();', 4.6779005582294664e-05], ['binding', 4.6779005582294664e-05], ['c_target_objs="${c_target_objs}', 4.6779005582294664e-05], ['cxx_target_objs="${cxx_target_objs}', 4.6779005582294664e-05], ['$target', 4.6779005582294664e-05], ['(rtx', 4.6779005582294664e-05], ['(gen_branch_false', 4.6779005582294664e-05], ['(flags),', 4.6779005582294664e-05], ['167)', 4.6779005582294664e-05], ['this->build_stmt', 4.6779005582294664e-05], ['conjunction', 4.6779005582294664e-05], ['Bblock*', 4.6779005582294664e-05], ['(T', 4.6779005582294664e-05], ['(long', 4.6779005582294664e-05], ['REAL_VALUE_TYPE', 4.6779005582294664e-05], ['MUL_TYPE', 4.6779005582294664e-05], ['(type_tree', 4.6779005582294664e-05], ['range_temp,', 4.6779005582294664e-05], ['is_coloneq,', 4.6779005582294664e-05], ['MODE);', 4.6779005582294664e-05], ['U1)', 4.6779005582294664e-05], ['tsubst_expr', 4.6779005582294664e-05], ['helper', 4.418017193883385e-05], ['optimization', 4.418017193883385e-05], ['#if', 4.418017193883385e-05], ['sprintf', 4.418017193883385e-05], ['accept', 4.418017193883385e-05], ['conversion.', 4.418017193883385e-05], ['Not', 4.418017193883385e-05], ['do_dump_expression(Ast_dump_context*)', 4.418017193883385e-05], ['However,', 4.418017193883385e-05], ['level.', 4.418017193883385e-05], ['Temporary_reference_expression*', 4.418017193883385e-05], ['fndecl;', 4.418017193883385e-05], ['memory.', 4.418017193883385e-05], ['fn)', 4.418017193883385e-05], ['boolean', 4.418017193883385e-05], ['dig', 4.418017193883385e-05], ['v;', 4.418017193883385e-05], ['mark', 4.418017193883385e-05], ['this->val_);', 4.418017193883385e-05], ['uint64_t', 4.418017193883385e-05], ['expression(Expression**);', 4.418017193883385e-05], ['lowered', 4.418017193883385e-05], ['changed', 4.418017193883385e-05], ['possible.', 4.418017193883385e-05], ['-1);', 4.418017193883385e-05], ['insert', 4.418017193883385e-05], ['instance', 4.418017193883385e-05], ['int_type,', 4.418017193883385e-05], ['length.', 4.418017193883385e-05], ['to.', 4.418017193883385e-05], ['stack.', 4.418017193883385e-05], ['explicitly', 4.418017193883385e-05], ['unless', 4.418017193883385e-05], ['generic', 4.418017193883385e-05], ['less', 4.418017193883385e-05], ['length,', 4.418017193883385e-05], ['var);', 4.418017193883385e-05], ['existing', 4.418017193883385e-05], ['std::vector<unsigned', 4.418017193883385e-05], ['ptrmask', 4.418017193883385e-05], ['standard', 4.418017193883385e-05], ['DECL', 4.418017193883385e-05], ['d_keep', 4.418017193883385e-05], ['(get_symbol_decl', 4.418017193883385e-05], ['compute', 4.418017193883385e-05], ['minimum', 4.418017193883385e-05], ['IV', 4.418017193883385e-05], ['nodes', 4.418017193883385e-05], ['(0),', 4.418017193883385e-05], ['(stmt))', 4.418017193883385e-05], ['BB', 4.418017193883385e-05], ['Also', 4.418017193883385e-05], ['src', 4.418017193883385e-05], ['update', 4.418017193883385e-05], ['TYPE_UNSIGNED', 4.418017193883385e-05], ['1),', 4.418017193883385e-05], ['(exp))', 4.418017193883385e-05], ['(tbtype->ty', 4.418017193883385e-05], ['(libcall,', 4.418017193883385e-05], ['()->ty', 4.418017193883385e-05], ['EXP', 4.418017193883385e-05], ['(len', 4.418017193883385e-05], ['equivalent', 4.418017193883385e-05], ['Builds', 4.418017193883385e-05], ['(ap);', 4.418017193883385e-05], ['"brig-util.h"', 4.418017193883385e-05], ['"print-tree.h"', 4.418017193883385e-05], ['build_vector_type', 4.418017193883385e-05], ['(x)', 4.418017193883385e-05], ['first.', 4.418017193883385e-05], ['declarations.', 4.418017193883385e-05], ['newline', 4.418017193883385e-05], ['(fd);', 4.418017193883385e-05], ['DECL.', 4.418017193883385e-05], ['tree.', 4.418017193883385e-05], ['callee', 4.418017193883385e-05], ['(t1),', 4.418017193883385e-05], ['*sd', 4.418017193883385e-05], ['include', 4.418017193883385e-05], ['3;', 4.418017193883385e-05], ['Nothing', 4.418017193883385e-05], ['**__vptr;', 4.418017193883385e-05], ['*__monitor;', 4.418017193883385e-05], ['this->layout_base', 4.418017193883385e-05], ['*ti', 4.418017193883385e-05], ['t->vtinfo', 4.418017193883385e-05], ['members->push', 4.418017193883385e-05], ['clause', 4.418017193883385e-05], ['proof', 4.418017193883385e-05], ['p1', 4.418017193883385e-05], ['this->fields_;', 4.418017193883385e-05], ['zero-sized', 4.418017193883385e-05], ['exception', 4.418017193883385e-05], ['gen_rtx_REG', 4.418017193883385e-05], ['rtx_code_label', 4.418017193883385e-05], ['gen_label_rtx', 4.418017193883385e-05], ['prob_likely);', 4.418017193883385e-05], ['emit_label', 4.418017193883385e-05], ['(tmp2,', 4.418017193883385e-05], ['cbranch', 4.418017193883385e-05], ['NULL_RTX)', 4.418017193883385e-05], ['pindex,', 4.418017193883385e-05], ['r)', 4.418017193883385e-05], ['&stmt_list);', 4.418017193883385e-05], ['";"', 4.418017193883385e-05], ['signature', 4.418017193883385e-05], ['BrigDirectiveVariable', 4.418017193883385e-05], ['(intrinsic', 4.418017193883385e-05], ['math_function_type,', 4.418017193883385e-05], ['math_function_type_long,', 4.418017193883385e-05], ['this->error_statement();', 4.418017193883385e-05], ['Expression::make_temporary_reference(index_temp,', 4.418017193883385e-05], ['V9', 4.418017193883385e-05], ['native_float', 4.418017193883385e-05], ['(Half', 4.418017193883385e-05], ['"gogo.h"', 4.158133829537304e-05], ['implemented', 4.158133829537304e-05], ['code;', 4.158133829537304e-05], ['files.', 4.158133829537304e-05], ['Call', 4.158133829537304e-05], ['%qs:', 4.158133829537304e-05], ['this->classification_', 4.158133829537304e-05], ['Type_context*', 4.158133829537304e-05], ['assignment.', 4.158133829537304e-05], ['valid.', 4.158133829537304e-05], ['errors.', 4.158133829537304e-05], ['type_;', 4.158133829537304e-05], ['cost', 4.158133829537304e-05], ['recursive', 4.158133829537304e-05], ['bexpr,', 4.158133829537304e-05], ['fe', 4.158133829537304e-05], ['Type::lookup_integer_type("uint8");', 4.158133829537304e-05], ['trailing', 4.158133829537304e-05], ['mpz_clear(val);', 4.158133829537304e-05], ['buf[30];', 4.158133829537304e-05], ['reason;', 4.158133829537304e-05], ['&reason))', 4.158133829537304e-05], ['reason.c_str());', 4.158133829537304e-05], ['building', 4.158133829537304e-05], ['structs', 4.158133829537304e-05], ['int*', 4.158133829537304e-05], ['useful', 4.158133829537304e-05], ['subcontext.type', 4.158133829537304e-05], ['division', 4.158133829537304e-05], ['larger', 4.158133829537304e-05], ['false.', 4.158133829537304e-05], ['imp->advance(3);', 4.158133829537304e-05], ['result_type,', 4.158133829537304e-05], ['fn,', 4.158133829537304e-05], ['Force', 4.158133829537304e-05], ['(this->code_', 4.158133829537304e-05], ['this->report_error(_("too', 4.158133829537304e-05], ['len_temp', 4.158133829537304e-05], ['then_block,', 4.158133829537304e-05], ["It's", 4.158133829537304e-05], ['p->type(),', 4.158133829537304e-05], ['body,', 4.158133829537304e-05], ['pt', 4.158133829537304e-05], ['per', 4.158133829537304e-05], ['(this->vals()', 4.158133829537304e-05], ['element_count);', 4.158133829537304e-05], ['Channel_type*', 4.158133829537304e-05], ['creates', 4.158133829537304e-05], ['Struct_field_list::const_iterator', 4.158133829537304e-05], ['j++)', 4.158133829537304e-05], ['nest.', 4.158133829537304e-05], ['operators', 4.158133829537304e-05], ['"stor-layout.h"', 4.158133829537304e-05], ['Maybe', 4.158133829537304e-05], ['(totype),', 4.158133829537304e-05], ['libcall_fn', 4.158133829537304e-05], ['(result);', 4.158133829537304e-05], ['c)', 4.158133829537304e-05], ['mangled', 4.158133829537304e-05], ['At', 4.158133829537304e-05], ['va_start', 4.158133829537304e-05], ['"errors.h"', 4.158133829537304e-05], ['(PLUS_EXPR,', 4.158133829537304e-05], ['operands[0],', 4.158133829537304e-05], ['t));', 4.158133829537304e-05], ['HSA', 4.158133829537304e-05], ['elements.', 4.158133829537304e-05], ['got', 4.158133829537304e-05], ['(x', 4.158133829537304e-05], ['ss', 4.158133829537304e-05], ['dummy', 4.158133829537304e-05], ['*format,', 4.158133829537304e-05], ['loop_info', 4.158133829537304e-05], ['linked', 4.158133829537304e-05], ['(result)', 4.158133829537304e-05], ['(op1,', 4.158133829537304e-05], ['(Bindings::const_declarations_iterator', 4.158133829537304e-05], ['interfaces', 4.158133829537304e-05], ['pm', 4.158133829537304e-05], ['stabilize_expr', 4.158133829537304e-05], ['(init,', 4.158133829537304e-05], ['stmt_list', 4.158133829537304e-05], ['(NULL_TREE,', 4.158133829537304e-05], ['precision,', 4.158133829537304e-05], ['(l0', 4.158133829537304e-05], ['(n', 4.158133829537304e-05], ['(wi::shwi', 4.158133829537304e-05], ['prec),', 4.158133829537304e-05], ['prec)));', 4.158133829537304e-05], ['emitted', 4.158133829537304e-05], ['(NULL);', 4.158133829537304e-05], ['TREE_STATIC', 4.158133829537304e-05], ['true));', 4.158133829537304e-05], ['(get_identifier', 4.158133829537304e-05], ['build_tree_list', 4.158133829537304e-05], ['TYPE_LANG_SPECIFIC', 4.158133829537304e-05], ['stream', 4.158133829537304e-05], ['this->require_c_string("', 4.158133829537304e-05], ['rules', 4.158133829537304e-05], ['(e->e2),', 4.158133829537304e-05], ['{"<string.h>",', 4.158133829537304e-05], ['"<cstring>"}', 4.158133829537304e-05], ['"")', 4.158133829537304e-05], ['neither', 4.158133829537304e-05], ['attribute.', 4.158133829537304e-05], ['IR.', 4.158133829537304e-05], ['NULL),', 4.158133829537304e-05], ['NULL_RTX', 4.158133829537304e-05], ["'=')", 4.158133829537304e-05], ['is_exported', 4.158133829537304e-05], ['W', 4.158133829537304e-05], ['range.', 4.158133829537304e-05], ['3},', 4.158133829537304e-05], ['label;', 4.158133829537304e-05], ['gogo_;', 4.158133829537304e-05], ['(this->init_', 4.158133829537304e-05], ['(wide_int', 4.158133829537304e-05], ['Btype*,', 4.158133829537304e-05], ['(this->statements_', 4.158133829537304e-05], ['Block**', 4.158133829537304e-05], ['token->identifier();', 4.158133829537304e-05], ['Four', 4.158133829537304e-05], ['F9', 4.158133829537304e-05], ['Type::make_type_descriptor_ptr_type();', 3.898250465191222e-05], ['e;', 3.898250465191222e-05], ['pb', 3.898250465191222e-05], ['"backend.h"', 3.898250465191222e-05], ['push', 3.898250465191222e-05], ['Compare', 3.898250465191222e-05], ['integer_zero_node);', 3.898250465191222e-05], ['ASSERT_TRUE', 3.898250465191222e-05], ['width', 3.898250465191222e-05], ['report', 3.898250465191222e-05], ['conversions', 3.898250465191222e-05], ['slice.', 3.898250465191222e-05], ['is_pointer', 3.898250465191222e-05], ['marked', 3.898250465191222e-05], ['having', 3.898250465191222e-05], ['negative', 3.898250465191222e-05], ['one,', 3.898250465191222e-05], ['do_get_backend(Translate_context*', 3.898250465191222e-05], ['gogo->lower_expression(function,', 3.898250465191222e-05], ['heap,', 3.898250465191222e-05], ['address.', 3.898250465191222e-05], ['fn);', 3.898250465191222e-05], ['though', 3.898250465191222e-05], ['implements', 3.898250465191222e-05], ['"unexpected', 3.898250465191222e-05], ['std::vector<Bexpression*>', 3.898250465191222e-05], ['-1)', 3.898250465191222e-05], ['numeric', 3.898250465191222e-05], ['(r', 3.898250465191222e-05], ['On', 3.898250465191222e-05], ['(op)', 3.898250465191222e-05], ['copied', 3.898250465191222e-05], ['pick', 3.898250465191222e-05], ['cmp', 3.898250465191222e-05], ['bits,', 3.898250465191222e-05], ['values,', 3.898250465191222e-05], ['0.', 3.898250465191222e-05], ['(Expression_list::iterator', 3.898250465191222e-05], ['(!ins.second)', 3.898250465191222e-05], ['args;', 3.898250465191222e-05], ['Update', 3.898250465191222e-05], ['expects', 3.898250465191222e-05], ['escapes', 3.898250465191222e-05], ['"."', 3.898250465191222e-05], ['implies', 3.898250465191222e-05], ['variables,', 3.898250465191222e-05], ['off,', 3.898250465191222e-05], ['traversal', 3.898250465191222e-05], ['offset;', 3.898250465191222e-05], ['8;', 3.898250465191222e-05], ['dtype', 3.898250465191222e-05], ['Typed_identifier_list::const_iterator', 3.898250465191222e-05], ['(results', 3.898250465191222e-05], ["shouldn't", 3.898250465191222e-05], ['4,', 3.898250465191222e-05], ['(it', 3.898250465191222e-05], ['this->vals()->begin();', 3.898250465191222e-05], ['padding', 3.898250465191222e-05], ['separate', 3.898250465191222e-05], ['unexported', 3.898250465191222e-05], ['Search', 3.898250465191222e-05], ['(var', 3.898250465191222e-05], ['Copy', 3.898250465191222e-05], ['NC_INT:', 3.898250465191222e-05], ['NC_RUNE:', 3.898250465191222e-05], ['NC_FLOAT:', 3.898250465191222e-05], ['NC_COMPLEX:', 3.898250465191222e-05], ['32:', 3.898250465191222e-05], ['packages', 3.898250465191222e-05], ['(Module', 3.898250465191222e-05], ['kind', 3.898250465191222e-05], ['(loop,', 3.898250465191222e-05], ['(stmt);', 3.898250465191222e-05], ["loop's", 3.898250465191222e-05], ['(code)', 3.898250465191222e-05], ['build_zero_cst', 3.898250465191222e-05], ['depends', 3.898250465191222e-05], ['"target.h"', 3.898250465191222e-05], ['(TYPE_PRECISION', 3.898250465191222e-05], ['("can\'t', 3.898250465191222e-05], ['null', 3.898250465191222e-05], ['Tarray)', 3.898250465191222e-05], ['associative', 3.898250465191222e-05], ['implicitly', 3.898250465191222e-05], ['Tsarray', 3.898250465191222e-05], ['*type)', 3.898250465191222e-05], ['<<=', 3.898250465191222e-05], ['4);', 3.898250465191222e-05], ['replace', 3.898250465191222e-05], ['args[i]', 3.898250465191222e-05], ['brig_code_entry_handler', 3.898250465191222e-05], ['upper', 3.898250465191222e-05], ['(MULT_EXPR,', 3.898250465191222e-05], ['happen', 3.898250465191222e-05], ['archive.', 3.898250465191222e-05], ['file,', 3.898250465191222e-05], ['pname,', 3.898250465191222e-05], ['std::map<std::string,', 3.898250465191222e-05], ['this->filename_.c_str(),', 3.898250465191222e-05], ['size)', 3.898250465191222e-05], ['foo', 3.898250465191222e-05], ['address_term_info', 3.898250465191222e-05], ["We've", 3.898250465191222e-05], ['(std::vector<Named_object*>::const_iterator', 3.898250465191222e-05], ['classes', 3.898250465191222e-05], ['entries', 3.898250465191222e-05], ['TypeFunction', 3.898250465191222e-05], ['result,', 3.898250465191222e-05], ['build_local_temp', 3.898250465191222e-05], ['pop_stmt_list', 3.898250465191222e-05], ['(build_pointer_type', 3.898250465191222e-05], ['bind_expr', 3.898250465191222e-05], ['(args,', 3.898250465191222e-05], ['(basetype)', 3.898250465191222e-05], ['input);', 3.898250465191222e-05], ['blocks_needed', 3.898250465191222e-05], ['(x,', 3.898250465191222e-05], ['precision);', 3.898250465191222e-05], ['(HOST_BITS_PER_WIDE_INT', 3.898250465191222e-05], ['l,', 3.898250465191222e-05], ['-top_bit_of', 3.898250465191222e-05], ['set.', 3.898250465191222e-05], ['includes', 3.898250465191222e-05], ['ASSERT_FALSE', 3.898250465191222e-05], ['(build_alias_declaration', 3.898250465191222e-05], ['ARG7,', 3.898250465191222e-05], ['forward', 3.898250465191222e-05], ['(term_list&', 3.898250465191222e-05], ['normalize_expression', 3.898250465191222e-05], ['e->e1->type->toBasetype', 3.898250465191222e-05], ['uint8_type,', 3.898250465191222e-05], ['is_varargs', 3.898250465191222e-05], ['xyes', 3.898250465191222e-05], ['adjust_automodify_address', 3.898250465191222e-05], ['(SImode,', 3.898250465191222e-05], ['QImode,', 3.898250465191222e-05], ['BrigData', 3.898250465191222e-05], ['(*i).second;', 3.898250465191222e-05], ['assembler', 3.898250465191222e-05], ['debugging', 3.898250465191222e-05], ['ATTR_EXCL', 3.898250465191222e-05], ['(args),', 3.898250465191222e-05], ['setcc', 3.898250465191222e-05], ['(m);', 3.898250465191222e-05], ['label)', 3.898250465191222e-05], ['"missing', 3.898250465191222e-05], ['element_size', 3.898250465191222e-05], ['(base->kind', 3.898250465191222e-05], ['flows', 3.898250465191222e-05], ['this->assign(this->context_->sink(),', 3.898250465191222e-05], ['uint32_t', 3.898250465191222e-05], ['*pp', 3.898250465191222e-05], ['build_decl(location.gcc_location(),', 3.898250465191222e-05], ['U1', 3.898250465191222e-05], ['Half;', 3.898250465191222e-05], ['0");', 3.898250465191222e-05], ['Z;', 3.898250465191222e-05], ['((X', 3.898250465191222e-05], ['assert_print_eq', 3.898250465191222e-05], ['args))', 3.898250465191222e-05], ['satisfied', 3.898250465191222e-05], ['They', 3.6383671008451406e-05], ['matches', 3.6383671008451406e-05], ['string,', 3.6383671008451406e-05], ['interface,', 3.6383671008451406e-05], ['inlining', 3.6383671008451406e-05], ['FUNCTION_DECL)', 3.6383671008451406e-05], ['Run', 3.6383671008451406e-05], ['print', 3.6383671008451406e-05], ['large', 3.6383671008451406e-05], ['"go-diagnostics.h"', 3.6383671008451406e-05], ['evaluates', 3.6383671008451406e-05], ['nc)', 3.6383671008451406e-05], ['addresses', 3.6383671008451406e-05], ['closure,', 3.6383671008451406e-05], ['descriptors', 3.6383671008451406e-05], ['Type::lookup_bool_type();', 3.6383671008451406e-05], ['resolved_type', 3.6383671008451406e-05], ['constant,', 3.6383671008451406e-05], ['Used', 3.6383671008451406e-05], ['ce', 3.6383671008451406e-05], ['p++)', 3.6383671008451406e-05], ['loc)->get_backend(context);', 3.6383671008451406e-05], ['ESCAPE_MASK)', 3.6383671008451406e-05], ['doing', 3.6383671008451406e-05], ['this->report_error(_("expected', 3.6383671008451406e-05], ['probably', 3.6383671008451406e-05], ['system', 3.6383671008451406e-05], ['count);', 3.6383671008451406e-05], ['moved', 3.6383671008451406e-05], ['root', 3.6383671008451406e-05], ['gogo->backend()->conditional_expression(bfn,', 3.6383671008451406e-05], ['right_nc,', 3.6383671008451406e-05], ['compared', 3.6383671008451406e-05], ['Statement_inserter*)', 3.6383671008451406e-05], ['Because', 3.6383671008451406e-05], ['ins.first->second', 3.6383671008451406e-05], ['mt', 3.6383671008451406e-05], ['argument,', 3.6383671008451406e-05], ['normally', 3.6383671008451406e-05], ['channel,', 3.6383671008451406e-05], ['"use', 3.6383671008451406e-05], ['generating', 3.6383671008451406e-05], ['fntype->parameters();', 3.6383671008451406e-05], ['"incompatible', 3.6383671008451406e-05], ['index)', 3.6383671008451406e-05], ['tracking', 3.6383671008451406e-05], ['turn', 3.6383671008451406e-05], ['(*pv', 3.6383671008451406e-05], ['interfaces.', 3.6383671008451406e-05], ['storage', 3.6383671008451406e-05], ['t->named_type();', 3.6383671008451406e-05], ['duplicate', 3.6383671008451406e-05], ['good', 3.6383671008451406e-05], ['Linemap::predeclared_location());', 3.6383671008451406e-05], ['make_location_t', 3.6383671008451406e-05], ['PHI', 3.6383671008451406e-05], ['VAR', 3.6383671008451406e-05], ['var)', 3.6383671008451406e-05], ['gimple_bb', 3.6383671008451406e-05], ['operation.', 3.6383671008451406e-05], ['nodes.', 3.6383671008451406e-05], ['Replace', 3.6383671008451406e-05], ['whole', 3.6383671008451406e-05], ['control', 3.6383671008451406e-05], ['flow', 3.6383671008451406e-05], ["there's", 3.6383671008451406e-05], ['(INTEGRAL_TYPE_P', 3.6383671008451406e-05], ['boolean_true_node;', 3.6383671008451406e-05], ['(exp));', 3.6383671008451406e-05], ['dim', 3.6383671008451406e-05], ['treated', 3.6383671008451406e-05], ['perform', 3.6383671008451406e-05], ['caller', 3.6383671008451406e-05], ['(element_type,', 3.6383671008451406e-05], ['(VECTOR_TYPE_P', 3.6383671008451406e-05], ['brig_opcode', 3.6383671008451406e-05], ['option', 3.6383671008451406e-05], ['(brig_inst->opcode', 3.6383671008451406e-05], ['(assign);', 3.6383671008451406e-05], ['#ifndef', 3.6383671008451406e-05], ['extended', 3.6383671008451406e-05], ['1];', 3.6383671008451406e-05], ['diagnostic', 3.6383671008451406e-05], ['Remove', 3.6383671008451406e-05], ['ap,', 3.6383671008451406e-05], ['format);', 3.6383671008451406e-05], ['ones', 3.6383671008451406e-05], ['containing', 3.6383671008451406e-05], ['SSA', 3.6383671008451406e-05], ['main', 3.6383671008451406e-05], ['strip_casts', 3.6383671008451406e-05], ['get_loop_info', 3.6383671008451406e-05], ['eliminate', 3.6383671008451406e-05], ['ranges', 3.6383671008451406e-05], ['(Bindings::const_definitions_iterator', 3.6383671008451406e-05], ['is,', 3.6383671008451406e-05], ['methods->begin();', 3.6383671008451406e-05], ['(package', 3.6383671008451406e-05], ['B', 3.6383671008451406e-05], ['"function.h"', 3.6383671008451406e-05], ['(t));', 3.6383671008451406e-05], ['allocated', 3.6383671008451406e-05], ['floating-point', 3.6383671008451406e-05], ['found,', 3.6383671008451406e-05], ['(index', 3.6383671008451406e-05], ['Ensure', 3.6383671008451406e-05], ['*elms', 3.6383671008451406e-05], ['(TypeFunction', 3.6383671008451406e-05], ['VAR_DECL,', 3.6383671008451406e-05], ['(arg);', 3.6383671008451406e-05], ['tree_cons', 3.6383671008451406e-05], ['fields,', 3.6383671008451406e-05], ['*name', 3.6383671008451406e-05], ['conversion_result', 3.6383671008451406e-05], ['XVAL', 3.6383671008451406e-05], ['x,', 3.6383671008451406e-05], ['UNSIGNED)', 3.6383671008451406e-05], ['prec)', 3.6383671008451406e-05], ['l0', 3.6383671008451406e-05], ['negate', 3.6383671008451406e-05], ['(wi::eq_p', 3.6383671008451406e-05], ['"toplev.h"', 3.6383671008451406e-05], ['(mod);', 3.6383671008451406e-05], ['parsed', 3.6383671008451406e-05], ['declare', 3.6383671008451406e-05], ['previously', 3.6383671008451406e-05], ['expansion', 3.6383671008451406e-05], ['(ts,', 3.6383671008451406e-05], ['Model', 3.6383671008451406e-05], ['location.', 3.6383671008451406e-05], ['(e->e1),', 3.6383671008451406e-05], ['(fndecl);', 3.6383671008451406e-05], ['Finalize', 3.6383671008451406e-05], ['keyword', 3.6383671008451406e-05], ['dependencies', 3.6383671008451406e-05], ['results->push_back(Typed_identifier("",', 3.6383671008451406e-05], ['equal_fntype,', 3.6383671008451406e-05], ['align', 3.6383671008451406e-05], ['Methods*', 3.6383671008451406e-05], ['reflection', 3.6383671008451406e-05], ['"_")', 3.6383671008451406e-05], ['(this->is_error_)', 3.6383671008451406e-05], ['freebsd-spec.h', 3.6383671008451406e-05], ['tmake_file="$tmake_file', 3.6383671008451406e-05], ['rtems.h', 3.6383671008451406e-05], ['Define', 3.6383671008451406e-05], ['extern', 3.6383671008451406e-05], ['&reg_use_analyzer},', 3.6383671008451406e-05], ['DECL_ARGUMENTS', 3.6383671008451406e-05], ['(const_rtx', 3.6383671008451406e-05], ['log_return_void', 3.6383671008451406e-05], ['size_t*', 3.6383671008451406e-05], ['R', 3.6383671008451406e-05], ['labels', 3.6383671008451406e-05], ['var_type', 3.6383671008451406e-05], ['((traverse_mask', 3.6383671008451406e-05], ['*(const', 3.6383671008451406e-05], ['(*expr_p,', 3.6383671008451406e-05], ['operand_type', 3.6383671008451406e-05], ['held', 3.6383671008451406e-05], ['CALLEXP.', 3.6383671008451406e-05], ['callexp)', 3.6383671008451406e-05], ['dst', 3.6383671008451406e-05], ['this->assign(dst,', 3.6383671008451406e-05], ['TREE_VEC_LENGTH', 3.6383671008451406e-05], ['NULL_TREE),', 3.6383671008451406e-05], ['(this->traverse_expression(traverse,', 3.6383671008451406e-05], ['token->is_identifier_exported();', 3.6383671008451406e-05], ['ModuleInfo', 3.6383671008451406e-05], ['(minit,', 3.6383671008451406e-05], ['Three', 3.6383671008451406e-05], ['Y1', 3.6383671008451406e-05], ['b.image,', 3.6383671008451406e-05], ['(Serious,', 3.6383671008451406e-05], ['Z)', 3.6383671008451406e-05], ['nor', 3.6383671008451406e-05], ['++processing_template_decl;', 3.6383671008451406e-05], ['--processing_template_decl;', 3.6383671008451406e-05], ['in_decl,', 3.6383671008451406e-05], ['tsubst', 3.6383671008451406e-05], ['(cur,', 3.6383671008451406e-05], ['"types.h"', 3.378483736499059e-05], ['"langhooks.h"', 3.378483736499059e-05], ['flag', 3.378483736499059e-05], ['referring', 3.378483736499059e-05], ['child', 3.378483736499059e-05], ['CHECKING_P', 3.378483736499059e-05], ['very', 3.378483736499059e-05], ['Print', 3.378483736499059e-05], ['hex', 3.378483736499059e-05], ['"go-c.h"', 3.378483736499059e-05], ['Default', 3.378483736499059e-05], ['compile', 3.378483736499059e-05], ['time.', 3.378483736499059e-05], ['checked', 3.378483736499059e-05], ['holds', 3.378483736499059e-05], ['Type::COMPARE_ERRORS', 3.378483736499059e-05], ['reference,', 3.378483736499059e-05], ['adding', 3.378483736499059e-05], ['bexpr', 3.378483736499059e-05], ['do_is_static_initializer()', 3.378483736499059e-05], ['std::string::npos)', 3.378483736499059e-05], ['declaration,', 3.378483736499059e-05], ['contents', 3.378483736499059e-05], ['cause', 3.378483736499059e-05], ['expect', 3.378483736499059e-05], ['Apply', 3.378483736499059e-05], ['diagnosed', 3.378483736499059e-05], ['*result_type', 3.378483736499059e-05], ['now,', 3.378483736499059e-05], ['Just', 3.378483736499059e-05], ['ins.first->second;', 3.378483736499059e-05], ['allowed', 3.378483736499059e-05], ['this->report_error(_("not', 3.378483736499059e-05], ['e1', 3.378483736499059e-05], ['(reason.empty())', 3.378483736499059e-05], ['capacity', 3.378483736499059e-05], ['becomes', 3.378483736499059e-05], ['FIXME.', 3.378483736499059e-05], ['varargs', 3.378483736499059e-05], ['passing', 3.378483736499059e-05], ['count;', 3.378483736499059e-05], ['Array', 3.378483736499059e-05], ['once', 3.378483736499059e-05], ['unique', 3.378483736499059e-05], ['f;', 3.378483736499059e-05], ['temporaries', 3.378483736499059e-05], ['length);', 3.378483736499059e-05], ['keys', 3.378483736499059e-05], ['%lu",', 3.378483736499059e-05], ['h', 3.378483736499059e-05], ['(s', 3.378483736499059e-05], ['depth,', 3.378483736499059e-05], ['addr', 3.378483736499059e-05], ['uint8_type', 3.378483736499059e-05], ['Clear', 3.378483736499059e-05], ['"dmd/aggregate.h"', 3.378483736499059e-05], ['"dmd/declaration.h"', 3.378483736499059e-05], ['visitor', 3.378483736499059e-05], ['decl)', 3.378483736499059e-05], ['expanded', 3.378483736499059e-05], ['Analyze', 3.378483736499059e-05], ['(unsigned)', 3.378483736499059e-05], ['(stmt,', 3.378483736499059e-05], ['(NE_EXPR,', 3.378483736499059e-05], ['std::swap', 3.378483736499059e-05], ['++j)', 3.378483736499059e-05], ['(size_int', 3.378483736499059e-05], ['conditions', 3.378483736499059e-05], ['(tree_code', 3.378483736499059e-05], ['(POINTER_TYPE_P', 3.378483736499059e-05], ['(offset', 3.378483736499059e-05], ['sizes', 3.378483736499059e-05], ['convert_for_condition', 3.378483736499059e-05], ['ptr);', 3.378483736499059e-05], ['definitions', 3.378483736499059e-05], ['element_count;', 3.378483736499059e-05], ['operands[1]);', 3.378483736499059e-05], ['including', 3.378483736499059e-05], ['build_operands', 3.378483736499059e-05], ['Construct', 3.378483736499059e-05], ['build_output_assignment', 3.378483736499059e-05], ['external', 3.378483736499059e-05], ['ap);', 3.378483736499059e-05], ['removed', 3.378483736499059e-05], ['dimension', 3.378483736499059e-05], ['address_info', 3.378483736499059e-05], ['(address_info', 3.378483736499059e-05], ['found.', 3.378483736499059e-05], ['dump_printf', 3.378483736499059e-05], ['MAX', 3.378483736499059e-05], ['TYPE_SIZE', 3.378483736499059e-05], ['yet.', 3.378483736499059e-05], ['t2,', 3.378483736499059e-05], ['methods->end();', 3.378483736499059e-05], ['length)', 3.378483736499059e-05], ['trees.', 3.378483736499059e-05], ['build_deref', 3.378483736499059e-05], ['T1', 3.378483736499059e-05], ['(builtin_decl_explicit', 3.378483736499059e-05], ['(INIT_EXPR,', 3.378483736499059e-05], ['push_stmt_list', 3.378483736499059e-05], ['make_array_type', 3.378483736499059e-05], ['(ve,', 3.378483736499059e-05], ['(arg,', 3.378483736499059e-05], ['size_type_node,', 3.378483736499059e-05], ['(FuncDeclaration', 3.378483736499059e-05], ['(t),', 3.378483736499059e-05], ['*cd', 3.378483736499059e-05], ['destination', 3.378483736499059e-05], ['"tm.h"', 3.378483736499059e-05], ['(precision);', 3.378483736499059e-05], ['need_canon', 3.378483736499059e-05], ['selt', 3.378483736499059e-05], ['blocks_needed,', 3.378483736499059e-05], ['small_prec,', 3.378483736499059e-05], ['(op0,', 3.378483736499059e-05], ['mask;', 3.378483736499059e-05], ['block)', 3.378483736499059e-05], ['inverted', 3.378483736499059e-05], ['(l1', 3.378483736499059e-05], ['(stderr,', 3.378483736499059e-05], ['Identifier', 3.378483736499059e-05], ['decl->csym;', 3.378483736499059e-05], ['*e', 3.378483736499059e-05], ['symbol,', 3.378483736499059e-05], ['dot', 3.378483736499059e-05], ['":"', 3.378483736499059e-05], ['(e->e1));', 3.378483736499059e-05], ['(v', 3.378483736499059e-05], ['new_call', 3.378483736499059e-05], ['{"<stdio.h>",', 3.378483736499059e-05], ['"<cstdio>"}', 3.378483736499059e-05], ['TYPE_NAMED:', 3.378483736499059e-05], ['TYPE_INTEGER:', 3.378483736499059e-05], ['TYPE_FLOAT:', 3.378483736499059e-05], ['TYPE_COMPLEX:', 3.378483736499059e-05], ['TYPE_BOOLEAN:', 3.378483736499059e-05], ['TYPE_STRING:', 3.378483736499059e-05], ['context(gogo,', 3.378483736499059e-05], ['hash_fnname', 3.378483736499059e-05], ['equal_fnname', 3.378483736499059e-05], ['ptrsize)', 3.378483736499059e-05], ["');", 3.378483736499059e-05], ['function)', 3.378483736499059e-05], ['extra_objs="${extra_objs}', 3.378483736499059e-05], ["thread_file='posix'", 3.378483736499059e-05], ['(SImode);', 3.378483736499059e-05], ['addr1', 3.378483736499059e-05], ['(addr1,', 3.378483736499059e-05], ['s1_addr,', 3.378483736499059e-05], ['(gen_cmpeqsi_t', 3.378483736499059e-05], ['work-item', 3.378483736499059e-05], ['DECL_ATTRIBUTES', 3.378483736499059e-05], ['insn\\n");', 3.378483736499059e-05], ['(', 3.378483736499059e-05], ['function(Named_object*);', 3.378483736499059e-05], ['statement(Block*,', 3.378483736499059e-05], ['this->ast_dump_context_->ostream()', 3.378483736499059e-05], ['this->ostream()', 3.378483736499059e-05], ['E0', 3.378483736499059e-05], ['CMP', 3.378483736499059e-05], ['real_arithmetic', 3.378483736499059e-05], ['&r.rv', 3.378483736499059e-05], ['speculation', 3.378483736499059e-05], ['cc', 3.378483736499059e-05], ['(insn))', 3.378483736499059e-05], ["'9')", 3.378483736499059e-05], ['Q', 3.378483736499059e-05], ['this->pragmas_', 3.378483736499059e-05], ['size_t*,', 3.378483736499059e-05], ['details', 3.378483736499059e-05], ['(wmin,', 3.378483736499059e-05], ['(mode', 3.378483736499059e-05], ['phobos_library', 3.378483736499059e-05], ['(phobos_library', 3.378483736499059e-05], ['generate_option', 3.378483736499059e-05], ['CL_DRIVER,', 3.378483736499059e-05], ['mathfn_built_in', 3.378483736499059e-05], ['(callexp);', 3.378483736499059e-05], ['<typename', 3.378483736499059e-05], ['Block*,', 3.378483736499059e-05], ['","', 3.378483736499059e-05], ['layout_moduleinfo_field', 3.378483736499059e-05], ['FABS', 3.378483736499059e-05], ['Zero;', 3.378483736499059e-05], ['One)', 3.378483736499059e-05], ['(Defect,', 3.378483736499059e-05], ['pp_string', 3.378483736499059e-05], ['generates', 3.118600372152978e-05], ['Function', 3.118600372152978e-05], ['Expression::make_call(func,', 3.118600372152978e-05], ['"diagnostic-core.h"', 3.118600372152978e-05], ['"error', 3.118600372152978e-05], ['node.', 3.118600372152978e-05], ['selftest', 3.118600372152978e-05], ['HOST_BITS_PER_WIDE_INT)', 3.118600372152978e-05], ['SIGNED)', 3.118600372152978e-05], ['HOST_WIDE_INT)', 3.118600372152978e-05], ['2009', 3.118600372152978e-05], ['Give', 3.118600372152978e-05], ['Unary_expression*', 3.118600372152978e-05], ['heap', 3.118600372152978e-05], ['Expression::make_binary(OPERATOR_EQEQ,', 3.118600372152978e-05], ['safe', 3.118600372152978e-05], ['catch', 3.118600372152978e-05], ['gogo->backend()->error_expression();', 3.118600372152978e-05], ['type"));', 3.118600372152978e-05], ['gogo->flatten_expression(function,', 3.118600372152978e-05], ['bfn', 3.118600372152978e-05], ['blank', 3.118600372152978e-05], ['(context->type', 3.118600372152978e-05], ['seems', 3.118600372152978e-05], ['no->message_name().c_str());', 3.118600372152978e-05], ['(no->package()', 3.118600372152978e-05], ['imp,', 3.118600372152978e-05], ['this);', 3.118600372152978e-05], ['go_error_at(imp->location(),', 3.118600372152978e-05], ["didn't", 3.118600372152978e-05], ['number.', 3.118600372152978e-05], ['handles', 3.118600372152978e-05], ['mpc_precision);', 3.118600372152978e-05], ['prevent', 3.118600372152978e-05], ['element_type,', 3.118600372152978e-05], ['worth', 3.118600372152978e-05], ['message.', 3.118600372152978e-05], ['that.', 3.118600372152978e-05], ['dereference', 3.118600372152978e-05], ['crash', 3.118600372152978e-05], ['operations.', 3.118600372152978e-05], ['OPERATOR_OR:', 3.118600372152978e-05], ['OPERATOR_DIV:', 3.118600372152978e-05], ['OPERATOR_MOD:', 3.118600372152978e-05], ['OPERATOR_BITCLEAR:', 3.118600372152978e-05], ['(this->classification()', 3.118600372152978e-05], ['operands.', 3.118600372152978e-05], ['Any', 3.118600372152978e-05], ['operator.', 3.118600372152978e-05], ['this->type_,', 3.118600372152978e-05], ['Implement', 3.118600372152978e-05], ['receiver.', 3.118600372152978e-05], ['etype', 3.118600372152978e-05], ['recover.', 3.118600372152978e-05], ['itself,', 3.118600372152978e-05], ['Evaluate', 3.118600372152978e-05], ['"can\'t', 3.118600372152978e-05], ['cap', 3.118600372152978e-05], ['then_block', 3.118600372152978e-05], ['Like', 3.118600372152978e-05], ['looks', 3.118600372152978e-05], ['(arg', 3.118600372152978e-05], ['results.', 3.118600372152978e-05], ['results->begin();', 3.118600372152978e-05], ['parameters,', 3.118600372152978e-05], ['nargs', 3.118600372152978e-05], ['taken', 3.118600372152978e-05], ['linker', 3.118600372152978e-05], ['++count;', 3.118600372152978e-05], ['(this->vals_', 3.118600372152978e-05], ['this->vals()->end();', 3.118600372152978e-05], ['pi', 3.118600372152978e-05], ['"{"', 3.118600372152978e-05], ['"}"', 3.118600372152978e-05], ['usage', 3.118600372152978e-05], ['(no', 3.118600372152978e-05], ['starts', 3.118600372152978e-05], ['indexes', 3.118600372152978e-05], ['Integer_type*', 3.118600372152978e-05], ['{}', 3.118600372152978e-05], ['m;', 3.118600372152978e-05], ['Avoid', 3.118600372152978e-05], ['imaginary', 3.118600372152978e-05], ['Calculate', 3.118600372152978e-05], ['"dmd/identifier.h"', 3.118600372152978e-05], ['(Dsymbol', 3.118600372152978e-05], ['Want', 3.118600372152978e-05], ['(type->ty', 3.118600372152978e-05], ['((TypeStruct', 3.118600372152978e-05], ['input_location', 3.118600372152978e-05], ['N;', 3.118600372152978e-05], ['mapping', 3.118600372152978e-05], ['var;', 3.118600372152978e-05], ['(loop),', 3.118600372152978e-05], ['&,', 3.118600372152978e-05], ['vec<data_reference_p>', 3.118600372152978e-05], ['loop_outer', 3.118600372152978e-05], ['2006-2019', 3.118600372152978e-05], ['allows', 3.118600372152978e-05], ['d_array_ptr', 3.118600372152978e-05], ['()->toBasetype', 3.118600372152978e-05], ['Strings', 3.118600372152978e-05], ['casts', 3.118600372152978e-05], ['TREE_CONSTANT', 3.118600372152978e-05], ['Perform', 3.118600372152978e-05], ['p,', 3.118600372152978e-05], ['leading', 3.118600372152978e-05], ['however', 3.118600372152978e-05], ['NAME.', 3.118600372152978e-05], ['<sstream>', 3.118600372152978e-05], ['"gimple-expr.h"', 3.118600372152978e-05], ['element.', 3.118600372152978e-05], ['m_parent.m_cf->add_temp_var', 3.118600372152978e-05], ['build_nonstandard_integer_type', 3.118600372152978e-05], ['(s,', 3.118600372152978e-05], ['(brig_opcode,', 3.118600372152978e-05], ['brig_type', 3.118600372152978e-05], ['gccbrig_hsa_type_bit_size', 3.118600372152978e-05], ['instr_expr', 3.118600372152978e-05], ['output.', 3.118600372152978e-05], ['32', 3.118600372152978e-05], ['%m",', 3.118600372152978e-05], ['(ps', 3.118600372152978e-05], ['members.', 3.118600372152978e-05], ['failed', 3.118600372152978e-05], ['OutBuffer', 3.118600372152978e-05], ['members', 3.118600372152978e-05], ['provides', 3.118600372152978e-05], ['Hash', 3.118600372152978e-05], ['reason', 3.118600372152978e-05], ['Insert', 3.118600372152978e-05], ['t2)', 3.118600372152978e-05], ['identifiers', 3.118600372152978e-05], ['this->write_c_string("', 3.118600372152978e-05], ['Declaration', 3.118600372152978e-05], ['build_integer_cst', 3.118600372152978e-05], ['(value)', 3.118600372152978e-05], ['set,', 3.118600372152978e-05], ['build_assign', 3.118600372152978e-05], ['condition,', 3.118600372152978e-05], ['build_string', 3.118600372152978e-05], ['Type::tvoid,', 3.118600372152978e-05], ['"%qs', 3.118600372152978e-05], ['fields;', 3.118600372152978e-05], ['get_decl_tree', 3.118600372152978e-05], ['link', 3.118600372152978e-05], ['*s', 3.118600372152978e-05], ['dest_type', 3.118600372152978e-05], ['builtins', 3.118600372152978e-05], ['half', 3.118600372152978e-05], ['PRECISION', 3.118600372152978e-05], ['high', 3.118600372152978e-05], ['issue', 3.118600372152978e-05], ['*op0,', 3.118600372152978e-05], ['*op1,', 3.118600372152978e-05], ['l0--;', 3.118600372152978e-05], ['o1', 3.118600372152978e-05], ['assert_deceq', 3.118600372152978e-05], ['a));', 3.118600372152978e-05], ['(prec,', 3.118600372152978e-05], ['provide', 3.118600372152978e-05], ['(build_typeinfo', 3.118600372152978e-05], ['(d->tinfo->ty', 3.118600372152978e-05], ['d->tinfo;', 3.118600372152978e-05], ['(name,', 3.118600372152978e-05], ['build_lang_decl', 3.118600372152978e-05], ['VAR_DECL', 3.118600372152978e-05], ['exist,', 3.118600372152978e-05], ['ARG8,', 3.118600372152978e-05], ['decl);', 3.118600372152978e-05], ['lists', 3.118600372152978e-05], ['ts,', 3.118600372152978e-05], ['tmpl', 3.118600372152978e-05], ['built', 3.118600372152978e-05], ['ci', 3.118600372152978e-05], ['TYPE_FORWARD:', 3.118600372152978e-05], ['TYPE_STRUCT:', 3.118600372152978e-05], ['TYPE_ARRAY:', 3.118600372152978e-05], ['TYPE_INTERFACE:', 3.118600372152978e-05], ['(flags', 3.118600372152978e-05], ['Type::make_type_descriptor_type();', 3.118600372152978e-05], ['params,', 3.118600372152978e-05], ['Expression::NIL_CHECK_NOT_NEEDED,', 3.118600372152978e-05], ['${enable_threads}', 3.118600372152978e-05], ['use_collect2=no', 3.118600372152978e-05], ['rs6000/sysv4.opt"', 3.118600372152978e-05], ['arch_without_sse2=yes', 3.118600372152978e-05], ['copy_rtx', 3.118600372152978e-05], ['(gen_tstsi_t', 3.118600372152978e-05], ['(L_loop_byte));', 3.118600372152978e-05], ['s2_addr,', 3.118600372152978e-05], ['gen_lowpart', 3.118600372152978e-05], ['BrigOperandRegister', 3.118600372152978e-05], ['(resdecl)', 3.118600372152978e-05], ['(alias)', 3.118600372152978e-05], ['"%qE', 3.118600372152978e-05], ['(eq:SI', 3.118600372152978e-05], ['reg-reg', 3.118600372152978e-05], ['%d]', 3.118600372152978e-05], ['bb->index);', 3.118600372152978e-05], ['(rtx_insn', 3.118600372152978e-05], ['textual', 3.118600372152978e-05], ['(TYPE));', 3.118600372152978e-05], ['label);', 3.118600372152978e-05], ['saw_error', 3.118600372152978e-05], ['(verb', 3.118600372152978e-05], ['4},', 3.118600372152978e-05], ['vars,', 3.118600372152978e-05], ['%s,', 3.118600372152978e-05], ['wmax', 3.118600372152978e-05], ['wmin', 3.118600372152978e-05], ['(argsize', 3.118600372152978e-05], ['this->flows(dst,', 3.118600372152978e-05], ['m_parent.get_brig_data_entry', 3.118600372152978e-05], ['BrigOperandOffset32_t', 3.118600372152978e-05], ['(brig_inst,', 3.118600372152978e-05], ['Two', 3.118600372152978e-05], ['fold_build1_loc(location.gcc_location(),', 3.118600372152978e-05], ['get_identifier_from_string(name),', 3.118600372152978e-05], ['init_tree', 3.118600372152978e-05], ['Statement::make_error_statement(loc);', 3.118600372152978e-05], ['this->traverse_expression(traverse,', 3.118600372152978e-05], ['index_temp,', 3.118600372152978e-05], ['value_temp,', 3.118600372152978e-05], ['(!token->is_identifier())', 3.118600372152978e-05], ['semicolon', 3.118600372152978e-05], ['(this->peek_token()->is_op(OPERATOR_SEMICOLON))', 3.118600372152978e-05], ['Pascal', 3.118600372152978e-05], ['OneAndHalf', 3.118600372152978e-05], ['Y2', 3.118600372152978e-05], ['PseudoZero', 3.118600372152978e-05], ['Pause', 3.118600372152978e-05], ['real_from_target', 3.118600372152978e-05], ['image,', 3.118600372152978e-05], ['symbol_for_code', 3.118600372152978e-05], ['SQRT', 3.118600372152978e-05], ['Zero),', 3.118600372152978e-05], ['X)', 3.118600372152978e-05], ['Zero))', 3.118600372152978e-05], ['Y2;', 3.118600372152978e-05], ['Y1;', 3.118600372152978e-05], ['UfThold', 3.118600372152978e-05], ['constr', 3.118600372152978e-05], ['Diagnose', 3.118600372152978e-05], ['untyped', 2.8587170078068964e-05], ['(new', 2.8587170078068964e-05], ['(block)', 2.8587170078068964e-05], ['(line_table,', 2.8587170078068964e-05], ['sgn)', 2.8587170078068964e-05], ['(wi,', 2.8587170078068964e-05], ['Other', 2.8587170078068964e-05], ['(val', 2.8587170078068964e-05], ['Expressions', 2.8587170078068964e-05], ['computed', 2.8587170078068964e-05], ['Var_expression*', 2.8587170078068964e-05], ['Field_reference_expression*', 2.8587170078068964e-05], ['permitted', 2.8587170078068964e-05], ['NIL_CHECK_NOT_NEEDED,', 2.8587170078068964e-05], ['general', 2.8587170078068964e-05], ['side.', 2.8587170078068964e-05], ['ival;', 2.8587170078068964e-05], ['inserter);', 2.8587170078068964e-05], ['do_type();', 2.8587170078068964e-05], ['(no->is_function_declaration())', 2.8587170078068964e-05], ['go_error_at(loc,', 2.8587170078068964e-05], ['std::string::npos', 2.8587170078068964e-05], ['\'"\')', 2.8587170078068964e-05], ["'A'", 2.8587170078068964e-05], ['getting', 2.8587170078068964e-05], ['bit.', 2.8587170078068964e-05], ['Store', 2.8587170078068964e-05], ['this->expr_,', 2.8587170078068964e-05], ['Expression::convert_for_assignment(gogo,', 2.8587170078068964e-05], ['Expression::make_nil(loc),', 2.8587170078068964e-05], ['taking', 2.8587170078068964e-05], ['(e', 2.8587170078068964e-05], ['issued_error;', 2.8587170078068964e-05], ['ve', 2.8587170078068964e-05], ['OPERATOR_NOT:', 2.8587170078068964e-05], ['var_name', 2.8587170078068964e-05], ['OPERATOR_EQEQ:', 2.8587170078068964e-05], ['OPERATOR_NOTEQ:', 2.8587170078068964e-05], ['OPERATOR_LT:', 2.8587170078068964e-05], ['OPERATOR_LE:', 2.8587170078068964e-05], ['OPERATOR_GT:', 2.8587170078068964e-05], ['OPERATOR_GE:', 2.8587170078068964e-05], ['left_nc,', 2.8587170078068964e-05], ['right_val);', 2.8587170078068964e-05], ['overflow");', 2.8587170078068964e-05], ['OPERATOR_LSHIFT:', 2.8587170078068964e-05], ['OPERATOR_RSHIFT:', 2.8587170078068964e-05], ['unsafe_pointer_type', 2.8587170078068964e-05], ['operand.', 2.8587170078068964e-05], ['call;', 2.8587170078068964e-05], ['But', 2.8587170078068964e-05], ['loc)));', 2.8587170078068964e-05], ['field_indexes,', 2.8587170078068964e-05], ['easy', 2.8587170078068964e-05], ['is_varargs,', 2.8587170078068964e-05], ['evaluation', 2.8587170078068964e-05], ['append', 2.8587170078068964e-05], ['cap_arg', 2.8587170078068964e-05], ['uint', 2.8587170078068964e-05], ['cap,', 2.8587170078068964e-05], ['pass,', 2.8587170078068964e-05], ['exactly', 2.8587170078068964e-05], ['channel"));', 2.8587170078068964e-05], ['"array', 2.8587170078068964e-05], ['described', 2.8587170078068964e-05], ['targets', 2.8587170078068964e-05], ['well', 2.8587170078068964e-05], ['i));', 2.8587170078068964e-05], ['results->end();', 2.8587170078068964e-05], ['(fe', 2.8587170078068964e-05], ['(first)', 2.8587170078068964e-05], ['params->begin();', 2.8587170078068964e-05], ['fn;', 2.8587170078068964e-05], ['makes', 2.8587170078068964e-05], ['slice,', 2.8587170078068964e-05], ['loc),', 2.8587170078068964e-05], ['reported', 2.8587170078068964e-05], ['buf[50];', 2.8587170078068964e-05], ['Gogo::message_name(name).c_str());', 2.8587170078068964e-05], ['construction', 2.8587170078068964e-05], ['buf[100];', 2.8587170078068964e-05], ['literals', 2.8587170078068964e-05], ['(type->named_type()', 2.8587170078068964e-05], ['ft', 2.8587170078068964e-05], ['(params', 2.8587170078068964e-05], ['pair', 2.8587170078068964e-05], ['offset.', 2.8587170078068964e-05], ['cached', 2.8587170078068964e-05], ['void_type_node);', 2.8587170078068964e-05], ["aren't", 2.8587170078068964e-05], ['d)', 2.8587170078068964e-05], ['Loop', 2.8587170078068964e-05], ['defining', 2.8587170078068964e-05], ['reduction.', 2.8587170078068964e-05], ['(gimple', 2.8587170078068964e-05], ['invariant', 2.8587170078068964e-05], ['(and', 2.8587170078068964e-05], ['correctly', 2.8587170078068964e-05], ['SSA_NAME_VERSION', 2.8587170078068964e-05], ['later.', 2.8587170078068964e-05], ['references.', 2.8587170078068964e-05], ['loop_depth', 2.8587170078068964e-05], ['Block', 2.8587170078068964e-05], ['%d\\n",', 2.8587170078068964e-05], ['blocks.', 2.8587170078068964e-05], ['"dmd/mtype.h"', 2.8587170078068964e-05], ['"convert.h"', 2.8587170078068964e-05], ['TYPE_LANG_FRONTEND', 2.8587170078068964e-05], ['Tpointer)', 2.8587170078068964e-05], ['(void', 2.8587170078068964e-05], ['(ctor)', 2.8587170078068964e-05], ['structure.', 2.8587170078068964e-05], ['(Expression', 2.8587170078068964e-05], ['"";', 2.8587170078068964e-05], ['provided', 2.8587170078068964e-05], ['va_arg', 2.8587170078068964e-05], ['(brig_inst.opcode', 2.8587170078068964e-05], ['packed', 2.8587170078068964e-05], ['(vec_type,', 2.8587170078068964e-05], ['Zero', 2.8587170078068964e-05], ['multiply', 2.8587170078068964e-05], ['create_tmp_var', 2.8587170078068964e-05], ['Parse', 2.8587170078068964e-05], ["')", 2.8587170078068964e-05], ["'\\0';", 2.8587170078068964e-05], ['10);', 2.8587170078068964e-05], ['bad', 2.8587170078068964e-05], ['testing', 2.8587170078068964e-05], ['goes', 2.8587170078068964e-05], ['s.ctor_count);', 2.8587170078068964e-05], ['s.dtor_count);', 2.8587170078068964e-05], ['supports', 2.8587170078068964e-05], ['recognize', 2.8587170078068964e-05], ['bb;', 2.8587170078068964e-05], ['%d",', 2.8587170078068964e-05], ['as:', 2.8587170078068964e-05], ['(1);', 2.8587170078068964e-05], ['4]', 2.8587170078068964e-05], ['Ignore', 2.8587170078068964e-05], ['sort', 2.8587170078068964e-05], ['ABI', 2.8587170078068964e-05], ['Traversal', 2.8587170078068964e-05], ["we'll", 2.8587170078068964e-05], ['Sort', 2.8587170078068964e-05], ['Import_init*', 2.8587170078068964e-05], ['compiled', 2.8587170078068964e-05], ['value)', 2.8587170078068964e-05], ['body.', 2.8587170078068964e-05], ['AggregateDeclaration', 2.8587170078068964e-05], ['*ad', 2.8587170078068964e-05], ['(ad', 2.8587170078068964e-05], ['*tf', 2.8587170078068964e-05], ['(e1,', 2.8587170078068964e-05], ['(t1,', 2.8587170078068964e-05], ['upon', 2.8587170078068964e-05], ['(TYPE_NAME', 2.8587170078068964e-05], ['arg1);', 2.8587170078068964e-05], ['elms);', 2.8587170078068964e-05], ['bounds', 2.8587170078068964e-05], ['(t->ty', 2.8587170078068964e-05], ['str', 2.8587170078068964e-05], ['fd;', 2.8587170078068964e-05], ['(cd);', 2.8587170078068964e-05], ['(ffi)', 2.8587170078068964e-05], ['TREE_THIS_VOLATILE', 2.8587170078068964e-05], ['pattern', 2.8587170078068964e-05], ['output,', 2.8587170078068964e-05], ['buffer', 2.8587170078068964e-05], ['val[0]', 2.8587170078068964e-05], ['op1len', 2.8587170078068964e-05], ['logical', 2.8587170078068964e-05], ['make_internal_typeinfo', 2.8587170078068964e-05], ['array_type_node,', 2.8587170078068964e-05], ['declare_extern_var', 2.8587170078068964e-05], ['build_decl_tree', 2.8587170078068964e-05], ['parms', 2.8587170078068964e-05], ['parm', 2.8587170078068964e-05], ['this->require_c_string("\\n");', 2.8587170078068964e-05], ['line.', 2.8587170078068964e-05], ['bindings', 2.8587170078068964e-05], ['ID', 2.8587170078068964e-05], ['goal', 2.8587170078068964e-05], ['cases,', 2.8587170078068964e-05], ['end)', 2.8587170078068964e-05], ['ti', 2.8587170078068964e-05], ['*tb1', 2.8587170078068964e-05], ['tb1->nextOf', 2.8587170078068964e-05], ['e->type,', 2.8587170078068964e-05], ['e->e1->type);', 2.8587170078068964e-05], ['shortcut', 2.8587170078068964e-05], ['Generate:', 2.8587170078068964e-05], ['comma', 2.8587170078068964e-05], ['void_type_node;', 2.8587170078068964e-05], ['Need', 2.8587170078068964e-05], ['ftype', 2.8587170078068964e-05], ['TYPE_NIL:', 2.8587170078068964e-05], ['TYPE_ERROR:', 2.8587170078068964e-05], ['TYPE_VOID:', 2.8587170078068964e-05], ['TYPE_FUNCTION:', 2.8587170078068964e-05], ['TYPE_POINTER:', 2.8587170078068964e-05], ['TYPE_MAP:', 2.8587170078068964e-05], ['TYPE_CHANNEL:', 2.8587170078068964e-05], ['((flags', 2.8587170078068964e-05], ['switch.', 2.8587170078068964e-05], ['unsafe_pointer_type,', 2.8587170078068964e-05], ['Statement::make_return_statement(vals,', 2.8587170078068964e-05], ['p2', 2.8587170078068964e-05], ['x)', 2.8587170078068964e-05], ['imp->location());', 2.8587170078068964e-05], ['tref', 2.8587170078068964e-05], ['(this->length_', 2.8587170078068964e-05], ['bloc;', 2.8587170078068964e-05], ['Expression::make_error(this->location_);', 2.8587170078068964e-05], ['this)', 2.8587170078068964e-05], ['definition.', 2.8587170078068964e-05], ['CPU', 2.8587170078068964e-05], ['command', 2.8587170078068964e-05], ['glibc-stdint.h"', 2.8587170078068964e-05], ['${nbsd_tm_file}', 2.8587170078068964e-05], ['netbsd.opt', 2.8587170078068964e-05], ['rs6000/t-ppccomm"', 2.8587170078068964e-05], ['sparc/sysv4.h', 2.8587170078068964e-05], ['];', 2.8587170078068964e-05], ['related', 2.8587170078068964e-05], ['tune', 2.8587170078068964e-05], ['(operands[0],', 2.8587170078068964e-05], ['prob_unlikely);', 2.8587170078068964e-05], ['brig_function', 2.8587170078068964e-05], ['true),', 2.8587170078068964e-05], ['build_qualified_type', 2.8587170078068964e-05], ['DECL_ARG_TYPE', 2.8587170078068964e-05], ['FUNCTION_DECL', 2.8587170078068964e-05], ['variant', 2.8587170078068964e-05], ['attribute;', 2.8587170078068964e-05], ['attribute_spec.handler.', 2.8587170078068964e-05], ['(no_add_attrs))', 2.8587170078068964e-05], ['(TREE_VALUE', 2.8587170078068964e-05], ['BBs.', 2.8587170078068964e-05], ['BBs', 2.8587170078068964e-05], ['(i)', 2.8587170078068964e-05], ['(PATTERN', 2.8587170078068964e-05], ['modified', 2.8587170078068964e-05], ['"\\nbecause', 2.8587170078068964e-05], ['Statement*);', 2.8587170078068964e-05], ['std::cerr', 2.8587170078068964e-05], ['(likely', 2.8587170078068964e-05], ['nl', 2.8587170078068964e-05], ['SP', 2.8587170078068964e-05], ['Token', 2.8587170078068964e-05], ['(p[1]', 2.8587170078068964e-05], ['character.', 2.8587170078068964e-05], ['is_exported,', 2.8587170078068964e-05], ['(Statement', 2.8587170078068964e-05], ['this->start_scope', 2.8587170078068964e-05], ['*p);', 2.8587170078068964e-05], ['clause");', 2.8587170078068964e-05], ['named_object;', 2.8587170078068964e-05], ['&this->rv', 2.8587170078068964e-05], ['(vr0_min,', 2.8587170078068964e-05], ['modules.dim;', 2.8587170078068964e-05], ['(builtin_type,', 2.8587170078068964e-05], ['brig_function::int_constant_value', 2.8587170078068964e-05], ['either:', 2.8587170078068964e-05], ['(this->expr()', 2.8587170078068964e-05], ['enc', 2.8587170078068964e-05], ['src->ast_format(gogo).c_str());', 2.8587170078068964e-05], ['operand);', 2.8587170078068964e-05], ['symbol_base', 2.8587170078068964e-05], ['go_preserve_from_gc(decl);', 2.8587170078068964e-05], ['fold_build2_loc(location.gcc_location(),', 2.8587170078068964e-05], ['type_tree,', 2.8587170078068964e-05], ['function->get_tree();', 2.8587170078068964e-05], ['Statement::make_block_statement(b,', 2.8587170078068964e-05], ['range_object,', 2.8587170078068964e-05], ['%<{%>");', 2.8587170078068964e-05], ['this->gogo_->mark_locals_used();', 2.8587170078068964e-05], ['this->gogo_->add_statement(s);', 2.8587170078068964e-05], ['(t->ctype);', 2.8587170078068964e-05], ['StickyBit', 2.8587170078068964e-05], ['Underflow', 2.8587170078068964e-05], ['concept.', 2.8587170078068964e-05], ['satisfied.', 2.8587170078068964e-05], ['requirements', 2.8587170078068964e-05], ['"expressions.h"', 2.5988336434608148e-05], ['Type::lookup_float_type("float64");', 2.5988336434608148e-05], ['Type::lookup_complex_type("complex128");', 2.5988336434608148e-05], ['Runtime::Function', 2.5988336434608148e-05], ['matching', 2.5988336434608148e-05], ['concat', 2.5988336434608148e-05], ['operations', 2.5988336434608148e-05], ['decimal', 2.5988336434608148e-05], ['*pexpr;', 2.5988336434608148e-05], ['"%s",', 2.5988336434608148e-05], ['effects.', 2.5988336434608148e-05], ['Expression::make_nil(location);', 2.5988336434608148e-05], ['type:', 2.5988336434608148e-05], ['newly', 2.5988336434608148e-05], ['(this->classification_', 2.5988336434608148e-05], ['Expression::make_boolean(true,', 2.5988336434608148e-05], ['do_type()', 2.5988336434608148e-05], ['Type::traverse(this->type_,', 2.5988336434608148e-05], ['enclosed', 2.5988336434608148e-05], ['gogo->backend()->convert_expression(btype,', 2.5988336434608148e-05], ['this->expr_->get_backend(context);', 2.5988336434608148e-05], ['context->type;', 2.5988336434608148e-05], ['middle-end', 2.5988336434608148e-05], ['little', 2.5988336434608148e-05], ['no,', 2.5988336434608148e-05], ['fntype;', 2.5988336434608148e-05], ['(no->is_function())', 2.5988336434608148e-05], ['("invalid', 2.5988336434608148e-05], ['Btype', 2.5988336434608148e-05], ['"}";', 2.5988336434608148e-05], ['visible', 2.5988336434608148e-05], ['(this->val_', 2.5988336434608148e-05], ['constant");', 2.5988336434608148e-05], ['this->location()))', 2.5988336434608148e-05], ['integer,', 2.5988336434608148e-05], ['pos', 2.5988336434608148e-05], ['lose', 2.5988336434608148e-05], ['UTF-8', 2.5988336434608148e-05], ['"(";', 2.5988336434608148e-05], ['unsafe', 2.5988336434608148e-05], ['OPERATOR_AND)', 2.5988336434608148e-05], ['instead.', 2.5988336434608148e-05], ['ue', 2.5988336434608148e-05], ['small', 2.5988336434608148e-05], ['comparisons.', 2.5988336434608148e-05], ['(st', 2.5988336434608148e-05], ['determining', 2.5988336434608148e-05], ['largest', 2.5988336434608148e-05], ['++pe)', 2.5988336434608148e-05], ['2:', 2.5988336434608148e-05], ['thunks', 2.5988336434608148e-05], ['sfl', 2.5988336434608148e-05], ['Expression::NIL_CHECK_DEFAULT,', 2.5988336434608148e-05], ['necessary', 2.5988336434608148e-05], ['gogo_(gogo),', 2.5988336434608148e-05], ['this->one_arg();', 2.5988336434608148e-05], ['Statement::make_assignment(ref,', 2.5988336434608148e-05], ['32-bit', 2.5988336434608148e-05], ['(%s)",', 2.5988336434608148e-05], ['few', 2.5988336434608148e-05], ['lead', 2.5988336434608148e-05], ['Expression_list;', 2.5988336434608148e-05], ['place', 2.5988336434608148e-05], ['*args', 2.5988336434608148e-05], ['return.', 2.5988336434608148e-05], ['(parameters', 2.5988336434608148e-05], ['bad_index', 2.5988336434608148e-05], ['earlier', 2.5988336434608148e-05], ['Map', 2.5988336434608148e-05], ['count.', 2.5988336434608148e-05], ['bytes.', 2.5988336434608148e-05], ['bytes,', 2.5988336434608148e-05], ['permit', 2.5988336434608148e-05], ['called.', 2.5988336434608148e-05], ['(ins.second)', 2.5988336434608148e-05], ['"type', 2.5988336434608148e-05], ['indexes,', 2.5988336434608148e-05], ['comes', 2.5988336434608148e-05], ['name");', 2.5988336434608148e-05], ['params->end();', 2.5988336434608148e-05], ['construct', 2.5988336434608148e-05], ['model', 2.5988336434608148e-05], ['result_type', 2.5988336434608148e-05], ['compound', 2.5988336434608148e-05], ['definitions.', 2.5988336434608148e-05], ['representable', 2.5988336434608148e-05], ['*val', 2.5988336434608148e-05], ['trees', 2.5988336434608148e-05], ['Visitor', 2.5988336434608148e-05], ['kinds', 2.5988336434608148e-05], ['dependence', 2.5988336434608148e-05], ['outermost', 2.5988336434608148e-05], ['induction', 2.5988336434608148e-05], ['gphi', 2.5988336434608148e-05], ['loop_cand', 2.5988336434608148e-05], ['(loop_cand', 2.5988336434608148e-05], ['(tree,', 2.5988336434608148e-05], ['(use_p,', 2.5988336434608148e-05], ['!gsi_end_p', 2.5988336434608148e-05], ['Support', 2.5988336434608148e-05], ['dest', 2.5988336434608148e-05], ['process', 2.5988336434608148e-05], ['(var,', 2.5988336434608148e-05], ['(dump_flags', 2.5988336434608148e-05], ['TDF_DETAILS))', 2.5988336434608148e-05], ['bb,', 2.5988336434608148e-05], ['Move', 2.5988336434608148e-05], ['(tmp,', 2.5988336434608148e-05], ['datarefs.iterate', 2.5988336434608148e-05], ['sub', 2.5988336434608148e-05], ['consecutive', 2.5988336434608148e-05], ['find_loop_location', 2.5988336434608148e-05], ['op1', 2.5988336434608148e-05], ['d_bool_type,', 2.5988336434608148e-05], ['TYPE_MAIN_VARIANT', 2.5988336434608148e-05], ['fold', 2.5988336434608148e-05], ['(etype,', 2.5988336434608148e-05], ['build_vconvert', 2.5988336434608148e-05], ['build_offset', 2.5988336434608148e-05], ['ptrtype', 2.5988336434608148e-05], ['Tvoid)', 2.5988336434608148e-05], ['null.', 2.5988336434608148e-05], ['d_array_length', 2.5988336434608148e-05], ['Tarray', 2.5988336434608148e-05], ["'u'", 2.5988336434608148e-05], ['p[1]', 2.5988336434608148e-05], ['c);', 2.5988336434608148e-05], ['p++;', 2.5988336434608148e-05], ['5;', 2.5988336434608148e-05], ['(parent)', 2.5988336434608148e-05], ['BRIG_TYPE_BASE_MASK;', 2.5988336434608148e-05], ['HSAIL', 2.5988336434608148e-05], ['gccbrig_type_vector_subparts', 2.5988336434608148e-05], ['rounding', 2.5988336434608148e-05], ['(GOTO_EXPR,', 2.5988336434608148e-05], ['processing', 2.5988336434608148e-05], ["'\\n'", 2.5988336434608148e-05], ['decimal.', 2.5988336434608148e-05], ['filename;', 2.5988336434608148e-05], ['ps', 2.5988336434608148e-05], ['*ps', 2.5988336434608148e-05], ['Same', 2.5988336434608148e-05], ['benefit', 2.5988336434608148e-05], ['runtime.', 2.5988336434608148e-05], ['made', 2.5988336434608148e-05], ['suitable', 2.5988336434608148e-05], ['indirectly', 2.5988336434608148e-05], ['e.g.', 2.5988336434608148e-05], ['bool.', 2.5988336434608148e-05], ['EXP.', 2.5988336434608148e-05], ['entire', 2.5988336434608148e-05], ['assumptions', 2.5988336434608148e-05], ['BaseClass', 2.5988336434608148e-05], ['aggregate', 2.5988336434608148e-05], ['d_mark_addressable', 2.5988336434608148e-05], ['(t1))', 2.5988336434608148e-05], ['BITS_PER_UNIT);', 2.5988336434608148e-05], ['make_unsigned_type', 2.5988336434608148e-05], ['fill', 2.5988336434608148e-05], ['TYPE_NAME', 2.5988336434608148e-05], ['INDEX', 2.5988336434608148e-05], ['Tfunction)', 2.5988336434608148e-05], ['current_function_decl;', 2.5988336434608148e-05], ['src_type', 2.5988336434608148e-05], ['rest', 2.5988336434608148e-05], ['directive', 2.5988336434608148e-05], ['val[len', 2.5988336434608148e-05], ['prec', 2.5988336434608148e-05], ['(prec);', 2.5988336434608148e-05], ['mode.', 2.5988336434608148e-05], ['(precision', 2.5988336434608148e-05], ['(val[len', 2.5988336434608148e-05], ['d', 2.5988336434608148e-05], ['l1', 2.5988336434608148e-05], ['l1)', 2.5988336434608148e-05], ['val[l0]', 2.5988336434608148e-05], ['l0)', 2.5988336434608148e-05], ['carry', 2.5988336434608148e-05], ['directly.', 2.5988336434608148e-05], ['significant', 2.5988336434608148e-05], ['(null_pointer_node);', 2.5988336434608148e-05], ['insert_aggregate_field', 2.5988336434608148e-05], ['(tk', 2.5988336434608148e-05], ['Adds', 2.5988336434608148e-05], ['&name,', 2.5988336434608148e-05], ['machine_mode', 2.5988336434608148e-05], ['available', 2.5988336434608148e-05], ['(fn', 2.5988336434608148e-05], ['Stream*', 2.5988336434608148e-05], ['%d:', 2.5988336434608148e-05], ['package_name', 2.5988336434608148e-05], ['++iter;', 2.5988336434608148e-05], ['Append', 2.5988336434608148e-05], ['proof_state::iterator', 2.5988336434608148e-05], ['subsume', 2.5988336434608148e-05], ['(*i,', 2.5988336434608148e-05], ['identical.', 2.5988336434608148e-05], ['arrays.', 2.5988336434608148e-05], ['(e->e1->op', 2.5988336434608148e-05], ['Implementation', 2.5988336434608148e-05], ['TYPE_CALL_MULTIPLE_RESULT:', 2.5988336434608148e-05], ['reason))', 2.5988336434608148e-05], ['circular', 2.5988336434608148e-05], ['bfields;', 2.5988336434608148e-05], ['pointer_string_type,', 2.5988336434608148e-05], ['Type::TYPE_STRUCT:', 2.5988336434608148e-05], ['Type::TYPE_NAMED:', 2.5988336434608148e-05], ['(size', 2.5988336434608148e-05], ['ptrsize);', 2.5988336434608148e-05], ['saw', 2.5988336434608148e-05], ['_("different', 2.5988336434608148e-05], ["ret->push_back('", 2.5988336434608148e-05], ['ptype,', 2.5988336434608148e-05], ['imp->location()));', 2.5988336434608148e-05], ['tref->set_is_lvalue();', 2.5988336434608148e-05], ['(this->seen_alias_)', 2.5988336434608148e-05], ['this->seen_in_get_backend_', 2.5988336434608148e-05], ['param', 2.5988336434608148e-05], ['defined,', 2.5988336434608148e-05], ['configure', 2.5988336434608148e-05], ['thread', 2.5988336434608148e-05], ['x86_64-*-*)', 2.5988336434608148e-05], ['d_target_objs="${d_target_objs}', 2.5988336434608148e-05], ['detect', 2.5988336434608148e-05], ['i386/x86-64.h', 2.5988336434608148e-05], ['rs6000/sysv4.h', 2.5988336434608148e-05], ['4));', 2.5988336434608148e-05], ['addr2', 2.5988336434608148e-05], ['(addr2,', 2.5988336434608148e-05], ['(gen_branch_true', 2.5988336434608148e-05], ['tmp2));', 2.5988336434608148e-05], ['(gen_extendqisi2', 2.5988336434608148e-05], ['(QImode,', 2.5988336434608148e-05], ['def', 2.5988336434608148e-05], ['BIND_EXPR_BODY', 2.5988336434608148e-05], ['snprintf', 2.5988336434608148e-05], ['d_finish_decl', 2.5988336434608148e-05], ['function;', 2.5988336434608148e-05], ['across', 2.5988336434608148e-05], ['PARM_DECL,', 2.5988336434608148e-05], ['(OPT_Wattributes,', 2.5988336434608148e-05], ['3]', 2.5988336434608148e-05], ['NEXT_INSN', 2.5988336434608148e-05], ['(i))', 2.5988336434608148e-05], ['GET_MODE', 2.5988336434608148e-05], ['(GET_CODE', 2.5988336434608148e-05], ['(comp,', 2.5988336434608148e-05], ['"("', 2.5988336434608148e-05], ['Applies', 2.5988336434608148e-05], ['barriers', 2.5988336434608148e-05], ['std::vector<Bstatement*>', 2.5988336434608148e-05], ['this->inserter_', 2.5988336434608148e-05], ['Statement_inserter', 2.5988336434608148e-05], ['this->function_', 2.5988336434608148e-05], ['Blabel*', 2.5988336434608148e-05], ['widest2_int', 2.5988336434608148e-05], ['modules[i];', 2.5988336434608148e-05], ['(false),', 2.5988336434608148e-05], ['(std::string', 2.5988336434608148e-05], ['append_statement', 2.5988336434608148e-05], ['go_inform(src->location(),', 2.5988336434608148e-05], ['(pat,', 2.5988336434608148e-05], ['m_parent.get_brig_operand_entry', 2.5988336434608148e-05], ['uint32_type_node;', 2.5988336434608148e-05], ['(operands.at', 2.5988336434608148e-05], ['val_temp', 2.5988336434608148e-05], ['Unnamed_label(this->location());', 2.5988336434608148e-05], ['ExpressionList', 2.5988336434608148e-05], ['Z2', 2.5988336434608148e-05], ['b.image);', 2.5988336434608148e-05], ['(parent,', 2.5988336434608148e-05], ['(constr,', 2.5988336434608148e-05], ['(cur);', 2.5988336434608148e-05], ['Parameter', 2.3389502791147332e-05], ['code)', 2.3389502791147332e-05], ['8,', 2.3389502791147332e-05], ['(or', 2.3389502791147332e-05], ['filename,', 2.3389502791147332e-05], ['LOC.', 2.3389502791147332e-05], ['*type', 2.3389502791147332e-05], ['block;', 2.3389502791147332e-05], ['(fndecl,', 2.3389502791147332e-05], ['calls.', 2.3389502791147332e-05], ['HOST_BITS_PER_WIDE_INT);', 2.3389502791147332e-05], ['"statements.h"', 2.3389502791147332e-05], ['"lex.h"', 2.3389502791147332e-05], ['OPERATOR_MULT', 2.3389502791147332e-05], ['obj', 2.3389502791147332e-05], ['descriptor,', 2.3389502791147332e-05], ['although', 2.3389502791147332e-05], ['mpz_clear(ival);', 2.3389502791147332e-05], ['this->report_error(_("invalid', 2.3389502791147332e-05], ['(this->variable_->is_variable())', 2.3389502791147332e-05], ['register.', 2.3389502791147332e-05], ['word', 2.3389502791147332e-05], ['this->function_,', 2.3389502791147332e-05], ['Statement_inserter*,', 2.3389502791147332e-05], ['determined', 2.3389502791147332e-05], ['!this->type_->is_abstract())', 2.3389502791147332e-05], ['context);', 2.3389502791147332e-05], ['",";', 2.3389502791147332e-05], ['yet,', 2.3389502791147332e-05], ['64)', 2.3389502791147332e-05], ['reliably', 2.3389502791147332e-05], ['10)', 2.3389502791147332e-05], ['*type,', 2.3389502791147332e-05], ["'-')", 2.3389502791147332e-05], ['do_lower(Gogo*,', 2.3389502791147332e-05], ['location))', 2.3389502791147332e-05], ['expr_type', 2.3389502791147332e-05], ['literal,', 2.3389502791147332e-05], ['therefore', 2.3389502791147332e-05], ['indirection', 2.3389502791147332e-05], ['Array_index_expression*', 2.3389502791147332e-05], ['bother', 2.3389502791147332e-05], ['(!ok)', 2.3389502791147332e-05], ['&issued_error);', 2.3389502791147332e-05], ['(this->op_)', 2.3389502791147332e-05], ['(type->is_error())', 2.3389502791147332e-05], ['integer"));', 2.3389502791147332e-05], ['right_type,', 2.3389502791147332e-05], ['elsewhere.', 2.3389502791147332e-05], ['according', 2.3389502791147332e-05], ['left_type', 2.3389502791147332e-05], ['operand,', 2.3389502791147332e-05], ['OPERATOR_EQEQ', 2.3389502791147332e-05], ['OPERATOR_OROR:', 2.3389502791147332e-05], ['OPERATOR_ANDAND:', 2.3389502791147332e-05], ['nc->set_invalid();', 2.3389502791147332e-05], ['memcmp', 2.3389502791147332e-05], ['field_index,', 2.3389502791147332e-05], ['EXPR,', 2.3389502791147332e-05], ['inherited', 2.3389502791147332e-05], ['slightly', 2.3389502791147332e-05], ['imp->advance(4);', 2.3389502791147332e-05], ['(this->is_error_expression())', 2.3389502791147332e-05], ['4:', 2.3389502791147332e-05], ['Struct_field_list();', 2.3389502791147332e-05], ['Type::make_struct_type(sfl,', 2.3389502791147332e-05], ['st->set_is_struct_incomparable();', 2.3389502791147332e-05], ['away', 2.3389502791147332e-05], ['Node::ESCAPE_NONE)', 2.3389502791147332e-05], ['go_assert(args', 2.3389502791147332e-05], ['reach', 2.3389502791147332e-05], ['args->front();', 2.3389502791147332e-05], ['e2', 2.3389502791147332e-05], ['cap_arg,', 2.3389502791147332e-05], ['mem', 2.3389502791147332e-05], ['5,', 2.3389502791147332e-05], ['barrier.', 2.3389502791147332e-05], ['Statement::make_if_statement(cond,', 2.3389502791147332e-05], ['else_block,', 2.3389502791147332e-05], ['treat', 2.3389502791147332e-05], ['force', 2.3389502791147332e-05], ['changes', 2.3389502791147332e-05], ['additional', 2.3389502791147332e-05], ['load', 2.3389502791147332e-05], ['this->get_function_type();', 2.3389502791147332e-05], ['caller.', 2.3389502791147332e-05], ['parameter,', 2.3389502791147332e-05], ['_("invalid', 2.3389502791147332e-05], ['this->call_->call_expression();', 2.3389502791147332e-05], ['(ce', 2.3389502791147332e-05], ['converts', 2.3389502791147332e-05], ['bad_index,', 2.3389502791147332e-05], ['Simple', 2.3389502791147332e-05], ['Struct_field*', 2.3389502791147332e-05], ['introduce', 2.3389502791147332e-05], ['type->named_type();', 2.3389502791147332e-05], ['allocation', 2.3389502791147332e-05], ['space,', 2.3389502791147332e-05], ['vals;', 2.3389502791147332e-05], ['(this->indexes_', 2.3389502791147332e-05], ['lookup', 2.3389502791147332e-05], ['"duplicate', 2.3389502791147332e-05], ['literal");', 2.3389502791147332e-05], ['gives', 2.3389502791147332e-05], ['Typed_identifier', 2.3389502791147332e-05], ['p;', 2.3389502791147332e-05], ['this->clear();', 2.3389502791147332e-05], ['64,', 2.3389502791147332e-05], ['"dmd/module.h"', 2.3389502791147332e-05], ['d->isym', 2.3389502791147332e-05], ['imports', 2.3389502791147332e-05], ['symbols.', 2.3389502791147332e-05], ['(&v);', 2.3389502791147332e-05], ['interchanged', 2.3389502791147332e-05], ['*loop,', 2.3389502791147332e-05], ['<gphi', 2.3389502791147332e-05], ['(gsi);', 2.3389502791147332e-05], ['!', 2.3389502791147332e-05], ['iteration', 2.3389502791147332e-05], ['&);', 2.3389502791147332e-05], ['(level', 2.3389502791147332e-05], ['computes', 2.3389502791147332e-05], ['(0));', 2.3389502791147332e-05], ['TYPE_SIZE_UNIT', 2.3389502791147332e-05], ['pass_data', 2.3389502791147332e-05], ['proper', 2.3389502791147332e-05], ['"dmd/expression.h"', 2.3389502791147332e-05], ['CODE', 2.3389502791147332e-05], ['assumes', 2.3389502791147332e-05], ['(expr),', 2.3389502791147332e-05], ['first,', 2.3389502791147332e-05], ['fold_build1', 2.3389502791147332e-05], ['(same_type_p', 2.3389502791147332e-05], ['build_condition', 2.3389502791147332e-05], ['run-time', 2.3389502791147332e-05], ['(get_classinfo_decl', 2.3389502791147332e-05], ['void.', 2.3389502791147332e-05], ['(value);', 2.3389502791147332e-05], ['automatically', 2.3389502791147332e-05], ['((c', 2.3389502791147332e-05], ['way.', 2.3389502791147332e-05], ['encoded', 2.3389502791147332e-05], ['*name,', 2.3389502791147332e-05], ['FUNCTION_DECL,', 2.3389502791147332e-05], ['flags);', 2.3389502791147332e-05], ['depend', 2.3389502791147332e-05], ['(brig_to_generic', 2.3389502791147332e-05], ['&parent)', 2.3389502791147332e-05], ['bitsize_int', 2.3389502791147332e-05], ['(element_type)', 2.3389502791147332e-05], ['(BrigOpcode16_t', 2.3389502791147332e-05], ['BrigInstMod', 2.3389502791147332e-05], ['BrigInstCmp', 2.3389502791147332e-05], ['(i));', 2.3389502791147332e-05], ['BRIG_TYPE_BASE_MASK)', 2.3389502791147332e-05], ['(*brig_inst,', 2.3389502791147332e-05], ['this->location_;', 2.3389502791147332e-05], ['malformed', 2.3389502791147332e-05], ["'\\0'", 2.3389502791147332e-05], ['(got', 2.3389502791147332e-05], ['walk', 2.3389502791147332e-05], ['tests', 2.3389502791147332e-05], ['diagnostics.', 2.3389502791147332e-05], ['split', 2.3389502791147332e-05], ['particular', 2.3389502791147332e-05], ['total', 2.3389502791147332e-05], ['limit', 2.3389502791147332e-05], ['overflow.', 2.3389502791147332e-05], ['stride,', 2.3389502791147332e-05], ['anything.', 2.3389502791147332e-05], ['identified', 2.3389502791147332e-05], ['OFFSET', 2.3389502791147332e-05], ['complete', 2.3389502791147332e-05], ['pkgpath,', 2.3389502791147332e-05], ['this->write_c_string("\\n");', 2.3389502791147332e-05], ['std::vector<Named_object*>*', 2.3389502791147332e-05], ['priority', 2.3389502791147332e-05], ['graph', 2.3389502791147332e-05], ['graph.', 2.3389502791147332e-05], ['routines', 2.3389502791147332e-05], ['"tree-iterator.h"', 2.3389502791147332e-05], ['structs.', 2.3389502791147332e-05], ['arrays,', 2.3389502791147332e-05], ['Interface', 2.3389502791147332e-05], ['Some', 2.3389502791147332e-05], ['tmemcmp', 2.3389502791147332e-05], ['build_struct_literal', 2.3389502791147332e-05], ['initialization.', 2.3389502791147332e-05], ['(field))', 2.3389502791147332e-05], ['init);', 2.3389502791147332e-05], ['T,', 2.3389502791147332e-05], ['constructed', 2.3389502791147332e-05], ['(MEM_REF,', 2.3389502791147332e-05], ['turned', 2.3389502791147332e-05], ['(len,', 2.3389502791147332e-05], ['TYPE_ARG_TYPES', 2.3389502791147332e-05], ['missing', 2.3389502791147332e-05], ['derived', 2.3389502791147332e-05], ['(cd,', 2.3389502791147332e-05], ['FRAMEINFO_TYPE', 2.3389502791147332e-05], ['(cd', 2.3389502791147332e-05], ['(expr', 2.3389502791147332e-05], ['unsigned_int_type', 2.3389502791147332e-05], ['fatal_error', 2.3389502791147332e-05], ['safe_uhwi', 2.3389502791147332e-05], ['*xval,', 2.3389502791147332e-05], ['wi::max_value', 2.3389502791147332e-05], ['extension', 2.3389502791147332e-05], ['Fill', 2.3389502791147332e-05], ['wi::mask', 2.3389502791147332e-05], ['val[i++]', 2.3389502791147332e-05], ['&x)', 2.3389502791147332e-05], ['n)', 2.3389502791147332e-05], ['(m', 2.3389502791147332e-05], ['wi::round_down_for_mask', 2.3389502791147332e-05], ['16', 2.3389502791147332e-05], ['wi::round_up_for_mask', 2.3389502791147332e-05], ['VALUE_TYPE', 2.3389502791147332e-05], ['32,', 2.3389502791147332e-05], ['2013-2019', 2.3389502791147332e-05], ['this->init_', 2.3389502791147332e-05], ['d_comdat_linkage', 2.3389502791147332e-05], ['mangle_internal_decl', 2.3389502791147332e-05], ['decl.', 2.3389502791147332e-05], ['Push', 2.3389502791147332e-05], ['built_in_attributes[(int)', 2.3389502791147332e-05], ['ARG9,', 2.3389502791147332e-05], ['indicates', 2.3389502791147332e-05], ['build_lang_type', 2.3389502791147332e-05], ['TYPE_DECL,', 2.3389502791147332e-05], ['(rtype->named_type()', 2.3389502791147332e-05], ['Turn', 2.3389502791147332e-05], ['identifier.', 2.3389502791147332e-05], ['CONJ_CONSTR:', 2.3389502791147332e-05], ['check_term', 2.3389502791147332e-05], ['(iter', 2.3389502791147332e-05], ['c2', 2.3389502791147332e-05], ['support.', 2.3389502791147332e-05], ['(tmpl,', 2.3389502791147332e-05], ['e->e2->type,', 2.3389502791147332e-05], ['tb2->ty', 2.3389502791147332e-05], ['build_expr_dtor', 2.3389502791147332e-05], ['arithmetic', 2.3389502791147332e-05], ['e->type->toBasetype', 2.3389502791147332e-05], ['(cond', 2.3389502791147332e-05], ['instance.', 2.3389502791147332e-05], ['program.', 2.3389502791147332e-05], ['DECL_RESULT', 2.3389502791147332e-05], ['&bfields);', 2.3389502791147332e-05], ['TYPE_SINK:', 2.3389502791147332e-05], ['Typed_identifier_list', 2.3389502791147332e-05], ['Type::TYPE_POINTER:', 2.3389502791147332e-05], ['Type::TYPE_ARRAY:', 2.3389502791147332e-05], ['Type::TYPE_INTERFACE:', 2.3389502791147332e-05], ['s,', 2.3389502791147332e-05], ['go_assert((offset', 2.3389502791147332e-05], ['go_error_at(Linemap::unknown_location(),', 2.3389502791147332e-05], ['named_type', 2.3389502791147332e-05], ['named_type;', 2.3389502791147332e-05], ['Typed_identifier_list;', 2.3389502791147332e-05], ['globally', 2.3389502791147332e-05], ['go_open_quote(),', 2.3389502791147332e-05], ['n.c_str(),', 2.3389502791147332e-05], ['(this->is_alias_)', 2.3389502791147332e-05], ['configuration', 2.3389502791147332e-05], ['shared', 2.3389502791147332e-05], ['space.', 2.3389502791147332e-05], ['yes)', 2.3389502791147332e-05], ['supported."', 2.3389502791147332e-05], ['netbsd-elf.opt"', 2.3389502791147332e-05], ['$with_cpu', 2.3389502791147332e-05], ['tune_32', 2.3389502791147332e-05], ['MIPS_ABI_DEFAULT=ABI_32"', 2.3389502791147332e-05], ['tmake_file="rs6000/t-fprules', 2.3389502791147332e-05], ['"val=\\$with_$which"', 2.3389502791147332e-05], ['force_into', 2.3389502791147332e-05], ['adjust_address', 2.3389502791147332e-05], ['(dest,', 2.3389502791147332e-05], ['(s2_addr,', 2.3389502791147332e-05], ['GET_MODE_SIZE', 2.3389502791147332e-05], ['&name)', 2.3389502791147332e-05], ['private', 2.3389502791147332e-05], ['extend', 2.3389502791147332e-05], ['alignment);', 2.3389502791147332e-05], ['(bind_expr);', 2.3389502791147332e-05], ['(d->loc),', 2.3389502791147332e-05], ['(global.params.verbose)', 2.3389502791147332e-05], ['(CONST_CAST', 2.3389502791147332e-05], ['append_to_statement_list_force', 2.3389502791147332e-05], ['(decl->sinit)', 2.3389502791147332e-05], ['ignored",', 2.3389502791147332e-05], ['5]', 2.3389502791147332e-05], ['(eq', 2.3389502791147332e-05], ['cstores', 2.3389502791147332e-05], ['NULL_RTX;', 2.3389502791147332e-05], ['reg,', 2.3389502791147332e-05], ['(reg)', 2.3389502791147332e-05], ['GET_CODE', 2.3389502791147332e-05], ['dependency', 2.3389502791147332e-05], ['REG_P', 2.3389502791147332e-05], ['%d]\\n",', 2.3389502791147332e-05], ['(GET_MODE', 2.3389502791147332e-05], ['PREV_INSN', 2.3389502791147332e-05], ['possibly', 2.3389502791147332e-05], ['OFFSET,', 2.3389502791147332e-05], ['(out,', 2.3389502791147332e-05], ['base,', 2.3389502791147332e-05], ['(&x.rv', 2.3389502791147332e-05], ['real_to_hexadecimal', 2.3389502791147332e-05], ['strictly', 2.3389502791147332e-05], ['(label);', 2.3389502791147332e-05], ['this->linesize_;', 2.3389502791147332e-05], ['(*value', 2.3389502791147332e-05], ['0x80', 2.3389502791147332e-05], ['H', 2.3389502791147332e-05], ['this->break_label_', 2.3389502791147332e-05], ['(label)', 2.3389502791147332e-05], ['(this->break_label_', 2.3389502791147332e-05], ['this->do_jump', 2.3389502791147332e-05], ['gogo_(gogo)', 2.3389502791147332e-05], ['traverse_expressions),', 2.3389502791147332e-05], ['*pexpr', 2.3389502791147332e-05], ['indent', 2.3389502791147332e-05], ['named_function,', 2.3389502791147332e-05], ['tv', 2.3389502791147332e-05], ['(sign', 2.3389502791147332e-05], ['wi::zero', 2.3389502791147332e-05], ['(wi::gt_p', 2.3389502791147332e-05], ['analysis.', 2.3389502791147332e-05], ['j++;', 2.3389502791147332e-05], ['&new_decoded_options[j]);', 2.3389502791147332e-05], ['TSI_NEW_STMT);', 2.3389502791147332e-05], ['strstr', 2.3389502791147332e-05], ['(launcher)', 2.3389502791147332e-05], ['(context_arg)', 2.3389502791147332e-05], ['expand_builtin', 2.3389502791147332e-05], ['(uint64_type_node,', 2.3389502791147332e-05], ['correctly.', 2.3389502791147332e-05], ['connected', 2.3389502791147332e-05], ['(brig_inst.type);', 2.3389502791147332e-05], ['(segment', 2.3389502791147332e-05], ['TILEPRO', 2.3389502791147332e-05], ['type_tree);', 2.3389502791147332e-05], ['expr_tree);', 2.3389502791147332e-05], ['this->error_variable();', 2.3389502791147332e-05], ['do_dump_statement(Ast_dump_context*)', 2.3389502791147332e-05], ['Expression::make_call_result(call,', 2.3389502791147332e-05], ['break_label,', 2.3389502791147332e-05], ['clauses', 2.3389502791147332e-05], ['next_index_temp', 2.3389502791147332e-05], ['may_be_sink,', 2.3389502791147332e-05], ['")"', 2.3389502791147332e-05], ['(token->is_identifier())', 2.3389502791147332e-05], ['ID2', 2.3389502791147332e-05], ['%<=%>");', 2.3389502791147332e-05], ['this->expression_list(NULL,', 2.3389502791147332e-05], ['any_new', 2.3389502791147332e-05], ['vars', 2.3389502791147332e-05], ['&any_new,', 2.3389502791147332e-05], ['tree_type', 2.3389502791147332e-05], ['(gccbrig_hsa_type_bit_size', 2.3389502791147332e-05], ['BASIC', 2.3389502791147332e-05], ['TwoForty', 2.3389502791147332e-05], ['Z1', 2.3389502791147332e-05], ['(image,', 2.3389502791147332e-05], ['"%6d:', 2.3389502791147332e-05], ['verbose_index++,', 2.3389502791147332e-05], ['FLOOR', 2.3389502791147332e-05], ['V9;', 2.3389502791147332e-05], ['Two)', 2.3389502791147332e-05], ['Half)', 2.3389502791147332e-05], ['conjoin_constraints', 2.3389502791147332e-05], ['(parms,', 2.3389502791147332e-05], ['deduction', 2.3389502791147332e-05], ['constr,', 2.3389502791147332e-05], ['get_constraints', 2.3389502791147332e-05], ['substituting', 2.3389502791147332e-05], ['satisfy_constraint_1', 2.3389502791147332e-05], ['Pointer', 2.079066914768652e-05], ['n1', 2.079066914768652e-05], ['2018-2019', 2.079066914768652e-05], ['ctor.', 2.079066914768652e-05], ['records', 2.079066914768652e-05], ['open', 2.079066914768652e-05], ['(block', 2.079066914768652e-05], ['&wi,', 2.079066914768652e-05], ['happens', 2.079066914768652e-05], ['rhs;', 2.079066914768652e-05], ['assigning', 2.079066914768652e-05], ['non-pointer', 2.079066914768652e-05], ['obj,', 2.079066914768652e-05], ['(type->integer_type()', 2.079066914768652e-05], ['val_type', 2.079066914768652e-05], ['do_get_backend(Translate_context*)', 2.079066914768652e-05], ['live', 2.079066914768652e-05], ['gogo->backend()->var_expression(bvar,', 2.079066914768652e-05], ['TRAVERSE_CONTINUE', 2.079066914768652e-05], ['no);', 2.079066914768652e-05], ['this->type()->get_backend(gogo);', 2.079066914768652e-05], ['binit', 2.079066914768652e-05], ['"]"', 2.079066914768652e-05], ['"reference', 2.079066914768652e-05], ['val_;', 2.079066914768652e-05], ['What', 2.079066914768652e-05], ['info.', 2.079066914768652e-05], ['(this->is_character_constant_)', 2.079066914768652e-05], ['lets', 2.079066914768652e-05], ['identify', 2.079066914768652e-05], ['efb->write_c_string(")");', 2.079066914768652e-05], ['known.', 2.079066914768652e-05], ['Traverse(traverse_expressions),', 2.079066914768652e-05], ['for.', 2.079066914768652e-05], ['infinite', 2.079066914768652e-05], ['ever', 2.079066914768652e-05], ['type->points_to()', 2.079066914768652e-05], ['Copy.', 2.079066914768652e-05], ['Runtime::make_call(code,', 2.079066914768652e-05], ['NULL));', 2.079066914768652e-05], ['imp->require_c_string(")");', 2.079066914768652e-05], ['ast_dump_context->dump_expression(this->expr_);', 2.079066914768652e-05], ['escape.', 2.079066914768652e-05], ['OPERATOR_MULT)', 2.079066914768652e-05], ['(ve', 2.079066914768652e-05], ['check.', 2.079066914768652e-05], ['done,', 2.079066914768652e-05], ['*issued_error', 2.079066914768652e-05], ['mpz_set_ui(val,', 2.079066914768652e-05], ['program,', 2.079066914768652e-05], ['crash,', 2.079066914768652e-05], ['left_type,', 2.079066914768652e-05], ['left_type;', 2.079066914768652e-05], ['typed', 2.079066914768652e-05], ['effectively', 2.079066914768652e-05], ['(ret)', 2.079066914768652e-05], ['round', 2.079066914768652e-05], ['right_val,', 2.079066914768652e-05], ['st->fields();', 2.079066914768652e-05], ['++pf,', 2.079066914768652e-05], ['a2', 2.079066914768652e-05], ['a2,', 2.079066914768652e-05], ['Both', 2.079066914768652e-05], ['right);', 2.079066914768652e-05], ['expression");', 2.079066914768652e-05], ['1:', 2.079066914768652e-05], ['Named_object*>', 2.079066914768652e-05], ['Function_type', 2.079066914768652e-05], ['(if', 2.079066914768652e-05], ['(this->code_)', 2.079066914768652e-05], ['(args->size()', 2.079066914768652e-05], ['++pa)', 2.079066914768652e-05], ['64-bit', 2.079066914768652e-05], ['"argument', 2.079066914768652e-05], ['type",', 2.079066914768652e-05], ['arg1,', 2.079066914768652e-05], ['directly,', 2.079066914768652e-05], ['permits', 2.079066914768652e-05], ['anyhow.', 2.079066914768652e-05], ['(this->args_', 2.079066914768652e-05], ['fntype->results();', 2.079066914768652e-05], ['evaluation.', 2.079066914768652e-05], ['did', 2.079066914768652e-05], ['works', 2.079066914768652e-05], ['++i;', 2.079066914768652e-05], ['pr', 2.079066914768652e-05], ['ts', 2.079066914768652e-05], ['(end', 2.079066914768652e-05], ['array_type', 2.079066914768652e-05], ['enc;', 2.079066914768652e-05], ['internally', 2.079066914768652e-05], ['Expression::make_var_reference(no,', 2.079066914768652e-05], ['effect', 2.079066914768652e-05], ['type->interface_type();', 2.079066914768652e-05], ['false)', 2.079066914768652e-05], ['this->vals_->begin();', 2.079066914768652e-05], ['"in', 2.079066914768652e-05], ['point.', 2.079066914768652e-05], ['to,', 2.079066914768652e-05], ['literals.', 2.079066914768652e-05], ['further', 2.079066914768652e-05], ['(no->is_variable()', 2.079066914768652e-05], ['Allocate', 2.079066914768652e-05], ['this->channel_->type()->channel_type();', 2.079066914768652e-05], ['out.', 2.079066914768652e-05], ['represents', 2.079066914768652e-05], ['defines', 2.079066914768652e-05], ['constructor.', 2.079066914768652e-05], ['this->u_.float_val,', 2.079066914768652e-05], ['Test', 2.079066914768652e-05], ['32)', 2.079066914768652e-05], ['Visitor::visit;', 2.079066914768652e-05], ['(decl', 2.079066914768652e-05], ['(decl),', 2.079066914768652e-05], ['overridden', 2.079066914768652e-05], ['considered', 2.079066914768652e-05], ['Tclass)', 2.079066914768652e-05], ['tries', 2.079066914768652e-05], ['far', 2.079066914768652e-05], ['initializing', 2.079066914768652e-05], ['next;', 2.079066914768652e-05], ['reduction_p', 2.079066914768652e-05], ['dyn_cast', 2.079066914768652e-05], ['gsi_next', 2.079066914768652e-05], ['(lhs,', 2.079066914768652e-05], ['(var));', 2.079066914768652e-05], ['math', 2.079066914768652e-05], ['INIT', 2.079066914768652e-05], ['successfully', 2.079066914768652e-05], ['new_var', 2.079066914768652e-05], ['&dr);', 2.079066914768652e-05], ['DR_ACCESS_STRIDE', 2.079066914768652e-05], ['(NULL_TREE),', 2.079066914768652e-05], ['(dr);', 2.079066914768652e-05], ['problem', 2.079066914768652e-05], ['SRC', 2.079066914768652e-05], ['j;', 2.079066914768652e-05], ['ii', 2.079066914768652e-05], ['(ref,', 2.079066914768652e-05], ['1)))', 2.079066914768652e-05], ['three', 2.079066914768652e-05], ['(integer_zerop', 2.079066914768652e-05], ['(a)', 2.079066914768652e-05], ['Collect', 2.079066914768652e-05], ['in.', 2.079066914768652e-05], ['(0);', 2.079066914768652e-05], ['OP1.', 2.079066914768652e-05], ['INTEGRAL_TYPE_P', 2.079066914768652e-05], ['(TYPE_MAIN_VARIANT', 2.079066914768652e-05], ['null_pointer_node);', 2.079066914768652e-05], ['dinteger_t', 2.079066914768652e-05], ['()->pointerTo', 2.079066914768652e-05], ['(ptrtype,', 2.079066914768652e-05], ['(exp)));', 2.079066914768652e-05], ['*ce', 2.079066914768652e-05], ['(count', 2.079066914768652e-05], ['mean', 2.079066914768652e-05], ['Checks', 2.079066914768652e-05], ['tb->ty', 2.079066914768652e-05], ["'_'", 2.079066914768652e-05], ["'.')", 2.079066914768652e-05], ['TypeInfo_Class', 2.079066914768652e-05], ['XALLOCAVEC', 2.079066914768652e-05], ['OPERANDS[0]', 2.079066914768652e-05], ['mask);', 2.079066914768652e-05], ['OPERANDS[1]', 2.079066914768652e-05], ['(BIT_AND_EXPR,', 2.079066914768652e-05], ['position', 2.079066914768652e-05], ['tell', 2.079066914768652e-05], ['CALL_EXPR)', 2.079066914768652e-05], ['regular', 2.079066914768652e-05], ['consider', 2.079066914768652e-05], ['copies', 2.079066914768652e-05], ['8', 2.079066914768652e-05], ['fd,', 2.079066914768652e-05], ['stat', 2.079066914768652e-05], ['errno', 2.079066914768652e-05], ['y', 2.079066914768652e-05], ['filename', 2.079066914768652e-05], ['this->off_', 2.079066914768652e-05], ['Import::Stream*', 2.079066914768652e-05], ['diagnostics', 2.079066914768652e-05], ['expand', 2.079066914768652e-05], ['(which', 2.079066914768652e-05], ['ASSERT_NE', 2.079066914768652e-05], ['d_diagnostic_report_diagnostic', 2.079066914768652e-05], ['(1)', 2.079066914768652e-05], ['tmp1', 2.079066914768652e-05], ['True', 2.079066914768652e-05], ['STRIDE', 2.079066914768652e-05], ['offsets', 2.079066914768652e-05], ['share', 2.079066914768652e-05], ['so.', 2.079066914768652e-05], ['below.', 2.079066914768652e-05], ['trying', 2.079066914768652e-05], ['i.e.', 2.079066914768652e-05], ['(bb,', 2.079066914768652e-05], ['applies', 2.079066914768652e-05], ['(e.g.', 2.079066914768652e-05], ['op2', 2.079066914768652e-05], ['dimension.', 2.079066914768652e-05], ['address.stmt,', 2.079066914768652e-05], ['(address,', 2.079066914768652e-05], ['potentially', 2.079066914768652e-05], ['(fn)', 2.079066914768652e-05], ['"\\n";', 2.079066914768652e-05], ['components', 2.079066914768652e-05], ['receiver,', 2.079066914768652e-05], ['nt)', 2.079066914768652e-05], ['(std::vector<const', 2.079066914768652e-05], ['this->stream_;', 2.079066914768652e-05], ['this->stream_', 2.079066914768652e-05], ['Register', 2.079066914768652e-05], ['section.', 2.079066914768652e-05], ['d_decl_context', 2.079066914768652e-05], ['*cd)', 2.079066914768652e-05], ['on.', 2.079066914768652e-05], ['TREE_SIDE_EFFECTS', 2.079066914768652e-05], ['T2', 2.079066914768652e-05], ['empty.', 2.079066914768652e-05], ['(EQ_EXPR,', 2.079066914768652e-05], ['(BIND_EXPR,', 2.079066914768652e-05], ['BLOCK_VARS', 2.079066914768652e-05], ['block);', 2.079066914768652e-05], ['DECL_FIELD_OFFSET', 2.079066914768652e-05], ['RECORD_TYPE', 2.079066914768652e-05], ['(DECL_NAME', 2.079066914768652e-05], ['back-end.', 2.079066914768652e-05], ['ends', 2.079066914768652e-05], ['ptr_type', 2.079066914768652e-05], ['(build_deref', 2.079066914768652e-05], ['Tsarray);', 2.079066914768652e-05], ['vec_safe_reserve', 2.079066914768652e-05], ['only.', 2.079066914768652e-05], ['(DECL_INITIAL', 2.079066914768652e-05], ['%qE",', 2.079066914768652e-05], ['properly', 2.079066914768652e-05], ['overriding', 2.079066914768652e-05], ['v);', 2.079066914768652e-05], ['(v);', 2.079066914768652e-05], ['usual', 2.079066914768652e-05], ['any.', 2.079066914768652e-05], ['*inst', 2.079066914768652e-05], ['dest_type,', 2.079066914768652e-05], ['wide', 2.079066914768652e-05], ['BrigInstCvt', 2.079066914768652e-05], ['precision)', 2.079066914768652e-05], ['xlen;', 2.079066914768652e-05], ['zext_hwi', 2.079066914768652e-05], ['beyond', 2.079066914768652e-05], ['precision.', 2.079066914768652e-05], ['op0len', 2.079066914768652e-05], ['small_prec', 2.079066914768652e-05], ['OP1', 2.079066914768652e-05], ['l', 2.079066914768652e-05], ['result[j++]', 2.079066914768652e-05], ['M', 2.079066914768652e-05], ['digit.', 2.079066914768652e-05], ['host', 2.079066914768652e-05], ['Either', 2.079066914768652e-05], ['(0xabc,', 2.079066914768652e-05], ['Instead,', 2.079066914768652e-05], ['"test.c:6:12:', 2.079066914768652e-05], ['missed:', 2.079066914768652e-05], ['TypeInfo.', 2.079066914768652e-05], ['ClassInfo', 2.079066914768652e-05], ['typeinfo', 2.079066914768652e-05], ['TypeInfoVisitor', 2.079066914768652e-05], ['VALUE', 2.079066914768652e-05], ['*id', 2.079066914768652e-05], ['build_array_type', 2.079066914768652e-05], ['build_index_type', 2.079066914768652e-05], ['aggregate_initializer_decl', 2.079066914768652e-05], ['void*)', 2.079066914768652e-05], ['(in', 2.079066914768652e-05], ['d_linkonce_linkage', 2.079066914768652e-05], ['decl->csym', 2.079066914768652e-05], ['instantiated', 2.079066914768652e-05], ['(MINUS_EXPR,', 2.079066914768652e-05], ['Parameters', 2.079066914768652e-05], ['void_type_node)', 2.079066914768652e-05], ['(cst);', 2.079066914768652e-05], ['IDENT', 2.079066914768652e-05], ['target-specific', 2.079066914768652e-05], ['(lang_hooks.types.type_for_mode', 2.079066914768652e-05], ['Recursively', 2.079066914768652e-05], ['(var)', 2.079066914768652e-05], ['same.', 2.079066914768652e-05], ['this->require_semicolon_if_old_version();', 2.079066914768652e-05], ['(this->package_', 2.079066914768652e-05], ['package;', 2.079066914768652e-05], ['(name_reserved_for_implementation_p', 2.079066914768652e-05], ['(iterator', 2.079066914768652e-05], ['DISJ_CONSTR:', 2.079066914768652e-05], ['t))', 2.079066914768652e-05], ['beginning', 2.079066914768652e-05], ['t0', 2.079066914768652e-05], ['e->type);', 2.079066914768652e-05], ['(e->e2));', 2.079066914768652e-05], ['(arg));', 2.079066914768652e-05], ['vec_safe_length', 2.079066914768652e-05], ['(e->type);', 2.079066914768652e-05], ['destructor', 2.079066914768652e-05], ['front', 2.079066914768652e-05], ['Note:', 2.079066914768652e-05], ['buffer,', 2.079066914768652e-05], ['included', 2.079066914768652e-05], ['reason)', 2.079066914768652e-05], ['ins.first->second.btype', 2.079066914768652e-05], ['ins.first->second.btype;', 2.079066914768652e-05], ['gogo->backend()->struct_type(bfields);', 2.079066914768652e-05], ['is_common,', 2.079066914768652e-05], ['uint32_type', 2.079066914768652e-05], ['Type::lookup_integer_type("uint32");', 2.079066914768652e-05], ['Type::memequal_align(gogo,', 2.079066914768652e-05], ['(align', 2.079066914768652e-05], ['Type::TYPE_ERROR:', 2.079066914768652e-05], ['Type::TYPE_FUNCTION:', 2.079066914768652e-05], ['Type::TYPE_MAP:', 2.079066914768652e-05], ['Type::TYPE_CHANNEL:', 2.079066914768652e-05], ['Type::TYPE_STRING:', 2.079066914768652e-05], ['fields->end());', 2.079066914768652e-05], ['field_size;', 2.079066914768652e-05], ['collector.', 2.079066914768652e-05], ['ptrdata', 2.079066914768652e-05], ['imp)', 2.079066914768652e-05], ['std::string*)', 2.079066914768652e-05], ['abstract_type;', 2.079066914768652e-05], ['tdt', 2.079066914768652e-05], ['ptdt', 2.079066914768652e-05], ['tdt,', 2.079066914768652e-05], ['rtype,', 2.079066914768652e-05], ['q', 2.079066914768652e-05], ['(this->all_methods_', 2.079066914768652e-05], ['retval', 2.079066914768652e-05], ['{"', 2.079066914768652e-05], ['go_error_at(this->length_->location(),', 2.079066914768652e-05], ['this->all_methods_->begin();', 2.079066914768652e-05], ['this->all_methods_->end();', 2.079066914768652e-05], ['mostly', 2.079066914768652e-05], ['ld', 2.079066914768652e-05], ['defaults', 2.079066914768652e-05], ['x$with_cpu', 2.079066914768652e-05], ['use_collect2=yes', 2.079066914768652e-05], ['posix)', 2.079066914768652e-05], ['"x$with_cpu"', 2.079066914768652e-05], ['tm_file="$tm_file', 2.079066914768652e-05], ['mips/elf.h"', 2.079066914768652e-05], ['sparc/t-sparc', 2.079066914768652e-05], ['${val}', 2.079066914768652e-05], ['INTVAL', 2.079066914768652e-05], ['SImode,', 2.079066914768652e-05], ['(bytes', 2.079066914768652e-05], ['(func_addr_rtx,', 2.079066914768652e-05], ['addr2_alignment', 2.079066914768652e-05], ['(3)));', 2.079066914768652e-05], ['(s1_addr,', 2.079066914768652e-05], ['load.', 2.079066914768652e-05], ['(gen_zero_extendqisi2', 2.079066914768652e-05], ['(lenw,', 2.079066914768652e-05], ['DECL_SAVED_TREE', 2.079066914768652e-05], ['(ident)', 2.079066914768652e-05], ['DECL_DECLARED_INLINE_P', 2.079066914768652e-05], ['(function)', 2.079066914768652e-05], ['RTL', 2.079066914768652e-05], ['SH', 2.079066914768652e-05], ['branches', 2.079066914768652e-05], ['(pc)', 2.079066914768652e-05], ['(if_then_else', 2.079066914768652e-05], ['(label_ref:SI', 2.079066914768652e-05], ['(pc)))', 2.079066914768652e-05], ['(reg,', 2.079066914768652e-05], ['BB_END', 2.079066914768652e-05], ['bb_entry&', 2.079066914768652e-05], ['trace)', 2.079066914768652e-05], ['(REG_P', 2.079066914768652e-05], ['(e.cstore.insn);', 2.079066914768652e-05], ['trace.bb', 2.079066914768652e-05], ['(std::list<bb_entry>::const_iterator', 2.079066914768652e-05], ['trace.bb_entries.begin', 2.079066914768652e-05], ['trace.bb_entries.end', 2.079066914768652e-05], ['variable(Named_object*);', 2.079066914768652e-05], ['no->var_value();', 2.079066914768652e-05], ['tag', 2.079066914768652e-05], ['c->size;', 2.079066914768652e-05], ['sized', 2.079066914768652e-05], ['x.normalize', 2.079066914768652e-05], ['Keyword', 2.079066914768652e-05], ['this->lineoff_;', 2.079066914768652e-05], ['0xfffd;', 2.079066914768652e-05], ['C1', 2.079066914768652e-05], ['lineno', 2.079066914768652e-05], ['low', 2.079066914768652e-05], ['this->end_scope', 2.079066914768652e-05], ['this->lookup_label', 2.079066914768652e-05], ['switch");', 2.079066914768652e-05], ['this->break_label_;', 2.079066914768652e-05], ['vars;', 2.079066914768652e-05], ['(traverse_mask', 2.079066914768652e-05], ['end_loc', 2.079066914768652e-05], ['(&this->rv', 2.079066914768652e-05], ['mode,', 2.079066914768652e-05], ['(inst_base.opcode', 2.079066914768652e-05], ['Transform', 2.079066914768652e-05], ['&vr0_min,', 2.079066914768652e-05], ['add_local_variable', 2.079066914768652e-05], ['m_context_arg);', 2.079066914768652e-05], ['BRIG_TYPE_U32,', 2.079066914768652e-05], ['tsi_link_after', 2.079066914768652e-05], ['add_temp_var', 2.079066914768652e-05], ['built_in_function', 2.079066914768652e-05], ['Which', 2.079066914768652e-05], ['this->flood(level,', 2.079066914768652e-05], ['sett', 2.079066914768652e-05], ['(brigVar->segment', 2.079066914768652e-05], ['(brigVar,', 2.079066914768652e-05], ['&)', 2.079066914768652e-05], ['BrigInstSegCvt', 2.079066914768652e-05], ['ExpressionTree', 2.079066914768652e-05], ['Bexpression*,', 2.079066914768652e-05], ['this->error_type();', 2.079066914768652e-05], ['expr_tree', 2.079066914768652e-05], ['(*p)->get_tree();', 2.079066914768652e-05], ['Move_ordered_evals', 2.079066914768652e-05], ['context->backend()->expression_statement(bfunction,', 2.079066914768652e-05], ['present,', 2.079066914768652e-05], ['res,', 2.079066914768652e-05], ['ast_dump_context->dump_expression(this->val_);', 2.079066914768652e-05], ['(Clauses::iterator', 2.079066914768652e-05], ['scase,', 2.079066914768652e-05], ['identifier");', 2.079066914768652e-05], ['is_exported);', 2.079066914768652e-05], ['%<)%>");', 2.079066914768652e-05], ['(named_object', 2.079066914768652e-05], ['%<;%>', 2.079066914768652e-05], ['parameters_have_names', 2.079066914768652e-05], ['ID1', 2.079066914768652e-05], ['(pragmas', 2.079066914768652e-05], ['expr_list', 2.079066914768652e-05], ['inherited_p);', 2.079066914768652e-05], ['build_funcs_gates_fn', 2.079066914768652e-05], ['ThirtyTwo', 2.079066914768652e-05], ['Random1', 2.079066914768652e-05], ['Nine', 2.079066914768652e-05], ['(&f,', 2.079066914768652e-05], ['&ai,', 2.079066914768652e-05], ['NO_LONG_DOUBLE', 2.079066914768652e-05], ['buf[64];', 2.079066914768652e-05], ['sprintf(buf,', 2.079066914768652e-05], ['FLOAT(buf);', 2.079066914768652e-05], ['(Flaw,', 2.079066914768652e-05], ['Y)', 2.079066914768652e-05], ['("The', 2.079066914768652e-05], ['U2);', 2.079066914768652e-05], ['(ovfl_buf))', 2.079066914768652e-05], ['constrained', 2.079066914768652e-05], ['diagnose_constraint', 2.079066914768652e-05], ['dot,', 2.079066914768652e-05], ['ensures', 1.8191835504225703e-05], ['non-empty', 1.8191835504225703e-05], ['Type::lookup_string_type();', 1.8191835504225703e-05], ['6,', 1.8191835504225703e-05], ['well.', 1.8191835504225703e-05], ['David', 1.8191835504225703e-05], ['"tree-pass.h"', 1.8191835504225703e-05], ['"cgraph.h"', 1.8191835504225703e-05], ['"selftest.h"', 1.8191835504225703e-05], ['parts', 1.8191835504225703e-05], ['pp;', 1.8191835504225703e-05], ['optinfo', 1.8191835504225703e-05], ['*obj', 1.8191835504225703e-05], ['json::number', 1.8191835504225703e-05], ['obj;', 1.8191835504225703e-05], ['consistent', 1.8191835504225703e-05], ['(block);', 1.8191835504225703e-05], ['UNKNOWN_LOCATION)', 1.8191835504225703e-05], ['IDENTIFIER_POINTER', 1.8191835504225703e-05], ['print_decu', 1.8191835504225703e-05], ['self', 1.8191835504225703e-05], ['fits', 1.8191835504225703e-05], ['(wi::neg_p', 1.8191835504225703e-05], ['print_hex', 1.8191835504225703e-05], ['start;', 1.8191835504225703e-05], ['classes.', 1.8191835504225703e-05], ['aliases.', 1.8191835504225703e-05], ['first_field', 1.8191835504225703e-05], ['check,', 1.8191835504225703e-05], ['panic', 1.8191835504225703e-05], ['times', 1.8191835504225703e-05], ['type->get_backend(gogo);', 1.8191835504225703e-05], ['arbitrary', 1.8191835504225703e-05], ['val_type,', 1.8191835504225703e-05], ['Error', 1.8191835504225703e-05], ['do_is_constant()', 1.8191835504225703e-05], ['type_(type)', 1.8191835504225703e-05], ['inserter', 1.8191835504225703e-05], ['(this->variable_->is_result_variable())', 1.8191835504225703e-05], ['Ast', 1.8191835504225703e-05], ['cast.', 1.8191835504225703e-05], ['context->function();', 1.8191835504225703e-05], ['do_get_backend(Translate_context*);', 1.8191835504225703e-05], ['is_hidden,', 1.8191835504225703e-05], ['var_name,', 1.8191835504225703e-05], ['converted.', 1.8191835504225703e-05], ['Named_object::NAMED_OBJECT_CONST:', 1.8191835504225703e-05], ['Named_object::NAMED_OBJECT_TYPE:', 1.8191835504225703e-05], ['Named_object::NAMED_OBJECT_VAR:', 1.8191835504225703e-05], ['Named_object::NAMED_OBJECT_FUNC:', 1.8191835504225703e-05], ['Named_object::NAMED_OBJECT_FUNC_DECLARATION:', 1.8191835504225703e-05], ['"true"', 1.8191835504225703e-05], ['(!context->may_be_abstract)', 1.8191835504225703e-05], ['dump.', 1.8191835504225703e-05], ['10', 1.8191835504225703e-05], ['type_(type),', 1.8191835504225703e-05], ["haven't", 1.8191835504225703e-05], ['efb->write_c_string("$convert(");', 1.8191835504225703e-05], ['efb->write_type(this->type_);', 1.8191835504225703e-05], ['efb->write_c_string(",', 1.8191835504225703e-05], ["'-'", 1.8191835504225703e-05], ['do_traverse(Traverse*);', 1.8191835504225703e-05], ['int);', 1.8191835504225703e-05], ['use.', 1.8191835504225703e-05], ['fact', 1.8191835504225703e-05], ['this->found_', 1.8191835504225703e-05], ['imp->require_c_string(",', 1.8191835504225703e-05], ['Expression::import_expression(imp,', 1.8191835504225703e-05], ['")', 1.8191835504225703e-05], ['(t->points_to()', 1.8191835504225703e-05], ['moving', 1.8191835504225703e-05], ['dereference.', 1.8191835504225703e-05], ['Taking', 1.8191835504225703e-05], ['ve->named_object();', 1.8191835504225703e-05], ['nil.', 1.8191835504225703e-05], ['overflow,', 1.8191835504225703e-05], ['&=', 1.8191835504225703e-05], ['integral', 1.8191835504225703e-05], ['copying', 1.8191835504225703e-05], ['OPERATOR_MINUS;', 1.8191835504225703e-05], ['pointed', 1.8191835504225703e-05], ['initializers,', 1.8191835504225703e-05], ['resolve', 1.8191835504225703e-05], ['right_type', 1.8191835504225703e-05], ['OPERATOR_LSHIFT', 1.8191835504225703e-05], ['numbers', 1.8191835504225703e-05], ['memcmp.', 1.8191835504225703e-05], ['As', 1.8191835504225703e-05], ['&hash_fn,', 1.8191835504225703e-05], ['&equal_fn);', 1.8191835504225703e-05], ['this->left_->type();', 1.8191835504225703e-05], ['a1,', 1.8191835504225703e-05], ['Type::make_void_type();', 1.8191835504225703e-05], ['comparison,', 1.8191835504225703e-05], ['OK.', 1.8191835504225703e-05], ['Numeric_constant::NC_UL_VALID', 1.8191835504225703e-05], ['Fall', 1.8191835504225703e-05], ['128:', 1.8191835504225703e-05], ['overflow;', 1.8191835504225703e-05], ['fn->func_value()->type();', 1.8191835504225703e-05], ['called,', 1.8191835504225703e-05], ['before.', 1.8191835504225703e-05], ['gogo->add_block(b,', 1.8191835504225703e-05], ['Method::Field_indexes*', 1.8191835504225703e-05], ['checks.', 1.8191835504225703e-05], ['ignoring', 1.8191835504225703e-05], ['arg)', 1.8191835504225703e-05], ['function"));', 1.8191835504225703e-05], ['this->report_error(_("argument', 1.8191835504225703e-05], ['*pa,', 1.8191835504225703e-05], ['args->begin();', 1.8191835504225703e-05], ['len_arg', 1.8191835504225703e-05], ['len_arg,', 1.8191835504225703e-05], ['Expression::make_type_descriptor(type,', 1.8191835504225703e-05], ['iff', 1.8191835504225703e-05], ['args->front()->type();', 1.8191835504225703e-05], ['Statement::make_temporary(int_type,', 1.8191835504225703e-05], ['Expression::make_temporary_reference(s1tmp,', 1.8191835504225703e-05], ['ref2', 1.8191835504225703e-05], ['ref2,', 1.8191835504225703e-05], ['&call);', 1.8191835504225703e-05], ['else_block', 1.8191835504225703e-05], ['false));', 1.8191835504225703e-05], ['++pa,', 1.8191835504225703e-05], ['Statement::make_assignment(lhs,', 1.8191835504225703e-05], ['"the', 1.8191835504225703e-05], ['ordinary', 1.8191835504225703e-05], ['compiler.', 1.8191835504225703e-05], ['want_type', 1.8191835504225703e-05], ['"no', 1.8191835504225703e-05], ['indir', 1.8191835504225703e-05], ['td', 1.8191835504225703e-05], ['fail', 1.8191835504225703e-05], ['latter', 1.8191835504225703e-05], ['this->args_->size()', 1.8191835504225703e-05], ['rc', 1.8191835504225703e-05], ['clear', 1.8191835504225703e-05], ['somewhere', 1.8191835504225703e-05], ['intended', 1.8191835504225703e-05], ['inlinable', 1.8191835504225703e-05], ['void*,', 1.8191835504225703e-05], ['(results->size()', 1.8191835504225703e-05], ['parameters->begin();', 1.8191835504225703e-05], ['Interface_field_reference_expression*', 1.8191835504225703e-05], ['nargs;', 1.8191835504225703e-05], ['replaced', 1.8191835504225703e-05], ['this->index_,', 1.8191835504225703e-05], ['(this->cap_', 1.8191835504225703e-05], ['gogo->backend()->binary_expression(OPERATOR_OROR,', 1.8191835504225703e-05], ['end;', 1.8191835504225703e-05], ['length;', 1.8191835504225703e-05], ['key_type', 1.8191835504225703e-05], ['e);', 1.8191835504225703e-05], ['qualified', 1.8191835504225703e-05], ['(method', 1.8191835504225703e-05], ['"method', 1.8191835504225703e-05], ['this->name_);', 1.8191835504225703e-05], ['p->location()));', 1.8191835504225703e-05], ['(Type::traverse(this->type_,', 1.8191835504225703e-05], ['constructors', 1.8191835504225703e-05], ['temporaries.', 1.8191835504225703e-05], ['constructing', 1.8191835504225703e-05], ['"["', 1.8191835504225703e-05], ['(vals', 1.8191835504225703e-05], ['dumping', 1.8191835504225703e-05], ['Type::make_builtin_struct_type(2,', 1.8191835504225703e-05], ['names,', 1.8191835504225703e-05], ['erroneous', 1.8191835504225703e-05], ["'a'", 1.8191835504225703e-05], ['vals->begin();', 1.8191835504225703e-05], ['(at->length()', 1.8191835504225703e-05], ['l;', 1.8191835504225703e-05], ['channel_type', 1.8191835504225703e-05], ['is_pointer,', 1.8191835504225703e-05], ['ctor);', 1.8191835504225703e-05], ['non-zero', 1.8191835504225703e-05], ['int64_t*', 1.8191835504225703e-05], ['issue_error,', 1.8191835504225703e-05], ['(issue_error)', 1.8191835504225703e-05], ['this->set_invalid();', 1.8191835504225703e-05], ['(type->is_abstract())', 1.8191835504225703e-05], ['indicate', 1.8191835504225703e-05], ['specially.', 1.8191835504225703e-05], ['build_import_decl', 1.8191835504225703e-05], ['*dsym', 1.8191835504225703e-05], ['(Declaration', 1.8191835504225703e-05], ['ARM', 1.8191835504225703e-05], ['transformed', 1.8191835504225703e-05], ['overall', 1.8191835504225703e-05], ['position.', 1.8191835504225703e-05], ['6)', 1.8191835504225703e-05], ['interchanged.', 1.8191835504225703e-05], ['print_generic_expr', 1.8191835504225703e-05], ['*stmt,', 1.8191835504225703e-05], ['E', 1.8191835504225703e-05], ['*phi', 1.8191835504225703e-05], ['gimple_stmt_iterator', 1.8191835504225703e-05], ['SSA_NAME', 1.8191835504225703e-05], ['SSA_NAME)', 1.8191835504225703e-05], ['PHI_ARG_DEF_FROM_EDGE', 1.8191835504225703e-05], ['bb))', 1.8191835504225703e-05], ['series', 1.8191835504225703e-05], ['stmt,', 1.8191835504225703e-05], ['dep', 1.8191835504225703e-05], ['tmp,', 1.8191835504225703e-05], ['bitmap_set_bit', 1.8191835504225703e-05], ['DATAREFS', 1.8191835504225703e-05], ['datarefs,', 1.8191835504225703e-05], ['vec<tree>', 1.8191835504225703e-05], ['niters', 1.8191835504225703e-05], ['step', 1.8191835504225703e-05], ['LOOP', 1.8191835504225703e-05], ['success,', 1.8191835504225703e-05], ['example:', 1.8191835504225703e-05], ['2));', 1.8191835504225703e-05], ['Data', 1.8191835504225703e-05], ['them,', 1.8191835504225703e-05], ['gate', 1.8191835504225703e-05], ['execute', 1.8191835504225703e-05], ['(int)', 1.8191835504225703e-05], ['Compute', 1.8191835504225703e-05], ['analyze', 1.8191835504225703e-05], ['Main', 1.8191835504225703e-05], ['boolean_true_node', 1.8191835504225703e-05], ['Creates', 1.8191835504225703e-05], ['*etype', 1.8191835504225703e-05], ['And', 1.8191835504225703e-05], ['Assume', 1.8191835504225703e-05], ['zeros.', 1.8191835504225703e-05], ['(e.g.,', 1.8191835504225703e-05], ['convert_for_assignment', 1.8191835504225703e-05], ['(VAR_P', 1.8191835504225703e-05], ['(value))', 1.8191835504225703e-05], ['(ptr);', 1.8191835504225703e-05], ['BIND_EXPR', 1.8191835504225703e-05], ['ASCII', 1.8191835504225703e-05], ['characters,', 1.8191835504225703e-05], ['P', 1.8191835504225703e-05], ['id;', 1.8191835504225703e-05], ['mangling', 1.8191835504225703e-05], ['unicode', 1.8191835504225703e-05], ['7;', 1.8191835504225703e-05], ['8);', 1.8191835504225703e-05], ['leave', 1.8191835504225703e-05], ['implementation.', 1.8191835504225703e-05], ['requested', 1.8191835504225703e-05], ['fntype);', 1.8191835504225703e-05], ['format.', 1.8191835504225703e-05], ['&operands)', 1.8191835504225703e-05], ['get_unsigned_int_type', 1.8191835504225703e-05], ['vec', 1.8191835504225703e-05], ['lowest', 1.8191835504225703e-05], ['After', 1.8191835504225703e-05], ['raw', 1.8191835504225703e-05], ['wide_type,', 1.8191835504225703e-05], ['inserted', 1.8191835504225703e-05], ['brig_opcode,', 1.8191835504225703e-05], ['VECTOR_TYPE_P', 1.8191835504225703e-05], ['width,', 1.8191835504225703e-05], ['easier', 1.8191835504225703e-05], ['operands);', 1.8191835504225703e-05], ['native', 1.8191835504225703e-05], ['m_parent.m_cf->expand_or_call_builtin', 1.8191835504225703e-05], ['(for', 1.8191835504225703e-05], ['(*brig_inst);', 1.8191835504225703e-05], ['instr_type', 1.8191835504225703e-05], ['brig_element_type', 1.8191835504225703e-05], ['(*this,', 1.8191835504225703e-05], ["Let's", 1.8191835504225703e-05], ['things', 1.8191835504225703e-05], ['best', 1.8191835504225703e-05], ['promoted_type', 1.8191835504225703e-05], ['extract', 1.8191835504225703e-05], ['much', 1.8191835504225703e-05], ['*constructor_vals', 1.8191835504225703e-05], ['(constructor_vals,', 1.8191835504225703e-05], ['constructor_vals);', 1.8191835504225703e-05], ['nested_off,', 1.8191835504225703e-05], ['this->filename_.c_str());', 1.8191835504225703e-05], ['::read(this->fd_,', 1.8191835504225703e-05], ['&end,', 1.8191835504225703e-05], ['(*end', 1.8191835504225703e-05], ['O_RDONLY', 1.8191835504225703e-05], ['O_BINARY);', 1.8191835504225703e-05], ['p)', 1.8191835504225703e-05], ['fmt,', 1.8191835504225703e-05], ['ap)', 1.8191835504225703e-05], ['stats', 1.8191835504225703e-05], ['operator=', 1.8191835504225703e-05], ['gnu::unique_ptr<foo>', 1.8191835504225703e-05], ['f);', 1.8191835504225703e-05], ['non-NULL', 1.8191835504225703e-05], ['ops', 1.8191835504225703e-05], ['works.', 1.8191835504225703e-05], ['leaving', 1.8191835504225703e-05], ["'\\0')", 1.8191835504225703e-05], ['ATTRIBUTE_GCC_DIAG(2,0)', 1.8191835504225703e-05], ['produces', 1.8191835504225703e-05], ['100', 1.8191835504225703e-05], ['S;', 1.8191835504225703e-05], ['simplify', 1.8191835504225703e-05], ['are:', 1.8191835504225703e-05], ['usually', 1.8191835504225703e-05], ['four', 1.8191835504225703e-05], ['Walk', 1.8191835504225703e-05], ['opportunities', 1.8191835504225703e-05], ['Attempt', 1.8191835504225703e-05], ['Information', 1.8191835504225703e-05], ['address,', 1.8191835504225703e-05], ['fragment', 1.8191835504225703e-05], ['*b', 1.8191835504225703e-05], ['&li', 1.8191835504225703e-05], ['(&m_obstack,', 1.8191835504225703e-05], ['TERM', 1.8191835504225703e-05], ['approach', 1.8191835504225703e-05], ['above.', 1.8191835504225703e-05], ['same,', 1.8191835504225703e-05], ['matter', 1.8191835504225703e-05], ['FOR_EACH_VEC_ELT', 1.8191835504225703e-05], ['Type*,', 1.8191835504225703e-05], ['std::vector<Named_object*>', 1.8191835504225703e-05], ['Assign', 1.8191835504225703e-05], ['Unordered_set(const', 1.8191835504225703e-05], ['compilation', 1.8191835504225703e-05], ['(receiver', 1.8191835504225703e-05], ['++pm)', 1.8191835504225703e-05], ['unsigned>', 1.8191835504225703e-05], ['this->write_c_string(buf);', 1.8191835504225703e-05], ['go_assert(index', 1.8191835504225703e-05], ['"dmd/target.h"', 1.8191835504225703e-05], ['"attribs.h"', 1.8191835504225703e-05], ['(TYPE_FIELDS', 1.8191835504225703e-05], ['Static', 1.8191835504225703e-05], ['real_convert', 1.8191835504225703e-05], ['data);', 1.8191835504225703e-05], ['(binfo)', 1.8191835504225703e-05], ['ARRAY_TYPE)', 1.8191835504225703e-05], ['(TypeStruct', 1.8191835504225703e-05], ['EQ_EXPR', 1.8191835504225703e-05], ['build_float_identity', 1.8191835504225703e-05], ['union', 1.8191835504225703e-05], ['tcmp', 1.8191835504225703e-05], ['real_part', 1.8191835504225703e-05], ['imaginary_part', 1.8191835504225703e-05], ['(t1);', 1.8191835504225703e-05], ['sd,', 1.8191835504225703e-05], ['(build_assign', 1.8191835504225703e-05], ['finish', 1.8191835504225703e-05], ['(field,', 1.8191835504225703e-05], ['flat', 1.8191835504225703e-05], ['slot', 1.8191835504225703e-05], ['(void_type_node,', 1.8191835504225703e-05], ['(POINTER_PLUS_EXPR,', 1.8191835504225703e-05], ['DECL_IGNORED_P', 1.8191835504225703e-05], ['(TREE_CHAIN', 1.8191835504225703e-05], ['tf', 1.8191835504225703e-05], ['(basetype);', 1.8191835504225703e-05], ['()->isFuncDeclaration', 1.8191835504225703e-05], ['CD.', 1.8191835504225703e-05], ['*fd)', 1.8191835504225703e-05], ['(RECORD_TYPE);', 1.8191835504225703e-05], ['FIELD_DECL,', 1.8191835504225703e-05], ['ptr_type_node);', 1.8191835504225703e-05], ["function's", 1.8191835504225703e-05], ['(dest_type)', 1.8191835504225703e-05], ['(dest_type,', 1.8191835504225703e-05], ['(base);', 1.8191835504225703e-05], ['(src_type))', 1.8191835504225703e-05], ['casted_input', 1.8191835504225703e-05], ['input,', 1.8191835504225703e-05], ['(output),', 1.8191835504225703e-05], ['machine', 1.8191835504225703e-05], ['full', 1.8191835504225703e-05], ['sext_hwi', 1.8191835504225703e-05], ['needed,', 1.8191835504225703e-05], ['excess', 1.8191835504225703e-05], ['calculate', 1.8191835504225703e-05], ['efficient', 1.8191835504225703e-05], ['len)', 1.8191835504225703e-05], ['(xval,', 1.8191835504225703e-05], ['(op0len,', 1.8191835504225703e-05], ['op1len);', 1.8191835504225703e-05], ['wi::overflow_type', 1.8191835504225703e-05], ['wi::OVF_NONE;', 1.8191835504225703e-05], ['shift;', 1.8191835504225703e-05], ['HIGH', 1.8191835504225703e-05], ['MAX_BITSIZE_MODE_ANY_INT', 1.8191835504225703e-05], ['(overflow', 1.8191835504225703e-05], ['memset', 1.8191835504225703e-05], ['adjust', 1.8191835504225703e-05], ['Each', 1.8191835504225703e-05], ['>>=', 1.8191835504225703e-05], ['power', 1.8191835504225703e-05], ['assert_hexeq', 1.8191835504225703e-05], ['(b,', 1.8191835504225703e-05], ['b));', 1.8191835504225703e-05], ['failure', 1.8191835504225703e-05], ['emitting', 1.8191835504225703e-05], ['reverse', 1.8191835504225703e-05], ['exist', 1.8191835504225703e-05], ['build_artificial_decl', 1.8191835504225703e-05], ['(array_type_node,', 1.8191835504225703e-05], ['bcd', 1.8191835504225703e-05], ['(null_array_node);', 1.8191835504225703e-05], ['(TypeClass', 1.8191835504225703e-05], ['had', 1.8191835504225703e-05], ['data,', 1.8191835504225703e-05], ['create_typeinfo', 1.8191835504225703e-05], ['*ident', 1.8191835504225703e-05], ['(!tinfo_types[tk])', 1.8191835504225703e-05], ['(tk,', 1.8191835504225703e-05], ['Types', 1.8191835504225703e-05], ['real_value', 1.8191835504225703e-05], ['(32);', 1.8191835504225703e-05], ['ENUM]', 1.8191835504225703e-05], ['FILENAME', 1.8191835504225703e-05], ['go_warning_at(location,', 1.8191835504225703e-05], ['exists', 1.8191835504225703e-05], ['local_name,', 1.8191835504225703e-05], ['pkgpath_symbol,', 1.8191835504225703e-05], ['stream->set_saw_error();', 1.8191835504225703e-05], ['3', 1.8191835504225703e-05], ['(is_varargs)', 1.8191835504225703e-05], ['failure.', 1.8191835504225703e-05], ['(type->is_error_type())', 1.8191835504225703e-05], ['named_object->type_value();', 1.8191835504225703e-05], ['begin', 1.8191835504225703e-05], ['atomic', 1.8191835504225703e-05], ['seen,', 1.8191835504225703e-05], ['CHECK_CONSTR:', 1.8191835504225703e-05], ['PARM_CONSTR:', 1.8191835504225703e-05], ['DECL_TI_TEMPLATE', 1.8191835504225703e-05], ['not,', 1.8191835504225703e-05], ['(e1b->op', 1.8191835504225703e-05], ['*tb2', 1.8191835504225703e-05], ['e->e1;', 1.8191835504225703e-05], ['dtor.', 1.8191835504225703e-05], ['post', 1.8191835504225703e-05], ['assert', 1.8191835504225703e-05], ['ci);', 1.8191835504225703e-05], ['soffset', 1.8191835504225703e-05], ['(char,', 1.8191835504225703e-05], ['(result', 1.8191835504225703e-05], ['(saved_elems,', 1.8191835504225703e-05], ['{"<stdint.h>",', 1.8191835504225703e-05], ['"<cstdint>"}', 1.8191835504225703e-05], ['types.h', 1.8191835504225703e-05], ['Pointer_type*', 1.8191835504225703e-05], ['(no->is_unknown())', 1.8191835504225703e-05], ['(t1', 1.8191835504225703e-05], ['reason->assign(buf);', 1.8191835504225703e-05], ['Type::TYPE_VOID:', 1.8191835504225703e-05], ['Type::TYPE_NIL:', 1.8191835504225703e-05], ['Type::TYPE_BOOLEAN:', 1.8191835504225703e-05], ['Type::TYPE_INTEGER:', 1.8191835504225703e-05], ['Type::TYPE_FLOAT:', 1.8191835504225703e-05], ['Type::TYPE_COMPLEX:', 1.8191835504225703e-05], ['Type::TYPE_FORWARD:', 1.8191835504225703e-05], ['key2_arg', 1.8191835504225703e-05], ['(field_align', 1.8191835504225703e-05], ['&~', 1.8191835504225703e-05], ['vals->push_back(this->type_descriptor_constructor(gogo,', 1.8191835504225703e-05], ['imp->read_name();', 1.8191835504225703e-05], ['error,', 1.8191835504225703e-05], ['this->all_methods_', 1.8191835504225703e-05], ['ptdt,', 1.8191835504225703e-05], ['z', 1.8191835504225703e-05], ['uint16_type', 1.8191835504225703e-05], ['Type::lookup_integer_type("uint16");', 1.8191835504225703e-05], ['16;', 1.8191835504225703e-05], ['go_close_quote());', 1.8191835504225703e-05], ['-fgo-pkgpath', 1.8191835504225703e-05], ['type(Type*);', 1.8191835504225703e-05], ['dependencies.', 1.8191835504225703e-05], ['attached', 1.8191835504225703e-05], ['EXPR.', 1.8191835504225703e-05], ['g.opt"', 1.8191835504225703e-05], ['fused-madd.opt"', 1.8191835504225703e-05], ['tm_p_file="${tm_p_file}', 1.8191835504225703e-05], ['ELF', 1.8191835504225703e-05], ['ordering', 1.8191835504225703e-05], ['TARGET_BIG_ENDIAN_DEFAULT=1"', 1.8191835504225703e-05], ["'s/,/", 1.8191835504225703e-05], ['openbsd.h', 1.8191835504225703e-05], ['openbsd-stdint.h', 1.8191835504225703e-05], ['${with_endian}', 1.8191835504225703e-05], ['arm/aout.h', 1.8191835504225703e-05], ['vx-common.h', 1.8191835504225703e-05], ['${fbsd_tm_file}', 1.8191835504225703e-05], ['$x86_archs', 1.8191835504225703e-05], ['*"', 1.8191835504225703e-05], ['"*)', 1.8191835504225703e-05], ['mips/elf.h', 1.8191835504225703e-05], ['arch_without_64bit=yes', 1.8191835504225703e-05], ['IEEE', 1.8191835504225703e-05], ['supported_defaults="arch', 1.8191835504225703e-05], ['cpu_32', 1.8191835504225703e-05], ['cpu_64', 1.8191835504225703e-05], ['"#define', 1.8191835504225703e-05], ['(operands[0]);', 1.8191835504225703e-05], ['copy_addr_to_reg', 1.8191835504225703e-05], ['12)', 1.8191835504225703e-05], ['lab', 1.8191835504225703e-05], ['const0_rtx));', 1.8191835504225703e-05], ['(L_end_loop_byte));', 1.8191835504225703e-05], ['set_externally_visible', 1.8191835504225703e-05], ['name_identifier', 1.8191835504225703e-05], ['name_identifier,', 1.8191835504225703e-05], ['build_stmt', 1.8191835504225703e-05], ['(m_dump_file,', 1.8191835504225703e-05], ['launcher', 1.8191835504225703e-05], ['(std::make_pair', 1.8191835504225703e-05], ['wrong', 1.8191835504225703e-05], ['compilation.', 1.8191835504225703e-05], ['resdecl', 1.8191835504225703e-05], ['(var);', 1.8191835504225703e-05], ['(decl->csym,', 1.8191835504225703e-05], ['SET_DECL_ASSEMBLER_NAME', 1.8191835504225703e-05], ['Pass', 1.8191835504225703e-05], ['TYPE_QUAL_RESTRICT);', 1.8191835504225703e-05], ['(decl->csym);', 1.8191835504225703e-05], ['(fntype);', 1.8191835504225703e-05], ['Propagate', 1.8191835504225703e-05], ['(DECL_ARGUMENTS', 1.8191835504225703e-05], ['RESULT_DECL,', 1.8191835504225703e-05], ['(body)', 1.8191835504225703e-05], ['strcmp', 1.8191835504225703e-05], ['*no_add_attrs)', 1.8191835504225703e-05], ['prototype', 1.8191835504225703e-05], ['inverting', 1.8191835504225703e-05], ['REG_DEAD,', 1.8191835504225703e-05], ['trace', 1.8191835504225703e-05], ['ctx,', 1.8191835504225703e-05], ['cstore_type_t', 1.8191835504225703e-05], ['touched_insn', 1.8191835504225703e-05], ['cstore_count,', 1.8191835504225703e-05], ['delete_insn', 1.8191835504225703e-05], ['replacement', 1.8191835504225703e-05], ['puts', 1.8191835504225703e-05], ['statement)', 1.8191835504225703e-05], ['Function::Results*', 1.8191835504225703e-05], ['l)', 1.8191835504225703e-05], ['E1', 1.8191835504225703e-05], ['(real_t', 1.8191835504225703e-05], ['(insn', 1.8191835504225703e-05], ['insn);', 1.8191835504225703e-05], ['(insn)', 1.8191835504225703e-05], ['token.', 1.8191835504225703e-05], ['0x%x', 1.8191835504225703e-05], ['J', 1.8191835504225703e-05], ['v,', 1.8191835504225703e-05], ['classified', 1.8191835504225703e-05], ['this->continue_label_', 1.8191835504225703e-05], ['lowers', 1.8191835504225703e-05], ["(...)'", 1.8191835504225703e-05], ['increment', 1.8191835504225703e-05], ['gcdata', 1.8191835504225703e-05], ['Named_object::make_function(name,', 1.8191835504225703e-05], ['label_name,', 1.8191835504225703e-05], ['finalize', 1.8191835504225703e-05], ['budget', 1.8191835504225703e-05], ['(Traverse::traverse_types', 1.8191835504225703e-05], ['Traverse::traverse_expressions))', 1.8191835504225703e-05], ['e_or_t)', 1.8191835504225703e-05], ['B.', 1.8191835504225703e-05], ['Named_object(name,', 1.8191835504225703e-05], ['std::vector<Bexpression*>&', 1.8191835504225703e-05], ['old_object;', 1.8191835504225703e-05], ['longdouble&', 1.8191835504225703e-05], ['(wmax,', 1.8191835504225703e-05], ['(vr0_max,', 1.8191835504225703e-05], ['(min,', 1.8191835504225703e-05], ['buffer->writestring', 1.8191835504225703e-05], ['m->toChars', 1.8191835504225703e-05], ['dim_char,', 1.8191835504225703e-05], ['(flag_assume_phsa)', 1.8191835504225703e-05], ['(variable)', 1.8191835504225703e-05], ['(&entry,', 1.8191835504225703e-05], ['brig_type)', 1.8191835504225703e-05], ['(brig_type', 1.8191835504225703e-05], ['CALL_EXPR;', 1.8191835504225703e-05], ['(call', 1.8191835504225703e-05], ['call?', 1.8191835504225703e-05], ['parmn', 1.8191835504225703e-05], ['(this->object()', 1.8191835504225703e-05], ['class_name', 1.8191835504225703e-05], ['Node::make_node(*pexpr);', 1.8191835504225703e-05], ['this->context_->sink();', 1.8191835504225703e-05], ['extra_loop_depth', 1.8191835504225703e-05], ['osrcesc', 1.8191835504225703e-05], ['src->encoding())', 1.8191835504225703e-05], ['src->set_encoding(Node::ESCAPE_HEAP);', 1.8191835504225703e-05], ['clrt', 1.8191835504225703e-05], ['sh_optimize_sett_clrt', 1.8191835504225703e-05], ['(brigVar);', 1.8191835504225703e-05], ['(brigVar->type', 1.8191835504225703e-05], ['T;', 1.8191835504225703e-05], ['prints', 1.8191835504225703e-05], ['abs_multiplier', 1.8191835504225703e-05], ['("#include', 1.8191835504225703e-05], ['real_format', 1.8191835504225703e-05], ['Gcc_tree', 1.8191835504225703e-05], ['Bexpression*);', 1.8191835504225703e-05], ['tree*', 1.8191835504225703e-05], ['TREE_READONLY(decl)', 1.8191835504225703e-05], ['sink,', 1.8191835504225703e-05], ['SET_DECL_ASSEMBLER_NAME(decl,', 1.8191835504225703e-05], ['get_identifier_from_string(asm_name));', 1.8191835504225703e-05], ['Bvariable(decl);', 1.8191835504225703e-05], ['closed,', 1.8191835504225703e-05], ['(ast_dump_context->dump_subblocks())', 1.8191835504225703e-05], ['(Clauses::const_iterator', 1.8191835504225703e-05], ['chanref,', 1.8191835504225703e-05], ['&post);', 1.8191835504225703e-05], ['index_ref', 1.8191835504225703e-05], ['this->make_range_ref(range_object,', 1.8191835504225703e-05], ['iter_init', 1.8191835504225703e-05], ['MAY_BE_COMPOSITE_LIT', 1.8191835504225703e-05], ['ElementType', 1.8191835504225703e-05], ['(!this->peek_token()->is_op(OPERATOR_RCURLY))', 1.8191835504225703e-05], ['til;', 1.8191835504225703e-05], ['this->init_var(*p,', 1.8191835504225703e-05], ['"multiple', 1.8191835504225703e-05], ['p_range_clause);', 1.8191835504225703e-05], ['token->location());', 1.8191835504225703e-05], ['whole_is_parenthesized', 1.8191835504225703e-05], ['(<-', 1.8191835504225703e-05], ['OPERATOR_EQ)', 1.8191835504225703e-05], ['this->gogo_->start_block(this->location());', 1.8191835504225703e-05], ['(enclosing->classification()', 1.8191835504225703e-05], ['function()', 1.8191835504225703e-05], ['Paranoia', 1.8191835504225703e-05], ['Five', 1.8191835504225703e-05], ['real_c_float&', 1.8191835504225703e-05], ['native_float&', 1.8191835504225703e-05], ['LOG', 1.8191835504225703e-05], ['Two;', 1.8191835504225703e-05], ['F9;', 1.8191835504225703e-05], ['notify', 1.8191835504225703e-05], ['ErrCnt[Defect]', 1.8191835504225703e-05], ['Zero,', 1.8191835504225703e-05], ['Zero)));', 1.8191835504225703e-05], ['(Y1', 1.8191835504225703e-05], ['(Y2', 1.8191835504225703e-05], ['Rounded)', 1.8191835504225703e-05], ['threshold', 1.8191835504225703e-05], ['pp_character', 1.8191835504225703e-05], ['constraint_p', 1.8191835504225703e-05], ['substituted', 1.8191835504225703e-05], ['Constraint', 1.8191835504225703e-05], ['(CHECK_CONSTR,', 1.8191835504225703e-05], ['normalize_constraint', 1.8191835504225703e-05], ['tsubst_constraint', 1.8191835504225703e-05], ['(constraints_satisfied_p', 1.8191835504225703e-05], ['NN', 1.8191835504225703e-05], ['(inst.type))', 1.8191835504225703e-05], ['result->set', 1.8191835504225703e-05], ['float.', 1.559300186076489e-05], ['Type::lookup_integer_type("int32");', 1.559300186076489e-05], ['at;', 1.559300186076489e-05], ["'.');", 1.559300186076489e-05], ['va_start(ap,', 1.559300186076489e-05], ['va_end(ap);', 1.559300186076489e-05], ['ambiguous', 1.559300186076489e-05], ['prefix.', 1.559300186076489e-05], ['(NULL),', 1.559300186076489e-05], ['(&pp);', 1.559300186076489e-05], ['Pop', 1.559300186076489e-05], ['BLOCK_SUPERCONTEXT', 1.559300186076489e-05], ['json_item->set', 1.559300186076489e-05], ['(item->get_location', 1.559300186076489e-05], ['passes', 1.559300186076489e-05], ['loc;', 1.559300186076489e-05], ['selftests', 1.559300186076489e-05], ['routines.', 1.559300186076489e-05], ['FILE', 1.559300186076489e-05], ['HWI.', 1.559300186076489e-05], ['&val,', 1.559300186076489e-05], ['handling.', 1.559300186076489e-05], ['"export.h"', 1.559300186076489e-05], ['"import.h"', 1.559300186076489e-05], ['((traverse->traverse_mask()', 1.559300186076489e-05], ['parser', 1.559300186076489e-05], ['effects', 1.559300186076489e-05], ['context;', 1.559300186076489e-05], ['non-interface', 1.559300186076489e-05], ['TODO(cmang):', 1.559300186076489e-05], ['pull', 1.559300186076489e-05], ['EXPRESSION_ERROR)', 1.559300186076489e-05], ['Expression::make_boolean(false,', 1.559300186076489e-05], ['Expression::make_binary(OPERATOR_OROR,', 1.559300186076489e-05], ['do_traverse(Traverse*', 1.559300186076489e-05], ['var_ref', 1.559300186076489e-05], ['context->bblock(),', 1.559300186076489e-05], ['Can', 1.559300186076489e-05], ['no->func_value()->type();', 1.559300186076489e-05], ['no->func_declaration_value()->type();', 1.559300186076489e-05], ['appropriate.', 1.559300186076489e-05], ['struct_type', 1.559300186076489e-05], ['Let', 1.559300186076489e-05], ['(gogo->compiling_runtime()', 1.559300186076489e-05], ['bvar;', 1.559300186076489e-05], ['do_dump_expression(Ast_dump_context*', 1.559300186076489e-05], ['function_;', 1.559300186076489e-05], ['Named_object::NAMED_OBJECT_TYPE_DECLARATION:', 1.559300186076489e-05], ['(imp->version()', 1.559300186076489e-05], ['(std::string::const_iterator', 1.559300186076489e-05], ['0x7f)', 1.559300186076489e-05], ["'\\n')", 1.559300186076489e-05], ['"bad', 1.559300186076489e-05], ['byte_type', 1.559300186076489e-05], ['(this->is_error_expression()', 1.559300186076489e-05], ['fit', 1.559300186076489e-05], ['(!saw_errors())', 1.559300186076489e-05], ['"unknown', 1.559300186076489e-05], ['added_type', 1.559300186076489e-05], ['imp->read_identifier();', 1.559300186076489e-05], ['data:', 1.559300186076489e-05], ['mpfr_clear(val);', 1.559300186076489e-05], ['caught', 1.559300186076489e-05], ['overflows', 1.559300186076489e-05], ['(type->is_slice_type())', 1.559300186076489e-05], ['(type->interface_type()', 1.559300186076489e-05], ['(type->is_string_type()', 1.559300186076489e-05], ['Numeric_constant::NC_UL_VALID)', 1.559300186076489e-05], ['et', 1.559300186076489e-05], ['(t->named_type()', 1.559300186076489e-05], ['((n->encoding()', 1.559300186076489e-05], ['Is', 1.559300186076489e-05], ['time,', 1.559300186076489e-05], ['issues', 1.559300186076489e-05], ['mpc_clear(val);', 1.559300186076489e-05], ['(type->points_to()', 1.559300186076489e-05], ['nonconstant', 1.559300186076489e-05], ['roots', 1.559300186076489e-05], ['backend.', 1.559300186076489e-05], ['right_type;', 1.559300186076489e-05], ['left_val;', 1.559300186076489e-05], ['right_val;', 1.559300186076489e-05], ['LOCATION', 1.559300186076489e-05], ['multiplication', 1.559300186076489e-05], ['shift);', 1.559300186076489e-05], ['sequences', 1.559300186076489e-05], ['f1', 1.559300186076489e-05], ['Expression::make_unary(OPERATOR_NOT,', 1.559300186076489e-05], ['let', 1.559300186076489e-05], ['hash_fn;', 1.559300186076489e-05], ['equal_fn;', 1.559300186076489e-05], ['(left_type->interface_type()', 1.559300186076489e-05], ['this->left_,', 1.559300186076489e-05], ['a1', 1.559300186076489e-05], ['unsafe.Pointer.', 1.559300186076489e-05], ['Expression::make_cast(unsafe_pointer_type,', 1.559300186076489e-05], ['incoming', 1.559300186076489e-05], ['"for', 1.559300186076489e-05], ['Report', 1.559300186076489e-05], ['(!nc.to_int(&val))', 1.559300186076489e-05], ['zero;', 1.559300186076489e-05], ['C,', 1.559300186076489e-05], ['cmp,', 1.559300186076489e-05], ['this->exprs_->begin();', 1.559300186076489e-05], ['this->exprs_->end();', 1.559300186076489e-05], ['3:', 1.559300186076489e-05], ['(fn->is_function_declaration())', 1.559300186076489e-05], ['vt', 1.559300186076489e-05], ['bme', 1.559300186076489e-05], ['*ref', 1.559300186076489e-05], ['n->ast_format(gogo).c_str());', 1.559300186076489e-05], ['RET', 1.559300186076489e-05], ['deferred', 1.559300186076489e-05], ['BUILTIN_PRINT:', 1.559300186076489e-05], ['BUILTIN_PRINTLN:', 1.559300186076489e-05], ['BUILTIN_APPEND:', 1.559300186076489e-05], ['BUILTIN_LEN:', 1.559300186076489e-05], ['BUILTIN_CAP:', 1.559300186076489e-05], ['type->array_type()->element_type();', 1.559300186076489e-05], ['flatten', 1.559300186076489e-05], ['omit', 1.559300186076489e-05], ['len2', 1.559300186076489e-05], ['args->end();', 1.559300186076489e-05], ['Using', 1.559300186076489e-05], ['computation', 1.559300186076489e-05], ['go_error_at(e->location(),', 1.559300186076489e-05], ['figure', 1.559300186076489e-05], ['receives', 1.559300186076489e-05], ['arg->type();', 1.559300186076489e-05], ['BUILTIN_COMPLEX:', 1.559300186076489e-05], ['BUILTIN_REAL:', 1.559300186076489e-05], ['BUILTIN_IMAG:', 1.559300186076489e-05], ['necessarily', 1.559300186076489e-05], ['Type::make_array_type(element_type,', 1.559300186076489e-05], ['bce', 1.559300186076489e-05], ['empty,', 1.559300186076489e-05], ['wrapper', 1.559300186076489e-05], ['often', 1.559300186076489e-05], ['this->args_', 1.559300186076489e-05], ['thus', 1.559300186076489e-05], ['calls,', 1.559300186076489e-05], ['&val);', 1.559300186076489e-05], ['parameters->end();', 1.559300186076489e-05], ['ref->get_backend(context);', 1.559300186076489e-05], ['traversed', 1.559300186076489e-05], ['due', 1.559300186076489e-05], ['Expression::make_temporary_reference(ts,', 1.559300186076489e-05], ['this->index_', 1.559300186076489e-05], ['reuse', 1.559300186076489e-05], ['indexed', 1.559300186076489e-05], ['traversal.', 1.559300186076489e-05], ['nc.to_unsigned_long(&v)', 1.559300186076489e-05], ['evaluating', 1.559300186076489e-05], ['addressable.', 1.559300186076489e-05], ['taken.', 1.559300186076489e-05], ['gogo->backend()->convert_expression(int_btype,', 1.559300186076489e-05], ['casting', 1.559300186076489e-05], ['this->get_map_type();', 1.559300186076489e-05], ['map,', 1.559300186076489e-05], ['(field', 1.559300186076489e-05], ['collect', 1.559300186076489e-05], ['indicating', 1.559300186076489e-05], ['type->struct_type();', 1.559300186076489e-05], ['results;', 1.559300186076489e-05], ['above,', 1.559300186076489e-05], ['".";', 1.559300186076489e-05], ['allocate', 1.559300186076489e-05], ['this->type_->get_backend(gogo);', 1.559300186076489e-05], ['struct"));', 1.559300186076489e-05], ['++pv,', 1.559300186076489e-05], ['"struct', 1.559300186076489e-05], ['long>*', 1.559300186076489e-05], ['flattening', 1.559300186076489e-05], ['unused', 1.559300186076489e-05], ['count,', 1.559300186076489e-05], ['(type->classification()', 1.559300186076489e-05], ['key.', 1.559300186076489e-05], ['sf', 1.559300186076489e-05], ['go_error_at(index_expr->location(),', 1.559300186076489e-05], ['vals->end();', 1.559300186076489e-05], ['go_error_at((*p)->location(),', 1.559300186076489e-05], ['static_cast<const', 1.559300186076489e-05], ['laid', 1.559300186076489e-05], ['this->type_->named_type();', 1.559300186076489e-05], ["'.';", 1.559300186076489e-05], ['field);', 1.559300186076489e-05], ['error:', 1.559300186076489e-05], ['this->begin();', 1.559300186076489e-05], ['this->end();', 1.559300186076489e-05], ['NC_INVALID:', 1.559300186076489e-05], ['rune', 1.559300186076489e-05], ['exponent', 1.559300186076489e-05], ['smallest', 1.559300186076489e-05], ['Express', 1.559300186076489e-05], ['positive', 1.559300186076489e-05], ['*m)', 1.559300186076489e-05], ['Loc', 1.559300186076489e-05], ['dsym', 1.559300186076489e-05], ['throw', 1.559300186076489e-05], ['input_location;', 1.559300186076489e-05], ['k++)', 1.559300186076489e-05], ['Then', 1.559300186076489e-05], ['interchanging', 1.559300186076489e-05], ['ratio', 1.559300186076489e-05], ['accesses', 1.559300186076489e-05], ['Number', 1.559300186076489e-05], ['(3);', 1.559300186076489e-05], ['re;', 1.559300186076489e-05], ['(re);', 1.559300186076489e-05], ['*loop)', 1.559300186076489e-05], ['use_operand_p', 1.559300186076489e-05], ['use_p;', 1.559300186076489e-05], ['(is_gimple_debug', 1.559300186076489e-05], ['STMT', 1.559300186076489e-05], ['gsi;', 1.559300186076489e-05], ['(gsi', 1.559300186076489e-05], ['(&gsi))', 1.559300186076489e-05], ['*stmt', 1.559300186076489e-05], ['lhs;', 1.559300186076489e-05], ['undo', 1.559300186076489e-05], ['SSA_NAME_DEF_STMT', 1.559300186076489e-05], ['(SSA_NAME_DEF_STMT', 1.559300186076489e-05], ['(phi,', 1.559300186076489e-05], ['(m_loop,', 1.559300186076489e-05], ['gimple_assign_rhs_code', 1.559300186076489e-05], ['Or', 1.559300186076489e-05], ['re', 1.559300186076489e-05], ['unlikely', 1.559300186076489e-05], ['storing', 1.559300186076489e-05], ['iter;', 1.559300186076489e-05], ['(&gsi,', 1.559300186076489e-05], ['stmt);', 1.559300186076489e-05], ['datarefs)', 1.559300186076489e-05], ['o_idx,', 1.559300186076489e-05], ['vec<ddr_p>', 1.559300186076489e-05], ['(ddr)', 1.559300186076489e-05], ['canonical', 1.559300186076489e-05], ['loop;', 1.559300186076489e-05], ['widest_int', 1.559300186076489e-05], ['idea', 1.559300186076489e-05], ['increasing', 1.559300186076489e-05], ['gimple_opt_pass', 1.559300186076489e-05], ['*ctxt)', 1.559300186076489e-05], ['executes', 1.559300186076489e-05], ['e0', 1.559300186076489e-05], ['(start_loop,', 1.559300186076489e-05], ['Strip', 1.559300186076489e-05], ['(type0)', 1.559300186076489e-05], ['1)));', 1.559300186076489e-05], ['null,', 1.559300186076489e-05], ['(COND_EXPR,', 1.559300186076489e-05], ['(etype)', 1.559300186076489e-05], ['lang_hooks.types.type_for_size', 1.559300186076489e-05], ['(etype),', 1.559300186076489e-05], ['Tdelegate)', 1.559300186076489e-05], ['delegate_object', 1.559300186076489e-05], ['totype->toChars', 1.559300186076489e-05], ['compile-time.', 1.559300186076489e-05], ['()->size', 1.559300186076489e-05], ['size_zero_node,', 1.559300186076489e-05], ["Can't", 1.559300186076489e-05], ['(ce,', 1.559300186076489e-05], ['short', 1.559300186076489e-05], ['dot.', 1.559300186076489e-05], ['0x80)', 1.559300186076489e-05], ['u', 1.559300186076489e-05], ['near', 1.559300186076489e-05], ['unambiguous', 1.559300186076489e-05], ['Special', 1.559300186076489e-05], ['DECL_VISIBILITY', 1.559300186076489e-05], ['BRIG_OPCODE', 1.559300186076489e-05], ['(brig_code_entry_handler', 1.559300186076489e-05], ['operand0,', 1.559300186076489e-05], ['built-ins', 1.559300186076489e-05], ['OPERANDS[2]', 1.559300186076489e-05], ['(arith_type);', 1.559300186076489e-05], ['(BIT_FIELD_REF,', 1.559300186076489e-05], ['stores', 1.559300186076489e-05], ['(int_size_in_bytes', 1.559300186076489e-05], ['(wide_type,', 1.559300186076489e-05], ['operands[1];', 1.559300186076489e-05], ['(opcode', 1.559300186076489e-05], ['seem', 1.559300186076489e-05], ['ISA', 1.559300186076489e-05], ['build_one_cst', 1.559300186076489e-05], ['(input_count', 1.559300186076489e-05], ['*brig_inst', 1.559300186076489e-05], ['(brig_inst->opcode,', 1.559300186076489e-05], ['brig_inst->opcode', 1.559300186076489e-05], ['32b', 1.559300186076489e-05], ['scalars', 1.559300186076489e-05], ['tested', 1.559300186076489e-05], ['builtin.', 1.559300186076489e-05], ['registers', 1.559300186076489e-05], ['Offset', 1.559300186076489e-05], ['readable', 1.559300186076489e-05], ['bytes)', 1.559300186076489e-05], ['SEEK_SET)', 1.559300186076489e-05], ['header.', 1.559300186076489e-05], ['filename.c_str());', 1.559300186076489e-05], ['ssize_t', 1.559300186076489e-05], ['*pname', 1.559300186076489e-05], ["'/')", 1.559300186076489e-05], ['basename', 1.559300186076489e-05], ['open(filename.c_str(),', 1.559300186076489e-05], ['Archive_iterator', 1.559300186076489e-05], ['(s));', 1.559300186076489e-05], ['specialization', 1.559300186076489e-05], ['quoted', 1.559300186076489e-05], ['uppercase', 1.559300186076489e-05], ['messages', 1.559300186076489e-05], ['optional', 1.559300186076489e-05], ['ATTRIBUTE_GCC_DIAG(2,3)', 1.559300186076489e-05], ['xformat', 1.559300186076489e-05], ['xasprintf', 1.559300186076489e-05], ['("%s', 1.559300186076489e-05], ['clean', 1.559300186076489e-05], ['certain', 1.559300186076489e-05], ['splitting', 1.559300186076489e-05], ['thing', 1.559300186076489e-05], ['raw_stride', 1.559300186076489e-05], ['tmp2', 1.559300186076489e-05], ['(b)', 1.559300186076489e-05], ['so,', 1.559300186076489e-05], ['Once', 1.559300186076489e-05], ['accessed', 1.559300186076489e-05], ['apply', 1.559300186076489e-05], ['versioning.', 1.559300186076489e-05], ['maybe_get_assign', 1.559300186076489e-05], ['(flags,', 1.559300186076489e-05], ['(such', 1.559300186076489e-05], ['Process', 1.559300186076489e-05], ['(basic_block', 1.559300186076489e-05], ['natural', 1.559300186076489e-05], ['%T', 1.559300186076489e-05], ['asked', 1.559300186076489e-05], ['nonnull,', 1.559300186076489e-05], ['multiplier', 1.559300186076489e-05], ['strides,', 1.559300186076489e-05], ['Pick', 1.559300186076489e-05], ['pretty', 1.559300186076489e-05], ['Treat', 1.559300186076489e-05], ['TREE_INT_CST_LOW', 1.559300186076489e-05], ['AUTO_DUMP_SCOPE', 1.559300186076489e-05], ['Export.', 1.559300186076489e-05], ['versions', 1.559300186076489e-05], ['n1,', 1.559300186076489e-05], ['n2)', 1.559300186076489e-05], ['Methods', 1.559300186076489e-05], ['(no->is_function()', 1.559300186076489e-05], ['Package*>&', 1.559300186076489e-05], ['sorted', 1.559300186076489e-05], ['processor', 1.559300186076489e-05], ['problems', 1.559300186076489e-05], ['checksum', 1.559300186076489e-05], ['Traverse(traverse_types),', 1.559300186076489e-05], ['relies', 1.559300186076489e-05], ['go_assert(type', 1.559300186076489e-05], ['no->func_value();', 1.559300186076489e-05], ['>::const_iterator', 1.559300186076489e-05], ['src,', 1.559300186076489e-05], ['edges', 1.559300186076489e-05], ['pci', 1.559300186076489e-05], ['"init"', 1.559300186076489e-05], ['"C"', 1.559300186076489e-05], ['adds', 1.559300186076489e-05], ['orig_stream;', 1.559300186076489e-05], ['"varasm.h"', 1.559300186076489e-05], ['namespace.', 1.559300186076489e-05], ['(decl->storage_class', 1.559300186076489e-05], ['ARG', 1.559300186076489e-05], ['build_float_cst', 1.559300186076489e-05], ['type->toBasetype', 1.559300186076489e-05], ['make_struct_type', 1.559300186076489e-05], ['callee,', 1.559300186076489e-05], ['(ctype));', 1.559300186076489e-05], ['lvalue_p', 1.559300186076489e-05], ['causes', 1.559300186076489e-05], ['(t2),', 1.559300186076489e-05], ['integer_zero_node,', 1.559300186076489e-05], ['(t2,', 1.559300186076489e-05], ['Integer', 1.559300186076489e-05], ['(build1', 1.559300186076489e-05], ['Wrap', 1.559300186076489e-05], ['bind', 1.559300186076489e-05], ['(offset);', 1.559300186076489e-05], ['constant_p', 1.559300186076489e-05], ['finished', 1.559300186076489e-05], ['ANON_AGGR_TYPE_P', 1.559300186076489e-05], ['(field)))', 1.559300186076489e-05], ['(field),', 1.559300186076489e-05], ['do.', 1.559300186076489e-05], ['TARGET_EXPR_INITIAL', 1.559300186076489e-05], ['fold_build2_loc', 1.559300186076489e-05], ['rhs);', 1.559300186076489e-05], ['COMPOUND_EXPR,', 1.559300186076489e-05], ['incomplete', 1.559300186076489e-05], ['maybe', 1.559300186076489e-05], ['get_function_type', 1.559300186076489e-05], ['FD.', 1.559300186076489e-05], ['d_build_call_expr', 1.559300186076489e-05], ['*arg', 1.559300186076489e-05], ['basetype', 1.559300186076489e-05], ['fdparent', 1.559300186076489e-05], ['get_frameinfo', 1.559300186076489e-05], ['(value,', 1.559300186076489e-05], ['(ffi))', 1.559300186076489e-05], ['*v', 1.559300186076489e-05], ['layout_type', 1.559300186076489e-05], ['FRAMEINFO_CREATES_FRAME', 1.559300186076489e-05], ['from.', 1.559300186076489e-05], ['truncate', 1.559300186076489e-05], ['GO_EXTERN_C', 1.559300186076489e-05], ['(brig_inst->type);', 1.559300186076489e-05], ['(conv_src_size', 1.559300186076489e-05], ['(unsigned_int_type,', 1.559300186076489e-05], ['indicated', 1.559300186076489e-05], ['(src_type,', 1.559300186076489e-05], ['casted_input);', 1.559300186076489e-05], ['(builtin,', 1.559300186076489e-05], ['mod', 1.559300186076489e-05], ['supported.', 1.559300186076489e-05], ['1.0', 1.559300186076489e-05], ['__attribute__', 1.559300186076489e-05], ['representation,', 1.559300186076489e-05], ['xval[i];', 1.559300186076489e-05], ['absolute', 1.559300186076489e-05], ['CHAR_BIT', 1.559300186076489e-05], ['MIN', 1.559300186076489e-05], ['wi::min_value', 1.559300186076489e-05], ['signedness', 1.559300186076489e-05], ['xprecision,', 1.559300186076489e-05], ['SIGNED', 1.559300186076489e-05], ['note', 1.559300186076489e-05], ['(op0len', 1.559300186076489e-05], ['l--;', 1.559300186076489e-05], ['UNSIGNED);', 1.559300186076489e-05], ['OFFSET.', 1.559300186076489e-05], ['wi::lshift', 1.559300186076489e-05], ['wi::bit_and_not', 1.559300186076489e-05], ['op0mask', 1.559300186076489e-05], ['op0[l0]', 1.559300186076489e-05], ['(o0', 1.559300186076489e-05], ['HOST_BITS_PER_HALF_WIDE_INT;', 1.559300186076489e-05], ['implemented.', 1.559300186076489e-05], ['HOST_BITS_PER_HALF_WIDE_INT];', 1.559300186076489e-05], ['inputs', 1.559300186076489e-05], ['o1;', 1.559300186076489e-05], ['(r,', 1.559300186076489e-05], ['k;', 1.559300186076489e-05], ['x.precision', 1.559300186076489e-05], ['OVF_NONE;', 1.559300186076489e-05], ['m,', 1.559300186076489e-05], ['*remainder_len', 1.559300186076489e-05], ['UNSIGNED,', 1.559300186076489e-05], ['XPRECISION', 1.559300186076489e-05], ['exact', 1.559300186076489e-05], ['(res', 1.559300186076489e-05], ['wraps', 1.559300186076489e-05], ['16,', 1.559300186076489e-05], ['(0xf1,', 1.559300186076489e-05], ['"immediate"', 1.559300186076489e-05], ['opt_result', 1.559300186076489e-05], ['ASSERT_DUMPED_TEXT_EQ', 1.559300186076489e-05], ['Example', 1.559300186076489e-05], ['fails,', 1.559300186076489e-05], ['stmt:', 1.559300186076489e-05], ['compatible', 1.559300186076489e-05], ['initializations', 1.559300186076489e-05], ['reading', 1.559300186076489e-05], ['D,', 1.559300186076489e-05], ['(build_address', 1.559300186076489e-05], ['(cd));', 1.559300186076489e-05], ['base_vtable_offset', 1.559300186076489e-05], ['(id->vtbl.dim', 1.559300186076489e-05], ['Name', 1.559300186076489e-05], ['this->layout_string', 1.559300186076489e-05], ['(ti->next));', 1.559300186076489e-05], ['function(Object)', 1.559300186076489e-05], ['Tclass);', 1.559300186076489e-05], ['(cd->isCPPclass', 1.559300186076489e-05], ['Target::ptrsize;', 1.559300186076489e-05], ['finish_aggregate_type', 1.559300186076489e-05], ['library.', 1.559300186076489e-05], ['"Z");', 1.559300186076489e-05], ['type_info', 1.559300186076489e-05], ['end.', 1.559300186076489e-05], ['argtype', 1.559300186076489e-05], ["`gcc.builtins'", 1.559300186076489e-05], ['save', 1.559300186076489e-05], ['nunits', 1.559300186076489e-05], ['modules', 1.559300186076489e-05], ['64bit', 1.559300186076489e-05], ['Cannot', 1.559300186076489e-05], ['TREE_NOTHROW', 1.559300186076489e-05], ['(long_double_type_node);', 1.559300186076489e-05], ['VALUE)', 1.559300186076489e-05], ['RETURN)', 1.559300186076489e-05], ['ARG10,', 1.559300186076489e-05], ['ATTRIBUTE_UNUSED,', 1.559300186076489e-05], ['11,', 1.559300186076489e-05], ['*pfilename', 1.559300186076489e-05], ['package_name;', 1.559300186076489e-05], ['is_local_name_exported,', 1.559300186076489e-05], ['option.', 1.559300186076489e-05], ['stream->advance(1);', 1.559300186076489e-05], ['Import_init', 1.559300186076489e-05], ['(fntype->is_method())', 1.559300186076489e-05], ['careful', 1.559300186076489e-05], ['this->types_[index]', 1.559300186076489e-05], ['no->type_value();', 1.559300186076489e-05], ['(I', 1.559300186076489e-05], ['goal.', 1.559300186076489e-05], ['term.', 1.559300186076489e-05], ['PRED_CONSTR:', 1.559300186076489e-05], ['EXPR_CONSTR:', 1.559300186076489e-05], ['TYPE_CONSTR:', 1.559300186076489e-05], ['ICONV_CONSTR:', 1.559300186076489e-05], ['DEDUCT_CONSTR:', 1.559300186076489e-05], ['EXCEPT_CONSTR:', 1.559300186076489e-05], ['invalid;', 1.559300186076489e-05], ['c1', 1.559300186076489e-05], ['CHECK_CONSTR_CONCEPT', 1.559300186076489e-05], ['CHECK_CONSTR_ARGS', 1.559300186076489e-05], ['parameterized', 1.559300186076489e-05], ['ill-formed.', 1.559300186076489e-05], ['disjunction', 1.559300186076489e-05], ['state.', 1.559300186076489e-05], ['LEFT', 1.559300186076489e-05], ['m_parent.get_mangled_name', 1.559300186076489e-05], ['e->e2->type->toBasetype', 1.559300186076489e-05], ['t2));', 1.559300186076489e-05], ['sizes.', 1.559300186076489e-05], ['newlength', 1.559300186076489e-05], ['initializations.', 1.559300186076489e-05], ['Produce', 1.559300186076489e-05], ['(fndecl));', 1.559300186076489e-05], ['initializer,', 1.559300186076489e-05], ['new_call;', 1.559300186076489e-05], ['tb,', 1.559300186076489e-05], ['alignment.', 1.559300186076489e-05], ['{"<float.h>",', 1.559300186076489e-05], ['"<cfloat>"}', 1.559300186076489e-05], ['use_placeholder,', 1.559300186076489e-05], ['std::vector<Backend::Btyped_identifier>*', 1.559300186076489e-05], ['Forward_declaration_type*', 1.559300186076489e-05], ['(rhs->integer_type()', 1.559300186076489e-05], ['NULL)))', 1.559300186076489e-05], ['messages.', 1.559300186076489e-05], ['char[len];', 1.559300186076489e-05], ['convertible', 1.559300186076489e-05], ['(!ins.second', 1.559300186076489e-05], ['Linemap::unknown_location();', 1.559300186076489e-05], ['(phash', 1.559300186076489e-05], ['*phash', 1.559300186076489e-05], ['is_common', 1.559300186076489e-05], ['Type::lookup_bool_type(),', 1.559300186076489e-05], ['uint32_type,', 1.559300186076489e-05], ['16);', 1.559300186076489e-05], ['8:', 1.559300186076489e-05], ['Named_object**', 1.559300186076489e-05], ['*equal_fn', 1.559300186076489e-05], ['build_functions', 1.559300186076489e-05], ['equal_fntype);', 1.559300186076489e-05], ['gogo->start_block(bloc);', 1.559300186076489e-05], ['gogo->finish_block(bloc);', 1.559300186076489e-05], ['Statement::make_temporary(pt,', 1.559300186076489e-05], ['ptrsize;', 1.559300186076489e-05], ['vals->push_back(Expression::make_nil(bloc));', 1.559300186076489e-05], ['this->plain_type_descriptor(gogo,', 1.559300186076489e-05], ['bool_type,', 1.559300186076489e-05], ['runtime_type_kind)', 1.559300186076489e-05], ['runtime_type_kind);', 1.559300186076489e-05], ['this->is_abstract_', 1.559300186076489e-05], ['saw_errors());', 1.559300186076489e-05], ['Float_type*', 1.559300186076489e-05], ['go_assert(p->is_field_name("_type"));', 1.559300186076489e-05], ['(");', 1.559300186076489e-05], ['exp->write_c_string(",', 1.559300186076489e-05], ['exp->write_c_string(")");', 1.559300186076489e-05], ["',')", 1.559300186076489e-05], ['"elem",', 1.559300186076489e-05], ['Reflection', 1.559300186076489e-05], ['go_error_at(p->location(),', 1.559300186076489e-05], ['ambiguous.', 1.559300186076489e-05], ['++ps;', 1.559300186076489e-05], ['Expression::make_temporary_reference(retval,', 1.559300186076489e-05], ['Statement::make_assignment(tref,', 1.559300186076489e-05], ["ret->push_back('.');", 1.559300186076489e-05], ['(this->local_methods_', 1.559300186076489e-05], ['there.', 1.559300186076489e-05], ['channel.', 1.559300186076489e-05], ['this->seen_in_compare_is_identity_', 1.559300186076489e-05], ['this->named_btype_', 1.559300186076489e-05], ['base);', 1.559300186076489e-05], ['specified,', 1.559300186076489e-05], ['headers', 1.559300186076489e-05], ['relative', 1.559300186076489e-05], ['directive.', 1.559300186076489e-05], ['"***', 1.559300186076489e-05], ['extra_headers="${extra_headers}', 1.559300186076489e-05], ['-f', 1.559300186076489e-05], ['separated', 1.559300186076489e-05], ['glibc', 1.559300186076489e-05], ["/g'`", 1.559300186076489e-05], ['TM_MULTILIB_CONFIG=`echo', 1.559300186076489e-05], ['$TM_MULTILIB_CONFIG', 1.559300186076489e-05], ['linux-android.h', 1.559300186076489e-05], ['.init_array', 1.559300186076489e-05], ['script', 1.559300186076489e-05], ['GAS', 1.559300186076489e-05], ['gcc_cv_initfini_array=yes', 1.559300186076489e-05], ['arm/t-arm', 1.559300186076489e-05], ['arm/elf.h', 1.559300186076489e-05], ['vxworks.h', 1.559300186076489e-05], ['linux-android.opt"', 1.559300186076489e-05], ['soft', 1.559300186076489e-05], ['pa-d.o"', 1.559300186076489e-05], ['openbsd-libpthread.h', 1.559300186076489e-05], ['openbsd.opt"', 1.559300186076489e-05], ['hpux-stdint.h"', 1.559300186076489e-05], ['need_64bit_isa=yes', 1.559300186076489e-05], ['i386/i386elf.h', 1.559300186076489e-05], ['rtems.h"', 1.559300186076489e-05], ['i386/gnu-user-common.h', 1.559300186076489e-05], ['msformat-c.o"', 1.559300186076489e-05], ['x$enable_threads', 1.559300186076489e-05], ['"Cannot', 1.559300186076489e-05], ['--with-cpu=$with_cpu"', 1.559300186076489e-05], ['default_m68k_cpu=68020', 1.559300186076489e-05], ['microblaze-c.o"', 1.559300186076489e-05], ['enable_mips_multilibs="yes"', 1.559300186076489e-05], ['usegas.h', 1.559300186076489e-05], ['rs6000/t-ppcgas', 1.559300186076489e-05], ['s390-c.o"', 1.559300186076489e-05], ['options', 1.559300186076489e-05], ['Infer', 1.559300186076489e-05], ['architecture', 1.559300186076489e-05], ['--with-$which=$val"', 1.559300186076489e-05], ['--with-$which=$val."', 1.559300186076489e-05], ['divide', 1.559300186076489e-05], ['"#undef', 1.559300186076489e-05], ['destination.', 1.559300186076489e-05], ['(operands[2])', 1.559300186076489e-05], ['(src,', 1.559300186076489e-05], ['(addr1_alignment', 1.559300186076489e-05], ['aligned,', 1.559300186076489e-05], ['emit_barrier_after', 1.559300186076489e-05], ['(jump);', 1.559300186076489e-05], ['addr1));', 1.559300186076489e-05], ['tmp2)));', 1.559300186076489e-05], ['current_addr,', 1.559300186076489e-05], ['BrigSectionHeader', 1.559300186076489e-05], ['handler', 1.559300186076489e-05], ['pragmas', 1.559300186076489e-05], ['finish_function', 1.559300186076489e-05], ['(ADDR_EXPR,', 1.559300186076489e-05], ['(ptr_var)', 1.559300186076489e-05], ['BrigDirectiveExecutable', 1.559300186076489e-05], ['STRIP_NOPS', 1.559300186076489e-05], ['*buf', 1.559300186076489e-05], ['alloca', 1.559300186076489e-05], ['IDENTIFIER_PRETTY_NAME', 1.559300186076489e-05], ['d->members->dim;', 1.559300186076489e-05], ['(*d->members)[i];', 1.559300186076489e-05], ['(d->type->ty', 1.559300186076489e-05], ['Terror)', 1.559300186076489e-05], ['(d->sinit);', 1.559300186076489e-05], ['*member', 1.559300186076489e-05], ['DECL_ASSEMBLER_NAME', 1.559300186076489e-05], ['declare_local_var', 1.559300186076489e-05], ['(global.errors)', 1.559300186076489e-05], ['Global', 1.559300186076489e-05], ['FUNCTION_DECL);', 1.559300186076489e-05], ['non-local', 1.559300186076489e-05], ['%qE', 1.559300186076489e-05], ['(DECL_SOURCE_LOCATION', 1.559300186076489e-05], ['symtab_node::get', 1.559300186076489e-05], ['XNEWVEC', 1.559300186076489e-05], ['Such', 1.559300186076489e-05], ['alloc_stmt_list', 1.559300186076489e-05], ['(b', 1.559300186076489e-05], ['(decl->vtblsym)', 1.559300186076489e-05], ['make_decl_one_only', 1.559300186076489e-05], ['(*node);', 1.559300186076489e-05], ['(*node));', 1.559300186076489e-05], ['branch.', 1.559300186076489e-05], ['173)', 1.559300186076489e-05], ['(ne', 1.559300186076489e-05], ['__VA_ARGS__);', 1.559300186076489e-05], ['set_of_reg', 1.559300186076489e-05], ['const_rtx', 1.559300186076489e-05], ['*start_insn,', 1.559300186076489e-05], ['(bb));', 1.559300186076489e-05], ['*i', 1.559300186076489e-05], ['insn.', 1.559300186076489e-05], ['abort', 1.559300186076489e-05], ['rtl_opt_pass', 1.559300186076489e-05], ['(gcc::context*', 1.559300186076489e-05], ['y)', 1.559300186076489e-05], ['(cbranch_trace&', 1.559300186076489e-05], ['inv_cstore_count,', 1.559300186076489e-05], ['(m_ccreg)', 1.559300186076489e-05], ['follow', 1.559300186076489e-05], ['(y))', 1.559300186076489e-05], ['predecessor', 1.559300186076489e-05], ['()->index);', 1.559300186076489e-05], ['i->bb->index);', 1.559300186076489e-05], ['emit_insn_after', 1.559300186076489e-05], ['(trace.setcc.set_src', 1.559300186076489e-05], ['(Function::Results::const_iterator', 1.559300186076489e-05], ['(!no->is_variable())', 1.559300186076489e-05], ['Ast_dump_context', 1.559300186076489e-05], ['this->emitpre(notag,', 1.559300186076489e-05], ['t0,', 1.559300186076489e-05], ['(c->n', 1.559300186076489e-05], ['c->size,', 1.559300186076489e-05], ['place.', 1.559300186076489e-05], ['&c,', 1.559300186076489e-05], ['*buffer)', 1.559300186076489e-05], ['Fetch', 1.559300186076489e-05], ['((unsigned)', 1.559300186076489e-05], ['p[2]', 1.559300186076489e-05], ['tracker,', 1.559300186076489e-05], ['purpose', 1.559300186076489e-05], ['*seq', 1.559300186076489e-05], ['needs_tracking', 1.559300186076489e-05], ['0xc0)', 1.559300186076489e-05], ['encoding.', 1.559300186076489e-05], ['character");', 1.559300186076489e-05], ['0x3f);', 1.559300186076489e-05], ['C2', 1.559300186076489e-05], ['operator,', 1.559300186076489e-05], ['(c1', 1.559300186076489e-05], ['6},', 1.559300186076489e-05], ['17},', 1.559300186076489e-05], ['d_label_entry', 1.559300186076489e-05], ['binding_level', 1.559300186076489e-05], ['tree_stmt_iterator', 1.559300186076489e-05], ['statement;', 1.559300186076489e-05], ['enforce', 1.559300186076489e-05], ['(s->_body)', 1.559300186076489e-05], ['(s->_body);', 1.559300186076489e-05], ['differs', 1.559300186076489e-05], ['assembly', 1.559300186076489e-05], ['(id,', 1.559300186076489e-05], ['"main"', 1.559300186076489e-05], ['B,', 1.559300186076489e-05], ['pvar', 1.559300186076489e-05], ['go_error_at(var->location(),', 1.559300186076489e-05], ['here",', 1.559300186076489e-05], ['var->init();', 1.559300186076489e-05], ['var_decl', 1.559300186076489e-05], ['call);', 1.559300186076489e-05], ['go_assert(!this->functions_.empty());', 1.559300186076489e-05], ['(is_varargs', 1.559300186076489e-05], ['wants', 1.559300186076489e-05], ['n.c_str());', 1.559300186076489e-05], ['traverse_statements', 1.559300186076489e-05], ['bool)', 1.559300186076489e-05], ['hold_inserter;', 1.559300186076489e-05], ['Traverse(traverse_functions', 1.559300186076489e-05], ['ce->fn();', 1.559300186076489e-05], ['(no->is_variable())', 1.559300186076489e-05], ['traverse_mask', 1.559300186076489e-05], ['asm_name', 1.559300186076489e-05], ['named_function);', 1.559300186076489e-05], ['end_loc);', 1.559300186076489e-05], ['ifb->name().c_str());', 1.559300186076489e-05], ['range,', 1.559300186076489e-05], ['is_address_taken', 1.559300186076489e-05], ['is_address_taken,', 1.559300186076489e-05], ['longdouble::set', 1.559300186076489e-05], ['overflow_undefined)', 1.559300186076489e-05], ['sign)', 1.559300186076489e-05], ['wi::min', 1.559300186076489e-05], ['vr0_lb,', 1.559300186076489e-05], ['overflow_undefined))', 1.559300186076489e-05], ['vr0_ub,', 1.559300186076489e-05], ['(res_lb,', 1.559300186076489e-05], ['2]', 1.559300186076489e-05], ['&vr0_max,', 1.559300186076489e-05], ['wmax,', 1.559300186076489e-05], ['d_option.deps_target->writeByte', 1.559300186076489e-05], ['paths.', 1.559300186076489e-05], ['SKIPOPT;', 1.559300186076489e-05], ['i),', 1.559300186076489e-05], ['(BRIG_OPCODE_WORKGROUPSIZE,', 1.559300186076489e-05], ['BIND_EXPR_VARS', 1.559300186076489e-05], ['(uint32_type_node);', 1.559300186076489e-05], ['(operand_type,', 1.559300186076489e-05], ['s_custom_builtins.end', 1.559300186076489e-05], ['(brig_inner_type', 1.559300186076489e-05], ['vec_size', 1.559300186076489e-05], ['aie', 1.559300186076489e-05], ['Node::make_node(expr);', 1.559300186076489e-05], ['intrinsics', 1.559300186076489e-05], ['overload', 1.559300186076489e-05], ['END_BUILTINS;', 1.559300186076489e-05], ['END_BUILTINS);', 1.559300186076489e-05], ["node's", 1.559300186076489e-05], ['Node*>', 1.559300186076489e-05], ['++n)', 1.559300186076489e-05], ['this->context_->gogo();', 1.559300186076489e-05], ['debug_level', 1.559300186076489e-05], ['content', 1.559300186076489e-05], ['Lose', 1.559300186076489e-05], ['dst->ast_format(gogo).c_str(),', 1.559300186076489e-05], ['src->ast_format(gogo).c_str(),', 1.559300186076489e-05], ['(src->expr()', 1.559300186076489e-05], ['heap",', 1.559300186076489e-05], ['mod_loop_depth;', 1.559300186076489e-05], ['BRIG_TYPE_ARRAY)', 1.559300186076489e-05], ['BRIG_SEGMENT_GROUP)', 1.559300186076489e-05], ['(instr_type);', 1.559300186076489e-05], ['(BrigType16_t', 1.559300186076489e-05], ['next_data;', 1.559300186076489e-05], ['ftz', 1.559300186076489e-05], ['double_type_node,', 1.559300186076489e-05], ['(ret_value)', 1.559300186076489e-05], ['Expr', 1.559300186076489e-05], ['prev_pow2', 1.559300186076489e-05], ['(in_args,', 1.559300186076489e-05], ['d_int64', 1.559300186076489e-05], ['*fmt', 1.559300186076489e-05], ['Gcc_tree(t)', 1.559300186076489e-05], ['placeholder,', 1.559300186076489e-05], ['std::vector<std::vector<Bexpression*>', 1.559300186076489e-05], ['void_type_node', 1.559300186076489e-05], ['btype)', 1.559300186076489e-05], ['RECORD_TYPE);', 1.559300186076489e-05], ['gcc_assert(field', 1.559300186076489e-05], ['(TREE_CODE(type_tree)', 1.559300186076489e-05], ['gcc_unreachable();', 1.559300186076489e-05], ['pop_cfun();', 1.559300186076489e-05], ['DECL_EXTERNAL(decl)', 1.559300186076489e-05], ['TREE_PUBLIC(decl)', 1.559300186076489e-05], ['TREE_USED(decl)', 1.559300186076489e-05], ['compute_reloc_for_constant', 1.559300186076489e-05], ['tassign)', 1.559300186076489e-05], ['Statement::make_error_statement(this->location());', 1.559300186076489e-05], ['moe(b);', 1.559300186076489e-05], ['Expression::make_temporary_reference(val_temp,', 1.559300186076489e-05], ['do_traverse_assignments(Traverse_assignments*)', 1.559300186076489e-05], ['Statement_inserter*);', 1.559300186076489e-05], ['plhs', 1.559300186076489e-05], ['(lhs->size()', 1.559300186076489e-05], ['(this->cases_', 1.559300186076489e-05], ['clauses,', 1.559300186076489e-05], ['range_temp', 1.559300186076489e-05], ['iter_init;', 1.559300186076489e-05], ['Expression::make_temporary_reference(value_temp,', 1.559300186076489e-05], ['iter_init->add_statement(s);', 1.559300186076489e-05], ['IdentifierList', 1.559300186076489e-05], ['this->gogo_->pack_hidden_name(name,', 1.559300186076489e-05], ['CompleteType', 1.559300186076489e-05], ['Signature', 1.559300186076489e-05], ['%<}%>");', 1.559300186076489e-05], ['(this->peek_token()->is_eof())', 1.559300186076489e-05], ['pragmas)', 1.559300186076489e-05], ['(!this->peek_token()->is_op(OPERATOR_RPAREN))', 1.559300186076489e-05], ['"variables', 1.559300186076489e-05], ['redeclared', 1.559300186076489e-05], ['new");', 1.559300186076489e-05], ['RangeClause.', 1.559300186076489e-05], ['expr.("type")', 1.559300186076489e-05], ['"type").', 1.559300186076489e-05], ['Range_clause*', 1.559300186076489e-05], ['may_be_composite_lit);', 1.559300186076489e-05], ['this->block();', 1.559300186076489e-05], ['(token->is_op(OPERATOR_SEMICOLON))', 1.559300186076489e-05], ['left;', 1.559300186076489e-05], ['right_precedence', 1.559300186076489e-05], ['SimpleStat', 1.559300186076489e-05], ['this->gogo_->add_block(this->gogo_->finish_block(this->location()),', 1.559300186076489e-05], ['switch_val', 1.559300186076489e-05], ['<-c:', 1.559300186076489e-05], ['*is_send', 1.559300186076489e-05], ['*channel', 1.559300186076489e-05], ['layout_aggregate_members', 1.559300186076489e-05], ['t->sym);', 1.559300186076489e-05], ['_d_dso_registry', 1.559300186076489e-05], ['E9', 1.559300186076489e-05], ['MinusOne', 1.559300186076489e-05], ['Precision', 1.559300186076489e-05], ['(verbose)', 1.559300186076489e-05], ['verbose_cmp(image,', 1.559300186076489e-05], ['strtold', 1.559300186076489e-05], ['template<>', 1.559300186076489e-05], ['strtod', 1.559300186076489e-05], ['Guard', 1.559300186076489e-05], ['OneAndHalf;', 1.559300186076489e-05], ['ErrCnt[Serious]', 1.559300186076489e-05], ['alleges', 1.559300186076489e-05], ['/*...', 1.559300186076489e-05], ['(Q', 1.559300186076489e-05], ['Y.str());', 1.559300186076489e-05], ['D;', 1.559300186076489e-05], ['E0;', 1.559300186076489e-05], ['E9)', 1.559300186076489e-05], ['(setjmp', 1.559300186076489e-05], ['(V9', 1.559300186076489e-05], ['resolve_constraint_check', 1.559300186076489e-05], ['deduce', 1.559300186076489e-05], ['template-id', 1.559300186076489e-05], ['tf_none,', 1.559300186076489e-05], ['(src_parm);', 1.559300186076489e-05], ['satisfaction', 1.559300186076489e-05], ['satisfy_constraint', 1.559300186076489e-05], ['(elide_constraint_failure_p())', 1.559300186076489e-05], ['(atomic_opcode', 1.559300186076489e-05], ['json_from_expanded_location', 1.559300186076489e-05], ['(diagnostic_context', 1.559300186076489e-05], ['diag_obj->set', 1.559300186076489e-05], ['"runtime.h"', 1.2994168217304074e-05], ['Runtime_function_type', 1.2994168217304074e-05], ['double.', 1.2994168217304074e-05], ['Type::lookup_integer_type("int64");', 1.2994168217304074e-05], [',', 1.2994168217304074e-05], ['Malcolm', 1.2994168217304074e-05], ['<dmalcolm@redhat.com>.', 1.2994168217304074e-05], ['"gimple.h"', 1.2994168217304074e-05], ['pretty_printer', 1.2994168217304074e-05], ['tmp;', 1.2994168217304074e-05], ['(LOCATION_LOCUS', 1.2994168217304074e-05], ['LOC', 1.2994168217304074e-05], ['BLOCK', 1.2994168217304074e-05], ['location_to_json', 1.2994168217304074e-05], ['opt_pass', 1.2994168217304074e-05], ['(info);', 1.2994168217304074e-05], ['print_dec', 1.2994168217304074e-05], ['print_decs', 1.2994168217304074e-05], ['file);', 1.2994168217304074e-05], ['buf[WIDE_INT_PRINT_BUFFER_SIZE];', 1.2994168217304074e-05], ['"go-encode-id.h"', 1.2994168217304074e-05], ['classification,', 1.2994168217304074e-05], ['classification_(classification),', 1.2994168217304074e-05], ['location_(location)', 1.2994168217304074e-05], ['rhs)', 1.2994168217304074e-05], ['times.', 1.2994168217304074e-05], ['want.', 1.2994168217304074e-05], ['(type->float_type()', 1.2994168217304074e-05], ['(type->complex_type()', 1.2994168217304074e-05], ['VAL,', 1.2994168217304074e-05], ['Expression::make_binary(OPERATOR_LT,', 1.2994168217304074e-05], ['do_numeric_constant_value(Numeric_constant*', 1.2994168217304074e-05], ['parsing.', 1.2994168217304074e-05], ['lowering.', 1.2994168217304074e-05], ['lowered.', 1.2994168217304074e-05], ['Something', 1.2994168217304074e-05], ['can.', 1.2994168217304074e-05], ['go_assert(fn', 1.2994168217304074e-05], ['fn->func_value()->get_or_make_decl(gogo,', 1.2994168217304074e-05], ['temporary.', 1.2994168217304074e-05], ['Type_context*);', 1.2994168217304074e-05], ['go_assert(this->type_', 1.2994168217304074e-05], ['bt,', 1.2994168217304074e-05], ['&decl);', 1.2994168217304074e-05], ['gogo->backend()->var_expression(this->bvar_,', 1.2994168217304074e-05], ['field)', 1.2994168217304074e-05], ['Constructor.', 1.2994168217304074e-05], ['uintptr_type);', 1.2994168217304074e-05], ['(no->is_function_declaration()', 1.2994168217304074e-05], ['gogo->package_name()', 1.2994168217304074e-05], ['asm_name(go_selectively_encode_id(var_name));', 1.2994168217304074e-05], ['Named_object::NAMED_OBJECT_PACKAGE:', 1.2994168217304074e-05], ['Unknown_expression*', 1.2994168217304074e-05], ['val_(val),', 1.2994168217304074e-05], ['do_inlining_cost()', 1.2994168217304074e-05], ['"false");', 1.2994168217304074e-05], ['EXPORT_FORMAT_V3)', 1.2994168217304074e-05], ['gogo->backend()->constructor_expression(btype,', 1.2994168217304074e-05], ["'\\t')", 1.2994168217304074e-05], ['imp->get_char();', 1.2994168217304074e-05], ['do_check_types(Gogo*);', 1.2994168217304074e-05], ['mpz_get_str(NULL,', 1.2994168217304074e-05], ['point,', 1.2994168217304074e-05], ['(pos', 1.2994168217304074e-05], ['integer.', 1.2994168217304074e-05], ['zval;', 1.2994168217304074e-05], ['mpz_clear(zval);', 1.2994168217304074e-05], ['32);', 1.2994168217304074e-05], ['mp_exp_t', 1.2994168217304074e-05], ['exponent);', 1.2994168217304074e-05], ['found()', 1.2994168217304074e-05], ['this->found_;', 1.2994168217304074e-05], ['found_;', 1.2994168217304074e-05], ['mutable', 1.2994168217304074e-05], ['Expression::traverse(&init,', 1.2994168217304074e-05], ['float,', 1.2994168217304074e-05], ['Expression::make_nil(loc);', 1.2994168217304074e-05], ['this->expr_;', 1.2994168217304074e-05], ['go_warning_at(this->location(),', 1.2994168217304074e-05], ['this->expr_', 1.2994168217304074e-05], ['type->float_type()', 1.2994168217304074e-05], ['type->complex_type()', 1.2994168217304074e-05], ['expr_type,', 1.2994168217304074e-05], ['Could', 1.2994168217304074e-05], ['type->function_type()', 1.2994168217304074e-05], ['this->expr_);', 1.2994168217304074e-05], ['Output', 1.2994168217304074e-05], ['old_context', 1.2994168217304074e-05], ['construction.', 1.2994168217304074e-05], ['barriers.', 1.2994168217304074e-05], ['Type_conversion_expression*', 1.2994168217304074e-05], ['unsafe.Pointer', 1.2994168217304074e-05], ['mpc_init2(val,', 1.2994168217304074e-05], ['this->location(),', 1.2994168217304074e-05], ['subtype', 1.2994168217304074e-05], ['gogo->backend()->binary_expression(OPERATOR_EQEQ,', 1.2994168217304074e-05], ['op;', 1.2994168217304074e-05], ["'-':", 1.2994168217304074e-05], ['May', 1.2994168217304074e-05], ['comparing', 1.2994168217304074e-05], ['OPERATOR_NOTEQ)', 1.2994168217304074e-05], ['*cmp', 1.2994168217304074e-05], ['equality.', 1.2994168217304074e-05], ['exprs', 1.2994168217304074e-05], ['field_index', 1.2994168217304074e-05], ['expressions,', 1.2994168217304074e-05], ['constants,', 1.2994168217304074e-05], ['this->report_error(_("incompatible', 1.2994168217304074e-05], ['rval;', 1.2994168217304074e-05], ['use_left_type', 1.2994168217304074e-05], ['zero);', 1.2994168217304074e-05], ['zero_expr,', 1.2994168217304074e-05], ['nice', 1.2994168217304074e-05], ['say', 1.2994168217304074e-05], ['zexpr', 1.2994168217304074e-05], ['Expression_list::iterator', 1.2994168217304074e-05], ['0:', 1.2994168217304074e-05], ['(fn->is_function())', 1.2994168217304074e-05], ['fn->func_declaration_value()->type();', 1.2994168217304074e-05], ['etype,', 1.2994168217304074e-05], ['orig_fntype', 1.2994168217304074e-05], ['matter.', 1.2994168217304074e-05], ['orig_params', 1.2994168217304074e-05], ['(orig_params', 1.2994168217304074e-05], ['new_params', 1.2994168217304074e-05], ['gogo->lookup(p->name(),', 1.2994168217304074e-05], ['call->set_varargs_are_lowered();', 1.2994168217304074e-05], ['NIL_CHECK_DEFAULT,', 1.2994168217304074e-05], ['nil_check', 1.2994168217304074e-05], ['":";', 1.2994168217304074e-05], ['Bound_method_expression*', 1.2994168217304074e-05], ['turns', 1.2994168217304074e-05], ['%<...%>', 1.2994168217304074e-05], ['selector', 1.2994168217304074e-05], ['base.', 1.2994168217304074e-05], ['BUILTIN_NEW:', 1.2994168217304074e-05], ['BUILTIN_MAKE:', 1.2994168217304074e-05], ['BUILTIN_RECOVER:', 1.2994168217304074e-05], ['Calling', 1.2994168217304074e-05], ['key_temp', 1.2994168217304074e-05], ['e3', 1.2994168217304074e-05], ['e1,', 1.2994168217304074e-05], ['e2,', 1.2994168217304074e-05], ['holding', 1.2994168217304074e-05], ['this->args()->begin();', 1.2994168217304074e-05], ['*pa', 1.2994168217304074e-05], ['BUILTIN_COPY:', 1.2994168217304074e-05], ['BUILTIN_PANIC:', 1.2994168217304074e-05], ['parg', 1.2994168217304074e-05], ['first_arg', 1.2994168217304074e-05], ['(type->map_type()', 1.2994168217304074e-05], ['Expression::make_temporary_reference(len_temp,', 1.2994168217304074e-05], ['Expression::make_cast(int_type,', 1.2994168217304074e-05], ['slice_type', 1.2994168217304074e-05], ['call_args', 1.2994168217304074e-05], ['Expression::make_binary(OPERATOR_PLUS,', 1.2994168217304074e-05], ['unsafe_ptr_type', 1.2994168217304074e-05], ['Assignment_statement*', 1.2994168217304074e-05], ['assign;', 1.2994168217304074e-05], ['(arg_type', 1.2994168217304074e-05], ['BUILTIN_SIZEOF:', 1.2994168217304074e-05], ['BUILTIN_ALIGNOF:', 1.2994168217304074e-05], ['BUILTIN_OFFSETOF:', 1.2994168217304074e-05], ['&ret);', 1.2994168217304074e-05], ['args->empty())', 1.2994168217304074e-05], ['is_print', 1.2994168217304074e-05], ['%<%s%>",', 1.2994168217304074e-05], ['nil");', 1.2994168217304074e-05], ['print_stmts', 1.2994168217304074e-05], ['arg1', 1.2994168217304074e-05], ['call->get_backend(context);', 1.2994168217304074e-05], ['errors,', 1.2994168217304074e-05], ['this->args_->begin();', 1.2994168217304074e-05], ['opportunities.', 1.2994168217304074e-05], ['(pa', 1.2994168217304074e-05], ['Expression_list', 1.2994168217304074e-05], ['++pp)', 1.2994168217304074e-05], ['pt;', 1.2994168217304074e-05], ['interface_method', 1.2994168217304074e-05], ['(fntype->parameters()', 1.2994168217304074e-05], ['go_assert(i', 1.2994168217304074e-05], ['correct.', 1.2994168217304074e-05], ['(cap', 1.2994168217304074e-05], ['string");', 1.2994168217304074e-05], ['this->start_,', 1.2994168217304074e-05], ['this->end_,', 1.2994168217304074e-05], ['Numeric_constant::NC_UL_NOTINT))', 1.2994168217304074e-05], ['mpz_cmp(ival,', 1.2994168217304074e-05], ['bounds");', 1.2994168217304074e-05], ['int_type->get_backend(gogo);', 1.2994168217304074e-05], ['(this->needs_bounds_check_)', 1.2994168217304074e-05], ['wrap', 1.2994168217304074e-05], ['memory,', 1.2994168217304074e-05], ['keeping', 1.2994168217304074e-05], ['occurred', 1.2994168217304074e-05], ['(mt', 1.2994168217304074e-05], ['map_index,', 1.2994168217304074e-05], ['describes', 1.2994168217304074e-05], ['references,', 1.2994168217304074e-05], ['fntype->set_is_varargs();', 1.2994168217304074e-05], ['tce', 1.2994168217304074e-05], ['Even', 1.2994168217304074e-05], ['(std::vector<unsigned', 1.2994168217304074e-05], ['long>::const_iterator', 1.2994168217304074e-05], ['go_error_at((*pv)->location(),', 1.2994168217304074e-05], ['(%s)"),', 1.2994168217304074e-05], ['++pv;', 1.2994168217304074e-05], ['this->vals_->end();', 1.2994168217304074e-05], ['constructor,', 1.2994168217304074e-05], ['std::vector<Expression*>', 1.2994168217304074e-05], ['"index', 1.2994168217304074e-05], ['V;', 1.2994168217304074e-05], ['"too', 1.2994168217304074e-05], ['bcall', 1.2994168217304074e-05], ['(channel_type', 1.2994168217304074e-05], ['Receive_expression*', 1.2994168217304074e-05], ['Type::make_pointer_type(uint8_type);', 1.2994168217304074e-05], ['p->type()->function_type();', 1.2994168217304074e-05], ['Struct_field_list;', 1.2994168217304074e-05], ['(this->type_->named_type()', 1.2994168217304074e-05], ['td_type', 1.2994168217304074e-05], ["'(')", 1.2994168217304074e-05], ['Assignment', 1.2994168217304074e-05], ['expressed', 1.2994168217304074e-05], ['128;', 1.2994168217304074e-05], ['seed.', 1.2994168217304074e-05], ['system.', 1.2994168217304074e-05], ['this->make_import', 1.2994168217304074e-05], ['other.', 1.2994168217304074e-05], ['Visit', 1.2994168217304074e-05], ['generation', 1.2994168217304074e-05], ['saved_location', 1.2994168217304074e-05], ['d->accept', 1.2994168217304074e-05], ['saved_location;', 1.2994168217304074e-05], ['2017-2019', 1.2994168217304074e-05], ['"gimplify.h"', 1.2994168217304074e-05], ['performs', 1.2994168217304074e-05], ['perfect', 1.2994168217304074e-05], ['relations', 1.2994168217304074e-05], ['5)', 1.2994168217304074e-05], ['recording', 1.2994168217304074e-05], ['(the', 1.2994168217304074e-05], ['TDF_SLIM);', 1.2994168217304074e-05], ['(tree);', 1.2994168217304074e-05], ['LOOP,', 1.2994168217304074e-05], ['imm_use_iterator', 1.2994168217304074e-05], ['iterator;', 1.2994168217304074e-05], ['iterator,', 1.2994168217304074e-05], ['(use_p);', 1.2994168217304074e-05], ['unsupported_edge', 1.2994168217304074e-05], ['e)', 1.2994168217304074e-05], ['consumer', 1.2994168217304074e-05], ['gsi_stmt', 1.2994168217304074e-05], ['initialized.', 1.2994168217304074e-05], ['gimple_assign_rhs1', 1.2994168217304074e-05], ['unshare_expr', 1.2994168217304074e-05], ['loop_preheader_edge', 1.2994168217304074e-05], ['(m_loop));', 1.2994168217304074e-05], ['updated', 1.2994168217304074e-05], ['var.', 1.2994168217304074e-05], ['With', 1.2994168217304074e-05], ['verify', 1.2994168217304074e-05], ['(chrec)', 1.2994168217304074e-05], ['analyze_scalar_evolution', 1.2994168217304074e-05], ['instantiate_scev', 1.2994168217304074e-05], ['loop:', 1.2994168217304074e-05], ['dead', 1.2994168217304074e-05], ['from,', 1.2994168217304074e-05], ['data_reference_p', 1.2994168217304074e-05], ['dr;', 1.2994168217304074e-05], ['seed', 1.2994168217304074e-05], ['(DDR_ARE_DEPENDENT', 1.2994168217304074e-05], ['vector,', 1.2994168217304074e-05], ['levels', 1.2994168217304074e-05], ['gsi', 1.2994168217304074e-05], ['(m_dce_seeds,', 1.2994168217304074e-05], ['*loop_nest,', 1.2994168217304074e-05], ['(expected', 1.2994168217304074e-05], ['refs', 1.2994168217304074e-05], ['j,', 1.2994168217304074e-05], ['num_loops', 1.2994168217304074e-05], ['sequential', 1.2994168217304074e-05], ['wi::add', 1.2994168217304074e-05], ['changed_p', 1.2994168217304074e-05], ['validity', 1.2994168217304074e-05], ['stmt_cost', 1.2994168217304074e-05], ['pass_linterchange', 1.2994168217304074e-05], ['(gcc::context', 1.2994168217304074e-05], ['idx', 1.2994168217304074e-05], ['innermost,', 1.2994168217304074e-05], ['dependences', 1.2994168217304074e-05], ['available.', 1.2994168217304074e-05], ['start_loop', 1.2994168217304074e-05], ['*loop;', 1.2994168217304074e-05], ['anon', 1.2994168217304074e-05], ['(op1);', 1.2994168217304074e-05], ['(op1)', 1.2994168217304074e-05], ['integer_zerop', 1.2994168217304074e-05], ['(TYPE_UNSIGNED', 1.2994168217304074e-05], ['op0', 1.2994168217304074e-05], ['LABEL_DECL', 1.2994168217304074e-05], ['boolean_false_node', 1.2994168217304074e-05], ['ADDR_EXPR:', 1.2994168217304074e-05], ['("%s",', 1.2994168217304074e-05], ['ARRAY_TYPE', 1.2994168217304074e-05], ['(expr)))', 1.2994168217304074e-05], ['(e);', 1.2994168217304074e-05], ['ignored', 1.2994168217304074e-05], ['e));', 1.2994168217304074e-05], ['(expr));', 1.2994168217304074e-05], ['TYPE_IMAGINARY_FLOAT', 1.2994168217304074e-05], ['totype);', 1.2994168217304074e-05], ['etype->toChars', 1.2994168217304074e-05], ['inheritance', 1.2994168217304074e-05], ['Cast', 1.2994168217304074e-05], ['((TypeSArray', 1.2994168217304074e-05], ['("cannot', 1.2994168217304074e-05], ['Assumes', 1.2994168217304074e-05], ['too.', 1.2994168217304074e-05], ['void[]', 1.2994168217304074e-05], ['Taarray)', 1.2994168217304074e-05], ['product', 1.2994168217304074e-05], ['MODIFY_EXPR,', 1.2994168217304074e-05], ['Assuming', 1.2994168217304074e-05], ['*telem', 1.2994168217304074e-05], ['ctor;', 1.2994168217304074e-05], ['(arg))', 1.2994168217304074e-05], ['Front-end', 1.2994168217304074e-05], ['promotions', 1.2994168217304074e-05], ['int.', 1.2994168217304074e-05], ['(TYPE_MODE', 1.2994168217304074e-05], ['(len),', 1.2994168217304074e-05], ['ptr));', 1.2994168217304074e-05], ['tb->nextOf', 1.2994168217304074e-05], ['characters.', 1.2994168217304074e-05], ['std::string::npos);', 1.2994168217304074e-05], ['introduced', 1.2994168217304074e-05], ['confusion', 1.2994168217304074e-05], ['digit', 1.2994168217304074e-05], ['codegen', 1.2994168217304074e-05], ['guarantee', 1.2994168217304074e-05], ['nargs,', 1.2994168217304074e-05], ['"brig-builtins.h"', 1.2994168217304074e-05], ['visit_element', 1.2994168217304074e-05], ['arithmetics', 1.2994168217304074e-05], ['shuffle', 1.2994168217304074e-05], ['VEC_PERM_EXPR', 1.2994168217304074e-05], ['(mask_vec_type,', 1.2994168217304074e-05], ['(VEC_PERM_EXPR,', 1.2994168217304074e-05], ['AND', 1.2994168217304074e-05], ['vec_type', 1.2994168217304074e-05], ['implementing', 1.2994168217304074e-05], ['operands[0]);', 1.2994168217304074e-05], ['64', 1.2994168217304074e-05], ['mask,', 1.2994168217304074e-05], ['instruction,', 1.2994168217304074e-05], ['brig_type,', 1.2994168217304074e-05], ['build_vector_from_val', 1.2994168217304074e-05], ['gccbrig_hsa_opcode_op_output_p', 1.2994168217304074e-05], ['instructions,', 1.2994168217304074e-05], ['instructions.', 1.2994168217304074e-05], ['brig_inst_type', 1.2994168217304074e-05], ['(brig_inst_type);', 1.2994168217304074e-05], ['RETURN_EXPR)', 1.2994168217304074e-05], ['belong', 1.2994168217304074e-05], ['example', 1.2994168217304074e-05], ['BRIG_TYPE_S8:', 1.2994168217304074e-05], ['BRIG_TYPE_U8:', 1.2994168217304074e-05], ['BRIG_TYPE_S16:', 1.2994168217304074e-05], ['BRIG_TYPE_U16:', 1.2994168217304074e-05], ['BRIG_TYPE_S32:', 1.2994168217304074e-05], ['BRIG_TYPE_U32:', 1.2994168217304074e-05], ['BrigInstSourceType', 1.2994168217304074e-05], ['(instr_expr),', 1.2994168217304074e-05], ['cst;', 1.2994168217304074e-05], ['(mask_inner_type,', 1.2994168217304074e-05], ['build_vector_from_ctor', 1.2994168217304074e-05], ['instr_expr);', 1.2994168217304074e-05], ['mask.', 1.2994168217304074e-05], ['objects.', 1.2994168217304074e-05], ['str,', 1.2994168217304074e-05], ['OFF,', 1.2994168217304074e-05], ['*PNAME,', 1.2994168217304074e-05], ['*NESTED_OFF', 1.2994168217304074e-05], ['*NEXT_OFF.', 1.2994168217304074e-05], ['next_off);', 1.2994168217304074e-05], ['*SIZE', 1.2994168217304074e-05], ['memcpy(buf,', 1.2994168217304074e-05], ['("%s:', 1.2994168217304074e-05], ['%ld",', 1.2994168217304074e-05], ['static_cast<long>(off));', 1.2994168217304074e-05], ['long>(off));', 1.2994168217304074e-05], ['name_end', 1.2994168217304074e-05], ['char**', 1.2994168217304074e-05], ['past', 1.2994168217304074e-05], ['combination', 1.2994168217304074e-05], ['opt,', 1.2994168217304074e-05], ['Overwrite', 1.2994168217304074e-05], ['work.', 1.2994168217304074e-05], ['"dmd/errors.h"', 1.2994168217304074e-05], ['buf.writestring', 1.2994168217304074e-05], ['buf.extractString', 1.2994168217304074e-05], ['prefix1,', 1.2994168217304074e-05], ['global.params.warnings', 1.2994168217304074e-05], ['(global.params.useDeprecated', 1.2994168217304074e-05], ['[A]', 1.2994168217304074e-05], ['help', 1.2994168217304074e-05], ['stride;', 1.2994168217304074e-05], ['potential', 1.2994168217304074e-05], ['model.', 1.2994168217304074e-05], ['Decide', 1.2994168217304074e-05], ['COND', 1.2994168217304074e-05], ['inner_likelihood', 1.2994168217304074e-05], ['hashval_t', 1.2994168217304074e-05], ['subloops', 1.2994168217304074e-05], ['obstack', 1.2994168217304074e-05], ['definition,', 1.2994168217304074e-05], ['gassign', 1.2994168217304074e-05], ['POINTER_TYPE_P', 1.2994168217304074e-05], ['ADDRESS', 1.2994168217304074e-05], ['"%T', 1.2994168217304074e-05], ['bb)', 1.2994168217304074e-05], ['m_num_conditions', 1.2994168217304074e-05], ['(fn);', 1.2994168217304074e-05], ['FOR_EACH_BB_FN', 1.2994168217304074e-05], ['obstack_free', 1.2994168217304074e-05], ['limits', 1.2994168217304074e-05], ['reduce', 1.2994168217304074e-05], ['us.', 1.2994168217304074e-05], ['(call);', 1.2994168217304074e-05], ['(&li.unity_names,', 1.2994168217304074e-05], ['tree_to_uhwi', 1.2994168217304074e-05], ['(TYPE_SIZE_UNIT', 1.2994168217304074e-05], ['op)', 1.2994168217304074e-05], ['dimension,', 1.2994168217304074e-05], ['node,', 1.2994168217304074e-05], ['assignment,', 1.2994168217304074e-05], ['&address,', 1.2994168217304074e-05], ['a[i', 1.2994168217304074e-05], ['stride.', 1.2994168217304074e-05], ['finding', 1.2994168217304074e-05], ['unnecessary', 1.2994168217304074e-05], ['processing.', 1.2994168217304074e-05], ["We're", 1.2994168217304074e-05], ['(a', 1.2994168217304074e-05], ['gcc_checking_assert', 1.2994168217304074e-05], ['prevents', 1.2994168217304074e-05], ['i))', 1.2994168217304074e-05], ['everything', 1.2994168217304074e-05], ['operator()(const', 1.2994168217304074e-05], ['locally', 1.2994168217304074e-05], ['initializers', 1.2994168217304074e-05], ['package_name,', 1.2994168217304074e-05], ['affect', 1.2994168217304074e-05], ['bindings->begin_definitions();', 1.2994168217304074e-05], ['bindings->end_definitions();', 1.2994168217304074e-05], ['path,', 1.2994168217304074e-05], ['(p->name().empty())', 1.2994168217304074e-05], ['nt->local_methods();', 1.2994168217304074e-05], ['&find);', 1.2994168217304074e-05], ['std::pair<std::string,', 1.2994168217304074e-05], ['(Import_init_set::const_iterator', 1.2994168217304074e-05], ['fcn', 1.2994168217304074e-05], ['fix', 1.2994168217304074e-05], ['"dmd/template.h"', 1.2994168217304074e-05], ['module,', 1.2994168217304074e-05], ['DECL_FIELD_CONTEXT', 1.2994168217304074e-05], ['build_reference_type', 1.2994168217304074e-05], ['(tb);', 1.2994168217304074e-05], ['.ptr', 1.2994168217304074e-05], ['(ctype);', 1.2994168217304074e-05], ['object);', 1.2994168217304074e-05], ['build_method_call', 1.2994168217304074e-05], ['(object);', 1.2994168217304074e-05], ['Lvalue', 1.2994168217304074e-05], ['VAR_DECL:', 1.2994168217304074e-05], ['COMPOUND_EXPR:', 1.2994168217304074e-05], ['force_target_expr', 1.2994168217304074e-05], ['create_temporary_var', 1.2994168217304074e-05], ['STRING_CST)', 1.2994168217304074e-05], ['rewrite:', 1.2994168217304074e-05], ['e2)', 1.2994168217304074e-05], ['=>', 1.2994168217304074e-05], ['*vd', 1.2994168217304074e-05], ['TypeStruct', 1.2994168217304074e-05], ['(t2))', 1.2994168217304074e-05], ['t2ref);', 1.2994168217304074e-05], ['required.', 1.2994168217304074e-05], ['evaluations.', 1.2994168217304074e-05], ['holes', 1.2994168217304074e-05], ['push_binding_level', 1.2994168217304074e-05], ['(TRUTH_ORIF_EXPR,', 1.2994168217304074e-05], ['ptrtype,', 1.2994168217304074e-05], ['(LOOP_EXPR,', 1.2994168217304074e-05], ['pop_binding_level', 1.2994168217304074e-05], ['stmt_list,', 1.2994168217304074e-05], ['*ve', 1.2994168217304074e-05], ['(value', 1.2994168217304074e-05], ['Must', 1.2994168217304074e-05], ['TYPE_CONTEXT', 1.2994168217304074e-05], ['(field));', 1.2994168217304074e-05], ['record.', 1.2994168217304074e-05], ['(arg)', 1.2994168217304074e-05], ['ARG0', 1.2994168217304074e-05], ['arg1)', 1.2994168217304074e-05], ['RETURN_EXPR,', 1.2994168217304074e-05], ['size_mult_expr', 1.2994168217304074e-05], ['MULT_EXPR,', 1.2994168217304074e-05], ['*e2)', 1.2994168217304074e-05], ['build_array_index', 1.2994168217304074e-05], ['ptr;', 1.2994168217304074e-05], ['*ptr', 1.2994168217304074e-05], ['also.', 1.2994168217304074e-05], ['NULL_TREE));', 1.2994168217304074e-05], ['order,', 1.2994168217304074e-05], ['(ctype))', 1.2994168217304074e-05], ['(callee);', 1.2994168217304074e-05], ['%qT",', 1.2994168217304074e-05], ['get_frame_for_symbol', 1.2994168217304074e-05], ['fd->toParent2', 1.2994168217304074e-05], ['class,', 1.2994168217304074e-05], ['(fd->isNested', 1.2994168217304074e-05], ['aggregate.', 1.2994168217304074e-05], ['ad->toParent2', 1.2994168217304074e-05], ['(FRAMEINFO_CREATES_FRAME', 1.2994168217304074e-05], ['(FRAMEINFO_TYPE', 1.2994168217304074e-05], ['fd->isThis', 1.2994168217304074e-05], ['ad', 1.2994168217304074e-05], ['build_vthis', 1.2994168217304074e-05], ['classes,', 1.2994168217304074e-05], ['v)', 1.2994168217304074e-05], ['(sd);', 1.2994168217304074e-05], ['BRIG_TYPE_F16;', 1.2994168217304074e-05], ['BRIG_TYPE_F16)', 1.2994168217304074e-05], ['BRIG_ALU_FTZ;', 1.2994168217304074e-05], ['Flush', 1.2994168217304074e-05], ['((mode', 1.2994168217304074e-05], ['XLEN', 1.2994168217304074e-05], ['BUFFER', 1.2994168217304074e-05], ['*buffer,', 1.2994168217304074e-05], ['X,', 1.2994168217304074e-05], ['ones.', 1.2994168217304074e-05], ['zeros', 1.2994168217304074e-05], ['xlen', 1.2994168217304074e-05], ['1],', 1.2994168217304074e-05], ['op1len)', 1.2994168217304074e-05], ['val[len]', 1.2994168217304074e-05], ['op1mask', 1.2994168217304074e-05], ['val[l1]', 1.2994168217304074e-05], ['l1--;', 1.2994168217304074e-05], ['(overflow)', 1.2994168217304074e-05], ['UNSIGNED', 1.2994168217304074e-05], ['wi::OVF_OVERFLOW', 1.2994168217304074e-05], ['o0)', 1.2994168217304074e-05], ['wi_unpack', 1.2994168217304074e-05], ['in_len,', 1.2994168217304074e-05], ['NOTE:', 1.2994168217304074e-05], ['(high)', 1.2994168217304074e-05], ['(v,', 1.2994168217304074e-05], ['half_blocks_needed;', 1.2994168217304074e-05], ['half_blocks_needed]', 1.2994168217304074e-05], ['b;', 1.2994168217304074e-05], ['algorithm', 1.2994168217304074e-05], ['U', 1.2994168217304074e-05], ['clz_hwi', 1.2994168217304074e-05], ['qhat', 1.2994168217304074e-05], ['dividend_prec);', 1.2994168217304074e-05], ['divisor', 1.2994168217304074e-05], ['(remainder)', 1.2994168217304074e-05], ['(quotient)', 1.2994168217304074e-05], ['quotient_len', 1.2994168217304074e-05], ['Split', 1.2994168217304074e-05], ['skip);', 1.2994168217304074e-05], ['Work', 1.2994168217304074e-05], ['redundant', 1.2994168217304074e-05], ['<class', 1.2994168217304074e-05], ['VALUE_TYPE>', 1.2994168217304074e-05], ['from_int<VALUE_TYPE>', 1.2994168217304074e-05], ['(wi::ges_p', 1.2994168217304074e-05], ['(17,', 1.2994168217304074e-05], ['why', 1.2994168217304074e-05], ['dump_context::get', 1.2994168217304074e-05], ['items', 1.2994168217304074e-05], ["that's", 1.2994168217304074e-05], ['compiler,', 1.2994168217304074e-05], ['ident);', 1.2994168217304074e-05], ['*base', 1.2994168217304074e-05], ['(str);', 1.2994168217304074e-05], ['(!cd->isInterfaceDeclaration', 1.2994168217304074e-05], ['vtable.', 1.2994168217304074e-05], ['(TypeInfoDeclaration', 1.2994168217304074e-05], ['(TypeAArray', 1.2994168217304074e-05], ['m_flags;', 1.2994168217304074e-05], ['immutable(void)*', 1.2994168217304074e-05], ['vtables', 1.2994168217304074e-05], ['TypeClass', 1.2994168217304074e-05], ['(name)', 1.2994168217304074e-05], ['*bcd', 1.2994168217304074e-05], ['bcd->baseClass)', 1.2994168217304074e-05], ['(not', 1.2994168217304074e-05], ['function(in', 1.2994168217304074e-05], ['come', 1.2994168217304074e-05], ['structsize', 1.2994168217304074e-05], ['differ', 1.2994168217304074e-05], ['get_classinfo_decl', 1.2994168217304074e-05], ['handlers.', 1.2994168217304074e-05], ['(TypeBasic', 1.2994168217304074e-05], ['decls', 1.2994168217304074e-05], ['(dtype)', 1.2994168217304074e-05], ['type));', 1.2994168217304074e-05], ['checking.', 1.2994168217304074e-05], ['Frontend', 1.2994168217304074e-05], ['d_eval_constant_expression', 1.2994168217304074e-05], ['TREE_STRING_POINTER', 1.2994168217304074e-05], ['identifiers.', 1.2994168217304074e-05], ['(ident);', 1.2994168217304074e-05], ['Generates', 1.2994168217304074e-05], ['Dsymbols', 1.2994168217304074e-05], ['(!t)', 1.2994168217304074e-05], ['(name))', 1.2994168217304074e-05], ['distinct', 1.2994168217304074e-05], ['make_signed_type', 1.2994168217304074e-05], ['(8);', 1.2994168217304074e-05], ['(16);', 1.2994168217304074e-05], ['d_int_type;', 1.2994168217304074e-05], ['ENUM,', 1.2994168217304074e-05], ['builtin_types[(int)', 1.2994168217304074e-05], ['error_mark_node.', 1.2994168217304074e-05], ['ATTRIBUTE_UNUSED)', 1.2994168217304074e-05], ['7,', 1.2994168217304074e-05], ['9,', 1.2994168217304074e-05], ['paths', 1.2994168217304074e-05], ['path.', 1.2994168217304074e-05], ['options.', 1.2994168217304074e-05], ['is_local', 1.2994168217304074e-05], ['failed:', 1.2994168217304074e-05], ['%s:', 1.2994168217304074e-05], ['Import.', 1.2994168217304074e-05], ['stream->pos());', 1.2994168217304074e-05], ['discard', 1.2994168217304074e-05], ['V1', 1.2994168217304074e-05], ['Linemap::unknown_location());', 1.2994168217304074e-05], ['init_name,', 1.2994168217304074e-05], ['(this->add_to_globals_)', 1.2994168217304074e-05], ['Variable(type,', 1.2994168217304074e-05], ['parameters;', 1.2994168217304074e-05], ['RTYPE', 1.2994168217304074e-05], ['Type::TYPE_POINTER)', 1.2994168217304074e-05], ['id,', 1.2994168217304074e-05], ["'>')", 1.2994168217304074e-05], ['dots.', 1.2994168217304074e-05], ['imported.', 1.2994168217304074e-05], ["')')", 1.2994168217304074e-05], ['go_fatal_error(Linemap::unknown_location(),', 1.2994168217304074e-05], ['Advance', 1.2994168217304074e-05], ['macros', 1.2994168217304074e-05], ['etc.', 1.2994168217304074e-05], ['closest', 1.2994168217304074e-05], ['typename', 1.2994168217304074e-05], ['term_entry', 1.2994168217304074e-05], ['*e1,', 1.2994168217304074e-05], ['term_list', 1.2994168217304074e-05], ['ts.begin();', 1.2994168217304074e-05], ['ts.end();', 1.2994168217304074e-05], ['g)', 1.2994168217304074e-05], ['EXPR_PACK_EXPANSION:', 1.2994168217304074e-05], ['undecided;', 1.2994168217304074e-05], ['expand_concept', 1.2994168217304074e-05], ['(proof_state&', 1.2994168217304074e-05], ['(p,', 1.2994168217304074e-05], ['ti);', 1.2994168217304074e-05], ['C.', 1.2994168217304074e-05], ['(var_name,', 1.2994168217304074e-05], ['*path', 1.2994168217304074e-05], ['ExprVisitor', 1.2994168217304074e-05], ['(t0)', 1.2994168217304074e-05], ['tb1->ty', 1.2994168217304074e-05], ['guaranteed', 1.2994168217304074e-05], ['equal,', 1.2994168217304074e-05], ['BIT_AND_EXPR;', 1.2994168217304074e-05], ['producing', 1.2994168217304074e-05], ['~', 1.2994168217304074e-05], ['(make_array_type', 1.2994168217304074e-05], ['bug', 1.2994168217304074e-05], ['appended', 1.2994168217304074e-05], ['tinfo,', 1.2994168217304074e-05], ['*se', 1.2994168217304074e-05], ['(result),', 1.2994168217304074e-05], ['(array,', 1.2994168217304074e-05], ['tnext', 1.2994168217304074e-05], ['(thisexp,', 1.2994168217304074e-05], ['void_node;', 1.2994168217304074e-05], ['(e->loc),', 1.2994168217304074e-05], ['e->toChars', 1.2994168217304074e-05], ['collected', 1.2994168217304074e-05], ['tb', 1.2994168217304074e-05], ['new_call);', 1.2994168217304074e-05], ['(StringExp', 1.2994168217304074e-05], ['assigns', 1.2994168217304074e-05], ['static.', 1.2994168217304074e-05], ['eliminating', 1.2994168217304074e-05], ['{"<stddef.h>",', 1.2994168217304074e-05], ['"<cstddef>"}', 1.2994168217304074e-05], ['this->forwarded();', 1.2994168217304074e-05], ['points.', 1.2994168217304074e-05], ['REASON', 1.2994168217304074e-05], ['*REASON', 1.2994168217304074e-05], ['this->btype_', 1.2994168217304074e-05], ['val.first', 1.2994168217304074e-05], ['ins.first->second.is_placeholder', 1.2994168217304074e-05], ['built.', 1.2994168217304074e-05], ['Complete', 1.2994168217304074e-05], ['go_assert(name', 1.2994168217304074e-05], ['string_type', 1.2994168217304074e-05], ['hash_fn,', 1.2994168217304074e-05], ['*hash_fn', 1.2994168217304074e-05], ['hash_name,', 1.2994168217304074e-05], ['equal_name,', 1.2994168217304074e-05], ['equal_fntype)', 1.2994168217304074e-05], ['Expression::make_var_reference(key_arg,', 1.2994168217304074e-05], ['another.', 1.2994168217304074e-05], ['hash.', 1.2994168217304074e-05], ['vals->push_back(Expression::make_unary(OPERATOR_AND,', 1.2994168217304074e-05], ['this->set_from(gogo,', 1.2994168217304074e-05], ['gcprog', 1.2994168217304074e-05], ['"len",', 1.2994168217304074e-05], ['collection', 1.2994168217304074e-05], ['comment.', 1.2994168217304074e-05], ['(!this->is_backend_type_size_known(gogo))', 1.2994168217304074e-05], ['*pptrdata', 1.2994168217304074e-05], ['pptrdata);', 1.2994168217304074e-05], ['bool_type', 1.2994168217304074e-05], ['is_unsigned,', 1.2994168217304074e-05], ['Complex_type*', 1.2994168217304074e-05], ['r1', 1.2994168217304074e-05], ["ret->push_back('(');", 1.2994168217304074e-05], ["ret->push_back(')');", 1.2994168217304074e-05], ['exp->write_type(p->type());', 1.2994168217304074e-05], ['imp->advance(1);', 1.2994168217304074e-05], ['go_assert(p->is_field_name("elem"));', 1.2994168217304074e-05], ['call)', 1.2994168217304074e-05], ['merge', 1.2994168217304074e-05], ['ambiguity', 1.2994168217304074e-05], ['sf);', 1.2994168217304074e-05], ['requires,', 1.2994168217304074e-05], ['(t->classification())', 1.2994168217304074e-05], ['(!this->length_->numeric_constant_value(&nc))', 1.2994168217304074e-05], ['Expression::make_temporary_reference(index,', 1.2994168217304074e-05], ['this->blength_', 1.2994168217304074e-05], ['array->location());', 1.2994168217304074e-05], ['uint16_type,', 1.2994168217304074e-05], ['go_assert(this->methods_are_finalized_);', 1.2994168217304074e-05], ['%s%s%s"),', 1.2994168217304074e-05], ['Gogo::message_name(p->name());', 1.2994168217304074e-05], ['this->type_->base();', 1.2994168217304074e-05], ['this->local_methods_;', 1.2994168217304074e-05], ['recursively', 1.2994168217304074e-05], ['later,', 1.2994168217304074e-05], ['Instead', 1.2994168217304074e-05], ['set_name', 1.2994168217304074e-05], ['Type::get_named_base_btype(gogo,', 1.2994168217304074e-05], ['ret->append(buf);', 1.2994168217304074e-05], ['is_embedded_pointer,', 1.2994168217304074e-05], ['needs_stub_method,', 1.2994168217304074e-05], ['methods)', 1.2994168217304074e-05], ['seen->pop_back();', 1.2994168217304074e-05], ['fnparams', 1.2994168217304074e-05], ['*is_method', 1.2994168217304074e-05], ['Struct', 1.2994168217304074e-05], ['*level', 1.2994168217304074e-05], ['introduces', 1.2994168217304074e-05], ['Warn', 1.2994168217304074e-05], ['Typed_identifier&', 1.2994168217304074e-05], ['shell', 1.2994168217304074e-05], ['running', 1.2994168217304074e-05], ['libraries', 1.2994168217304074e-05], ['tm_file', 1.2994168217304074e-05], ['driver', 1.2994168217304074e-05], ['systems', 1.2994168217304074e-05], ['target-dependent', 1.2994168217304074e-05], ['>&2', 1.2994168217304074e-05], ['${with_abi}', 1.2994168217304074e-05], ['--with-abi=$with_abi"', 1.2994168217304074e-05], ['x$gnu_ld', 1.2994168217304074e-05], ['use_gcc_stdint=provide', 1.2994168217304074e-05], ['"default";', 1.2994168217304074e-05], ['ilp32', 1.2994168217304074e-05], ['lp64', 1.2994168217304074e-05], ["'s/^,//'`", 1.2994168217304074e-05], ['multilib', 1.2994168217304074e-05], ['arm/arm.h"', 1.2994168217304074e-05], ['./sysroot-suffix.h"', 1.2994168217304074e-05], ['x$enable_targets', 1.2994168217304074e-05], ['xall;', 1.2994168217304074e-05], ['x$with_cpu_64', 1.2994168217304074e-05], ['$x86_cpus', 1.2994168217304074e-05], ['$x86_64_archs', 1.2994168217304074e-05], ['--with-cpu=$with_cpu,', 1.2994168217304074e-05], ['arch_32', 1.2994168217304074e-05], ['ia64/sysv4.h', 1.2994168217304074e-05], ['default_mips_abi=n32', 1.2994168217304074e-05], ['MIPS_ABI_DEFAULT=ABI_N32"', 1.2994168217304074e-05], ['MIPS_ABI_DEFAULT=ABI_O64"', 1.2994168217304074e-05], ['sparc/long-double-switch.opt"', 1.2994168217304074e-05], ['sparc/t-sparc"', 1.2994168217304074e-05], ['i[34567]86-*-*', 1.2994168217304074e-05], ['supported_defaults="abi', 1.2994168217304074e-05], ["'s/^[^,]*,[", 1.2994168217304074e-05], ["]*//'", 1.2994168217304074e-05], ['insns.', 1.2994168217304074e-05], ['(gen_move_insn', 1.2994168217304074e-05], ['(target,', 1.2994168217304074e-05], ['OPERANDS[3]', 1.2994168217304074e-05], ['*operands)', 1.2994168217304074e-05], ['MEM_ALIGN', 1.2994168217304074e-05], ['(Pmode);', 1.2994168217304074e-05], ['(operands[1],', 1.2994168217304074e-05], ['lab));', 1.2994168217304074e-05], ['14,', 1.2994168217304074e-05], ['(tmp0,', 1.2994168217304074e-05], ['(L_return));', 1.2994168217304074e-05], ['const0_rtx);', 1.2994168217304074e-05], ['(SImode)));', 1.2994168217304074e-05], ['(gen_addsi3', 1.2994168217304074e-05], ['(current_addr,', 1.2994168217304074e-05], ['dest_addr,', 1.2994168217304074e-05], ['"brig-machine.h"', 1.2994168217304074e-05], ['m_cf', 1.2994168217304074e-05], ['m_next_private_offset', 1.2994168217304074e-05], ['fp16', 1.2994168217304074e-05], ['safely', 1.2994168217304074e-05], ['brig_directive_variable_handler', 1.2994168217304074e-05], ['&func_handler},', 1.2994168217304074e-05], ['handler.', 1.2994168217304074e-05], ['var_decl);', 1.2994168217304074e-05], ['kernel.', 1.2994168217304074e-05], ['func_name', 1.2994168217304074e-05], ['(stmts);', 1.2994168217304074e-05], ['usage.', 1.2994168217304074e-05], ['(alignment', 1.2994168217304074e-05], ['CALL_EXPR_FN', 1.2994168217304074e-05], ['kernarg', 1.2994168217304074e-05], ['(vec,', 1.2994168217304074e-05], ['(decl)))', 1.2994168217304074e-05], ['"dmd/mangle.h"', 1.2994168217304074e-05], ['*decl,', 1.2994168217304074e-05], ['DeclVisitor', 1.2994168217304074e-05], ['(d->semanticRun', 1.2994168217304074e-05], ['s->accept', 1.2994168217304074e-05], ['"had', 1.2994168217304074e-05], ['compiling");', 1.2994168217304074e-05], ['d;', 1.2994168217304074e-05], ['TYPE_ATTRIBUTES', 1.2994168217304074e-05], ['DECL_INTRINSIC_CODE', 1.2994168217304074e-05], ['linkage', 1.2994168217304074e-05], ['weak', 1.2994168217304074e-05], ['(function))', 1.2994168217304074e-05], ['(thunk,', 1.2994168217304074e-05], ['resdecl;', 1.2994168217304074e-05], ['DECL_WEAK', 1.2994168217304074e-05], ['csymoffset', 1.2994168217304074e-05], ['find_aggregate_field', 1.2994168217304074e-05], ['CTFE.', 1.2994168217304074e-05], ['handlers', 1.2994168217304074e-05], ['attribute_spec::exclusions', 1.2994168217304074e-05], ['false),', 1.2994168217304074e-05], ['StringExp', 1.2994168217304074e-05], ['Done', 1.2994168217304074e-05], ['(args))', 1.2994168217304074e-05], ['*node);', 1.2994168217304074e-05], ['condition.', 1.2994168217304074e-05], ['(gt:SI', 1.2994168217304074e-05], ['set_rtx', 1.2994168217304074e-05], ['insn,', 1.2994168217304074e-05], ['reg_dead_after_insn', 1.2994168217304074e-05], ['(insn,', 1.2994168217304074e-05], ['(ei);', 1.2994168217304074e-05], ['("[bb', 1.2994168217304074e-05], ['BB_HEAD', 1.2994168217304074e-05], ['(reg);', 1.2994168217304074e-05], ['bb_entry', 1.2994168217304074e-05], ['Tells', 1.2994168217304074e-05], ['assuming', 1.2994168217304074e-05], ['ccreg.', 1.2994168217304074e-05], ['cbranch_trace&', 1.2994168217304074e-05], ['m_ccreg', 1.2994168217304074e-05], ['(cond)', 1.2994168217304074e-05], ['start_sequence', 1.2994168217304074e-05], ['end_sequence', 1.2994168217304074e-05], ['(BB_HEAD', 1.2994168217304074e-05], ['i->cstore.empty', 1.2994168217304074e-05], ['(i->cstore_type', 1.2994168217304074e-05], ['add_reg_note', 1.2994168217304074e-05], ['(trace.setcc.insn);', 1.2994168217304074e-05], ['STORE_FLAG_VALUE', 1.2994168217304074e-05], ['instantiating', 1.2994168217304074e-05], ['traverse_functions', 1.2994168217304074e-05], ['it++)', 1.2994168217304074e-05], ['Result_variable*', 1.2994168217304074e-05], ['preinit', 1.2994168217304074e-05], ['session.', 1.2994168217304074e-05], ['lstr', 1.2994168217304074e-05], ['(enclosing', 1.2994168217304074e-05], ['tag,', 1.2994168217304074e-05], ['ct', 1.2994168217304074e-05], ['this->typeref("', 1.2994168217304074e-05], ['comparator', 1.2994168217304074e-05], ['cmp_fn', 1.2994168217304074e-05], ['(c->size', 1.2994168217304074e-05], ['(int,', 1.2994168217304074e-05], ['intptr_t', 1.2994168217304074e-05], ['(e0,', 1.2994168217304074e-05], ['(sizeof', 1.2994168217304074e-05], ['Increment', 1.2994168217304074e-05], ['BUFFER.', 1.2994168217304074e-05], ['buffer;', 1.2994168217304074e-05], ['(r.rv', 1.2994168217304074e-05], ['Modules', 1.2994168217304074e-05], ['themselves', 1.2994168217304074e-05], ['(DImode,', 1.2994168217304074e-05], ['(seq,', 1.2994168217304074e-05], ['kind)', 1.2994168217304074e-05], ['this->advance_one_utf8_char(p,', 1.2994168217304074e-05], ['(p[2]', 1.2994168217304074e-05], ['buf[0]', 1.2994168217304074e-05], ['(pend', 1.2994168217304074e-05], ['Unicode_range', 1.2994168217304074e-05], ['current_binding_level;', 1.2994168217304074e-05], ['longer', 1.2994168217304074e-05], ['IRVisitor', 1.2994168217304074e-05], ['(LABEL_EXPR,', 1.2994168217304074e-05], ['label));', 1.2994168217304074e-05], ['block");', 1.2994168217304074e-05], ['(s->loc),', 1.2994168217304074e-05], ['make_tree_vec', 1.2994168217304074e-05], ['this->do_label', 1.2994168217304074e-05], ['requiring', 1.2994168217304074e-05], ['none', 1.2994168217304074e-05], ['32;', 1.2994168217304074e-05], ['(this->is_main_package())', 1.2994168217304074e-05], ['go_inform(Linemap::unknown_location(),', 1.2994168217304074e-05], ["variable's", 1.2994168217304074e-05], ['std::vector<Bstatement*>&', 1.2994168217304074e-05], ['std::vector<Bvariable*>', 1.2994168217304074e-05], ['this->init_;', 1.2994168217304074e-05], ['init_fndecl', 1.2994168217304074e-05], ['parsing', 1.2994168217304074e-05], ['pname', 1.2994168217304074e-05], ['rtype->named_type()->is_alias())', 1.2994168217304074e-05], ['rtype->named_type()->real_type()->forwarded();', 1.2994168217304074e-05], ['go_error_at(type->receiver()->location(),', 1.2994168217304074e-05], ['this->need_init_fn_', 1.2994168217304074e-05], ['Lower_parse_tree', 1.2994168217304074e-05], ['Traverse(traverse_variables', 1.2994168217304074e-05], ['bool);', 1.2994168217304074e-05], ['traversing.', 1.2994168217304074e-05], ['&this->inserter_);', 1.2994168217304074e-05], ['go_assert(this->function_', 1.2994168217304074e-05], ['block->replace_statement(*pindex,', 1.2994168217304074e-05], ['*pexpr,', 1.2994168217304074e-05], ['!saw_errors())', 1.2994168217304074e-05], ['checked.', 1.2994168217304074e-05], ['captured', 1.2994168217304074e-05], ['Named_object::NAMED_OBJECT_RESULT_VAR:', 1.2994168217304074e-05], ['Named_object::NAMED_OBJECT_UNKNOWN:', 1.2994168217304074e-05], ['Named_object::NAMED_OBJECT_ERRONEOUS:', 1.2994168217304074e-05], ['Named_object::NAMED_OBJECT_SINK:', 1.2994168217304074e-05], ['go_error_at(eloc,', 1.2994168217304074e-05], ['"goto', 1.2994168217304074e-05], ['traverse,', 1.2994168217304074e-05], ['this->init_,', 1.2994168217304074e-05], ['channel");', 1.2994168217304074e-05], ['sink.', 1.2994168217304074e-05], ['(in_function', 1.2994168217304074e-05], ['pn', 1.2994168217304074e-05], ['(std::vector<Named_object*>::iterator', 1.2994168217304074e-05], ['blabel', 1.2994168217304074e-05], ['real_from_integer', 1.2994168217304074e-05], ['may_be_nonzero', 1.2994168217304074e-05], ['wi::max', 1.2994168217304074e-05], ['[RES_LB,', 1.2994168217304074e-05], ['&res_lb,', 1.2994168217304074e-05], ['&res_ub,', 1.2994168217304074e-05], ['vr1_lb,', 1.2994168217304074e-05], ['res_ub,', 1.2994168217304074e-05], ['min0', 1.2994168217304074e-05], ['max0', 1.2994168217304074e-05], ['(n,', 1.2994168217304074e-05], ['&vr1_min,', 1.2994168217304074e-05], ['(vr1_min,', 1.2994168217304074e-05], ['vr0_min;', 1.2994168217304074e-05], ['vr0_min,', 1.2994168217304074e-05], ['vr0_max,', 1.2994168217304074e-05], ['vr1_min,', 1.2994168217304074e-05], ['&wmin,', 1.2994168217304074e-05], ['&wmax,', 1.2994168217304074e-05], ['compiled.', 1.2994168217304074e-05], ['column', 1.2994168217304074e-05], ['xstrdup', 1.2994168217304074e-05], ['GS_OK;', 1.2994168217304074e-05], ['had_errors;', 1.2994168217304074e-05], ['ld;', 1.2994168217304074e-05], ['preserves', 1.2994168217304074e-05], ['libgphobos', 1.2994168217304074e-05], ['need_phobos', 1.2994168217304074e-05], ['PHOBOS_NOLINK;', 1.2994168217304074e-05], ['(suffix,', 1.2994168217304074e-05], ['&new_decoded_options[j++]);', 1.2994168217304074e-05], ['(OPT_l,', 1.2994168217304074e-05], ['added_libraries++;', 1.2994168217304074e-05], ['m_next_kernarg_offset', 1.2994168217304074e-05], ['get_identifier_with_length', 1.2994168217304074e-05], ['uint32_type_node);', 1.2994168217304074e-05], ['ctx', 1.2994168217304074e-05], ['m_context_arg,', 1.2994168217304074e-05], ['(ptr_type,', 1.2994168217304074e-05], ['std::endl', 1.2994168217304074e-05], ['restrict_char_ptr);', 1.2994168217304074e-05], ['(m_is_kernel)', 1.2994168217304074e-05], ['int_constant_value', 1.2994168217304074e-05], ['s_custom_builtins.find', 1.2994168217304074e-05], ['element);', 1.2994168217304074e-05], ['elements.push_back', 1.2994168217304074e-05], ['output_element_type', 1.2994168217304074e-05], ['call->fn()->func_expression();', 1.2994168217304074e-05], ['//go:nowritebarrierrec', 1.2994168217304074e-05], ['addr,', 1.2994168217304074e-05], ['(m_parent);', 1.2994168217304074e-05], ['(callexp),', 1.2994168217304074e-05], ['instrinsic', 1.2994168217304074e-05], ['INT_TYPE_SIZE)', 1.2994168217304074e-05], ['LONG_TYPE_SIZE)', 1.2994168217304074e-05], ['LONG_LONG_TYPE_SIZE)', 1.2994168217304074e-05], ['sqrt', 1.2994168217304074e-05], ['from);', 1.2994168217304074e-05], ['(T)', 1.2994168217304074e-05], ['std::vector<Node*>', 1.2994168217304074e-05], ['(level.value()', 1.2994168217304074e-05], ['Node::ESCAPE_NONE);', 1.2994168217304074e-05], ['++fn)', 1.2994168217304074e-05], ['flood', 1.2994168217304074e-05], ['group.', 1.2994168217304074e-05], ['SRC.', 1.2994168217304074e-05], ['DST.', 1.2994168217304074e-05], ['gogo->debug_escape_level();', 1.2994168217304074e-05], ['this->context_->track(n);', 1.2994168217304074e-05], ['flowing', 1.2994168217304074e-05], ['Connect', 1.2994168217304074e-05], ['go_inform(call->location(),', 1.2994168217304074e-05], ['"esccall::', 1.2994168217304074e-05], ['til', 1.2994168217304074e-05], ['til->begin();', 1.2994168217304074e-05], ['underlying_node', 1.2994168217304074e-05], ['Node::make_node(underlying);', 1.2994168217304074e-05], ['(e->array_index_expression()', 1.2994168217304074e-05], ['go_inform(src->definition_location(),', 1.2994168217304074e-05], ['"leaking', 1.2994168217304074e-05], ['underlying_node,', 1.2994168217304074e-05], ['ccreg_value', 1.2994168217304074e-05], ['*operand_entries', 1.2994168217304074e-05], ['is_definition', 1.2994168217304074e-05], ['brigVar->segment', 1.2994168217304074e-05], ['(var_name);', 1.2994168217304074e-05], ['BRIG_INST', 1.2994168217304074e-05], ['build_tree_operand', 1.2994168217304074e-05], ['TREE_VEC', 1.2994168217304074e-05], ['m_parent.get_brig_code_entry', 1.2994168217304074e-05], ['low);', 1.2994168217304074e-05], ['(tree_element_type,', 1.2994168217304074e-05], ['is_fp16_arith', 1.2994168217304074e-05], ['src_type;', 1.2994168217304074e-05], ['BITS_PER_UNIT));', 1.2994168217304074e-05], ['(built_in,', 1.2994168217304074e-05], ['bytes_consumed;', 1.2994168217304074e-05], ['(arg_arg)', 1.2994168217304074e-05], ['convention', 1.2994168217304074e-05], ['arg_var);', 1.2994168217304074e-05], ['(group_base_arg)', 1.2994168217304074e-05], ['(group_local_offset_arg)', 1.2994168217304074e-05], ['(private_base_arg)', 1.2994168217304074e-05], ['(MUL_TYPE', 1.2994168217304074e-05], ['n2;', 1.2994168217304074e-05], ['default_case', 1.2994168217304074e-05], ['normalized', 1.2994168217304074e-05], ['(fmt->p', 1.2994168217304074e-05], ['build_fold_addr_expr_loc(location.gcc_location(),', 1.2994168217304074e-05], ['Location,', 1.2994168217304074e-05], ['this->make_type(type);', 1.2994168217304074e-05], ['std::vector<Btyped_identifier>&', 1.2994168217304074e-05], ['fold_convert_loc(location.gcc_location(),', 1.2994168217304074e-05], ['index_type', 1.2994168217304074e-05], ['(std::vector<Bexpression*>::const_iterator', 1.2994168217304074e-05], ['index_tree', 1.2994168217304074e-05], ['excess_type', 1.2994168217304074e-05], ['this->make_statement(ret);', 1.2994168217304074e-05], ['DECL_ARTIFICIAL(decl)', 1.2994168217304074e-05], ['(f', 1.2994168217304074e-05], ['asm_name.empty())', 1.2994168217304074e-05], ['context->backend()->error_statement();', 1.2994168217304074e-05], ['&this->val_)', 1.2994168217304074e-05], ['curly', 1.2994168217304074e-05], ['(this->else_block_', 1.2994168217304074e-05], ['this->cases_->begin();', 1.2994168217304074e-05], ['this->cases_->end();', 1.2994168217304074e-05], ['val_temp,', 1.2994168217304074e-05], ['Block(b,', 1.2994168217304074e-05], ['then_block->add_statement(s);', 1.2994168217304074e-05], ['(this->is_fallthrough_)', 1.2994168217304074e-05], ['(this->is_default_)', 1.2994168217304074e-05], ['ast_dump_context->dump_block(this->statements_);', 1.2994168217304074e-05], ['(this->clauses_', 1.2994168217304074e-05], ['descriptor_temp,', 1.2994168217304074e-05], ['send"));', 1.2994168217304074e-05], ['(this->value_var_', 1.2994168217304074e-05], ['value_type', 1.2994168217304074e-05], ['post;', 1.2994168217304074e-05], ['temp_block,', 1.2994168217304074e-05], ['&init,', 1.2994168217304074e-05], ['&cond,', 1.2994168217304074e-05], ['&iter_init,', 1.2994168217304074e-05], ['body_block,', 1.2994168217304074e-05], ['pinit,', 1.2994168217304074e-05], ['pcond,', 1.2994168217304074e-05], ['piter_init,', 1.2994168217304074e-05], ['ppost)', 1.2994168217304074e-05], ['generate:', 1.2994168217304074e-05], ['*pinit', 1.2994168217304074e-05], ['*pcond', 1.2994168217304074e-05], ['*PITER_INIT', 1.2994168217304074e-05], ['Block(body_block,', 1.2994168217304074e-05], ['*piter_init', 1.2994168217304074e-05], ['*ppost', 1.2994168217304074e-05], ['Expression::make_temporary_reference(hiter,', 1.2994168217304074e-05], ['&inst', 1.2994168217304074e-05], ['(inst.segment', 1.2994168217304074e-05], ['token->is_identifier_exported());', 1.2994168217304074e-05], ['MAY_BE_SINK', 1.2994168217304074e-05], ['"_".', 1.2994168217304074e-05], ['Gogo::erroneous_name();', 1.2994168217304074e-05], ['(token->is_op(OPERATOR_LPAREN))', 1.2994168217304074e-05], ['(this->peek_token()->is_op(OPERATOR_SEMICOLON)', 1.2994168217304074e-05], ['this->advance_token()->is_op(OPERATOR_LCURLY))', 1.2994168217304074e-05], ['go_error_at(token_loc,', 1.2994168217304074e-05], ['(token->is_op(OPERATOR_RCURLY))', 1.2994168217304074e-05], ['(this->peek_token()->is_op(OPERATOR_COMMA))', 1.2994168217304074e-05], ['"..."', 1.2994168217304074e-05], ['(!this->peek_token()->is_op(OPERATOR_LCURLY))', 1.2994168217304074e-05], ['(!token->is_op(OPERATOR_RCURLY))', 1.2994168217304074e-05], ['this->statement_list();', 1.2994168217304074e-05], ['"ignoring', 1.2994168217304074e-05], ['"="', 1.2994168217304074e-05], ['(is_coloneq', 1.2994168217304074e-05], ['!any_new)', 1.2994168217304074e-05], ['":="', 1.2994168217304074e-05], ['is_type_switch,', 1.2994168217304074e-05], ['%<:=%>");', 1.2994168217304074e-05], ['this->simple_stat(false,', 1.2994168217304074e-05], ['this->gogo_->finish_block(this->location());', 1.2994168217304074e-05], ['(t->toChars', 1.2994168217304074e-05], ['build_dso_registry_var', 1.2994168217304074e-05], ['decl->aimports.dim;', 1.2994168217304074e-05], ['(tree_type))', 1.2994168217304074e-05], ['(path,', 1.2994168217304074e-05], ['(path);', 1.2994168217304074e-05], ['T0', 1.2994168217304074e-05], ['TwentySeven', 1.2994168217304074e-05], ['OneUlp', 1.2994168217304074e-05], ['F6', 1.2994168217304074e-05], ['GDiv', 1.2994168217304074e-05], ['GAddSub', 1.2994168217304074e-05], ['RMult', 1.2994168217304074e-05], ['RDiv', 1.2994168217304074e-05], ['Z9', 1.2994168217304074e-05], ['RAddSub', 1.2994168217304074e-05], ['Random', 1.2994168217304074e-05], ['======================================================================', 1.2994168217304074e-05], ['real_to_target', 1.2994168217304074e-05], ['&f,', 1.2994168217304074e-05], ['(&ai,', 1.2994168217304074e-05], ['real_format_for_mode[MODE', 1.2994168217304074e-05], ['QFmode];', 1.2994168217304074e-05], ['fmt->log2_b', 1.2994168217304074e-05], ['int(sizeof(T)', 1.2994168217304074e-05], ['(FLOAT', 1.2994168217304074e-05], ['Three;', 1.2994168217304074e-05], ['W;', 1.2994168217304074e-05], ['SqXMinX', 1.2994168217304074e-05], ['(MinusOne', 1.2994168217304074e-05], ['Half))', 1.2994168217304074e-05], ['Yes)', 1.2994168217304074e-05], ['(OneAndHalf', 1.2994168217304074e-05], ['(StickyBit', 1.2994168217304074e-05], ['BInvrse;', 1.2994168217304074e-05], ['H;', 1.2994168217304074e-05], ['(E1', 1.2994168217304074e-05], ['UfThold.str());', 1.2994168217304074e-05], ['Z.str());', 1.2994168217304074e-05], ['V9.str());', 1.2994168217304074e-05], ['("This', 1.2994168217304074e-05], ['(SqEr', 1.2994168217304074e-05], ['X2', 1.2994168217304074e-05], ['subclass', 1.2994168217304074e-05], ['json::value::print', 1.2994168217304074e-05], ['(pretty_printer', 1.2994168217304074e-05], ['*pp)', 1.2994168217304074e-05], ['(literal', 1.2994168217304074e-05], ['TEMPLATE_ID_EXPR)', 1.2994168217304074e-05], ['ARGS.', 1.2994168217304074e-05], ['parent,', 1.2994168217304074e-05], ['learn_logical_operation', 1.2994168217304074e-05], ['learn_implications', 1.2994168217304074e-05], ['cxt);', 1.2994168217304074e-05], ['parms,', 1.2994168217304074e-05], ['(check);', 1.2994168217304074e-05], ['diagnose', 1.2994168217304074e-05], ['placeholder_extract_concept_and_args', 1.2994168217304074e-05], ['PLACEHOLDER_TYPE_CONSTRAINTS', 1.2994168217304074e-05], ['targs);', 1.2994168217304074e-05], ['cp_unevaluated', 1.2994168217304074e-05], ['guard;', 1.2994168217304074e-05], ['tsubst_constraint_variables', 1.2994168217304074e-05], ['trivially', 1.2994168217304074e-05], ['(elide_constraint_failure_p', 1.2994168217304074e-05], ['PKGPATH', 1.2994168217304074e-05], ["ret.push_back('.');", 1.2994168217304074e-05], ['2011', 1.039533457384326e-05], ['Type::make_boolean_type();', 1.039533457384326e-05], ['Type::lookup_integer_type("uint64");', 1.039533457384326e-05], ['Type::make_interface_type(methods,', 1.039533457384326e-05], ['Type::make_array_type(Type::make_string_type(),', 1.039533457384326e-05], ['at->set_is_array_incomparable();', 1.039533457384326e-05], ['Result', 1.039533457384326e-05], ['param_types', 1.039533457384326e-05], ['RFT_VOID)', 1.039533457384326e-05], ['Expression::make_func_reference(no,', 1.039533457384326e-05], ['match.', 1.039533457384326e-05], ['"pretty-print.h"', 1.039533457384326e-05], ['Populate', 1.039533457384326e-05], ['generator->set', 1.039533457384326e-05], ['capture', 1.039533457384326e-05], ['saved', 1.039533457384326e-05], ['writing', 1.039533457384326e-05], ['queue', 1.039533457384326e-05], ['(obj);', 1.039533457384326e-05], ['pop', 1.039533457384326e-05], ['(loc);', 1.039533457384326e-05], ['json::value', 1.039533457384326e-05], ['optinfo_item', 1.039533457384326e-05], ['message->append', 1.039533457384326e-05], ['(item->get_text', 1.039533457384326e-05], ['("location",', 1.039533457384326e-05], ['inlined', 1.039533457384326e-05], ['description', 1.039533457384326e-05], ['"children"', 1.039533457384326e-05], ['sub);', 1.039533457384326e-05], ['(info', 1.039533457384326e-05], ['ASSERT_STR_CONTAINS', 1.039533457384326e-05], ['hex.', 1.039533457384326e-05], ['fputs', 1.039533457384326e-05], ['"ast-dump.h"', 1.039533457384326e-05], ['Expression.', 1.039533457384326e-05], ['TRAVERSE_SKIP_COMPONENTS)', 1.039533457384326e-05], ['discarded.', 1.039533457384326e-05], ['children', 1.039533457384326e-05], ['rhs_type', 1.039533457384326e-05], ['is_pointer);', 1.039533457384326e-05], ['RHS.', 1.039533457384326e-05], ['Expression::make_interface_info(rhs,', 1.039533457384326e-05], ['assertion', 1.039533457384326e-05], ['unlike', 1.039533457384326e-05], ['gogo->backend()->integer_constant_expression(btype,', 1.039533457384326e-05], ['cval;', 1.039533457384326e-05], ['bound_type_size', 1.039533457384326e-05], ['max,', 1.039533457384326e-05], ['onto', 1.039533457384326e-05], ['is_in_heap', 1.039533457384326e-05], ['Called', 1.039533457384326e-05], ['stype', 1.039533457384326e-05], ['this->expr_->dump_expression(ast_dump_context);', 1.039533457384326e-05], ["')';", 1.039533457384326e-05], ['_.', 1.039533457384326e-05], ['Builtin', 1.039533457384326e-05], ['specially', 1.039533457384326e-05], ['(fntype->is_builtin())', 1.039533457384326e-05], ['Bexpression', 1.039533457384326e-05], ['no->location();', 1.039533457384326e-05], ['exported.', 1.039533457384326e-05], ['no->func_value()->enclosing()', 1.039533457384326e-05], ['this->named_object_;', 1.039533457384326e-05], ['(real', 1.039533457384326e-05], ['str)', 1.039533457384326e-05], ["'\\\\')", 1.039533457384326e-05], ['characteristic', 1.039533457384326e-05], ['"unknown");', 1.039533457384326e-05], ['ast_dump_context,', 1.039533457384326e-05], ['this->type_->copy_expressions()),', 1.039533457384326e-05], ['far.', 1.039533457384326e-05], ['Type::make_abstract_integer_type();', 1.039533457384326e-05], ['context->gogo()->backend()->error_expression();', 1.039533457384326e-05], ['free(s);', 1.039533457384326e-05], ['digits.', 1.039533457384326e-05], ['num', 1.039533457384326e-05], ['GMP_RNDN)', 1.039533457384326e-05], ['num;', 1.039533457384326e-05], ['best.', 1.039533457384326e-05], ['Complex', 1.039533457384326e-05], ['found_(false)', 1.039533457384326e-05], ['exporting', 1.039533457384326e-05], ['this->constant_->const_value()->expr();', 1.039533457384326e-05], ['ctype;', 1.039533457384326e-05], ['ok;', 1.039533457384326e-05], ['Named_constant*', 1.039533457384326e-05], ['"constant', 1.039533457384326e-05], ['During', 1.039533457384326e-05], ['parsing,', 1.039533457384326e-05], ['Expression::EXPRESSION_FUNC_REFERENCE:', 1.039533457384326e-05], ['iota.', 1.039533457384326e-05], ['integers', 1.039533457384326e-05], ['"int"', 1.039533457384326e-05], ['adv', 1.039533457384326e-05], ['&c);', 1.039533457384326e-05], ['conversions.', 1.039533457384326e-05], ['expr_type->interface_type()', 1.039533457384326e-05], ['expr_type->is_string_type())', 1.039533457384326e-05], ['this->expr_->determine_type(&subcontext);', 1.039533457384326e-05], ['&s,', 1.039533457384326e-05], ['Expression::make_cast(type,', 1.039533457384326e-05], ['s2a', 1.039533457384326e-05], ['s2a,', 1.039533457384326e-05], ['(type->is_error_type()', 1.039533457384326e-05], ['deal', 1.039533457384326e-05], ['performed', 1.039533457384326e-05], ['dereferencing', 1.039533457384326e-05], ['nc,', 1.039533457384326e-05], ['issued_error)', 1.039533457384326e-05], ['mpz_init(val);', 1.039533457384326e-05], ['words', 1.039533457384326e-05], ['points_to', 1.039533457384326e-05], ['here;', 1.039533457384326e-05], ['immutable', 1.039533457384326e-05], ['once,', 1.039533457384326e-05], ["'+':", 1.039533457384326e-05], ['OPERATOR_PLUS;', 1.039533457384326e-05], ["'!':", 1.039533457384326e-05], ["'^':", 1.039533457384326e-05], ['OPERATOR_XOR;', 1.039533457384326e-05], ["'&':", 1.039533457384326e-05], ['OPERATOR_AND;', 1.039533457384326e-05], ["'*':", 1.039533457384326e-05], ['OPERATOR_MULT;', 1.039533457384326e-05], ['deref', 1.039533457384326e-05], ['Type**', 1.039533457384326e-05], ['(left_type->integer_type()', 1.039533457384326e-05], ['cmp)', 1.039533457384326e-05], ['left_nc->type();', 1.039533457384326e-05], ['*result', 1.039533457384326e-05], ['cmp);', 1.039533457384326e-05], ['mpz_clear(left_val);', 1.039533457384326e-05], ['mpfr_clear(left_val);', 1.039533457384326e-05], ['accordingly.', 1.039533457384326e-05], ['mpc_clear(left_val);', 1.039533457384326e-05], ['LEFT_NC', 1.039533457384326e-05], ['RIGHT_NC,', 1.039533457384326e-05], ['OPERATOR_RSHIFT;', 1.039533457384326e-05], ['(r)', 1.039533457384326e-05], ['0x100000)', 1.039533457384326e-05], ['"division', 1.039533457384326e-05], ['zero");', 1.039533457384326e-05], ['this->left_;', 1.039533457384326e-05], ['(is_comparison)', 1.039533457384326e-05], ['concatenation', 1.039533457384326e-05], ['(!Type::are_compatible_for_comparison(true,', 1.039533457384326e-05], ['this->left_->type(),', 1.039533457384326e-05], ['(Gogo::is_sink_name(pf->field_name()))', 1.039533457384326e-05], ['f2', 1.039533457384326e-05], ['this->right_->type();', 1.039533457384326e-05], ['this->right_', 1.039533457384326e-05], ['this->right_,', 1.039533457384326e-05], ['is_shift_op', 1.039533457384326e-05], ['void_type', 1.039533457384326e-05], ['Type::make_pointer_type(void_type);', 1.039533457384326e-05], ['legal', 1.039533457384326e-05], ['boolean,', 1.039533457384326e-05], ['respectively.', 1.039533457384326e-05], ['resolved', 1.039533457384326e-05], ['tleft;', 1.039533457384326e-05], ['remain', 1.039533457384326e-05], ['shift.', 1.039533457384326e-05], ['OPERATOR_PLUSEQ:', 1.039533457384326e-05], ['OPERATOR_MINUSEQ:', 1.039533457384326e-05], ['OPERATOR_MULTEQ:', 1.039533457384326e-05], ['OPERATOR_DIVEQ:', 1.039533457384326e-05], ['OPERATOR_MODEQ:', 1.039533457384326e-05], ['OPERATOR_OREQ:', 1.039533457384326e-05], ['OPERATOR_ANDEQ:', 1.039533457384326e-05], ['OPERATOR_XOREQ:', 1.039533457384326e-05], ['OPERATOR_BITCLEAREQ:', 1.039533457384326e-05], ['Division', 1.039533457384326e-05], ['rval', 1.039533457384326e-05], ['this->report_error(_("shift', 1.039533457384326e-05], ['gogo->backend()->binary_expression(OPERATOR_LT,', 1.039533457384326e-05], ['imp->require_c_string("(");', 1.039533457384326e-05], ['t1;', 1.039533457384326e-05], ['Slice_construction_expression*', 1.039533457384326e-05], ['Expression::traverse(&this->expr_,', 1.039533457384326e-05], ['this->method_->named_object();', 1.039533457384326e-05], ['this->expr_type_', 1.039533457384326e-05], ['common,', 1.039533457384326e-05], ['particular,', 1.039533457384326e-05], ['go_assert(ins.first->second', 1.039533457384326e-05], ['vt,', 1.039533457384326e-05], ['invoke', 1.039533457384326e-05], ['Expression::make_dereference(arg,', 1.039533457384326e-05], ['Statement::make_return_from_call(call,', 1.039533457384326e-05], ['cond;', 1.039533457384326e-05], ['Type::make_struct_type(fields,', 1.039533457384326e-05], ['vals->push_back(val);', 1.039533457384326e-05], ['Expression::make_struct_composite_literal(st,', 1.039533457384326e-05], ['"runtime")', 1.039533457384326e-05], ['necessary,', 1.039533457384326e-05], ['ref;', 1.039533457384326e-05], ['farg', 1.039533457384326e-05], ['reached', 1.039533457384326e-05], ['BUILTIN_DELETE:', 1.039533457384326e-05], ['e3);', 1.039533457384326e-05], ['(this->args()', 1.039533457384326e-05], ['this->args()->end();', 1.039533457384326e-05], ['go:notinheap', 1.039533457384326e-05], ['"non-integer', 1.039533457384326e-05], ['type_arg,', 1.039533457384326e-05], ['ASSIGN_LHS', 1.039533457384326e-05], ['(assign_lhs', 1.039533457384326e-05], ['s1', 1.039533457384326e-05], ['call_args,', 1.039533457384326e-05], ['&len);', 1.039533457384326e-05], ['l2tmp', 1.039533457384326e-05], ['(this->is_varargs())', 1.039533457384326e-05], ['overwrite', 1.039533457384326e-05], ['Expression::make_temporary_reference(l1tmp,', 1.039533457384326e-05], ['sum,', 1.039533457384326e-05], ['Expression::make_integer_ul(i,', 1.039533457384326e-05], ['runs', 1.039533457384326e-05], ['Numeric_constant::NC_UL_VALID:', 1.039533457384326e-05], ['make",', 1.039533457384326e-05], ['is_length', 1.039533457384326e-05], ['"len"', 1.039533457384326e-05], ['"cap");', 1.039533457384326e-05], ['Numeric_constant::NC_UL_BIG:', 1.039533457384326e-05], ['(nt->name()', 1.039533457384326e-05], ['(arg_type->points_to()', 1.039533457384326e-05], ['arg_type->points_to();', 1.039533457384326e-05], ['(arg_type->array_type()', 1.039533457384326e-05], ['r,', 1.039533457384326e-05], ['BUILTIN_INVALID:', 1.039533457384326e-05], ['BUILTIN_CLOSE:', 1.039533457384326e-05], ['(t->is_abstract())', 1.039533457384326e-05], ['closed', 1.039533457384326e-05], ['(this->check_one_arg())', 1.039533457384326e-05], ['close', 1.039533457384326e-05], ['slice");', 1.039533457384326e-05], ['incompatible', 1.039533457384326e-05], ['Expression::make_compound(print_stmts,', 1.039533457384326e-05], ['itype', 1.039533457384326e-05], ['thunks.', 1.039533457384326e-05], ['recover,', 1.039533457384326e-05], ['arg2', 1.039533457384326e-05], ['arg2);', 1.039533457384326e-05], ['future', 1.039533457384326e-05], ['(this->is_varargs_)', 1.039533457384326e-05], ['ellipsis', 1.039533457384326e-05], ['unpack', 1.039533457384326e-05], ['Builtin_call_expression*', 1.039533457384326e-05], ['wrong.', 1.039533457384326e-05], ['this->args_->end();', 1.039533457384326e-05], ['Expression::make_call(fn,', 1.039533457384326e-05], ['is_interface_method', 1.039533457384326e-05], ['fntype->is_method())', 1.039533457384326e-05], ['parameters->end())', 1.039533457384326e-05], ['has_closure_arg', 1.039533457384326e-05], ['(func', 1.039533457384326e-05], ['bclosure', 1.039533457384326e-05], ['bref', 1.039533457384326e-05], ['ce->get_function_type();', 1.039533457384326e-05], ['hard', 1.039533457384326e-05], ['(type->array_type()', 1.039533457384326e-05], ['3-index', 1.039533457384326e-05], ['Index_expression::dump_index_expression(ast_dump_context,', 1.039533457384326e-05], ['(this->start_->type()->integer_type()', 1.039533457384326e-05], ['this->report_error(_("slice', 1.039533457384326e-05], ['int_bits', 1.039533457384326e-05], ['ival_valid', 1.039533457384326e-05], ['(mpz_sgn(ival)', 1.039533457384326e-05], ['lval)', 1.039533457384326e-05], ['range"));', 1.039533457384326e-05], ['indexing', 1.039533457384326e-05], ['meaning', 1.039533457384326e-05], ['skip)', 1.039533457384326e-05], ['(length', 1.039533457384326e-05], ['key,', 1.039533457384326e-05], ['mt->val_type();', 1.039533457384326e-05], ['gogo->lookup_global("byte")->type_value();', 1.039533457384326e-05], ['referenced.', 1.039533457384326e-05], ['Expression::make_dereference(ref,', 1.039533457384326e-05], ['Expression::make_dereference(expr,', 1.039533457384326e-05], ['type->points_to();', 1.039533457384326e-05], ['std::pair<Interface_type*,', 1.039533457384326e-05], ['this->name_,', 1.039533457384326e-05], ['Gogo::message_name(name).c_str(),', 1.039533457384326e-05], ['method_type', 1.039533457384326e-05], ['hack', 1.039533457384326e-05], ['nt,', 1.039533457384326e-05], ['gogo->finish_function(location);', 1.039533457384326e-05], ['gogo->start_block(location);', 1.039533457384326e-05], ['gogo->finish_block(location);', 1.039533457384326e-05], ['gogo->backend()->zero_expression(btype);', 1.039533457384326e-05], ['this->type_->struct_type()->fields();', 1.039533457384326e-05], ['Final', 1.039533457384326e-05], ['(*pv)->type(),', 1.039533457384326e-05], ['*pv,', 1.039533457384326e-05], ['literal",', 1.039533457384326e-05], ['efb->write_c_string(buf);', 1.039533457384326e-05], ['vals->size();', 1.039533457384326e-05], ['is_static_initializer', 1.039533457384326e-05], ['once.', 1.039533457384326e-05], ['this->vals_', 1.039533457384326e-05], ['this->type_->map_type();', 1.039533457384326e-05], ['"variable', 1.039533457384326e-05], ['type->forwarded();', 1.039533457384326e-05], ['traverse_order', 1.039533457384326e-05], ['nt->named_object();', 1.039533457384326e-05], ['go_error_at(name_expr->location(),', 1.039533457384326e-05], ['predefined', 1.039533457384326e-05], ['packed.', 1.039533457384326e-05], ['letter', 1.039533457384326e-05], ['gogo->pack_hidden_name(name,', 1.039533457384326e-05], ['type->named_type()->message_name().c_str()', 1.039533457384326e-05], ['"unnamed', 1.039533457384326e-05], ['list,', 1.039533457384326e-05], ['vals);', 1.039533457384326e-05], ['Unordered_map(unsigned', 1.039533457384326e-05], ['st;', 1.039533457384326e-05], ['mit', 1.039533457384326e-05], ['exists.', 1.039533457384326e-05], ['lit', 1.039533457384326e-05], ['Expression::convert_for_assignment(context->gogo(),', 1.039533457384326e-05], ['btemp', 1.039533457384326e-05], ['bcall);', 1.039533457384326e-05], ['channel_type->element_type();', 1.039533457384326e-05], ['this->channel_,', 1.039533457384326e-05], ['Linemap::predeclared_location()),', 1.039533457384326e-05], ['&ptrsize,', 1.039533457384326e-05], ['separation', 1.039533457384326e-05], ['this->type_info_', 1.039533457384326e-05], ['Gogo::unpack_hidden_name(p->name());', 1.039533457384326e-05], ['p->location());', 1.039533457384326e-05], ['mangled_name', 1.039533457384326e-05], ['pointers,', 1.039533457384326e-05], ["'+'", 1.039533457384326e-05], ["'9'))", 1.039533457384326e-05], ['integers,', 1.039533457384326e-05], ['Numeric_constant&', 1.039533457384326e-05], ['a)', 1.039533457384326e-05], ['mpz_init_set(this->u_.int_val,', 1.039533457384326e-05], ['NaN', 1.039533457384326e-05], ['ignored.', 1.039533457384326e-05], ['bits)', 1.039533457384326e-05], ['this->u_.int_val);', 1.039533457384326e-05], ['this->u_.complex_val,', 1.039533457384326e-05], ['(!mpfr_zero_p(mpc_imagref(this->u_.complex_val)))', 1.039533457384326e-05], ['ival,', 1.039533457384326e-05], ['fval,', 1.039533457384326e-05], ['mpc_realref(this->u_.complex_val),', 1.039533457384326e-05], ['this->u_.int_val,', 1.039533457384326e-05], ['truncated', 1.039533457384326e-05], ['"complex', 1.039533457384326e-05], ['(type->bits())', 1.039533457384326e-05], ['max_exp', 1.039533457384326e-05], ['desired', 1.039533457384326e-05], ['"dmd/enum.h"', 1.039533457384326e-05], ['declarations,', 1.039533457384326e-05], ['returned.', 1.039533457384326e-05], ['regardless', 1.039533457384326e-05], ['TYPE_DECL', 1.039533457384326e-05], ['(d->type);', 1.039533457384326e-05], ['(TYPE_STUB_DECL', 1.039533457384326e-05], ['(AggregateDeclaration', 1.039533457384326e-05], ['RECORD_TYPE,', 1.039533457384326e-05], ['importing', 1.039533457384326e-05], ['imported,', 1.039533457384326e-05], ['(dsym', 1.039533457384326e-05], ['type)->sym;', 1.039533457384326e-05], ['((TypeClass', 1.039533457384326e-05], ['another,', 1.039533457384326e-05], ['aliases', 1.039533457384326e-05], ['c[i][j]', 1.039533457384326e-05], ['Comparison', 1.039533457384326e-05], ['higher', 1.039533457384326e-05], ['Vector', 1.039533457384326e-05], ['Structure', 1.039533457384326e-05], ["IV's", 1.039533457384326e-05], ['Init', 1.039533457384326e-05], ['finally', 1.039533457384326e-05], ['(re->type', 1.039533457384326e-05], ['reduction:', 1.039533457384326e-05], ['induction_p', 1.039533457384326e-05], ['candidate', 1.039533457384326e-05], ['&re);', 1.039533457384326e-05], ['FOR_EACH_IMM_USE_FAST', 1.039533457384326e-05], ['USE_STMT', 1.039533457384326e-05], ['(!flow_bb_inside_loop_p', 1.039533457384326e-05], ['res;', 1.039533457384326e-05], ['i.e,', 1.039533457384326e-05], ['lcssa', 1.039533457384326e-05], ['producer', 1.039533457384326e-05], ['*stmt)', 1.039533457384326e-05], ['gsi_start_bb', 1.039533457384326e-05], ['(stmt)', 1.039533457384326e-05], ['Allow', 1.039533457384326e-05], ['(PHI_RESULT', 1.039533457384326e-05], ['optimization.', 1.039533457384326e-05], ['(CONSTANT_CLASS_P', 1.039533457384326e-05], ['Require', 1.039533457384326e-05], ['all.', 1.039533457384326e-05], ['FP', 1.039533457384326e-05], ['(init)', 1.039533457384326e-05], ['init)', 1.039533457384326e-05], ['next)', 1.039533457384326e-05], ['XCNEW', 1.039533457384326e-05], ['like:', 1.039533457384326e-05], ['operand_equal_p', 1.039533457384326e-05], ['scev', 1.039533457384326e-05], ['zeros,', 1.039533457384326e-05], ['Similarly', 1.039533457384326e-05], ['carried', 1.039533457384326e-05], ['dominating', 1.039533457384326e-05], ['finds', 1.039533457384326e-05], ['iter,', 1.039533457384326e-05], ['gimple_seq_add_stmt_without_update', 1.039533457384326e-05], ['valid,', 1.039533457384326e-05], ['re,', 1.039533457384326e-05], ['gsi_after_labels', 1.039533457384326e-05], ['gimple_seq', 1.039533457384326e-05], ['Prepare', 1.039533457384326e-05], ['gsi_for_stmt', 1.039533457384326e-05], ['(&stmts,', 1.039533457384326e-05], ['boolean_type_node,', 1.039533457384326e-05], ['COND_EXPR,', 1.039533457384326e-05], ['(vec<data_reference_p>', 1.039533457384326e-05], ['middle', 1.039533457384326e-05], ['data_reference', 1.039533457384326e-05], ['*stride', 1.039533457384326e-05], ['(stride->length', 1.039533457384326e-05], ['reset_debug_uses', 1.039533457384326e-05], ['gsi_last_bb', 1.039533457384326e-05], ['i_niters', 1.039533457384326e-05], ['o_niters', 1.039533457384326e-05], ['skipped', 1.039533457384326e-05], ['M.', 1.039533457384326e-05], ['think', 1.039533457384326e-05], ['fully', 1.039533457384326e-05], ['//use', 1.039533457384326e-05], ['(stmt));', 1.039533457384326e-05], ['(bb', 1.039533457384326e-05], ['100;', 1.039533457384326e-05], ['(DR_STMT', 1.039533457384326e-05], ['strides->safe_push', 1.039533457384326e-05], ['(loop', 1.039533457384326e-05], ['INTEGER_CST)', 1.039533457384326e-05], ['build_fold_addr_expr', 1.039533457384326e-05], ['(loop_nest,', 1.039533457384326e-05], ['stride->length', 1.039533457384326e-05], ['compares', 1.039533457384326e-05], ['all_seq_dr_before_p', 1.039533457384326e-05], ['all_seq_dr_after_p', 1.039533457384326e-05], ['(!integer_zerop', 1.039533457384326e-05], ['INTEGER_CST', 1.039533457384326e-05], ['(iloop_strides,', 1.039533457384326e-05], ['Count', 1.039533457384326e-05], ['caused', 1.039533457384326e-05], ['optinfo_flags', 1.039533457384326e-05], ['tv_id', 1.039533457384326e-05], ['properties_required', 1.039533457384326e-05], ['properties_provided', 1.039533457384326e-05], ['properties_destroyed', 1.039533457384326e-05], ['todo_flags_start', 1.039533457384326e-05], ['todo_flags_finish', 1.039533457384326e-05], ['LOOP.', 1.039533457384326e-05], ['e0,', 1.039533457384326e-05], ['(loop))', 1.039533457384326e-05], ['loop))', 1.039533457384326e-05], ['loop->num_nodes;', 1.039533457384326e-05], ['*loop', 1.039533457384326e-05], ['*a,', 1.039533457384326e-05], ['nest,', 1.039533457384326e-05], ['difficult', 1.039533457384326e-05], ['loop_nest', 1.039533457384326e-05], ['bb_refs;', 1.039533457384326e-05], ['computed.', 1.039533457384326e-05], ['vNULL;', 1.039533457384326e-05], ['d_build_truthvalue_op', 1.039533457384326e-05], ['type1;', 1.039533457384326e-05], ['STRIP_TYPE_NOPS', 1.039533457384326e-05], ['(op0)', 1.039533457384326e-05], ['(type1))', 1.039533457384326e-05], ['op1);', 1.039533457384326e-05], ['0)),', 1.039533457384326e-05], ['0)));', 1.039533457384326e-05], ['%qD', 1.039533457384326e-05], ['nonzero', 1.039533457384326e-05], ['nonzero,', 1.039533457384326e-05], ['REFERENCE_TYPE)', 1.039533457384326e-05], ['save_expr', 1.039533457384326e-05], ['reasonable', 1.039533457384326e-05], ['POINTER_TYPE', 1.039533457384326e-05], ['(VIEW_CONVERT_EXPR,', 1.039533457384326e-05], ['etype)', 1.039533457384326e-05], ['build_delegate_cst', 1.039533457384326e-05], ['(exp),', 1.039533457384326e-05], ['leak', 1.039533457384326e-05], ['(offset));', 1.039533457384326e-05], ['derive', 1.039533457384326e-05], ['esize', 1.039533457384326e-05], ['tsize', 1.039533457384326e-05], ['tbtype->nextOf', 1.039533457384326e-05], ['Tarray:', 1.039533457384326e-05], ['Conversion', 1.039533457384326e-05], ['reinterpret', 1.039533457384326e-05], ['Tpointer', 1.039533457384326e-05], ['()->baseElemOf', 1.039533457384326e-05], ['CONSTRUCTOR_ELTS', 1.039533457384326e-05], ['*arg)', 1.039533457384326e-05], ['(arg->storageClass', 1.039533457384326e-05], ['STClazy)', 1.039533457384326e-05], ['char,', 1.039533457384326e-05], ['(BIT_IOR_EXPR,', 1.039533457384326e-05], ['Probably', 1.039533457384326e-05], ['delegate_method', 1.039533457384326e-05], ['(func);', 1.039533457384326e-05], ['pushed', 1.039533457384326e-05], ['same_type_p', 1.039533457384326e-05], ['(1),', 1.039533457384326e-05], ['underscore,', 1.039533457384326e-05], ["'a':", 1.039533457384326e-05], ["'f':", 1.039533457384326e-05], ["'v':", 1.039533457384326e-05], ["'0':", 1.039533457384326e-05], ['non-ASCII', 1.039533457384326e-05], ['len))', 1.039533457384326e-05], ['Encode', 1.039533457384326e-05], ['translate', 1.039533457384326e-05], ['Most', 1.039533457384326e-05], ['Type::tint8->arrayOf', 1.039533457384326e-05], ['DEF_HSAIL_SAT_BUILTIN', 1.039533457384326e-05], ['DEF_HSAIL_BUILTIN', 1.039533457384326e-05], ['DEF_HSAIL_ATOMIC_BUILTIN', 1.039533457384326e-05], ['DEF_HSAIL_INTR_BUILTIN', 1.039533457384326e-05], ['DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN', 1.039533457384326e-05], ['ATTRS)', 1.039533457384326e-05], ['(ENUM);', 1.039533457384326e-05], ['"brig-builtins.def"', 1.039533457384326e-05], ['ARITH_TYPE', 1.039533457384326e-05], ['mask_element', 1.039533457384326e-05], ['(input_mask_vals,', 1.039533457384326e-05], ['mask_vec_type', 1.039533457384326e-05], ['(operands[0]));', 1.039533457384326e-05], ['cleared', 1.039533457384326e-05], ['(LSHIFT_EXPR,', 1.039533457384326e-05], ['describe', 1.039533457384326e-05], ['instruction.', 1.039533457384326e-05], ['inner_type', 1.039533457384326e-05], ['(arith_type)', 1.039533457384326e-05], ['leaves', 1.039533457384326e-05], ['(arith_type,', 1.039533457384326e-05], ['amount', 1.039533457384326e-05], ['operands.size', 1.039533457384326e-05], ['(double', 1.039533457384326e-05], ['custom', 1.039533457384326e-05], ['optimizations', 1.039533457384326e-05], ['Perhaps', 1.039533457384326e-05], ['(output_count', 1.039533457384326e-05], ['BRIG_KIND_INST_CMP)', 1.039533457384326e-05], ['(BRIG_TYPE_U64);', 1.039533457384326e-05], ['operation,', 1.039533457384326e-05], ['BRIG_TYPE_F16', 1.039533457384326e-05], ['!gccbrig_is_bit_operation', 1.039533457384326e-05], ['picked', 1.039533457384326e-05], ['vector.', 1.039533457384326e-05], ['O_BINARY', 1.039533457384326e-05], ['modification', 1.039533457384326e-05], ["user's", 1.039533457384326e-05], ['memcmp(bytes,', 1.039533457384326e-05], ['location_(location),', 1.039533457384326e-05], ['this->filesize_;', 1.039533457384326e-05], ['thin', 1.039533457384326e-05], ['text.', 1.039533457384326e-05], ['OFF.', 1.039533457384326e-05], ['(::lseek(this->fd_,', 1.039533457384326e-05], ['off;', 1.039533457384326e-05], ['decimal,', 1.039533457384326e-05], ['%s)"),', 1.039533457384326e-05], ['(off', 1.039533457384326e-05], ['Empty', 1.039533457384326e-05], ['rdbuf;', 1.039533457384326e-05], ['local_size;', 1.039533457384326e-05], ['local_next_off;', 1.039533457384326e-05], ["'/'", 1.039533457384326e-05], ['iterator.', 1.039533457384326e-05], ['thing.', 1.039533457384326e-05], ['utilities.', 1.039533457384326e-05], ['extensions', 1.039533457384326e-05], ['std::stringstream', 1.039533457384326e-05], ['*c;', 1.039533457384326e-05], ["'%':", 1.039533457384326e-05], ["'<':", 1.039533457384326e-05], ["'>':", 1.039533457384326e-05], ['(ex:', 1.039533457384326e-05], ['fmt);', 1.039533457384326e-05], ['expand_message(fmt,', 1.039533457384326e-05], ['ap));', 1.039533457384326e-05], ['dtor', 1.039533457384326e-05], ['p);', 1.039533457384326e-05], ['q;', 1.039533457384326e-05], ['overloaded', 1.039533457384326e-05], ['(42,', 1.039533457384326e-05], ['g', 1.039533457384326e-05], ['"dmd/globals.h"', 1.039533457384326e-05], ['"options.h"', 1.039533457384326e-05], ['(*p);', 1.039533457384326e-05], ['flags.', 1.039533457384326e-05], ['whitespace', 1.039533457384326e-05], ['(ISDIGIT', 1.039533457384326e-05], ['dmd', 1.039533457384326e-05], ['gagged', 1.039533457384326e-05], ['emit.', 1.039533457384326e-05], ['DK_NOTE,', 1.039533457384326e-05], ['DIAGNOSTICerror)', 1.039533457384326e-05], ['deprecation', 1.039533457384326e-05], ['DIAGNOSTICinform', 1.039533457384326e-05], ['to:', 1.039533457384326e-05], ['(2)', 1.039533457384326e-05], ['simpler', 1.039533457384326e-05], ['subroutine', 1.039533457384326e-05], ['worthwhile', 1.039533457384326e-05], ['Stop', 1.039533457384326e-05], ['stop', 1.039533457384326e-05], ['nesting', 1.039533457384326e-05], ['applied.', 1.039533457384326e-05], ['likelihood', 1.039533457384326e-05], ['opportunity', 1.039533457384326e-05], ['plus', 1.039533457384326e-05], ['loop_versioning', 1.039533457384326e-05], ['get_inner_likelihood', 1.039533457384326e-05], ['scale', 1.039533457384326e-05], ['greater', 1.039533457384326e-05], ['started', 1.039533457384326e-05], ['analyzing', 1.039533457384326e-05], ['address.terms.length', 1.039533457384326e-05], ['terms.', 1.039533457384326e-05], ['enable', 1.039533457384326e-05], ['optimized', 1.039533457384326e-05], ['loop_containing_stmt', 1.039533457384326e-05], ['(loop_depth', 1.039533457384326e-05], ['OP1_TREE', 1.039533457384326e-05], ['form:', 1.039533457384326e-05], ['OP2', 1.039533457384326e-05], ['(op1', 1.039533457384326e-05], ['Fortran', 1.039533457384326e-05], ['unlikely_p', 1.039533457384326e-05], ['access.', 1.039533457384326e-05], ['&term)', 1.039533457384326e-05], ['successive', 1.039533457384326e-05], ['belongs', 1.039533457384326e-05], ['(mult));', 1.039533457384326e-05], ['MULT_EXPR', 1.039533457384326e-05], ['...;', 1.039533457384326e-05], ['address);', 1.039533457384326e-05], ['analysis,', 1.039533457384326e-05], ['2.', 1.039533457384326e-05], ['type_size,', 1.039533457384326e-05], ['multiplier,', 1.039533457384326e-05], ['purposes', 1.039533457384326e-05], ['linfo.rejected_p', 1.039533457384326e-05], ['loop->inner;', 1.039533457384326e-05], ['bi;', 1.039533457384326e-05], ['"not', 1.039533457384326e-05], ['"this', 1.039533457384326e-05], ['(MSG_MISSED_OPTIMIZATION,', 1.039533457384326e-05], ['Current', 1.039533457384326e-05], ['strings', 1.039533457384326e-05], ['operations,', 1.039533457384326e-05], ['treating', 1.039533457384326e-05], ['Mapping', 1.039533457384326e-05], ['Named_object', 1.039533457384326e-05], ['prefix,', 1.039533457384326e-05], ['(saw_errors())', 1.039533457384326e-05], ['bindings->begin_declarations();', 1.039533457384326e-05], ['bindings->end_declarations();', 1.039533457384326e-05], ['Export::magic_len);', 1.039533457384326e-05], ['used,', 1.039533457384326e-05], ['building.', 1.039533457384326e-05], ['(type->is_void_type())', 1.039533457384326e-05], ['methods->begin_declarations();', 1.039533457384326e-05], ['methods->end_declarations();', 1.039533457384326e-05], ['this->type_index_;', 1.039533457384326e-05], ['seen.', 1.039533457384326e-05], ['out;', 1.039533457384326e-05], ['(std::map<std::string,', 1.039533457384326e-05], ['seen;', 1.039533457384326e-05], ['it->second;', 1.039533457384326e-05], ['std::vector<std::string>', 1.039533457384326e-05], ['referred', 1.039533457384326e-05], ['F', 1.039533457384326e-05], ['++it)', 1.039533457384326e-05], ['p->first;', 1.039533457384326e-05], ['buffer.', 1.039533457384326e-05], ['go_assert(ins.second);', 1.039533457384326e-05], ['copy_aggregate_type', 1.039533457384326e-05], ['build_distinct_type_copy', 1.039533457384326e-05], ['(STCout', 1.039533457384326e-05], ['STCref))', 1.039533457384326e-05], ['delegates.', 1.039533457384326e-05], ['TypeFunction::create', 1.039533457384326e-05], ['(TYPE_DYNAMIC_ARRAY', 1.039533457384326e-05], ['(assumed', 1.039533457384326e-05], ['field).', 1.039533457384326e-05], ['LEN', 1.039533457384326e-05], ['(binfo,', 1.039533457384326e-05], ['CALLEE', 1.039533457384326e-05], ['OBJECT', 1.039533457384326e-05], ['(callee,', 1.039533457384326e-05], ['Extract', 1.039533457384326e-05], ['tree&', 1.039533457384326e-05], ['ARRAY_REF:', 1.039533457384326e-05], ['PARM_DECL:', 1.039533457384326e-05], ['IMAGPART_EXPR:', 1.039533457384326e-05], ['REALPART_EXPR:', 1.039533457384326e-05], ['COMPONENT_REF:', 1.039533457384326e-05], ['SAVE_EXPR', 1.039533457384326e-05], ['stabilize_reference', 1.039533457384326e-05], ['effects,', 1.039533457384326e-05], ['initializes', 1.039533457384326e-05], ['(&exp);', 1.039533457384326e-05], ['ADDR_EXPR)', 1.039533457384326e-05], ['purposes.', 1.039533457384326e-05], ['d_mark_used', 1.039533457384326e-05], ['(StructDeclaration', 1.039533457384326e-05], ['tb;', 1.039533457384326e-05], ['NE_EXPR', 1.039533457384326e-05], ['SD.', 1.039533457384326e-05], ['t1ref,', 1.039533457384326e-05], ['Floating-point', 1.039533457384326e-05], ['lang_hooks.types.type_for_mode', 1.039533457384326e-05], ['possible,', 1.039533457384326e-05], ['build_struct_comparison', 1.039533457384326e-05], ['(t2);', 1.039533457384326e-05], ['logic', 1.039533457384326e-05], ['(lentype,', 1.039533457384326e-05], ['(POSTINCREMENT_EXPR,', 1.039533457384326e-05], ['body));', 1.039533457384326e-05], ['(block),', 1.039533457384326e-05], ['(body,', 1.039533457384326e-05], ['bitsize_zero_node;', 1.039533457384326e-05], ['(vec_safe_is_empty', 1.039533457384326e-05], ['TYPE_PACKED', 1.039533457384326e-05], ['vfield', 1.039533457384326e-05], ['FIELD_DECL', 1.039533457384326e-05], ['nested,', 1.039533457384326e-05], ['combine', 1.039533457384326e-05], ['CALL_EXPR', 1.039533457384326e-05], ['fold_build1_loc', 1.039533457384326e-05], ['NOP_EXPR,', 1.039533457384326e-05], ['ARG1', 1.039533457384326e-05], ['incase', 1.039533457384326e-05], ['(arg0);', 1.039533457384326e-05], ['(arg0))', 1.039533457384326e-05], ['arg1));', 1.039533457384326e-05], ['build_vcondition', 1.039533457384326e-05], ['complex_expr', 1.039533457384326e-05], ['(ptr)', 1.039533457384326e-05], ['earlier.', 1.039533457384326e-05], ['build_offset_op', 1.039533457384326e-05], ['(ptr),', 1.039533457384326e-05], ['a;', 1.039533457384326e-05], ['build_bounds_condition', 1.039533457384326e-05], ['d_assert_call', 1.039533457384326e-05], ['d_build_call', 1.039533457384326e-05], ['CONSTRUCTOR)', 1.039533457384326e-05], ['(Type::tchar,', 1.039533457384326e-05], ['fmodfn', 1.039533457384326e-05], ['(COMPLEX_FLOAT_TYPE_P', 1.039533457384326e-05], ['build_vthis_function', 1.039533457384326e-05], ['d_function_chain', 1.039533457384326e-05], ['d_function_chain->function', 1.039533457384326e-05], ['(fd->loc),', 1.039533457384326e-05], ['fd->toPrettyChars', 1.039533457384326e-05], ['frame_ref', 1.039533457384326e-05], ['frame.', 1.039533457384326e-05], ['(get_frameinfo', 1.039533457384326e-05], ['fields);', 1.039533457384326e-05], ['(sd', 1.039533457384326e-05], ['(fd)', 1.039533457384326e-05], ['(fd->vthis);', 1.039533457384326e-05], ['vthis_value', 1.039533457384326e-05], ['frame/closure', 1.039533457384326e-05], ['frame,', 1.039533457384326e-05], ['fd->closureVars.dim;', 1.039533457384326e-05], ['*d', 1.039533457384326e-05], ['std::vector<tree>', 1.039533457384326e-05], ['convert_to_real', 1.039533457384326e-05], ['(brig_to_generic::s_fp32_type,', 1.039533457384326e-05], ['shifts', 1.039533457384326e-05], ['End', 1.039533457384326e-05], ['Enable', 1.039533457384326e-05], ['strcmp(name,', 1.039533457384326e-05], ['&((const', 1.039533457384326e-05], ['BrigInstBasic', 1.039533457384326e-05], ['base)->base;', 1.039533457384326e-05], ['operands.at', 1.039533457384326e-05], ['(input);', 1.039533457384326e-05], ['SCALAR_FLOAT_TYPE_P', 1.039533457384326e-05], ['flush_to_zero', 1.039533457384326e-05], ['exceptions', 1.039533457384326e-05], ['and_mask', 1.039533457384326e-05], ['BITS_PER_UNIT,', 1.039533457384326e-05], ['unsignedp);', 1.039533457384326e-05], ['PHSA_ERROR_PREFIX_INCOMPATIBLE_MODULE', 1.039533457384326e-05], ['features.', 1.039533457384326e-05], ['HOST_BITS_PER_HALF_WIDE_INT', 1.039533457384326e-05], ['HOST_BITS_PER_HALF_WIDE_INT)', 1.039533457384326e-05], ['((HOST_WIDE_INT)', 1.039533457384326e-05], ['otherwise,', 1.039533457384326e-05], ['-1.', 1.039533457384326e-05], ['i--)', 1.039533457384326e-05], ['UNITS_PER_WORD;', 1.039533457384326e-05], ['(HOST_WIDE_INT),', 1.039533457384326e-05], ['max);', 1.039533457384326e-05], ['represented.', 1.039533457384326e-05], ['wi::set_bit_in_zero', 1.039533457384326e-05], ['val[len++]', 1.039533457384326e-05], ['rely', 1.039533457384326e-05], ['Unsigned', 1.039533457384326e-05], ['highest', 1.039533457384326e-05], ['(s0', 1.039533457384326e-05], ['s1)', 1.039533457384326e-05], ['(l', 1.039533457384326e-05], ['(u0', 1.039533457384326e-05], ['u1)', 1.039533457384326e-05], ['(x0', 1.039533457384326e-05], ['x1)', 1.039533457384326e-05], ['THIS.', 1.039533457384326e-05], ['swap', 1.039533457384326e-05], ['(HOST_WIDE_INT_1U', 1.039533457384326e-05], ['(op1mask', 1.039533457384326e-05], ['l1;', 1.039533457384326e-05], ['op0[l0];', 1.039533457384326e-05], ['(op0mask', 1.039533457384326e-05], ['(need_canon)', 1.039533457384326e-05], ['sgn,', 1.039533457384326e-05], ['mask1;', 1.039533457384326e-05], ['mask0', 1.039533457384326e-05], ['mask1', 1.039533457384326e-05], ['carry;', 1.039533457384326e-05], ['HALF_INT_MASK;', 1.039533457384326e-05], ['small_prec);', 1.039533457384326e-05], ['wi_pack', 1.039533457384326e-05], ['((unsigned', 1.039533457384326e-05], ['Multiply', 1.039533457384326e-05], ['half_blocks_needed', 1.039533457384326e-05], ['(needs_overflow)', 1.039533457384326e-05], ['wi::storage_ref', 1.039533457384326e-05], ['umul_ppmm', 1.039533457384326e-05], ['(prec', 1.039533457384326e-05], ['wi::fits_uhwi_p', 1.039533457384326e-05], ['quickly', 1.039533457384326e-05], ['r[i', 1.039533457384326e-05], ['X.', 1.039533457384326e-05], ['x.len', 1.039533457384326e-05], ['inversion', 1.039533457384326e-05], ['borrow', 1.039533457384326e-05], ['quotient', 1.039533457384326e-05], ['Normalize', 1.039533457384326e-05], ['(HOST_BITS_PER_HALF_WIDE_INT', 1.039533457384326e-05], ['dividend_prec,', 1.039533457384326e-05], ['dividend', 1.039533457384326e-05], ['remainder[0]', 1.039533457384326e-05], ['remember', 1.039533457384326e-05], ['Left', 1.039533457384326e-05], ['skip;', 1.039533457384326e-05], ['Right', 1.039533457384326e-05], ['curr', 1.039533457384326e-05], ['wider', 1.039533457384326e-05], ['HIGH.', 1.039533457384326e-05], ['MASK', 1.039533457384326e-05], ['MASK.', 1.039533457384326e-05], ['(6,', 1.039533457384326e-05], ['0xf1)', 1.039533457384326e-05], ['(24,', 1.039533457384326e-05], ['UPPER_MASK', 1.039533457384326e-05], ['propagate', 1.039533457384326e-05], ['variants', 1.039533457384326e-05], ['DEBUG_FUNCTION', 1.039533457384326e-05], ['from_int', 1.039533457384326e-05], ['wi::sub', 1.039533457384326e-05], ['(wi::lts_p', 1.039533457384326e-05], ['(wi::gts_p', 1.039533457384326e-05], ['run_all_wide_int_tests', 1.039533457384326e-05], ['&overflow);', 1.039533457384326e-05], ['wi::OVF_NONE,', 1.039533457384326e-05], ['diff', 1.039533457384326e-05], ['enabled.', 1.039533457384326e-05], ['destinations,', 1.039533457384326e-05], ['function_that_fails', 1.039533457384326e-05], ['greturn', 1.039533457384326e-05], ['fails.', 1.039533457384326e-05], ['testing.', 1.039533457384326e-05], ['combinations', 1.039533457384326e-05], ['dump_flags_t', 1.039533457384326e-05], ['filter', 1.039533457384326e-05], ['&info', 1.039533457384326e-05], ['(info.get_item', 1.039533457384326e-05], ['(effective_filter', 1.039533457384326e-05], ['note:', 1.039533457384326e-05], ['===', 1.039533457384326e-05], ['===\\n"', 1.039533457384326e-05], ['int"', 1.039533457384326e-05], ['"test.c:5:10:', 1.039533457384326e-05], ['straight', 1.039533457384326e-05], ['(fields)', 1.039533457384326e-05], ['finish_builtin_struct', 1.039533457384326e-05], ['cd->vtblInterfaces->dim;', 1.039533457384326e-05], ['~0u)', 1.039533457384326e-05], ['completed', 1.039533457384326e-05], ['*tm', 1.039533457384326e-05], ['tm', 1.039533457384326e-05], ['tm->merge2', 1.039533457384326e-05], ['(tm));', 1.039533457384326e-05], ['Tpointer);', 1.039533457384326e-05], ['Tarray);', 1.039533457384326e-05], ['cd;', 1.039533457384326e-05], ['bcd;', 1.039533457384326e-05], ['(ti);', 1.039533457384326e-05], ['get_typeinfo_decl', 1.039533457384326e-05], ['function(void*)', 1.039533457384326e-05], ['nothrow', 1.039533457384326e-05], ['(ctor),', 1.039533457384326e-05], ['COMDAT', 1.039533457384326e-05], ['decls.', 1.039533457384326e-05], ['DECL_COMDAT', 1.039533457384326e-05], ['v.result', 1.039533457384326e-05], ['added.', 1.039533457384326e-05], ['(type->isTypeBasic', 1.039533457384326e-05], ['type->ty', 1.039533457384326e-05], ['TypeInfoDeclVisitor', 1.039533457384326e-05], ['(tid);', 1.039533457384326e-05], ['*tc', 1.039533457384326e-05], ['InterfaceDeclaration', 1.039533457384326e-05], ['(decl->cpp_type_info_ptr_sym)', 1.039533457384326e-05], ['Does', 1.039533457384326e-05], ['speculative', 1.039533457384326e-05], ['creation', 1.039533457384326e-05], ['SpeculativeTypeVisitor', 1.039533457384326e-05], ['"common/common-target.h"', 1.039533457384326e-05], ['c,', 1.039533457384326e-05], ['builtin_converted_decls.safe_push', 1.039533457384326e-05], ['(builtin_data', 1.039533457384326e-05], ['(dtype,', 1.039533457384326e-05], ['dtype;', 1.039533457384326e-05], ['dtype->addMod', 1.039533457384326e-05], ['lb', 1.039533457384326e-05], ['TYPE_MIN_VALUE', 1.039533457384326e-05], ['Module::create', 1.039533457384326e-05], ['ident)', 1.039533457384326e-05], ['assumed', 1.039533457384326e-05], ['initialization,', 1.039533457384326e-05], ['BUILTINyes;', 1.039533457384326e-05], ['va_list.', 1.039533457384326e-05], ['*name;', 1.039533457384326e-05], ['encountered', 1.039533457384326e-05], ['*sym', 1.039533457384326e-05], ['mapped', 1.039533457384326e-05], ['unsignedp)', 1.039533457384326e-05], ['integer_type_node;', 1.039533457384326e-05], ['front-end.', 1.039533457384326e-05], ['d_ubyte_type', 1.039533457384326e-05], ['d_ushort_type', 1.039533457384326e-05], ['d_uint_type', 1.039533457384326e-05], ['d_ulong_type', 1.039533457384326e-05], ['d_ucent_type', 1.039533457384326e-05], ['("ptr"),', 1.039533457384326e-05], ['builtins.', 1.039533457384326e-05], ['(strlen', 1.039533457384326e-05], ['ARG1)', 1.039533457384326e-05], ['ARG2)', 1.039533457384326e-05], ['ARG3)', 1.039533457384326e-05], ['ARG4)', 1.039533457384326e-05], ['ARG5)', 1.039533457384326e-05], ['ARG6)', 1.039533457384326e-05], ['ARG7)', 1.039533457384326e-05], ['ARG11)', 1.039533457384326e-05], ['variadic', 1.039533457384326e-05], ['builtin_type', 1.039533457384326e-05], ['Type.', 1.039533457384326e-05], ['*name)', 1.039533457384326e-05], ['entry.', 1.039533457384326e-05], ['"lseek', 1.039533457384326e-05], ['("error', 1.039533457384326e-05], ['this->location_,', 1.039533457384326e-05], ['-fgo-prefix', 1.039533457384326e-05], ['this->gogo_->register_package(pkgpath,', 1.039533457384326e-05], ['subsequent', 1.039533457384326e-05], ['(!this->string_to_int(str,', 1.039533457384326e-05], ['PACKAGE', 1.039533457384326e-05], ['package)', 1.039533457384326e-05], ['Type::make_function_type(receiver,', 1.039533457384326e-05], ['(rtype->classification()', 1.039533457384326e-05], ['rtype->points_to();', 1.039533457384326e-05], ['(rtype->is_error_type())', 1.039533457384326e-05], ['(rtype->forward_declaration_type()', 1.039533457384326e-05], ['id)', 1.039533457384326e-05], ['(static_cast<size_t>(index)', 1.039533457384326e-05], ['defined",', 1.039533457384326e-05], ['is_alias', 1.039533457384326e-05], ['"imported', 1.039533457384326e-05], ['(no->is_type_declaration())', 1.039533457384326e-05], ["'x'", 1.039533457384326e-05], ["';'", 1.039533457384326e-05], ['(!this->saw_error_)', 1.039533457384326e-05], ['this->saw_error_', 1.039533457384326e-05], ['%m");', 1.039533457384326e-05], ['this->set_saw_error();', 1.039533457384326e-05], ['macro', 1.039533457384326e-05], ['gcc_loc', 1.039533457384326e-05], ['location.gcc_location();', 1.039533457384326e-05], ['maintain', 1.039533457384326e-05], ['erase', 1.039533457384326e-05], ['begin()', 1.039533457384326e-05], ['end()', 1.039533457384326e-05], ['seq;', 1.039533457384326e-05], ['ent', 1.039533457384326e-05], ['(!includes', 1.039533457384326e-05], ['(iter,', 1.039533457384326e-05], ['(iter);', 1.039533457384326e-05], ['proof_goal&', 1.039533457384326e-05], ['(proof_goal&', 1.039533457384326e-05], ['valid;', 1.039533457384326e-05], ['undecided)', 1.039533457384326e-05], ['PARM_CONSTR_OPERAND', 1.039533457384326e-05], ['determined,', 1.039533457384326e-05], ['(g.assumptions,', 1.039533457384326e-05], ['p.begin();', 1.039533457384326e-05], ['args));', 1.039533457384326e-05], ['iter);', 1.039533457384326e-05], ['disjunction.', 1.039533457384326e-05], ['(ti', 1.039533457384326e-05], ['DISJ_CONSTR)', 1.039533457384326e-05], ['disjunctions.', 1.039533457384326e-05], ['load_conclusions', 1.039533457384326e-05], ['(proof);', 1.039533457384326e-05], ['RIGHT', 1.039533457384326e-05], ['Linemap*', 1.039533457384326e-05], ['lexical', 1.039533457384326e-05], ['compile.', 1.039533457384326e-05], ['CODE,', 1.039533457384326e-05], ['eptype', 1.039533457384326e-05], ['default.', 1.039533457384326e-05], ['void,', 1.039533457384326e-05], ['(e->type->ty', 1.039533457384326e-05], ['e->e1->type,', 1.039533457384326e-05], ['(tb2->ty', 1.039533457384326e-05], ['separately.', 1.039533457384326e-05], ['(TRUTH_ANDIF_EXPR,', 1.039533457384326e-05], ['EQ', 1.039533457384326e-05], ['(TRUTH_NOT_EXPR,', 1.039533457384326e-05], ['element,', 1.039533457384326e-05], ['MINUS_EXPR;', 1.039533457384326e-05], ['MULT_EXPR;', 1.039533457384326e-05], ['RDIV_EXPR;', 1.039533457384326e-05], ['TRUNC_MOD_EXPR;', 1.039533457384326e-05], ['BIT_IOR_EXPR;', 1.039533457384326e-05], ['BIT_XOR_EXPR;', 1.039533457384326e-05], ['LSHIFT_EXPR;', 1.039533457384326e-05], ['(var),', 1.039533457384326e-05], ['tinfo', 1.039533457384326e-05], ['postblit', 1.039533457384326e-05], ['(etype);', 1.039533457384326e-05], ['e->op', 1.039533457384326e-05], ['TOKconstruct)', 1.039533457384326e-05], ['()->mutableOf', 1.039533457384326e-05], ['tmemset', 1.039533457384326e-05], ['(BUILT_IN_MEMSET);', 1.039533457384326e-05], ['(tmemset,', 1.039533457384326e-05], ['or:', 1.039533457384326e-05], ['((VarExp', 1.039533457384326e-05], ['libcall;', 1.039533457384326e-05], ['Index', 1.039533457384326e-05], ['(ptr,', 1.039533457384326e-05], ['(e->e1->type->toBasetype', 1.039533457384326e-05], ['Adjust', 1.039533457384326e-05], ['lwr', 1.039533457384326e-05], ['(e->e1,', 1.039533457384326e-05], ['this->constp_);', 1.039533457384326e-05], ['prior', 1.039533457384326e-05], ['ty1', 1.039533457384326e-05], ['StructLiteralExp', 1.039533457384326e-05], ['cleanup', 1.039533457384326e-05], ['Calls', 1.039533457384326e-05], ['*var', 1.039533457384326e-05], ['thisexp', 1.039533457384326e-05], ['(callee)', 1.039533457384326e-05], ['(fn,', 1.039533457384326e-05], ['Compile', 1.039533457384326e-05], ['(this->constp_)', 1.039533457384326e-05], ['layout_struct_initializer', 1.039533457384326e-05], ['Allocating', 1.039533457384326e-05], ['e->newtype->toBasetype', 1.039533457384326e-05], ['setup_exp', 1.039533457384326e-05], ['(new_call);', 1.039533457384326e-05], ['(e->argprefix)', 1.039533457384326e-05], ['(e->argprefix),', 1.039533457384326e-05], ['saved_elems', 1.039533457384326e-05], ['placeholders', 1.039533457384326e-05], ['thrown', 1.039533457384326e-05], ['align;', 1.039533457384326e-05], ["'<'", 1.039533457384326e-05], ['<stdio.h>', 1.039533457384326e-05], ['backend.h.', 1.039533457384326e-05], ['t->forward_declaration_type();', 1.039533457384326e-05], ['nt->is_alias())', 1.039533457384326e-05], ['rhs->float_type()', 1.039533457384326e-05], ['rhs->complex_type()', 1.039533457384326e-05], ['(lhs->integer_type()', 1.039533457384326e-05], ['lhs->float_type()', 1.039533457384326e-05], ['(lhs->points_to()', 1.039533457384326e-05], ['rhs->named_type()', 1.039533457384326e-05], ['(this->btype_', 1.039533457384326e-05], ['val.second.btype', 1.039533457384326e-05], ['val.second.is_placeholder', 1.039533457384326e-05], ['confuse', 1.039533457384326e-05], ['this->get_backend(gogo);', 1.039533457384326e-05], ['maps', 1.039533457384326e-05], ['(this->is_slice_type())', 1.039533457384326e-05], ['var_expr', 1.039533457384326e-05], ['phash', 1.039533457384326e-05], ['this->type_descriptor_var_', 1.039533457384326e-05], ['ret->set_is_struct_incomparable();', 1.039533457384326e-05], ['equal_fntype', 1.039533457384326e-05], ['"name",', 1.039533457384326e-05], ['"pkgPath",', 1.039533457384326e-05], ['Type::make_builtin_struct_type(3,', 1.039533457384326e-05], ['Go.', 1.039533457384326e-05], ['(size)', 1.039533457384326e-05], ['16:', 1.039533457384326e-05], ['tn', 1.039533457384326e-05], ['(!this->backend_type_size(gogo,', 1.039533457384326e-05], ['aligned', 1.039533457384326e-05], ['equal_fn);', 1.039533457384326e-05], ['builds', 1.039533457384326e-05], ['key_arg', 1.039533457384326e-05], ['gogo->lookup("key",', 1.039533457384326e-05], ['go_assert(key_arg', 1.039533457384326e-05], ['seed_arg', 1.039533457384326e-05], ['gogo->lookup("seed",', 1.039533457384326e-05], ['go_assert(seed_arg', 1.039533457384326e-05], ['Expression::make_var_reference(seed_arg,', 1.039533457384326e-05], ['vals->push_back(call);', 1.039533457384326e-05], ['key1_arg', 1.039533457384326e-05], ['gogo->lookup("key1",', 1.039533457384326e-05], ['go_assert(key1_arg', 1.039533457384326e-05], ['gogo->lookup("key2",', 1.039533457384326e-05], ['Expression::make_var_reference(key1_arg,', 1.039533457384326e-05], ['Expression::make_var_reference(key2_arg,', 1.039533457384326e-05], ['Expression::make_temporary_reference(p1,', 1.039533457384326e-05], ['only_value_methods)', 1.039533457384326e-05], ['vals->push_back(Expression::make_type_info(this,', 1.039533457384326e-05], ['type_info));', 1.039533457384326e-05], ['this->gc_symbol_var_', 1.039533457384326e-05], ['counts', 1.039533457384326e-05], ['(type->base()->classification())', 1.039533457384326e-05], ['Type::TYPE_SINK:', 1.039533457384326e-05], ['this->set(offset', 1.039533457384326e-05], ['(!type->has_pointer())', 1.039533457384326e-05], ['field_align;', 1.039533457384326e-05], ['&field_align))', 1.039533457384326e-05], ['(!pf->type()->backend_type_size(gogo,', 1.039533457384326e-05], ['&field_size))', 1.039533457384326e-05], ['eoffset', 1.039533457384326e-05], ['(int64_t', 1.039533457384326e-05], ['GCProg', 1.039533457384326e-05], ['this->ptr(offset', 1.039533457384326e-05], ['this->flushlit();', 1.039533457384326e-05], ['METHODS', 1.039533457384326e-05], ['Expression::make_string(n,', 1.039533457384326e-05], ['(Methods::const_iterator', 1.039533457384326e-05], ['this->get_backend_placeholder(gogo);', 1.039533457384326e-05], ['ptr_offset', 1.039533457384326e-05], ['(abstract_type', 1.039533457384326e-05], ['abstract_type', 1.039533457384326e-05], ['this->bits_);', 1.039533457384326e-05], ['(this->bits_', 1.039533457384326e-05], ['(this->receiver_', 1.039533457384326e-05], ['(this->parameters_', 1.039533457384326e-05], ['(this->results_', 1.039533457384326e-05], ['this->parameters();', 1.039533457384326e-05], ['++p1)', 1.039533457384326e-05], ['this->results();', 1.039533457384326e-05], ['res2', 1.039533457384326e-05], ['parameters");', 1.039533457384326e-05], ['(p1', 1.039533457384326e-05], ['this->results_->begin();', 1.039533457384326e-05], ['this->results_->end();', 1.039533457384326e-05], ['++pb)', 1.039533457384326e-05], ['p->type()->get_backend(gogo);', 1.039533457384326e-05], ['Type::make_builtin_struct_type(4,', 1.039533457384326e-05], ['(!is_varargs', 1.039533457384326e-05], ['this->append_reflection(p->type(),', 1.039533457384326e-05], ['exp->write_c_string("(");', 1.039533457384326e-05], ['exp->write_name(p->name());', 1.039533457384326e-05], ['ret->set_is_varargs();', 1.039533457384326e-05], ['go_assert(this->is_method());', 1.039533457384326e-05], ['this->results_,', 1.039533457384326e-05], ['new_results', 1.039533457384326e-05], ['invoked', 1.039533457384326e-05], ['(!name.empty())', 1.039533457384326e-05], ['nt->name()', 1.039533457384326e-05], ['distinguish', 1.039533457384326e-05], ['(Type::traverse(p->type(),', 1.039533457384326e-05], ['(p->type()->has_pointer())', 1.039533457384326e-05], ['found_depth', 1.039533457384326e-05], ['(q', 1.039533457384326e-05], ['reporting.', 1.039533457384326e-05], ['name))', 1.039533457384326e-05], ['recursive.', 1.039533457384326e-05], ['is_ambiguous);', 1.039533457384326e-05], ['++q;', 1.039533457384326e-05], ['o', 1.039533457384326e-05], ['Statement::make_temporary(uintptr_type,', 1.039533457384326e-05], ['subkey', 1.039533457384326e-05], ['Expression::make_unsafe_cast(pt,', 1.039533457384326e-05], ["ret->push_back('}');", 1.039533457384326e-05], ["'}')", 1.039533457384326e-05], ['Named_object*>*', 1.039533457384326e-05], ['declare);', 1.039533457384326e-05], ['this->write_field_to_c_header(os,', 1.039533457384326e-05], ['For_range_statement*', 1.039533457384326e-05], ['valsize;', 1.039533457384326e-05], ['(valsize', 1.039533457384326e-05], ['keysize,', 1.039533457384326e-05], ['bucket', 1.039533457384326e-05], ['scase', 1.039533457384326e-05], ['go_assert(this->methods_are_finalized_', 1.039533457384326e-05], ['this->all_methods_;', 1.039533457384326e-05], ['Gogo::message_name(p->name()).c_str());', 1.039533457384326e-05], ['go_error_at(tl,', 1.039533457384326e-05], ['_("incompatible', 1.039533457384326e-05], ['%s%s%s', 1.039533457384326e-05], ['methods"));', 1.039533457384326e-05], ['this->bmethods_;', 1.039533457384326e-05], ['this->bmethods_', 1.039533457384326e-05], ['this->bmethods_is_placeholder_', 1.039533457384326e-05], ['bfields))', 1.039533457384326e-05], ['rt', 1.039533457384326e-05], ['option,', 1.039533457384326e-05], ['Bind', 1.039533457384326e-05], ['go_assert(!this->is_alias_);', 1.039533457384326e-05], ['this->local_methods_', 1.039533457384326e-05], ['go_error_at(p->second->location(),', 1.039533457384326e-05], ['(this->type_->struct_type()', 1.039533457384326e-05], ['(p->name().empty()', 1.039533457384326e-05], ['this->message_name().c_str());', 1.039533457384326e-05], ['tables', 1.039533457384326e-05], ['Slice', 1.039533457384326e-05], ["ret->push_back('\\t');", 1.039533457384326e-05], ['rcvr', 1.039533457384326e-05], ['(rcvr', 1.039533457384326e-05], ['*ptype', 1.039533457384326e-05], ['imp->require_semicolon_if_old_version();', 1.039533457384326e-05], ['imp->require_c_string("\\n");', 1.039533457384326e-05], ['exp->write_c_string("\\n");', 1.039533457384326e-05], ['(p->second->is_function_declaration())', 1.039533457384326e-05], ['named_object,', 1.039533457384326e-05], ['*METHODS.', 1.039533457384326e-05], ['Named_type*>*', 1.039533457384326e-05], ['jumps', 1.039533457384326e-05], ['(name[0]', 1.039533457384326e-05], ['ambiguity.', 1.039533457384326e-05], ['again,', 1.039533457384326e-05], ['level,', 1.039533457384326e-05], ['named_object)', 1.039533457384326e-05], ['(this->is_defined())', 1.039533457384326e-05], ['this->named_object()->type_value();', 1.039533457384326e-05], ['this->named_object();', 1.039533457384326e-05], ['Type_declaration*', 1.039533457384326e-05], ['arise', 1.039533457384326e-05], ['OS', 1.039533457384326e-05], ['requested.', 1.039533457384326e-05], ['__cxa_atexit', 1.039533457384326e-05], ['"no"', 1.039533457384326e-05], ['files,', 1.039533457384326e-05], ['this:', 1.039533457384326e-05], ['linking.', 1.039533457384326e-05], ['target_has_targetm_common=no', 1.039533457384326e-05], ['aarch64*-*-*)', 1.039533457384326e-05], ['arm*-*-*)', 1.039533457384326e-05], ['g.opt', 1.039533457384326e-05], ['sparc*-*-*)', 1.039533457384326e-05], ['v850*-*-*)', 1.039533457384326e-05], ['mx32)', 1.039533457384326e-05], ["'Unknown", 1.039533457384326e-05], ['extra_options="$extra_options', 1.039533457384326e-05], ['native_system_header_dir=/include', 1.039533457384326e-05], ['x$gas', 1.039533457384326e-05], ['thread_file=posix', 1.039533457384326e-05], ['alpha/t-alpha"', 1.039533457384326e-05], ['x${with_endian}', 1.039533457384326e-05], ['with_endian=big', 1.039533457384326e-05], ['"with_endian=${with_endian}', 1.039533457384326e-05], ['arm/t-bpabi"', 1.039533457384326e-05], ['arm/t-bpabi', 1.039533457384326e-05], ['-o', 1.039533457384326e-05], ['xno;', 1.039533457384326e-05], ['hard)', 1.039533457384326e-05], ['--with-float=$with_float"', 1.039533457384326e-05], ['elfos.h"', 1.039533457384326e-05], ['pa/pa-64.h', 1.039533457384326e-05], ['pa/pa32-regs.h', 1.039533457384326e-05], ['xposix', 1.039533457384326e-05], ['"Unsupported', 1.039533457384326e-05], ['values:"', 1.039533457384326e-05], ['i386/gnu-user.h', 1.039533457384326e-05], ['i386/bsd.h', 1.039533457384326e-05], ['i386/gas.h', 1.039533457384326e-05], ['feature', 1.039533457384326e-05], ['MOTOROLA=1"', 1.039533457384326e-05], ['m68k/t-mlibs"', 1.039533457384326e-05], ['ABI.', 1.039533457384326e-05], ['MIPS_ABI_DEFAULT=ABI_EABI"', 1.039533457384326e-05], ['tmake_file="mips/t-elf"', 1.039533457384326e-05], ['port', 1.039533457384326e-05], ['rs6000/sysv4.h"', 1.039533457384326e-05], ['rs6000/linux64.opt"', 1.039533457384326e-05], ['rs6000/eabi.h', 1.039533457384326e-05], ['"default"', 1.039533457384326e-05], ['abcdefghijklmnopqrstuvwxyz-', 1.039533457384326e-05], ['tr', 1.039533457384326e-05], ['*-leon-*)', 1.039533457384326e-05], ['*-leon[3-9]*)', 1.039533457384326e-05], ['tm_file="sparc/biarch64.h', 1.039533457384326e-05], ['powerpc*-*-*', 1.039533457384326e-05], ['cpu=generic', 1.039533457384326e-05], ['"$with_arch"', 1.039533457384326e-05], ['mips64r5900-*-*', 1.039533457384326e-05], ['mips64r5900el-*-*', 1.039533457384326e-05], ['mipsr5900-*-*', 1.039533457384326e-05], ['mipsr5900el-*-*)', 1.039533457384326e-05], ['"${target}"', 1.039533457384326e-05], ['$which', 1.039533457384326e-05], ['"^$pattern(\\"$base_val\\","', 1.039533457384326e-05], ['${srcdir}/config/aarch64/$def', 1.039533457384326e-05], ['"^AARCH64_OPT_EXTENSION(\\"$base_ext\\","', 1.039533457384326e-05], ['${srcdir}/config/aarch64/aarch64-option-extensions.def', 1.039533457384326e-05], ['tune"', 1.039533457384326e-05], ['tune;', 1.039533457384326e-05], ['fpu', 1.039533457384326e-05], ['"Error:', 1.039533457384326e-05], ['arch_64', 1.039533457384326e-05], ['"${with_arch}"', 1.039533457384326e-05], ['"unsupported', 1.039533457384326e-05], ['VxWorks', 1.039533457384326e-05], ['}"', 1.039533457384326e-05], ['"rtl.h"', 1.039533457384326e-05], ['"memmodel.h"', 1.039533457384326e-05], ['rtx_equal_p', 1.039533457384326e-05], ['move.', 1.039533457384326e-05], ['(operands[3]);', 1.039533457384326e-05], ['alignment,', 1.039533457384326e-05], ['func_addr_rtx', 1.039533457384326e-05], ['r4', 1.039533457384326e-05], ['r5', 1.039533457384326e-05], ['5);', 1.039533457384326e-05], ['function_symbol', 1.039533457384326e-05], ['SFUNC_STATIC).lab;', 1.039533457384326e-05], ['r4);', 1.039533457384326e-05], ['r5);', 1.039533457384326e-05], ['*jump;', 1.039533457384326e-05], ['*L_return', 1.039533457384326e-05], ['*L_loop_byte', 1.039533457384326e-05], ['(tmp3,', 1.039533457384326e-05], ['tmp1));', 1.039533457384326e-05], ['(gen_rotlhi3_8', 1.039533457384326e-05], ['(L_loop_byte);', 1.039533457384326e-05], ['addr2));', 1.039533457384326e-05], ['(flag_delayed_branch)', 1.039533457384326e-05], ['(L_return);', 1.039533457384326e-05], ['(gen_subsi3', 1.039533457384326e-05], ['(TARGET_SH2)', 1.039533457384326e-05], ['(gen_dect', 1.039533457384326e-05], ['lenw));', 1.039533457384326e-05], ['(-1)));', 1.039533457384326e-05], ['(QImode));', 1.039533457384326e-05], ['len));', 1.039533457384326e-05], ['search.', 1.039533457384326e-05], ['(dest_addr,', 1.039533457384326e-05], ['"phsa.h"', 1.039533457384326e-05], ['m_total_group_segment_usage', 1.039533457384326e-05], ['SET_TYPE_ALIGN', 1.039533457384326e-05], ['skipped_entry_handler', 1.039533457384326e-05], ['code_entry_handler_info', 1.039533457384326e-05], ['BrigModuleHeader', 1.039533457384326e-05], ['(m_code', 1.039533457384326e-05], ['Currently', 1.039533457384326e-05], ['(m_cf', 1.039533457384326e-05], ['&skipped_handler},', 1.039533457384326e-05], ['entry_offset)', 1.039533457384326e-05], ['var_decl;', 1.039533457384326e-05], ['func_name;', 1.039533457384326e-05], ['(enum', 1.039533457384326e-05], ['code);', 1.039533457384326e-05], ['regs', 1.039533457384326e-05], ['source)', 1.039533457384326e-05], ['source);', 1.039533457384326e-05], ['dump_function', 1.039533457384326e-05], ['(DECL_STRUCT_FUNCTION', 1.039533457384326e-05], ['Appends', 1.039533457384326e-05], ['alignment)', 1.039533457384326e-05], ['copy.', 1.039533457384326e-05], ['types;', 1.039533457384326e-05], ['cgraph_node::finalize_function', 1.039533457384326e-05], ['kernels', 1.039533457384326e-05], ['(launcher);', 1.039533457384326e-05], ['kern_name', 1.039533457384326e-05], ['"\\n;;', 1.039533457384326e-05], ['TDF_NONE);', 1.039533457384326e-05], ['(FILE', 1.039533457384326e-05], ['(dump_file)', 1.039533457384326e-05], ['&buf);', 1.039533457384326e-05], ['namelen', 1.039533457384326e-05], ['(buf);', 1.039533457384326e-05], ['ident;', 1.039533457384326e-05], ['(!strcmp', 1.039533457384326e-05], ['current_binding_level', 1.039533457384326e-05], ['d);', 1.039533457384326e-05], ['!d->members)', 1.039533457384326e-05], ['template.', 1.039533457384326e-05], ['TypeInfo,', 1.039533457384326e-05], ['walking', 1.039533457384326e-05], ['(d->type,', 1.039533457384326e-05], ['(d->csym)', 1.039533457384326e-05], ['(d->csym);', 1.039533457384326e-05], ['IDENTIFIER_DSYMBOL', 1.039533457384326e-05], ['destruction.', 1.039533457384326e-05], ['start_function', 1.039533457384326e-05], ['parm_decl', 1.039533457384326e-05], ['param_list', 1.039533457384326e-05], ['parm_decl);', 1.039533457384326e-05], ['(build2', 1.039533457384326e-05], ['SET_DECL_ALIGN', 1.039533457384326e-05], ['DECL_USER_ALIGN', 1.039533457384326e-05], ['(decl->csym));', 1.039533457384326e-05], ['newfntype', 1.039533457384326e-05], ['insert_decl_attribute', 1.039533457384326e-05], ['cgraph_node', 1.039533457384326e-05], ['*node', 1.039533457384326e-05], ['decl_attributes', 1.039533457384326e-05], ['build_attributes', 1.039533457384326e-05], ['Thunks', 1.039533457384326e-05], ['(function),', 1.039533457384326e-05], ['(buf),', 1.039533457384326e-05], ['thunk,', 1.039533457384326e-05], ['resolve_unique_section', 1.039533457384326e-05], ['(fn))', 1.039533457384326e-05], ['set_decl_section_name', 1.039533457384326e-05], ['Target', 1.039533457384326e-05], ['unit.', 1.039533457384326e-05], ['(param)', 1.039533457384326e-05], ['params;', 1.039533457384326e-05], ['DECL_LANG_THUNKS', 1.039533457384326e-05], ['current_function_decl', 1.039533457384326e-05], ['DECL_SOURCE_LOCATION', 1.039533457384326e-05], ['3);', 1.039533457384326e-05], ['decl->sinit;', 1.039533457384326e-05], ['build_type_decl', 1.039533457384326e-05], ['copies.', 1.039533457384326e-05], ['linkage.', 1.039533457384326e-05], ['attribute_spec', 1.039533457384326e-05], ['attribs', 1.039533457384326e-05], ['*mod', 1.039533457384326e-05], ["hasn't", 1.039533457384326e-05], ['used",', 1.039533457384326e-05], ['----------', 1.039533457384326e-05], ['(xor:SI', 1.039533457384326e-05], ['50)', 1.039533457384326e-05], ['51)', 1.039533457384326e-05], ['lifetime', 1.039533457384326e-05], ['5)))', 1.039533457384326e-05], ['invert', 1.039533457384326e-05], ['cstores.', 1.039533457384326e-05], ['reg.', 1.039533457384326e-05], ['find_set_of_reg_bb', 1.039533457384326e-05], ['insn;', 1.039533457384326e-05], ['prev_nonnote_nondebug_insn_bb', 1.039533457384326e-05], ['find_regno_note', 1.039533457384326e-05], ['(edge_iterator', 1.039533457384326e-05], ['ei', 1.039533457384326e-05], ['ei_start', 1.039533457384326e-05], ['!ei_end_p', 1.039533457384326e-05], ['ei_next', 1.039533457384326e-05], ['(&ei))', 1.039533457384326e-05], ['(BB_END', 1.039533457384326e-05], ['("found', 1.039533457384326e-05], ['SET', 1.039533457384326e-05], ['split_insns,', 1.039533457384326e-05], ['condition_rtx_in_insn', 1.039533457384326e-05], ['update_ccreg_mode', 1.039533457384326e-05], ['trace,', 1.039533457384326e-05], ['m);', 1.039533457384326e-05], ['(m_ccreg);', 1.039533457384326e-05], ['const0_rtx)', 1.039533457384326e-05], ['"set', 1.039533457384326e-05], ['(new_entry.cstore.set_src', 1.039533457384326e-05], ['store\\n");', 1.039533457384326e-05], ['BB.', 1.039533457384326e-05], ['parallel', 1.039533457384326e-05], ['safe.', 1.039533457384326e-05], ['cstore_dst', 1.039533457384326e-05], ['effective', 1.039533457384326e-05], ['recorded', 1.039533457384326e-05], ['SImode', 1.039533457384326e-05], ['(dst_reg)', 1.039533457384326e-05], ['(gen_rtx_SET', 1.039533457384326e-05], ['gen_rtx_fmt_ee', 1.039533457384326e-05], ['get_insns', 1.039533457384326e-05], ['follows', 1.039533457384326e-05], ['dominating_cstore)', 1.039533457384326e-05], ['Thus', 1.039533457384326e-05], ['cstore_count', 1.039533457384326e-05], ['(i->setcc.empty', 1.039533457384326e-05], ['(dominating_cstore', 1.039533457384326e-05], ['scratch', 1.039533457384326e-05], ['(new_i,', 1.039533457384326e-05], ['aborting\\n");', 1.039533457384326e-05], ['inv_cstore_count', 1.039533457384326e-05], ['(insn);', 1.039533457384326e-05], ['ccr0', 1.039533457384326e-05], ['INVALID_REGNUM;', 1.039533457384326e-05], ['STORE_FLAG_VALUE);', 1.039533457384326e-05], ['Ast_dump_traverse_blocks_and_functions', 1.039533457384326e-05], ['no->message_name()', 1.039533457384326e-05], ['out)', 1.039533457384326e-05], ['std::cerr.', 1.039533457384326e-05], ['stmt)', 1.039533457384326e-05], ['std::pair<bool,', 1.039533457384326e-05], ['std::ostringstream', 1.039533457384326e-05], ['this->typeref(NULL,', 1.039533457384326e-05], ['tag;', 1.039533457384326e-05], ['rec', 1.039533457384326e-05], ['noinline', 1.039533457384326e-05], ['sort_ctx', 1.039533457384326e-05], ['*out', 1.039533457384326e-05], ['(out', 1.039533457384326e-05], ['STRIDE;', 1.039533457384326e-05], ['REORDER_23', 1.039533457384326e-05], ['(size_t,', 1.039533457384326e-05], ['REORDER_45', 1.039533457384326e-05], ['e2);', 1.039533457384326e-05], ['(c,', 1.039533457384326e-05], ['e4);', 1.039533457384326e-05], ['mergesort', 1.039533457384326e-05], ['tmp);', 1.039533457384326e-05], ['TOUPPER', 1.039533457384326e-05], ['(&r.rv', 1.039533457384326e-05], ['16-bit', 1.039533457384326e-05], ['char*)', 1.039533457384326e-05], ['nunits);', 1.039533457384326e-05], ['execution', 1.039533457384326e-05], ['early', 1.039533457384326e-05], ['establish', 1.039533457384326e-05], ['aarch64_speculation_clobber_sp', 1.039533457384326e-05], ['SP.', 1.039533457384326e-05], ['insert_insn_on_edge', 1.039533457384326e-05], ['emit_insn_before', 1.039533457384326e-05], ['call_insn', 1.039533457384326e-05], ['m_kind', 1.039533457384326e-05], ['KEYWORD_INVALID', 1.039533457384326e-05], ['keyword.', 1.039533457384326e-05], ['Token&', 1.039533457384326e-05], ['cur', 1.039533457384326e-05], ['cur);', 1.039533457384326e-05], ['pstart', 1.039533457384326e-05], ['pstart;', 1.039533457384326e-05], ['12,', 1.039533457384326e-05], ['13,', 1.039533457384326e-05], ['15,', 1.039533457384326e-05], ['_', 1.039533457384326e-05], ['w', 1.039533457384326e-05], ['octal', 1.039533457384326e-05], ['(Lex::is_hex_digit(p[1])', 1.039533457384326e-05], ['buf[1]', 1.039533457384326e-05], ['"unterminated', 1.039533457384326e-05], ['//extern', 1.039533457384326e-05], ['(*ps', 1.039533457384326e-05], ['5},', 1.039533457384326e-05], ['p->low)', 1.039533457384326e-05], ['Lex::is_in_unicode_range(c,', 1.039533457384326e-05], ['(BLOCK);', 1.039533457384326e-05], ['contour.', 1.039533457384326e-05], ['*s,', 1.039533457384326e-05], ['*ent', 1.039533457384326e-05], ['d_function_chain->labels->get', 1.039533457384326e-05], ['(ent', 1.039533457384326e-05], ['(location,', 1.039533457384326e-05], ['"case', 1.039533457384326e-05], ['LABEL_DECL,', 1.039533457384326e-05], ['this->continue_label_;', 1.039533457384326e-05], ['(build_expr_dtor', 1.039533457384326e-05], ['this->finish_scope', 1.039533457384326e-05], ['lbreak', 1.039533457384326e-05], ['this->push_break_label', 1.039533457384326e-05], ['this->pop_break_label', 1.039533457384326e-05], ['(lbreak);', 1.039533457384326e-05], ['clauses.', 1.039533457384326e-05], ['wrapping', 1.039533457384326e-05], ['(s->statement);', 1.039533457384326e-05], ['supposed', 1.039533457384326e-05], ['build_case_label', 1.039533457384326e-05], ['signal', 1.039533457384326e-05], ['outputs', 1.039533457384326e-05], ['(output);', 1.039533457384326e-05], ['this->pkgpath_symbol_', 1.039533457384326e-05], ['dot_alias', 1.039533457384326e-05], ['package));', 1.039533457384326e-05], ['this->imported_init_fns_.begin();', 1.039533457384326e-05], ['this->imported_init_fns_.end();', 1.039533457384326e-05], ['this->package_->bindings();', 1.039533457384326e-05], ['unknown_loc);', 1.039533457384326e-05], ['phase.', 1.039533457384326e-05], ['builtin_loc);', 1.039533457384326e-05], ['(*p)->location();', 1.039533457384326e-05], ['no_loc);', 1.039533457384326e-05], ['this->initialization_function_decl();', 1.039533457384326e-05], ['const_iterator', 1.039533457384326e-05], ['&find_vars);', 1.039533457384326e-05], ['(dep', 1.039533457384326e-05], ['A.', 1.039533457384326e-05], ['var_inits->begin();', 1.039533457384326e-05], ['var_inits->end();', 1.039533457384326e-05], ['this->current_bindings();', 1.039533457384326e-05], ['const_decls,', 1.039533457384326e-05], ['type_decls,', 1.039533457384326e-05], ['var_init_stmt', 1.039533457384326e-05], ['(var->init()', 1.039533457384326e-05], ['var->location());', 1.039533457384326e-05], ['(Gogo::unpack_hidden_name(no->name())', 1.039533457384326e-05], ['Function_declaration*', 1.039533457384326e-05], ['declared.', 1.039533457384326e-05], ['err', 1.039533457384326e-05], ['this->packages_.begin();', 1.039533457384326e-05], ['this->packages_.end();', 1.039533457384326e-05], ['Value', 1.039533457384326e-05], ['no->func_value()->traverse(this);', 1.039533457384326e-05], ['sorig)', 1.039533457384326e-05], ['Statement_inserter(block,', 1.039533457384326e-05], ['changes.', 1.039533457384326e-05], ['snew', 1.039533457384326e-05], ['expr->call_expression();', 1.039533457384326e-05], ['ce->args();', 1.039533457384326e-05], ['unspecified', 1.039533457384326e-05], ["declaration's", 1.039533457384326e-05], ['defer,', 1.039533457384326e-05], ['(*pexpr)->location();', 1.039533457384326e-05], ['(no->is_result_variable())', 1.039533457384326e-05], ['(pshortcut', 1.039533457384326e-05], ['pd', 1.039533457384326e-05], ['bindings.', 1.039533457384326e-05], ['++index)', 1.039533457384326e-05], ['traverse->traverse_mask();', 1.039533457384326e-05], ['(this->block_', 1.039533457384326e-05], ['Traverse::traverse_types))', 1.039533457384326e-05], ['(this->descriptor_', 1.039533457384326e-05], ['making', 1.039533457384326e-05], ['*is_varargs', 1.039533457384326e-05], ['Backend::function_is_visible;', 1.039533457384326e-05], ['functype', 1.039533457384326e-05], ['this->fndecl_;', 1.039533457384326e-05], ['this->block_,', 1.039533457384326e-05], ['code_stmt', 1.039533457384326e-05], ['brace.', 1.039533457384326e-05], ['indentation",', 1.039533457384326e-05], ['number",', 1.039533457384326e-05], ['declares', 1.039533457384326e-05], ['start_loc', 1.039533457384326e-05], ['start_loc);', 1.039533457384326e-05], ['(report_error)', 1.039533457384326e-05], ['(get_index_type)', 1.039533457384326e-05], ['Type_guard_expression*', 1.039533457384326e-05], ['guard.', 1.039533457384326e-05], ['bblock', 1.039533457384326e-05], ['this->backend_', 1.039533457384326e-05], ['Type::make_pointer_type(type);', 1.039533457384326e-05], ['warning.', 1.039533457384326e-05], ['in_function', 1.039533457384326e-05], ['d,', 1.039533457384326e-05], ['real_nan', 1.039533457384326e-05], ['inst_base.opcode', 1.039533457384326e-05], ['(inst_base,', 1.039533457384326e-05], ['(add_to_globals)', 1.039533457384326e-05], ['must_be_nonzero', 1.039533457384326e-05], ['(wi::ge_p', 1.039533457384326e-05], ['&min,', 1.039533457384326e-05], ['&max,', 1.039533457384326e-05], ['cross', 1.039533457384326e-05], ['(!wide_int_binop_overflow', 1.039533457384326e-05], ['vr1_ub,', 1.039533457384326e-05], ['widest2_int::from', 1.039533457384326e-05], ['(wi::ltu_p', 1.039533457384326e-05], ['wide_int::from', 1.039533457384326e-05], ['wide_int_range_multiplicative_op', 1.039533457384326e-05], ['in_bounds', 1.039533457384326e-05], ['[1,', 1.039533457384326e-05], ['shifting', 1.039533457384326e-05], ['numbers,', 1.039533457384326e-05], ['BIT_AND_EXPR', 1.039533457384326e-05], ['w.get_precision', 1.039533457384326e-05], ['vr1_max))', 1.039533457384326e-05], ['vr0_max;', 1.039533457384326e-05], ['lower_bound,', 1.039533457384326e-05], ['upper_bound,', 1.039533457384326e-05], ['[WMIN,WMAX].', 1.039533457384326e-05], ['(wi::lt_p', 1.039533457384326e-05], ['wi::ge_p', 1.039533457384326e-05], ['wi::abs', 1.039533457384326e-05], ['min;', 1.039533457384326e-05], ['extra_range_p', 1.039533457384326e-05], ['divisor_max,', 1.039533457384326e-05], ['(target);', 1.039533457384326e-05], ['cl_decoded_option', 1.039533457384326e-05], ['global.params.useAssert', 1.039533457384326e-05], ['global.params.useArrayBounds', 1.039533457384326e-05], ['(D', 1.039533457384326e-05], ['FN', 1.039533457384326e-05], ['"-")', 1.039533457384326e-05], ['("%.*s",', 1.039533457384326e-05], ['buf.offset,', 1.039533457384326e-05], ['buf.data);', 1.039533457384326e-05], ['forced', 1.039533457384326e-05], ['d_type_for_mode', 1.039533457384326e-05], ['d_byte_type;', 1.039533457384326e-05], ['d_short_type;', 1.039533457384326e-05], ['d_long_type;', 1.039533457384326e-05], ['d_cent_type;', 1.039533457384326e-05], ['float_type_node;', 1.039533457384326e-05], ['double_type_node;', 1.039533457384326e-05], ['lang_decl', 1.039533457384326e-05], ['gave', 1.039533457384326e-05], ['need_stdcxx', 1.039533457384326e-05], ['shared_libgcc', 1.039533457384326e-05], ['PHOBOS_DEFAULT)', 1.039533457384326e-05], ['PHOBOS_LINK;', 1.039533457384326e-05], ['(args[i]', 1.039533457384326e-05], ['suffix', 1.039533457384326e-05], ['(OPT_Wl_,', 1.039533457384326e-05], ['"builtins.h"', 1.039533457384326e-05], ['m_has_unexpanded_dp_builtins', 1.039533457384326e-05], ['m_current_bind_expr;', 1.039533457384326e-05], ['long_long_integer_type_node);', 1.039533457384326e-05], ['(bind_expr)', 1.039533457384326e-05], ['boolean_type_node;', 1.039533457384326e-05], ['WI', 1.039533457384326e-05], ['restrict_void_ptr,', 1.039533457384326e-05], ['restrict_char_ptr,', 1.039533457384326e-05], ['launcher;', 1.039533457384326e-05], ['(group_base_addr_arg)', 1.039533457384326e-05], ['bind_expr;', 1.039533457384326e-05], ['call_operands.push_back', 1.039533457384326e-05], ['[name.length()', 1.039533457384326e-05], ['dim;', 1.039533457384326e-05], ['(name.c_str(),', 1.039533457384326e-05], ['ctx);', 1.039533457384326e-05], ['(brig_opcode)', 1.039533457384326e-05], ['BITS_PER_UNIT', 1.039533457384326e-05], ['input_element_type,', 1.039533457384326e-05], ['(input_element_type),', 1.039533457384326e-05], ['tmp_var', 1.039533457384326e-05], ['(tmp_var),', 1.039533457384326e-05], ['tmp_var,', 1.039533457384326e-05], ['tmp_var;', 1.039533457384326e-05], ['TREE_LIST', 1.039533457384326e-05], ['&inserter,', 1.039533457384326e-05], ['((pragmas', 1.039533457384326e-05], ['intrinsics.', 1.039533457384326e-05], ['DECL_FUNCTION_CODE', 1.039533457384326e-05], ['decl->builtin', 1.039533457384326e-05], ['(uint', 1.039533457384326e-05], ['(ulong', 1.039533457384326e-05], ['argsize', 1.039533457384326e-05], ['bitnum);', 1.039533457384326e-05], ['bitnum', 1.039533457384326e-05], ['pow', 1.039533457384326e-05], ['overflow);', 1.039533457384326e-05], ['volatileLoad', 1.039533457384326e-05], ['volatileStore', 1.039533457384326e-05], ['(this->is_indirect())', 1.039533457384326e-05], ['(this->statement()', 1.039533457384326e-05], ['no->is_result_variable())', 1.039533457384326e-05], ['(is_address_taken)', 1.039533457384326e-05], ['Expression::EXPRESSION_UNARY:', 1.039533457384326e-05], ['Runtime::MAKECHAN:', 1.039533457384326e-05], ['Runtime::MAKECHAN64:', 1.039533457384326e-05], ['Runtime::MAKEMAP:', 1.039533457384326e-05], ['Runtime::MAKESLICE:', 1.039533457384326e-05], ['Runtime::MAKESLICE64:', 1.039533457384326e-05], ['state->loop_depth', 1.039533457384326e-05], ['(!fn->is_function())', 1.039533457384326e-05], ['strongly', 1.039533457384326e-05], ['stack.begin();', 1.039533457384326e-05], ['stack.end();', 1.039533457384326e-05], ['Escape_context*', 1.039533457384326e-05], ['Tag', 1.039533457384326e-05], ['(std::vector<Node*>::const_iterator', 1.039533457384326e-05], ["call's", 1.039533457384326e-05], ['"[%d]', 1.039533457384326e-05], ['this->context_->loop_depth(),', 1.039533457384326e-05], ['statements;', 1.039533457384326e-05], ['fallthrough', 1.039533457384326e-05], ['Thunk_statement*', 1.039533457384326e-05], ['(call->is_builtin())', 1.039533457384326e-05], ['Node::make_node(call->args()->front());', 1.039533457384326e-05], ['Node::make_node(call->args()->back());', 1.039533457384326e-05], ['this->assign_deref(this->context_->sink(),', 1.039533457384326e-05], ['tt', 1.039533457384326e-05], ['array_node', 1.039533457384326e-05], ['((*p)', 1.039533457384326e-05], ['n->state(this->context_,', 1.039533457384326e-05], ['arg_nodes.end();', 1.039533457384326e-05], ['call_node->state(this->context_,', 1.039533457384326e-05], ['til->end();', 1.039533457384326e-05], ['src)', 1.039533457384326e-05], ['e->field_reference_expression()->expr();', 1.039533457384326e-05], ['slicing', 1.039533457384326e-05], ['src_state', 1.039533457384326e-05], ['dst_no', 1.039533457384326e-05], ['(src->encoding()', 1.039533457384326e-05], ['src->set_encoding(enc);', 1.039533457384326e-05], ['*p,', 1.039533457384326e-05], ['std::vector<ccreg_value>&', 1.039533457384326e-05], ['visited', 1.039533457384326e-05], ['(i->insn,', 1.039533457384326e-05], ['operands;', 1.039533457384326e-05], ['operand_offset', 1.039533457384326e-05], ['*operand_data', 1.039533457384326e-05], ['(operand_offset);', 1.039533457384326e-05], ['gccbrig_to_uint64_t', 1.039533457384326e-05], ['BrigOperandConstantBytes', 1.039533457384326e-05], ['(TYPE_SIZE', 1.039533457384326e-05], ['BRIG_SEGMENT_PRIVATE', 1.039533457384326e-05], ['BRIG_SEGMENT_SPILL)', 1.039533457384326e-05], ['BRIG_SEGMENT_GLOBAL', 1.039533457384326e-05], ['m_parent.m_cf->add_arg_variable', 1.039533457384326e-05], ['natural_alignment', 1.039533457384326e-05], ['A{', 1.039533457384326e-05], ['BrigDirectiveLabel', 1.039533457384326e-05], ['m_parent.m_cf->label', 1.039533457384326e-05], ['&brig_inst,', 1.039533457384326e-05], ['operand_type,', 1.039533457384326e-05], ['*data', 1.039533457384326e-05], ['data->byteCount;', 1.039533457384326e-05], ['*operand_ptr', 1.039533457384326e-05], ['data->bytes;', 1.039533457384326e-05], ['*operand_ptr;', 1.039533457384326e-05], ['++operand_ptr;', 1.039533457384326e-05], ['BrigOperandCodeList', 1.039533457384326e-05], ['BrigOperandAddress', 1.039533457384326e-05], ['var_offset', 1.039533457384326e-05], ['const_offset', 1.039533457384326e-05], ['(ptype,', 1.039533457384326e-05], ['convert_to_pointer', 1.039533457384326e-05], ['BRIG_TYPE_S64:', 1.039533457384326e-05], ['BRIG_TYPE_U64:', 1.039533457384326e-05], ['long)', 1.039533457384326e-05], ['scalar_element_size;', 1.039533457384326e-05], ['FP32', 1.039533457384326e-05], ['inst_expr', 1.039533457384326e-05], ['inst_expr);', 1.039533457384326e-05], ['conv', 1.039533457384326e-05], ['operand)', 1.039533457384326e-05], ['(handler,', 1.039533457384326e-05], ['ret_value', 1.039533457384326e-05], ['arg_decls', 1.039533457384326e-05], ['(fndecl),', 1.039533457384326e-05], ['sub,', 1.039533457384326e-05], ['insn_code', 1.039533457384326e-05], ['num_vals', 1.039533457384326e-05], ['num_vals;', 1.039533457384326e-05], ['next_index', 1.039533457384326e-05], ['ARCH);', 1.039533457384326e-05], ['powers', 1.039533457384326e-05], ['((abs_multiplier', 1.039533457384326e-05], ['10))', 1.039533457384326e-05], ['prev_pow10', 1.039533457384326e-05], ['(multiplier)', 1.039533457384326e-05], [',\\n', 1.039533457384326e-05], ['{",', 1.039533457384326e-05], ['append_to_statement_list', 1.039533457384326e-05], ['&SWITCH_BODY', 1.039533457384326e-05], ['(switch_expr));', 1.039533457384326e-05], ['define_float_constants', 1.039533457384326e-05], ['real_from_string', 1.039533457384326e-05], ['mem_ref', 1.039533457384326e-05], ['build_tree_operand_from_brig', 1.039533457384326e-05], ['Types.', 1.039533457384326e-05], ['bcomplex,', 1.039533457384326e-05], ['std::vector<Bexpression*>&,', 1.039533457384326e-05], ['bcode,', 1.039533457384326e-05], ['this->integer_type(true,', 1.039533457384326e-05], ['build_pointer_type(build_qualified_type(t,', 1.039533457384326e-05], ['TYPE_QUAL_VOLATILE));', 1.039533457384326e-05], ['build_function_type_list(t,', 1.039533457384326e-05], ['long_double_type_node,', 1.039533457384326e-05], ['TYPE_CANONICAL', 1.039533457384326e-05], ['structural', 1.039533457384326e-05], ['element_btype,', 1.039533457384326e-05], ['element_type_tree', 1.039533457384326e-05], ['TYPE_NAME(copy)', 1.039533457384326e-05], ['TREE_CODE(type)', 1.039533457384326e-05], ['expr->get_tree();', 1.039533457384326e-05], ['TREE_CONSTANT(decl)', 1.039533457384326e-05], ['TREE_TYPE(expr_tree)', 1.039533457384326e-05], ['expr_tree));', 1.039533457384326e-05], ['then_tree', 1.039533457384326e-05], ['else_tree', 1.039533457384326e-05], ['gofrontend', 1.039533457384326e-05], ['is_constant', 1.039533457384326e-05], ['var->get_decl();', 1.039533457384326e-05], ['init_tree;', 1.039533457384326e-05], ['this->make_statement(stmt_list);', 1.039533457384326e-05], ['append_to_statement_list(t,', 1.039533457384326e-05], ['bind_tree', 1.039533457384326e-05], ['TREE_STATIC(decl)', 1.039533457384326e-05], ['DECL_CONTEXT(decl)', 1.039533457384326e-05], ['binit,', 1.039533457384326e-05], ['(is_common)', 1.039533457384326e-05], ['DECL_WEAK(decl)', 1.039533457384326e-05], ['FUNCTION.', 1.039533457384326e-05], ['defs[i]', 1.039533457384326e-05], ['STATEMENT_ERROR)', 1.039533457384326e-05], ['assignments.', 1.039533457384326e-05], ['this->rhs_,', 1.039533457384326e-05], ['b->add_statement(val_temp);', 1.039533457384326e-05], ['present_temp', 1.039533457384326e-05], ['Statement::make_assignment(this->val_,', 1.039533457384326e-05], ['closed_temp', 1.039533457384326e-05], ['ast_dump_context->dump_expression(this->channel_);', 1.039533457384326e-05], ['ok,', 1.039533457384326e-05], ['terminating', 1.039533457384326e-05], ['STATEMENT_DEFER)', 1.039533457384326e-05], ['complicated', 1.039533457384326e-05], ['useless', 1.039533457384326e-05], ['location)));', 1.039533457384326e-05], ['may_call_recover', 1.039533457384326e-05], ['(may_call_recover)', 1.039533457384326e-05], ['this->is_lowered_', 1.039533457384326e-05], ['vals->size()', 1.039533457384326e-05], ['next_case_label', 1.039533457384326e-05], ['found_default', 1.039533457384326e-05], ['this->clauses_->dump_clauses(ast_dump_context);', 1.039533457384326e-05], ['*stmts_label', 1.039533457384326e-05], ['(Type_clauses::const_iterator', 1.039533457384326e-05], ['can_take_address', 1.039533457384326e-05], ['scases,', 1.039533457384326e-05], ['(ct', 1.039533457384326e-05], ['valref', 1.039533457384326e-05], ['Expression::make_temporary_reference(val,', 1.039533457384326e-05], ['valaddr', 1.039533457384326e-05], ['valaddr,', 1.039533457384326e-05], ['(this->cond_', 1.039533457384326e-05], ['post,', 1.039533457384326e-05], ['index_ref,', 1.039533457384326e-05], ['len(range)', 1.039533457384326e-05], ['index_temp++', 1.039533457384326e-05], ['*PINIT', 1.039533457384326e-05], ['Statement::make_temporary(index_temp->type(),', 1.039533457384326e-05], ['*PCOND', 1.039533457384326e-05], ['(value_temp', 1.039533457384326e-05], ['*PPOST', 1.039533457384326e-05], ['operands[1]));', 1.039533457384326e-05], ['this->gogo_->pack_hidden_name(token->identifier(),', 1.039533457384326e-05], ['(!token->is_op(OPERATOR_COMMA))', 1.039533457384326e-05], ['QualifiedIdent', 1.039533457384326e-05], ['PackageName', 1.039533457384326e-05], ['TypeName', 1.039533457384326e-05], ['go_error_at(token->location(),', 1.039533457384326e-05], ['%<%s.%s%>",', 1.039533457384326e-05], ['token_loc', 1.039533457384326e-05], ['!token->is_eof())', 1.039533457384326e-05], ['Channel', 1.039533457384326e-05], ['(token->is_op(OPERATOR_CHANOP))', 1.039533457384326e-05], ['(token->is_op(OPERATOR_COMMA))', 1.039533457384326e-05], ['(!token->is_op(OPERATOR_RPAREN))', 1.039533457384326e-05], ['(!this->peek_token()->is_op(OPERATOR_COMMA))', 1.039533457384326e-05], ['!this->peek_token()->is_eof())', 1.039533457384326e-05], ['(!token->is_eof()', 1.039533457384326e-05], ['(token->is_op(OPERATOR_LCURLY))', 1.039533457384326e-05], ['declaration");', 1.039533457384326e-05], ['//go:...', 1.039533457384326e-05], ['*init->begin(),', 1.039533457384326e-05], ['vars->begin();', 1.039533457384326e-05], ['(vars->size()', 1.039533457384326e-05], ['(var_type', 1.039533457384326e-05], ['var_type,', 1.039533457384326e-05], ['(token->is_op(OPERATOR_COLONEQ))', 1.039533457384326e-05], ['this->gogo_->pack_hidden_name(id,', 1.039533457384326e-05], ['"func"', 1.039533457384326e-05], ['semi_loc', 1.039533457384326e-05], ['this->unget_token(Token::make_operator_token(OPERATOR_SEMICOLON,', 1.039533457384326e-05], ['this->is_erroneous_function_', 1.039533457384326e-05], ['IS_PARENTHESIZED', 1.039533457384326e-05], ['*IS_PARENTHESIZED', 1.039533457384326e-05], ['parentheses.', 1.039533457384326e-05], ['(token->classification())', 1.039533457384326e-05], ['Token::TOKEN_IDENTIFIER:', 1.039533457384326e-05], ['Token::TOKEN_STRING:', 1.039533457384326e-05], ['Token::TOKEN_CHARACTER:', 1.039533457384326e-05], ['Token::TOKEN_INTEGER:', 1.039533457384326e-05], ['Token::TOKEN_FLOAT:', 1.039533457384326e-05], ['Token::TOKEN_IMAGINARY:', 1.039533457384326e-05], ['Token::TOKEN_KEYWORD:', 1.039533457384326e-05], ['(token->keyword())', 1.039533457384326e-05], ['KEYWORD_FUNC:', 1.039533457384326e-05], ['KEYWORD_INTERFACE:', 1.039533457384326e-05], ['KEYWORD_MAP:', 1.039533457384326e-05], ['KEYWORD_STRUCT:', 1.039533457384326e-05], ['Token::TOKEN_OPERATOR:', 1.039533457384326e-05], ['(this->peek_token()->is_op(OPERATOR_RCURLY))', 1.039533457384326e-05], ['this->unget_token(Token::make_identifier_token(identifier,', 1.039533457384326e-05], ['(!token->is_op(OPERATOR_LCURLY))', 1.039533457384326e-05], ['IS_TYPE_SWITCH', 1.039533457384326e-05], ['(is_type_switch', 1.039533457384326e-05], ['(this->peek_token()->is_op(OPERATOR_COLON))', 1.039533457384326e-05], ['this->simple_stat(true,', 1.039533457384326e-05], ['statement");', 1.039533457384326e-05], ['this->gogo_->start_block(location);', 1.039533457384326e-05], ['p_range_clause)', 1.039533457384326e-05], ['call_expr', 1.039533457384326e-05], ['saw_simple_stat', 1.039533457384326e-05], ['&saw_send_stmt,', 1.039533457384326e-05], ['("send', 1.039533457384326e-05], ['non-blocking', 1.039533457384326e-05], ['%<{%>', 1.039533457384326e-05], ['(switch_val', 1.039533457384326e-05], ['this->pop_break_statement();', 1.039533457384326e-05], ['InitStat', 1.039533457384326e-05], ['p_range_clause->value', 1.039533457384326e-05], ['layout_aggregate_type', 1.039533457384326e-05], ['(t->ctype,', 1.039533457384326e-05], ['module_info', 1.039533457384326e-05], ['dso', 1.039533457384326e-05], ['(expr_list,', 1.039533457384326e-05], ['(Type::tvoidptr,', 1.039533457384326e-05], ['(inst.base.opcode', 1.039533457384326e-05], ['m_next_group_offset', 1.039533457384326e-05], ['pack_type', 1.039533457384326e-05], ['BRIG_2_TREE_HSAIL_C_REG_COUNT;', 1.039533457384326e-05], ['reg_hash', 1.039533457384326e-05], ['(reg_hash', 1.039533457384326e-05], ['(reg_name,', 1.039533457384326e-05], ['reg_hash);', 1.039533457384326e-05], ['reg_name;', 1.039533457384326e-05], ['(target))', 1.039533457384326e-05], ['A1', 1.039533457384326e-05], ['NoErrors', 1.039533457384326e-05], ['BMinusU2', 1.039533457384326e-05], ['V0', 1.039533457384326e-05], ['MinSqEr', 1.039533457384326e-05], ['SqEr', 1.039533457384326e-05], ['MaxSqEr', 1.039533457384326e-05], ['X1', 1.039533457384326e-05], ['Eight', 1.039533457384326e-05], ['Third', 1.039533457384326e-05], ['Random2', 1.039533457384326e-05], ['from_str(s);', 1.039533457384326e-05], ['(&ri,', 1.039533457384326e-05], ['&ri,', 1.039533457384326e-05], ['T);', 1.039533457384326e-05], ['verbose_binop(image,', 1.039533457384326e-05], ['%.*a', 1.039533457384326e-05], ['%.*La', 1.039533457384326e-05], ['image);', 1.039533457384326e-05], ['FLOAT,', 1.039533457384326e-05], ['RHS>', 1.039533457384326e-05], ['&a,', 1.039533457384326e-05], ['FLOAT(a)', 1.039533457384326e-05], ['FLOAT(b);', 1.039533457384326e-05], ['zero)', 1.039533457384326e-05], ['"%.35a",', 1.039533457384326e-05], ['"%.35La",', 1.039533457384326e-05], ['(x.hex(),', 1.039533457384326e-05], ['d1,', 1.039533457384326e-05], ['instantiate', 1.039533457384326e-05], ['A1;', 1.039533457384326e-05], ['TstPtUf', 1.039533457384326e-05], ['(Zero', 1.039533457384326e-05], ['One),', 1.039533457384326e-05], ['1/2', 1.039533457384326e-05], ['((Y', 1.039533457384326e-05], ['One);', 1.039533457384326e-05], ['satisfy', 1.039533457384326e-05], ['E0)', 1.039533457384326e-05], ['(FABS', 1.039533457384326e-05], ['(Z2', 1.039533457384326e-05], ['U2))', 1.039533457384326e-05], ['lacks', 1.039533457384326e-05], ['Digit,', 1.039533457384326e-05], ['yields', 1.039533457384326e-05], ['AInvrse', 1.039533457384326e-05], ['correctly.\\n");', 1.039533457384326e-05], ['("Addition/Subtraction', 1.039533457384326e-05], ['((Z', 1.039533457384326e-05], ['NoTrials)', 1.039533457384326e-05], ['failures', 1.039533457384326e-05], ['HInvrse', 1.039533457384326e-05], ['CInvrse', 1.039533457384326e-05], ['(PseudoZero', 1.039533457384326e-05], ['underflow', 1.039533457384326e-05], ['X.str());', 1.039533457384326e-05], ['(N', 1.039533457384326e-05], ['UfThold;', 1.039533457384326e-05], ['V0)', 1.039533457384326e-05], ['(Indx', 1.039533457384326e-05], ['Indx', 1.039533457384326e-05], ['((ErrCnt[Failure]', 1.039533457384326e-05], ['SqEr;', 1.039533457384326e-05], ['TEMPLATE_DECL)', 1.039533457384326e-05], ['DECL_TEMPLATE_RESULT', 1.039533457384326e-05], ['(tmpl);', 1.039533457384326e-05], ['TREE_PURPOSE', 1.039533457384326e-05], ['resolve_variable_concept_check', 1.039533457384326e-05], ['proto', 1.039533457384326e-05], ['concept,', 1.039533457384326e-05], ['C<T>', 1.039533457384326e-05], ['implication_context', 1.039533457384326e-05], ['save_subsumption_result', 1.039533457384326e-05], ['conjunctions', 1.039533457384326e-05], ['tmpl,', 1.039533457384326e-05], ['get_concept_definition', 1.039533457384326e-05], ['normalization', 1.039533457384326e-05], ['requirement.', 1.039533457384326e-05], ['noexcept', 1.039533457384326e-05], ['constr;', 1.039533457384326e-05], ['(PRED_CONSTR,', 1.039533457384326e-05], ['normalize_atom', 1.039533457384326e-05], ['(constraint_p', 1.039533457384326e-05], ['push_down_pack_expansion', 1.039533457384326e-05], ['(ci,', 1.039533457384326e-05], ['(rest)', 1.039533457384326e-05], ['build_concept_check', 1.039533457384326e-05], ['(TREE_VEC_ELT', 1.039533457384326e-05], ['pack,', 1.039533457384326e-05], ['Also,', 1.039533457384326e-05], ['DEDUCT_CONSTR_PATTERN', 1.039533457384326e-05], ['EXCEPT_CONSTR_EXPR', 1.039533457384326e-05], ['(vars', 1.039533457384326e-05], ['local_specialization_stack', 1.039533457384326e-05], ['stack;', 1.039533457384326e-05], ['constraint,', 1.039533457384326e-05], ['(placeholder)', 1.039533457384326e-05], ['CONSTRAINT_INFO);', 1.039533457384326e-05], ['constructible",', 1.039533457384326e-05], ['class",', 1.039533457384326e-05], ['unsatisfied', 1.039533457384326e-05], ['tf_warning_or_error,', 1.039533457384326e-05], ['orig', 1.039533457384326e-05], ['(orig));', 1.039533457384326e-05], ['(orig);', 1.039533457384326e-05], ['dots,', 1.039533457384326e-05], ['this->pkgpath();', 1.039533457384326e-05], ['this->append_mangled_name(p->type(),', 1.039533457384326e-05], ['uintptr,', 7.796500930382445e-06], ['*.', 7.796500930382445e-06], ['__go_channel', 7.796500930382445e-06], ['mtype', 7.796500930382445e-06], ['it;', 7.796500930382445e-06], ['Never', 7.796500930382445e-06], ['PARAMS,', 7.796500930382445e-06], ['go_assert(code', 7.796500930382445e-06], ['param_types,', 7.796500930382445e-06], ['va_arg(ap,', 7.796500930382445e-06], ['"output.h"', 7.796500930382445e-06], ['"json.h"', 7.796500930382445e-06], ['"gimple-pretty-print.h"', 7.796500930382445e-06], ['"dump-context.h"', 7.796500930382445e-06], ['m_root_tuple->append', 7.796500930382445e-06], ['add_pass_list', 7.796500930382445e-06], ['Choose', 7.796500930382445e-06], ['filename);', 7.796500930382445e-06], ['pp_formatted_text', 7.796500930382445e-06], ['closing', 7.796500930382445e-06], ['written.', 7.796500930382445e-06], ['("children",', 7.796500930382445e-06], ['Private', 7.796500930382445e-06], ['("file",', 7.796500930382445e-06], ['("line",', 7.796500930382445e-06], ['count)', 7.796500930382445e-06], ['*pass)', 7.796500930382445e-06], ['host.', 7.796500930382445e-06], ['locations.', 7.796500930382445e-06], ['abstract_origin', 7.796500930382445e-06], ['*json_item', 7.796500930382445e-06], ['Capture', 7.796500930382445e-06], ['(json_item);', 7.796500930382445e-06], ['(loc));', 7.796500930382445e-06], ['(current_function_decl)', 7.796500930382445e-06], ['temp_dump_context', 7.796500930382445e-06], ['tree:', 7.796500930382445e-06], ['(json_str,', 7.796500930382445e-06], ['integers.', 7.796500930382445e-06], ['printing', 7.796500930382445e-06], ['*buf)', 7.796500930382445e-06], ['wi.to_shwi', 7.796500930382445e-06], ['*file)', 7.796500930382445e-06], ['val.get_precision', 7.796500930382445e-06], ['Traverse*', 7.796500930382445e-06], ['this->do_traverse(traverse);', 7.796500930382445e-06], ['this->unused_value_error();', 7.796500930382445e-06], ['msg)', 7.796500930382445e-06], ['rhs->type();', 7.796500930382445e-06], ['(Type::COMPARE_ERRORS', 7.796500930382445e-06], ['Go,', 7.796500930382445e-06], ['lhs_interface_type', 7.796500930382445e-06], ['Expression::make_interface_value(lhs_type,', 7.796500930382445e-06], ['already.', 7.796500930382445e-06], ['tuple.', 7.796500930382445e-06], ['rhs_struct_type', 7.796500930382445e-06], ['interface;', 7.796500930382445e-06], ['escapes.', 7.796500930382445e-06], ['Associate', 7.796500930382445e-06], ['first_field,', 7.796500930382445e-06], ['mtable', 7.796500930382445e-06], ['fails', 7.796500930382445e-06], ['lhs_type_expr,', 7.796500930382445e-06], ['succeeds,', 7.796500930382445e-06], ['INTERFACE_INFO_OBJECT,', 7.796500930382445e-06], ['val->type();', 7.796500930382445e-06], ['mpc_clear(cval);', 7.796500930382445e-06], ['"int".', 7.796500930382445e-06], ['val_type_size', 7.796500930382445e-06], ['one;', 7.796500930382445e-06], ['survive', 7.796500930382445e-06], ['ask', 7.796500930382445e-06], ['escapes)', 7.796500930382445e-06], ['context->function());', 7.796500930382445e-06], ['Expression::make_sink(location);', 7.796500930382445e-06], ['this->statement_->type();', 7.796500930382445e-06], ['base()', 7.796500930382445e-06], ['this->expr_->determine_type(context);', 7.796500930382445e-06], ['var_ref,', 7.796500930382445e-06], ['Set_and_use_temporary_expression*', 7.796500930382445e-06], ['presumably', 7.796500930382445e-06], ['this->bvar_', 7.796500930382445e-06], ['gogo->backend()->compound_expression(decl,', 7.796500930382445e-06], ['"_"', 7.796500930382445e-06], ['(this->closure_', 7.796500930382445e-06], ['Call_expression.', 7.796500930382445e-06], ['%qs;', 7.796500930382445e-06], ['this->function_;', 7.796500930382445e-06], ['closed-over', 7.796500930382445e-06], ['conversion,', 7.796500930382445e-06], ['account', 7.796500930382445e-06], ['*btype', 7.796500930382445e-06], ['is_descriptor', 7.796500930382445e-06], ['"runtime"', 7.796500930382445e-06], ['is_hidden', 7.796500930382445e-06], ['binit);', 7.796500930382445e-06], ['"]";', 7.796500930382445e-06], ['do_traverse(Traverse*)', 7.796500930382445e-06], ['this->named_object_->name();', 7.796500930382445e-06], ['real;', 7.796500930382445e-06], ['no->unknown_value()->real_named_object();', 7.796500930382445e-06], ['(this->is_composite_literal_key_)', 7.796500930382445e-06], ['(!this->no_error_message_)', 7.796500930382445e-06], ['package");', 7.796500930382445e-06], ['do_import(Import_expression*,', 7.796500930382445e-06], ['do_export(Export_function_body*', 7.796500930382445e-06], ['\'"\';', 7.796500930382445e-06], ["'\\\\';", 7.796500930382445e-06], ["'\\t';", 7.796500930382445e-06], ['String_info', 7.796500930382445e-06], ['string_info,', 7.796500930382445e-06], ['do_issue_nil_check()', 7.796500930382445e-06], ['mpz_t*', 7.796500930382445e-06], ['do_export(Export_function_body*)', 7.796500930382445e-06], ['this->type_->is_error_type()))', 7.796500930382445e-06], ['Expression::backend_numeric_constant_expression(context,', 7.796500930382445e-06], ['&nc);', 7.796500930382445e-06], ['!this->type_->is_abstract()', 7.796500930382445e-06], ['efb->type_context())', 7.796500930382445e-06], ['(added_type)', 7.796500930382445e-06], ['num.c_str());', 7.796500930382445e-06], ['pos);', 7.796500930382445e-06], ['imag_str', 7.796500930382445e-06], ["'\\'';", 7.796500930382445e-06], ['Expression::make_integer_z(&zval,', 7.796500930382445e-06], ['ul', 7.796500930382445e-06], ['uv', 7.796500930382445e-06], ['set_mpz_from_int64(&zval,', 7.796500930382445e-06], ['(!nc.set_type(this->type_,', 7.796500930382445e-06], ['complex128', 7.796500930382445e-06], ['recursion', 7.796500930382445e-06], ['iota', 7.796500930382445e-06], ['iota_value)', 7.796500930382445e-06], ['!this->type_->is_error())', 7.796500930382445e-06], ['e->get_backend(context);', 7.796500930382445e-06], ['this->no_)', 7.796500930382445e-06], ['Expression::EXPRESSION_VAR_REFERENCE:', 7.796500930382445e-06], ['Parser_expression', 7.796500930382445e-06], ['these.', 7.796500930382445e-06], ['case:', 7.796500930382445e-06], ['(Expression::traverse(&this->expr_,', 7.796500930382445e-06], ['(type->is_string_type())', 7.796500930382445e-06], ['negative.', 7.796500930382445e-06], ['(adv', 7.796500930382445e-06], ['adv;', 7.796500930382445e-06], ['!this->expr_->is_variable())', 7.796500930382445e-06], ['type->is_boolean_type()', 7.796500930382445e-06], ['conversion->get_backend(context);', 7.796500930382445e-06], ['Expression::make_string(s,', 7.796500930382445e-06], ['limited', 7.796500930382445e-06], ['(t->struct_type()', 7.796500930382445e-06], ['(t->channel_type()', 7.796500930382445e-06], ['this->escapes_', 7.796500930382445e-06], ['simplifies', 7.796500930382445e-06], ['x.', 7.796500930382445e-06], ['(e->classification()', 7.796500930382445e-06], ['EXPRESSION_UNARY)', 7.796500930382445e-06], ['expr->type()->points_to()', 7.796500930382445e-06], ['OPERATOR_PLUS', 7.796500930382445e-06], ['(issued_error)', 7.796500930382445e-06], ['this->expr_->type()->is_error_type())', 7.796500930382445e-06], ['go_assert(this->expr_->type()->points_to()', 7.796500930382445e-06], ['Indirecting', 7.796500930382445e-06], ['no->is_variable()', 7.796500930382445e-06], ['uval;', 7.796500930382445e-06], ['uval,', 7.796500930382445e-06], ['mpz_neg(val,', 7.796500930382445e-06], ['uval);', 7.796500930382445e-06], ['HOST_WIDE_INTs', 7.796500930382445e-06], ['Type::make_pointer_type(this->expr_->type());', 7.796500930382445e-06], ['(points_to', 7.796500930382445e-06], ['points_to;', 7.796500930382445e-06], ['bexpr;', 7.796500930382445e-06], ['non-constant', 7.796500930382445e-06], ['copy_to_heap', 7.796500930382445e-06], ['bexpr);', 7.796500930382445e-06], ['root.', 7.796500930382445e-06], ['conditional.', 7.796500930382445e-06], ['gogo->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE,', 7.796500930382445e-06], ['known_valid,', 7.796500930382445e-06], ['ast_dump_context->dump_operator(this->op_);', 7.796500930382445e-06], ['result_type)', 7.796500930382445e-06], ['OPERATOR_RSHIFT)', 7.796500930382445e-06], ['(right_type->integer_type()', 7.796500930382445e-06], ['&type))', 7.796500930382445e-06], ['&cmp);', 7.796500930382445e-06], ['coerced', 7.796500930382445e-06], ['combining', 7.796500930382445e-06], ['nc);', 7.796500930382445e-06], ['NC,', 7.796500930382445e-06], ['(mpz_sizeinbase(val,', 7.796500930382445e-06], ['addition', 7.796500930382445e-06], ['subtraction', 7.796500930382445e-06], ['OPERATOR_NOTEQ', 7.796500930382445e-06], ['OPERATOR_LT', 7.796500930382445e-06], ['OPERATOR_LE', 7.796500930382445e-06], ['OPERATOR_GT', 7.796500930382445e-06], ['&left_nc,', 7.796500930382445e-06], ['&right_nc,', 7.796500930382445e-06], ['String', 7.796500930382445e-06], ['this->right_->type(),', 7.796500930382445e-06], ['ift', 7.796500930382445e-06], ['Expression::make_set_and_use_temporary(temp,', 7.796500930382445e-06], ['TYPE_INFO_SIZE);', 7.796500930382445e-06], ['temp;', 7.796500930382445e-06], ['is_idiv_op', 7.796500930382445e-06], ['OPERATOR_DIV', 7.796500930382445e-06], ['OPERATOR_OROR', 7.796500930382445e-06], ['(is_shift_op)', 7.796500930382445e-06], ['tright;', 7.796500930382445e-06], ['(subcontext.type', 7.796500930382445e-06], ['non-integer', 7.796500930382445e-06], ['otype,', 7.796500930382445e-06], ['nil"));', 7.796500930382445e-06], ['expression"));', 7.796500930382445e-06], ['(mpz_sgn(val)', 7.796500930382445e-06], ['gogo->backend()->integer_constant_expression(right_btype,', 7.796500930382445e-06], ['zero_expr', 7.796500930382445e-06], ['computing', 7.796500930382445e-06], ['OPERATOR_ANDAND;', 7.796500930382445e-06], ['OPERATOR_OR;', 7.796500930382445e-06], ['OPERATOR_DIV;', 7.796500930382445e-06], ['OPERATOR_MOD;', 7.796500930382445e-06], ['OPERATOR_LSHIFT;', 7.796500930382445e-06], ['OPERATOR_BITCLEAR;', 7.796500930382445e-06], ['Expression::make_binary(op,', 7.796500930382445e-06], ['right_type->interface_type()', 7.796500930382445e-06], ['std::swap(left_type,', 7.796500930382445e-06], ['right_type);', 7.796500930382445e-06], ['std::swap(left,', 7.796500930382445e-06], ['pointer_arg', 7.796500930382445e-06], ['compare_function', 7.796500930382445e-06], ['this->exprs_->front()->type();', 7.796500930382445e-06], ['++pe;', 7.796500930382445e-06], ['5:', 7.796500930382445e-06], ['sce', 7.796500930382445e-06], ['this->expr_->determine_type_no_context();', 7.796500930382445e-06], ['(this->expr_type_', 7.796500930382445e-06], ['Named_object::make_erroneous_name(gogo->thunk_name());', 7.796500930382445e-06], ['Type::make_pointer_type(st);', 7.796500930382445e-06], ['thunk_name', 7.796500930382445e-06], ['gogo->thunk_name();', 7.796500930382445e-06], ['gogo->start_function(thunk_name,', 7.796500930382445e-06], ['new_fntype,', 7.796500930382445e-06], ['thunk_name,', 7.796500930382445e-06], ['orig_fntype->parameters();', 7.796500930382445e-06], ['new_params->begin();', 7.796500930382445e-06], ['new_params->end();', 7.796500930382445e-06], ['p_no', 7.796500930382445e-06], ['go_assert(p_no', 7.796500930382445e-06], ['p_no->is_variable()', 7.796500930382445e-06], ['p_no->var_value()->is_parameter());', 7.796500930382445e-06], ['args->push_back(Expression::make_var_reference(p_no,', 7.796500930382445e-06], ['gogo->lower_block(new_no,', 7.796500930382445e-06], ['new_no;', 7.796500930382445e-06], ['ref);', 7.796500930382445e-06], ['phase,', 7.796500930382445e-06], ['(fntype->receiver()->type()->points_to()', 7.796500930382445e-06], ['fields->push_back(Struct_field(Typed_identifier("fn",', 7.796500930382445e-06], ['runtime",', 7.796500930382445e-06], ['&ref);', 7.796500930382445e-06], ['Fix', 7.796500930382445e-06], ['new_args', 7.796500930382445e-06], ['right.', 7.796500930382445e-06], ['Expression::make_type_descriptor(mt,', 7.796500930382445e-06], ['Expression::make_temporary_reference(key_temp,', 7.796500930382445e-06], ['e3,', 7.796500930382445e-06], ['(!(*pa)->is_variable()', 7.796500930382445e-06], ['*parg;', 7.796500930382445e-06], ['(type->channel_type()', 7.796500930382445e-06], ['++parg;', 7.796500930382445e-06], ['args->end())', 7.796500930382445e-06], ['nclen;', 7.796500930382445e-06], ['vlen;', 7.796500930382445e-06], ['(len_arg->numeric_constant_value(&nclen)', 7.796500930382445e-06], ['nclen.to_unsigned_long(&vlen)', 7.796500930382445e-06], ['type_arg', 7.796500930382445e-06], ['type_loc);', 7.796500930382445e-06], ['mem,', 7.796500930382445e-06], ['enclosing)', 7.796500930382445e-06], ['append(s1,', 7.796500930382445e-06], ['a3,', 7.796500930382445e-06], ['s1tmp', 7.796500930382445e-06], ['l1tmp', 7.796500930382445e-06], ['s2tmp', 7.796500930382445e-06], ['ntmp', 7.796500930382445e-06], ['panic.', 7.796500930382445e-06], ['Expression::make_temporary_reference(ntmp,', 7.796500930382445e-06], ['a3', 7.796500930382445e-06], ['inserter->insert(assign);', 7.796500930382445e-06], ['argument:', 7.796500930382445e-06], ['*small', 7.796500930382445e-06], ['Numeric_constant::NC_UL_NOTINT:', 7.796500930382445e-06], ['Numeric_constant::NC_UL_NEGATIVE:', 7.796500930382445e-06], ['compile-time', 7.796500930382445e-06], ['mpz_sizeinbase(val,', 7.796500930382445e-06], ['ebits', 7.796500930382445e-06], ['arg_type->is_abstract())', 7.796500930382445e-06], ['arg_type->points_to()->array_type()', 7.796500930382445e-06], ['!arg_type->points_to()->is_slice_type())', 7.796500930382445e-06], ['BUILTIN_LEN', 7.796500930382445e-06], ['sval;', 7.796500930382445e-06], ['inc;', 7.796500930382445e-06], ['discarding', 7.796500930382445e-06], ['Type::make_empty_interface_type(Linemap::predeclared_location());', 7.796500930382445e-06], ['*ret', 7.796500930382445e-06], ['t->make_non_abstract_type();', 7.796500930382445e-06], ['args->back()->type();', 7.796500930382445e-06], ['trailing_arg_types', 7.796500930382445e-06], ['(*pa)->determine_type(&subcontext);', 7.796500930382445e-06], ['arg_type->channel_type()', 7.796500930382445e-06], ['type->interface_type()', 7.796500930382445e-06], ['type->channel_type()', 7.796500930382445e-06], ['type->map_type()', 7.796500930382445e-06], ['receive-only', 7.796500930382445e-06], ['go_error_at(args->front()->location(),', 7.796500930382445e-06], ['go_error_at(args->back()->location(),', 7.796500930382445e-06], ['compatibility', 7.796500930382445e-06], ['(*pa)->type(),', 7.796500930382445e-06], ['types"));', 7.796500930382445e-06], ['Expression::make_unsafe_cast(uintptr_type,', 7.796500930382445e-06], ['*empty', 7.796500930382445e-06], ['nc.to_unsigned_long(&val)', 7.796500930382445e-06], ['at->element_type();', 7.796500930382445e-06], ['sz', 7.796500930382445e-06], ['bimag,', 7.796500930382445e-06], ['couple', 7.796500930382445e-06], ['below).', 7.796500930382445e-06], ['package-scope', 7.796500930382445e-06], ['tail', 7.796500930382445e-06], ['forces', 7.796500930382445e-06], ['reported.', 7.796500930382445e-06], ['(rc', 7.796500930382445e-06], ['individual', 7.796500930382445e-06], ['rc;', 7.796500930382445e-06], ['buf[20];', 7.796500930382445e-06], ['mess', 7.796500930382445e-06], ['traversing', 7.796500930382445e-06], ['this->fn_->func_expression();', 7.796500930382445e-06], ['arguments;', 7.796500930382445e-06], ['push_empty_arg', 7.796500930382445e-06], ['__builtin_return_address', 7.796500930382445e-06], ['uintptr.', 7.796500930382445e-06], ['Expression::make_cast(uintptr_type,', 7.796500930382445e-06], ['go_assert(pp', 7.796500930382445e-06], ['pp->type(),', 7.796500930382445e-06], ['(this->call_temp_', 7.796500930382445e-06], ['expression;', 7.796500930382445e-06], ['Type::make_pointer_type(rtype);', 7.796500930382445e-06], ['determined.', 7.796500930382445e-06], ['(!issued_error)', 7.796500930382445e-06], ['receivers', 7.796500930382445e-06], ['G', 7.796500930382445e-06], ['matched', 7.796500930382445e-06], ['executed', 7.796500930382445e-06], ['Expression::make_temporary_reference(this->call_temp_,', 7.796500930382445e-06], ['++pe,', 7.796500930382445e-06], ['*pe,', 7.796500930382445e-06], ['nargs);', 7.796500930382445e-06], ['bfn,', 7.796500930382445e-06], ['bclosure,', 7.796500930382445e-06], ['occurs', 7.796500930382445e-06], ['(ce->issue_error())', 7.796500930382445e-06], ['values"));', 7.796500930382445e-06], ['this->index_;', 7.796500930382445e-06], ['Expression::make_field_reference(ref,', 7.796500930382445e-06], ['this->start_;', 7.796500930382445e-06], ['this->end_;', 7.796500930382445e-06], ['incorrect', 7.796500930382445e-06], ['"array,', 7.796500930382445e-06], ['this->array_->type()->array_type();', 7.796500930382445e-06], ['!this->end_->is_nil_expression()', 7.796500930382445e-06], ['(array_type', 7.796500930382445e-06], ['(array_type->length()', 7.796500930382445e-06], ['(lval_valid', 7.796500930382445e-06], ['eval;', 7.796500930382445e-06], ['(ival_valid', 7.796500930382445e-06], ['go_error_at(this->cap_->location(),', 7.796500930382445e-06], ['addressable', 7.796500930382445e-06], ['value"));', 7.796500930382445e-06], ['evaluated.', 7.796500930382445e-06], ['this->array_,', 7.796500930382445e-06], ['END', 7.796500930382445e-06], ['sval.length())', 7.796500930382445e-06], ['ubtype', 7.796500930382445e-06], ['Type::lookup_integer_type("uint8")->get_backend(gogo);', 7.796500930382445e-06], ['dereferenced', 7.796500930382445e-06], ['mt->key_type(),', 7.796500930382445e-06], ['mt->key_type();', 7.796500930382445e-06], ['map_index', 7.796500930382445e-06], ['Map_index_expression*', 7.796500930382445e-06], ['tag.', 7.796500930382445e-06], ['Type::make_array_type(byte_type,', 7.796500930382445e-06], ['array_type->set_is_array_incomparable();', 7.796500930382445e-06], ['wind', 7.796500930382445e-06], ['(expr->type()->points_to()', 7.796500930382445e-06], ['twice', 7.796500930382445e-06], ['(this->expr_->is_error_expression()', 7.796500930382445e-06], ['interface_type', 7.796500930382445e-06], ['(!type->is_error_type())', 7.796500930382445e-06], ['gogo->backend()->expression_statement(bfunction,', 7.796500930382445e-06], ['nt->method_function(name,', 7.796500930382445e-06], ['&is_ambiguous);', 7.796500930382445e-06], ['imethod', 7.796500930382445e-06], ['"*"', 7.796500930382445e-06], ['disabled', 7.796500930382445e-06], ['(parameters->size()', 7.796500930382445e-06], ['alloc', 7.796500930382445e-06], ['(this->allocate_on_stack_)', 7.796500930382445e-06], ['&size);', 7.796500930382445e-06], ['gogo->backend()->temporary_variable(fndecl,', 7.796500930382445e-06], ['determination.', 7.796500930382445e-06], ['(pv', 7.796500930382445e-06], ['this->vals()->end())', 7.796500930382445e-06], ['this->type_->struct_type();', 7.796500930382445e-06], ['Struct_construction_expression*', 7.796500930382445e-06], ['this->vals()->copy()),', 7.796500930382445e-06], ['init.push_back(gogo->backend()->zero_expression(fbtype));', 7.796500930382445e-06], ['pf->type(),', 7.796500930382445e-06], ['(*pv)->export_expression(efb);', 7.796500930382445e-06], ['Struct_construction_expression(type,', 7.796500930382445e-06], ['indexes;', 7.796500930382445e-06], ['this->indexes_->begin();', 7.796500930382445e-06], ['++pi,', 7.796500930382445e-06], ['this->indexes(),', 7.796500930382445e-06], ['lenval', 7.796500930382445e-06], ['(this->array_val_', 7.796500930382445e-06], ['(this->slice_storage_', 7.796500930382445e-06], ['key_type,', 7.796500930382445e-06], ['keys,', 7.796500930382445e-06], ['this->vals_->end())', 7.796500930382445e-06], ['this->vals_->end());', 7.796500930382445e-06], ['(pt', 7.796500930382445e-06], ['("expected', 7.796500930382445e-06], ['literal"));', 7.796500930382445e-06], ['type->named_type()', 7.796500930382445e-06], ['external_expr', 7.796500930382445e-06], ['initializers");', 7.796500930382445e-06], ['bad_key', 7.796500930382445e-06], ['no->name();', 7.796500930382445e-06], ['name[0]', 7.796500930382445e-06], ['index_expr', 7.796500930382445e-06], ['key;', 7.796500930382445e-06], ['keys.', 7.796500930382445e-06], ['has_keys,', 7.796500930382445e-06], ['all_are_names,', 7.796500930382445e-06], ['(this->type_->interface_type()', 7.796500930382445e-06], ['this->type_->copy_expressions(),', 7.796500930382445e-06], ['gogo->backend()->var_expression(space_temp,', 7.796500930382445e-06], ['assn', 7.796500930382445e-06], ['this->channel_->type();', 7.796500930382445e-06], ['send-only', 7.796500930382445e-06], ['ptrdata;', 7.796500930382445e-06], ['&ptrdata))', 7.796500930382445e-06], ['ptrdata);', 7.796500930382445e-06], ['pointer_uint8_type', 7.796500930382445e-06], ['Type_info', 7.796500930382445e-06], ['Slice_info', 7.796500930382445e-06], ['slice_info,', 7.796500930382445e-06], ['Interface_info', 7.796500930382445e-06], ['iface_info,', 7.796500930382445e-06], ['pdt', 7.796500930382445e-06], ['ft->parameters();', 7.796500930382445e-06], ['itype,', 7.796500930382445e-06], ['interface_methods->begin();', 7.796500930382445e-06], ['interface_methods->end();', 7.796500930382445e-06], ['is_public', 7.796500930382445e-06], ['Backend::Btyped_identifier', 7.796500930382445e-06], ['then,', 7.796500930382445e-06], ['ast_dump_context->dump_expression(this->cond_);', 7.796500930382445e-06], ['else_expr,', 7.796500930382445e-06], ['">";', 7.796500930382445e-06], ["'*')", 7.796500930382445e-06], ['EXPORT_FORMAT_V3', 7.796500930382445e-06], ['(!ifb->saw_error())', 7.796500930382445e-06], ['ifb->set_saw_error();', 7.796500930382445e-06], ['failed",', 7.796500930382445e-06], ['Destructor.', 7.796500930382445e-06], ['(a.classification_)', 7.796500930382445e-06], ['mpfr_init_set(this->u_.float_val,', 7.796500930382445e-06], ['mpc_init2(this->u_.complex_val,', 7.796500930382445e-06], ['!Type::are_identical(this->type_,', 7.796500930382445e-06], ['bits))', 7.796500930382445e-06], ['mpz_init_set(*val,', 7.796500930382445e-06], ['mpfr_init_set(*val,', 7.796500930382445e-06], ['Numeric_constant::To_unsigned_long', 7.796500930382445e-06], ['long*', 7.796500930382445e-06], ['integer");', 7.796500930382445e-06], ['issue_error)', 7.796500930382445e-06], ['max_exp;', 7.796500930382445e-06], ['1024;', 7.796500930382445e-06], ['ImportVisitor', 7.796500930382445e-06], ['(m->isym)', 7.796500930382445e-06], ['(EnumDeclaration', 7.796500930382445e-06], ['POINTER_TYPE.', 7.796500930382445e-06], ['(d->type));', 7.796500930382445e-06], ['(d));', 7.796500930382445e-06], ['(d->loc);', 7.796500930382445e-06], ['a[i][k]*b[k][j];', 7.796500930382445e-06], ['<loop_j,', 7.796500930382445e-06], ['From', 7.796500930382445e-06], ['Maximum', 7.796500930382445e-06], ['(PARAM_VALUE', 7.796500930382445e-06], ['inner/outer', 7.796500930382445e-06], ['stmts.', 7.796500930382445e-06], ['(3)', 7.796500930382445e-06], ['step.', 7.796500930382445e-06], ['loaded', 7.796500930382445e-06], ['loading', 7.796500930382445e-06], ['dump_reduction', 7.796500930382445e-06], ['(reduction_p', 7.796500930382445e-06], ['{");', 7.796500930382445e-06], ['(void);', 7.796500930382445e-06], ['Single', 7.796500930382445e-06], ['included.', 7.796500930382445e-06], ['(iv);', 7.796500930382445e-06], ['single_use_in_loop', 7.796500930382445e-06], ['*res', 7.796500930382445e-06], ['stmt;', 7.796500930382445e-06], ['unsupported', 7.796500930382445e-06], ['interchange,', 7.796500930382445e-06], ['(stmt', 7.796500930382445e-06], ['ILOOP', 7.796500930382445e-06], ['allowed_reduction_num', 7.796500930382445e-06], ['(iloop', 7.796500930382445e-06], ['gphi_iterator', 7.796500930382445e-06], ['(!iloop', 7.796500930382445e-06], ['accessing', 7.796500930382445e-06], ['???', 7.796500930382445e-06], ['(lhs', 7.796500930382445e-06], ['header,', 7.796500930382445e-06], ['gsi_start_phis', 7.796500930382445e-06], ['optimizers', 7.796500930382445e-06], ['(like', 7.796500930382445e-06], ['code:', 7.796500930382445e-06], ['a[i]', 7.796500930382445e-06], ['sum;', 7.796500930382445e-06], ['(!bb', 7.796500930382445e-06], ['succeeds.', 7.796500930382445e-06], ['as_a', 7.796500930382445e-06], ['next_def', 7.796500930382445e-06], ['next>', 7.796500930382445e-06], ['general,', 7.796500930382445e-06], ['fake', 7.796500930382445e-06], ['(gassign', 7.796500930382445e-06], ['<gassign', 7.796500930382445e-06], ['(var))', 7.796500930382445e-06], ['use_phi', 7.796500930382445e-06], ['(use_phi', 7.796500930382445e-06], ['phi)', 7.796500930382445e-06], ['lcssa_phi', 7.796500930382445e-06], ['(chrec));', 7.796500930382445e-06], ['tree_contains_chrecs', 7.796500930382445e-06], ['(CHREC_RIGHT', 7.796500930382445e-06], ['analyzed.', 7.796500930382445e-06], ['chrec', 7.796500930382445e-06], ['(e,', 7.796500930382445e-06], ['(iloop,', 7.796500930382445e-06], ['analyzed', 7.796500930382445e-06], ['(gsi_stmt', 7.796500930382445e-06], ['User', 7.796500930382445e-06], ['MEM_REF[idx];', 7.796500930382445e-06], ['into:', 7.796500930382445e-06], ['elimination', 7.796500930382445e-06], ['gimple_set_vuse', 7.796500930382445e-06], ['MEM_REF', 7.796500930382445e-06], ['stmts,', 7.796500930382445e-06], ['(gimple_vdef', 7.796500930382445e-06], ['(re->consumer,', 7.796500930382445e-06], ['free_data_refs', 7.796500930382445e-06], ['tree_loop_interchange', 7.796500930382445e-06], ['loop_nest)', 7.796500930382445e-06], ['vec<ddr_p>);', 7.796500930382445e-06], ['unsigned,', 7.796500930382445e-06], ['map_inductions_to_loop', 7.796500930382445e-06], ['preserved', 7.796500930382445e-06], ['indices', 7.796500930382445e-06], ['i_idx,', 7.796500930382445e-06], ['ddrs)', 7.796500930382445e-06], ['*dr;', 7.796500930382445e-06], ['(ddr);', 7.796500930382445e-06], ['(ddr,', 7.796500930382445e-06], ['conservative', 7.796500930382445e-06], ['(loop_nest);', 7.796500930382445e-06], ['(loop_preheader_edge', 7.796500930382445e-06], ['number_of_latch_executions', 7.796500930382445e-06], ['(loop_outer', 7.796500930382445e-06], ['vice', 7.796500930382445e-06], ['versa.', 7.796500930382445e-06], ['&var_after);', 7.796500930382445e-06], ['(var_after));', 7.796500930382445e-06], ['expensive', 7.796500930382445e-06], ['j--)', 7.796500930382445e-06], ['DR_REF', 7.796500930382445e-06], ['2))', 7.796500930382445e-06], ['(expected);', 7.796500930382445e-06], ['respect', 7.796500930382445e-06], ['num_loops)', 7.796500930382445e-06], ['(num_loops', 7.796500930382445e-06], ['(loop_nest', 7.796500930382445e-06], ['flow_loop_nested_p', 7.796500930382445e-06], ['Prune', 7.796500930382445e-06], ['removing', 7.796500930382445e-06], ['true)', 7.796500930382445e-06], ['num_old_inv_drs', 7.796500930382445e-06], ['num_new_inv_drs', 7.796500930382445e-06], ['(oloop_strides,', 7.796500930382445e-06], ['access_size', 7.796500930382445e-06], ['"Not', 7.796500930382445e-06], ['o_stmt_cost', 7.796500930382445e-06], ['behavior.', 7.796500930382445e-06], ['(wi::gtu_p', 7.796500930382445e-06], ['--i)', 7.796500930382445e-06], ['(i_idx,', 7.796500930382445e-06], ['transformation', 7.796500930382445e-06], ['(NULL)', 7.796500930382445e-06], ['ctxt)', 7.796500930382445e-06], ['methods:', 7.796500930382445e-06], ['moment.', 7.796500930382445e-06], ['exit->src', 7.796500930382445e-06], ['bbs[i];', 7.796500930382445e-06], ['(gimple_stmt_iterator', 7.796500930382445e-06], ['(bbs);', 7.796500930382445e-06], ['loop2', 7.796500930382445e-06], ['innermost;', 7.796500930382445e-06], ['DR_IS_WRITE', 7.796500930382445e-06], ['b_outer_p', 7.796500930382445e-06], ['(a_outer_p', 7.796500930382445e-06], ['(*bb_refs);', 7.796500930382445e-06], ['others', 7.796500930382445e-06], ['handle.', 7.796500930382445e-06], ['*datarefs);', 7.796500930382445e-06], ['(number_of_loops', 7.796500930382445e-06], ['FOR_EACH_LOOP', 7.796500930382445e-06], ['(ctxt);', 7.796500930382445e-06], ['op0,', 7.796500930382445e-06], ['(op0);', 7.796500930382445e-06], ['lvalue.', 7.796500930382445e-06], ['(op1))', 7.796500930382445e-06], ['PARM_DECL', 7.796500930382445e-06], ['(expr)));', 7.796500930382445e-06], ['validating', 7.796500930382445e-06], ['d_bool_type)', 7.796500930382445e-06], ['ERROR_MARK:', 7.796500930382445e-06], ['real_compare', 7.796500930382445e-06], ['side-effects.', 7.796500930382445e-06], ['(COMPOUND_EXPR,', 7.796500930382445e-06], ['COND_EXPR.', 7.796500930382445e-06], ['CONVERT_EXPR:', 7.796500930382445e-06], ['NOP_EXPR:', 7.796500930382445e-06], ['COMPLEX_TYPE)', 7.796500930382445e-06], ['(t)));', 7.796500930382445e-06], ['TYPE_DOMAIN', 7.796500930382445e-06], ['(CONVERT_EXPR,', 7.796500930382445e-06], ['REAL_TYPE', 7.796500930382445e-06], ['RECORD_TYPE:', 7.796500930382445e-06], ['EXP,', 7.796500930382445e-06], ['error_operand_p', 7.796500930382445e-06], ['*etype,', 7.796500930382445e-06], ['*totype)', 7.796500930382445e-06], ['*ebtype', 7.796500930382445e-06], ['*tbtype', 7.796500930382445e-06], ['Tdelegate:', 7.796500930382445e-06], ['else,', 7.796500930382445e-06], ['&offset)', 7.796500930382445e-06], ['Casting', 7.796500930382445e-06], ['Forward', 7.796500930382445e-06], ['no-op.', 7.796500930382445e-06], ['information,', 7.796500930382445e-06], ['Tsarray:', 7.796500930382445e-06], ['ebtype->nextOf', 7.796500930382445e-06], ['Taarray:', 7.796500930382445e-06], ['build_typeof_null_value', 7.796500930382445e-06], ['TOTYPE', 7.796500930382445e-06], ['TREE', 7.796500930382445e-06], ['arbitrarily', 7.796500930382445e-06], ['(TypeSArray', 7.796500930382445e-06], ['(Type::tsize_t),', 7.796500930382445e-06], ['ARG.', 7.796500930382445e-06], ['Lazy', 7.796500930382445e-06], ['delegate.', 7.796500930382445e-06], ['(!POINTER_TYPE_P', 7.796500930382445e-06], ['(arg),', 7.796500930382445e-06], ['manifest', 7.796500930382445e-06], ['(METHOD_CALL_EXPR', 7.796500930382445e-06], ['extract_from_method_call', 7.796500930382445e-06], ['func);', 7.796500930382445e-06], ['exp->type->toBasetype', 7.796500930382445e-06], ['Invalid', 7.796500930382445e-06], ['Temporary', 7.796500930382445e-06], ['VARS.', 7.796500930382445e-06], ['2016', 7.796500930382445e-06], ['"go-linemap.h"', 7.796500930382445e-06], ['alphanumeric', 7.796500930382445e-06], ['(c)', 7.796500930382445e-06], ["'A':", 7.796500930382445e-06], ["'U':", 7.796500930382445e-06], ["'X':", 7.796500930382445e-06], ["'b':", 7.796500930382445e-06], ["'d':", 7.796500930382445e-06], ["'g':", 7.796500930382445e-06], ["'l':", 7.796500930382445e-06], ["'m':", 7.796500930382445e-06], ["'n':", 7.796500930382445e-06], ["'p':", 7.796500930382445e-06], ["'q':", 7.796500930382445e-06], ["'r':", 7.796500930382445e-06], ["'t':", 7.796500930382445e-06], ["'u':", 7.796500930382445e-06], ["'x':", 7.796500930382445e-06], ["'1':", 7.796500930382445e-06], ["'2':", 7.796500930382445e-06], ["'3':", 7.796500930382445e-06], ["'4':", 7.796500930382445e-06], ["'5':", 7.796500930382445e-06], ["'6':", 7.796500930382445e-06], ["'7':", 7.796500930382445e-06], ["'.':", 7.796500930382445e-06], ['translated', 7.796500930382445e-06], ["'U',", 7.796500930382445e-06], ['(p[0]', 7.796500930382445e-06], ['produced', 7.796500930382445e-06], ['moment', 7.796500930382445e-06], ['"_",', 7.796500930382445e-06], ['".".', 7.796500930382445e-06], ['(strncmp(p,', 7.796500930382445e-06], ['p+3;', 7.796500930382445e-06], ['(strlen(digits)', 7.796500930382445e-06], ['hex_digits_to_unicode_codepoint(digits,', 7.796500930382445e-06], ['Lex::append_char(rune,', 7.796500930382445e-06], ['&ret,', 7.796500930382445e-06], ['tags.', 7.796500930382445e-06], ['libcall_type', 7.796500930382445e-06], ['dchar', 7.796500930382445e-06], ['byte[]', 7.796500930382445e-06], ['Object', 7.796500930382445e-06], ['need.', 7.796500930382445e-06], ['Our', 7.796500930382445e-06], ['get_libcall_type', 7.796500930382445e-06], ['nparams,', 7.796500930382445e-06], ['nparams', 7.796500930382445e-06], ['DECL_VISIBILITY_SPECIFIED', 7.796500930382445e-06], ['libcall,', 7.796500930382445e-06], ['scalarized_sat_arithmetics', 7.796500930382445e-06], ['&brig_inst)', 7.796500930382445e-06], ['HSAIL_TYPE,', 7.796500930382445e-06], ['operand1);', 7.796500930382445e-06], ['masks.', 7.796500930382445e-06], ['*input_mask_vals', 7.796500930382445e-06], ['mask_element);', 7.796500930382445e-06], ['mask_vec', 7.796500930382445e-06], ['input_mask_vals);', 7.796500930382445e-06], ['perm', 7.796500930382445e-06], ['(tree_stl_vec', 7.796500930382445e-06], ['bitwise', 7.796500930382445e-06], ['ecount', 7.796500930382445e-06], ['operands[2];', 7.796500930382445e-06], ['semantics.', 7.796500930382445e-06], ['(BIT_NOT_EXPR,', 7.796500930382445e-06], ['arithmetics.', 7.796500930382445e-06], ['vectors.', 7.796500930382445e-06], ['BRIG_TYPE', 7.796500930382445e-06], ['OPERANDS', 7.796500930382445e-06], ['brig_function::get_tree_code_for_hsa_opcode', 7.796500930382445e-06], ['behavior', 7.796500930382445e-06], ['undefined.', 7.796500930382445e-06], ['broadcast', 7.796500930382445e-06], ['output_count', 7.796500930382445e-06], ["let's", 7.796500930382445e-06], ['BRIG_OPCODE_SHUFFLE)', 7.796500930382445e-06], ['selects', 7.796500930382445e-06], ['division,', 7.796500930382445e-06], ['(arith_type),', 7.796500930382445e-06], ['operands));', 7.796500930382445e-06], ['WAVESIZE', 7.796500930382445e-06], ['operands[0];', 7.796500930382445e-06], ['(opcode,', 7.796500930382445e-06], ['Handles', 7.796500930382445e-06], ['wanted', 7.796500930382445e-06], ['(operands.size', 7.796500930382445e-06], ['BRIG_OPCODE_LASTBIT', 7.796500930382445e-06], ['is_vec_instr', 7.796500930382445e-06], ['element_size_bits', 7.796500930382445e-06], ['(brig_element_type);', 7.796500930382445e-06], ['get_tree_expr_type_for_hsa_type', 7.796500930382445e-06], ['BRIG_KIND_INST_MOD)', 7.796500930382445e-06], ['MULT_HIGHPART_EXPR', 7.796500930382445e-06], ['MULHI', 7.796500930382445e-06], ['phase', 7.796500930382445e-06], ['m_parent.m_cf->unpack', 7.796500930382445e-06], ['(BRIG_TYPE_U16);', 7.796500930382445e-06], ['(BRIG_TYPE_U32);', 7.796500930382445e-06], ['(promoted_type,', 7.796500930382445e-06], ['(RSHIFT_EXPR,', 7.796500930382445e-06], ['m_parent.m_cf->pack', 7.796500930382445e-06], ['build_h2f_conversion', 7.796500930382445e-06], ['(esize,', 7.796500930382445e-06], ['cst);', 7.796500930382445e-06], ['(element_type);', 7.796500930382445e-06], ['Archive', 7.796500930382445e-06], ["'<',", 7.796500930382445e-06], ["'>',", 7.796500930382445e-06], ['Import::archive_magic_len)', 7.796500930382445e-06], ['*SIZE,', 7.796500930382445e-06], ['Interpret', 7.796500930382445e-06], ['*PNAME', 7.796500930382445e-06], ['memfd,', 7.796500930382445e-06], ['memoff,', 7.796500930382445e-06], ['Table', 7.796500930382445e-06], ['sizeof(armagt))', 7.796500930382445e-06], ['(memcmp(buf,', 7.796500930382445e-06], ['(this->is_big_archive_)', 7.796500930382445e-06], ['this->first_member_offset_', 7.796500930382445e-06], ['"/")', 7.796500930382445e-06], ['LONG_MAX', 7.796500930382445e-06], ['next_off)', 7.796500930382445e-06], ['unexpected', 7.796500930382445e-06], ['%ld"', 7.796500930382445e-06], ['static_cast<long>(off),', 7.796500930382445e-06], ['*next_off', 7.796500930382445e-06], ['*nested_off', 7.796500930382445e-06], ['local_next_off', 7.796500930382445e-06], ['(hdr->ar_name[1]', 7.796500930382445e-06], ['*memfd', 7.796500930382445e-06], ['*memoff', 7.796500930382445e-06], ['*memname', 7.796500930382445e-06], ["'('", 7.796500930382445e-06], ['nfile;', 7.796500930382445e-06], ['Archive_iterator&', 7.796500930382445e-06], ['this->header_.off', 7.796500930382445e-06], ['filesize;', 7.796500930382445e-06], ['this->off_;', 7.796500930382445e-06], ['together.', 7.796500930382445e-06], ['pend;', 7.796500930382445e-06], ['Rewrite', 7.796500930382445e-06], ['comments', 7.796500930382445e-06], ['ss;', 7.796500930382445e-06], ['fmt;', 7.796500930382445e-06], ['expand_message(const', 7.796500930382445e-06], ['deciding', 7.796500930382445e-06], ['#pragma', 7.796500930382445e-06], ['(s)', 7.796500930382445e-06], ['deleted.', 7.796500930382445e-06], ['(2,', 7.796500930382445e-06], ['g);', 7.796500930382445e-06], ['p.get', 7.796500930382445e-06], ['expand_d_format', 7.796500930382445e-06], ['inbacktick', 7.796500930382445e-06], ["'`')", 7.796500930382445e-06], ['buf.writeByte', 7.796500930382445e-06], ['(*p)', 7.796500930382445e-06], ['Lagain;', 7.796500930382445e-06], ['Reports', 7.796500930382445e-06], ['front-end,', 7.796500930382445e-06], ['kind,', 7.796500930382445e-06], ['diagnostic_info', 7.796500930382445e-06], ['xformat,', 7.796500930382445e-06], ['(xformat);', 7.796500930382445e-06], ['verbatim', 7.796500930382445e-06], ['text;', 7.796500930382445e-06], ['verror', 7.796500930382445e-06], ['supplementary', 7.796500930382445e-06], ['increase', 7.796500930382445e-06], ['verrorSupplemental', 7.796500930382445e-06], ['verbose', 7.796500930382445e-06], ['vmessage', 7.796500930382445e-06], ['fatal', 7.796500930382445e-06], ['"tree-inline.h"', 7.796500930382445e-06], ['present', 7.796500930382445e-06], ['Versioning', 7.796500930382445e-06], ['(auto', 7.796500930382445e-06], ['several', 7.796500930382445e-06], ['epilogue', 7.796500930382445e-06], ['pattern,', 7.796500930382445e-06], ['::', 7.796500930382445e-06], ['of:', 7.796500930382445e-06], ['tmp3', 7.796500930382445e-06], ['principle', 7.796500930382445e-06], ['calculation', 7.796500930382445e-06], ['correspond', 7.796500930382445e-06], ['impossible', 7.796500930382445e-06], ['(3),', 7.796500930382445e-06], ['(...)', 7.796500930382445e-06], ['multiplier;', 7.796500930382445e-06], ['calculates', 7.796500930382445e-06], ['complete,', 7.796500930382445e-06], ['decided', 7.796500930382445e-06], ['subloop', 7.796500930382445e-06], ['lv_dom_walker', 7.796500930382445e-06], ['dom_walker', 7.796500930382445e-06], ['FINAL', 7.796500930382445e-06], ['OVERRIDE;', 7.796500930382445e-06], ['name_prop', 7.796500930382445e-06], ['acceptable_multiplier_p', 7.796500930382445e-06], ['HOST_WIDE_INT,', 7.796500930382445e-06], ['acceptable_type_p', 7.796500930382445e-06], ['multiply_term_by', 7.796500930382445e-06], ['dump_inner_likelihood', 7.796500930382445e-06], ['analyze_stride', 7.796500930382445e-06], ['record_address_fragment', 7.796500930382445e-06], ['add_loop_to_queue', 7.796500930382445e-06], ['maybe_get_stmt', 7.796500930382445e-06], ['pieces', 7.796500930382445e-06], ['look_through_cast_p', 7.796500930382445e-06], ['*assign', 7.796500930382445e-06], ['dump_address_info', 7.796500930382445e-06], ['hash.add_int', 7.796500930382445e-06], ['repeated', 7.796500930382445e-06], ['rare', 7.796500930382445e-06], ['duplicating', 7.796500930382445e-06], ['loop"', 7.796500930382445e-06], ['loop)', 7.796500930382445e-06], ['hoist', 7.796500930382445e-06], ['M_MAXIMUM_SCALE.', 7.796500930382445e-06], ['RESULT', 7.796500930382445e-06], ['MULTIPLIER', 7.796500930382445e-06], ['Iterate', 7.796500930382445e-06], ['descriptors,', 7.796500930382445e-06], ['TERM.', 7.796500930382445e-06], ['dimension\\n",', 7.796500930382445e-06], ['term.stride);', 7.796500930382445e-06], ['TERM,', 7.796500930382445e-06], ['term.stride', 7.796500930382445e-06], ['term.inner_likelihood', 7.796500930382445e-06], ['(stride,', 7.796500930382445e-06], ['term.multiplier);', 7.796500930382445e-06], ['iterations', 7.796500930382445e-06], ['Although', 7.796500930382445e-06], ["STMT's", 7.796500930382445e-06], ['expr_invariant_in_loop_p', 7.796500930382445e-06], ['varying', 7.796500930382445e-06], ['handle,', 7.796500930382445e-06], ['stride];', 7.796500930382445e-06], ['MULT_EXPR)', 7.796500930382445e-06], ['(gimple_assign_rhs1', 7.796500930382445e-06], ['(op2)', 7.796500930382445e-06], ['op2);', 7.796500930382445e-06], ['term.expr,', 7.796500930382445e-06], ['Peel', 7.796500930382445e-06], ['gimple_assign_rhs2', 7.796500930382445e-06], ['%G",', 7.796500930382445e-06], ['assign);', 7.796500930382445e-06], ['candidates.', 7.796500930382445e-06], ['strides.', 7.796500930382445e-06], ['conditions.', 7.796500930382445e-06], ['a(1,:)', 7.796500930382445e-06], ['relatively', 7.796500930382445e-06], ['b(:,1)', 7.796500930382445e-06], ['follows:', 7.796500930382445e-06], ['assumption', 7.796500930382445e-06], ['involves', 7.796500930382445e-06], ['confused', 7.796500930382445e-06], ['(using', 7.796500930382445e-06], ['3.', 7.796500930382445e-06], ['version_stride', 7.796500930382445e-06], ['address->min_offset', 7.796500930382445e-06], ['apart', 7.796500930382445e-06], ['address->terms.length', 7.796500930382445e-06], ['address->terms[i].expr', 7.796500930382445e-06], ['only,', 7.796500930382445e-06], ['truncation', 7.796500930382445e-06], ['type_size;', 7.796500930382445e-06], ['(multiplier', 7.796500930382445e-06], ['(but', 7.796500930382445e-06], ['exclude', 7.796500930382445e-06], ['&type_size))', 7.796500930382445e-06], ['stage.', 7.796500930382445e-06], ['smaller', 7.796500930382445e-06], ['dump_user_location_t::from_function_decl', 7.796500930382445e-06], ['(m_fn->decl));', 7.796500930382445e-06], ['&linfo', 7.796500930382445e-06], ['(!linfo.rejected_p)', 7.796500930382445e-06], ['inner;', 7.796500930382445e-06], ['bitmap_iterator', 7.796500930382445e-06], ['EXECUTE_IF_SET_IN_BITMAP', 7.796500930382445e-06], ['bi)', 7.796500930382445e-06], ['ssa_name', 7.796500930382445e-06], ['loop\\n",', 7.796500930382445e-06], ['imply', 7.796500930382445e-06], ['Simplify', 7.796500930382445e-06], ['pass_loop_versioning', 7.796500930382445e-06], ['"go-sha1.h"', 7.796500930382445e-06], ["'v',", 7.796500930382445e-06], ["';',", 7.796500930382445e-06], ['imports,', 7.796500930382445e-06], ['import_init_fn,', 7.796500930382445e-06], ['Import_init_set&', 7.796500930382445e-06], ['imported_init_fns,', 7.796500930382445e-06], ['supporting', 7.796500930382445e-06], ['go_assert(!pkgpath.empty());', 7.796500930382445e-06], ['Package*)*', 7.796500930382445e-06], ['(this', 7.796500930382445e-06], ['Type::TYPE_INTERFACE)', 7.796500930382445e-06], ['methods->begin_definitions();', 7.796500930382445e-06], ['methods->end_definitions();', 7.796500930382445e-06], ['Package*>::const_iterator', 7.796500930382445e-06], ['Package*>', 7.796500930382445e-06], ['\\"");', 7.796500930382445e-06], ['portion', 7.796500930382445e-06], ['imported_init_fns.begin();', 7.796500930382445e-06], ['imported_init_fns.end();', 7.796500930382445e-06], ['unsigned>::const_iterator', 7.796500930382445e-06], ['init_idx.end());', 7.796500930382445e-06], ['(std::set<std::string>::const_iterator', 7.796500930382445e-06], ['ii->precursors().begin();', 7.796500930382445e-06], ['ii->precursors().end();', 7.796500930382445e-06], ['++pci)', 7.796500930382445e-06], ['sink);', 7.796500930382445e-06], ['clause.', 7.796500930382445e-06], ['(already', 7.796500930382445e-06], ['idx;', 7.796500930382445e-06], ['non-negative', 7.796500930382445e-06], ['older', 7.796500930382445e-06], ['/|', 7.796500930382445e-06], ['K', 7.796500930382445e-06], ['objects,', 7.796500930382445e-06], ['it->first;', 7.796500930382445e-06], ['(std::vector<std::string>::const_iterator', 7.796500930382445e-06], ['it2', 7.796500930382445e-06], ['Type*>', 7.796500930382445e-06], ['(p->second', 7.796500930382445e-06], ['no->package();', 7.796500930382445e-06], ['(nt->is_alias())', 7.796500930382445e-06], ['"%u",', 7.796500930382445e-06], ['note.', 7.796500930382445e-06], ['"string",', 7.796500930382445e-06], ['go_assert(named_object', 7.796500930382445e-06], ['occur.', 7.796500930382445e-06], ['checksum.', 7.796500930382445e-06], ['"dmd/ctfe.h"', 7.796500930382445e-06], ['LC_ENTER,', 7.796500930382445e-06], ['LC_LEAVE,', 7.796500930382445e-06], ['*decl', 7.796500930382445e-06], ['LINKd)', 7.796500930382445e-06], ['LINKd);', 7.796500930382445e-06], ['TypeDelegate', 7.796500930382445e-06], ['TypeDelegate::create', 7.796500930382445e-06], ['(decl->type);', 7.796500930382445e-06], ['(declaration_reference_p', 7.796500930382445e-06], ['insert_type_modifiers', 7.796500930382445e-06], ['(Parameter', 7.796500930382445e-06], ['(TREE_ADDRESSABLE', 7.796500930382445e-06], ['error_mark_node,', 7.796500930382445e-06], ['(tb', 7.796500930382445e-06], ['build_real', 7.796500930382445e-06], ['.length', 7.796500930382445e-06], ['ptr_field', 7.796500930382445e-06], ['ce);', 7.796500930382445e-06], ['get_array_length', 7.796500930382445e-06], ['BINFO', 7.796500930382445e-06], ['build_class_binfo', 7.796500930382445e-06], ['(cd->type);', 7.796500930382445e-06], ['integer_zero_node;', 7.796500930382445e-06], ['(cd->baseClass)', 7.796500930382445e-06], ['layout.', 7.796500930382445e-06], ['build_interface_binfo', 7.796500930382445e-06], ['*cd,', 7.796500930382445e-06], ['i++,', 7.796500930382445e-06], ['offset++)', 7.796500930382445e-06], ['*bc', 7.796500930382445e-06], ['offset));', 7.796500930382445e-06], ['.funcptr', 7.796500930382445e-06], ['(TYPE_DELEGATE', 7.796500930382445e-06], ['TYPE_DELEGATE', 7.796500930382445e-06], ['(ctype)', 7.796500930382445e-06], ['(ctype),', 7.796500930382445e-06], ['FNTYPE', 7.796500930382445e-06], ['build_vindex_ref', 7.796500930382445e-06], ['(result)));', 7.796500930382445e-06], ['(fntype));', 7.796500930382445e-06], ['RESULT_DECL:', 7.796500930382445e-06], ['VALUEP.', 7.796500930382445e-06], ['build4', 7.796500930382445e-06], ['SET_EXPR_LOCATION', 7.796500930382445e-06], ['optimizer', 7.796500930382445e-06], ['C-style', 7.796500930382445e-06], ['gimplification.', 7.796500930382445e-06], ['(va_list_type_node)', 7.796500930382445e-06], ['MODIFY_EXPR:', 7.796500930382445e-06], ['read,', 7.796500930382445e-06], ['d_mark_read', 7.796500930382445e-06], ['*sd)', 7.796500930382445e-06], ['sd->fields.dim;', 7.796500930382445e-06], ['sd->fields[i];', 7.796500930382445e-06], ['*ts', 7.796500930382445e-06], ['padding.', 7.796500930382445e-06], ['lower_struct_comparison', 7.796500930382445e-06], ['*sd,', 7.796500930382445e-06], ['EQ_EXPR)', 7.796500930382445e-06], ['TRUTH_ORIF_EXPR;', 7.796500930382445e-06], ['(BUILT_IN_MEMCMP),', 7.796500930382445e-06], ['tmemcmp,', 7.796500930382445e-06], ['Tvector', 7.796500930382445e-06], ['req', 7.796500930382445e-06], ['(t1ref),', 7.796500930382445e-06], ['(tcode,', 7.796500930382445e-06], ['req,', 7.796500930382445e-06], ['ieq);', 7.796500930382445e-06], ['done.', 7.796500930382445e-06], ['(level_block);', 7.796500930382445e-06], ['(size_type_node);', 7.796500930382445e-06], ['length));', 7.796500930382445e-06], ['(ptrtype);', 7.796500930382445e-06], ['(t2));', 7.796500930382445e-06], ['Decrease', 7.796500930382445e-06], ['(POSTDECREMENT_EXPR,', 7.796500930382445e-06], ['build_alignment_field', 7.796500930382445e-06], ['TYPE_ALIGN', 7.796500930382445e-06], ['layout_decl', 7.796500930382445e-06], ['ordered', 7.796500930382445e-06], ['is_initialized', 7.796500930382445e-06], ['RECORD_OR_UNION_TYPE_P', 7.796500930382445e-06], ['(RECORD_OR_UNION_TYPE_P', 7.796500930382445e-06], ['(vfield));', 7.796500930382445e-06], ['RECORD_TYPE)', 7.796500930382445e-06], ['ve);', 7.796500930382445e-06], ['(constant_p)', 7.796500930382445e-06], ['lookup_anon_field', 7.796500930382445e-06], ['(object,', 7.796500930382445e-06], ['fold_build3_loc', 7.796500930382445e-06], ['COMPONENT_REF,', 7.796500930382445e-06], ['(rhs)', 7.796500930382445e-06], ['AGGREGATE_TYPE_P', 7.796500930382445e-06], ['(lhs);', 7.796500930382445e-06], ['TARGET_EXPR', 7.796500930382445e-06], ['VIEW_CONVERT_EXPR', 7.796500930382445e-06], ['warn_for_null_address', 7.796500930382445e-06], ['ADDR_EXPR', 7.796500930382445e-06], ['(AGGREGATE_TYPE_P', 7.796500930382445e-06], ['arg0', 7.796500930382445e-06], ['(arg1);', 7.796500930382445e-06], ['VEC_COND_EXPR', 7.796500930382445e-06], ['(arg0),', 7.796500930382445e-06], ['build_empty_stmt', 7.796500930382445e-06], ['(input_location);', 7.796500930382445e-06], ['return_expr', 7.796500930382445e-06], ['(sizetype),', 7.796500930382445e-06], ['(sizetype));', 7.796500930382445e-06], ['(index),', 7.796500930382445e-06], ['OFFSET)', 7.796500930382445e-06], ['(NEGATE_EXPR,', 7.796500930382445e-06], ['(value));', 7.796500930382445e-06], ['value));', 7.796500930382445e-06], ['(ptrtype));', 7.796500930382445e-06], ['build_array_from_val', 7.796500930382445e-06], ['void_okay_p', 7.796500930382445e-06], ['(index);', 7.796500930382445e-06], ['D2', 7.796500930382445e-06], ['fd->type;', 7.796500930382445e-06], ['component.', 7.796500930382445e-06], ['var_chain,', 7.796500930382445e-06], ['plain', 7.796500930382445e-06], ['*arguments)', 7.796500930382445e-06], ['promoted', 7.796500930382445e-06], ['(tf->ty', 7.796500930382445e-06], ['("need', 7.796500930382445e-06], ['%<this%>', 7.796500930382445e-06], ['saved_args', 7.796500930382445e-06], ['targ', 7.796500930382445e-06], ['*parg', 7.796500930382445e-06], ['(result))', 7.796500930382445e-06], ['File', 7.796500930382445e-06], ['(fmodfn,', 7.796500930382445e-06], ['(SCALAR_FLOAT_TYPE_P', 7.796500930382445e-06], ['basetype,', 7.796500930382445e-06], ['FUNCTION_TYPE);', 7.796500930382445e-06], ['build_function_type', 7.796500930382445e-06], ['sym', 7.796500930382445e-06], ['dsym->isFuncDeclaration', 7.796500930382445e-06], ['fd->vthis);', 7.796500930382445e-06], ['ffo', 7.796500930382445e-06], ['(ffo)', 7.796500930382445e-06], ['FRAMEINFO_STATIC_CHAIN', 7.796500930382445e-06], ['get_framedecl', 7.796500930382445e-06], ['d_nested_class', 7.796500930382445e-06], ['*outer', 7.796500930382445e-06], ['outer->isFuncDeclaration', 7.796500930382445e-06], ['Type::tvoidptr)', 7.796500930382445e-06], ['(FRAMEINFO_IS_CLOSURE', 7.796500930382445e-06], ['(frame_rec_type)', 7.796500930382445e-06], ['(fd->vthis)', 7.796500930382445e-06], ['frame_rec_type;', 7.796500930382445e-06], ['referencing', 7.796500930382445e-06], ['fd->closureVars[i];', 7.796500930382445e-06], ['(vsym);', 7.796500930382445e-06], ['TYPE_READONLY', 7.796500930382445e-06], ['FD', 7.796500930382445e-06], ['Set-up', 7.796500930382445e-06], ['FRAMEINFO_IS_CLOSURE', 7.796500930382445e-06], ['anyway,', 7.796500930382445e-06], ['contracts', 7.796500930382445e-06], ['inherits', 7.796500930382445e-06], ['ff', 7.796500930382445e-06], ['d->isFuncDeclaration', 7.796500930382445e-06], ['Save', 7.796500930382445e-06], ['(LT_EXPR,', 7.796500930382445e-06], ['vectors', 7.796500930382445e-06], ['(dest_type);', 7.796500930382445e-06], ['emulated', 7.796500930382445e-06], ['f16', 7.796500930382445e-06], ['dumps.', 7.796500930382445e-06], ['"go-dump.h"', 7.796500930382445e-06], ['name_(name),', 7.796500930382445e-06], ['cvt', 7.796500930382445e-06], ['BrigAluModifier8_t', 7.796500930382445e-06], ['(src_type);', 7.796500930382445e-06], ['REAL', 7.796500930382445e-06], ['conversion_result);', 7.796500930382445e-06], ['(input,', 7.796500930382445e-06], ['casted_output', 7.796500930382445e-06], ['casted_output);', 7.796500930382445e-06], ['m_parent.get_string', 7.796500930382445e-06], ['profile', 7.796500930382445e-06], ['#elif', 7.796500930382445e-06], ['Internal', 7.796500930382445e-06], ['top)', 7.796500930382445e-06], ['canonize_uhwi', 7.796500930382445e-06], ['wide_int::create', 7.796500930382445e-06], ['Sets', 7.796500930382445e-06], ['SGN.', 7.796500930382445e-06], ['&x,', 7.796500930382445e-06], ['complement', 7.796500930382445e-06], ['(excess', 7.796500930382445e-06], ['t[len', 7.796500930382445e-06], ['excess;', 7.796500930382445e-06], ['mpz_import', 7.796500930382445e-06], ['min)', 7.796500930382445e-06], ['min);', 7.796500930382445e-06], ['operate', 7.796500930382445e-06], ['x);', 7.796500930382445e-06], ['Zero-extend', 7.796500930382445e-06], ['PREC', 7.796500930382445e-06], ['(-1,', 7.796500930382445e-06], ['xprecision', 7.796500930382445e-06], ['(xprecision))', 7.796500930382445e-06], ['small_xprecision);', 7.796500930382445e-06], ['relational', 7.796500930382445e-06], ['Signed', 7.796500930382445e-06], ['small_prec)', 7.796500930382445e-06], ['operators.', 7.796500930382445e-06], ['s1;', 7.796500930382445e-06], ['signed.', 7.796500930382445e-06], ['s0', 7.796500930382445e-06], ['WIDTH', 7.796500930382445e-06], ['(start', 7.796500930382445e-06], ['(y,', 7.796500930382445e-06], ['start);', 7.796500930382445e-06], ['val[block]', 7.796500930382445e-06], ['bswap', 7.796500930382445e-06], ['(width', 7.796500930382445e-06], ['(shift', 7.796500930382445e-06], ['ones,', 7.796500930382445e-06], ['op1[l1];', 7.796500930382445e-06], ['op1[l0];', 7.796500930382445e-06], ['OVERFLOW', 7.796500930382445e-06], ['*OVERFLOW', 7.796500930382445e-06], ['*overflow)', 7.796500930382445e-06], ['IN_LEN', 7.796500930382445e-06], ['*result,', 7.796500930382445e-06], ['(small_prec)', 7.796500930382445e-06], ['canonicalized', 7.796500930382445e-06], ['controls', 7.796500930382445e-06], ['Overflow', 7.796500930382445e-06], ['op2len,', 7.796500930382445e-06], ['attempt', 7.796500930382445e-06], ['room', 7.796500930382445e-06], ['Likewise', 7.796500930382445e-06], ['wi::neg_p', 7.796500930382445e-06], ['OVF_OVERFLOW;', 7.796500930382445e-06], ['half_blocks_needed,', 7.796500930382445e-06], ['j]', 7.796500930382445e-06], ['(high', 7.796500930382445e-06], ['wi::sub_large', 7.796500930382445e-06], ['borrow;', 7.796500930382445e-06], ['OVF_UNDERFLOW', 7.796500930382445e-06], ['o1)', 7.796500930382445e-06], ['b_quotient[j]', 7.796500930382445e-06], ['Unlike', 7.796500930382445e-06], ['s));', 7.796500930382445e-06], ['b_divisor[n-1];', 7.796500930382445e-06], ['rhat', 7.796500930382445e-06], ['b_dividend[j+n]', 7.796500930382445e-06], ['remainder', 7.796500930382445e-06], ['wi::only_sign_bit_p', 7.796500930382445e-06], ['(signed', 7.796500930382445e-06], ['dividend.', 7.796500930382445e-06], ['(divisor))', 7.796500930382445e-06], ['quotient[0]', 7.796500930382445e-06], ['(quotient,', 7.796500930382445e-06], ['(remainder,', 7.796500930382445e-06], ['sgn);', 7.796500930382445e-06], ['neg', 7.796500930382445e-06], ['whole-block', 7.796500930382445e-06], ['rshift_large_common', 7.796500930382445e-06], ['(xprecision', 7.796500930382445e-06], ['wi::clz', 7.796500930382445e-06], ['wi::ctz', 7.796500930382445e-06], ['crux', 7.796500930382445e-06], ['&mask)', 7.796500930382445e-06], ['eventually', 7.796500930382445e-06], ['(widest_int', 7.796500930382445e-06], ['&ref)', 7.796500930382445e-06], ['ints.', 7.796500930382445e-06], ['Specialization', 7.796500930382445e-06], ['<>', 7.796500930382445e-06], ['ASSERT_STREQ', 7.796500930382445e-06], ['VALUE_TYPE.', 7.796500930382445e-06], ['a);', 7.796500930382445e-06], ['(7);', 7.796500930382445e-06], ['b),', 7.796500930382445e-06], ['(wi::les_p', 7.796500930382445e-06], ['wi::cmps', 7.796500930382445e-06], ['<VALUE_TYPE>', 7.796500930382445e-06], ['31,', 7.796500930382445e-06], ['(wi::max_value', 7.796500930382445e-06], ['-offset);', 7.796500930382445e-06], ["wasn't", 7.796500930382445e-06], ['instances', 7.796500930382445e-06], ['destinations.', 7.796500930382445e-06], ['singleton', 7.796500930382445e-06], ['opt_problem', 7.796500930382445e-06], ['opt_result::success', 7.796500930382445e-06], ['(with_dumping)', 7.796500930382445e-06], ['boolean.', 7.796500930382445e-06], ['non-trivial', 7.796500930382445e-06], ['Simulate', 7.796500930382445e-06], ['(as', 7.796500930382445e-06], ['location:', 7.796500930382445e-06], ['line_6);', 7.796500930382445e-06], ['0;\\n");', 7.796500930382445e-06], ['loop\\n");', 7.796500930382445e-06], ['dumped', 7.796500930382445e-06], ['"d-target.h"', 7.796500930382445e-06], ['tinfo_kind', 7.796500930382445e-06], ['(vtbl_ptr_type_node,', 7.796500930382445e-06], ['field_type', 7.796500930382445e-06], ['ident->toChars', 7.796500930382445e-06], ['supplied', 7.796500930382445e-06], ['Type::typeinfoconst);', 7.796500930382445e-06], ['Front-end.', 7.796500930382445e-06], ['str);', 7.796500930382445e-06], ['(get_vtable_decl', 7.796500930382445e-06], ['(cd)));', 7.796500930382445e-06], ['csym', 7.796500930382445e-06], ['(csym,', 7.796500930382445e-06], ['sees', 7.796500930382445e-06], ['(*cd->vtblInterfaces)[i];', 7.796500930382445e-06], ['b->sym;', 7.796500930382445e-06], ['vtbl[].', 7.796500930382445e-06], ['ptr.', 7.796500930382445e-06], ['(vtbl_interface_type_node,', 7.796500930382445e-06], ['domain', 7.796500930382445e-06], ['mirrored', 7.796500930382445e-06], ['vtbldomain', 7.796500930382445e-06], ['vtbltype', 7.796500930382445e-06], ['(vtable_entry_type,', 7.796500930382445e-06], ['vtbldomain);', 7.796500930382445e-06], ['(vtbltype,', 7.796500930382445e-06], ['d->tinfo->mutableOf', 7.796500930382445e-06], ['m_init;', 7.796500930382445e-06], ['(TypeEnum', 7.796500930382445e-06], ['ti->sym;', 7.796500930382445e-06], ['(d_array_value', 7.796500930382445e-06], ['(TypePointer', 7.796500930382445e-06], ['(TypeDArray', 7.796500930382445e-06], ['Taarray);', 7.796500930382445e-06], ['TypeAArray', 7.796500930382445e-06], ['(TypeVector', 7.796500930382445e-06], ['*destructor;', 7.796500930382445e-06], ['classInvariant;', 7.796500930382445e-06], ['ClassFlags', 7.796500930382445e-06], ['*deallocator;', 7.796500930382445e-06], ['OffsetTypeInfo[]', 7.796500930382445e-06], ['m_offTi;', 7.796500930382445e-06], ['defaultConstructor;', 7.796500930382445e-06], ['m_RTInfo;', 7.796500930382445e-06], ['bcd->vtblInterfaces->dim;', 7.796500930382445e-06], ['TypeInfoClassDeclaration::create', 7.796500930382445e-06], ['Tstruct);', 7.796500930382445e-06], ['elements;', 7.796500930382445e-06], ['layout_classinfo', 7.796500930382445e-06], ['classinfo', 7.796500930382445e-06], ['follow.', 7.796500930382445e-06], ['TYPE_ALIGN_UNIT', 7.796500930382445e-06], ['Tchar', 7.796500930382445e-06], ['(tid->csym)', 7.796500930382445e-06], ['Terror);', 7.796500930382445e-06], ['(decl->csym', 7.796500930382445e-06], ['(decl->type));', 7.796500930382445e-06], ['distinguished', 7.796500930382445e-06], ['get_cpp_typeinfo_decl', 7.796500930382445e-06], ['*init', 7.796500930382445e-06], ['get_vtable_decl', 7.796500930382445e-06], ['(t->vtinfo);', 7.796500930382445e-06], ['stopped', 7.796500930382445e-06], ['t->toBasetype', 7.796500930382445e-06], ['(TemplateInstance', 7.796500930382445e-06], ['"dmd/attrib.h"', 7.796500930382445e-06], ['given.', 7.796500930382445e-06], ['Type::basic[i];', 7.796500930382445e-06], ['TYPE_MAX_VALUE', 7.796500930382445e-06], ['non-null', 7.796500930382445e-06], ['parms;', 7.796500930382445e-06], ['(parm);', 7.796500930382445e-06], ['sc', 7.796500930382445e-06], ['CST', 7.796500930382445e-06], ['CTFE', 7.796500930382445e-06], ['(cst));', 7.796500930382445e-06], ['again', 7.796500930382445e-06], ['TREE_REAL_CST', 7.796500930382445e-06], ['*string', 7.796500930382445e-06], ['platform', 7.796500930382445e-06], ['(targetm_common.except_unwind_info', 7.796500930382445e-06], ['(&global_options)', 7.796500930382445e-06], ['anyway', 7.796500930382445e-06], ['vec_safe_iterate', 7.796500930382445e-06], ['notes', 7.796500930382445e-06], ['vary', 7.796500930382445e-06], ['*func', 7.796500930382445e-06], ['&type);', 7.796500930382445e-06], ['(dsym);', 7.796500930382445e-06], ['(ptr_mode,', 7.796500930382445e-06], ['override', 7.796500930382445e-06], ['maybe_set_builtin_1', 7.796500930382445e-06], ['Found', 7.796500930382445e-06], ['d_maybe_set_builtin', 7.796500930382445e-06], ['(size,', 7.796500930382445e-06], ['(build_qualified_type', 7.796500930382445e-06], ['TYPE_QUAL_CONST));', 7.796500930382445e-06], ['(SIZE_TYPE,', 7.796500930382445e-06], ['int")', 7.796500930382445e-06], ['intmax_type_node', 7.796500930382445e-06], ['uintmax_type_node', 7.796500930382445e-06], ['unsigned_type_node;', 7.796500930382445e-06], ['signed_size_type_node', 7.796500930382445e-06], ['long_integer_type_node;', 7.796500930382445e-06], ['long_long_integer_type_node;', 7.796500930382445e-06], ['TYPE_STRING_FLAG', 7.796500930382445e-06], ['TYPE_DYNAMIC_ARRAY', 7.796500930382445e-06], ['attributes.', 7.796500930382445e-06], ['ICE', 7.796500930382445e-06], ['(see', 7.796500930382445e-06], ['d_define_builtins', 7.796500930382445e-06], ['-L', 7.796500930382445e-06], ['".")', 7.796500930382445e-06], ['relative_import_path', 7.796500930382445e-06], ['Export::magic_len)', 7.796500930382445e-06], ['gogo;', 7.796500930382445e-06], ['Export::magic_len))', 7.796500930382445e-06], ['stream->require_bytes(this->location_,', 7.796500930382445e-06], ['this->version_', 7.796500930382445e-06], ['pkgpath;', 7.796500930382445e-06], ['pkgpath_symbol', 7.796500930382445e-06], ['this->package_', 7.796500930382445e-06], ['(!stream->saw_error())', 7.796500930382445e-06], ['p->set_package_name(package_name,', 7.796500930382445e-06], ['(stream->peek_char()', 7.796500930382445e-06], ['init_graph', 7.796500930382445e-06], ['(this->version_', 7.796500930382445e-06], ['parser.', 7.796500930382445e-06], ['this->gogo_->add_dot_import_object(no);', 7.796500930382445e-06], ['this->stream_->set_saw_error();', 7.796500930382445e-06], ['parser,', 7.796500930382445e-06], ['this->types_.size()', 7.796500930382445e-06], ['go_assert(no->package()', 7.796500930382445e-06], ['package);', 7.796500930382445e-06], ['Type::make_forward_declaration(no);', 7.796500930382445e-06], ['finalized', 7.796500930382445e-06], ['visibility', 7.796500930382445e-06], ['escape;', 7.796500930382445e-06], ['LENGTH', 7.796500930382445e-06], ['read;', 7.796500930382445e-06], ['(!this->saw_error())', 7.796500930382445e-06], ['this->name().c_str(),', 7.796500930382445e-06], ['this->body_.length();', 7.796500930382445e-06], ['finalized.', 7.796500930382445e-06], ['underscore', 7.796500930382445e-06], ['reserved', 7.796500930382445e-06], ['name_reserved_for_implementation_p', 7.796500930382445e-06], ['goal,', 7.796500930382445e-06], ['"vec.h"', 7.796500930382445e-06], ['"alias.h"', 7.796500930382445e-06], ['"c-family/c-common.h"', 7.796500930382445e-06], ['prove_implication', 7.796500930382445e-06], ['entries.', 7.796500930382445e-06], ['conclusions', 7.796500930382445e-06], ['(iterator,', 7.796500930382445e-06], ['specified.', 7.796500930382445e-06], ['goals', 7.796500930382445e-06], ['proof_state', 7.796500930382445e-06], ['analyze_atom', 7.796500930382445e-06], ['undecided.', 7.796500930382445e-06], ['atomic.', 7.796500930382445e-06], ['(PACK_EXPANSION_PATTERN', 7.796500930382445e-06], ['(c2,', 7.796500930382445e-06], ['TS', 7.796500930382445e-06], ['CHECK_CONSTR)', 7.796500930382445e-06], ['searching', 7.796500930382445e-06], ['valid)', 7.796500930382445e-06], ['assumptions.', 7.796500930382445e-06], ['(*iter);', 7.796500930382445e-06], ['(*i);', 7.796500930382445e-06], ['ts.replace(i,', 7.796500930382445e-06], ['load_assumptions', 7.796500930382445e-06], ['enew', 7.796500930382445e-06], ['this?', 7.796500930382445e-06], ['right)', 7.796500930382445e-06], ['CI_ASSOCIATED_CONSTRAINTS', 7.796500930382445e-06], ['subsumes', 7.796500930382445e-06], ['whatever', 7.796500930382445e-06], ['m_parent.m_cf', 7.796500930382445e-06], ['Linemap', 7.796500930382445e-06], ['linemap_add(line_table,', 7.796500930382445e-06], ['subdirectory', 7.796500930382445e-06], ['hosted', 7.796500930382445e-06], ['upstream', 7.796500930382445e-06], ['2015-2019', 7.796500930382445e-06], ['"dmd/init.h"', 7.796500930382445e-06], ['t)->sym;', 7.796500930382445e-06], ['Deal', 7.796500930382445e-06], ['d_unsigned_type', 7.796500930382445e-06], ['(eptype,', 7.796500930382445e-06], ['(t0,', 7.796500930382445e-06], ['*e1b', 7.796500930382445e-06], ['(CastExp', 7.796500930382445e-06], ['e1b;', 7.796500930382445e-06], ['e1b', 7.796500930382445e-06], ['LHS.', 7.796500930382445e-06], ['(bool', 7.796500930382445e-06], ['Operands', 7.796500930382445e-06], ['bring', 7.796500930382445e-06], ['NE_EXPR;', 7.796500930382445e-06], ['((tb1->ty', 7.796500930382445e-06], ['Tarray))', 7.796500930382445e-06], ['tb1)->sym;', 7.796500930382445e-06], ['TOKequal)', 7.796500930382445e-06], ['equal.', 7.796500930382445e-06], ['NE', 7.796500930382445e-06], ['t1len,', 7.796500930382445e-06], ['*tkey', 7.796500930382445e-06], ['((TypeAArray', 7.796500930382445e-06], ['tkey);', 7.796500930382445e-06], ['(e->op)', 7.796500930382445e-06], ["if'", 7.796500930382445e-06], ['(e->e2->type->toBasetype', 7.796500930382445e-06], ['void_node);', 7.796500930382445e-06], ['binary_op.', 7.796500930382445e-06], ['RSHIFT_EXPR;', 7.796500930382445e-06], ['pushing', 7.796500930382445e-06], ['PLUS_EXPR;', 7.796500930382445e-06], ['anyway.', 7.796500930382445e-06], ['offexp', 7.796500930382445e-06], ['ptrexp', 7.796500930382445e-06], ['(etype->size', 7.796500930382445e-06], ['to)', 7.796500930382445e-06], ['TOKblit);', 7.796500930382445e-06], ['set-up', 7.796500930382445e-06], ['(modifycode,', 7.796500930382445e-06], ['(result));', 7.796500930382445e-06], ['(e->loc,', 7.796500930382445e-06], ['lwr_tree', 7.796500930382445e-06], ['ensured', 7.796500930382445e-06], ['tb1->isClassHandle', 7.796500930382445e-06], ['collector', 7.796500930382445e-06], ['release', 7.796500930382445e-06], ['(&t1,', 7.796500930382445e-06], ['removes', 7.796500930382445e-06], ['fail.', 7.796500930382445e-06], ['*sle', 7.796500930382445e-06], ['sometimes', 7.796500930382445e-06], ['slot.', 7.796500930382445e-06], ['fd->toChars', 7.796500930382445e-06], ['e->arguments);', 7.796500930382445e-06], ['(e->func);', 7.796500930382445e-06], ["`this'", 7.796500930382445e-06], ['relying', 7.796500930382445e-06], ['(vd', 7.796500930382445e-06], ['assert_pass', 7.796500930382445e-06], ['unittest_p', 7.796500930382445e-06], ['STATEMENT_LIST', 7.796500930382445e-06], ['(e->var);', 7.796500930382445e-06], ['Compiler', 7.796500930382445e-06], ['SymbolDeclaration', 7.796500930382445e-06], ['allocates', 7.796500930382445e-06], ['allocator.', 7.796500930382445e-06], ['(e->allocator)', 7.796500930382445e-06], ['(e->arguments', 7.796500930382445e-06], ['(tb->nextOf', 7.796500930382445e-06], ['ELEMENTS', 7.796500930382445e-06], ['satype', 7.796500930382445e-06], ['(satype,', 7.796500930382445e-06], ['(e->elements->dim),', 7.796500930382445e-06], ['(key);', 7.796500930382445e-06], ['complete.', 7.796500930382445e-06], ['elem', 7.796500930382445e-06], ['(ClassReferenceExp', 7.796500930382445e-06], ['*e,', 7.796500930382445e-06], ['destructors', 7.796500930382445e-06], ['(d_function_chain->vars_in_scope,', 7.796500930382445e-06], ['DECL_RESULT.', 7.796500930382445e-06], ['try/finally', 7.796500930382445e-06], ['(with', 7.796500930382445e-06], ["'>'),", 7.796500930382445e-06], ['get_stdlib_header_for_name', 7.796500930382445e-06], ['{NULL,', 7.796500930382445e-06], ['<stdlib.h>', 7.796500930382445e-06], ['{"<stdlib.h>",', 7.796500930382445e-06], ['"<cstdlib>"}', 7.796500930382445e-06], ['<string.h>', 7.796500930382445e-06], ['bfields);', 7.796500930382445e-06], ['nt->real_type()->forwarded();', 7.796500930382445e-06], ['forwarding', 7.796500930382445e-06], ['(t->forward_declaration_type()', 7.796500930382445e-06], ['(traverse->traverse_mask()', 7.796500930382445e-06], ['optionally', 7.796500930382445e-06], ['COMPARE_ERRORS)', 7.796500930382445e-06], ['reason);', 7.796500930382445e-06], ['mixed', 7.796500930382445e-06], ['lhs->complex_type()', 7.796500930382445e-06], ['buf[200];', 7.796500930382445e-06], ['non-comparable', 7.796500930382445e-06], ['assignable.', 7.796500930382445e-06], ['assignable', 7.796500930382445e-06], ['sfl->end();', 7.796500930382445e-06], ['Struct_field', 7.796500930382445e-06], ['this->btype_;', 7.796500930382445e-06], ['(this->named_type()', 7.796500930382445e-06], ['(gogo', 7.796500930382445e-06], ['backend,', 7.796500930382445e-06], ['std::pair<Type*,', 7.796500930382445e-06], ['placeholders.', 7.796500930382445e-06], ['(ins.first->second.btype', 7.796500930382445e-06], ['this->do_get_backend(gogo);', 7.796500930382445e-06], ['recursion.', 7.796500930382445e-06], ['known,', 7.796500930382445e-06], ['Named', 7.796500930382445e-06], ['Interface_type::get_backend_empty_interface_type(gogo);', 7.796500930382445e-06], ['gogo->backend()->placeholder_pointer_type("",', 7.796500930382445e-06], ['get_backend_struct_fields(gogo,', 7.796500930382445e-06], ['get_backend_slice_fields(gogo,', 7.796500930382445e-06], ['get_backend_interface_fields(gogo,', 7.796500930382445e-06], ['this->named_type();', 7.796500930382445e-06], ['bvnull', 7.796500930382445e-06], ['bvnull));', 7.796500930382445e-06], ['(this->is_unsafe_pointer_type())', 7.796500930382445e-06], ['nt);', 7.796500930382445e-06], ['this->type_descriptor_var_;', 7.796500930382445e-06], ['dummy;', 7.796500930382445e-06], ['&dummy))', 7.796500930382445e-06], ['initializer_btype,', 7.796500930382445e-06], ['whenever', 7.796500930382445e-06], ['context.set_is_const();', 7.796500930382445e-06], ['(nt->named_object()->package()', 7.796500930382445e-06], ['*package', 7.796500930382445e-06], ['(this->points_to()', 7.796500930382445e-06], ['pairs', 7.796500930382445e-06], ['pointer_string_type', 7.796500930382445e-06], ['Type::make_pointer_type(string_type);', 7.796500930382445e-06], ['params->push_back(Typed_identifier("key",', 7.796500930382445e-06], ['params->push_back(Typed_identifier("seed",', 7.796500930382445e-06], ['hash_fntype', 7.796500930382445e-06], ['params->push_back(Typed_identifier("key1",', 7.796500930382445e-06], ['params->push_back(Typed_identifier("key2",', 7.796500930382445e-06], ['Type::make_builtin_struct_type(5,', 7.796500930382445e-06], ['"typ",', 7.796500930382445e-06], ['non-standard', 7.796500930382445e-06], ['&size)', 7.796500930382445e-06], ['&align))', 7.796500930382445e-06], ['64);', 7.796500930382445e-06], ['memequal', 7.796500930382445e-06], ['this->specific_type_functions(gogo,', 7.796500930382445e-06], ['base_type', 7.796500930382445e-06], ['go_assert(base_type', 7.796500930382445e-06], ['Expression::make_func_reference(hash_fn,', 7.796500930382445e-06], ['compare.', 7.796500930382445e-06], ['Expression::make_cast(pt,', 7.796500930382445e-06], ['gogo->add_statement(p1);', 7.796500930382445e-06], ['gogo->add_statement(p2);', 7.796500930382445e-06], ['Expression::make_temporary_reference(p2,', 7.796500930382445e-06], ['runtime_type_kind,', 7.796500930382445e-06], ['runtime_type_kind', 7.796500930382445e-06], ['Type::COMPARE_TAGS);', 7.796500930382445e-06], ['only_value_methods));', 7.796500930382445e-06], ['this->gc_symbol_var_;', 7.796500930382445e-06], ['asm_name(go_selectively_encode_id(sym_name));', 7.796500930382445e-06], ['ptrdata)', 7.796500930382445e-06], ['PTRSIZE', 7.796500930382445e-06], ['Type::TYPE_CALL_MULTIPLE_RESULT:', 7.796500930382445e-06], ['(!pf->type()->backend_type_field_align(gogo,', 7.796500930382445e-06], ['ele_size;', 7.796500930382445e-06], ['(!element_type->backend_type_size(gogo,', 7.796500930382445e-06], ['ele_size)', 7.796500930382445e-06], ['ptrmask.', 7.796500930382445e-06], ['avoiding', 7.796500930382445e-06], ['char>::const_iterator', 7.796500930382445e-06], ['int64_t);', 7.796500930382445e-06], ['*=', 7.796500930382445e-06], ['ele_size', 7.796500930382445e-06], ['repeat', 7.796500930382445e-06], ['item', 7.796500930382445e-06], ['0x7f));', 7.796500930382445e-06], ['(this->nb_', 7.796500930382445e-06], ['go_assert(offset', 7.796500930382445e-06], ['uncommon', 7.796500930382445e-06], ['vals->reserve(3);', 7.796500930382445e-06], ['//go:nointerface', 7.796500930382445e-06], ['method_type,', 7.796500930382445e-06], ['&*pf;', 7.796500930382445e-06], ['this->array_type()->element_type();', 7.796500930382445e-06], ['Named_type*)', 7.796500930382445e-06], ['go_assert(no', 7.796500930382445e-06], ['Type::make_boolean_type()', 7.796500930382445e-06], ['"bool".', 7.796500930382445e-06], ['Non-abstract', 7.796500930382445e-06], ['sname(name);', 7.796500930382445e-06], ['Named_object::make_type(sname,', 7.796500930382445e-06], ['named_type));', 7.796500930382445e-06], ['t->bits_)', 7.796500930382445e-06], ['t->is_abstract_;', 7.796500930382445e-06], ['((this->is_abstract_', 7.796500930382445e-06], ['named.', 7.796500930382445e-06], ['this->runtime_type_kind_,', 7.796500930382445e-06], ['changed";', 7.796500930382445e-06], ['parms1', 7.796500930382445e-06], ['parms2', 7.796500930382445e-06], ['(parms1', 7.796500930382445e-06], ['results1', 7.796500930382445e-06], ['results2', 7.796500930382445e-06], ['(results1', 7.796500930382445e-06], ['types");', 7.796500930382445e-06], ['results");', 7.796500930382445e-06], ['this->parameters_->begin();', 7.796500930382445e-06], ['this->parameters_->end();', 7.796500930382445e-06], ['p->location();', 7.796500930382445e-06], ['this->results_;', 7.796500930382445e-06], ['params->end())', 7.796500930382445e-06], ['exp->write_c_string("...");', 7.796500930382445e-06], ['(imp->match_c_string("..."))', 7.796500930382445e-06], ['Type::make_array_type(ptype,', 7.796500930382445e-06], ['!orig_params->empty())', 7.796500930382445e-06], ['orig_params->begin();', 7.796500930382445e-06], ['orig_params->end();', 7.796500930382445e-06], ['new_params,', 7.796500930382445e-06], ['ptdt);', 7.796500930382445e-06], ['methods;', 7.796500930382445e-06], ['vals->reserve(2);', 7.796500930382445e-06], ['Key', 7.796500930382445e-06], ['to_type)', 7.796500930382445e-06], ['this->typed_identifier_.type();', 7.796500930382445e-06], ['t->points_to();', 7.796500930382445e-06], ['tables.', 7.796500930382445e-06], ['p->type();', 7.796500930382445e-06], ['(p->is_anonymous())', 7.796500930382445e-06], ['t->points_to()->interface_type()', 7.796500930382445e-06], ['(pf->is_field_name(name))', 7.796500930382445e-06], ['Saw_named_type*', 7.796500930382445e-06], ['(!pf->is_anonymous())', 7.796500930382445e-06], ['saw;', 7.796500930382445e-06], ['pf->type()->named_type();', 7.796500930382445e-06], ['pf->type()->deref()->named_type();', 7.796500930382445e-06], ['sub;', 7.796500930382445e-06], ['this->fields_->begin();', 7.796500930382445e-06], ['this->fields_->end();', 7.796500930382445e-06], ['this));', 7.796500930382445e-06], ['*IS_AMBIGUOUS', 7.796500930382445e-06], ['is_ambiguous)', 7.796500930382445e-06], ['INTERFACE.', 7.796500930382445e-06], ['IS_POINTER', 7.796500930382445e-06], ['is_pointer)', 7.796500930382445e-06], ['bfields)', 7.796500930382445e-06], ['lastsize', 7.796500930382445e-06], ['(use_placeholder', 7.796500930382445e-06], ['fvals->push_back(Expression::make_unary(OPERATOR_AND,', 7.796500930382445e-06], ['Expression::make_integer_ul(1,', 7.796500930382445e-06], ['Expression::make_temporary_reference(key,', 7.796500930382445e-06], ['Type::make_pointer_type(name', 7.796500930382445e-06], ['static_cast<Type*>(name)', 7.796500930382445e-06], ['static_cast<Type*>(this));', 7.796500930382445e-06], ['P1', 7.796500930382445e-06], ['Expression::make_binary(OPERATOR_NOTEQ,', 7.796500930382445e-06], ['vals->push_back(Expression::make_boolean(false,', 7.796500930382445e-06], ["ret->push_back(';');", 7.796500930382445e-06], ['p->type()->named_type()', 7.796500930382445e-06], ['(p->has_tag())', 7.796500930382445e-06], ['Export_function_body', 7.796500930382445e-06], ['efb(exp,', 7.796500930382445e-06], ['imp->require_c_string(";', 7.796500930382445e-06], ['print_name', 7.796500930382445e-06], ['ele', 7.796500930382445e-06], ['l2', 7.796500930382445e-06], ['v2)', 7.796500930382445e-06], ['convenient', 7.796500930382445e-06], ['iref', 7.796500930382445e-06], ['aref', 7.796500930382445e-06], ['aref,', 7.796500930382445e-06], ['Expression::TYPE_INFO_SIZE);', 7.796500930382445e-06], ['Increase', 7.796500930382445e-06], ['p->name', 7.796500930382445e-06], ['p->btype', 7.796500930382445e-06], ['p->location', 7.796500930382445e-06], ['ploc;', 7.796500930382445e-06], ['this->blength_;', 7.796500930382445e-06], ['Expression::make_slice_info(array,', 7.796500930382445e-06], ['vals->push_back(Expression::make_type_descriptor(this->element_type_,', 7.796500930382445e-06], ["ret->push_back(']');", 7.796500930382445e-06], ['libgo/go/runtime/hashmap.go.', 7.796500930382445e-06], ['&valsize))', 7.796500930382445e-06], ['Type::make_array_type(uint8_type,', 7.796500930382445e-06], ['z,', 7.796500930382445e-06], ['allowed");', 7.796500930382445e-06], ['bpvt;', 7.796500930382445e-06], ['(keysize', 7.796500930382445e-06], ['Map_type::max_key_size)', 7.796500930382445e-06], ['Map_type::max_val_size)', 7.796500930382445e-06], ['reflect', 7.796500930382445e-06], ['bucket_size);', 7.796500930382445e-06], ['uintptr', 7.796500930382445e-06], ['perhaps', 7.796500930382445e-06], ['max_align', 7.796500930382445e-06], ['"overflow",', 7.796500930382445e-06], ['may_send', 7.796500930382445e-06], ['may_receive', 7.796500930382445e-06], ['element_type);', 7.796500930382445e-06], ['scase_type', 7.796500930382445e-06], ['receive,', 7.796500930382445e-06], ['&*p;', 7.796500930382445e-06], ['sorted.', 7.796500930382445e-06], ['n.length()', 7.796500930382445e-06], ['p->name();', 7.796500930382445e-06], ['++pmf;', 7.796500930382445e-06], ['introduced.', 7.796500930382445e-06], ['fntype->is_varargs();', 7.796500930382445e-06], ['m)', 7.796500930382445e-06], ['this->methods_.begin();', 7.796500930382445e-06], ['this->methods_.end();', 7.796500930382445e-06], ['Bindings(NULL);', 7.796500930382445e-06], ['(is_ambiguous', 7.796500930382445e-06], ['*is_ambiguous', 7.796500930382445e-06], ['sense', 7.796500930382445e-06], ['T1.', 7.796500930382445e-06], ['this->is_error_', 7.796500930382445e-06], ['name",', 7.796500930382445e-06], ['(this->seen_in_compare_is_identity_)', 7.796500930382445e-06], ['this->named_btype_;', 7.796500930382445e-06], ['(base->classification())', 7.796500930382445e-06], ['(!gogo->backend()->set_placeholder_struct_type(bt,', 7.796500930382445e-06], ['this->is_placeholder_', 7.796500930382445e-06], ['gogo->backend()->placeholder_struct_type(this->name(),', 7.796500930382445e-06], ['completely', 7.796500930382445e-06], ['(!this->seen_in_get_backend_)', 7.796500930382445e-06], ['(this->in_function_', 7.796500930382445e-06], ['Named_type*>::const_iterator', 7.796500930382445e-06], ['seen->begin();', 7.796500930382445e-06], ['seen->end();', 7.796500930382445e-06], ['seen->push_back(nt);', 7.796500930382445e-06], ['methods);', 7.796500930382445e-06], ['fnt', 7.796500930382445e-06], ['fp', 7.796500930382445e-06], ['dereferences', 7.796500930382445e-06], ['counter);', 7.796500930382445e-06], ['++counter;', 7.796500930382445e-06], ['adjusts', 7.796500930382445e-06], ['Interface_method_tables**', 7.796500930382445e-06], ['Gogo::unpack_hidden_name(name);', 7.796500930382445e-06], ['found_level', 7.796500930382445e-06], ['sublevel', 7.796500930382445e-06], ['(found_level', 7.796500930382445e-06], ['found_level)', 7.796500930382445e-06], ['FOUND_LEVEL', 7.796500930382445e-06], ['found_level;', 7.796500930382445e-06], ['this->named_object_->resolve();', 7.796500930382445e-06], ['go_error_at(this->named_object_->location(),', 7.796500930382445e-06], ['this->warned_', 7.796500930382445e-06], ['this->warn();', 7.796500930382445e-06], ['no->declare_as_type();', 7.796500930382445e-06], ['__cxa_atexit.', 7.796500930382445e-06], ['linking', 7.796500930382445e-06], ['support,', 7.796500930382445e-06], ['chunk', 7.796500930382445e-06], ['stuff', 7.796500930382445e-06], ['gdb', 7.796500930382445e-06], ['--with-cpu', 7.796500930382445e-06], ['collect2.', 7.796500930382445e-06], ['default_use_cxa_atexit=no', 7.796500930382445e-06], ['Configuration', 7.796500930382445e-06], ['major', 7.796500930382445e-06], ['supported"', 7.796500930382445e-06], ['i[34567]86-*-*)', 7.796500930382445e-06], ['mmintrin.h', 7.796500930382445e-06], ['xmmintrin.h', 7.796500930382445e-06], ['pmmintrin.h', 7.796500930382445e-06], ['tmmintrin.h', 7.796500930382445e-06], ['bmi2intrin.h', 7.796500930382445e-06], ['hppa*-*-*)', 7.796500930382445e-06], ['mips*-*-*)', 7.796500930382445e-06], ['fused-madd.opt', 7.796500930382445e-06], ['sh-*-*)', 7.796500930382445e-06], ['"x$with_multilib_list"', 7.796500930382445e-06], ['targets,', 7.796500930382445e-06], ['Common', 7.796500930382445e-06], ['libraries.', 7.796500930382445e-06], ['x86', 7.796500930382445e-06], ['processors', 7.796500930382445e-06], ['MUST', 7.796500930382445e-06], ['x86-64', 7.796500930382445e-06], ['tmake_file="t-slibgcc"', 7.796500930382445e-06], ['machine-specific', 7.796500930382445e-06], ['minor', 7.796500930382445e-06], ['frv-*-*linux*', 7.796500930382445e-06], ['provided.', 7.796500930382445e-06], ['targets.', 7.796500930382445e-06], ['target_has_targetdm=yes', 7.796500930382445e-06], ['xm_defines=POSIX', 7.796500930382445e-06], ['newlib', 7.796500930382445e-06], ['aarch64/aarch64-elf.h', 7.796500930382445e-06], ['alpha/elf.h', 7.796500930382445e-06], ['alpha/elf.opt"', 7.796500930382445e-06], ['with_endian=little', 7.796500930382445e-06], ['big|little)', 7.796500930382445e-06], ['supported.";', 7.796500930382445e-06], ['128-bit', 7.796500930382445e-06], ['EABI', 7.796500930382445e-06], ['arm/bpabi.h', 7.796500930382445e-06], ['GNU/Linux', 7.796500930382445e-06], ['"$with_float"', 7.796500930382445e-06], ['arm/unknown-elf.h', 7.796500930382445e-06], ['target_cpu_cname="arm7tdmi"', 7.796500930382445e-06], ['bfin/elf.h', 7.796500930382445e-06], ['${with_float}', 7.796500930382445e-06], ['"x${enable_multilib}"', 7.796500930382445e-06], ['extra_programs="${extra_programs}', 7.796500930382445e-06], ['x$enable_as_accelerator', 7.796500930382445e-06], ['moxie/t-moxie"', 7.796500930382445e-06], ['target_cpu_default="MASK_PA_11"', 7.796500930382445e-06], ['pa/pa-hpux.h', 7.796500930382445e-06], ['pa/pa-hpux.opt', 7.796500930382445e-06], ['tmake_file="pa/t-pa', 7.796500930382445e-06], ['target,', 7.796500930382445e-06], ['pa/pa64-hpux.h"', 7.796500930382445e-06], ['hpux11.opt"', 7.796500930382445e-06], ['m64', 7.796500930382445e-06], ['i[34567]86-*-elfiamcu)', 7.796500930382445e-06], ['i[34567]86-*-linux*', 7.796500930382445e-06], ['i386/linux-common.h', 7.796500930382445e-06], ['TARGET_BI_ARCH=1"', 7.796500930382445e-06], ['with_cpu_64=generic', 7.796500930382445e-06], ['"$x86_cpus', 7.796500930382445e-06], ['x86_64-*-kfreebsd*-gnu)', 7.796500930382445e-06], ['x86_64-*-linux*)', 7.796500930382445e-06], ['tm-dwarf2.h', 7.796500930382445e-06], ['vxworksae.h', 7.796500930382445e-06], ['dbxcoff.h', 7.796500930382445e-06], ['i386/t-cygming', 7.796500930382445e-06], ['target_gtfiles="\\$(srcdir)/config/i386/winnt.c"', 7.796500930382445e-06], ['i386/cygming.opt', 7.796500930382445e-06], ['winnt.o', 7.796500930382445e-06], ['winnt-stubs.o"', 7.796500930382445e-06], ['winnt-cxx.o', 7.796500930382445e-06], ['*-w64-*)', 7.796500930382445e-06], ['target_cpu_default="0"', 7.796500930382445e-06], ['lm32/t-lm32"', 7.796500930382445e-06], ['fido-*-elf*)', 7.796500930382445e-06], ['default_cf_cpu=5206', 7.796500930382445e-06], ['default_cf_cpu=5475', 7.796500930382445e-06], ['microblazeel-*)', 7.796500930382445e-06], ['TARGET_BIG_ENDIAN_DEFAULT=0"', 7.796500930382445e-06], ['microblaze-*)', 7.796500930382445e-06], ['TARGET_BIG_ENDIAN_DEFAULT=4321"', 7.796500930382445e-06], ['microblaze/t-microblaze"', 7.796500930382445e-06], ['endian.', 7.796500930382445e-06], ['mips/gnu-user.h', 7.796500930382445e-06], ['mips/linux.h', 7.796500930382445e-06], ['mipsisa32r6*)', 7.796500930382445e-06], ['mipsisa32r2*)', 7.796500930382445e-06], ['mipsisa32*)', 7.796500930382445e-06], ['mips/n32-elf.h', 7.796500930382445e-06], ['MIPS_ISA_DEFAULT=3', 7.796500930382445e-06], ['rs6000/t-fprules', 7.796500930382445e-06], ['${enable_targets}', 7.796500930382445e-06], ['rs6000/aix.h', 7.796500930382445e-06], ['rs6000/xcoff.h', 7.796500930382445e-06], ['rs6000/aix-stdint.h"', 7.796500930382445e-06], ['tmake_file="rs6000/t-aix52', 7.796500930382445e-06], ['rs6000/aix64.opt"', 7.796500930382445e-06], ["thread_file='aix'", 7.796500930382445e-06], ['s390/t-s390"', 7.796500930382445e-06], ['sh/t-sh', 7.796500930382445e-06], ['t-sh', 7.796500930382445e-06], ['Second', 7.796500930382445e-06], ['endian', 7.796500930382445e-06], ['m2', 7.796500930382445e-06], ['m2e', 7.796500930382445e-06], ['m3', 7.796500930382445e-06], ['m3e', 7.796500930382445e-06], ['m4', 7.796500930382445e-06], ['m4-single', 7.796500930382445e-06], ['m4-single-only', 7.796500930382445e-06], ['m4a-single', 7.796500930382445e-06], ['m4a-single-only', 7.796500930382445e-06], ['m4a-nofpu', 7.796500930382445e-06], ['m2a-single', 7.796500930382445e-06], ['m2a-single-only', 7.796500930382445e-06], ['tmake_file="sparc/t-sparc', 7.796500930382445e-06], ['sparc/tso.h"', 7.796500930382445e-06], ['extra_options="${extra_options}"', 7.796500930382445e-06], ['rs6000-*-*)', 7.796500930382445e-06], ['arch=i486', 7.796500930382445e-06], ['${target_noncanonical}', 7.796500930382445e-06], ['infer', 7.796500930382445e-06], ['i[34567]86-*-*|x86_64-*-*)', 7.796500930382445e-06], ['m68k*-*-*)', 7.796500930382445e-06], ['visium-*-*)', 7.796500930382445e-06], ['--with-arch', 7.796500930382445e-06], ['${with_arch}', 7.796500930382445e-06], ['elif', 7.796500930382445e-06], ['R5900', 7.796500930382445e-06], ['--with', 7.796500930382445e-06], ['$val', 7.796500930382445e-06], ['ext_val=`echo', 7.796500930382445e-06], ['ARCH', 7.796500930382445e-06], ['grep', 7.796500930382445e-06], ['/dev/null;', 7.796500930382445e-06], ["'s/,.*$//'`", 7.796500930382445e-06], ['$ext_val', 7.796500930382445e-06], [']*[^,]*,[', 7.796500930382445e-06], ['supported_defaults="cpu', 7.796500930382445e-06], ['supported_defaults="cpu"', 7.796500930382445e-06], ['-v', 7.796500930382445e-06], ['#OK', 7.796500930382445e-06], ['"x$with_arch"', 7.796500930382445e-06], ['--with-arch=$with_arch"', 7.796500930382445e-06], ['tune_64;', 7.796500930382445e-06], ['ilp32f', 7.796500930382445e-06], ['lp64f', 7.796500930382445e-06], ['lp64d)', 7.796500930382445e-06], ['present.', 7.796500930382445e-06], ['tune_64', 7.796500930382445e-06], ['llsc', 7.796500930382445e-06], ['synci', 7.796500930382445e-06], ['lxc1-sxc1', 7.796500930382445e-06], ['double)', 7.796500930382445e-06], ['-d', 7.796500930382445e-06], ['7', 7.796500930382445e-06], ['$tmake_file"', 7.796500930382445e-06], ['target_cpu_default2="TARGET_CPU_$with_cpu"', 7.796500930382445e-06], ['IN_TARGET_CODE', 7.796500930382445e-06], ['"tm_p.h"', 7.796500930382445e-06], ['"emit-rtl.h"', 7.796500930382445e-06], ['constp', 7.796500930382445e-06], ['mov.l', 7.796500930382445e-06], ['(operands[1]);', 7.796500930382445e-06], ['copied);', 7.796500930382445e-06], ['BLKmode,', 7.796500930382445e-06], ['src_addr,', 7.796500930382445e-06], ['r6', 7.796500930382445e-06], ['6);', 7.796500930382445e-06], ['e.g.,', 7.796500930382445e-06], ['tmp0', 7.796500930382445e-06], ['*L_loop_long', 7.796500930382445e-06], ['*L_end_loop_long', 7.796500930382445e-06], ['addr2);', 7.796500930382445e-06], ['(L_loop_long);', 7.796500930382445e-06], ['addr1);', 7.796500930382445e-06], ['(gen_cmpstr_t', 7.796500930382445e-06], ['(L_end_loop_long));', 7.796500930382445e-06], ['(L_loop_long));', 7.796500930382445e-06], ['(gen_jump_compact', 7.796500930382445e-06], ['(L_end_loop_long);', 7.796500930382445e-06], ['-4));', 7.796500930382445e-06], ['tmp1,', 7.796500930382445e-06], ['copy_to_mode_reg', 7.796500930382445e-06], ['CONST_INT_P', 7.796500930382445e-06], ['<iomanip>', 7.796500930382445e-06], ['"brig-to-generic.h"', 7.796500930382445e-06], ['"hsa-brig-format.h"', 7.796500930382445e-06], ['"dumpfile.h"', 7.796500930382445e-06], ['"profile-count.h"', 7.796500930382445e-06], ['gccbrig_verbose;', 7.796500930382445e-06], ['m_analyzing', 7.796500930382445e-06], ['m_brig', 7.796500930382445e-06], ['fp32', 7.796500930382445e-06], ['(s_fp16_type)', 7.796500930382445e-06], ['(2);', 7.796500930382445e-06], ['unimplemented_entry_handler', 7.796500930382445e-06], ['brig_reg_use_analyzer', 7.796500930382445e-06], ['BrigKind', 7.796500930382445e-06], ['kind;', 7.796500930382445e-06], ['processed', 7.796500930382445e-06], ['(sec', 7.796500930382445e-06], ['section_header;', 7.796500930382445e-06], ['section_header->byteCount;', 7.796500930382445e-06], ['brig_blob;', 7.796500930382445e-06], ['m_cf;', 7.796500930382445e-06], ['(entry);', 7.796500930382445e-06], ['brig_basic_inst_handler', 7.796500930382445e-06], ['scan', 7.796500930382445e-06], ['entry_offset);', 7.796500930382445e-06], ['g;', 7.796500930382445e-06], ['label_index::const_iterator', 7.796500930382445e-06], ['func_decl)', 7.796500930382445e-06], ['looked', 7.796500930382445e-06], ['var_decl)', 7.796500930382445e-06], ['append_global', 7.796500930382445e-06], ['(var_decl);', 7.796500930382445e-06], ['(PHSA_HOST_DEF_PTR_PREFIX)', 7.796500930382445e-06], ['source_type', 7.796500930382445e-06], ['func_decl', 7.796500930382445e-06], ['src_size', 7.796500930382445e-06], ['build_reinterpret_to_uint', 7.796500930382445e-06], ['(src_type)', 7.796500930382445e-06], ["kernel's", 7.796500930382445e-06], ['align_padding', 7.796500930382445e-06], ['align_padding;', 7.796500930382445e-06], ['executing', 7.796500930382445e-06], ['rettype,', 7.796500930382445e-06], ['tree[nargs];', 7.796500930382445e-06], ['(decl_call);', 7.796500930382445e-06], ['gimplify_function_tree', 7.796500930382445e-06], ['*f', 7.796500930382445e-06], ['enabled', 7.796500930382445e-06], ['vec;', 7.796500930382445e-06], ['externally', 7.796500930382445e-06], ['set_inline', 7.796500930382445e-06], ['reg_use_info', 7.796500930382445e-06], ['mangleToBuffer', 7.796500930382445e-06], ['buflen,', 7.796500930382445e-06], ['Symbol', 7.796500930382445e-06], ['gcc.attribute', 7.796500930382445e-06], ['*md', 7.796500930382445e-06], ['(md', 7.796500930382445e-06], ['((*md->packages)[0]->toChars', 7.796500930382445e-06], ['"gcc")', 7.796500930382445e-06], ['!strcmp', 7.796500930382445e-06], ['PASSobj)', 7.796500930382445e-06], ['d->semanticRun', 7.796500930382445e-06], ['PASSobj;', 7.796500930382445e-06], ['import.', 7.796500930382445e-06], ['imports.', 7.796500930382445e-06], ['(isError', 7.796500930382445e-06], ['emitted,', 7.796500930382445e-06], ['in,', 7.796500930382445e-06], ['auto', 7.796500930382445e-06], ['(!fd', 7.796500930382445e-06], ['TemplateInstance', 7.796500930382445e-06], ['Anonymous', 7.796500930382445e-06], ['(d))', 7.796500930382445e-06], ['d->sinit', 7.796500930382445e-06], ['(d->sinit)', 7.796500930382445e-06], ['(d->isInstantiated', 7.796500930382445e-06], ['member->accept', 7.796500930382445e-06], ['has_errors', 7.796500930382445e-06], ['d->vtbl.dim;', 7.796500930382445e-06], ['"is', 7.796500930382445e-06], ['debugging.', 7.796500930382445e-06], ['*ie', 7.796500930382445e-06], ['initializerToExpression', 7.796500930382445e-06], ['CONST_DECL', 7.796500930382445e-06], ['aggregates.', 7.796500930382445e-06], ['emitted.', 7.796500930382445e-06], ['(IDENTIFIER_DSYMBOL', 7.796500930382445e-06], ['register_module_decl', 7.796500930382445e-06], ['decl));', 7.796500930382445e-06], ['(parm_decl)', 7.796500930382445e-06], ['(param_list,', 7.796500930382445e-06], ['restype', 7.796500930382445e-06], ['fndecl);', 7.796500930382445e-06], ['relayout_decl', 7.796500930382445e-06], ['DECL_HAS_VALUE_EXPR_P', 7.796500930382445e-06], ['(init);', 7.796500930382445e-06], ['(TRY_FINALLY_EXPR,', 7.796500930382445e-06], ['(old_context);', 7.796500930382445e-06], ['generator.', 7.796500930382445e-06], ['exist.', 7.796500930382445e-06], ['afterwards', 7.796500930382445e-06], ['STRUCTALIGN_DEFAULT)', 7.796500930382445e-06], ['(decl->csym))', 7.796500930382445e-06], ['PARM_DECL)', 7.796500930382445e-06], ['DECL_VIRTUAL_P', 7.796500930382445e-06], ["main'", 7.796500930382445e-06], ['main.', 7.796500930382445e-06], ['(newfntype)', 7.796500930382445e-06], ['maybe_set_intrinsic', 7.796500930382445e-06], ['cgraph_node::get_create', 7.796500930382445e-06], ['Have', 7.796500930382445e-06], ['compiler-generated', 7.796500930382445e-06], ['*var)', 7.796500930382445e-06], ['(!error_operand_p', 7.796500930382445e-06], ['Without', 7.796500930382445e-06], ['symbols,', 7.796500930382445e-06], ['alias;', 7.796500930382445e-06], ['(DECL_EXTERNAL', 7.796500930382445e-06], ['(function));', 7.796500930382445e-06], ['lang_hooks.dup_lang_specific_decl', 7.796500930382445e-06], ['(thunk);', 7.796500930382445e-06], ['(DECL_SECTION_NAME', 7.796500930382445e-06], ['copy_node', 7.796500930382445e-06], ['thunk;', 7.796500930382445e-06], ['writes', 7.796500930382445e-06], ['param);', 7.796500930382445e-06], ['compilation,', 7.796500930382445e-06], ['Back-end', 7.796500930382445e-06], ['(return_expr', 7.796500930382445e-06], ['accessible', 7.796500930382445e-06], ['build_class_instance', 7.796500930382445e-06], ['analogous', 7.796500930382445e-06], ['decl->ident', 7.796500930382445e-06], ['TYPE_STUB_DECL', 7.796500930382445e-06], ['artificial,', 7.796500930382445e-06], ['d_comdat_group', 7.796500930382445e-06], ['variable)', 7.796500930382445e-06], ['mutually', 7.796500930382445e-06], ['("const",', 7.796500930382445e-06], ['("pure",', 7.796500930382445e-06], ['("noreturn",', 7.796500930382445e-06], ['exposed', 7.796500930382445e-06], ["`gcc.attribute'", 7.796500930382445e-06], ['recognized', 7.796500930382445e-06], ['kept', 7.796500930382445e-06], ['(*node))', 7.796500930382445e-06], ['*node;', 7.796500930382445e-06], ['lookup_attribute', 7.796500930382445e-06], ['POINTER_TYPE);', 7.796500930382445e-06], ['("section', 7.796500930382445e-06], ['%q+D', 7.796500930382445e-06], ['("%q+D', 7.796500930382445e-06], ['(id)', 7.796500930382445e-06], ['string",', 7.796500930382445e-06], ['"cfgrtl.h"', 7.796500930382445e-06], ['tst', 7.796500930382445e-06], ['r1,r1', 7.796500930382445e-06], ['177)', 7.796500930382445e-06], ['175)))', 7.796500930382445e-06], ['retval;', 7.796500930382445e-06], ['*insn;', 7.796500930382445e-06], ['(set_rtx,', 7.796500930382445e-06], ['*insn)', 7.796500930382445e-06], ['(!REG_P', 7.796500930382445e-06], ['(result.insn))', 7.796500930382445e-06], ['(reg_set_p', 7.796500930382445e-06], ['trace_reg_uses_1', 7.796500930382445e-06], ['std::vector<basic_block>&', 7.796500930382445e-06], ['visited_bb,', 7.796500930382445e-06], ['(bb)', 7.796500930382445e-06], ['null\\n",', 7.796500930382445e-06], ['(INSN_P', 7.796500930382445e-06], ['PATTERN', 7.796500930382445e-06], ['(CALL_P', 7.796500930382445e-06], ['ei_edge', 7.796500930382445e-06], ['reachable', 7.796500930382445e-06], ['sh_treg_combine', 7.796500930382445e-06], ['cstore_normal', 7.796500930382445e-06], ['branch_condition_type_t', 7.796500930382445e-06], ['consists', 7.796500930382445e-06], ['cbranch_trace', 7.796500930382445e-06], ['cbranch.', 7.796500930382445e-06], ['rtx,', 7.796500930382445e-06], ['cond)', 7.796500930382445e-06], ['record_return_t', 7.796500930382445e-06], ['record_set_of_reg', 7.796500930382445e-06], ['combined', 7.796500930382445e-06], ['trace.', 7.796500930382445e-06], ['dominating_cstore);', 7.796500930382445e-06], ['try_eliminate_cstores', 7.796500930382445e-06], ['try_optimize_cbranch', 7.796500930382445e-06], ['RTL_PASS,', 7.796500930382445e-06], ['OPTGROUP_NONE,', 7.796500930382445e-06], ['mode:', 7.796500930382445e-06], ['("\\n[bb', 7.796500930382445e-06], ['(set_not_found,', 7.796500930382445e-06], ['new_entry.cstore_type', 7.796500930382445e-06], ['ccreg\\n");', 7.796500930382445e-06], ['irrelevant.', 7.796500930382445e-06], ['e.cstore.insn)', 7.796500930382445e-06], ['(!reg_dead_after_insn', 7.796500930382445e-06], ['(i->set_src', 7.796500930382445e-06], ['(reg_used_between_p', 7.796500930382445e-06], ['cstore.', 7.796500930382445e-06], ['trace.setcc.insn))', 7.796500930382445e-06], ['removed.', 7.796500930382445e-06], ['e.cstore.insn,', 7.796500930382445e-06], ['cstore\\n");', 7.796500930382445e-06], ['(reg_set_between_p', 7.796500930382445e-06], ['(trace.bb', 7.796500930382445e-06], ['comp', 7.796500930382445e-06], ['both,', 7.796500930382445e-06], ['trace))', 7.796500930382445e-06], ['non-inverting', 7.796500930382445e-06], ['cstores,', 7.796500930382445e-06], ['minimal', 7.796500930382445e-06], ['(comp_op0,', 7.796500930382445e-06], ['(i->comparison_rtx', 7.796500930382445e-06], ['(trace))', 7.796500930382445e-06], ['("replacing', 7.796500930382445e-06], ['new_i', 7.796500930382445e-06], ['i->setcc.insn));', 7.796500930382445e-06], ['i->setcc.insn))', 7.796500930382445e-06], ['(trace.branch_condition_rtx', 7.796500930382445e-06], ['(insn));', 7.796500930382445e-06], ['fun)', 7.796500930382445e-06], ['(any_condjump_p', 7.796500930382445e-06], ['Traverse(traverse_blocks', 7.796500930382445e-06], ['no->name()', 7.796500930382445e-06], ['"//', 7.796500930382445e-06], ['(out.fail())', 7.796500930382445e-06], ['(uintptr_t)', 7.796500930382445e-06], ['OPERATOR_CHANOP:', 7.796500930382445e-06], ['OPERATOR_LSHIFTEQ:', 7.796500930382445e-06], ['OPERATOR_RSHIFTEQ:', 7.796500930382445e-06], ['OPERATOR_LPAREN:', 7.796500930382445e-06], ['OPERATOR_LSQUARE:', 7.796500930382445e-06], ['Size', 7.796500930382445e-06], ['ft);', 7.796500930382445e-06], ['mt);', 7.796500930382445e-06], ['worklist_;', 7.796500930382445e-06], ['(tag', 7.796500930382445e-06], ['nt->real_type();', 7.796500930382445e-06], ['network', 7.796500930382445e-06], ['placing', 7.796500930382445e-06], ['*c,', 7.796500930382445e-06], ['*e0,', 7.796500930382445e-06], ['c->out', 7.796500930382445e-06], ['5))', 7.796500930382445e-06], ['*cmp)', 7.796500930382445e-06], ['Execute', 7.796500930382445e-06], ['netsort', 7.796500930382445e-06], ['sz,', 7.796500930382445e-06], ['SIZE;', 7.796500930382445e-06], ['MERGE_ELTSIZE', 7.796500930382445e-06], ['Restore', 7.796500930382445e-06], ['buf.printf', 7.796500930382445e-06], ['(c1)', 7.796500930382445e-06], ['real_from_string3', 7.796500930382445e-06], ['24)', 7.796500930382445e-06], ['16)', 7.796500930382445e-06], ['NaN.', 7.796500930382445e-06], ['representable.', 7.796500930382445e-06], ['buflen;', 7.796500930382445e-06], ['(buffer);', 7.796500930382445e-06], ['18,', 7.796500930382445e-06], ['seeing', 7.796500930382445e-06], ['contained', 7.796500930382445e-06], ['m->importedFrom', 7.796500930382445e-06], ['scans', 7.796500930382445e-06], ['ne', 7.796500930382445e-06], ['become', 7.796500930382445e-06], ['untrusted', 7.796500930382445e-06], ['tricky', 7.796500930382445e-06], ['encode', 7.796500930382445e-06], ['MOV', 7.796500930382445e-06], ['leaf', 7.796500930382445e-06], ['clobber', 7.796500930382445e-06], ['need_second_pass', 7.796500930382445e-06], ['cfun)', 7.796500930382445e-06], ['(cond),', 7.796500930382445e-06], ['*label', 7.796500930382445e-06], ['(aarch64_speculation_establish_tracker', 7.796500930382445e-06], ['putting', 7.796500930382445e-06], ['behaviour', 7.796500930382445e-06], ['ownership', 7.796500930382445e-06], ['Re-emit', 7.796500930382445e-06], ['(dump_kind', 7.796500930382445e-06], ['Keywords', 7.796500930382445e-06], ['TOKEN_INVALID:', 7.796500930382445e-06], ['TOKEN_EOF:', 7.796500930382445e-06], ['TOKEN_KEYWORD:', 7.796500930382445e-06], ['TOKEN_IDENTIFIER:', 7.796500930382445e-06], ['TOKEN_STRING:', 7.796500930382445e-06], ['TOKEN_OPERATOR:', 7.796500930382445e-06], ['TOKEN_CHARACTER:', 7.796500930382445e-06], ['TOKEN_INTEGER:', 7.796500930382445e-06], ['TOKEN_FLOAT:', 7.796500930382445e-06], ['TOKEN_IMAGINARY:', 7.796500930382445e-06], ['FILE*', 7.796500930382445e-06], ['(cur', 7.796500930382445e-06], ['ns;', 7.796500930382445e-06], ['saw_cpp_comment', 7.796500930382445e-06], ['(!this->require_line())', 7.796500930382445e-06], ['this->make_operator(OPERATOR_SEMICOLON,', 7.796500930382445e-06], ["'\\t':", 7.796500930382445e-06], ["'\\t'", 7.796500930382445e-06], ["'/':", 7.796500930382445e-06], ['\'"\':', 7.796500930382445e-06], ["'|':", 7.796500930382445e-06], ["'=':", 7.796500930382445e-06], ["':':", 7.796500930382445e-06], ['ci;', 7.796500930382445e-06], ['*VALUE', 7.796500930382445e-06], ['(((c', 7.796500930382445e-06], ['0x3f));', 7.796500930382445e-06], ['((p[1]', 7.796500930382445e-06], ['0x3f)', 7.796500930382445e-06], ['is_first', 7.796500930382445e-06], ['has_non_ascii_char', 7.796500930382445e-06], ['(cc', 7.796500930382445e-06], ['pstart);', 7.796500930382445e-06], ['KEYWORD_BREAK:', 7.796500930382445e-06], ['KEYWORD_CONTINUE:', 7.796500930382445e-06], ['KEYWORD_RETURN:', 7.796500930382445e-06], ["'+')", 7.796500930382445e-06], ['pnum', 7.796500930382445e-06], ['partial', 7.796500930382445e-06], ['s(pnum,', 7.796500930382445e-06], ['pnum);', 7.796500930382445e-06], ['s.c_str(),', 7.796500930382445e-06], ['(neg)', 7.796500930382445e-06], ['character,', 7.796500930382445e-06], ['*is_character', 7.796500930382445e-06], ['0xd800', 7.796500930382445e-06], ['((v', 7.796500930382445e-06], ['&value,', 7.796500930382445e-06], ['Token::make_string_token(value,', 7.796500930382445e-06], ['c1,', 7.796500930382445e-06], ['OPERATOR_INVALID;', 7.796500930382445e-06], ['c2)', 7.796500930382445e-06], ['pcheck', 7.796500930382445e-06], ['(saw_error)', 7.796500930382445e-06], ['pend[-1]', 7.796500930382445e-06], ['memcmp(p,', 7.796500930382445e-06], ['pcolon', 7.796500930382445e-06], ["'\\t'))", 7.796500930382445e-06], ['//go:linkname', 7.796500930382445e-06], ['GOPRAGMA_NOINTERFACE;', 7.796500930382445e-06], ['barriers,', 7.796500930382445e-06], ['8},', 7.796500930382445e-06], ['19},', 7.796500930382445e-06], ['Unicode_range*', 7.796500930382445e-06], ['ranges,', 7.796500930382445e-06], ['linear', 7.796500930382445e-06], ['lo', 7.796500930382445e-06], ['std::string::npos;', 7.796500930382445e-06], ['ent->fwdrefs;', 7.796500930382445e-06], ['ent->label;', 7.796500930382445e-06], ['labels,', 7.796500930382445e-06], ['(level);', 7.796500930382445e-06], ['tsi_start', 7.796500930382445e-06], ['tsi_stmt', 7.796500930382445e-06], ['input_location);', 7.796500930382445e-06], ['"break"', 7.796500930382445e-06], ['(s->loc);', 7.796500930382445e-06], ['begins', 7.796500930382445e-06], ['Leave', 7.796500930382445e-06], ['LabelStatement', 7.796500930382445e-06], ['(label))', 7.796500930382445e-06], ['(to);', 7.796500930382445e-06], ['(this->break_label_);', 7.796500930382445e-06], ['(this->continue_label_', 7.796500930382445e-06], ['`scope', 7.796500930382445e-06], ['(s->condition),', 7.796500930382445e-06], ['s->condition->type);', 7.796500930382445e-06], ['ifbody', 7.796500930382445e-06], ['`for', 7.796500930382445e-06], ['(level_loop);', 7.796500930382445e-06], ['lcontinue', 7.796500930382445e-06], ['this->push_continue_label', 7.796500930382445e-06], ['this->pop_continue_label', 7.796500930382445e-06], ['(lcontinue);', 7.796500930382445e-06], ['(build_vcondition', 7.796500930382445e-06], ['(lbreak)', 7.796500930382445e-06], ['`foreach', 7.796500930382445e-06], ['(s->ident)', 7.796500930382445e-06], ['this->func_->searchLabel', 7.796500930382445e-06], ['(label', 7.796500930382445e-06], ['jumping', 7.796500930382445e-06], ['this->check_goto', 7.796500930382445e-06], ['this->define_label', 7.796500930382445e-06], ['(s->statement)', 7.796500930382445e-06], ['CaseStatement', 7.796500930382445e-06], ['condition);', 7.796500930382445e-06], ['caselabel', 7.796500930382445e-06], ['(s->hasVars)', 7.796500930382445e-06], ['(s->exp);', 7.796500930382445e-06], ['(statement', 7.796500930382445e-06], ['(statement);', 7.796500930382445e-06], ['catches', 7.796500930382445e-06], ['stmt_list;', 7.796500930382445e-06], ['val));', 7.796500930382445e-06], ['outputs,', 7.796500930382445e-06], ['(TREE_PURPOSE', 7.796500930382445e-06], ['output;', 7.796500930382445e-06], ['"go-optimize.h"', 7.796500930382445e-06], ['rune_type', 7.796500930382445e-06], ['new_type', 7.796500930382445e-06], ['this->pkgpath_', 7.796500930382445e-06], ['this->prefix_', 7.796500930382445e-06], ['firstP', 7.796500930382445e-06], ['this->package_->package_name();', 7.796500930382445e-06], ['package_name)', 7.796500930382445e-06], ['"init")', 7.796500930382445e-06], ['package->set_location(location);', 7.796500930382445e-06], ['ln', 7.796500930382445e-06], ['package->package_name();', 7.796500930382445e-06], ['init_stmts,', 7.796500930382445e-06], ['initfn', 7.796500930382445e-06], ['Find_vars', 7.796500930382445e-06], ['std::pair<Seen_objects::iterator,', 7.796500930382445e-06], ['Variables', 7.796500930382445e-06], ['(Var_inits::iterator', 7.796500930382445e-06], ['++pvar)', 7.796500930382445e-06], ['dependency.', 7.796500930382445e-06], ['"initialization', 7.796500930382445e-06], ['init_bfn', 7.796500930382445e-06], ['(init_fndecl', 7.796500930382445e-06], ['go_error_at(no->location(),', 7.796500930382445e-06], ['this->backend()->expression_statement(init_bfn,', 7.796500930382445e-06], ['(Gogo::is_sink_name(name))', 7.796500930382445e-06], ['Block(NULL,', 7.796500930382445e-06], ['Variable(p->type(),', 7.796500930382445e-06], ['"func', 7.796500930382445e-06], ['(!type->is_method())', 7.796500930382445e-06], ['type->receiver()->type();', 7.796500930382445e-06], ['"may', 7.796500930382445e-06], ['this->functions_.back().function;', 7.796500930382445e-06], ['tid,', 7.796500930382445e-06], ['go:linkname', 7.796500930382445e-06], ['go_name,', 7.796500930382445e-06], ['used:', 7.796500930382445e-06], ['this->traverse(&traverse);', 7.796500930382445e-06], ["statement's", 7.796500930382445e-06], ['pindex);', 7.796500930382445e-06], ['s->traverse_contents(this);', 7.796500930382445e-06], ['lower_parse_tree(this,', 7.796500930382445e-06], ['passes.', 7.796500930382445e-06], ['fe->named_object();', 7.796500930382445e-06], ['(fn->func_expression()', 7.796500930382445e-06], ['looping', 7.796500930382445e-06], ['Finalize_methods', 7.796500930382445e-06], ['((*p)->is_variable())', 7.796500930382445e-06], ['Check_types_traverse', 7.796500930382445e-06], ['var->clear_init();', 7.796500930382445e-06], ['go_error_at(constant->location(),', 7.796500930382445e-06], ['constant->set_error();', 7.796500930382445e-06], ['Find_eval_ordering', 7.796500930382445e-06], ['Statement*)', 7.796500930382445e-06], ['Binary_expression*', 7.796500930382445e-06], ['Order_eval', 7.796500930382445e-06], ['traverse_statements),', 7.796500930382445e-06], ['Variable_declaration_statement*', 7.796500930382445e-06], ['vds', 7.796500930382445e-06], ['orig_init', 7.796500930382445e-06], ['side-effect,', 7.796500930382445e-06], ['Statement::STATEMENT_ASSIGNMENT:', 7.796500930382445e-06], ['pexpr', 7.796500930382445e-06], ['(!var->is_global()', 7.796500930382445e-06], ['var->add_preinit_statement(this->gogo_,', 7.796500930382445e-06], ['Find_shortcut', 7.796500930382445e-06], ['Shortcuts', 7.796500930382445e-06], ['pshortcut);', 7.796500930382445e-06], ['flatten(this,', 7.796500930382445e-06], ['this->gogo_;', 7.796500930382445e-06], ['(orig_fntype->is_method())', 7.796500930382445e-06], ['s->determine_types();', 7.796500930382445e-06], ['can_recover', 7.796500930382445e-06], ['Named_object::make_function_declaration(name,', 7.796500930382445e-06], ['results->empty())', 7.796500930382445e-06], ['Inline_within_budget', 7.796500930382445e-06], ['Named_object*>::const_iterator', 7.796500930382445e-06], ['arrange', 7.796500930382445e-06], ['enclosing_(enclosing),', 7.796500930382445e-06], ['(this->closure_var_', 7.796500930382445e-06], ['Label(label_name);', 7.796500930382445e-06], ['"previous', 7.796500930382445e-06], ['(Traverse::traverse_variables', 7.796500930382445e-06], ['Traverse::traverse_constants', 7.796500930382445e-06], ['Traverse::traverse_expressions', 7.796500930382445e-06], ['(this->defer_stack_', 7.796500930382445e-06], ['exp->write_string(name);', 7.796500930382445e-06], ['(result_vars', 7.796500930382445e-06], ['imp->read_escape();', 7.796500930382445e-06], ['Typed_identifier(name,', 7.796500930382445e-06], ['*presults', 7.796500930382445e-06], ['no->package(),', 7.796500930382445e-06], ['is_inlinable', 7.796500930382445e-06], ['elsewhere,', 7.796500930382445e-06], ['this->fndecl_', 7.796500930382445e-06], ['parm_bvar', 7.796500930382445e-06], ['vars.push_back(bvar);', 7.796500930382445e-06], ['parm_ref', 7.796500930382445e-06], ['Bstatement**', 7.796500930382445e-06], ['occurs.', 7.796500930382445e-06], ['end_loc,', 7.796500930382445e-06], ['this->defer_stack(end_loc));', 7.796500930382445e-06], ['call->get_backend(&context);', 7.796500930382445e-06], ['undefer,', 7.796500930382445e-06], ['this->statements_.size());', 7.796500930382445e-06], ['(Traverse::traverse_expressions', 7.796500930382445e-06], ['this->bindings_->begin_definitions();', 7.796500930382445e-06], ['this->bindings_->end_definitions();', 7.796500930382445e-06], ['(tv', 7.796500930382445e-06], ['(body[off', 7.796500930382445e-06], ['(nl', 7.796500930382445e-06], ['lineno_pos', 7.796500930382445e-06], ['(this->preinit_', 7.796500930382445e-06], ['(this->is_global_)', 7.796500930382445e-06], ['&this->init_);', 7.796500930382445e-06], ['this->init_->type(),', 7.796500930382445e-06], ['(this->is_type_switch_var_', 7.796500930382445e-06], ['this->type_->is_nil_constant_as_type())', 7.796500930382445e-06], ['report_error)', 7.796500930382445e-06], ['clause,', 7.796500930382445e-06], ['type->make_non_abstract_type();', 7.796500930382445e-06], ['init->determine_type_no_context();', 7.796500930382445e-06], ['context(this->type_,', 7.796500930382445e-06], ['this->init_->type();', 7.796500930382445e-06], ['decl_init', 7.796500930382445e-06], ['Backend*', 7.796500930382445e-06], ['backend->error_variable();', 7.796500930382445e-06], ['is_parameter', 7.796500930382445e-06], ['function->func_value()->get_decl();', 7.796500930382445e-06], ['variable;', 7.796500930382445e-06], ['go_assert(this->classification_', 7.796500930382445e-06], ['NAMED_OBJECT_ERRONEOUS:', 7.796500930382445e-06], ['NAMED_OBJECT_CONST:', 7.796500930382445e-06], ['NAMED_OBJECT_TYPE:', 7.796500930382445e-06], ['NAMED_OBJECT_TYPE_DECLARATION:', 7.796500930382445e-06], ['NAMED_OBJECT_VAR:', 7.796500930382445e-06], ['NAMED_OBJECT_RESULT_VAR:', 7.796500930382445e-06], ['NAMED_OBJECT_SINK:', 7.796500930382445e-06], ['NAMED_OBJECT_FUNC:', 7.796500930382445e-06], ['this->bindings_.end())', 7.796500930382445e-06], ['"redefinition', 7.796500930382445e-06], ['context->function()->func_value();', 7.796500930382445e-06], ['Aliases::const_iterator', 7.796500930382445e-06], ['Constant', 7.796500930382445e-06], ['(long_double_type_node),', 7.796500930382445e-06], ['real_to_integer', 7.796500930382445e-06], ['().cl', 7.796500930382445e-06], ['(&q,', 7.796500930382445e-06], ['fntype->set_is_builtin();', 7.796500930382445e-06], ['this->add_dot_import_object(no);', 7.796500930382445e-06], ['wide_int_binop', 7.796500930382445e-06], ['-INF', 7.796500930382445e-06], ['signs', 7.796500930382445e-06], ['(w0.get_precision', 7.796500930382445e-06], ['[LB,', 7.796500930382445e-06], ['ub;', 7.796500930382445e-06], ['Order', 7.796500930382445e-06], ['(w0,', 7.796500930382445e-06], ['pairs.', 7.796500930382445e-06], ['&vr0_lb,', 7.796500930382445e-06], ['&vr0_ub,', 7.796500930382445e-06], ['&vr1_lb,', 7.796500930382445e-06], ['&vr1_ub,', 7.796500930382445e-06], ['RES_UB]', 7.796500930382445e-06], ['out,', 7.796500930382445e-06], ['min1', 7.796500930382445e-06], ['max1', 7.796500930382445e-06], ['(prod0,', 7.796500930382445e-06], ['MAX0', 7.796500930382445e-06], ['overflow_undefined);', 7.796500930382445e-06], ['overflow_pos', 7.796500930382445e-06], ['monotonically.', 7.796500930382445e-06], ['BIT_IOR_EXPR)', 7.796500930382445e-06], ['Calculates', 7.796500930382445e-06], ['&vr1_max)', 7.796500930382445e-06], ['vr1_min;', 7.796500930382445e-06], ['&must_be_nonzero0,', 7.796500930382445e-06], ['&may_be_nonzero0,', 7.796500930382445e-06], ['&must_be_nonzero1,', 7.796500930382445e-06], ['&may_be_nonzero1)', 7.796500930382445e-06], ['VARYING.', 7.796500930382445e-06], ['respective', 7.796500930382445e-06], ['swapped', 7.796500930382445e-06], ['around,', 7.796500930382445e-06], ['[MIN,', 7.796500930382445e-06], ['min_value))', 7.796500930382445e-06], ['max_value;', 7.796500930382445e-06], ['outer_prec,', 7.796500930382445e-06], ['(outer_prec,', 7.796500930382445e-06], ['(divisor_min,', 7.796500930382445e-06], ['dividend_min,', 7.796500930382445e-06], ['dividend_max,', 7.796500930382445e-06], ['(prec),', 7.796500930382445e-06], ['"opts.h"', 7.796500930382445e-06], ['doing_semantic_analysis_p', 7.796500930382445e-06], ['<arg>', 7.796500930382445e-06], ['middle-end.', 7.796500930382445e-06], ['deps_add_target', 7.796500930382445e-06], ["('\\\\');", 7.796500930382445e-06], ['modules.', 7.796500930382445e-06], ['global.params.useInvariants', 7.796500930382445e-06], ['global.params.useIn', 7.796500930382445e-06], ['global.params.useOut', 7.796500930382445e-06], ['global.params.useSwitchError', 7.796500930382445e-06], ['extern(C++)', 7.796500930382445e-06], ['global.params.useDeprecated', 7.796500930382445e-06], ['DIAGNOSTICoff;', 7.796500930382445e-06], ['d_option.deps', 7.796500930382445e-06], ['d_option.deps_skip_system', 7.796500930382445e-06], ['d_option.deps_filename', 7.796500930382445e-06], ['d_option_lang_mask', 7.796500930382445e-06], ['("bad', 7.796500930382445e-06], ['global.params.doDocComments', 7.796500930382445e-06], ['global.params.doHdrGeneration', 7.796500930382445e-06], ['(op))', 7.796500930382445e-06], ['form.', 7.796500930382445e-06], ['empty_aggregate_p', 7.796500930382445e-06], ['(d_option.fonly', 7.796500930382445e-06], ['(in_fnames[i],', 7.796500930382445e-06], ['(&buffer);', 7.796500930382445e-06], ['modules.push', 7.796500930382445e-06], ['Load', 7.796500930382445e-06], ['File::create', 7.796500930382445e-06], ['(machine_mode', 7.796500930382445e-06], ['(d_cent_type))', 7.796500930382445e-06], ['long_double_type_node;', 7.796500930382445e-06], ['complex_float_type_node;', 7.796500930382445e-06], ['complex_double_type_node;', 7.796500930382445e-06], ['complex_long_double_type_node;', 7.796500930382445e-06], ['(mode);', 7.796500930382445e-06], ['mode);', 7.796500930382445e-06], ['d_signed_or_unsigned_type', 7.796500930382445e-06], ['d_global_bindings_p', 7.796500930382445e-06], ['equivalent.', 7.796500930382445e-06], ['(y)', 7.796500930382445e-06], ['FUNCFRAME_INFO:', 7.796500930382445e-06], ['ggc_cleared_alloc<struct', 7.796500930382445e-06], ['lt;', 7.796500930382445e-06], ['lang_decl>', 7.796500930382445e-06], ['node)', 7.796500930382445e-06], ['LIBSTDCXX', 7.796500930382445e-06], ['LIBSTDCXX_PROFILE', 7.796500930382445e-06], ['LIBPHOBOS', 7.796500930382445e-06], ['LIBPHOBOS_PROFILE', 7.796500930382445e-06], ['LIBDRUNTIME', 7.796500930382445e-06], ['LIBDRUNTIME_PROFILE', 7.796500930382445e-06], ['PHOBOS_NOLINK', 7.796500930382445e-06], ['saw_profile_flag', 7.796500930382445e-06], ['libphobos', 7.796500930382445e-06], ['only_source_option', 7.796500930382445e-06], ['(suffix', 7.796500930382445e-06], ['library,', 7.796500930382445e-06], ['out[baselen', 7.796500930382445e-06], ['!static_link)', 7.796500930382445e-06], ['m_is_kernel', 7.796500930382445e-06], ['m_name', 7.796500930382445e-06], ['m_kernarg_max_align', 7.796500930382445e-06], ['m_has_function_calls_with_barriers', 7.796500930382445e-06], ['packet', 7.796500930382445e-06], ['expand_or_call_builtin', 7.796500930382445e-06], ['(long_long_integer_type_node,', 7.796500930382445e-06], ['*reg)', 7.796500930382445e-06], ['gccbrig_reg_size', 7.796500930382445e-06], ['gccbrig_hsa_reg_id', 7.796500930382445e-06], ['std::vector<std::pair<tree,', 7.796500930382445e-06], ['size_t>', 7.796500930382445e-06], ['(ivar),', 7.796500930382445e-06], ['ivar,', 7.796500930382445e-06], ['(abs_id_var),', 7.796500930382445e-06], ['(branch_after,', 7.796500930382445e-06], ['abs', 7.796500930382445e-06], ['callees', 7.796500930382445e-06], ['omitted.', 7.796500930382445e-06], ['work-group', 7.796500930382445e-06], ['trivial', 7.796500930382445e-06], ['emits', 7.796500930382445e-06], ['restrict_void_ptr', 7.796500930382445e-06], ['build_function_type_list', 7.796500930382445e-06], ['restrict_char_ptr;', 7.796500930382445e-06], ['group_local_offset_arg);', 7.796500930382445e-06], ['&stmts);', 7.796500930382445e-06], ['(name));', 7.796500930382445e-06], ['(brig_opcode))', 7.796500930382445e-06], ['call_operands;', 7.796500930382445e-06], ['(operand_type);', 7.796500930382445e-06], ['(BRIG_OPCODE_WORKITEMABSID,', 7.796500930382445e-06], ['sum);', 7.796500930382445e-06], ['(BRIG_OPCODE_WORKITEMID,', 7.796500930382445e-06], ['BRIG_OPCODE_WORKITEMABSID:', 7.796500930382445e-06], ['brig_inner_type', 7.796500930382445e-06], ['BRIG_TYPE_U32;', 7.796500930382445e-06], ['BRIG_TYPE_U64;', 7.796500930382445e-06], ['BRIG_TYPE_U32)', 7.796500930382445e-06], ['(builtin),', 7.796500930382445e-06], ['(builtin', 7.796500930382445e-06], ['element_size;', 7.796500930382445e-06], ['input_element_type', 7.796500930382445e-06], ['(output_element_type,', 7.796500930382445e-06], ['vector_cst', 7.796500930382445e-06], ['readability.', 7.796500930382445e-06], ['"vec_out");', 7.796500930382445e-06], ['vec_tmp_assign', 7.796500930382445e-06], ['vec);', 7.796500930382445e-06], ['(vec_tmp_assign);', 7.796500930382445e-06], ['BRIG_OPCODE_ARRIVEFBAR:', 7.796500930382445e-06], ['BRIG_OPCODE_INITFBAR:', 7.796500930382445e-06], ['BRIG_OPCODE_JOINFBAR:', 7.796500930382445e-06], ['BRIG_OPCODE_LEAVEFBAR:', 7.796500930382445e-06], ['BRIG_OPCODE_RELEASEFBAR:', 7.796500930382445e-06], ['BRIG_OPCODE_WAITFBAR:', 7.796500930382445e-06], ['node;', 7.796500930382445e-06], ['(n);', 7.796500930382445e-06], ['(gccbrig_is_float_type', 7.796500930382445e-06], ['(brig_inner_type))', 7.796500930382445e-06], ['id_val_map::iterator', 7.796500930382445e-06], ['m_id_val_defs.find', 7.796500930382445e-06], ['(reg_var);', 7.796500930382445e-06], ['s->assignment_statement();', 7.796500930382445e-06], ['Builtin_call_expression::BUILTIN_APPEND)', 7.796500930382445e-06], ['(ue', 7.796500930382445e-06], ['(aie', 7.796500930382445e-06], ['aie->end()', 7.796500930382445e-06], ['!aie->array()->type()->is_slice_type())', 7.796500930382445e-06], ['Node', 7.796500930382445e-06], ['closures', 7.796500930382445e-06], ['go_error_at(expr->location(),', 7.796500930382445e-06], ['this->worklist_->push_back(no);', 7.796500930382445e-06], ['(*pexpr)->call_expression();', 7.796500930382445e-06], ['rewrite', 7.796500930382445e-06], ['IR', 7.796500930382445e-06], ['init->location();', 7.796500930382445e-06], ['&this->statements_added_);', 7.796500930382445e-06], ['Statement::make_statement(call,', 7.796500930382445e-06], ['fesetround', 7.796500930382445e-06], ['intrinsic_code', 7.796500930382445e-06], ['intrinsic.', 7.796500930382445e-06], ['*td', 7.796500930382445e-06], ['rettype', 7.796500930382445e-06], ['INTRINSIC,', 7.796500930382445e-06], ['(intrinsic_code', 7.796500930382445e-06], ['intrinsic,', 7.796500930382445e-06], ['ptr[bitnum', 7.796500930382445e-06], ['(float', 7.796500930382445e-06], ['copysign', 7.796500930382445e-06], ['parmn);', 7.796500930382445e-06], ['(parmn);', 7.796500930382445e-06], ['(parmn,', 7.796500930382445e-06], ['(overflow);', 7.796500930382445e-06], ['ubyte', 7.796500930382445e-06], ['ushort', 7.796500930382445e-06], ['ulong', 7.796500930382445e-06], ['callexp;', 7.796500930382445e-06], ['(intrinsic,', 7.796500930382445e-06], ['callexp);', 7.796500930382445e-06], ['pool', 7.796500930382445e-06], ['m_parent.m_cf->m_current_bind_expr', 7.796500930382445e-06], ['m_parent.m_cf->m_current_bind_expr;', 7.796500930382445e-06], ['this->object();', 7.796500930382445e-06], ["gc's", 7.796500930382445e-06], ['this->expr();', 7.796500930382445e-06], ['&ss);', 7.796500930382445e-06], ['strip_packed_prefix(gogo,', 7.796500930382445e-06], ['node_object', 7.796500930382445e-06], ['(var->is_address_taken()', 7.796500930382445e-06], ['var->is_non_escaping_address_taken());', 7.796500930382445e-06], ['ESCAPE_MASK))', 7.796500930382445e-06], ['Node::ESCAPE_HEAP:', 7.796500930382445e-06], ['Node::ESCAPE_NONE:', 7.796500930382445e-06], ['(this->state_', 7.796500930382445e-06], ['(e->classification())', 7.796500930382445e-06], ['Expression::EXPRESSION_CALL:', 7.796500930382445e-06], ['Expression::EXPRESSION_ALLOCATION:', 7.796500930382445e-06], ['this->expr()->var_expression()', 7.796500930382445e-06], ['this->expr()->var_expression()->named_object();', 7.796500930382445e-06], ['call->args()->begin();', 7.796500930382445e-06], ['fnname', 7.796500930382445e-06], ['fnname;', 7.796500930382445e-06], ['fntype)', 7.796500930382445e-06], ['n->state(this,', 7.796500930382445e-06], ['retvals', 7.796500930382445e-06], ['ind', 7.796500930382445e-06], ['"debug-escape-hash', 7.796500930382445e-06], ['dsts.begin();', 7.796500930382445e-06], ['dsts.end();', 7.796500930382445e-06], ['discovery', 7.796500930382445e-06], ['context_;', 7.796500930382445e-06], ['go_inform(s->location(),', 7.796500930382445e-06], ['call->args()->end();', 7.796500930382445e-06], ['Node::make_node(*p);', 7.796500930382445e-06], ['(gogo->debug_escape_level()', 7.796500930382445e-06], ['int(Node::ESCAPE_HEAP)', 7.796500930382445e-06], ['go_inform((*pexpr)->location(),', 7.796500930382445e-06], ['call->builtin_call_expression();', 7.796500930382445e-06], ['appendee', 7.796500930382445e-06], ['tce->expr()->type();', 7.796500930382445e-06], ['tce->type();', 7.796500930382445e-06], ['((ft->is_string_type()', 7.796500930382445e-06], ['tt->is_slice_type())', 7.796500930382445e-06], ['(ft->is_slice_type()', 7.796500930382445e-06], ['tt->is_string_type())', 7.796500930382445e-06], ['(ft->integer_type()', 7.796500930382445e-06], ['tt->is_string_type()))', 7.796500930382445e-06], ['string([]byte),', 7.796500930382445e-06], ['string([]rune),', 7.796500930382445e-06], ['[]byte(string),', 7.796500930382445e-06], ['[]rune(string),', 7.796500930382445e-06], ['string(rune)', 7.796500930382445e-06], ['Node::make_node(*p));', 7.796500930382445e-06], ['struct_node', 7.796500930382445e-06], ['Expression::EXPRESSION_ARRAY_INDEX:', 7.796500930382445e-06], ['(aie->end()', 7.796500930382445e-06], ['Expression::EXPRESSION_FIELD_REFERENCE:', 7.796500930382445e-06], ['(fntype->is_method()', 7.796500930382445e-06], ['call_node', 7.796500930382445e-06], ['arg_nodes.begin();', 7.796500930382445e-06], ['untracked",', 7.796500930382445e-06], ['(*p)->ast_format(gogo).c_str());', 7.796500930382445e-06], ['call_node->ast_format(gogo).c_str());', 7.796500930382445e-06], ['rcvr_node', 7.796500930382445e-06], ['(til', 7.796500930382445e-06], ['param_no', 7.796500930382445e-06], ['go_assert(param_no', 7.796500930382445e-06], ['param_node', 7.796500930382445e-06], ['Node::make_node(param_no);', 7.796500930382445e-06], ['this->assign_from_note(note,', 7.796500930382445e-06], ['call_state->retvals,', 7.796500930382445e-06], ['(enc', 7.796500930382445e-06], ['(dst->expr()', 7.796500930382445e-06], ['e->array_index_expression();', 7.796500930382445e-06], ['(e->field_reference_expression()', 7.796500930382445e-06], ['(src->expr()->classification())', 7.796500930382445e-06], ['Expression::EXPRESSION_BOOLEAN:', 7.796500930382445e-06], ['Expression::EXPRESSION_STRING:', 7.796500930382445e-06], ['Expression::EXPRESSION_INTEGER:', 7.796500930382445e-06], ['Expression::EXPRESSION_FLOAT:', 7.796500930382445e-06], ['Expression::EXPRESSION_COMPLEX:', 7.796500930382445e-06], ['Expression::EXPRESSION_NIL:', 7.796500930382445e-06], ['Expression::EXPRESSION_IOTA:', 7.796500930382445e-06], ['Literal', 7.796500930382445e-06], ['scalars.', 7.796500930382445e-06], ['dst_state', 7.796500930382445e-06], ['src->state(this->context_,', 7.796500930382445e-06], ['Gogo::is_sink_name(p->name()))', 7.796500930382445e-06], ['//go:noescape', 7.796500930382445e-06], ['address-of', 7.796500930382445e-06], ['level.value(),', 7.796500930382445e-06], ['extra_loop_depth);', 7.796500930382445e-06], ['src_no', 7.796500930382445e-06], ['(src_is_param', 7.796500930382445e-06], ['param:', 7.796500930382445e-06], ['(std::set<Node*>::const_iterator', 7.796500930382445e-06], ['src_leaks', 7.796500930382445e-06], ['mod_loop_depth);', 7.796500930382445e-06], ['underlying;', 7.796500930382445e-06], ['(src_leaks)', 7.796500930382445e-06], ['this->flood(level.decrease(),', 7.796500930382445e-06], ['src_leaks)', 7.796500930382445e-06], ['e->array_index_expression()->array();', 7.796500930382445e-06], ['fntype->add_parameter_note(i,', 7.796500930382445e-06], ['Node*>::iterator', 7.796500930382445e-06], ['pat)', 7.796500930382445e-06], ['values_out,', 7.796500930382445e-06], ['values)', 7.796500930382445e-06], ['(branch_target_bb', 7.796500930382445e-06], ['prev_visited_bb.back', 7.796500930382445e-06], ['v.insn', 7.796500930382445e-06], ['v.bb', 7.796500930382445e-06], ['v.value', 7.796500930382445e-06], ['values_out.push_back', 7.796500930382445e-06], ['pred_bb_count', 7.796500930382445e-06], ['operand_entries->byteCount', 7.796500930382445e-06], ['&operand_entries->bytes)[i];', 7.796500930382445e-06], ['*operand_data,', 7.796500930382445e-06], ['brigVar->modifier', 7.796500930382445e-06], ['BRIG_VARIABLE_DEFINITION;', 7.796500930382445e-06], ['~BRIG_TYPE_ARRAY);', 7.796500930382445e-06], ['(brigVar->type);', 7.796500930382445e-06], ['BRIG_SEGMENT_READONLY', 7.796500930382445e-06], ['(var_decl,', 7.796500930382445e-06], ['*brigVar', 7.796500930382445e-06], ['var_size,', 7.796500930382445e-06], ['(var_name))', 7.796500930382445e-06], ['BRIG_SEGMENT_READONLY)', 7.796500930382445e-06], ['m_parent.global_variable', 7.796500930382445e-06], ['build_variable', 7.796500930382445e-06], ['(ref.kind', 7.796500930382445e-06], ['BrigOperandOperandList', 7.796500930382445e-06], ['operand;', 7.796500930382445e-06], ['&operand;', 7.796500930382445e-06], ['BRIG_OPCODE_LDA)', 7.796500930382445e-06], ['brig_inst).segment;', 7.796500930382445e-06], ['BrigInstMem', 7.796500930382445e-06], ['BrigInstAtomic', 7.796500930382445e-06], ['(arg_symbol);', 7.796500930382445e-06], ['local_size', 7.796500930382445e-06], ['LDA', 7.796500930382445e-06], ['group/private', 7.796500930382445e-06], ['(symbol_base', 7.796500930382445e-06], ['(addr', 7.796500930382445e-06], ['global,', 7.796500930382445e-06], ['(brig_inst->operands);', 7.796500930382445e-06], ['tree_element_type', 7.796500930382445e-06], ['BRIG_TYPE_F16:', 7.796500930382445e-06], ['BRIG_TYPE_F32:', 7.796500930382445e-06], ['next_data);', 7.796500930382445e-06], ['BRIG_TYPE_F64:', 7.796500930382445e-06], ['BRIG_TYPE_SIG64:', 7.796500930382445e-06], ['BRIG_TYPE_SIG32:', 7.796500930382445e-06], ['bytes_left', 7.796500930382445e-06], ['(bytes_left', 7.796500930382445e-06], ['half_to_float', 7.796500930382445e-06], ['build_or_analyze_operands', 7.796500930382445e-06], ['(operand_data->kind', 7.796500930382445e-06], ['(inst_expr))', 7.796500930382445e-06], ['(inst_expr);', 7.796500930382445e-06], ['(operand));', 7.796500930382445e-06], ['(is_kernel)', 7.796500930382445e-06], ['vec_alloc', 7.796500930382445e-06], ['BRIG_KIND_DIRECTIVE_VARIABLE);', 7.796500930382445e-06], ['varhandler.build_variable', 7.796500930382445e-06], ['ret_value;', 7.796500930382445e-06], ['2011-2019', 7.796500930382445e-06], ['add,', 7.796500930382445e-06], ['left-shift', 7.796500930382445e-06], ['m_binary_func', 7.796500930382445e-06], ['thinks', 7.796500930382445e-06], ['27,', 7.796500930382445e-06], ['(ExpressionTree', 7.796500930382445e-06], ['find_sequences', 7.796500930382445e-06], ['*const', 7.796500930382445e-06], ['op->is_unary', 7.796500930382445e-06], ['("const', 7.796500930382445e-06], ['num_ops', 7.796500930382445e-06], ['two.', 7.796500930382445e-06], ['(next_pow2', 7.796500930382445e-06], ['(next_pow10', 7.796500930382445e-06], ['(num_ops', 7.796500930382445e-06], ['("/*', 7.796500930382445e-06], ['ARCH,', 7.796500930382445e-06], ['opnd0,', 7.796500930382445e-06], ['m_parent.m_cf->start_new_bb', 7.796500930382445e-06], ['instr_type,', 7.796500930382445e-06], ['"0x1p%d",', 7.796500930382445e-06], ['log10_2;', 7.796500930382445e-06], ['19', 7.796500930382445e-06], ['(instr_type,', 7.796500930382445e-06], ['BrigAtomicOperation8_t', 7.796500930382445e-06], ['atomic_opcode', 7.796500930382445e-06], ['this->t_;', 7.796500930382445e-06], ['std::vector<Btyped_identifier>&);', 7.796500930382445e-06], ['Btype*);', 7.796500930382445e-06], ['bstat,', 7.796500930382445e-06], ['libname,', 7.796500930382445e-06], ['build_function_type_list(integer_type_node,', 7.796500930382445e-06], ['const_ptr_type_node,', 7.796500930382445e-06], ['build_function_type_list(double_type_node,', 7.796500930382445e-06], ['build_function_type_list(long_double_type_node,', 7.796500930382445e-06], ['build_function_type_list(ptr_type_node,', 7.796500930382445e-06], ['layout_type(type);', 7.796500930382445e-06], ['causing', 7.796500930382445e-06], ['fields)', 7.796500930382445e-06], ['VIEW_CONVERT_EXPR,', 7.796500930382445e-06], ['length_tree', 7.796500930382445e-06], ['sizetype,', 7.796500930382445e-06], ['TYPE_NAME(ret)', 7.796500930382445e-06], ['this->make_type(ret);', 7.796500930382445e-06], ['placeholder->get_tree();', 7.796500930382445e-06], ['typedef.', 7.796500930382445e-06], ['copy;', 7.796500930382445e-06], ['make_node(RECORD_TYPE);', 7.796500930382445e-06], ['build_decl(BUILTINS_LOCATION,', 7.796500930382445e-06], ['(expr_tree', 7.796500930382445e-06], ['get_identifier_from_string(name);', 7.796500930382445e-06], ['DECL_INITIAL(decl)', 7.796500930382445e-06], ['expr_tree;', 7.796500930382445e-06], ['TREE_CONSTANT(ret)', 7.796500930382445e-06], ['cond_tree', 7.796500930382445e-06], ['convert(computed_type,', 7.796500930382445e-06], ['right_tree', 7.796500930382445e-06], ['constructs', 7.796500930382445e-06], ['vals.size());', 7.796500930382445e-06], ['vals.begin();', 7.796500930382445e-06], ['vals.end();', 7.796500930382445e-06], ['DECL_CHAIN(field))', 7.796500930382445e-06], ['append_to_statement_list(val,', 7.796500930382445e-06], ['(is_constant)', 7.796500930382445e-06], ['TREE_TYPE(init_tree)', 7.796500930382445e-06], ['rhs_tree', 7.796500930382445e-06], ['fntree', 7.796500930382445e-06], ['stat_tree', 7.796500930382445e-06], ['build2_loc(location.gcc_location(),', 7.796500930382445e-06], ['(DECL_STRUCT_FUNCTION(decl)', 7.796500930382445e-06], ['(std::vector<Bstatement*>::const_iterator', 7.796500930382445e-06], ['statements.begin();', 7.796500930382445e-06], ['statements.end();', 7.796500930382445e-06], ['std::vector<Bvariable*>&', 7.796500930382445e-06], ['BLOCK_SUPERCONTEXT(block_tree)', 7.796500930382445e-06], ['block_tree;', 7.796500930382445e-06], ['(std::vector<Bvariable*>::const_iterator', 7.796500930382445e-06], ['bblock->get_tree();', 7.796500930382445e-06], ['gcc_assert(TREE_CODE(bind_tree)', 7.796500930382445e-06], ['BIND_EXPR);', 7.796500930382445e-06], ['boolean_type_node);', 7.796500930382445e-06], ['gcc_assert(TREE_CODE(type_tree)', 7.796500930382445e-06], ['type_tree;', 7.796500930382445e-06], ['*pstatement', 7.796500930382445e-06], ['resolve_unique_section(decl,', 7.796500930382445e-06], ['func_tree', 7.796500930382445e-06], ['label->get_tree();', 7.796500930382445e-06], ['TREE_THIS_VOLATILE(decl)', 7.796500930382445e-06], ['error_mark_node);', 7.796500930382445e-06], ['go_preserve_from_gc(defs[i]);', 7.796500930382445e-06], ['this->var_->var_value();', 7.796500930382445e-06], ['assignment");', 7.796500930382445e-06], ['Move_subexpressions', 7.796500930382445e-06], ['&this->rhs_);', 7.796500930382445e-06], ['this->lhs_->begin();', 7.796500930382445e-06], ['this->lhs_->end();', 7.796500930382445e-06], ['this->val_->traverse_subexpressions(&moe);', 7.796500930382445e-06], ['ref->set_is_lvalue();', 7.796500930382445e-06], ['expr_(expr),', 7.796500930382445e-06], ['context->backend()->block_statement(bblock);', 7.796500930382445e-06], ['decrement', 7.796500930382445e-06], ['(!is_constant_function)', 7.796500930382445e-06], ['(interface_method', 7.796500930382445e-06], ['STATEMENT_GO)', 7.796500930382445e-06], ['func_to_call', 7.796500930382445e-06], ['recover_arg', 7.796500930382445e-06], ['Expression::make_nil(this->location());', 7.796500930382445e-06], ['naked', 7.796500930382445e-06], ['(vals_count', 7.796500930382445e-06], ['(results_count', 7.796500930382445e-06], ['vals->push_back(Expression::make_call_result(call,', 7.796500930382445e-06], ['ast_dump_context->dump_label_name(this->label_);', 7.796500930382445e-06], ['switching', 7.796500930382445e-06], ['Unnamed_label(Linemap::unknown_location());', 7.796500930382445e-06], ['this->statements_->may_fall_through();', 7.796500930382445e-06], ['BREAK_LABEL', 7.796500930382445e-06], ['"default:";', 7.796500930382445e-06], ['(p->traverse(traverse)', 7.796500930382445e-06], ['last_fallthrough_label', 7.796500930382445e-06], ['falls', 7.796500930382445e-06], ['(from', 7.796500930382445e-06], ['p->dump_clause(ast_dump_context);', 7.796500930382445e-06], ['Case_clauses*', 7.796500930382445e-06], ['this->clauses_->traverse(traverse);', 7.796500930382445e-06], ['"switch', 7.796500930382445e-06], ['this->val_->type(),', 7.796500930382445e-06], ['this->clauses_->may_fall_through();', 7.796500930382445e-06], ['this->statements_->traverse(traverse);', 7.796500930382445e-06], ['descriptor_temp', 7.796500930382445e-06], ['lhs->set_is_lvalue();', 7.796500930382445e-06], ['this->val_,', 7.796500930382445e-06], ['this->val_', 7.796500930382445e-06], ['(this->closed_', 7.796500930382445e-06], ['recvok)', 7.796500930382445e-06], ['recvok);', 7.796500930382445e-06], ['this->set_case(b,', 7.796500930382445e-06], ['valref,', 7.796500930382445e-06], ['cref', 7.796500930382445e-06], ['Expression::make_temporary_reference(recvok,', 7.796500930382445e-06], ['selectgo.', 7.796500930382445e-06], ['scases_ref', 7.796500930382445e-06], ['scases_ref,', 7.796500930382445e-06], ['order_ref', 7.796500930382445e-06], ['order_ref,', 7.796500930382445e-06], ['For_statement', 7.796500930382445e-06], ['cond_loc);', 7.796500930382445e-06], ['LABEL_EXPR.', 7.796500930382445e-06], ['ast_dump_context->unindent();', 7.796500930382445e-06], ['For_statement*', 7.796500930382445e-06], ['Statement::make_tuple_assignment(lhs,', 7.796500930382445e-06], ['len_temp;', 7.796500930382445e-06], ['this->call_builtin(gogo,', 7.796500930382445e-06], ['init->add_statement(len_temp);', 7.796500930382445e-06], ['zexpr,', 7.796500930382445e-06], ['init->add_statement(s);', 7.796500930382445e-06], ['post->add_statement(s);', 7.796500930382445e-06], ['for_temp', 7.796500930382445e-06], ['value_ref', 7.796500930382445e-06], ['Block(iter_init,', 7.796500930382445e-06], ['Expression::make_temporary_reference(next_index_temp,', 7.796500930382445e-06], ['hiter', 7.796500930382445e-06], ['ok_temp', 7.796500930382445e-06], ['inst.segment', 7.796500930382445e-06], ['&this->token_;', 7.796500930382445e-06], ['comma.', 7.796500930382445e-06], ['this->gogo_->lookup(name,', 7.796500930382445e-06], ['ArrayType', 7.796500930382445e-06], ['StructType', 7.796500930382445e-06], ['MapType', 7.796500930382445e-06], ['(token->is_op(OPERATOR_LSQUARE))', 7.796500930382445e-06], ['this->signature(NULL,', 7.796500930382445e-06], ['issue_error', 7.796500930382445e-06], ['(!this->peek_token()->is_op(OPERATOR_RSQUARE))', 7.796500930382445e-06], ['%<]%>");', 7.796500930382445e-06], ['%<}%>', 7.796500930382445e-06], ['newline");', 7.796500930382445e-06], ['string_lit', 7.796500930382445e-06], ['(!token->is_op(OPERATOR_SEMICOLON)', 7.796500930382445e-06], ['!token->is_op(OPERATOR_RCURLY)', 7.796500930382445e-06], ['til.begin();', 7.796500930382445e-06], ['til.end();', 7.796500930382445e-06], ['"chan"', 7.796500930382445e-06], ['(!this->peek_token()->is_op(OPERATOR_LPAREN))', 7.796500930382445e-06], ['%<(%>");', 7.796500930382445e-06], ['ParameterDecl', 7.796500930382445e-06], ['(token->is_op(OPERATOR_DOT))', 7.796500930382445e-06], ['this->unget_token(Token::make_identifier_token(name,', 7.796500930382445e-06], ['just_saw_comma', 7.796500930382445e-06], ['(!this->peek_token()->is_op(OPERATOR_ELLIPSIS))', 7.796500930382445e-06], ['"%<...%>', 7.796500930382445e-06], ['til,', 7.796500930382445e-06], ['*saw_error', 7.796500930382445e-06], ['StatementList', 7.796500930382445e-06], ['MethodSpec', 7.796500930382445e-06], ['FunctionDecl', 7.796500930382445e-06], ['varg,', 7.796500930382445e-06], ['(this->*pfn)(varg,', 7.796500930382445e-06], ['(!this->advance_token()->is_op(OPERATOR_RPAREN))', 7.796500930382445e-06], ['ConstSpec', 7.796500930382445e-06], ['redefinition', 7.796500930382445e-06], ['no->is_variable())', 7.796500930382445e-06], ['val_no', 7.796500930382445e-06], ['val_var', 7.796500930382445e-06], ['Expression::make_var_reference(val_no,', 7.796500930382445e-06], ['(!this->gogo_->in_global_scope())', 7.796500930382445e-06], ['(!val_no->is_sink())', 7.796500930382445e-06], ['(val_no->is_variable())', 7.796500930382445e-06], ['val_no->var_value()->add_preinit_statement(this->gogo_,', 7.796500930382445e-06], ['(!no->is_sink())', 7.796500930382445e-06], ['no->var_value()->add_preinit_statement(this->gogo_,', 7.796500930382445e-06], ['dummy->var_value()->add_preinit_statement(this->gogo_,', 7.796500930382445e-06], ['type_guard->type();', 7.796500930382445e-06], ['vals->front(),', 7.796500930382445e-06], ['"a,', 7.796500930382445e-06], ['p_range_clause,', 7.796500930382445e-06], ['(p_range_clause', 7.796500930382445e-06], ['token->is_keyword(KEYWORD_RANGE))', 7.796500930382445e-06], ['(p_type_switch', 7.796500930382445e-06], ['(this->advance_token()->is_op(OPERATOR_LCURLY))', 7.796500930382445e-06], ['("ignoring', 7.796500930382445e-06], ['//go:%s', 7.796500930382445e-06], ['"before', 7.796500930382445e-06], ['pragma_check[i].name);', 7.796500930382445e-06], ['(til->size()', 7.796500930382445e-06], ['Operand', 7.796500930382445e-06], ['is_parenthesized)', 7.796500930382445e-06], ['Expression::make_type(t,', 7.796500930382445e-06], ['value");', 7.796500930382445e-06], ['Expression::make_unknown_reference(named_object,', 7.796500930382445e-06], ['(this->is_erroneous_function_)', 7.796500930382445e-06], ['ue->set_no_error_message();', 7.796500930382445e-06], ['ue;', 7.796500930382445e-06], ['(is_parenthesized', 7.796500930382445e-06], ['*is_parenthesized', 7.796500930382445e-06], ['this->gogo_->current_function();', 7.796500930382445e-06], ['LiteralValue', 7.796500930382445e-06], ['Element', 7.796500930382445e-06], ['is_name', 7.796500930382445e-06], ['omitted', 7.796500930382445e-06], ['hold_enclosing_vars.swap(this->enclosing_vars_);', 7.796500930382445e-06], ['Bc_stack*', 7.796500930382445e-06], ['this->break_stack_', 7.796500930382445e-06], ['this->continue_stack_', 7.796500930382445e-06], ['(this->break_stack_', 7.796500930382445e-06], ['(this->continue_stack_', 7.796500930382445e-06], ['(this->peek_token()->is_op(OPERATOR_LCURLY))', 7.796500930382445e-06], ['(expr->is_error_expression())', 7.796500930382445e-06], ['*is_type_switch)', 7.796500930382445e-06], ['(!this->peek_token()->is_op(OPERATOR_COLON))', 7.796500930382445e-06], ['UnaryExpr', 7.796500930382445e-06], ['token->op();', 7.796500930382445e-06], ['int)(x)', 7.796500930382445e-06], ['Type::make_channel_type(false,', 7.796500930382445e-06], ['"parse', 7.796500930382445e-06], ['SimpleStmt', 7.796500930382445e-06], ['IfStmt', 7.796500930382445e-06], ['(this->peek_token()->is_keyword(KEYWORD_FALLTHROUGH))', 7.796500930382445e-06], ['SendStmt', 7.796500930382445e-06], ['this->verify_not_sink(exp);', 7.796500930382445e-06], ['(!this->peek_token()->is_eof()', 7.796500930382445e-06], ['(vals->size()', 7.796500930382445e-06], ['"two', 7.796500930382445e-06], ['lhs->front();', 7.796500930382445e-06], ['lhs->back();', 7.796500930382445e-06], ['stat_location);', 7.796500930382445e-06], ['(saw_simple_stat)', 7.796500930382445e-06], ['(saw_send_stmt)', 7.796500930382445e-06], ['ExprCaseClause', 7.796500930382445e-06], ['TypeCaseClause', 7.796500930382445e-06], ['(type_switch.found)', 7.796500930382445e-06], ['(have_type_switch_block)', 7.796500930382445e-06], ['this->push_break_statement(statement,', 7.796500930382445e-06], ['saw_default', 7.796500930382445e-06], ['is_default', 7.796500930382445e-06], ['(is_default)', 7.796500930382445e-06], ['(*saw_default)', 7.796500930382445e-06], ['*saw_default', 7.796500930382445e-06], ['"case"', 7.796500930382445e-06], ['is_default)', 7.796500930382445e-06], ['(token->is_keyword(KEYWORD_CASE))', 7.796500930382445e-06], ['(token->is_keyword(KEYWORD_DEFAULT))', 7.796500930382445e-06], ['*is_default', 7.796500930382445e-06], ['%<case%>', 7.796500930382445e-06], ['%<default%>");', 7.796500930382445e-06], ['(!var_name.empty())', 7.796500930382445e-06], ['varname,', 7.796500930382445e-06], ['saw_comma', 7.796500930382445e-06], ['recv_var', 7.796500930382445e-06], ['(recv_var', 7.796500930382445e-06], ['(!e->is_sink_expression())', 7.796500930382445e-06], ['Condition', 7.796500930382445e-06], ['*cond', 7.796500930382445e-06], ['*post', 7.796500930382445e-06], ['this->gogo_->add_label_reference(token->identifier(),', 7.796500930382445e-06], ['MODshared', 7.796500930382445e-06], ['fixup_anonymous_offset', 7.796500930382445e-06], ['(fields);', 7.796500930382445e-06], ['(context,', 7.796500930382445e-06], ['alignsize', 7.796500930382445e-06], ['TYPE_NEXT_VARIANT', 7.796500930382445e-06], ['TypeVisitor', 7.796500930382445e-06], ['8-bit', 7.796500930382445e-06], ['(fnparams,', 7.796500930382445e-06], ['t->ctype;', 7.796500930382445e-06], ['`static', 7.796500930382445e-06], ['ModuleInfo.', 7.796500930382445e-06], ['moduleinfo_type;', 7.796500930382445e-06], ['compiler_dso_type;', 7.796500930382445e-06], ['dso_registry_fn;', 7.796500930382445e-06], ['get_internal_fn', 7.796500930382445e-06], ['constructors,', 7.796500930382445e-06], ['get_compiler_dso_type', 7.796500930382445e-06], ['CompilerDSOData', 7.796500930382445e-06], ['(dso_registry_fn)', 7.796500930382445e-06], ['build_dso_cdtor_fn', 7.796500930382445e-06], ['(mref)', 7.796500930382445e-06], ['*mi', 7.796500930382445e-06], ['decl->aimports[i];', 7.796500930382445e-06], ['decl->members->dim;', 7.796500930382445e-06], ['(*decl->members)[i];', 7.796500930382445e-06], ['(zero_cst);', 7.796500930382445e-06], ['(pack_type', 7.796500930382445e-06], ['64;', 7.796500930382445e-06], ['BRIG_REGISTER_KIND_CONTROL:', 7.796500930382445e-06], ['BRIG_REGISTER_KIND_SINGLE:', 7.796500930382445e-06], ['BRIG_REGISTER_KIND_DOUBLE:', 7.796500930382445e-06], ['BRIG_REGISTER_KIND_QUAD:', 7.796500930382445e-06], ['full_size', 7.796500930382445e-06], ['conform', 7.796500930382445e-06], ['(dump,', 7.796500930382445e-06], ['Thos', 7.796500930382445e-06], ['Jan.', 7.796500930382445e-06], ['NOT', 7.796500930382445e-06], ['by:', 7.796500930382445e-06], ['California', 7.796500930382445e-06], ['USA', 7.796500930382445e-06], ['GMult', 7.796500930382445e-06], ['internal_max', 7.796500930382445e-06], ['operator-', 7.796500930382445e-06], ['(int);', 7.796500930382445e-06], ['(&f);', 7.796500930382445e-06], ['ai,', 7.796500930382445e-06], ['ri;', 7.796500930382445e-06], ['ab[64],', 7.796500930382445e-06], ['(ab,', 7.796500930382445e-06], ['sizeof(ab),', 7.796500930382445e-06], ['%c', 7.796500930382445e-06], ['ab,', 7.796500930382445e-06], ['symbol_for_code,', 7.796500930382445e-06], ['"false"));', 7.796500930382445e-06], ['image)', 7.796500930382445e-06], ['(image);', 7.796500930382445e-06], ['(double)a,', 7.796500930382445e-06], ['double)a,', 7.796500930382445e-06], ['&f)', 7.796500930382445e-06], ['long(0);', 7.796500930382445e-06], ['(ld);', 7.796500930382445e-06], ['ld);', 7.796500930382445e-06], ['xm1;', 7.796500930382445e-06], ['20;', 7.796500930382445e-06], ['Yes', 7.796500930382445e-06], ['BMinusU2;', 7.796500930382445e-06], ['TwoForty;', 7.796500930382445e-06], ['E9;', 7.796500930382445e-06], ['Third;', 7.796500930382445e-06], ['HInvrse;', 7.796500930382445e-06], ['Precision;', 7.796500930382445e-06], ['ErrCnt[Failure]', 7.796500930382445e-06], ['("Comparison', 7.796500930382445e-06], ['(Four', 7.796500930382445e-06], ['O.K.\\n");', 7.796500930382445e-06], ['Zero);', 7.796500930382445e-06], ['Radix.str());', 7.796500930382445e-06], ['"Radix', 7.796500930382445e-06], ['(Precision', 7.796500930382445e-06], ['Three)', 7.796500930382445e-06], ['((One', 7.796500930382445e-06], ['(Z1', 7.796500930382445e-06], ['((Z1', 7.796500930382445e-06], ['(X);', 7.796500930382445e-06], ['Yes;', 7.796500930382445e-06], ['No;', 7.796500930382445e-06], ['"*', 7.796500930382445e-06], ['wrong.\\n");', 7.796500930382445e-06], ['1");', 7.796500930382445e-06], ['(F9', 7.796500930382445e-06], ['Other;', 7.796500930382445e-06], ['(U2', 7.796500930382445e-06], ['Rounded;', 7.796500930382445e-06], ['Chopped;', 7.796500930382445e-06], ['chopped', 7.796500930382445e-06], ['rounded.\\n");', 7.796500930382445e-06], ['(!((X', 7.796500930382445e-06], ['Zero)))', 7.796500930382445e-06], ['(RDiv', 7.796500930382445e-06], ['(GAddSub', 7.796500930382445e-06], ['rounds', 7.796500930382445e-06], ['chops.\\n");', 7.796500930382445e-06], ['Half);', 7.796500930382445e-06], ['NoTrials);', 7.796500930382445e-06], ['(Serious);', 7.796500930382445e-06], ['Monot', 7.796500930382445e-06], ['(Z);', 7.796500930382445e-06], ['Q;', 7.796500930382445e-06], ['Z));', 7.796500930382445e-06], ['C;', 7.796500930382445e-06], ['C)', 7.796500930382445e-06], ['Underflow;', 7.796500930382445e-06], ['PseudoZero;', 7.796500930382445e-06], ['(I)', 7.796500930382445e-06], ['UfThold)', 7.796500930382445e-06], ['("X', 7.796500930382445e-06], ['X.str(),', 7.796500930382445e-06], ['++Indx)', 7.796500930382445e-06], ['=",', 7.796500930382445e-06], ['discovered', 7.796500930382445e-06], ['Random1)', 7.796500930382445e-06], ['>().main();', 7.796500930382445e-06], ['json::value.', 7.796500930382445e-06], ['key/value', 7.796500930382445e-06], ['json::value,', 7.796500930382445e-06], ['m_map.begin', 7.796500930382445e-06], ['*ptr;', 7.796500930382445e-06], ['"true");', 7.796500930382445e-06], ['(arr,', 7.796500930382445e-06], ['(number', 7.796500930382445e-06], ['requirements.', 7.796500930382445e-06], ['wildcard,', 7.796500930382445e-06], ['substitute', 7.796500930382445e-06], ['(DECL_TEMPLATE_PARMS', 7.796500930382445e-06], ['(tmpl));', 7.796500930382445e-06], ['(location_of', 7.796500930382445e-06], ['deduced', 7.796500930382445e-06], ['PROTO', 7.796500930382445e-06], ['(ARGUMENT_PACK_ARGS', 7.796500930382445e-06], ['implication', 7.796500930382445e-06], ['learning', 7.796500930382445e-06], ['learn', 7.796500930382445e-06], ['Here,', 7.796500930382445e-06], ['learn_implication', 7.796500930382445e-06], ['child,', 7.796500930382445e-06], ['cxt)', 7.796500930382445e-06], ['non-dependent', 7.796500930382445e-06], ['(constr)', 7.796500930382445e-06], ['expanding_concept_sentinel', 7.796500930382445e-06], ['normalize_logical_operation', 7.796500930382445e-06], ['(EXPR_CONSTR,', 7.796500930382445e-06], ['(PARM_CONSTR,', 7.796500930382445e-06], ['(check', 7.796500930382445e-06], ['TEMPLATE_TYPE_PARM)', 7.796500930382445e-06], ['(!same_type_p', 7.796500930382445e-06], ['boolean_type_node))', 7.796500930382445e-06], ['PRED_CONSTR_EXPR', 7.796500930382445e-06], ['PARM_CONSTR_PARMS', 7.796500930382445e-06], ['tmpl_constr', 7.796500930382445e-06], ['build_constraints', 7.796500930382445e-06], ['CONSTRAINED_PARM_PROTOTYPE', 7.796500930382445e-06], ['(constr);', 7.796500930382445e-06], ['(check,', 7.796500930382445e-06], ['(parms);', 7.796500930382445e-06], ['(src_parm)', 7.796500930382445e-06], ['is_non_type', 7.796500930382445e-06], ['(parm)', 7.796500930382445e-06], ['parm_list', 7.796500930382445e-06], ['(parm_list,', 7.796500930382445e-06], ['(parm_list);', 7.796500930382445e-06], ['(check_args,', 7.796500930382445e-06], ['(c1,', 7.796500930382445e-06], ['targs', 7.796500930382445e-06], ['EXPR_CONSTR_EXPR', 7.796500930382445e-06], ['TYPE_CONSTR_TYPE', 7.796500930382445e-06], ['ICONV_CONSTR_TYPE', 7.796500930382445e-06], ['DEDUCT_CONSTR_EXPR', 7.796500930382445e-06], ['cp_unevaluated_operand', 7.796500930382445e-06], ['ill-formed', 7.796500930382445e-06], ['(cargs,', 7.796500930382445e-06], ['targs,', 7.796500930382445e-06], ['satisfied,', 7.796500930382445e-06], ['satisfy_associated_constraints', 7.796500930382445e-06], ['friend', 7.796500930382445e-06], ['constraints,', 7.796500930382445e-06], ['d2)', 7.796500930382445e-06], ['failures.', 7.796500930382445e-06], ['constraint_errors', 7.796500930382445e-06], ['elide', 7.796500930382445e-06], ['(constraint_expression_satisfied_p', 7.796500930382445e-06], ['CUR', 7.796500930382445e-06], ['dots', 7.796500930382445e-06], ['tags', 7.796500930382445e-06], ['glue', 7.796500930382445e-06], ['visible.', 7.796500930382445e-06], ['tname', 7.796500930382445e-06], ['ret[0]', 7.796500930382445e-06], ['"{abstract}"', 7.796500930382445e-06], ['ret->append(gogo->pkgpath());', 7.796500930382445e-06], ['(atomic_ptype,', 7.796500930382445e-06], ['atomic_type,', 7.796500930382445e-06], ['(TYPE_ARG_TYPES', 7.796500930382445e-06], ['(loc_range->m_loc);', 7.796500930382445e-06], ['fixit_obj->set', 7.796500930382445e-06], ['runtime.cc', 5.19766728692163e-06], ['libgo/runtime.', 5.19766728692163e-06], ['int32_t.', 5.19766728692163e-06], ['int64_t.', 5.19766728692163e-06], ['float64,', 5.19766728692163e-06], ['__complex', 5.19766728692163e-06], ['any,', 5.19766728692163e-06], ['structures', 5.19766728692163e-06], ['(bft)', 5.19766728692163e-06], ['RFT_VOID:', 5.19766728692163e-06], ['RFT_BOOL:', 5.19766728692163e-06], ['RFT_BOOLPTR:', 5.19766728692163e-06], ['RFT_INT:', 5.19766728692163e-06], ['RFT_INT32:', 5.19766728692163e-06], ['RFT_INT64:', 5.19766728692163e-06], ['RFT_UINT64:', 5.19766728692163e-06], ['RFT_RUNE:', 5.19766728692163e-06], ['RFT_UINTPTR:', 5.19766728692163e-06], ['RFT_FLOAT64:', 5.19766728692163e-06], ['RFT_COMPLEX64:', 5.19766728692163e-06], ['Type::lookup_complex_type("complex64");', 5.19766728692163e-06], ['RFT_COMPLEX128:', 5.19766728692163e-06], ['RFT_STRING:', 5.19766728692163e-06], ['RFT_POINTER:', 5.19766728692163e-06], ['RFT_SLICE:', 5.19766728692163e-06], ['RFT_MAP:', 5.19766728692163e-06], ['RFT_CHAN:', 5.19766728692163e-06], ['RFT_IFACE:', 5.19766728692163e-06], ['RFT_EFACE:', 5.19766728692163e-06], ['RFT_TYPE:', 5.19766728692163e-06], ['RFT_ARRAY2STRING:', 5.19766728692163e-06], ['RFT_ARRAY3STRING:', 5.19766728692163e-06], ['Expression::make_integer_ul(3,', 5.19766728692163e-06], ['RFT_ARRAY4STRING:', 5.19766728692163e-06], ['RFT_ARRAY5STRING:', 5.19766728692163e-06], ['e->type(),', 5.19766728692163e-06], ['Expression::make_cast(t,', 5.19766728692163e-06], ['go_assert(r);', 5.19766728692163e-06], ['Runtime_function', 5.19766728692163e-06], ['happens.', 5.19766728692163e-06], ['RFT_VOID', 5.19766728692163e-06], ['"runtime.def"', 5.19766728692163e-06], ['Runtime::NUMBER_OF_FUNCTIONS);', 5.19766728692163e-06], ['Runtime_function*', 5.19766728692163e-06], ['&runtime_functions[code];', 5.19766728692163e-06], ['result_types', 5.19766728692163e-06], ['param_count,', 5.19766728692163e-06], ['Every', 5.19766728692163e-06], ['codes,', 5.19766728692163e-06], ['Runtime::NUMBER_OF_FUNCTIONS;', 5.19766728692163e-06], ['name.c_str())', 5.19766728692163e-06], ['static_cast<Runtime::Function>(i);', 5.19766728692163e-06], ['"optinfo.h"', 5.19766728692163e-06], ['"optinfo-emit-json.h"', 5.19766728692163e-06], ["optrecord_json_writer's", 5.19766728692163e-06], ['in-memory', 5.19766728692163e-06], ['m_root_tuple', 5.19766728692163e-06], ['metadata->set', 5.19766728692163e-06], ['("name",', 5.19766728692163e-06], ['("target",', 5.19766728692163e-06], ['lists.', 5.19766728692163e-06], ['(records);', 5.19766728692163e-06], ['m_scopes.safe_push', 5.19766728692163e-06], ['Delete', 5.19766728692163e-06], ['emitted_error', 5.19766728692163e-06], ['*filename', 5.19766728692163e-06], ['(filename,', 5.19766728692163e-06], ['cleanup;', 5.19766728692163e-06], ['(outfile,', 5.19766728692163e-06], ['(outfile)', 5.19766728692163e-06], ['optrecord_json_writer::add_record', 5.19766728692163e-06], ['*optinfo)', 5.19766728692163e-06], ['(optinfo->get_kind', 5.19766728692163e-06], ['(m_scopes.length', 5.19766728692163e-06], ['("function",', 5.19766728692163e-06], ['UNKNOWN_LOCATION);', 5.19766728692163e-06], ['expanded_location', 5.19766728692163e-06], ['exploc', 5.19766728692163e-06], ['expand_location', 5.19766728692163e-06], ['(exploc.file));', 5.19766728692163e-06], ['(exploc.line));', 5.19766728692163e-06], ['("column",', 5.19766728692163e-06], ['(exploc.column));', 5.19766728692163e-06], ['PASS', 5.19766728692163e-06], ['(opt_pass', 5.19766728692163e-06], ['(&pp,', 5.19766728692163e-06], ['(pass));', 5.19766728692163e-06], ['(pp_formatted_text', 5.19766728692163e-06], ['(&pp));', 5.19766728692163e-06], ['get_id_value_for_pass', 5.19766728692163e-06], ['BLOCK_ABSTRACT_ORIGIN', 5.19766728692163e-06], ['(block))', 5.19766728692163e-06], ['(ao)', 5.19766728692163e-06], ['BLOCK)', 5.19766728692163e-06], ['optinfo_kind_to_string', 5.19766728692163e-06], ['("kind",', 5.19766728692163e-06], ['("message",', 5.19766728692163e-06], ['stmt.', 5.19766728692163e-06], ['(optinfo->get_pass', 5.19766728692163e-06], ['(DECL_ASSEMBLER_NAME', 5.19766728692163e-06], ['json', 5.19766728692163e-06], ['recursing', 5.19766728692163e-06], ['(pass);', 5.19766728692163e-06], ['test_building_json_from_dump_calls', 5.19766728692163e-06], ['dump_user_location_t', 5.19766728692163e-06], ['*info', 5.19766728692163e-06], ['tmp.get_pending_optinfo', 5.19766728692163e-06], ['sane.', 5.19766728692163e-06], ['2012-2019', 5.19766728692163e-06], ['Kenneth', 5.19766728692163e-06], ['Zadeck', 5.19766728692163e-06], ['<zadeck@naturalbridge.com>', 5.19766728692163e-06], ['BLOCKS_NEEDED(PREC)', 5.19766728692163e-06], ['(((PREC)', 5.19766728692163e-06], ['*file,', 5.19766728692163e-06], ['BUF', 5.19766728692163e-06], ['((wi.get_precision', 5.19766728692163e-06], ['(wi.get_len', 5.19766728692163e-06], ['HOST_WIDE_INT_PRINT_UNSIGNED,', 5.19766728692163e-06], ['wi.to_uhwi', 5.19766728692163e-06], ['first_p', 5.19766728692163e-06], ['uhwi', 5.19766728692163e-06], ['width);', 5.19766728692163e-06], ['uhwi);', 5.19766728692163e-06], ['Traverse::traverse_expressions)', 5.19766728692163e-06], ['do_traverse', 5.19766728692163e-06], ['By', 5.19766728692163e-06], ['default,', 5.19766728692163e-06], ['override.', 5.19766728692163e-06], ['saying', 5.19766728692163e-06], ['discover', 5.19766728692163e-06], ['conveniently.', 5.19766728692163e-06], ['msg);', 5.19766728692163e-06], ['av', 5.19766728692163e-06], ['lhs_type,', 5.19766728692163e-06], ['(lhs_type->is_error()', 5.19766728692163e-06], ['rhs_type,', 5.19766728692163e-06], ['(!are_identical', 5.19766728692163e-06], ['rhs_type->is_nil_type())', 5.19766728692163e-06], ['(rhs_type->is_nil_type())', 5.19766728692163e-06], ['Expression::make_cast(lhs_type,', 5.19766728692163e-06], ['(lhs_type->points_to()', 5.19766728692163e-06], ['Expression::make_unsafe_cast(lhs_type,', 5.19766728692163e-06], ["wouldn't", 5.19766728692163e-06], ['lhs_type->interface_type();', 5.19766728692163e-06], ['lhs_is_empty', 5.19766728692163e-06], ['lhs_interface_type->is_empty();', 5.19766728692163e-06], ['RHS_TYPE.', 5.19766728692163e-06], ['first_field;', 5.19766728692163e-06], ['(lhs_is_empty)', 5.19766728692163e-06], ['Expression::make_type_descriptor(rhs_type,', 5.19766728692163e-06], ['rhs_named_type', 5.19766728692163e-06], ['(rhs_named_type', 5.19766728692163e-06], ['INTERFACE_INFO_METHODS,', 5.19766728692163e-06], ['Expression::make_dereference(mtable,', 5.19766728692163e-06], ['eq', 5.19766728692163e-06], ['*lhs_type,', 5.19766728692163e-06], ['rhs->type(),', 5.19766728692163e-06], ['go_assert(rhs->is_variable());', 5.19766728692163e-06], ['Expression::get_interface_type_descriptor(rhs);', 5.19766728692163e-06], ['lhs_type_expr', 5.19766728692163e-06], ['Expression::make_type_descriptor(lhs_type,', 5.19766728692163e-06], ['rhs_type_expr);', 5.19766728692163e-06], ['succeed.', 5.19766728692163e-06], ['this->do_get_backend(context);', 5.19766728692163e-06], ['fval;', 5.19766728692163e-06], ['fval);', 5.19766728692163e-06], ['mpfr_clear(fval);', 5.19766728692163e-06], ['cval);', 5.19766728692163e-06], ['val_is_unsigned', 5.19766728692163e-06], ['negative_index', 5.19766728692163e-06], ['index_overflows', 5.19766728692163e-06], ['(val_type_size', 5.19766728692163e-06], ['mpz_init_set_ui(one,', 5.19766728692163e-06], ['1UL);', 5.19766728692163e-06], ['mpz_clear(one);', 5.19766728692163e-06], ['Expression::make_binary(OPERATOR_GT,', 5.19766728692163e-06], ['cascading', 5.19766728692163e-06], ['do_discarding_value()', 5.19766728692163e-06], ['do_is_addressable()', 5.19766728692163e-06], ['Parser_expression.', 5.19766728692163e-06], ['happen,', 5.19766728692163e-06], ['(var->is_global())', 5.19766728692163e-06], ['(!escapes)', 5.19766728692163e-06], ['this->variable_->var_value()->set_non_escaping_address_taken();', 5.19766728692163e-06], ['this->variable_->result_var_value()->set_non_escaping_address_taken();', 5.19766728692163e-06], ['this->variable_->var_value()->set_address_taken();', 5.19766728692163e-06], ['this->variable_->result_var_value()->set_address_taken();', 5.19766728692163e-06], ['(this->variable_->is_variable()', 5.19766728692163e-06], ['this->variable_->var_value()->is_in_heap())', 5.19766728692163e-06], ['Node::make_node(this->variable_)->set_encoding(Node::ESCAPE_HEAP);', 5.19766728692163e-06], ['(is_in_heap)', 5.19766728692163e-06], ['&this->reference_);', 5.19766728692163e-06], ['this->statement_->set_is_address_taken();', 5.19766728692163e-06], ['this->statement_->get_backend_variable(context);', 5.19766728692163e-06], ['ast_dump_context->dump_temp_variable_name(this->statement_);', 5.19766728692163e-06], ['Take', 5.19766728692163e-06], ['gogo->backend()->assignment_statement(bfn,', 5.19766728692163e-06], ['type_(NULL),', 5.19766728692163e-06], ['bvar_(NULL)', 5.19766728692163e-06], ['generate.', 5.19766728692163e-06], ['bvar_;', 5.19766728692163e-06], ['(this->bvar_', 5.19766728692163e-06], ['expression?', 5.19766728692163e-06], ['Initializing', 5.19766728692163e-06], ['work,', 5.19766728692163e-06], ['called",', 5.19766728692163e-06], ['"must', 5.19766728692163e-06], ['differences', 5.19766728692163e-06], ['this->function_->name();', 5.19766728692163e-06], ['Func_descriptor_expression::descriptor_type;', 5.19766728692163e-06], ['Func_descriptor_expression::make_func_descriptor_type();', 5.19766728692163e-06], ['this->fn_;', 5.19766728692163e-06], ['syscall', 5.19766728692163e-06], ['hash/equality', 5.19766728692163e-06], ['is_exported_runtime', 5.19766728692163e-06], ['((no->is_function()', 5.19766728692163e-06], ['bloc,', 5.19766728692163e-06], ['context->ostream()', 5.19766728692163e-06], ['context->type->is_boolean_type())', 5.19766728692163e-06], ['imp->require_c_string("$");', 5.19766728692163e-06], ["'t')", 5.19766728692163e-06], ['Type::make_string_type();', 5.19766728692163e-06], ['int_btype', 5.19766728692163e-06], ['Type::lookup_integer_type("int")->get_backend(gogo);', 5.19766728692163e-06], ['lenval;', 5.19766728692163e-06], ['String_expression*', 5.19766728692163e-06], ["'\\\\'", 5.19766728692163e-06], ['0x20', 5.19766728692163e-06], ['0xf;', 5.19766728692163e-06], ['exp->write_string(s);', 5.19766728692163e-06], ['\'"\'', 5.19766728692163e-06], ['static_cast<char>(c);', 5.19766728692163e-06], ["'\\n';", 5.19766728692163e-06], ["'9'", 5.19766728692163e-06], ['indexing,', 5.19766728692163e-06], ['bound-checking,', 5.19766728692163e-06], ['this->string_info_,', 5.19766728692163e-06], ['(this->string_info_)', 5.19766728692163e-06], ['STRING_INFO_DATA:', 5.19766728692163e-06], ['Type::make_pointer_type(byte_type);', 5.19766728692163e-06], ['STRING_INFO_LENGTH:', 5.19766728692163e-06], ['GENERIC.', 5.19766728692163e-06], ['"length"', 5.19766728692163e-06], ['Type::make_abstract_character_type();', 5.19766728692163e-06], ['context->type->is_numeric_type())', 5.19766728692163e-06], ['(!nc.set_type(type,', 5.19766728692163e-06], ['this->type_->float_type()', 5.19766728692163e-06], ['this->type_->complex_type()', 5.19766728692163e-06], ['reduced', 5.19766728692163e-06], ['<,', 5.19766728692163e-06], ['int_type->integer_type()->bits())', 5.19766728692163e-06], ['Integer_expression::export_integer(efb,', 5.19766728692163e-06], ['(!num.empty()', 5.19766728692163e-06], ['num[num.length()', 5.19766728692163e-06], ["'i')", 5.19766728692163e-06], ['mpfr_set_ui(real,', 5.19766728692163e-06], ['num.substr(0,', 5.19766728692163e-06], ['imag;', 5.19766728692163e-06], ['real,', 5.19766728692163e-06], ['imag,', 5.19766728692163e-06], ['mpfr_clear(real);', 5.19766728692163e-06], ['mpfr_clear(imag);', 5.19766728692163e-06], ['(is_character_constant)', 5.19766728692163e-06], ['num.c_str(),', 5.19766728692163e-06], ['Integer_expression(val,', 5.19766728692163e-06], ['long.', 5.19766728692163e-06], ['mpz_init_set_ui(*zval,', 5.19766728692163e-06], ['ul);', 5.19766728692163e-06], ['mpfr_t*', 5.19766728692163e-06], ['Type::make_abstract_float_type();', 5.19766728692163e-06], ['resolved_type;', 5.19766728692163e-06], ['this->type_->integer_type()', 5.19766728692163e-06], ['reduced.', 5.19766728692163e-06], ['float64', 5.19766728692163e-06], ['*exp,', 5.19766728692163e-06], ['(*s', 5.19766728692163e-06], ['exp->write_c_string(buf);', 5.19766728692163e-06], ['Float_expression::export_float(efb,', 5.19766728692163e-06], ['numbers.', 5.19766728692163e-06], ['mpc_t*', 5.19766728692163e-06], ['REAL/IMAG', 5.19766728692163e-06], ['Type::make_abstract_complex_type();', 5.19766728692163e-06], ['Float_expression::export_float(exp,', 5.19766728692163e-06], ['mpc_realref(val));', 5.19766728692163e-06], ['mpc_imagref(val));', 5.19766728692163e-06], ['Complex_expression::export_complex(efb,', 5.19766728692163e-06], ['Find_named_object', 5.19766728692163e-06], ['Const_expression', 5.19766728692163e-06], ['incorrectly', 5.19766728692163e-06], ['e->numeric_constant_value(nc);', 5.19766728692163e-06], ['this->constant_->const_value()->type();', 5.19766728692163e-06], ['nc', 5.19766728692163e-06], ['itself");', 5.19766728692163e-06], ['cetype', 5.19766728692163e-06], ['(ctype', 5.19766728692163e-06], ['this->type_->is_error())', 5.19766728692163e-06], ['this->report_error(_("constant', 5.19766728692163e-06], ['itself"));', 5.19766728692163e-06], ['((*pexpr)->classification())', 5.19766728692163e-06], ['Type::make_nil_type();', 5.19766728692163e-06], ['Iota_expression', 5.19766728692163e-06], ['(type->is_numeric_type())', 5.19766728692163e-06], ['nc.expression(location);', 5.19766728692163e-06], ['specification', 5.19766728692163e-06], ['ul;', 5.19766728692163e-06], ['nc.to_unsigned_long(&ul)', 5.19766728692163e-06], ['type->array_type()->element_type()->forwarded();', 5.19766728692163e-06], ['(element_type->integer_type()', 5.19766728692163e-06], ['s.begin();', 5.19766728692163e-06], ['s.end();', 5.19766728692163e-06], ['char>(*p);', 5.19766728692163e-06], ['vals->push_back(Expression::make_integer_ul(c,', 5.19766728692163e-06], ['s.data();', 5.19766728692163e-06], ['*pend', 5.19766728692163e-06], ['s.length();', 5.19766728692163e-06], ['Lex::fetch_char(p,', 5.19766728692163e-06], ['encoding");', 5.19766728692163e-06], ['(this->type()->is_error_type()', 5.19766728692163e-06], ['!type->is_string_type())', 5.19766728692163e-06], ['(!this->expr_->is_static_initializer())', 5.19766728692163e-06], ['(Type::are_identical(type,', 5.19766728692163e-06], ['((type->is_numeric_type()', 5.19766728692163e-06], ['(expr_type->is_numeric_type()', 5.19766728692163e-06], ['expr_type->is_boolean_type()', 5.19766728692163e-06], ['expr_type->points_to()', 5.19766728692163e-06], ['convertible.', 5.19766728692163e-06], ['(type->is_error()', 5.19766728692163e-06], ['(this->may_convert_function_types_', 5.19766728692163e-06], ['expr_type->function_type()', 5.19766728692163e-06], ['(Type::are_convertible(type,', 5.19766728692163e-06], ['this->expr_->copy(),', 5.19766728692163e-06], ['expr_type->integer_type()', 5.19766728692163e-06], ['expr_type->is_slice_type())', 5.19766728692163e-06], ['go_assert(e->integer_type()', 5.19766728692163e-06], ['go_assert(this->expr_->is_variable());', 5.19766728692163e-06], ['(e->integer_type()->is_byte())', 5.19766728692163e-06], ['go_assert(e->integer_type()->is_rune());', 5.19766728692163e-06], ['(type->is_slice_type()', 5.19766728692163e-06], ['Expression::make_unsafe_cast(type,', 5.19766728692163e-06], ['this->expr_->export_expression(efb);', 5.19766728692163e-06], ['(t->is_error_type()', 5.19766728692163e-06], ['this->expr_->is_error_expression()', 5.19766728692163e-06], ['(t->array_type()', 5.19766728692163e-06], ['et,', 5.19766728692163e-06], ['(t->map_type()', 5.19766728692163e-06], ['go_assert(et->points_to()', 5.19766728692163e-06], ['et->channel_type()', 5.19766728692163e-06], ['et->map_type()', 5.19766728692163e-06], ['et->function_type()', 5.19766728692163e-06], ['et->integer_type()', 5.19766728692163e-06], ['et->is_nil_type());', 5.19766728692163e-06], ['(t->integer_type()', 5.19766728692163e-06], ['t->get_backend(gogo);', 5.19766728692163e-06], ['inserting', 5.19766728692163e-06], ['Node::make_node(this);', 5.19766728692163e-06], ['this->op_;', 5.19766728692163e-06], ['expr->is_type_expression())', 5.19766728692163e-06], ['Expression::make_type(Type::make_pointer_type(expr->type()),', 5.19766728692163e-06], ['*&x', 5.19766728692163e-06], ['%<&%>");', 5.19766728692163e-06], ['places.', 5.19766728692163e-06], ['erroneous,', 5.19766728692163e-06], ['pointer"));', 5.19766728692163e-06], ['&nc,', 5.19766728692163e-06], ['&issued_error))', 5.19766728692163e-06], ['(this->requires_nil_check(gogo))', 5.19766728692163e-06], ['NIL_CHECK_ERROR_ENCOUNTERED:', 5.19766728692163e-06], ['NIL_CHECK_NOT_NEEDED:', 5.19766728692163e-06], ['NIL_CHECK_NEEDED:', 5.19766728692163e-06], ['NIL_CHECK_DEFAULT:', 5.19766728692163e-06], ['no->var_value()->is_global();', 5.19766728692163e-06], ['fre', 5.19766728692163e-06], ['(fre', 5.19766728692163e-06], ['expr->array_index_expression();', 5.19766728692163e-06], ['usable', 5.19766728692163e-06], ['(this->issue_nil_check_', 5.19766728692163e-06], ['NIL_CHECK_NEEDED)', 5.19766728692163e-06], ['NIL_CHECK_NEEDED;', 5.19766728692163e-06], ['NIL_CHECK_NOT_NEEDED)', 5.19766728692163e-06], ['NIL_CHECK_NOT_NEEDED;', 5.19766728692163e-06], ['this->expr_->type()->points_to();', 5.19766728692163e-06], ['type_size', 5.19766728692163e-06], ['this->issue_nil_check_', 5.19766728692163e-06], ['NC.', 5.19766728692163e-06], ['mpfr_init(val);', 5.19766728692163e-06], ['mpfr_neg(val,', 5.19766728692163e-06], ['(unc->is_rune())', 5.19766728692163e-06], ['utype', 5.19766728692163e-06], ['obits', 5.19766728692163e-06], ['(!utype->integer_type()->is_unsigned()', 5.19766728692163e-06], ['adj;', 5.19766728692163e-06], ['mpz_init_set_ui(adj,', 5.19766728692163e-06], ['mpz_mul_2exp(adj,', 5.19766728692163e-06], ['adj,', 5.19766728692163e-06], ['obits);', 5.19766728692163e-06], ['adj);', 5.19766728692163e-06], ['mpz_clear(adj);', 5.19766728692163e-06], ['sizeof(HOST_WIDE_INT),', 5.19766728692163e-06], ['ocount', 5.19766728692163e-06], ['mpz_sub(val,', 5.19766728692163e-06], ['nc->set_rune(NULL,', 5.19766728692163e-06], ['nc->set_int(NULL,', 5.19766728692163e-06], ['subcontext(subtype,', 5.19766728692163e-06], ['(!type->is_boolean_type())', 5.19766728692163e-06], ['(!this->create_temp_)', 5.19766728692163e-06], ['set-and-use-temporary', 5.19766728692163e-06], ['sut', 5.19766728692163e-06], ['this->expr_->set_and_use_temporary_expression();', 5.19766728692163e-06], ['(sut', 5.19766728692163e-06], ['sut->temporary();', 5.19766728692163e-06], ['temp->get_backend_variable(context);', 5.19766728692163e-06], ['bval', 5.19766728692163e-06], ['gogo->backend()->unary_expression(this->op_,', 5.19766728692163e-06], ['programmer', 5.19766728692163e-06], ['expects.', 5.19766728692163e-06], ['var_name;', 5.19766728692163e-06], ['immutable_struct', 5.19766728692163e-06], ['copy_to_heap,', 5.19766728692163e-06], ['gogo->backend()->var_expression(implicit,', 5.19766728692163e-06], ['gogo->backend()->immutable_struct(var_name,', 5.19766728692163e-06], ['known_valid', 5.19766728692163e-06], ['pbtype', 5.19766728692163e-06], ['ubexpr', 5.19766728692163e-06], ['compare,', 5.19766728692163e-06], ['OPERATOR_NOT;', 5.19766728692163e-06], ['Expression::make_unary(op,', 5.19766728692163e-06], ['Expression::make_unary(OPERATOR_MULT,', 5.19766728692163e-06], ['(docheck', 5.19766728692163e-06], ['Expression::traverse(&this->left_,', 5.19766728692163e-06], ['(ru', 5.19766728692163e-06], ['ru->op()', 5.19766728692163e-06], ['(!right_type->is_abstract()', 5.19766728692163e-06], ['(left_type->float_type()', 5.19766728692163e-06], ['OP.', 5.19766728692163e-06], ['result)', 5.19766728692163e-06], ['right_nc->type();', 5.19766728692163e-06], ['(!Binary_expression::operation_type(op,', 5.19766728692163e-06], ['coercing', 5.19766728692163e-06], ["operand's", 5.19766728692163e-06], ['(!left_nc->set_type(type,', 5.19766728692163e-06], ['!right_nc->set_type(type,', 5.19766728692163e-06], ['Binary_expression::cmp_to_bool(op,', 5.19766728692163e-06], ['(!left_nc->to_int(&left_val))', 5.19766728692163e-06], ['(!right_nc->to_int(&right_val))', 5.19766728692163e-06], ['mpz_clear(right_val);', 5.19766728692163e-06], ['(!left_nc->to_float(&left_val))', 5.19766728692163e-06], ['(!right_nc->to_float(&right_val))', 5.19766728692163e-06], ['(!type->is_abstract()', 5.19766728692163e-06], ['type->float_type()->bits();', 5.19766728692163e-06], ['mpfr_clear(right_val);', 5.19766728692163e-06], ['(!left_nc->to_complex(&left_val))', 5.19766728692163e-06], ['(!right_nc->to_complex(&right_val))', 5.19766728692163e-06], ['mpc_clear(right_val);', 5.19766728692163e-06], ['Issue', 5.19766728692163e-06], ['*ISSUED_ERROR', 5.19766728692163e-06], ['did.', 5.19766728692163e-06], ['(mpz_sgn(right_val)', 5.19766728692163e-06], ['mpz_get_ui(right_val);', 5.19766728692163e-06], ['(mpz_cmp_ui(right_val,', 5.19766728692163e-06], ['"shift', 5.19766728692163e-06], ['mpz_and(val,', 5.19766728692163e-06], ['OPERATOR_RSHIFT', 5.19766728692163e-06], ['mpfr_set_ui(val,', 5.19766728692163e-06], ['mpc_set_ui(val,', 5.19766728692163e-06], ['this->right_;', 5.19766728692163e-06], ['is_comparison', 5.19766728692163e-06], ['OPERATOR_GE);', 5.19766728692163e-06], ['Numeric', 5.19766728692163e-06], ['left_nc;', 5.19766728692163e-06], ['right_nc;', 5.19766728692163e-06], ['OPERATOR_PLUS)', 5.19766728692163e-06], ['right->type()->interface_type()', 5.19766728692163e-06], ['String_concat_expression*', 5.19766728692163e-06], ['st2', 5.19766728692163e-06], ['heuristic,', 5.19766728692163e-06], ['this->lower_compare_to_memcmp(gogo,', 5.19766728692163e-06], ['left_temp', 5.19766728692163e-06], ['right_temp', 5.19766728692163e-06], ['++field_index)', 5.19766728692163e-06], ['Expression::make_field_reference(left,', 5.19766728692163e-06], ['f1,', 5.19766728692163e-06], ['f2,', 5.19766728692163e-06], ['at2', 5.19766728692163e-06], ['args->push_back(this->operand_address(inserter,', 5.19766728692163e-06], ['left_type->points_to()', 5.19766728692163e-06], ['this->left_', 5.19766728692163e-06], ['this->operand_address(inserter,', 5.19766728692163e-06], ['this->right_);', 5.19766728692163e-06], ['OPERATOR_RSHIFT);', 5.19766728692163e-06], ['OPERATOR_ANDAND)', 5.19766728692163e-06], ['sides', 5.19766728692163e-06], ['numeric,', 5.19766728692163e-06], ['non-abstract', 5.19766728692163e-06], ['subcontext(*context);', 5.19766728692163e-06], ['subcontext.may_be_abstract', 5.19766728692163e-06], ['(tleft->float_type()', 5.19766728692163e-06], ['(tleft->complex_type()', 5.19766728692163e-06], ['CONTEXT', 5.19766728692163e-06], ['happened.', 5.19766728692163e-06], ['Type::lookup_integer_type("uint");', 5.19766728692163e-06], ['floating,', 5.19766728692163e-06], ['complex,', 5.19766728692163e-06], ['(left_type->is_nil_type()', 5.19766728692163e-06], ['(!Binary_expression::check_operator_type(this->op_,', 5.19766728692163e-06], ['do_lower.', 5.19766728692163e-06], ['routine.', 5.19766728692163e-06], ['complex_code', 5.19766728692163e-06], ['gogo->backend()->integer_constant_expression(left_btype,', 5.19766728692163e-06], ['zero_expr;', 5.19766728692163e-06], ['neg_one_expr', 5.19766728692163e-06], ['neg_one);', 5.19766728692163e-06], ['neg_one_expr,', 5.19766728692163e-06], ['number,', 5.19766728692163e-06], ['dividing', 5.19766728692163e-06], ['OPERATOR_DIV)', 5.19766728692163e-06], ['&^', 5.19766728692163e-06], ['OPERATOR_OROR;', 5.19766728692163e-06], ['OPERATOR_EQEQ;', 5.19766728692163e-06], ['OPERATOR_NOTEQ;', 5.19766728692163e-06], ['OPERATOR_LT;', 5.19766728692163e-06], ['OPERATOR_LE;', 5.19766728692163e-06], ['OPERATOR_GT;', 5.19766728692163e-06], ['OPERATOR_GE;', 5.19766728692163e-06], ['operator");', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->left_);', 5.19766728692163e-06], ['left->type();', 5.19766728692163e-06], ['go_assert(op', 5.19766728692163e-06], ['OPERATOR_NOTEQ);', 5.19766728692163e-06], ['(*pe)->type();', 5.19766728692163e-06], ['t1))', 5.19766728692163e-06], ['(this->exprs_->size())', 5.19766728692163e-06], ['Type::make_array_type(type,', 5.19766728692163e-06], ['this->exprs_,', 5.19766728692163e-06], ['nil_arg,', 5.19766728692163e-06], ['sce->set_storage_does_not_escape();', 5.19766728692163e-06], ['pulls', 5.19766728692163e-06], ['demand', 5.19766728692163e-06], ['METHOD.', 5.19766728692163e-06], ['std::pair<Named_object*,', 5.19766728692163e-06], ['(orig_fntype', 5.19766728692163e-06], ['wrong--it', 5.19766728692163e-06], ['sfl->push_back(Struct_field(Typed_identifier("fn",', 5.19766728692163e-06], ['sfl->push_back(Struct_field(Typed_identifier("val",', 5.19766728692163e-06], ['closure_type', 5.19766728692163e-06], ['new_fntype', 5.19766728692163e-06], ['orig_fntype->copy_with_names();', 5.19766728692163e-06], ['new_no', 5.19766728692163e-06], ['cvar', 5.19766728692163e-06], ['Variable(closure_type,', 5.19766728692163e-06], ['cvar->set_is_used();', 5.19766728692163e-06], ['cvar->set_is_closure();', 5.19766728692163e-06], ['cp', 5.19766728692163e-06], ['Named_object::make_variable("$closure"', 5.19766728692163e-06], ['cvar);', 5.19766728692163e-06], ['new_no->func_value()->set_closure_var(cp);', 5.19766728692163e-06], ['gogo->start_block(loc);', 5.19766728692163e-06], ['Field', 5.19766728692163e-06], ['Expression::make_var_reference(cp,', 5.19766728692163e-06], ['Expression::make_field_reference(arg,', 5.19766728692163e-06], ['orig_params->empty())', 5.19766728692163e-06], ['new_fntype->parameters();', 5.19766728692163e-06], ['orig_fntype->is_varargs(),', 5.19766728692163e-06], ['gogo->finish_block(loc);', 5.19766728692163e-06], ['gogo->flatten_block(new_no,', 5.19766728692163e-06], ['gogo->finish_function(loc);', 5.19766728692163e-06], ['*REF', 5.19766728692163e-06], ['declaring', 5.19766728692163e-06], ['(field_indexes', 5.19766728692163e-06], ['go_assert(stype', 5.19766728692163e-06], ['field_indexes->field_index', 5.19766728692163e-06], ['stype->field_count());', 5.19766728692163e-06], ['stype);', 5.19766728692163e-06], ['field_indexes->field_index,', 5.19766728692163e-06], ['(thunk->is_erroneous())', 5.19766728692163e-06], ['below,', 5.19766728692163e-06], ['*fntype;', 5.19766728692163e-06], ['NULL).', 5.19766728692163e-06], ['thunk->func_value()->type(),', 5.19766728692163e-06], ['fields->push_back(Struct_field(Typed_identifier("val",', 5.19766728692163e-06], ['vals->push_back(Expression::make_func_code_reference(thunk,', 5.19766728692163e-06], ['Expression::make_heap_expression(ret,', 5.19766728692163e-06], ['(nil_check', 5.19766728692163e-06], ['Expression::make_compound(crash,', 5.19766728692163e-06], ['Builtin_call_expression.', 5.19766728692163e-06], ['Call_expression(fn,', 5.19766728692163e-06], ['seen_(false),', 5.19766728692163e-06], ['"panic")', 5.19766728692163e-06], ['BUILTIN_PRINTLN;', 5.19766728692163e-06], ['BUILTIN_RECOVER;', 5.19766728692163e-06], ['(this->is_varargs()', 5.19766728692163e-06], ['BUILTIN_OFFSETOF)', 5.19766728692163e-06], ['"of', 5.19766728692163e-06], ['arg->field_reference_expression();', 5.19766728692163e-06], ['(farg', 5.19766728692163e-06], ['indirections.', 5.19766728692163e-06], ['(this->numeric_constant_value(&nc))', 5.19766728692163e-06], ['Type::make_empty_interface_type(loc);', 5.19766728692163e-06], ['map"));', 5.19766728692163e-06], ['args->front(),', 5.19766728692163e-06], ['Statement::make_temporary(mt->key_type(),', 5.19766728692163e-06], ['args->back(),', 5.19766728692163e-06], ['Passing', 5.19766728692163e-06], ['unusual', 5.19766728692163e-06], ['Expression::make_temporary_reference(atemp,', 5.19766728692163e-06], ['inserter->insert(s);', 5.19766728692163e-06], ['go_error_at(first_arg->location(),', 5.19766728692163e-06], ['is_slice', 5.19766728692163e-06], ['is_map', 5.19766728692163e-06], ['is_chan', 5.19766728692163e-06], ['len_arg;', 5.19766728692163e-06], ['len_small', 5.19766728692163e-06], ['(parg', 5.19766728692163e-06], ['(is_slice)', 5.19766728692163e-06], ['allocating', 5.19766728692163e-06], ['slice"));', 5.19766728692163e-06], ['make");', 5.19766728692163e-06], ['cap_small', 5.19766728692163e-06], ['nccap;', 5.19766728692163e-06], ['vcap;', 5.19766728692163e-06], ['cap_arg->numeric_constant_value(&nccap)', 5.19766728692163e-06], ['nccap.to_unsigned_long(&vcap)', 5.19766728692163e-06], ['vlen', 5.19766728692163e-06], ['Expression::make_type_descriptor(et,', 5.19766728692163e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(et),', 5.19766728692163e-06], ['(!len_small)', 5.19766728692163e-06], ['Expression::make_nil(loc));', 5.19766728692163e-06], ['right-hand-side', 5.19766728692163e-06], ['ENCLOSING', 5.19766728692163e-06], ['slice_type->array_type()->element_type();', 5.19766728692163e-06], ['s2...)', 5.19766728692163e-06], ['lenref', 5.19766728692163e-06], ['Expression::make_func_reference(lenfn,', 5.19766728692163e-06], ['call_args->push_back(Expression::make_temporary_reference(s1tmp,', 5.19766728692163e-06], ['Expression::make_call(lenref,', 5.19766728692163e-06], ['go_assert(args->size()', 5.19766728692163e-06], ['s2', 5.19766728692163e-06], ['fetch', 5.19766728692163e-06], ['(++pa;', 5.19766728692163e-06], ['&sum);', 5.19766728692163e-06], ['&cap);', 5.19766728692163e-06], ['Expression::make_cast(uint_type,', 5.19766728692163e-06], ['Expression::make_temporary_reference(c1tmp,', 5.19766728692163e-06], ['Expression::make_cast(unsafe_ptr_type,', 5.19766728692163e-06], ['a4', 5.19766728692163e-06], ['Expression::make_array_index(ref,', 5.19766728692163e-06], ['&rhs);', 5.19766728692163e-06], ['&cond);', 5.19766728692163e-06], ['inserter->insert(Statement::make_statement(call,', 5.19766728692163e-06], ['&lhs);', 5.19766728692163e-06], ['"negative', 5.19766728692163e-06], ['intbits', 5.19766728692163e-06], ['Type::lookup_integer_type("int")->integer_type()->bits();', 5.19766728692163e-06], ['float32', 5.19766728692163e-06], ['arg_type)', 5.19766728692163e-06], ['arg_type->named_type();', 5.19766728692163e-06], ['(nt->real_type()->named_type()', 5.19766728692163e-06], ['nt->real_type()->named_type();', 5.19766728692163e-06], ['Find_call_expression', 5.19766728692163e-06], ['(expr->call_expression()', 5.19766728692163e-06], ['spec', 5.19766728692163e-06], ['says', 5.19766728692163e-06], ['Expression::traverse(&expr,', 5.19766728692163e-06], ['arg_type->array_type()->length()', 5.19766728692163e-06], ['arg_type->is_string_type())', 5.19766728692163e-06], ['arg->is_constant();', 5.19766728692163e-06], ['BUILTIN_CAP)', 5.19766728692163e-06], ['BUILTIN_ALIGNOF)', 5.19766728692163e-06], ['(arg->field_reference_expression()', 5.19766728692163e-06], ['nc->set_int(Type::lookup_integer_type("uintptr"),', 5.19766728692163e-06], ['zval);', 5.19766728692163e-06], ['total_offset', 5.19766728692163e-06], ['BUILTIN_REAL)', 5.19766728692163e-06], ['nc->set_float(type,', 5.19766728692163e-06], ['mpfr_clear(r);', 5.19766728692163e-06], ['mpc_set_fr_fr(val,', 5.19766728692163e-06], ['purely', 5.19766728692163e-06], ['(!this->determining_types())', 5.19766728692163e-06], ['t2;', 5.19766728692163e-06], ['complex.', 5.19766728692163e-06], ['atype', 5.19766728692163e-06], ['(*pa)->type();', 5.19766728692163e-06], ['(args->front()->is_error_expression()', 5.19766728692163e-06], ['(!arg_type->is_error()', 5.19766728692163e-06], ['arg_type->array_type()', 5.19766728692163e-06], ['"or', 5.19766728692163e-06], ['this->report_error(_("cannot', 5.19766728692163e-06], ['arg1_type', 5.19766728692163e-06], ['arg2_type', 5.19766728692163e-06], ['e1;', 5.19766728692163e-06], ['(arg2_type->is_string_type())', 5.19766728692163e-06], ['string"));', 5.19766728692163e-06], ['args->back()->type(),', 5.19766728692163e-06], ['(!Type::are_assignable(element_type,', 5.19766728692163e-06], ['go_error_at((*pa)->location(),', 5.19766728692163e-06], ['this->report_error(_("complex', 5.19766728692163e-06], ['bce->set_is_deferred();', 5.19766728692163e-06], ['bce->set_is_concurrent();', 5.19766728692163e-06], ['bce;', 5.19766728692163e-06], ['(this->is_erroneous_call())', 5.19766728692163e-06], ['STRING_INFO_LENGTH,', 5.19766728692163e-06], ['pint_type', 5.19766728692163e-06], ['Type::make_pointer_type(int_type);', 5.19766728692163e-06], ['Expression::make_unsafe_cast(pint_type,', 5.19766728692163e-06], ['Expression::make_cast(pint_type,', 5.19766728692163e-06], ['Expression::make_conditional(cmp,', 5.19766728692163e-06], ['indir,', 5.19766728692163e-06], ['capacity.', 5.19766728692163e-06], ['parg,', 5.19766728692163e-06], ['Expression::make_cast(itype,', 5.19766728692163e-06], ['Expression::make_integer_z(&ival,', 5.19766728692163e-06], ['td,', 5.19766728692163e-06], ['arg2,', 5.19766728692163e-06], ['args->front()->get_backend(context);', 5.19766728692163e-06], ['viewed', 5.19766728692163e-06], ['(sometimes', 5.19766728692163e-06], ['accepts', 5.19766728692163e-06], ["GCC's", 5.19766728692163e-06], ['either.', 5.19766728692163e-06], ['loads', 5.19766728692163e-06], ['reshuffling', 5.19766728692163e-06], ['chance', 5.19766728692163e-06], ['Call_multiple_result_type', 5.19766728692163e-06], ['!this->type_->is_error_type())', 5.19766728692163e-06], ['*fntype', 5.19766728692163e-06], ['(!this->fn_->type()->is_error())', 5.19766728692163e-06], ['this->args_->front()->call_expression()', 5.19766728692163e-06], ['context"));', 5.19766728692163e-06], ['Call_result', 5.19766728692163e-06], ['Recognize', 5.19766728692163e-06], ['this->fn_,', 5.19766728692163e-06], ['this->is_varargs_,', 5.19766728692163e-06], ['(this->is_deferred_)', 5.19766728692163e-06], ['(this->is_concurrent_)', 5.19766728692163e-06], ['this->call_temp_', 5.19766728692163e-06], ['(fntype->is_varargs())', 5.19766728692163e-06], ['varargs_type,', 5.19766728692163e-06], ['(bme', 5.19766728692163e-06], ['bme->function();', 5.19766728692163e-06], ['first_arg,', 5.19766728692163e-06], ['stub,', 5.19766728692163e-06], ['fatype', 5.19766728692163e-06], ['Call_result_expressions.', 5.19766728692163e-06], ['new_args;', 5.19766728692163e-06], ['PC', 5.19766728692163e-06], ['caller,', 5.19766728692163e-06], ['turning', 5.19766728692163e-06], ['obviously', 5.19766728692163e-06], ['fe->named_object()->is_function_declaration()', 5.19766728692163e-06], ['((this->args_', 5.19766728692163e-06], ['builtin_return_address;', 5.19766728692163e-06], ['"__builtin_return_address",', 5.19766728692163e-06], ['"__builtin_dwarf_cfa",', 5.19766728692163e-06], ['FUNCTION', 5.19766728692163e-06], ['(this->varargs_are_lowered_)', 5.19766728692163e-06], ['go_assert(param_count', 5.19766728692163e-06], ['this->args_->size();', 5.19766728692163e-06], ['this->args_;', 5.19766728692163e-06], ['old_args->end();', 5.19766728692163e-06], ['new_args->push_back(*pa);', 5.19766728692163e-06], ['(*pa)->location();', 5.19766728692163e-06], ['__builtin_dwarf_cfa.', 5.19766728692163e-06], ['(!is_interface_method', 5.19766728692163e-06], ['args->push_back(*pa);', 5.19766728692163e-06], ['++pa;', 5.19766728692163e-06], ['Temporary_statement', 5.19766728692163e-06], ['*temp', 5.19766728692163e-06], ['this->expected_result_count_', 5.19766728692163e-06], ['fntype->receiver()->type();', 5.19766728692163e-06], ['(rtype->points_to()', 5.19766728692163e-06], ['argument_type,', 5.19766728692163e-06], ['go_error_at(argument_location,', 5.19766728692163e-06], ['is_method', 5.19766728692163e-06], ['(is_method)', 5.19766728692163e-06], ['(this->is_varargs_', 5.19766728692163e-06], ['this->args_->end())', 5.19766728692163e-06], ['Expression::make_unsafe_cast(unsafe_ptr_type,', 5.19766728692163e-06], ['this->call_;', 5.19766728692163e-06], ['(has_closure)', 5.19766728692163e-06], ['(nargs', 5.19766728692163e-06], ['fn_args.resize(1);', 5.19766728692163e-06], ['fn_args[0]', 5.19766728692163e-06], ['fn_args[i]', 5.19766728692163e-06], ['params->end());', 5.19766728692163e-06], ['Type::make_pointer_type(', 5.19766728692163e-06], ['fn_args,', 5.19766728692163e-06], ['gogo->backend()->assignment_statement(bfunction,', 5.19766728692163e-06], ['bref,', 5.19766728692163e-06], ['this->call_', 5.19766728692163e-06], ['this->report_error(_("number', 5.19766728692163e-06], ['"number', 5.19766728692163e-06], ['(pr', 5.19766728692163e-06], ['results->end())', 5.19766728692163e-06], ['++pr;', 5.19766728692163e-06], ['trigger', 5.19766728692163e-06], ['this->call_->determine_type_no_context();', 5.19766728692163e-06], ["Wouldn't", 5.19766728692163e-06], ['Expression::traverse(&this->cap_,', 5.19766728692163e-06], ['this->cap_;', 5.19766728692163e-06], ['(left->is_type_expression())', 5.19766728692163e-06], ['"attempt', 5.19766728692163e-06], ['("attempt', 5.19766728692163e-06], ['"[";', 5.19766728692163e-06], ['this->cap_);', 5.19766728692163e-06], ['(Expression::traverse(&this->start_,', 5.19766728692163e-06], ['(Expression::traverse(&this->end_,', 5.19766728692163e-06], ['index_context(Type::lookup_integer_type("int"),', 5.19766728692163e-06], ['(this->start_->is_constant())', 5.19766728692163e-06], ['this->start_->determine_type(&index_context);', 5.19766728692163e-06], ['this->start_->determine_type_no_context();', 5.19766728692163e-06], ['(this->end_->is_constant())', 5.19766728692163e-06], ['this->end_->determine_type(&index_context);', 5.19766728692163e-06], ['this->end_->determine_type_no_context();', 5.19766728692163e-06], ['!this->start_->type()->is_error()', 5.19766728692163e-06], ['(!this->start_->numeric_constant_value(&nc)', 5.19766728692163e-06], ['this->report_error(_("index', 5.19766728692163e-06], ['this->end_->type()->integer_type()', 5.19766728692163e-06], ['!this->end_->type()->is_error()', 5.19766728692163e-06], ['!this->end_->is_error_expression()', 5.19766728692163e-06], ['(!this->end_->numeric_constant_value(&nc)', 5.19766728692163e-06], ['go_assert(this->array_->type()->is_error());', 5.19766728692163e-06], ['(this->start_->numeric_constant_value(&inc)', 5.19766728692163e-06], ['inc.to_int(&ival))', 5.19766728692163e-06], ['go_error_at(this->start_->location(),', 5.19766728692163e-06], ['!this->end_->is_nil_expression())', 5.19766728692163e-06], ['eval_valid', 5.19766728692163e-06], ['(this->end_->numeric_constant_value(&enc)', 5.19766728692163e-06], ['enc.to_int(&eval))', 5.19766728692163e-06], ['(mpz_sgn(eval)', 5.19766728692163e-06], ['mpz_cmp(eval,', 5.19766728692163e-06], ['go_error_at(this->end_->location(),', 5.19766728692163e-06], ['eval)', 5.19766728692163e-06], ['this->report_error(_("inverted', 5.19766728692163e-06], ['cnc;', 5.19766728692163e-06], ['cval)', 5.19766728692163e-06], ['index:', 5.19766728692163e-06], ['mpz_clear(eval);', 5.19766728692163e-06], ['(ival_valid)', 5.19766728692163e-06], ['modified.', 5.19766728692163e-06], ['slices', 5.19766728692163e-06], ['start->is_error_expression()', 5.19766728692163e-06], ['start->type()->is_error_type()', 5.19766728692163e-06], ['(end->is_error_expression()', 5.19766728692163e-06], ['this->start_', 5.19766728692163e-06], ['this->end_', 5.19766728692163e-06], ['"uintptr"', 5.19766728692163e-06], ['this->array_);', 5.19766728692163e-06], ['capacity,', 5.19766728692163e-06], ['this->cap_->get_backend(context);', 5.19766728692163e-06], ['!Type::are_convertible(int_type,', 5.19766728692163e-06], ['this->start_->type(),', 5.19766728692163e-06], ['gogo->runtime_error(code,', 5.19766728692163e-06], ['Expression::check_bounds(this->start_,', 5.19766728692163e-06], ['start_too_large', 5.19766728692163e-06], ['start_too_large,', 5.19766728692163e-06], ['START.', 5.19766728692163e-06], ['int_btype,', 5.19766728692163e-06], ['Slice.', 5.19766728692163e-06], ['valptr', 5.19766728692163e-06], ['array_type->get_value_pointer(gogo,', 5.19766728692163e-06], ['this->is_lvalue_);', 5.19766728692163e-06], ['valptr->get_backend(context);', 5.19766728692163e-06], ['gogo->backend()->pointer_offset_expression(ptr,', 5.19766728692163e-06], ['bounds_bcheck', 5.19766728692163e-06], ['bounds_bcheck,', 5.19766728692163e-06], ['gogo->backend()->binary_expression(OPERATOR_GT,', 5.19766728692163e-06], ['(this->end_->is_nil_expression())', 5.19766728692163e-06], ['Expression::check_bounds(this->end_,', 5.19766728692163e-06], ['gogo->backend()->binary_expression(OPERATOR_MINUS,', 5.19766728692163e-06], ['unnecessarily.', 5.19766728692163e-06], ['this->string_;', 5.19766728692163e-06], ['this->string_,', 5.19766728692163e-06], ['(sval_valid', 5.19766728692163e-06], ['mpz_cmp_ui(ival,', 5.19766728692163e-06], ['"string', 5.19766728692163e-06], ['string_arg', 5.19766728692163e-06], ['Expression::make_string_info(this->string_,', 5.19766728692163e-06], ['index_error', 5.19766728692163e-06], ['bad_index->get_backend(context);', 5.19766728692163e-06], ['index_error,', 5.19766728692163e-06], ['this->index_->type(),', 5.19766728692163e-06], ['(this->value_pointer_', 5.19766728692163e-06], ['this->value_pointer_', 5.19766728692163e-06], ['map_index;', 5.19766728692163e-06], ['map_ref,', 5.19766728692163e-06], ['tracked', 5.19766728692163e-06], ['nt->named_object()->package()', 5.19766728692163e-06], ["s.push_back('.');", 5.19766728692163e-06], ['Variable(array_type,', 5.19766728692163e-06], ['created,', 5.19766728692163e-06], ['sections.', 5.19766728692163e-06], ['executable', 5.19766728692163e-06], ['go_assert(struct_type', 5.19766728692163e-06], ['Gogo::unpack_hidden_name(this->name_);', 5.19766728692163e-06], ['&index);', 5.19766728692163e-06], ['(!this->expr_->is_variable())', 5.19766728692163e-06], ['(interface_type', 5.19766728692163e-06], ['interface_type->find_method(this->name_);', 5.19766728692163e-06], ['method->type();', 5.19766728692163e-06], ['interface"));', 5.19766728692163e-06], ['type->location();', 5.19766728692163e-06], ['this->expr_->type(),', 5.19766728692163e-06], ['Expression::make_heap_expression(expr,', 5.19766728692163e-06], ['bcrash', 5.19766728692163e-06], ['this->name_;', 5.19766728692163e-06], ['Type::bind_field_or_method(gogo,', 5.19766728692163e-06], ['"pointer', 5.19766728692163e-06], ['is_ambiguous;', 5.19766728692163e-06], ['%<%s%s%>', 5.19766728692163e-06], ['nt->message_name().c_str(),', 5.19766728692163e-06], ['receiver_name', 5.19766728692163e-06], ['(!p->name().empty())', 5.19766728692163e-06], ['mno', 5.19766728692163e-06], ['vno', 5.19766728692163e-06], ['gogo->lookup(receiver_name,', 5.19766728692163e-06], ['go_assert(vno', 5.19766728692163e-06], ['bm;', 5.19766728692163e-06], ['bm', 5.19766728692163e-06], ['gogo->lower_block(no,', 5.19766728692163e-06], ['Type::make_pointer_type(this->type_);', 5.19766728692163e-06], ['this->type_->backend_type_size(gogo,', 5.19766728692163e-06], ['(this->traverse_vals(traverse)', 5.19766728692163e-06], ['!(*pv)->is_constant()', 5.19766728692163e-06], ['(!(*pv)->is_composite_literal()', 5.19766728692163e-06], ['(*pv)->is_nonconstant_composite_literal()))', 5.19766728692163e-06], ['(pf->type()->interface_type()', 5.19766728692163e-06], ['!(*pv)->is_static_initializer())', 5.19766728692163e-06], ['(*pv)->determine_type(&subcontext);', 5.19766728692163e-06], ['Extra', 5.19766728692163e-06], ['knockon', 5.19766728692163e-06], ['construction",', 5.19766728692163e-06], ['("incompatible', 5.19766728692163e-06], ['this->is_static_initializer())', 5.19766728692163e-06], ['((*pv)->is_error_expression()', 5.19766728692163e-06], ['(*pv)->type()->is_error_type())', 5.19766728692163e-06], ['(!(*pv)->is_variable())', 5.19766728692163e-06], ['*pv', 5.19766728692163e-06], ['"{";', 5.19766728692163e-06], ['ast_dump_context->dump_expression_list(this->vals());', 5.19766728692163e-06], ['(this->type_->array_type()->element_type()->interface_type()', 5.19766728692163e-06], ['pi;', 5.19766728692163e-06], ['go_assert(pi', 5.19766728692163e-06], ['this->indexes_->end());', 5.19766728692163e-06], ['val_expr', 5.19766728692163e-06], ['++pi;', 5.19766728692163e-06], ['go_assert(type->array_type()', 5.19766728692163e-06], ['!type->is_slice_type());', 5.19766728692163e-06], ['Fixed_array_construction_expression(type,', 5.19766728692163e-06], ['go_assert(type->is_slice_type());', 5.19766728692163e-06], ['indexes->back()', 5.19766728692163e-06], ['go_assert(this->type()->is_error());', 5.19766728692163e-06], ['established', 5.19766728692163e-06], ['escape,', 5.19766728692163e-06], ['Base', 5.19766728692163e-06], ['this->slice_storage_', 5.19766728692163e-06], ['this->element_count()', 5.19766728692163e-06], ['this->array_val_', 5.19766728692163e-06], ['this->create_array_val();', 5.19766728692163e-06], ['this->array_val_,', 5.19766728692163e-06], ['Slice_construction_expression(type,', 5.19766728692163e-06], ['!this->vals_->empty()', 5.19766728692163e-06], ['this->constructor_temp_', 5.19766728692163e-06], ['this->element_type_', 5.19766728692163e-06], ['"__key",', 5.19766728692163e-06], ['"__val",', 5.19766728692163e-06], ['*pv;', 5.19766728692163e-06], ['Type::make_array_type(this->element_type_,', 5.19766728692163e-06], ['this->vals_->copy()),', 5.19766728692163e-06], ['ventries', 5.19766728692163e-06], ['(this->element_type_', 5.19766728692163e-06], ['Expression::make_type_info(this->element_type_,', 5.19766728692163e-06], ['ast_dump_context->dump_expression_list(this->vals_,', 5.19766728692163e-06], ['do,', 5.19766728692163e-06], ['testsuite.', 5.19766728692163e-06], ['this->depth_;', 5.19766728692163e-06], ['++depth)', 5.19766728692163e-06], ['(this->key_path_[depth])', 5.19766728692163e-06], ['type->map_type()->key_type();', 5.19766728692163e-06], ['type->map_type()->val_type();', 5.19766728692163e-06], ['Type::TYPE_STRUCT)', 5.19766728692163e-06], ['(Expression::traverse(&*p,', 5.19766728692163e-06], ['type->deref();', 5.19766728692163e-06], ['*pt', 5.19766728692163e-06], ['(type->struct_type()', 5.19766728692163e-06], ['!this->has_keys_)', 5.19766728692163e-06], ['type->named_type()->named_object()->package()', 5.19766728692163e-06], ['"assignment', 5.19766728692163e-06], ['type->named_type()->message_name().c_str());', 5.19766728692163e-06], ['this->vals_,', 5.19766728692163e-06], ['external_no', 5.19766728692163e-06], ['go_error_at(val->location(),', 5.19766728692163e-06], ['of,', 5.19766728692163e-06], ["object's", 5.19766728692163e-06], ['EXPRESSION_VAR_REFERENCE:', 5.19766728692163e-06], ['EXPRESSION_ENCLOSED_VAR_REFERENCE:', 5.19766728692163e-06], ['(!Gogo::is_hidden_name(name)', 5.19766728692163e-06], ["'z')", 5.19766728692163e-06], ['st->find_local_field(name,', 5.19766728692163e-06], ['operator<(const', 5.19766728692163e-06], ['other)', 5.19766728692163e-06], ['this->make_array(type,', 5.19766728692163e-06], ['indexes_out_of_order', 5.19766728692163e-06], ['(std::find(indexes->begin(),', 5.19766728692163e-06], ['indexes->end(),', 5.19766728692163e-06], ['indexes->end())', 5.19766728692163e-06], ['indexes->push_back(index);', 5.19766728692163e-06], ['!vals->empty())', 5.19766728692163e-06], ['ntype', 5.19766728692163e-06], ['inttype', 5.19766728692163e-06], ['std::sort(v.begin(),', 5.19766728692163e-06], ['long>();', 5.19766728692163e-06], ['v.begin();', 5.19766728692163e-06], ['v.end();', 5.19766728692163e-06], ['Actually', 5.19766728692163e-06], ['vals)', 5.19766728692163e-06], ['(indexes', 5.19766728692163e-06], ['Type::make_array_type(at->element_type(),', 5.19766728692163e-06], ['std::vector<Expression*>)', 5.19766728692163e-06], ['nt;', 5.19766728692163e-06], ['"map', 5.19766728692163e-06], ['&*p);', 5.19766728692163e-06], ['std::vector<Expression*>)::iterator', 5.19766728692163e-06], ['mit;', 5.19766728692163e-06], ['(mit', 5.19766728692163e-06], ['l.push_back(*p);', 5.19766728692163e-06], ['std::pair<unsigned', 5.19766728692163e-06], ['val(h,', 5.19766728692163e-06], ['l);', 5.19766728692163e-06], ['(std::vector<Expression*>::iterator', 5.19766728692163e-06], ['mit->second.begin();', 5.19766728692163e-06], ['mit->second.end();', 5.19766728692163e-06], ['lit++)', 5.19766728692163e-06], ['go_assert(ok);', 5.19766728692163e-06], ['h.', 5.19766728692163e-06], ['mit->second.push_back(*p);', 5.19766728692163e-06], ['{";', 5.19766728692163e-06], ['EXPRESSION_STRUCT_CONSTRUCTION:', 5.19766728692163e-06], ['EXPRESSION_FIXED_ARRAY_CONSTRUCTION:', 5.19766728692163e-06], ['EXPRESSION_SLICE_CONSTRUCTION:', 5.19766728692163e-06], ['EXPRESSION_MAP_CONSTRUCTION:', 5.19766728692163e-06], ['*pace', 5.19766728692163e-06], ['!pace->is_constant_array();', 5.19766728692163e-06], ['(no->is_result_variable()', 5.19766728692163e-06], ['(expr_type->interface_type()', 5.19766728692163e-06], ['(!expr_type->is_error()', 5.19766728692163e-06], ['this->report_error(_("type', 5.19766728692163e-06], ['assertion:', 5.19766728692163e-06], ['conversion;', 5.19766728692163e-06], ['alloc->allocation_expression()->set_allocate_on_stack();', 5.19766728692163e-06], ['barrier,', 5.19766728692163e-06], ['etype_ptr,', 5.19766728692163e-06], ['Runtime::make_call(Runtime::TYPEDMEMMOVE,', 5.19766728692163e-06], ['Statement::make_temporary(element_type,', 5.19766728692163e-06], ['Expression::make_temporary_reference(this->temp_receiver_,', 5.19766728692163e-06], ['recv_addr', 5.19766728692163e-06], ['Garbage', 5.19766728692163e-06], ['Collection', 5.19766728692163e-06], ['Type::make_pointer_type(Type::lookup_integer_type("uint8"));', 5.19766728692163e-06], ['describes.', 5.19766728692163e-06], ['gcprog,', 5.19766728692163e-06], ['pointer_uint8_type->get_backend(gogo);', 5.19766728692163e-06], ['gogo->backend()->convert_expression(ubtype,', 5.19766728692163e-06], ['regard', 5.19766728692163e-06], ['type_info)', 5.19766728692163e-06], ['(this->type_info_)', 5.19766728692163e-06], ['TYPE_INFO_SIZE:', 5.19766728692163e-06], ['TYPE_INFO_BACKEND_PTRDATA:', 5.19766728692163e-06], ['TYPE_INFO_DESCRIPTOR_PTRDATA:', 5.19766728692163e-06], ['TYPE_INFO_ALIGNMENT:', 5.19766728692163e-06], ['TYPE_INFO_FIELD_ALIGNMENT:', 5.19766728692163e-06], ['this->slice_info_,', 5.19766728692163e-06], ['(this->slice_info_)', 5.19766728692163e-06], ['SLICE_INFO_VALUE_POINTER:', 5.19766728692163e-06], ['SLICE_INFO_LENGTH:', 5.19766728692163e-06], ['SLICE_INFO_CAPACITY:', 5.19766728692163e-06], ['this->slice_info_', 5.19766728692163e-06], ['vals[0]', 5.19766728692163e-06], ['vals[1]', 5.19766728692163e-06], ['length:', 5.19766728692163e-06], ['valmem,', 5.19766728692163e-06], ['iface,', 5.19766728692163e-06], ['this->iface_info_,', 5.19766728692163e-06], ['(this->iface_info_)', 5.19766728692163e-06], ['INTERFACE_INFO_METHODS:', 5.19766728692163e-06], ['result_types[itype]', 5.19766728692163e-06], ['pdt;', 5.19766728692163e-06], ['go_assert(ft->receiver()', 5.19766728692163e-06], ['mparams', 5.19766728692163e-06], ['mparams->reserve(params->size()', 5.19766728692163e-06], ['mparams->push_back(Typed_identifier("",', 5.19766728692163e-06], ['ft->location()));', 5.19766728692163e-06], ['mparams->push_back(*pp);', 5.19766728692163e-06], ['mresults', 5.19766728692163e-06], ['(ft->results()', 5.19766728692163e-06], ['ft->results()->copy());', 5.19766728692163e-06], ['Backend_function_type*', 5.19766728692163e-06], ['mft', 5.19766728692163e-06], ['mparams,', 5.19766728692163e-06], ['mresults,', 5.19766728692163e-06], ['ft->location());', 5.19766728692163e-06], ['INTERFACE_INFO_OBJECT:', 5.19766728692163e-06], ['is_empty', 5.19766728692163e-06], ['this->iface_info_', 5.19766728692163e-06], ['object:', 5.19766728692163e-06], ['first_value,', 5.19766728692163e-06], ['Interface_mtable_expression(itype,', 5.19766728692163e-06], ['this->method_table_type_;', 5.19766728692163e-06], ['interface_methods', 5.19766728692163e-06], ['this->itype_->methods();', 5.19766728692163e-06], ['go_assert(!interface_methods->empty());', 5.19766728692163e-06], ['sfl->push_back(Struct_field(tid));', 5.19766728692163e-06], ['descriptors;', 5.19766728692163e-06], ['asm_name(go_selectively_encode_id(mangled_name));', 5.19766728692163e-06], ['nt->method_function(p->name(),', 5.19766728692163e-06], ['st->method_function(p->name(),', 5.19766728692163e-06], ['go_assert(m', 5.19766728692163e-06], ['no->is_function_declaration());', 5.19766728692163e-06], ['!is_public,', 5.19766728692163e-06], ['gogo->backend()->type_field_offset(btype,', 5.19766728692163e-06], ['label_(label)', 5.19766728692163e-06], ['label_;', 5.19766728692163e-06], ['this->cond_->get_backend(context);', 5.19766728692163e-06], ['(Expression::traverse(&this->init_,', 5.19766728692163e-06], ['this->init_->determine_type_no_context();', 5.19766728692163e-06], ['this->init_->get_backend(context);', 5.19766728692163e-06], ['init_stmt', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->init_);', 5.19766728692163e-06], ['imp->peek_char();', 5.19766728692163e-06], ["'&'", 5.19766728692163e-06], ['long>(ifb->off()));', 5.19766728692163e-06], ['Expression::make_var_reference(var,', 5.19766728692163e-06], ['a.u_.int_val);', 5.19766728692163e-06], ['a.u_.float_val,', 5.19766728692163e-06], ['mpc_set(this->u_.complex_val,', 5.19766728692163e-06], ['a.u_.complex_val,', 5.19766728692163e-06], ['contents.', 5.19766728692163e-06], ['NC_INT;', 5.19766728692163e-06], ['mpc_realref(val),', 5.19766728692163e-06], ['mpc_imagref(val),', 5.19766728692163e-06], ['min_exp;', 5.19766728692163e-06], ['min_exp', 5.19766728692163e-06], ['mpc_init2(*val,', 5.19766728692163e-06], ['mpc_set(*val,', 5.19766728692163e-06], ['NC_UL_NOTINT;', 5.19766728692163e-06], ['*val)', 5.19766728692163e-06], ['mpz_get_ui(ival);', 5.19766728692163e-06], ['(!mpfr_integer_p(fval))', 5.19766728692163e-06], ['mpz_init(ival);', 5.19766728692163e-06], ['mpfr_get_z(ival,', 5.19766728692163e-06], ['(!mpfr_integer_p(this->u_.float_val))', 5.19766728692163e-06], ['mpz_init(*val);', 5.19766728692163e-06], ['mpfr_get_z(*val,', 5.19766728692163e-06], ['"floating', 5.19766728692163e-06], ['mpfr_get_z(val,', 5.19766728692163e-06], ['mpz_sgn(val)', 5.19766728692163e-06], ['type->bits()', 5.19766728692163e-06], ['(!ret', 5.19766728692163e-06], ['"integer', 5.19766728692163e-06], ['mpfr_init_set(val,', 5.19766728692163e-06], ['float");', 5.19766728692163e-06], ['Round', 5.19766728692163e-06], ['mpfr_set_prec(t,', 5.19766728692163e-06], ['24);', 5.19766728692163e-06], ['53);', 5.19766728692163e-06], ['mpc_set(val,', 5.19766728692163e-06], ['max_exp)', 5.19766728692163e-06], ['mpc_init2(t,', 5.19766728692163e-06], ['seed)', 5.19766728692163e-06], ['PRIME;', 5.19766728692163e-06], ['"dmd/import.h"', 5.19766728692163e-06], ['M,', 5.19766728692163e-06], ['(m->md', 5.19766728692163e-06], ['m->isym', 5.19766728692163e-06], ['(loc),', 5.19766728692163e-06], ['(Import', 5.19766728692163e-06], ['(module);', 5.19766728692163e-06], ['are.', 5.19766728692163e-06], ['d->toAlias', 5.19766728692163e-06], ['templates', 5.19766728692163e-06], ['tuples.', 5.19766728692163e-06], ['(TemplateDeclaration', 5.19766728692163e-06], ['(TupleDeclaration', 5.19766728692163e-06], ['imported_module_or_decl.', 5.19766728692163e-06], ['Ltd.', 5.19766728692163e-06], ['"ssa.h"', 5.19766728692163e-06], ['"gimple-iterator.h"', 5.19766728692163e-06], ['"gimplify-me.h"', 5.19766728692163e-06], ['"cfgloop.h"', 5.19766728692163e-06], ['"params.h"', 5.19766728692163e-06], ['"tree-scalar-evolution.h"', 5.19766728692163e-06], ['"tree-ssa-loop-ivopts.h"', 5.19766728692163e-06], ['"tree-vectorizer.h"', 5.19766728692163e-06], ['firstly', 5.19766728692163e-06], ['loop_i>', 5.19766728692163e-06], ['loop_k>.', 5.19766728692163e-06], ['<loop_i,', 5.19766728692163e-06], ['interchanged,', 5.19766728692163e-06], ['transformation.', 5.19766728692163e-06], ['profitable.', 5.19766728692163e-06], ['Interchange', 5.19766728692163e-06], ['reductions', 5.19766728692163e-06], ['INNER_STRIDE_RATIO', 5.19766728692163e-06], ['STMT_COST_RATIO', 5.19766728692163e-06], ['DR', 5.19766728692163e-06], ['reduction_type', 5.19766728692163e-06], ['UNKNOWN_RTYPE', 5.19766728692163e-06], ['Reduction', 5.19766728692163e-06], ['Lcssa', 5.19766728692163e-06], ['Stmts', 5.19766728692163e-06], ['next.', 5.19766728692163e-06], ['*consumer;', 5.19766728692163e-06], ['re)', 5.19766728692163e-06], ['DOUBLE_RTYPE)', 5.19766728692163e-06], ['Double', 5.19766728692163e-06], ['Unknown', 5.19766728692163e-06], ['IV.', 5.19766728692163e-06], ['dump_induction', 5.19766728692163e-06], ['iv->var,', 5.19766728692163e-06], ['classify_simple_reduction', 5.19766728692163e-06], ['equals', 5.19766728692163e-06], ['Basic', 5.19766728692163e-06], ['*outer)', 5.19766728692163e-06], ['(single_exit', 5.19766728692163e-06], ['(loop)),', 5.19766728692163e-06], ['iv;', 5.19766728692163e-06], ['&iv);', 5.19766728692163e-06], ['m_reductions.iterate', 5.19766728692163e-06], ['(stmt)))', 5.19766728692163e-06], ['phi', 5.19766728692163e-06], ['re->producer', 5.19766728692163e-06], ['*iloop)', 5.19766728692163e-06], ['(m_reductions.length', 5.19766728692163e-06], ['(bb->loop_father', 5.19766728692163e-06], ['(gcall', 5.19766728692163e-06], ['*call', 5.19766728692163e-06], ['<gcall', 5.19766728692163e-06], ['!gimple_inexpensive_call_p', 5.19766728692163e-06], ['(lhs)', 5.19766728692163e-06], ['b[j][i]', 5.19766728692163e-06], ['c[j][i];', 5.19766728692163e-06], ['undoing', 5.19766728692163e-06], ['(producer);', 5.19766728692163e-06], ['(!gimple_assign_load_p', 5.19766728692163e-06], ['re->init_ref', 5.19766728692163e-06], ['(consumer);', 5.19766728692163e-06], ['!operand_equal_p', 5.19766728692163e-06], ['re->type', 5.19766728692163e-06], ['*lcssa_phi', 5.19766728692163e-06], ['*use_phi;', 5.19766728692163e-06], ['loop_latch_edge', 5.19766728692163e-06], ['(next)', 5.19766728692163e-06], ['(next);', 5.19766728692163e-06], ['(next_def);', 5.19766728692163e-06], ['!flow_bb_inside_loop_p', 5.19766728692163e-06], ['restricted', 5.19766728692163e-06], ['reduction,', 5.19766728692163e-06], ['below:', 5.19766728692163e-06], ['+---------------------+', 5.19766728692163e-06], ['relax', 5.19766728692163e-06], ['black', 5.19766728692163e-06], ['single_imm_use', 5.19766728692163e-06], ['&use_p,', 5.19766728692163e-06], ['flow_bb_inside_loop_p', 5.19766728692163e-06], ['(single_use)))', 5.19766728692163e-06], ['MINUS_EXPR', 5.19766728692163e-06], ['m_loop,', 5.19766728692163e-06], ['m_exit->dest', 5.19766728692163e-06], ['(use_phi,', 5.19766728692163e-06], ['m_exit)', 5.19766728692163e-06], ['use_phi;', 5.19766728692163e-06], ['(!lcssa_phi)', 5.19766728692163e-06], ['reduction);', 5.19766728692163e-06], ['re->var', 5.19766728692163e-06], ['re->init', 5.19766728692163e-06], ['re->next', 5.19766728692163e-06], ['re->phi', 5.19766728692163e-06], ['phi;', 5.19766728692163e-06], ['re->lcssa_phi', 5.19766728692163e-06], ['lcssa_phi;', 5.19766728692163e-06], ['m_reductions.safe_push', 5.19766728692163e-06], ['inner_re->type', 5.19766728692163e-06], ['Outer', 5.19766728692163e-06], ['DOUBLE_RTYPE;', 5.19766728692163e-06], ['Var', 5.19766728692163e-06], ['invariant,', 5.19766728692163e-06], ['happen.', 5.19766728692163e-06], ['(chrec))', 5.19766728692163e-06], ['raise', 5.19766728692163e-06], ['*iv', 5.19766728692163e-06], ['induction);', 5.19766728692163e-06], ['iv->var', 5.19766728692163e-06], ['iv->init_val', 5.19766728692163e-06], ['iv->init_expr', 5.19766728692163e-06], ['iv->step', 5.19766728692163e-06], ['m_inductions.safe_push', 5.19766728692163e-06], ['(chrec),', 5.19766728692163e-06], ['CHREC_LEFT', 5.19766728692163e-06], ['(chrec);', 5.19766728692163e-06], ['(m_loop->header);', 5.19766728692163e-06], ['gsi.phi', 5.19766728692163e-06], ['(phi);', 5.19766728692163e-06], ['(virtual_operand_p', 5.19766728692163e-06], ['chrec);', 5.19766728692163e-06], ['var))', 5.19766728692163e-06], ['CONSUMER', 5.19766728692163e-06], ['ssa', 5.19766728692163e-06], ['BB,', 5.19766728692163e-06], ['STMTS.', 5.19766728692163e-06], ['find_deps_in_bb_for_stmt', 5.19766728692163e-06], ['worklist;', 5.19766728692163e-06], ['ssa_op_iter', 5.19766728692163e-06], ['gimple_set_plf', 5.19766728692163e-06], ['GF_PLF_1,', 5.19766728692163e-06], ['worklist.safe_push', 5.19766728692163e-06], ['SSA_OP_USE)', 5.19766728692163e-06], ['(is_a', 5.19766728692163e-06], ['(def_stmt)', 5.19766728692163e-06], ['GF_PLF_1))', 5.19766728692163e-06], ['gsi_start_nondebug_bb', 5.19766728692163e-06], ['gsi_remove', 5.19766728692163e-06], ['gsi_next_nondebug', 5.19766728692163e-06], ['(&gsi);', 5.19766728692163e-06], ['RE', 5.19766728692163e-06], ['//producer', 5.19766728692163e-06], ['reduc_sum', 5.19766728692163e-06], ['MEM_REF[idx]', 5.19766728692163e-06], ['//consumer', 5.19766728692163e-06], ['bitmap', 5.19766728692163e-06], ['*stmt;', 5.19766728692163e-06], ['(re->producer);', 5.19766728692163e-06], ['(&from,', 5.19766728692163e-06], ['copy_ssa_name', 5.19766728692163e-06], ['(re->var);', 5.19766728692163e-06], ['gimple_build_assign', 5.19766728692163e-06], ['gsi_insert_seq_before', 5.19766728692163e-06], ['GSI_SAME_STMT);', 5.19766728692163e-06], ['FOR_EACH_IMM_USE_STMT', 5.19766728692163e-06], ['FOR_EACH_IMM_USE_ON_STMT', 5.19766728692163e-06], ['SET_USE', 5.19766728692163e-06], ['new_var);', 5.19766728692163e-06], ['update_stmt', 5.19766728692163e-06], ['unlink_stmt_vdef', 5.19766728692163e-06], ['(re->consumer);', 5.19766728692163e-06], ['release_ssa_name', 5.19766728692163e-06], ['gimple_set_vdef', 5.19766728692163e-06], ['(re->next));', 5.19766728692163e-06], ['&to);', 5.19766728692163e-06], ['DCE.', 5.19766728692163e-06], ['(dce_seeds,', 5.19766728692163e-06], ['(re->var));', 5.19766728692163e-06], ['free_data_refs_with_aux', 5.19766728692163e-06], ['(dr)->release', 5.19766728692163e-06], ['(vec<tree>', 5.19766728692163e-06], ['dr->aux;', 5.19766728692163e-06], ['(datarefs);', 5.19766728692163e-06], ['(loop_nest),', 5.19766728692163e-06], ['(m_dce_seeds);', 5.19766728692163e-06], ['update_data_info', 5.19766728692163e-06], ['(unsigned,', 5.19766728692163e-06], ['interchange_loops', 5.19766728692163e-06], ['move_code_to_inner_loop', 5.19766728692163e-06], ['loops,', 5.19766728692163e-06], ['I_IDX/O_IDX', 5.19766728692163e-06], ['dependences.', 5.19766728692163e-06], ['data_dependence_relation', 5.19766728692163e-06], ['*ddr;', 5.19766728692163e-06], ['ddrs.iterate', 5.19766728692163e-06], ['&ddr);', 5.19766728692163e-06], ['chrec_known)', 5.19766728692163e-06], ['DDR_NUM_DIST_VECTS', 5.19766728692163e-06], ['lambda_vector', 5.19766728692163e-06], ['dist_vect', 5.19766728692163e-06], ['DDR_DIST_VECT', 5.19766728692163e-06], ['j);', 5.19766728692163e-06], ["'>'", 5.19766728692163e-06], ['m_loop_nest.length', 5.19766728692163e-06], ['--;', 5.19766728692163e-06], ['o_idx', 5.19766728692163e-06], ['Be', 5.19766728692163e-06], ['conservative,', 5.19766728692163e-06], ['direction', 5.19766728692163e-06], ['i_niters,', 5.19766728692163e-06], ['o_niters,', 5.19766728692163e-06], ['var_after;', 5.19766728692163e-06], ['*loop_nest', 5.19766728692163e-06], ['(iloop.m_loop);', 5.19766728692163e-06], ['(iloop.m_loop),', 5.19766728692163e-06], ['i_niters);', 5.19766728692163e-06], ['(instantiate_below,', 5.19766728692163e-06], ['force_gimple_operand_gsi', 5.19766728692163e-06], ['GSI_CONTINUE_LINKING);', 5.19766728692163e-06], ['(oloop.m_loop);', 5.19766728692163e-06], ['(oloop.m_loop),', 5.19766728692163e-06], ['o_niters);', 5.19766728692163e-06], ["src's", 5.19766728692163e-06], ['tgt', 5.19766728692163e-06], ['(oloop.m_loop,', 5.19766728692163e-06], ['oloop);', 5.19766728692163e-06], ['create_canonical_iv', 5.19766728692163e-06], ['free_numbers_of_iterations_estimates', 5.19766728692163e-06], ['association', 5.19766728692163e-06], ['CFG', 5.19766728692163e-06], ['breaking', 5.19766728692163e-06], ['TGT', 5.19766728692163e-06], ['M;', 5.19766728692163e-06], ['ii;', 5.19766728692163e-06], ['(e->src),', 5.19766728692163e-06], ['iv->var)', 5.19766728692163e-06], ['(base,', 5.19766728692163e-06], ['step,', 5.19766728692163e-06], ['*outer,', 5.19766728692163e-06], ['*inner,', 5.19766728692163e-06], ['(flow_bb_inside_loop_p', 5.19766728692163e-06], ['(inner,', 5.19766728692163e-06], ['(gimple_vuse', 5.19766728692163e-06], ['(k', 5.19766728692163e-06], ['compute_access_stride', 5.19766728692163e-06], ['(build_int_cst', 5.19766728692163e-06], ['(sizetype,', 5.19766728692163e-06], ['COMPONENT_REF', 5.19766728692163e-06], ['dr->aux', 5.19766728692163e-06], ['strides;', 5.19766728692163e-06], ['chrec_contains_undetermined', 5.19766728692163e-06], ['sl', 5.19766728692163e-06], ['POLYNOMIAL_CHREC)', 5.19766728692163e-06], ['get_chrec_loop', 5.19766728692163e-06], ['(sl);', 5.19766728692163e-06], ['LOOP_NEST', 5.19766728692163e-06], ['compute_access_strides', 5.19766728692163e-06], ['1]);', 5.19766728692163e-06], ['(loop)', 5.19766728692163e-06], ['num_loops);', 5.19766728692163e-06], ['prune_access_strides_not_in_loop', 5.19766728692163e-06], ['*innermost,', 5.19766728692163e-06], ['(innermost)', 5.19766728692163e-06], ['DATAREFS.', 5.19766728692163e-06], ['dump_access_strides', 5.19766728692163e-06], ['profitable', 5.19766728692163e-06], ['I_IDX', 5.19766728692163e-06], ['dumps', 5.19766728692163e-06], ['iloop_strides', 5.19766728692163e-06], ['oloop_strides', 5.19766728692163e-06], ['num_resolved_not_ok_drs', 5.19766728692163e-06], ['(dump_info_p', 5.19766728692163e-06], ['dump_file', 5.19766728692163e-06], ['subloop_stride_p', 5.19766728692163e-06], ['i_idx', 5.19766728692163e-06], ['(!subloop_stride_p)', 5.19766728692163e-06], ['(iloop_stride)', 5.19766728692163e-06], ['(oloop_stride)', 5.19766728692163e-06], ['wi::to_widest', 5.19766728692163e-06], ['(multiple_of_p', 5.19766728692163e-06], ['(iloop_stride),', 5.19766728692163e-06], ['iloop_stride,', 5.19766728692163e-06], ['oloop_stride,', 5.19766728692163e-06], ['(DR_REF', 5.19766728692163e-06], ['(access_size,', 5.19766728692163e-06], ['dump_file);', 5.19766728692163e-06], ['interchage', 5.19766728692163e-06], ['strides:', 5.19766728692163e-06], ['"Stmt', 5.19766728692163e-06], ['costly.', 5.19766728692163e-06], ['wi::mul', 5.19766728692163e-06], ['all_seq_dr_after_p)', 5.19766728692163e-06], ['ddrs))', 5.19766728692163e-06], ['m_loop_nest[o_idx]);', 5.19766728692163e-06], ['(should_interchange_loops', 5.19766728692163e-06], ['"Loop_pair<outer:%d,', 5.19766728692163e-06], ['inner:%d>', 5.19766728692163e-06], ['interchanged\\n\\n",', 5.19766728692163e-06], ['oloop.m_loop->num,', 5.19766728692163e-06], ['iloop.m_loop->num);', 5.19766728692163e-06], ['ddrs);', 5.19766728692163e-06], ['(MSG_OPTIMIZED_LOCATIONS,', 5.19766728692163e-06], ['GIMPLE_PASS,', 5.19766728692163e-06], ['OPTGROUP_LOOP,', 5.19766728692163e-06], ['PROP_cfg,', 5.19766728692163e-06], ['clone', 5.19766728692163e-06], ['function:', 5.19766728692163e-06], ['besides', 5.19766728692163e-06], ['basically', 5.19766728692163e-06], ['allowed.', 5.19766728692163e-06], ['rectangle', 5.19766728692163e-06], ['(loop->inner', 5.19766728692163e-06], ['(loop->header', 5.19766728692163e-06], ['(EDGE_COUNT', 5.19766728692163e-06], ['(loop->header->preds)', 5.19766728692163e-06], ['EDGE_COUNT', 5.19766728692163e-06], ['EDGE_PRED', 5.19766728692163e-06], ['(loop->header,', 5.19766728692163e-06], ['(unsupported_edge', 5.19766728692163e-06], ['(e0)', 5.19766728692163e-06], ['(e1)', 5.19766728692163e-06], ['loop->latch', 5.19766728692163e-06], ['loop->latch)', 5.19766728692163e-06], ['EDGE_SUCC', 5.19766728692163e-06], ['(exit->src,', 5.19766728692163e-06], ['*bbs', 5.19766728692163e-06], ['niters);', 5.19766728692163e-06], ['adjacent', 5.19766728692163e-06], ['loop_nest;', 5.19766728692163e-06], ['DDRS.', 5.19766728692163e-06], ['tree_loop_interchange_compute_ddrs', 5.19766728692163e-06], ['*ddrs)', 5.19766728692163e-06], ['*innermost', 5.19766728692163e-06], ['(b))', 5.19766728692163e-06], ['ddr', 5.19766728692163e-06], ['(a),', 5.19766728692163e-06], ['(b),', 5.19766728692163e-06], ['prune_datarefs_not_in_loop', 5.19766728692163e-06], ['(j);', 5.19766728692163e-06], ['father', 5.19766728692163e-06], ['prepare_data_references', 5.19766728692163e-06], ['bb_refs', 5.19766728692163e-06], ['bb->aux', 5.19766728692163e-06], ['load/store', 5.19766728692163e-06], ['vec<loop_p>', 5.19766728692163e-06], ['*datarefs,', 5.19766728692163e-06], ['*outermost', 5.19766728692163e-06], ['(!start_loop', 5.19766728692163e-06], ['pruning', 5.19766728692163e-06], ['start_loop;', 5.19766728692163e-06], ['start_loop)', 5.19766728692163e-06], ['free_dependence_relations', 5.19766728692163e-06], ['*fun)', 5.19766728692163e-06], ['type0', 5.19766728692163e-06], ['etc.,', 5.19766728692163e-06], ['type0;', 5.19766728692163e-06], ['(op0))', 5.19766728692163e-06], ['Will', 5.19766728692163e-06], ['(result_type,', 5.19766728692163e-06], ['decl_with_nonnull_addr_p', 5.19766728692163e-06], ['(const_tree', 5.19766728692163e-06], ['(DECL_P', 5.19766728692163e-06], ['EQ_EXPR:', 5.19766728692163e-06], ['NE_EXPR:', 5.19766728692163e-06], ['LE_EXPR:', 5.19766728692163e-06], ['GE_EXPR:', 5.19766728692163e-06], ['LT_EXPR:', 5.19766728692163e-06], ['GT_EXPR:', 5.19766728692163e-06], ['TRUTH_ANDIF_EXPR:', 5.19766728692163e-06], ['TRUTH_ORIF_EXPR:', 5.19766728692163e-06], ['(OPT_Waddress,', 5.19766728692163e-06], ['((TREE_SIDE_EFFECTS', 5.19766728692163e-06], ['TRUTH_OR_EXPR', 5.19766728692163e-06], ['TRUTH_ORIF_EXPR),', 5.19766728692163e-06], ['NEGATE_EXPR:', 5.19766728692163e-06], ['ABS_EXPR:', 5.19766728692163e-06], ['COND_EXPR:', 5.19766728692163e-06], ['Distribute', 5.19766728692163e-06], ['1)),', 5.19766728692163e-06], ['2)));', 5.19766728692163e-06], ['CONVERT_EXPR', 5.19766728692163e-06], ['affects', 5.19766728692163e-06], ['REFERENCE_TYPE', 5.19766728692163e-06], ['VOID_TYPE:', 5.19766728692163e-06], ['INTEGER_TYPE:', 5.19766728692163e-06], ['(convert_to_integer', 5.19766728692163e-06], ['BOOLEAN_TYPE:', 5.19766728692163e-06], ['POINTER_TYPE:', 5.19766728692163e-06], ['REFERENCE_TYPE:', 5.19766728692163e-06], ['REAL_TYPE:', 5.19766728692163e-06], ['COMPLEX_TYPE', 5.19766728692163e-06], ['COMPLEX_TYPE:', 5.19766728692163e-06], ['(type)),', 5.19766728692163e-06], ['VECTOR_TYPE:', 5.19766728692163e-06], ['retrieving', 5.19766728692163e-06], ['*totype', 5.19766728692163e-06], ['ETYPE', 5.19766728692163e-06], ['(etype', 5.19766728692163e-06], ['etype->toBasetype', 5.19766728692163e-06], ['totype->toBasetype', 5.19766728692163e-06], ['Tstruct:', 5.19766728692163e-06], ['(totype->size', 5.19766728692163e-06], ['etype->size', 5.19766728692163e-06], ['Tclass:', 5.19766728692163e-06], ['special.', 5.19766728692163e-06], ['(totype);', 5.19766728692163e-06], ['object),', 5.19766728692163e-06], ['no-op', 5.19766728692163e-06], ['(OPT_Wcast_result,', 5.19766728692163e-06], ['"cast', 5.19766728692163e-06], ['result",', 5.19766728692163e-06], ['totype,', 5.19766728692163e-06], ['esize)', 5.19766728692163e-06], ['(dim', 5.19766728692163e-06], ['d_uns64', 5.19766728692163e-06], ['D2.', 5.19766728692163e-06], ['Tpointer:', 5.19766728692163e-06], ['Taarray', 5.19766728692163e-06], ['typeof(null)', 5.19766728692163e-06], ['Tvector:', 5.19766728692163e-06], ['0.0,', 5.19766728692163e-06], ['non', 5.19766728692163e-06], ['TypeSArray', 5.19766728692163e-06], ['uinteger_t', 5.19766728692163e-06], ['ce;', 5.19766728692163e-06], ['convert_for_argument', 5.19766728692163e-06], ['arguments:', 5.19766728692163e-06], ['(valist_array_p', 5.19766728692163e-06], ['(arg->type))', 5.19766728692163e-06], ['(argument_reference_p', 5.19766728692163e-06], ['Arrays', 5.19766728692163e-06], ['addition,', 5.19766728692163e-06], ['(type->toBasetype', 5.19766728692163e-06], ['()->ty)', 5.19766728692163e-06], ['!is', 5.19766728692163e-06], ['(TRUTH_OR_EXPR,', 5.19766728692163e-06], ['func;', 5.19766728692163e-06], ['*exp)', 5.19766728692163e-06], ['()->arrayOf', 5.19766728692163e-06], ['exp->type,', 5.19766728692163e-06], ['((tb->ty', 5.19766728692163e-06], ['(tb,', 5.19766728692163e-06], ['maybe_temporary_var', 5.19766728692163e-06], ['hooks', 5.19766728692163e-06], ["'B':", 5.19766728692163e-06], ["'C':", 5.19766728692163e-06], ["'D':", 5.19766728692163e-06], ["'E':", 5.19766728692163e-06], ["'F':", 5.19766728692163e-06], ["'G':", 5.19766728692163e-06], ["'H':", 5.19766728692163e-06], ["'I':", 5.19766728692163e-06], ["'J':", 5.19766728692163e-06], ["'K':", 5.19766728692163e-06], ["'L':", 5.19766728692163e-06], ["'M':", 5.19766728692163e-06], ["'N':", 5.19766728692163e-06], ["'O':", 5.19766728692163e-06], ["'P':", 5.19766728692163e-06], ["'Q':", 5.19766728692163e-06], ["'R':", 5.19766728692163e-06], ["'S':", 5.19766728692163e-06], ["'T':", 5.19766728692163e-06], ["'V':", 5.19766728692163e-06], ["'W':", 5.19766728692163e-06], ["'Y':", 5.19766728692163e-06], ["'Z':", 5.19766728692163e-06], ["'c':", 5.19766728692163e-06], ["'e':", 5.19766728692163e-06], ["'h':", 5.19766728692163e-06], ["'i':", 5.19766728692163e-06], ["'j':", 5.19766728692163e-06], ["'k':", 5.19766728692163e-06], ["'o':", 5.19766728692163e-06], ["'s':", 5.19766728692163e-06], ["'w':", 5.19766728692163e-06], ["'y':", 5.19766728692163e-06], ["'z':", 5.19766728692163e-06], ["'8':", 5.19766728692163e-06], ["'9':", 5.19766728692163e-06], ["'_':", 5.19766728692163e-06], ['read.', 5.19766728692163e-06], ['*pc', 5.19766728692163e-06], ['p[i];', 5.19766728692163e-06], ['6;', 5.19766728692163e-06], ['assembler-friendly', 5.19766728692163e-06], ['..uXXXX', 5.19766728692163e-06], ['&id)', 5.19766728692163e-06], ['..u', 5.19766728692163e-06], ["'.',", 5.19766728692163e-06], ["'0')", 5.19766728692163e-06], ['fetch_utf8_char(p,', 5.19766728692163e-06], ['buf[16];', 5.19766728692163e-06], ['demangling', 5.19766728692163e-06], ['"..u",', 5.19766728692163e-06], ['"..U",', 5.19766728692163e-06], ['"..z",', 5.19766728692163e-06], ['11;', 5.19766728692163e-06], ['go_encode_id.', 5.19766728692163e-06], ['tag)', 5.19766728692163e-06], ['byte[][]', 5.19766728692163e-06], ['void**', 5.19766728692163e-06], ['pointerTo(),', 5.19766728692163e-06], ['libcall_types[type];', 5.19766728692163e-06], ['Type::tint32;', 5.19766728692163e-06], ['Type::tsize_t;', 5.19766728692163e-06], ['get_object_type', 5.19766728692163e-06], ['Type::tvoid->arrayOf', 5.19766728692163e-06], ["`...'.", 5.19766728692163e-06], ['build_libcall_decl', 5.19766728692163e-06], ['nparams);', 5.19766728692163e-06], ['Type::tvoid)', 5.19766728692163e-06], ['tret', 5.19766728692163e-06], ['build_varargs_function_type_array', 5.19766728692163e-06], ['(tret,', 5.19766728692163e-06], ['build_function_type_array', 5.19766728692163e-06], ['get_libcall', 5.19766728692163e-06], ['(libcall_fn', 5.19766728692163e-06], ['libcall_decls[libcall];', 5.19766728692163e-06], ['##', 5.19766728692163e-06], ['NARGS', 5.19766728692163e-06], ['build_call_expr_loc_array', 5.19766728692163e-06], ['brig_inst.type', 5.19766728692163e-06], ['HSAIL_TYPE)', 5.19766728692163e-06], ['operand1)', 5.19766728692163e-06], ['saturating', 5.19766728692163e-06], ['(operand0),', 5.19766728692163e-06], ['separately', 5.19766728692163e-06], ['vectors,', 5.19766728692163e-06], ['(element_count);', 5.19766728692163e-06], ['Unpack', 5.19766728692163e-06], ['tightly', 5.19766728692163e-06], ['VEC_PERM_EXPR.', 5.19766728692163e-06], ['(operands[0]),', 5.19766728692163e-06], ['perm;', 5.19766728692163e-06], ['Unpacks', 5.19766728692163e-06], ['unpacked', 5.19766728692163e-06], ['positions', 5.19766728692163e-06], ['and_mask_element', 5.19766728692163e-06], ['vec_type,', 5.19766728692163e-06], ['operands[0]),', 5.19766728692163e-06], ['mask_vec);', 5.19766728692163e-06], ['extend_int', 5.19766728692163e-06], ['src_vect', 5.19766728692163e-06], ['("scalar",', 5.19766728692163e-06], ['(pos),', 5.19766728692163e-06], ['operands[2],', 5.19766728692163e-06], ['element_width', 5.19766728692163e-06], ['bitoffset', 5.19766728692163e-06], ['bitoffset);', 5.19766728692163e-06], ['(uint64_t)', 5.19766728692163e-06], ['scalar,', 5.19766728692163e-06], ['(arith_type));', 5.19766728692163e-06], ['element_count));', 5.19766728692163e-06], ['opcode,', 5.19766728692163e-06], ["instruction's", 5.19766728692163e-06], ['brig_type);', 5.19766728692163e-06], ['RSHIFT_EXPR', 5.19766728692163e-06], ['operands[1]', 5.19766728692163e-06], ['input_count', 5.19766728692163e-06], ['TREE_LIST)', 5.19766728692163e-06], ['emulate', 5.19766728692163e-06], ['"standard"', 5.19766728692163e-06], ['mult_res', 5.19766728692163e-06], ['mult_res,', 5.19766728692163e-06], ['BRIG_OPCODE_UNPACKLO', 5.19766728692163e-06], ['(operands);', 5.19766728692163e-06], ['BRIG_OPCODE_PACK)', 5.19766728692163e-06], ['(RDIV_EXPR,', 5.19766728692163e-06], ['MODIFY_EXPR)', 5.19766728692163e-06], ['modes', 5.19766728692163e-06], ['gccbrig_tree_type_to_hsa_type', 5.19766728692163e-06], ['hsa_type_packed_p', 5.19766728692163e-06], ['element_size_bits;', 5.19766728692163e-06], ['(is_vec_instr)', 5.19766728692163e-06], ['(brig_inst_type)', 5.19766728692163e-06], ['arith_type', 5.19766728692163e-06], ['gccbrig_is_bit_operation', 5.19766728692163e-06], ['(brig_inst->base.kind', 5.19766728692163e-06], ['brig_inst)->pack;', 5.19766728692163e-06], ['build_lower_element_broadcast', 5.19766728692163e-06], ['sat_arith', 5.19766728692163e-06], ['goto_stmt', 5.19766728692163e-06], ['(goto_stmt);', 5.19766728692163e-06], ['dependent', 5.19766728692163e-06], ['Intel', 5.19766728692163e-06], ["I've", 5.19766728692163e-06], ['figures', 5.19766728692163e-06], ['operand0_elements;', 5.19766728692163e-06], ['operand0_elements);', 5.19766728692163e-06], ['operand1_elements;', 5.19766728692163e-06], ['operand1_elements);', 5.19766728692163e-06], ['result_elements;', 5.19766728692163e-06], ['short_integer_type_node;', 5.19766728692163e-06], ['promoted_type_size', 5.19766728692163e-06], ['scalar_expr', 5.19766728692163e-06], ['promoted_type,', 5.19766728692163e-06], ['result_elements.push_back', 5.19766728692163e-06], ['(convert', 5.19766728692163e-06], ['(result_elements);', 5.19766728692163e-06], ['half_storage_type', 5.19766728692163e-06], ['is_fp16_operation', 5.19766728692163e-06], ['old_value', 5.19766728692163e-06], ['(build_resize_convert_view', 5.19766728692163e-06], ['(half_storage_type,', 5.19766728692163e-06], ['mask_inner_type', 5.19766728692163e-06], ['new_value,', 5.19766728692163e-06], ['(instr_expr);', 5.19766728692163e-06], ['(vec_operand));', 5.19766728692163e-06], ['vec_operand,', 5.19766728692163e-06], ["'!',", 5.19766728692163e-06], ["'a',", 5.19766728692163e-06], ["'h',", 5.19766728692163e-06], ["'i',", 5.19766728692163e-06], ['AIX', 5.19766728692163e-06], ['Archive_fl_header', 5.19766728692163e-06], ['spaces', 5.19766728692163e-06], ['Archive_header', 5.19766728692163e-06], ['ar_date[12];', 5.19766728692163e-06], ['UID', 5.19766728692163e-06], ['GID', 5.19766728692163e-06], ['octal.', 5.19766728692163e-06], ['ar_namlen', 5.19766728692163e-06], ['Archive_big_header', 5.19766728692163e-06], ['armagt,', 5.19766728692163e-06], ['armagb,', 5.19766728692163e-06], ['Archive_file', 5.19766728692163e-06], ['fd_(fd),', 5.19766728692163e-06], ['res)', 5.19766728692163e-06], ['HDR,', 5.19766728692163e-06], ['succeeded.', 5.19766728692163e-06], ['Archive_header*', 5.19766728692163e-06], ['hdr,', 5.19766728692163e-06], ['nested_off)', 5.19766728692163e-06], ['hdrname,', 5.19766728692163e-06], ['memname);', 5.19766728692163e-06], ['sizeof(flhdr))', 5.19766728692163e-06], ['this->filesize_)', 5.19766728692163e-06], ['&filename,', 5.19766728692163e-06], ['&size,', 5.19766728692163e-06], ['(filename.empty())', 5.19766728692163e-06], ['(filename', 5.19766728692163e-06], ['rdbuf', 5.19766728692163e-06], ['rdbuf,', 5.19766728692163e-06], ['ERANGE))', 5.19766728692163e-06], ['hdr;', 5.19766728692163e-06], ['got;', 5.19766728692163e-06], ['&hdr,', 5.19766728692163e-06], ['hdr);', 5.19766728692163e-06], ['hdr)', 5.19766728692163e-06], ['EOF', 5.19766728692163e-06], ['&local_size))', 5.19766728692163e-06], ['*size', 5.19766728692163e-06], ['namlen);', 5.19766728692163e-06], ['(next_off', 5.19766728692163e-06], ['(local_next_off', 5.19766728692163e-06], ['Last', 5.19766728692163e-06], ['local_nested_off;', 5.19766728692163e-06], ['(nested_off', 5.19766728692163e-06], ['sizeof(Archive_header);', 5.19766728692163e-06], ["'/');", 5.19766728692163e-06], ['pname->clear();', 5.19766728692163e-06], ['y;', 5.19766728692163e-06], ['this->fd_;', 5.19766728692163e-06], ['this->filename_', 5.19766728692163e-06], ['hdrname', 5.19766728692163e-06], ['Archive_file*', 5.19766728692163e-06], ['nfile', 5.19766728692163e-06], ['Header', 5.19766728692163e-06], ['this->read_next_header();', 5.19766728692163e-06], ['(this->off_', 5.19766728692163e-06], ['this->next_off_;', 5.19766728692163e-06], ['p->off;', 5.19766728692163e-06], ['afile)', 5.19766728692163e-06], ['Archive_iterator(afile,', 5.19766728692163e-06], ['concatenates', 5.19766728692163e-06], ['(this->inputs_.empty())', 5.19766728692163e-06], ['this->inputs_.front();', 5.19766728692163e-06], ['this->inputs_.pop_front();', 5.19766728692163e-06], ['Advance.', 5.19766728692163e-06], ['any_data', 5.19766728692163e-06], ['any_members', 5.19766728692163e-06], ['++c)', 5.19766728692163e-06], ['(*c', 5.19766728692163e-06], ['c++;', 5.19766728692163e-06], ["'\\0':", 5.19766728692163e-06], ['"%";', 5.19766728692163e-06], ['mformat_value();', 5.19766728692163e-06], ['go_open_quote();', 5.19766728692163e-06], ['go_close_quote();', 5.19766728692163e-06], ['"%"', 5.19766728692163e-06], ['ss.str();', 5.19766728692163e-06], ['vasprintf()', 5.19766728692163e-06], ['formatting.', 5.19766728692163e-06], ['warning:', 5.19766728692163e-06], ['char*,', 5.19766728692163e-06], ['well,', 5.19766728692163e-06], ['go_be_get_quotechars(&cached_open_quote,', 5.19766728692163e-06], ['&cached_close_quote);', 5.19766728692163e-06], ['INCLUDE_UNIQUE_PTR', 5.19766728692163e-06], ['counting', 5.19766728692163e-06], ['invocations.', 5.19766728692163e-06], ['&s)', 5.19766728692163e-06], ['42;', 5.19766728692163e-06], ['has_default_ctor', 5.19766728692163e-06], ['inits', 5.19766728692163e-06], ['test_null_ptr', 5.19766728692163e-06], ['test_implicit_deletion', 5.19766728692163e-06], ['unique_ptr.', 5.19766728692163e-06], ['test_overwrite_of_null', 5.19766728692163e-06], ['test_overwrite_of_non_null', 5.19766728692163e-06], ['test_overloaded_ops', 5.19766728692163e-06], ['(f,', 5.19766728692163e-06], ['test_array_new', 5.19766728692163e-06], ['operator[]', 5.19766728692163e-06], ['gnu::unique_xmalloc_ptr', 5.19766728692163e-06], ['test_xmalloc', 5.19766728692163e-06], ['test_xmalloc_array', 5.19766728692163e-06], ['(dummy,', 5.19766728692163e-06], ['FORMAT', 5.19766728692163e-06], ['text', 5.19766728692163e-06], ["'%s'", 5.19766728692163e-06], ['remaining.', 5.19766728692163e-06], ['unhandled', 5.19766728692163e-06], ['Lagain:', 5.19766728692163e-06], ['(*p))', 5.19766728692163e-06], ['KIND', 5.19766728692163e-06], ['diagnostic_t', 5.19766728692163e-06], ['rich_location', 5.19766728692163e-06], ['(format);', 5.19766728692163e-06], ['text_info', 5.19766728692163e-06], ['text.err_no', 5.19766728692163e-06], ['errno;', 5.19766728692163e-06], ['text.args_ptr', 5.19766728692163e-06], ['text.format_spec', 5.19766728692163e-06], ['&text);', 5.19766728692163e-06], ['PREFIX1', 5.19766728692163e-06], ['PREFIX2,', 5.19766728692163e-06], ['*prefix1,', 5.19766728692163e-06], ['(!global.gag', 5.19766728692163e-06], ['*xformat;', 5.19766728692163e-06], ['(prefix2', 5.19766728692163e-06], ['prefix2,', 5.19766728692163e-06], ['(prefix1', 5.19766728692163e-06], ['vwarning', 5.19766728692163e-06], ['Warnings', 5.19766728692163e-06], ['(global.params.warnings', 5.19766728692163e-06], ['DK_WARNING,', 5.19766728692163e-06], ['vwarningSupplemental', 5.19766728692163e-06], ['deprecations', 5.19766728692163e-06], ['vdeprecation', 5.19766728692163e-06], ['!global.gag)', 5.19766728692163e-06], ['vdeprecationSupplemental', 5.19766728692163e-06], ['"predict.h"', 5.19766728692163e-06], ['simplified', 5.19766728692163e-06], ['...x[i', 5.19766728692163e-06], ['stride]...', 5.19766728692163e-06], ['considers', 5.19766728692163e-06], ['changing', 5.19766728692163e-06], ['[B]', 5.19766728692163e-06], ['cheaper', 5.19766728692163e-06], ['vectorized', 5.19766728692163e-06], ['loop).', 5.19766728692163e-06], ['memset.', 5.19766728692163e-06], ['(4)', 5.19766728692163e-06], ['practice.', 5.19766728692163e-06], ['x(:)', 5.19766728692163e-06], ['1.0e+2;', 5.19766728692163e-06], ['simple.', 5.19766728692163e-06], ['remain.', 5.19766728692163e-06], ['(We', 5.19766728692163e-06], ['becomes:', 5.19766728692163e-06], ['New', 5.19766728692163e-06], ['Enumerates', 5.19766728692163e-06], ['INNER_LIKELY', 5.19766728692163e-06], ['address_info.', 5.19766728692163e-06], ['MULTIPLIER.', 5.19766728692163e-06], ['BASE', 5.19766728692163e-06], ['Stores', 5.19766728692163e-06], ['offsets).', 5.19766728692163e-06], ["we'd", 5.19766728692163e-06], ['meaningless', 5.19766728692163e-06], ['estimate', 5.19766728692163e-06], ['(loop_versioning', 5.19766728692163e-06], ['(basic_block)', 5.19766728692163e-06], ['(tree)', 5.19766728692163e-06], ['max_insns_for_loop', 5.19766728692163e-06], ['version_for_unity', 5.19766728692163e-06], ['(address_term_info', 5.19766728692163e-06], ['HOST_WIDE_INT);', 5.19766728692163e-06], ['find_per_loop_multiplication', 5.19766728692163e-06], ['analyze_term_using_scevs', 5.19766728692163e-06], ['analyze_arbitrary_term', 5.19766728692163e-06], ['analyze_address_fragment', 5.19766728692163e-06], ['analyze_expr', 5.19766728692163e-06], ['vr_values', 5.19766728692163e-06], ['prune_conditions', 5.19766728692163e-06], ['merge_loop_info', 5.19766728692163e-06], ['make_versioning_decisions', 5.19766728692163e-06], ['implement_versioning_decisions', 5.19766728692163e-06], ['allocation.', 5.19766728692163e-06], ['m_nloops;', 5.19766728692163e-06], ['FROM', 5.19766728692163e-06], ['(from))', 5.19766728692163e-06], ['MAX_NITERS', 5.19766728692163e-06], ['MAX_NITERS;', 5.19766728692163e-06], ['(assign))', 5.19766728692163e-06], ['(assign)))', 5.19766728692163e-06], ['(dump_flags_t', 5.19766728692163e-06], ['&address)', 5.19766728692163e-06], ['%wd",', 5.19766728692163e-06], ['address.max_offset', 5.19766728692163e-06], ['hash;', 5.19766728692163e-06], ['properties', 5.19766728692163e-06], ['dominates.', 5.19766728692163e-06], ['versioned', 5.19766728692163e-06], ['(val)', 5.19766728692163e-06], ['*fn)', 5.19766728692163e-06], ['(fn),', 5.19766728692163e-06], ['(&m_bitmap_obstack);', 5.19766728692163e-06], ['gcc_obstack_init', 5.19766728692163e-06], ['(m_fn,', 5.19766728692163e-06], ['relevant', 5.19766728692163e-06], ['m_maximum_scale', 5.19766728692163e-06], ['vectorization).', 5.19766728692163e-06], ['PARAM_VALUE', 5.19766728692163e-06], ['STMT.', 5.19766728692163e-06], ['reasons,', 5.19766728692163e-06], ['involved', 5.19766728692163e-06], ['(li.outermost)', 5.19766728692163e-06], ['(outermost))', 5.19766728692163e-06], ['practice', 5.19766728692163e-06], ['op2,', 5.19766728692163e-06], ['size));', 5.19766728692163e-06], ['&term,', 5.19766728692163e-06], ['(op,', 5.19766728692163e-06], ['multiplier)', 5.19766728692163e-06], ['worklist[length++]', 5.19766728692163e-06], ['(term.inner_likelihood', 5.19766728692163e-06], ['INNER_LIKELY)', 5.19766728692163e-06], ['the"', 5.19766728692163e-06], ['%T"', 5.19766728692163e-06], ['opportunity.', 5.19766728692163e-06], ['term);', 5.19766728692163e-06], ['useful.', 5.19766728692163e-06], ['(stride)', 5.19766728692163e-06], ['multiplying', 5.19766728692163e-06], ['loop-invariant', 5.19766728692163e-06], ['SCEV', 5.19766728692163e-06], ['*mult', 5.19766728692163e-06], ['(term.expr);', 5.19766728692163e-06], ['(mult)', 5.19766728692163e-06], ['(!loop_outer', 5.19766728692163e-06], ['(gimple_assign_rhs2', 5.19766728692163e-06], ['(mult_loop,', 5.19766728692163e-06], ['"address', 5.19766728692163e-06], ['%T\\n",', 5.19766728692163e-06], ['term,', 5.19766728692163e-06], ['evolutions', 5.19766728692163e-06], ['interested', 5.19766728692163e-06], ['iterates', 5.19766728692163e-06], ['(term,', 5.19766728692163e-06], ['"i"', 5.19766728692163e-06], ['alt', 5.19766728692163e-06], ['choose', 5.19766728692163e-06], ['realistic', 5.19766728692163e-06], ['optimisation', 5.19766728692163e-06], ['offered', 5.19766728692163e-06], ['in:', 5.19766728692163e-06], ['"don\'t', 5.19766728692163e-06], ['"likely"', 5.19766728692163e-06], ['confident', 5.19766728692163e-06], ['thing,', 5.19766728692163e-06], ['rated', 5.19766728692163e-06], ['hint', 5.19766728692163e-06], ['situations', 5.19766728692163e-06], ['course', 5.19766728692163e-06], ['former', 5.19766728692163e-06], ['address.terms[i])', 5.19766728692163e-06], ['stride]', 5.19766728692163e-06], ['b[i', 5.19766728692163e-06], ['aliasing', 5.19766728692163e-06], ['chosen_stride', 5.19766728692163e-06], ['address.terms[i].stride', 5.19766728692163e-06], ['address.terms[i].inner_likelihood', 5.19766728692163e-06], ['address.terms[i].stride;', 5.19766728692163e-06], ['(version_stride)', 5.19766728692163e-06], ['Quick', 5.19766728692163e-06], ['calculated', 5.19766728692163e-06], ['address->base', 5.19766728692163e-06], ['address->terms[0].multiplier', 5.19766728692163e-06], ['multiplied', 5.19766728692163e-06], ['examine', 5.19766728692163e-06], ['PLUS_EXPR', 5.19766728692163e-06], ['MINUS_EXPR)', 5.19766728692163e-06], ['heuristic', 5.19766728692163e-06], ['(TREE_INT_CST_LOW', 5.19766728692163e-06], ['(address->terms.length', 5.19766728692163e-06], ['(This', 5.19766728692163e-06], ['dealing', 5.19766728692163e-06], ['INSERT);', 5.19766728692163e-06], ['Extend', 5.19766728692163e-06], ['Doing', 5.19766728692163e-06], ['"+', 5.19766728692163e-06], ['1"', 5.19766728692163e-06], ['2".', 5.19766728692163e-06], ['*slot', 5.19766728692163e-06], ['existed', 5.19766728692163e-06], ['statement"', 5.19766728692163e-06], ['nops', 5.19766728692163e-06], ['excessive', 5.19766728692163e-06], ['li.num_insns', 5.19766728692163e-06], ['LI_FROM_INNERMOST)', 5.19766728692163e-06], ['*inner', 5.19766728692163e-06], ['inner->next)', 5.19766728692163e-06], ['(get_loop_info', 5.19766728692163e-06], ['queued', 5.19766728692163e-06], ['to_remove', 5.19766728692163e-06], ['(to_remove', 5.19766728692163e-06], ['bitmap_clear_bit', 5.19766728692163e-06], ['to_remove);', 5.19766728692163e-06], ['(ENTRY_BLOCK_PTR_FOR_FN', 5.19766728692163e-06], ['Merge', 5.19766728692163e-06], ['&inner_li', 5.19766728692163e-06], ['(inner);', 5.19766728692163e-06], ['(&outer_li.unity_names,', 5.19766728692163e-06], ['Examine', 5.19766728692163e-06], ['weighed', 5.19766728692163e-06], ['Enforce', 5.19766728692163e-06], ['*subloop', 5.19766728692163e-06], ['subloop;', 5.19766728692163e-06], ['subloop->next)', 5.19766728692163e-06], ['queue.', 5.19766728692163e-06], ['further.', 5.19766728692163e-06], ['success.', 5.19766728692163e-06], ['profile_probability::unlikely', 5.19766728692163e-06], ['profile_probability::likely', 5.19766728692163e-06], ['1\\n");', 5.19766728692163e-06], ['(stmts)', 5.19766728692163e-06], ['any_succeeded_p', 5.19766728692163e-06], ['(m_loops_to_version,', 5.19766728692163e-06], ['stream_(stream),', 5.19766728692163e-06], ['Type::COMPARE_TAGS', 5.19766728692163e-06], ['Type::COMPARE_EMBEDDED_INTERFACES', 5.19766728692163e-06], ['(no->is_package())', 5.19766728692163e-06], ['no->name()[0]', 5.19766728692163e-06], ['no->name()[1]', 5.19766728692163e-06], ['bindings)', 5.19766728692163e-06], ['mismatched', 5.19766728692163e-06], ['Package*)', 5.19766728692163e-06], ['this->write_c_string("package', 5.19766728692163e-06], ['this->write_string(package_name);', 5.19766728692163e-06], ['clever', 5.19766728692163e-06], ['ideally', 5.19766728692163e-06], ['linker.', 5.19766728692163e-06], ['(!(*p)->is_type())', 5.19766728692163e-06], ['Find_types_to_prepare', 5.19766728692163e-06], ['imports)', 5.19766728692163e-06], ['it->sort_embedded();', 5.19766728692163e-06], ['stage', 5.19766728692163e-06], ['type->receiver();', 5.19766728692163e-06], ['type->parameters();', 5.19766728692163e-06], ['nt->named_object()->package();', 5.19766728692163e-06], ['(fn->export_for_inlining())', 5.19766728692163e-06], ['exports->begin();', 5.19766728692163e-06], ['exports->end();', 5.19766728692163e-06], ['no->const_value()->type();', 5.19766728692163e-06], ['else.', 5.19766728692163e-06], ['std::pair<Type_refs::iterator,', 5.19766728692163e-06], ['packages_compare);', 5.19766728692163e-06], ['this->write_string((*p)->package_name());', 5.19766728692163e-06], ['this->write_string((*p)->pkgpath());', 5.19766728692163e-06], ['std::vector<std::pair<std::string,', 5.19766728692163e-06], ['p->second));', 5.19766728692163e-06], ['(std::vector<std::pair<std::string,', 5.19766728692163e-06], ['seen.end())', 5.19766728692163e-06], ['init_graph,', 5.19766728692163e-06], ['succs;', 5.19766728692163e-06], ['graph,', 5.19766728692163e-06], ['Maps', 5.19766728692163e-06], ['init_idx;', 5.19766728692163e-06], ['(!import_init_fn.empty())', 5.19766728692163e-06], ['exports.', 5.19766728692163e-06], ['(ii->init_name()', 5.19766728692163e-06], ['init_idx.size();', 5.19766728692163e-06], ['indication', 5.19766728692163e-06], ['legacy', 5.19766728692163e-06], ['(ii->priority()', 5.19766728692163e-06], ['level_map::iterator', 5.19766728692163e-06], ['inits_at_level.end())', 5.19766728692163e-06], ['add_init_graph_edge(&init_graph,', 5.19766728692163e-06], ['scenario', 5.19766728692163e-06], ['"C".', 5.19766728692163e-06], ['hopefully', 5.19766728692163e-06], ['sit', 5.19766728692163e-06], ['ki', 5.19766728692163e-06], ['vi', 5.19766728692163e-06], ['type_data;', 5.19766728692163e-06], ['orig_stream', 5.19766728692163e-06], ['start_size', 5.19766728692163e-06], ['cur_size', 5.19766728692163e-06], ['"types', 5.19766728692163e-06], ['MAXP1', 5.19766728692163e-06], ['EXPORTEDP1', 5.19766728692163e-06], ['!Gogo::is_hidden_name(no->name()))', 5.19766728692163e-06], ['(name.empty())', 5.19766728692163e-06], ['"%d",', 5.19766728692163e-06], ['this->type_index(type);', 5.19766728692163e-06], ['"<type', 5.19766728692163e-06], ['%d>",', 5.19766728692163e-06], ['"int8",', 5.19766728692163e-06], ['BUILTIN_INT8);', 5.19766728692163e-06], ['"int16",', 5.19766728692163e-06], ['BUILTIN_INT16);', 5.19766728692163e-06], ['"int32",', 5.19766728692163e-06], ['BUILTIN_INT32);', 5.19766728692163e-06], ['"int64",', 5.19766728692163e-06], ['BUILTIN_INT64);', 5.19766728692163e-06], ['"uint8",', 5.19766728692163e-06], ['BUILTIN_UINT8);', 5.19766728692163e-06], ['"uint16",', 5.19766728692163e-06], ['BUILTIN_UINT16);', 5.19766728692163e-06], ['"uint32",', 5.19766728692163e-06], ['BUILTIN_UINT32);', 5.19766728692163e-06], ['"uint64",', 5.19766728692163e-06], ['BUILTIN_UINT64);', 5.19766728692163e-06], ['"float32",', 5.19766728692163e-06], ['BUILTIN_FLOAT32);', 5.19766728692163e-06], ['"float64",', 5.19766728692163e-06], ['BUILTIN_FLOAT64);', 5.19766728692163e-06], ['"complex64",', 5.19766728692163e-06], ['BUILTIN_COMPLEX64);', 5.19766728692163e-06], ['"complex128",', 5.19766728692163e-06], ['BUILTIN_COMPLEX128);', 5.19766728692163e-06], ['"int",', 5.19766728692163e-06], ['BUILTIN_INT);', 5.19766728692163e-06], ['"uint",', 5.19766728692163e-06], ['BUILTIN_UINT);', 5.19766728692163e-06], ['"uintptr",', 5.19766728692163e-06], ['BUILTIN_UINTPTR);', 5.19766728692163e-06], ['"bool",', 5.19766728692163e-06], ['BUILTIN_BOOL);', 5.19766728692163e-06], ['BUILTIN_STRING);', 5.19766728692163e-06], ['"error",', 5.19766728692163e-06], ['BUILTIN_ERROR);', 5.19766728692163e-06], ['"byte",', 5.19766728692163e-06], ['BUILTIN_BYTE);', 5.19766728692163e-06], ['"rune",', 5.19766728692163e-06], ['BUILTIN_RUNE);', 5.19766728692163e-06], ['Builtin_code', 5.19766728692163e-06], ['gogo->lookup_global(name);', 5.19766728692163e-06], ['named_object->is_type());', 5.19766728692163e-06], ['code));', 5.19766728692163e-06], ['real_type', 5.19766728692163e-06], ['go_create_sha1_helper();', 5.19766728692163e-06], ['keeps', 5.19766728692163e-06], ['(bytes,', 5.19766728692163e-06], ['manipulation', 5.19766728692163e-06], ['gcc_location', 5.19766728692163e-06], ['(loc.filename)', 5.19766728692163e-06], ['linemap_add', 5.19766728692163e-06], ['linemap_line_start', 5.19766728692163e-06], ['linemap_position_for_column', 5.19766728692163e-06], ['DSYM.', 5.19766728692163e-06], ['*dsym)', 5.19766728692163e-06], ['*parent', 5.19766728692163e-06], ['NAMESPACE_DECL', 5.19766728692163e-06], ['Declarations', 5.19766728692163e-06], ['decl->isDataseg', 5.19766728692163e-06], ['(ad->type);', 5.19766728692163e-06], ['(ad->isClassDeclaration', 5.19766728692163e-06], ['copy_list', 5.19766728692163e-06], ['(f)', 5.19766728692163e-06], ['newtype;', 5.19766728692163e-06], ['Treference', 5.19766728692163e-06], ['decl->storage_class', 5.19766728692163e-06], ['declaration_type', 5.19766728692163e-06], ['(tf);', 5.19766728692163e-06], ['(t->merge2', 5.19766728692163e-06], ['array->pointer', 5.19766728692163e-06], ['valist_array_p', 5.19766728692163e-06], ['*valist', 5.19766728692163e-06], ['valist', 5.19766728692163e-06], ['valist->castMod', 5.19766728692163e-06], ['(valist);', 5.19766728692163e-06], ['(arg->type);', 5.19766728692163e-06], ['type_passed_as', 5.19766728692163e-06], ['VALUE.', 5.19766728692163e-06], ['len_field', 5.19766728692163e-06], ['ptr_field);', 5.19766728692163e-06], ['pointing', 5.19766728692163e-06], ['data)', 5.19766728692163e-06], ['len_field,', 5.19766728692163e-06], ['(((TypeSArray', 5.19766728692163e-06], ['tb)->dim->toUInteger', 5.19766728692163e-06], ["InterfaceDeclaration's", 5.19766728692163e-06], ['super,', 5.19766728692163e-06], ['binfo', 5.19766728692163e-06], ['make_tree_binfo', 5.19766728692163e-06], ['BINFO_TYPE', 5.19766728692163e-06], ['BINFO_INHERITANCE_CHAIN', 5.19766728692163e-06], ['super;', 5.19766728692163e-06], ['BINFO_OFFSET', 5.19766728692163e-06], ['BINFO_BASE_APPEND', 5.19766728692163e-06], ['binfo;', 5.19766728692163e-06], ['described.', 5.19766728692163e-06], ['Target::ptrsize);', 5.19766728692163e-06], ['.object', 5.19766728692163e-06], ['OBJECT.', 5.19766728692163e-06], ['(object),', 5.19766728692163e-06], ['method);', 5.19766728692163e-06], ['CONSTRUCTOR_ELT', 5.19766728692163e-06], ['conversions,', 5.19766728692163e-06], ['nullable', 5.19766728692163e-06], ['(TYPE_ASSOCIATIVE_ARRAY', 5.19766728692163e-06], ['build_memref', 5.19766728692163e-06], ['(fntype,', 5.19766728692163e-06], ['index));', 5.19766728692163e-06], ['temporaries,', 5.19766728692163e-06], ['(lvalue_p', 5.19766728692163e-06], ['TARGET_EXPR:', 5.19766728692163e-06], ['...),', 5.19766728692163e-06], ['(&rhs));', 5.19766728692163e-06], ['TARGET_EXPR,', 5.19766728692163e-06], ['build_target_expr', 5.19766728692163e-06], ['Always', 5.19766728692163e-06], ['TARGET_EXPR.', 5.19766728692163e-06], ['*),', 5.19766728692163e-06], ['va_list,', 5.19766728692163e-06], ['CONST_DECL)', 5.19766728692163e-06], ['CONST_DECL:', 5.19766728692163e-06], ['FUNCTION_DECL:', 5.19766728692163e-06], ['CONSTRUCTOR:', 5.19766728692163e-06], ['-Wunused', 5.19766728692163e-06], ['zero-initialized', 5.19766728692163e-06], ['identity_compare_p', 5.19766728692163e-06], ['(sd->isUnionDeclaration', 5.19766728692163e-06], ['vd->type->toBasetype', 5.19766728692163e-06], ['structures.', 5.19766728692163e-06], ['Target::realpad', 5.19766728692163e-06], ['vd->offset)', 5.19766728692163e-06], ["There's", 5.19766728692163e-06], ['hole', 5.19766728692163e-06], ['T2,', 5.19766728692163e-06], ['(BUILT_IN_MEMCMP);', 5.19766728692163e-06], ['(tmemcmp,', 5.19766728692163e-06], ['field-by-field', 5.19766728692163e-06], ['tcode', 5.19766728692163e-06], ['TRUTH_ANDIF_EXPR', 5.19766728692163e-06], ['(sd->fields.dim', 5.19766728692163e-06], ['tmemcmp);', 5.19766728692163e-06], ['tmemcmp;', 5.19766728692163e-06], ['(sd->structsize));', 5.19766728692163e-06], ['(vd);', 5.19766728692163e-06], ['t1ref', 5.19766728692163e-06], ['sfield);', 5.19766728692163e-06], ['t2ref', 5.19766728692163e-06], ['tcmp;', 5.19766728692163e-06], ['(t2ref));', 5.19766728692163e-06], ['ieq', 5.19766728692163e-06], ['(stype));', 5.19766728692163e-06], ['*((T*)', 5.19766728692163e-06], ['tmode', 5.19766728692163e-06], ['(mode.require', 5.19766728692163e-06], ['(tmode,', 5.19766728692163e-06], ['memcmp,', 5.19766728692163e-06], ['(&t2);', 5.19766728692163e-06], ['(compound_expr', 5.19766728692163e-06], ['build_array_struct_comparison', 5.19766728692163e-06], ['init));', 5.19766728692163e-06], ['lentype', 5.19766728692163e-06], ['(length);', 5.19766728692163e-06], ['locals', 5.19766728692163e-06], ['Exit', 5.19766728692163e-06], ['integer_zero_node));', 5.19766728692163e-06], ['(EXIT_EXPR,', 5.19766728692163e-06], ['counter.', 5.19766728692163e-06], ['lentype,', 5.19766728692163e-06], ['integer_one_node));', 5.19766728692163e-06], ['fieldpos)', 5.19766728692163e-06], ['fieldpos', 5.19766728692163e-06], ['SET_DECL_OFFSET_ALIGN', 5.19766728692163e-06], ['DECL_FIELD_BIT_OFFSET', 5.19766728692163e-06], ['INIT,', 5.19766728692163e-06], ['(init))', 5.19766728692163e-06], ['fillholes', 5.19766728692163e-06], ['CLASS_TYPE_P', 5.19766728692163e-06], ['(!initializer_zerop', 5.19766728692163e-06], ['again.', 5.19766728692163e-06], ['shape', 5.19766728692163e-06], ['int_byte_position', 5.19766728692163e-06], ['(fillholes', 5.19766728692163e-06], ['pfield', 5.19766728692163e-06], ['pvalue', 5.19766728692163e-06], ['(pfield));', 5.19766728692163e-06], ['pfield,', 5.19766728692163e-06], ['pvalue);', 5.19766728692163e-06], ['vtype', 5.19766728692163e-06], ['(ANON_AGGR_TYPE_P', 5.19766728692163e-06], ['(!TREE_CONSTANT', 5.19766728692163e-06], ['unions,', 5.19766728692163e-06], ['initialized,', 5.19766728692163e-06], ['pad', 5.19766728692163e-06], ['NULL_TREE.', 5.19766728692163e-06], ['reachable.', 5.19766728692163e-06], ['FIELD', 5.19766728692163e-06], ['aggregate,', 5.19766728692163e-06], ['(DECL_CONTEXT', 5.19766728692163e-06], ['lvalue', 5.19766728692163e-06], ['(&lhs);', 5.19766728692163e-06], ['INIT_EXPR', 5.19766728692163e-06], ['(rhs))', 5.19766728692163e-06], ['aggregate_value_p', 5.19766728692163e-06], ['rhs))', 5.19766728692163e-06], ['CALL_EXPR_RETURN_SLOT_OPT', 5.19766728692163e-06], ['replaces', 5.19766728692163e-06], ['TARGET_EXPR)', 5.19766728692163e-06], ['twice.', 5.19766728692163e-06], ['(rhs,', 5.19766728692163e-06], ['TARGET_EXPR_SLOT', 5.19766728692163e-06], ['(rhs);', 5.19766728692163e-06], ['Building', 5.19766728692163e-06], ['(arg1)))', 5.19766728692163e-06], ['}>;', 5.19766728692163e-06], ['build_minus_one_cst', 5.19766728692163e-06], ['(arg1))', 5.19766728692163e-06], ['arg2)', 5.19766728692163e-06], ['(arg1', 5.19766728692163e-06], ['void_node)', 5.19766728692163e-06], ['join', 5.19766728692163e-06], ['arg1;', 5.19766728692163e-06], ['(arg1)', 5.19766728692163e-06], ['helps', 5.19766728692163e-06], ['arg0),', 5.19766728692163e-06], ['CE,', 5.19766728692163e-06], ['ce)', 5.19766728692163e-06], ['REALPART_EXPR,', 5.19766728692163e-06], ['(ce)),', 5.19766728692163e-06], ['IMAGPART_EXPR,', 5.19766728692163e-06], ['COMPLEX_EXPR,', 5.19766728692163e-06], ['im);', 5.19766728692163e-06], ['*(e1,', 5.19766728692163e-06], ['(index))', 5.19766728692163e-06], ['(size_exp))', 5.19766728692163e-06], ['%qD",', 5.19766728692163e-06], ['multiply.', 5.19766728692163e-06], ['*(PTR', 5.19766728692163e-06], ['minus', 5.19766728692163e-06], ['build_array_set', 5.19766728692163e-06], ['(type->nextOf', 5.19766728692163e-06], ['dims', 5.19766728692163e-06], ['dims);', 5.19766728692163e-06], ['Implicitly', 5.19766728692163e-06], ['(VOID_TYPE_P', 5.19766728692163e-06], ['LEN.', 5.19766728692163e-06], ['RangeError.', 5.19766728692163e-06], ['evaluations', 5.19766728692163e-06], ['LIBCALL_ARRAY_BOUNDS);', 5.19766728692163e-06], ['array_bounds_check', 5.19766728692163e-06], ['undeclared', 5.19766728692163e-06], ['BIND_EXPR.', 5.19766728692163e-06], ['COMPONENT_REF)', 5.19766728692163e-06], ['*out_var', 5.19766728692163e-06], ['BODY', 5.19766728692163e-06], ['body)', 5.19766728692163e-06], ['(var_chain)', 5.19766728692163e-06], ['body);', 5.19766728692163e-06], ['t->nextOf', 5.19766728692163e-06], ['CALLER.', 5.19766728692163e-06], ['Entry', 5.19766728692163e-06], ['*fd,', 5.19766728692163e-06], ['arguments);', 5.19766728692163e-06], ['(callable);', 5.19766728692163e-06], ['(tf', 5.19766728692163e-06], ['Tfunction);', 5.19766728692163e-06], ['apparently', 5.19766728692163e-06], ['arguments->dim;', 5.19766728692163e-06], ['(*arguments)[i];', 5.19766728692163e-06], ['(arg->op', 5.19766728692163e-06], ['TOKcomma)', 5.19766728692163e-06], ['(CommaExp', 5.19766728692163e-06], ['(saved_args,', 5.19766728692163e-06], ['ce->e2;', 5.19766728692163e-06], ['Parameter::dim', 5.19766728692163e-06], ['(tf->linkage', 5.19766728692163e-06], ['formal', 5.19766728692163e-06], ['aggregates', 5.19766728692163e-06], ['!TREE_ADDRESSABLE', 5.19766728692163e-06], ['(targ)', 5.19766728692163e-06], ['targ,', 5.19766728692163e-06], ['(callee))', 5.19766728692163e-06], ['build_call_vec', 5.19766728692163e-06], ['maybe_expand_intrinsic', 5.19766728692163e-06], ['file;', 5.19766728692163e-06], ['(Type::tchar->arrayOf', 5.19766728692163e-06], ['line);', 5.19766728692163e-06], ['build_float_modulus', 5.19766728692163e-06], ['(basetype))', 5.19766728692163e-06], ['im', 5.19766728692163e-06], ["'vthis'", 5.19766728692163e-06], ['(basetype),', 5.19766728692163e-06], ['SYM', 5.19766728692163e-06], ['(!fd->fbody)', 5.19766728692163e-06], ['__ensure', 5.19766728692163e-06], ['fd->ident', 5.19766728692163e-06], ['thisfd;', 5.19766728692163e-06], ['NewExp', 5.19766728692163e-06], ['(fdparent', 5.19766728692163e-06], ['fd->isFuncLiteralDeclaration', 5.19766728692163e-06], ['(thisfd', 5.19766728692163e-06], ['dsym->toParent2', 5.19766728692163e-06], ['(ffo))', 5.19766728692163e-06], ['*cdo', 5.19766728692163e-06], ['()->isClassDeclaration', 5.19766728692163e-06], ['adjusted.', 5.19766728692163e-06], ['framefields', 5.19766728692163e-06], ['(ffo));', 5.19766728692163e-06], ['ve));', 5.19766728692163e-06], ['cd->toParent2', 5.19766728692163e-06], ['((fd', 5.19766728692163e-06], ['d_nested_struct', 5.19766728692163e-06], ['sd', 5.19766728692163e-06], ['Starting', 5.19766728692163e-06], ['instances.', 5.19766728692163e-06], ['OCD', 5.19766728692163e-06], ['find_this_tree', 5.19766728692163e-06], ['ad->isClassDeclaration', 5.19766728692163e-06], ['(ocd->isBaseOf', 5.19766728692163e-06], ['cd->type,', 5.19766728692163e-06], ['ocd->type);', 5.19766728692163e-06], ['Retrieve', 5.19766728692163e-06], ['decl->isStructDeclaration', 5.19766728692163e-06], ['templated', 5.19766728692163e-06], ['instantiation', 5.19766728692163e-06], ['((TemplateInstance', 5.19766728692163e-06], ['outer->isClassDeclaration', 5.19766728692163e-06], ['Classes', 5.19766728692163e-06], ['build_frame_type', 5.19766728692163e-06], ['(ffi);', 5.19766728692163e-06], ['(BUILTINS_LOCATION,', 5.19766728692163e-06], ['(ptr_field)', 5.19766728692163e-06], ['DECL_NONADDRESSABLE_P', 5.19766728692163e-06], ['inheriting', 5.19766728692163e-06], ['contract.', 5.19766728692163e-06], ['((global.params.useIn', 5.19766728692163e-06], ['fd->frequire)', 5.19766728692163e-06], ['(global.params.useOut', 5.19766728692163e-06], ['fd->fensure))', 5.19766728692163e-06], ['closureVars', 5.19766728692163e-06], ['fd->closureVars.remove', 5.19766728692163e-06], ['fd->closureVars.insert', 5.19766728692163e-06], ['vsym', 5.19766728692163e-06], ['(v->loc),', 5.19766728692163e-06], ['(vsym));', 5.19766728692163e-06], ['nrvo', 5.19766728692163e-06], ['"has', 5.19766728692163e-06], ['(frame_rec_type);', 5.19766728692163e-06], ['build_closure', 5.19766728692163e-06], ['ffi', 5.19766728692163e-06], ['(COMPLETE_TYPE_P', 5.19766728692163e-06], ['decl_ref', 5.19766728692163e-06], ['Type::tvoidptr,', 5.19766728692163e-06], ['(decl_ref,', 5.19766728692163e-06], ['DECL_LANG_FRAME_FIELD', 5.19766728692163e-06], ['d_function_chain->static_chain', 5.19766728692163e-06], ['DECL_LANG_FRAMEINFO', 5.19766728692163e-06], ['ffi;', 5.19766728692163e-06], ['Functions', 5.19766728692163e-06], ['`fd`', 5.19766728692163e-06], ['(ffo);', 5.19766728692163e-06], ['(ad->isNested', 5.19766728692163e-06], ['Parent', 5.19766728692163e-06], ['((ad', 5.19766728692163e-06], ['outer);', 5.19766728692163e-06], ['frame_type', 5.19766728692163e-06], ['(frame_type', 5.19766728692163e-06], ['(inst_base->type', 5.19766728692163e-06], ['(cmp_type);', 5.19766728692163e-06], ['comparisons,', 5.19766728692163e-06], ['get_comparison_result_type', 5.19766728692163e-06], ['(ORDERED_EXPR,', 5.19766728692163e-06], ['(GT_EXPR,', 5.19766728692163e-06], ['(inst->sourceType', 5.19766728692163e-06], ['versions,', 5.19766728692163e-06], ['(dest_type)));', 5.19766728692163e-06], ['forth', 5.19766728692163e-06], ['(signed_type,', 5.19766728692163e-06], ['result_width', 5.19766728692163e-06], ['signed_type,', 5.19766728692163e-06], ['shift_amount_cst);', 5.19766728692163e-06], ['(dest_type))', 5.19766728692163e-06], ['F16', 5.19766728692163e-06], ['F32', 5.19766728692163e-06], ['dumps;', 5.19766728692163e-06], ['is_all', 5.19766728692163e-06], ['"all")', 5.19766728692163e-06], ['p->next_)', 5.19766728692163e-06], ['(is_all', 5.19766728692163e-06], ['p->name_)', 5.19766728692163e-06], ['p->is_enabled_', 5.19766728692163e-06], ['found;', 5.19766728692163e-06], ['&inst->modifier;', 5.19766728692163e-06], ['BrigRound8_t', 5.19766728692163e-06], ['&inst->round;', 5.19766728692163e-06], ['*cvt_inst', 5.19766728692163e-06], ['modifier', 5.19766728692163e-06], ['(cvt_inst->sourceType);', 5.19766728692163e-06], ['src_is_fp16', 5.19766728692163e-06], ['(m_parent.m_cf->is_id_val', 5.19766728692163e-06], ['(input))', 5.19766728692163e-06], ['m_parent.m_cf->id_val', 5.19766728692163e-06], ['conv_dst_size', 5.19766728692163e-06], ['(input));', 5.19766728692163e-06], ['type&size', 5.19766728692163e-06], ['bitcasts', 5.19766728692163e-06], ['(src_is_fp16)', 5.19766728692163e-06], ['(brig_inst->type', 5.19766728692163e-06], ['(input),', 5.19766728692163e-06], ['safer', 5.19766728692163e-06], ['such.', 5.19766728692163e-06], ['(gccbrig_tree_type_for_hsa_type', 5.19766728692163e-06], ['build_f2h_conversion', 5.19766728692163e-06], ['src_arith_type', 5.19766728692163e-06], ['BRIG_TYPE_F32', 5.19766728692163e-06], ['conversion_result;', 5.19766728692163e-06], ['(dst_reg_size', 5.19766728692163e-06], ['(!VECTOR_TYPE_P', 5.19766728692163e-06], ['(casted_output));', 5.19766728692163e-06], ['required.");', 5.19766728692163e-06], ['conformance', 5.19766728692163e-06], ['suite', 5.19766728692163e-06], ['BRIGs', 5.19766728692163e-06], ['Operations', 5.19766728692163e-06], ['W_TYPE_SIZE', 5.19766728692163e-06], ['(DI)));', 5.19766728692163e-06], ['UDWtype', 5.19766728692163e-06], ['divide.', 5.19766728692163e-06], ['top;', 5.19766728692163e-06], ['blocks_needed)', 5.19766728692163e-06], ['(top', 5.19766728692163e-06], ['extension.', 5.19766728692163e-06], ['wide_int.', 5.19766728692163e-06], ['endianness', 5.19766728692163e-06], ['set;', 5.19766728692163e-06], ['buffer_len', 5.19766728692163e-06], ['result.write_val', 5.19766728692163e-06], ['bitpos', 5.19766728692163e-06], ['(buffer_len', 5.19766728692163e-06], ['(BYTES_BIG_ENDIAN)', 5.19766728692163e-06], ['byte;', 5.19766728692163e-06], ['result.set_len', 5.19766728692163e-06], ['(canonize', 5.19766728692163e-06], ['precision));', 5.19766728692163e-06], ['x.get_precision', 5.19766728692163e-06], ['(HOST_WIDE_INT,', 5.19766728692163e-06], ['t[i]', 5.19766728692163e-06], ['numb;', 5.19766728692163e-06], ['min,', 5.19766728692163e-06], ['mpz_init', 5.19766728692163e-06], ['(min);', 5.19766728692163e-06], ['(max);', 5.19766728692163e-06], ['(mpz_cmp', 5.19766728692163e-06], ['mpz_set', 5.19766728692163e-06], ['mpz_clear', 5.19766728692163e-06], ['GMP', 5.19766728692163e-06], ['numb', 5.19766728692163e-06], ['pathological', 5.19766728692163e-06], ['(prec)', 5.19766728692163e-06], ['(count);', 5.19766728692163e-06], ['SGNed', 5.19766728692163e-06], ['SGN,', 5.19766728692163e-06], ['(PRECISION', 5.19766728692163e-06], ['(small_xprecision', 5.19766728692163e-06], ['precisions.', 5.19766728692163e-06], ['SIGN_MASK', 5.19766728692163e-06], ['prec;', 5.19766728692163e-06], ['[l0],', 5.19766728692163e-06], ['s0,', 5.19766728692163e-06], ['u0,', 5.19766728692163e-06], ['u1;', 5.19766728692163e-06], ['u0', 5.19766728692163e-06], ['u1', 5.19766728692163e-06], ['OP1,', 5.19766728692163e-06], ['compares.', 5.19766728692163e-06], ['x0;', 5.19766728692163e-06], ['x1;', 5.19766728692163e-06], ['x0', 5.19766728692163e-06], ['x1', 5.19766728692163e-06], ['Sign-extend', 5.19766728692163e-06], ['Extending', 5.19766728692163e-06], ['fewer,', 5.19766728692163e-06], ['xlen)', 5.19766728692163e-06], ['suboffset', 5.19766728692163e-06], ['(suboffset', 5.19766728692163e-06], ['suboffset);', 5.19766728692163e-06], ['wi::shifted_mask', 5.19766728692163e-06], ['UNSIGNED),', 5.19766728692163e-06], ['bit)', 5.19766728692163e-06], ['subbit', 5.19766728692163e-06], ['HOST_WIDE_INT_1U', 5.19766728692163e-06], ['subbit;', 5.19766728692163e-06], ['(bit', 5.19766728692163e-06], ['0x7)', 5.19766728692163e-06], ['NEGATE', 5.19766728692163e-06], ['negate,', 5.19766728692163e-06], ['width;', 5.19766728692163e-06], ['~block', 5.19766728692163e-06], ['~OP1.', 5.19766728692163e-06], ['~op1[l1];', 5.19766728692163e-06], ['~op1[l0];', 5.19766728692163e-06], ['old_carry', 5.19766728692163e-06], ['mask0,', 5.19766728692163e-06], ['mask0;', 5.19766728692163e-06], ['len++;', 5.19766728692163e-06], ['-prec', 5.19766728692163e-06], ['1])', 5.19766728692163e-06], ['MSB', 5.19766728692163e-06], ['O0', 5.19766728692163e-06], ['INPUT', 5.19766728692163e-06], ['RESULT.', 5.19766728692163e-06], ['filled', 5.19766728692163e-06], ['*input,', 5.19766728692163e-06], ['HOST_BITS_PER_HALF_WIDE_INT));', 5.19766728692163e-06], ['overflows.', 5.19766728692163e-06], ['Unfortunately', 5.19766728692163e-06], ['overflowed.', 5.19766728692163e-06], ['k,', 5.19766728692163e-06], ['2x', 5.19766728692163e-06], ['(op2))', 5.19766728692163e-06], ['val[0],', 5.19766728692163e-06], ['op1.ulow', 5.19766728692163e-06], ['op2.ulow', 5.19766728692163e-06], ['(val[1]', 5.19766728692163e-06], ['HWI', 5.19766728692163e-06], ['upper;', 5.19766728692163e-06], ['+OVERFLOW.', 5.19766728692163e-06], ['op2len;', 5.19766728692163e-06], ['op1len;', 5.19766728692163e-06], ['multiplies', 5.19766728692163e-06], ['prec))', 5.19766728692163e-06], ['HOST_WIDE_INT)u[i]', 5.19766728692163e-06], ['(assuming', 5.19766728692163e-06], ['HOST_WIDE_INT)r[i', 5.19766728692163e-06], ['mask))', 5.19766728692163e-06], ['popcount_hwi', 5.19766728692163e-06], ['(x.sign_mask', 5.19766728692163e-06], ['stop;', 5.19766728692163e-06], ['(x.val[i]);', 5.19766728692163e-06], ['add.', 5.19766728692163e-06], ['old_borrow', 5.19766728692163e-06], ['Subtract', 5.19766728692163e-06], ['B_DIVIDEND', 5.19766728692163e-06], ['allocated,', 5.19766728692163e-06], ['B_DIVISOR.', 5.19766728692163e-06], ['divmod_internal_2', 5.19766728692163e-06], ['word.', 5.19766728692163e-06], ['machines.', 5.19766728692163e-06], ['qhat;', 5.19766728692163e-06], ['CHECK', 5.19766728692163e-06], ['clz', 5.19766728692163e-06], ['b_divisor,', 5.19766728692163e-06], ['b_divisor[i]', 5.19766728692163e-06], ['b_divisor[0]', 5.19766728692163e-06], ['b_dividend[m]', 5.19766728692163e-06], ['(b_dividend[i]', 5.19766728692163e-06], ['b_dividend[0]', 5.19766728692163e-06], ['(b_dividend[j+n]', 5.19766728692163e-06], ['b_dividend[j+n-1])', 5.19766728692163e-06], ['b_dividend[i+j]', 5.19766728692163e-06], ['b_remainder[i]', 5.19766728692163e-06], ['*remainder_len,', 5.19766728692163e-06], ['dividend_len,', 5.19766728692163e-06], ['divisor_len,', 5.19766728692163e-06], ['divisor_prec,', 5.19766728692163e-06], ['dividend_neg', 5.19766728692163e-06], ['divisor_neg', 5.19766728692163e-06], ['neg_divisor;', 5.19766728692163e-06], ['dividend_len', 5.19766728692163e-06], ['(dividend))', 5.19766728692163e-06], ['(oflow)', 5.19766728692163e-06], ['*oflow', 5.19766728692163e-06], ['dividend_len;', 5.19766728692163e-06], ['wi::fits_shwi_p', 5.19766728692163e-06], ['(dividend)', 5.19766728692163e-06], ['quotient_len;', 5.19766728692163e-06], ['(b_quotient,', 5.19766728692163e-06], ['b_remainder,', 5.19766728692163e-06], ['remainder,', 5.19766728692163e-06], ['subblock', 5.19766728692163e-06], ['small_shift', 5.19766728692163e-06], ['(small_shift', 5.19766728692163e-06], ['XVAL.', 5.19766728692163e-06], ['(-small_shift', 5.19766728692163e-06], ['xval,', 5.19766728692163e-06], ['SHIFT.', 5.19766728692163e-06], ['x.uhigh', 5.19766728692163e-06], ['-COUNT', 5.19766728692163e-06], ['-count;', 5.19766728692163e-06], ['^=', 5.19766728692163e-06], ['(x.len', 5.19766728692163e-06], ['(x.val[i]', 5.19766728692163e-06], ['base-2', 5.19766728692163e-06], ['hwi', 5.19766728692163e-06], ['(x);', 5.19766728692163e-06], ['ctz', 5.19766728692163e-06], ['clear.', 5.19766728692163e-06], ['round_down_for_mask', 5.19766728692163e-06], ['extra_bits', 5.19766728692163e-06], ['(extra_bits', 5.19766728692163e-06], ['1s', 5.19766728692163e-06], ['(extra_bits),', 5.19766728692163e-06], ['round_up_for_mask', 5.19766728692163e-06], ['EXTRA_BITS.', 5.19766728692163e-06], ['upper_mask', 5.19766728692163e-06], ['(~VAL', 5.19766728692163e-06], ['UPPER_MASK)', 5.19766728692163e-06], ['reaches', 5.19766728692163e-06], ['gt_pch_nx', 5.19766728692163e-06], ['generic_wide_int', 5.19766728692163e-06], ['<wide_int_ref_storage', 5.19766728692163e-06], ['>::dump', 5.19766728692163e-06], ['ref.dump', 5.19766728692163e-06], ['*ptr)', 5.19766728692163e-06], ['(*ptr);', 5.19766728692163e-06], ['"<nil>\\n");', 5.19766728692163e-06], ['times,', 5.19766728692163e-06], ['offset_int', 5.19766728692163e-06], ['*expected,', 5.19766728692163e-06], ['(expected,', 5.19766728692163e-06], ['test_printing', 5.19766728692163e-06], ['(42);', 5.19766728692163e-06], ['69));', 5.19766728692163e-06], ['("0xffffffffffffffff",', 5.19766728692163e-06], ['(64,', 5.19766728692163e-06], ['<widest_int>', 5.19766728692163e-06], ['128)', 5.19766728692163e-06], ['129)', 5.19766728692163e-06], ['test_ops', 5.19766728692163e-06], ['("-7",', 5.19766728692163e-06], ['("10",', 5.19766728692163e-06], ['("4",', 5.19766728692163e-06], ['("-4",', 5.19766728692163e-06], ['("21",', 5.19766728692163e-06], ['test_comparisons', 5.19766728692163e-06], ['(wi::ne_p', 5.19766728692163e-06], ['test_overflow', 5.19766728692163e-06], ['33,', 5.19766728692163e-06], ['63,', 5.19766728692163e-06], ['128', 5.19766728692163e-06], ['ARRAY_SIZE', 5.19766728692163e-06], ['diff;', 5.19766728692163e-06], ['(sum,', 5.19766728692163e-06], ['(diff,', 5.19766728692163e-06], ['test_round_for_mask', 5.19766728692163e-06], ['(0x22,', 5.19766728692163e-06], ['(0x111,', 5.19766728692163e-06], ['(101,', 5.19766728692163e-06], ['(0xfc,', 5.19766728692163e-06], ['(0x2c2,', 5.19766728692163e-06], ['(0xabd,', 5.19766728692163e-06], ['(0x1000,', 5.19766728692163e-06], ["opt_problem's", 5.19766728692163e-06], ['FMT', 5.19766728692163e-06], ['destinations', 5.19766728692163e-06], ['retained', 5.19766728692163e-06], ['m_optinfo', 5.19766728692163e-06], ['s_the_problem', 5.19766728692163e-06], ['formatted', 5.19766728692163e-06], ['optinfo,', 5.19766728692163e-06], ['retrieval.', 5.19766728692163e-06], ['clearing', 5.19766728692163e-06], ['opt_problem.', 5.19766728692163e-06], ['function_that_succeeds', 5.19766728692163e-06], ['test_opt_result_success', 5.19766728692163e-06], ['with_dumping', 5.19766728692163e-06], ['(with_dumping,', 5.19766728692163e-06], ['with_dumping,', 5.19766728692163e-06], ['MSG_ALL_KINDS', 5.19766728692163e-06], ['(!dump_enabled_p', 5.19766728692163e-06], ['(res);', 5.19766728692163e-06], ['opt_wrapper<bool>.', 5.19766728692163e-06], ['(res.get_result', 5.19766728692163e-06], ['(res.get_problem', 5.19766728692163e-06], ['dumped.', 5.19766728692163e-06], ['(gimple_return_retval', 5.19766728692163e-06], ['opt_result::failure_at', 5.19766728692163e-06], ['<const', 5.19766728692163e-06], ['function_that_indirectly_fails', 5.19766728692163e-06], ['line_map_ordinary', 5.19766728692163e-06], ['100);', 5.19766728692163e-06], ['12);', 5.19766728692163e-06], ['gimple_build_return', 5.19766728692163e-06], ['gimple_set_location', 5.19766728692163e-06], ['MSG_PRIORITY_REEMITTED;', 5.19766728692163e-06], ['(problem,', 5.19766728692163e-06], ['().get_location_t', 5.19766728692163e-06], ['__GNUC__', 5.19766728692163e-06], ['ASSERT_IS_TEXT', 5.19766728692163e-06], ['(2),', 5.19766728692163e-06], ['"return', 5.19766728692163e-06], ['(MSG_PRIORITY_INTERNALS', 5.19766728692163e-06], ['function_that_indirectly_fails"', 5.19766728692163e-06], ['0;\\n"', 5.19766728692163e-06], ['loop\\n"', 5.19766728692163e-06], ['disabled,', 5.19766728692163e-06], ['implementations', 5.19766728692163e-06], ["`object.d'.", 5.19766728692163e-06], ['get_typeinfo_kind', 5.19766728692163e-06], ['head', 5.19766728692163e-06], ['modifiers', 5.19766728692163e-06], ['(((TypeClass', 5.19766728692163e-06], ['type)->sym->isInterfaceDeclaration', 5.19766728692163e-06], ['*ident,', 5.19766728692163e-06], ['Note,', 5.19766728692163e-06], ['finish_builtin_struct()', 5.19766728692163e-06], ['semantic.', 5.19766728692163e-06], ['managed', 5.19766728692163e-06], ['mod;', 5.19766728692163e-06], ['create_tinfo_types', 5.19766728692163e-06], ['*mod)', 5.19766728692163e-06], ['("TypeInfo"),', 5.19766728692163e-06], ['stubs.', 5.19766728692163e-06], ['ClassDeclaration::object);', 5.19766728692163e-06], ['("__cpp_type_info_ptr"),', 5.19766728692163e-06], ['TypeInfoDeclaration', 5.19766728692163e-06], ['STR', 5.19766728692163e-06], ['*str)', 5.19766728692163e-06], ['(value),', 5.19766728692163e-06], ['(tinfo_types[TK_CLASSINFO_TYPE]);', 5.19766728692163e-06], ['void*[]', 5.19766728692163e-06], ['vtbl;', 5.19766728692163e-06], ['(id));', 5.19766728692163e-06], ['voffset', 5.19766728692163e-06], ['arrtype', 5.19766728692163e-06], ['(domain));', 5.19766728692163e-06], ['(arrtype,', 5.19766728692163e-06], ['base_vtable_offset().', 5.19766728692163e-06], ['*bs', 5.19766728692163e-06], ['FuncDeclarations', 5.19766728692163e-06], ['bs)', 5.19766728692163e-06], ['(fd,', 5.19766728692163e-06], ['TypeEnum', 5.19766728692163e-06], ['(ed->memtype)', 5.19766728692163e-06], ['enum.', 5.19766728692163e-06], ['TypePointer', 5.19766728692163e-06], ['TypeDArray', 5.19766728692163e-06], ['deco;', 5.19766728692163e-06], ['d->tinfo->deco', 5.19766728692163e-06], ['Mangled', 5.19766728692163e-06], ['(d->tinfo->deco);', 5.19766728692163e-06], ['(TypeDelegate', 5.19766728692163e-06], ['relating', 5.19766728692163e-06], ['interfaces,', 5.19766728692163e-06], ['(TypeInfoClassDeclaration', 5.19766728692163e-06], ['9', 5.19766728692163e-06], ['(cd->vtblInterfaces->dim)', 5.19766728692163e-06], ['this->layout_interfaces', 5.19766728692163e-06], ['(dtor);', 5.19766728692163e-06], ['ClassFlags::Type', 5.19766728692163e-06], ['ClassFlags::hasOffTi;', 5.19766728692163e-06], ['ClassFlags::isCOMclass;', 5.19766728692163e-06], ['ClassFlags::hasTypeInfo;', 5.19766728692163e-06], ['(flags));', 5.19766728692163e-06], ['implemented)', 5.19766728692163e-06], ['STCdisable))', 5.19766728692163e-06], ['(cd->getRTInfo)', 5.19766728692163e-06], ['(cd->getRTInfo,', 5.19766728692163e-06], ['(size_one_node);', 5.19766728692163e-06], ["class'", 5.19766728692163e-06], ['vtables[].', 5.19766728692163e-06], ['this->layout_base_vtable', 5.19766728692163e-06], ['cd->baseClass;', 5.19766728692163e-06], ['TypeInfo_Struct', 5.19766728692163e-06], ['hash_t', 5.19766728692163e-06], ['xtoHash;', 5.19766728692163e-06], ['xopEquals;', 5.19766728692163e-06], ['xopCmp;', 5.19766728692163e-06], ['function(const(void)*)', 5.19766728692163e-06], ['xtoString;', 5.19766728692163e-06], ['StructFlags', 5.19766728692163e-06], ['xdtor;', 5.19766728692163e-06], ['xpostblit;', 5.19766728692163e-06], ['m_align;', 5.19766728692163e-06], ['m_arg1;', 5.19766728692163e-06], ['m_arg2;', 5.19766728692163e-06], ['xgetRTInfo;', 5.19766728692163e-06], ['(sd->xhash)', 5.19766728692163e-06], ['tf->trust', 5.19766728692163e-06], ['"extern', 5.19766728692163e-06], ['(D)', 5.19766728692163e-06], ['m_flags', 5.19766728692163e-06], ['(sd->dtor)', 5.19766728692163e-06], ['(sd->arg1type)', 5.19766728692163e-06], ['(sd->arg2type)', 5.19766728692163e-06], ['TypeInfo[]', 5.19766728692163e-06], ['(TypeTuple', 5.19766728692163e-06], ['*satype', 5.19766728692163e-06], ['(ti->arguments->dim);', 5.19766728692163e-06], ['(satype),', 5.19766728692163e-06], ['layout_typeinfo', 5.19766728692163e-06], ['(get_typeinfo_decl', 5.19766728692163e-06], ['layout_classinfo_interfaces', 5.19766728692163e-06], ['interfacesize', 5.19766728692163e-06], ['(vtbl_interface_type_node);', 5.19766728692163e-06], ['interfacesize;', 5.19766728692163e-06], ['id->vtbl.dim', 5.19766728692163e-06], ['(*bcd->vtblInterfaces)[i];', 5.19766728692163e-06], ['tinfo_types[TK_CLASSINFO_TYPE])', 5.19766728692163e-06], ['(structsize,', 5.19766728692163e-06], ['Tclass', 5.19766728692163e-06], ['*next', 5.19766728692163e-06], ['type->nextOf', 5.19766728692163e-06], ['(next->ty', 5.19766728692163e-06], ['next->mod', 5.19766728692163e-06], ['distinguishing', 5.19766728692163e-06], ['*tid)', 5.19766728692163e-06], ['tid->csym', 5.19766728692163e-06], ['Built-in', 5.19766728692163e-06], ['(tid->csym);', 5.19766728692163e-06], ['monitor', 5.19766728692163e-06], ['layout_cpp_typeinfo', 5.19766728692163e-06], ['EH', 5.19766728692163e-06], ['personality', 5.19766728692163e-06], ['vptr', 5.19766728692163e-06], ['generation,', 5.19766728692163e-06], ['knowing', 5.19766728692163e-06], ['Target::cppTypeInfoMangle', 5.19766728692163e-06], ['__cpp_type_info_ptr', 5.19766728692163e-06], ['decl->cpp_type_info_ptr_sym;', 5.19766728692163e-06], ['global.params.is64bit', 5.19766728692163e-06], ['argtype,', 5.19766728692163e-06], ['delegates', 5.19766728692163e-06], ['(mod)', 5.19766728692163e-06], ['field),', 5.19766728692163e-06], ['result_;', 5.19766728692163e-06], ['this->result_;', 5.19766728692163e-06], ['tb->accept', 5.19766728692163e-06], ['((TypeNext', 5.19766728692163e-06], ['*)t);', 5.19766728692163e-06], ['t->sym;', 5.19766728692163e-06], ['(!ti->needsCodegen', 5.19766728692163e-06], ['(this->result_)', 5.19766728692163e-06], ['t->accept', 5.19766728692163e-06], ['d-builtins.cc', 5.19766728692163e-06], ['"dmd/cond.h"', 5.19766728692163e-06], ['re-use', 5.19766728692163e-06], ['builtin_data', 5.19766728692163e-06], ['*dtype;', 5.19766728692163e-06], ['`C', 5.19766728692163e-06], ['handled.', 5.19766728692163e-06], ['before,', 5.19766728692163e-06], ['builtin_converted_decls.length', 5.19766728692163e-06], ['()->addMod', 5.19766728692163e-06], ['(TypePointer::create', 5.19766728692163e-06], ['(dtype))->addMod', 5.19766728692163e-06], ['Tuns64;', 5.19766728692163e-06], ['(dtype->size', 5.19766728692163e-06], ['ARRAY_TYPE:', 5.19766728692163e-06], ['size_binop', 5.19766728692163e-06], ['size_one_node,', 5.19766728692163e-06], ['dtype->sarrayOf', 5.19766728692163e-06], ['poly_uint64', 5.19766728692163e-06], ['TYPE_VECTOR_SUBPARTS', 5.19766728692163e-06], ['(IDENTIFIER_POINTER', 5.19766728692163e-06], ['Neither', 5.19766728692163e-06], ['Dsymbols;', 5.19766728692163e-06], ['varargs_p', 5.19766728692163e-06], ['(parms));', 5.19766728692163e-06], ['(parm))', 5.19766728692163e-06], ['(argtype)', 5.19766728692163e-06], ['(argtype);', 5.19766728692163e-06], ['STCref;', 5.19766728692163e-06], ['variadic,', 5.19766728692163e-06], ['builtin,', 5.19766728692163e-06], ['CST.', 5.19766728692163e-06], ['satisfies', 5.19766728692163e-06], ['complex_t', 5.19766728692163e-06], ['ldouble', 5.19766728692163e-06], ['*elements', 5.19766728692163e-06], ['*elem', 5.19766728692163e-06], ['(cst,', 5.19766728692163e-06], ['(elem', 5.19766728692163e-06], ['e->type', 5.19766728692163e-06], ['Callback', 5.19766728692163e-06], ['d_init_versions', 5.19766728692163e-06], ["`global.params.cov'", 5.19766728692163e-06], ['(global.params.useUnitTests)', 5.19766728692163e-06], ['(global.params.useAssert)', 5.19766728692163e-06], ['(global.params.useArrayBounds', 5.19766728692163e-06], ['ALIAS', 5.19766728692163e-06], ['AliasDeclaration', 5.19766728692163e-06], ['Target::loadModule.', 5.19766728692163e-06], ['d_build_builtins_module', 5.19766728692163e-06], ['(gcc_builtins_functions,', 5.19766728692163e-06], ['solely', 5.19766728692163e-06], ['Built-ins', 5.19766728692163e-06], ["`extern(C)'", 5.19766728692163e-06], ['exception,', 5.19766728692163e-06], ['DECL_PURE_P', 5.19766728692163e-06], ['DECL_IS_NOVOPS', 5.19766728692163e-06], ['PUREweak', 5.19766728692163e-06], ['!DECL_ASSEMBLER_NAME_SET_P', 5.19766728692163e-06], ['tf);', 5.19766728692163e-06], ['(gcc_builtins_types,', 5.19766728692163e-06], ['typeinfo,', 5.19766728692163e-06], ['demand.', 5.19766728692163e-06], ['(long_integer_type_node);', 5.19766728692163e-06], ['(byte_mode,', 5.19766728692163e-06], ['(word_mode,', 5.19766728692163e-06], ['(mode,', 5.19766728692163e-06], ['AttribDeclaration', 5.19766728692163e-06], ['*decls', 5.19766728692163e-06], ['(decls', 5.19766728692163e-06], ['(sym);', 5.19766728692163e-06], ['(gcc_builtins_libfuncs,', 5.19766728692163e-06], ['(fd->ident', 5.19766728692163e-06], ['(!m', 5.19766728692163e-06], ['builtin-types.def', 5.19766728692163e-06], ['invoked.', 5.19766728692163e-06], ['do_build_builtin_fn', 5.19766728692163e-06], ['fncode,', 5.19766728692163e-06], ['fnclass,', 5.19766728692163e-06], ['libname', 5.19766728692163e-06], ['Standard', 5.19766728692163e-06], ['builtins.def.', 5.19766728692163e-06], ['d_build_c_type_nodes', 5.19766728692163e-06], ['(char_type_node,', 5.19766728692163e-06], ['"long', 5.19766728692163e-06], ['long_unsigned_type_node;', 5.19766728692163e-06], ['long_long_unsigned_type_node;', 5.19766728692163e-06], ['d_build_d_type_nodes', 5.19766728692163e-06], ['(64);', 5.19766728692163e-06], ['(128);', 5.19766728692163e-06], ['(float_type_node);', 5.19766728692163e-06], ['(double_type_node);', 5.19766728692163e-06], ['ModuleInfo,', 5.19766728692163e-06], ['ClassInfo,', 5.19766728692163e-06], ['wins', 5.19766728692163e-06], ['gdb).', 5.19766728692163e-06], ['(vfunc_type)', 5.19766728692163e-06], ['(vfunc_type);', 5.19766728692163e-06], ['(3));', 5.19766728692163e-06], ['("length"),', 5.19766728692163e-06], ['DEF_ATTR_NULL_TREE(ENUM)', 5.19766728692163e-06], ['DEF_ATTR_INT(ENUM,', 5.19766728692163e-06], ['DEF_ATTR_STRING(ENUM,', 5.19766728692163e-06], ['DEF_ATTR_IDENT(ENUM,', 5.19766728692163e-06], ['STRING)', 5.19766728692163e-06], ['DEF_ATTR_TREE_LIST(ENUM,', 5.19766728692163e-06], ['PURPOSE,', 5.19766728692163e-06], ['VALUE,', 5.19766728692163e-06], ['CHAIN)', 5.19766728692163e-06], ['"builtin-attrs.def"', 5.19766728692163e-06], ['DEF_ATTR_NULL_TREE', 5.19766728692163e-06], ['DEF_ATTR_INT', 5.19766728692163e-06], ['DEF_ATTR_STRING', 5.19766728692163e-06], ['DEF_ATTR_IDENT', 5.19766728692163e-06], ['DEF_ATTR_TREE_LIST', 5.19766728692163e-06], ['d_init_attributes', 5.19766728692163e-06], ['VALUE);', 5.19766728692163e-06], ['d_builtin_type', 5.19766728692163e-06], ['ARG8)', 5.19766728692163e-06], ['ARG9)', 5.19766728692163e-06], ['ARG10)', 5.19766728692163e-06], ['TYPE)', 5.19766728692163e-06], ['"builtin-types.def"', 5.19766728692163e-06], ['DEF_PRIMITIVE_TYPE', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_1', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_2', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_3', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_4', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_5', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_6', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_7', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_8', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_9', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_10', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_11', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_0', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_1', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_2', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_3', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_4', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_5', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_6', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_7', 5.19766728692163e-06], ['DEF_FUNCTION_TYPE_VAR_11', 5.19766728692163e-06], ['DEF_POINTER_TYPE', 5.19766728692163e-06], ['BT_LAST', 5.19766728692163e-06], ['Takes', 5.19766728692163e-06], ['list;', 5.19766728692163e-06], ['(list,', 5.19766728692163e-06], ['egress;', 5.19766728692163e-06], ['ARG1);', 5.19766728692163e-06], ['ARG2);', 5.19766728692163e-06], ['ARG3);', 5.19766728692163e-06], ['ARG4);', 5.19766728692163e-06], ['ARG5);', 5.19766728692163e-06], ['ARG6);', 5.19766728692163e-06], ['ARG7);', 5.19766728692163e-06], ['ARG11);', 5.19766728692163e-06], ['CLASS,', 5.19766728692163e-06], ['BOTH_P,', 5.19766728692163e-06], ['FALLBACK_P,', 5.19766728692163e-06], ['COND)', 5.19766728692163e-06], ['d_init_builtins', 5.19766728692163e-06], ['abi', 5.19766728692163e-06], ['gimplification', 5.19766728692163e-06], ['va_list_type_node);', 5.19766728692163e-06], ['d_register_builtin_type', 5.19766728692163e-06], ['d_builtin_function', 5.19766728692163e-06], ['"filenames.h"', 5.19766728692163e-06], ['directory', 5.19766728692163e-06], ['./', 5.19766728692163e-06], ['../,', 5.19766728692163e-06], ['modifying', 5.19766728692163e-06], ['exists,', 5.19766728692163e-06], ['(filename[0]', 5.19766728692163e-06], ['..', 5.19766728692163e-06], ["'/';", 5.19766728692163e-06], ['close(fd);', 5.19766728692163e-06], ['data",', 5.19766728692163e-06], ['*PFILENAME', 5.19766728692163e-06], ['pfilename->substr(0,', 5.19766728692163e-06], ['basename_pos)', 5.19766728692163e-06], ['"lib"', 5.19766728692163e-06], ['(stream', 5.19766728692163e-06], ['stream;', 5.19766728692163e-06], ['(lseek(fd,', 5.19766728692163e-06], ['Export::cur_magic,', 5.19766728692163e-06], ['memcmp(buf,', 5.19766728692163e-06], ['Export::v1_magic,', 5.19766728692163e-06], ['Export::v2_magic,', 5.19766728692163e-06], ['filename.c_str(),', 5.19766728692163e-06], ['(buf', 5.19766728692163e-06], ['package_(NULL),', 5.19766728692163e-06], ['this->gogo_', 5.19766728692163e-06], ['this->require_c_string("package', 5.19766728692163e-06], ['pkgpath_symbol;', 5.19766728692163e-06], ['unique_prefix', 5.19766728692163e-06], ['Gogo::pkgpath_for_symbol(package_name));', 5.19766728692163e-06], ['EXPORT_FORMAT_V1)', 5.19766728692163e-06], ['prio;', 5.19766728692163e-06], ['this->package_;', 5.19766728692163e-06], ['(!this->match_c_string("\\n")', 5.19766728692163e-06], ['!this->match_c_string(";"))', 5.19766728692163e-06], ['init_name', 5.19766728692163e-06], ['src;', 5.19766728692163e-06], ['import_initvec.size());', 5.19766728692163e-06], ['maxp1;', 5.19766728692163e-06], ['exportedp1;', 5.19766728692163e-06], ['total_type_size', 5.19766728692163e-06], ['vs', 5.19766728692163e-06], ['type_data_.', 5.19766728692163e-06], ['this->types_[i];', 5.19766728692163e-06], ['(!this->stream_->saw_error())', 5.19766728692163e-06], ['this->stream_->pos());', 5.19766728692163e-06], ['receiver;', 5.19766728692163e-06], ['body;', 5.19766728692163e-06], ['&body);', 5.19766728692163e-06], ['rtype->named_type()->add_method_declaration(name,', 5.19766728692163e-06], ['(nointerface)', 5.19766728692163e-06], ['%d,', 5.19766728692163e-06], ['Type::import_type(this);', 5.19766728692163e-06], ['invisible.', 5.19766728692163e-06], ['this->require_c_string("<type', 5.19766728692163e-06], ['stream->get_char();', 5.19766728692163e-06], ['&index))', 5.19766728692163e-06], ['parsed;', 5.19766728692163e-06], ['stream->pos(),', 5.19766728692163e-06], ['&parsed);', 5.19766728692163e-06], ['%<', 5.19766728692163e-06], ['%>', 5.19766728692163e-06], ['this->require_c_string(">");', 5.19766728692163e-06], ['stream->get_char())', 5.19766728692163e-06], ['(type_name[0]', 5.19766728692163e-06], ['(this->types_[index]', 5.19766728692163e-06], ['go_assert(no->is_type());', 5.19766728692163e-06], ['this->types_[index];', 5.19766728692163e-06], ['(is_alias)', 5.19766728692163e-06], ['(no->is_type())', 5.19766728692163e-06], ['this->advance(1);', 5.19766728692163e-06], ['(this->match_c_string("', 5.19766728692163e-06], ['*parsed', 5.19766728692163e-06], ['%lu:', 5.19766728692163e-06], ['input_name.c_str(),', 5.19766728692163e-06], ['long>(input_offset),', 5.19766728692163e-06], ['this->builtin_types_[-', 5.19766728692163e-06], ['index]', 5.19766728692163e-06], ['Escape_note::make_tag(Node::ESCAPE_UNKNOWN);', 5.19766728692163e-06], ['"?")', 5.19766728692163e-06], ['this->advance(length);', 5.19766728692163e-06], ['prio', 5.19766728692163e-06], ['&read))', 5.19766728692163e-06], ['(!this->do_peek(length,', 5.19766728692163e-06], ['bytes);', 5.19766728692163e-06], ['(this->data_.length()', 5.19766728692163e-06], ['*bytes', 5.19766728692163e-06], ['this->data_.data();', 5.19766728692163e-06], ['(lseek(this->fd_,', 5.19766728692163e-06], ['SEEK_CUR)', 5.19766728692163e-06], ['skip,', 5.19766728692163e-06], ['Import_function_body.', 5.19766728692163e-06], ['char>(this->body_[i]);', 5.19766728692163e-06], ['0x7fffffff)', 5.19766728692163e-06], ["type's", 5.19766728692163e-06], ['C++,', 5.19766728692163e-06], ['HASHNODE', 5.19766728692163e-06], ['(hashnode))', 5.19766728692163e-06], ['suggest', 5.19766728692163e-06], ['best_macro_match', 5.19766728692163e-06], ['find_closest_macro_cpp_cb', 5.19766728692163e-06], ['Selftests.', 5.19766728692163e-06], ['test_name_reserved_for_implementation_p', 5.19766728692163e-06], ['("foo"));', 5.19766728692163e-06], ['Google.', 5.19766728692163e-06], ['Andrew', 5.19766728692163e-06], ['Sutton', 5.19766728692163e-06], ['(andrew.n.sutton@gmail.com)', 5.19766728692163e-06], ['INCLUDE_LIST', 5.19766728692163e-06], ['"timevar.h"', 5.19766728692163e-06], ['"hash-set.h"', 5.19766728692163e-06], ['"machmode.h"', 5.19766728692163e-06], ['"double-int.h"', 5.19766728692163e-06], ['"input.h"', 5.19766728692163e-06], ['"symtab.h"', 5.19766728692163e-06], ['"wide-int.h"', 5.19766728692163e-06], ['"inchash.h"', 5.19766728692163e-06], ['"intl.h"', 5.19766728692163e-06], ['"flags.h"', 5.19766728692163e-06], ['"cp-tree.h"', 5.19766728692163e-06], ['"c-family/c-objc.h"', 5.19766728692163e-06], ['"cp-objcp-common.h"', 5.19766728692163e-06], ['"decl.h"', 5.19766728692163e-06], ['"type-utils.h"', 5.19766728692163e-06], ['iter)', 5.19766728692163e-06], ['any_p', 5.19766728692163e-06], ['last,', 5.19766728692163e-06], ['(first', 5.19766728692163e-06], ['Proof', 5.19766728692163e-06], ['(term_entry', 5.19766728692163e-06], ['iterative_hash_template_arg', 5.19766728692163e-06], ['cp_tree_equal', 5.19766728692163e-06], ['tactics', 5.19766728692163e-06], ['push_back', 5.19766728692163e-06], ['term_list::term_list', 5.19766728692163e-06], ['tab', 5.19766728692163e-06], ['(11)', 5.19766728692163e-06], ['seq', 5.19766728692163e-06], ['{t};', 5.19766728692163e-06], ['(&ent);', 5.19766728692163e-06], ['proposition', 5.19766728692163e-06], ['(*iter));', 5.19766728692163e-06], ['term_list::replace', 5.19766728692163e-06], ['conclusions.', 5.19766728692163e-06], ['models', 5.19766728692163e-06], ['tracks', 5.19766728692163e-06], ['facilities', 5.19766728692163e-06], ['managing', 5.19766728692163e-06], ['std::list<proof_goal>', 5.19766728692163e-06], ['subgoal.', 5.19766728692163e-06], ['subgoal,', 5.19766728692163e-06], ['end());', 5.19766728692163e-06], ['(term_list::iterator', 5.19766728692163e-06], ['*i);', 5.19766728692163e-06], ['prove', 5.19766728692163e-06], ['invalid,', 5.19766728692163e-06], ['analyze_pack', 5.19766728692163e-06], ['(*iter)', 5.19766728692163e-06], ['c1))', 5.19766728692163e-06], ['search_known_subsumptions', 5.19766728692163e-06], ['sufficient', 5.19766728692163e-06], ['analyze_check', 5.19766728692163e-06], ['analyze_parameterized', 5.19766728692163e-06], ['analyze_conjunction', 5.19766728692163e-06], ['analyze_disjunction', 5.19766728692163e-06], ['analyze_term', 5.19766728692163e-06], ['proven', 5.19766728692163e-06], ['way;', 5.19766728692163e-06], ['check_goal', 5.19766728692163e-06], ['invalid.', 5.19766728692163e-06], ['check_proof', 5.19766728692163e-06], ['p.end();', 5.19766728692163e-06], ['load_check_assumption', 5.19766728692163e-06], ['load_parameterized_assumption', 5.19766728692163e-06], ['load_conjunction_assumption', 5.19766728692163e-06], ['p.end())', 5.19766728692163e-06], ['explode_disjunction', 5.19766728692163e-06], ['gi,', 5.19766728692163e-06], ['(*ti1,', 5.19766728692163e-06], ['(ti2,', 5.19766728692163e-06], ['explode_assumptions', 5.19766728692163e-06], ['load_disjunction_conclusion', 5.19766728692163e-06], ['step_max', 5.19766728692163e-06], ['(step_count', 5.19766728692163e-06], ['branch_limit)', 5.19766728692163e-06], ['subsumes_constraints_nonnull', 5.19766728692163e-06], ['(check_constraint_info', 5.19766728692163e-06], ['auto_timevar', 5.19766728692163e-06], ['BrigDirectiveFbarrier*', 5.19766728692163e-06], ['fbar', 5.19766728692163e-06], ['(m_parent.m_cf', 5.19766728692163e-06], ['m_parent.m_cf->m_function_scope_vars.insert', 5.19766728692163e-06], ['(fbar);', 5.19766728692163e-06], ['m_parent.add_group_variable', 5.19766728692163e-06], ['"go-gcc.h"', 5.19766728692163e-06], ['file_name,', 5.19766728692163e-06], ['line_begin);', 5.19766728692163e-06], ['locations', 5.19766728692163e-06], ['this->in_file_', 5.19766728692163e-06], ['resolved_location', 5.19766728692163e-06], ['lineno,', 5.19766728692163e-06], ['loc.gcc_location()', 5.19766728692163e-06], ['cover', 5.19766728692163e-06], ['Language', 5.19766728692163e-06], ['merged', 5.19766728692163e-06], ['ENABLE_SHARED_LIBGCC', 5.19766728692163e-06], ['postblit.', 5.19766728692163e-06], ['t->baseElemOf', 5.19766728692163e-06], ['destructor.', 5.19766728692163e-06], ['TOKslice', 5.19766728692163e-06], ['((UnaExp', 5.19766728692163e-06], ['e)->e1->isLvalue', 5.19766728692163e-06], ['binary_op', 5.19766728692163e-06], ['immediately.', 5.19766728692163e-06], ['that,', 5.19766728692163e-06], ['(t0))', 5.19766728692163e-06], ['d_signed_type', 5.19766728692163e-06], ['excess_precision_type', 5.19766728692163e-06], ['(eptype', 5.19766728692163e-06], ['arg0);', 5.19766728692163e-06], ['!COMPLEX_FLOAT_TYPE_P', 5.19766728692163e-06], ['eptype,', 5.19766728692163e-06], ['E1.', 5.19766728692163e-06], ['TOKcast)', 5.19766728692163e-06], ['CastExp', 5.19766728692163e-06], ['(ce->type,', 5.19766728692163e-06], ['ce->to));', 5.19766728692163e-06], ['ce->e1;', 5.19766728692163e-06], ['(e1b);', 5.19766728692163e-06], ['lexpr', 5.19766728692163e-06], ['lost', 5.19766728692163e-06], ['(lexpr,', 5.19766728692163e-06], ['this->binary_op', 5.19766728692163e-06], ['e1b->type,', 5.19766728692163e-06], ['constp)', 5.19766728692163e-06], ['this->constp_', 5.19766728692163e-06], ['third', 5.19766728692163e-06], ['Tvector)', 5.19766728692163e-06], ['(tb1,', 5.19766728692163e-06], ['tb2));', 5.19766728692163e-06], ['lengths', 5.19766728692163e-06], ['e1.length', 5.19766728692163e-06], ['e2.length', 5.19766728692163e-06], ['memcmp(e1.ptr,', 5.19766728692163e-06], ['e2.ptr,', 5.19766728692163e-06], ['expression:', 5.19766728692163e-06], ['t1elem->ty', 5.19766728692163e-06], ['(t1elem->ty', 5.19766728692163e-06], ['Tstruct', 5.19766728692163e-06], ['Length', 5.19766728692163e-06], ['(t1saved);', 5.19766728692163e-06], ['(t2saved);', 5.19766728692163e-06], ['inline.', 5.19766728692163e-06], ['t1ptr,', 5.19766728692163e-06], ['(e1.length', 5.19766728692163e-06], ['memcmp);', 5.19766728692163e-06], ['tsizecmp,', 5.19766728692163e-06], ['tlencmp,', 5.19766728692163e-06], ['TOKnotequal)', 5.19766728692163e-06], ['(tkey),', 5.19766728692163e-06], ['(key));', 5.19766728692163e-06], ['TOKle:', 5.19766728692163e-06], ['LE_EXPR;', 5.19766728692163e-06], ['TOKlt:', 5.19766728692163e-06], ['LT_EXPR;', 5.19766728692163e-06], ['TOKge:', 5.19766728692163e-06], ['GE_EXPR;', 5.19766728692163e-06], ['TOKgt:', 5.19766728692163e-06], ['GT_EXPR;', 5.19766728692163e-06], ['Type::tint32,', 5.19766728692163e-06], ['e->e2->type);', 5.19766728692163e-06], ['(BinExp', 5.19766728692163e-06], ['validated', 5.19766728692163e-06], ['TOKadd)', 5.19766728692163e-06], ['e->e1->type->isintegral', 5.19766728692163e-06], ['TRUNC_DIV_EXPR', 5.19766728692163e-06], ['TOKmod:', 5.19766728692163e-06], ['e->e1->type->isfloating', 5.19766728692163e-06], ['FLOAT_MOD_EXPR', 5.19766728692163e-06], ['UNSIGNED_RSHIFT_EXPR;', 5.19766728692163e-06], ['(CatExp', 5.19766728692163e-06], ['tb2->nextOf', 5.19766728692163e-06], ['TOKcat)', 5.19766728692163e-06], ['ndims', 5.19766728692163e-06], ['oe', 5.19766728692163e-06], ['(oe', 5.19766728692163e-06], ['ce->e1)', 5.19766728692163e-06], ['elms;', 5.19766728692163e-06], ['TOKmodass:', 5.19766728692163e-06], ['TOKpowass:', 5.19766728692163e-06], ['(etype->ty', 5.19766728692163e-06], ['size_one_node);', 5.19766728692163e-06], ['First,', 5.19766728692163e-06], ['*ale', 5.19766728692163e-06], ['(ArrayLengthExp', 5.19766728692163e-06], ['()->nextOf', 5.19766728692163e-06], ['newlength,', 5.19766728692163e-06], ['(SliceExp', 5.19766728692163e-06], ['*stype', 5.19766728692163e-06], ['this->needs_postblit', 5.19766728692163e-06], ['this->lvalue_p', 5.19766728692163e-06], ['this->needs_dtor', 5.19766728692163e-06], ['(e->memset', 5.19766728692163e-06], ['((postblit', 5.19766728692163e-06], ['destructor)', 5.19766728692163e-06], ['TOKblit)', 5.19766728692163e-06], ['(d_array_length', 5.19766728692163e-06], ['tmemcpy', 5.19766728692163e-06], ['(BUILT_IN_MEMCPY);', 5.19766728692163e-06], ['(tmemcpy,', 5.19766728692163e-06], ['_d_arrayctor(ti,', 5.19766728692163e-06], ['TOKconstruct', 5.19766728692163e-06], ['TOKvar);', 5.19766728692163e-06], ['ref.', 5.19766728692163e-06], ['MODIFY_EXPR;', 5.19766728692163e-06], ['(e->e2->op', 5.19766728692163e-06], ['TOKint64)', 5.19766728692163e-06], ['(sd->isNested', 5.19766728692163e-06], ['(sd->vthis);', 5.19766728692163e-06], ['e->type;', 5.19766728692163e-06], ['arrtype,', 5.19766728692163e-06], ['(tb1->nextOf', 5.19766728692163e-06], ['tb1,', 5.19766728692163e-06], ['tb1);', 5.19766728692163e-06], ['(e->lengthVar', 5.19766728692163e-06], ['__dollar', 5.19766728692163e-06], ['(e->lengthVar)', 5.19766728692163e-06], ['e->lengthVar->csym', 5.19766728692163e-06], ['bounds.', 5.19766728692163e-06], ['void*.', 5.19766728692163e-06], ['(lwr_tree)', 5.19766728692163e-06], ['lwr_tree);', 5.19766728692163e-06], ['upr_tree,', 5.19766728692163e-06], ['Still', 5.19766728692163e-06], ['upr', 5.19766728692163e-06], ['upr_tree;', 5.19766728692163e-06], ['TOKvar)', 5.19766728692163e-06], ['()->isInterfaceDeclaration', 5.19766728692163e-06], ['(telem->ty', 5.19766728692163e-06], ['Might', 5.19766728692163e-06], ['(ts->sym->dtor)', 5.19766728692163e-06], ['*tnext', 5.19766728692163e-06], ['e->e1->toChars', 5.19766728692163e-06], ['("%qs', 5.19766728692163e-06], ['TY', 5.19766728692163e-06], ['()->ty;', 5.19766728692163e-06], ['(ty1', 5.19766728692163e-06], ['(SymOffExp', 5.19766728692163e-06], ['*field', 5.19766728692163e-06], ['(field->offset', 5.19766728692163e-06], ['Catch', 5.19766728692163e-06], ['TOKstructliteral)', 5.19766728692163e-06], ['(sle,', 5.19766728692163e-06], ['DotVarExp', 5.19766728692163e-06], ['(DotVarExp', 5.19766728692163e-06], ['(StructLiteralExp', 5.19766728692163e-06], ['method;', 5.19766728692163e-06], ['TARGET_EXPR_CLEANUP', 5.19766728692163e-06], ['(fd->isVirtual', 5.19766728692163e-06], ['(ad->handleType', 5.19766728692163e-06], ['Delegate', 5.19766728692163e-06], ['(fd->type);', 5.19766728692163e-06], ['public.', 5.19766728692163e-06], ['Continue', 5.19766728692163e-06], ['Normal', 5.19766728692163e-06], ['(tf,', 5.19766728692163e-06], ['(tf->isref)', 5.19766728692163e-06], ['effect.', 5.19766728692163e-06], ['(cleanup);', 5.19766728692163e-06], ['owner->toParent', 5.19766728692163e-06], ['owner', 5.19766728692163e-06], ['object;', 5.19766728692163e-06], ['non-static', 5.19766728692163e-06], ['(e->e1->type->ty', 5.19766728692163e-06], ['e->e1->op', 5.19766728692163e-06], ['e->var->isVarDeclaration', 5.19766728692163e-06], ['(vd));', 5.19766728692163e-06], ['tmsg', 5.19766728692163e-06], ['_d_assert', 5.19766728692163e-06], ['(...))', 5.19766728692163e-06], ['assert_fail', 5.19766728692163e-06], ['!cd->isCPPclass', 5.19766728692163e-06], ['Assert', 5.19766728692163e-06], ['contract', 5.19766728692163e-06], ['(fn));', 5.19766728692163e-06], ['(condition);', 5.19766728692163e-06], ['!STATEMENT_LIST_HEAD', 5.19766728692163e-06], ['*tid', 5.19766728692163e-06], ['(e->obj))', 5.19766728692163e-06], ['(ti,', 5.19766728692163e-06], ['*ftype', 5.19766728692163e-06], ['TOKfunction;', 5.19766728692163e-06], ['(e->fd);', 5.19766728692163e-06], ['(func,', 5.19766728692163e-06], ['e->fd->type);', 5.19766728692163e-06], ['(e->var))', 5.19766728692163e-06], ['run-time.', 5.19766728692163e-06], ['(sd->dsym);', 5.19766728692163e-06], ['"non-constant', 5.19766728692163e-06], ['(e->allocator,', 5.19766728692163e-06], ['e->newargs);', 5.19766728692163e-06], ['(new_call),', 5.19766728692163e-06], ['(outer', 5.19766728692163e-06], ['(setup_exp,', 5.19766728692163e-06], ['(e->member)', 5.19766728692163e-06], ['(e->member,', 5.19766728692163e-06], ['new_call,', 5.19766728692163e-06], ['(e->loc)', 5.19766728692163e-06], ['LIBCALL_NEWITEMT', 5.19766728692163e-06], ['LIBCALL_NEWITEMIT;', 5.19766728692163e-06], ['(e->newtype);', 5.19766728692163e-06], ['(modify_expr', 5.19766728692163e-06], ['StructLiteralExp::create', 5.19766728692163e-06], ['sd->type;', 5.19766728692163e-06], ['e->arguments->dim', 5.19766728692163e-06], ['allocations.', 5.19766728692163e-06], ['unknown.', 5.19766728692163e-06], ['dims)', 5.19766728692163e-06], ['(e->type->toBasetype', 5.19766728692163e-06], ['(e->value,', 5.19766728692163e-06], ['Tcomplex32:', 5.19766728692163e-06], ['Tcomplex64:', 5.19766728692163e-06], ['Tcomplex80:', 5.19766728692163e-06], ['(e->value),', 5.19766728692163e-06], ['terminated', 5.19766728692163e-06], ['(string,', 5.19766728692163e-06], ['string);', 5.19766728692163e-06], ['*exp', 5.19766728692163e-06], ['(e->elements->dim', 5.19766728692163e-06], ['e->elements->dim);', 5.19766728692163e-06], ['e->elements->dim;', 5.19766728692163e-06], ['*expr', 5.19766728692163e-06], ['(&value);', 5.19766728692163e-06], ['readonly', 5.19766728692163e-06], ['initializer_constant_valid_p', 5.19766728692163e-06], ['(ctor,', 5.19766728692163e-06], ['(ctor)))', 5.19766728692163e-06], ['ctor));', 5.19766728692163e-06], ['MEM.', 5.19766728692163e-06], ['mem);', 5.19766728692163e-06], ['(ta),', 5.19766728692163e-06], ['(kelts,', 5.19766728692163e-06], ['e->keys->dim);', 5.19766728692163e-06], ['*key', 5.19766728692163e-06], ['(velts,', 5.19766728692163e-06], ['e->values->dim);', 5.19766728692163e-06], ['e->sd->fields.dim', 5.19766728692163e-06], ['sinit', 5.19766728692163e-06], ['(e->useStaticInit', 5.19766728692163e-06], ['(e->sd);', 5.19766728692163e-06], ['this->constp_),', 5.19766728692163e-06], ['(TREE_CONSTANT', 5.19766728692163e-06], ['TOKarrayliteral)', 5.19766728692163e-06], ['((ArrayLiteralExp', 5.19766728692163e-06], ['this->constp_));', 5.19766728692163e-06], ['build_new_class_expr', 5.19766728692163e-06], ['(to', 5.19766728692163e-06], ['(from,', 5.19766728692163e-06], ['expression",', 5.19766728692163e-06], ['CONST_P', 5.19766728692163e-06], ['saved_vars', 5.19766728692163e-06], ['(d_function_chain->vars_in_scope);', 5.19766728692163e-06], ['(saved_vars', 5.19766728692163e-06], ['(d_function_chain->vars_in_scope))', 5.19766728692163e-06], ['fold_build_cleanup_point_expr', 5.19766728692163e-06], ['vec_safe_truncate', 5.19766728692163e-06], ['saved_vars);', 5.19766728692163e-06], ['build_return_dtor', 5.19766728692163e-06], ['u;', 5.19766728692163e-06], ['Go_sha1_helper*', 5.19766728692163e-06], ['directives.', 5.19766728692163e-06], ['stdlibs.', 5.19766728692163e-06], ['stdlib', 5.19766728692163e-06], ['stdlib_hint', 5.19766728692163e-06], ['<assert.h>', 5.19766728692163e-06], ['<limits.h>', 5.19766728692163e-06], ['<float.h>', 5.19766728692163e-06], ['<stddef.h>', 5.19766728692163e-06], ['{"<wchar.h>",', 5.19766728692163e-06], ['"<cwchar>"}', 5.19766728692163e-06], ["suggest_missing_header's", 5.19766728692163e-06], ['(&richloc,', 5.19766728692163e-06], ['m_header_hint,', 5.19766728692163e-06], ['forget', 5.19766728692163e-06], ['types.cc', 5.19766728692163e-06], ['"operator.h"', 5.19766728692163e-06], ['get_backend_struct_fields(Gogo*', 5.19766728692163e-06], ['get_backend_slice_fields(Gogo*', 5.19766728692163e-06], ['get_backend_interface_fields(Gogo*', 5.19766728692163e-06], ['classification)', 5.19766728692163e-06], ['Type::base()', 5.19766728692163e-06], ['this->named_type()->named_base();', 5.19766728692163e-06], ['this->forward_declaration_type()->real_type()->base();', 5.19766728692163e-06], ['Type::forwarded()', 5.19766728692163e-06], ['(ftype', 5.19766728692163e-06], ['ftype->is_defined())', 5.19766728692163e-06], ['ftype->real_type();', 5.19766728692163e-06], ['Type::unalias()', 5.19766728692163e-06], ['Type::named_type()', 5.19766728692163e-06], ['TYPE_NAMED>();', 5.19766728692163e-06], ['composed', 5.19766728692163e-06], ['(this->classification())', 5.19766728692163e-06], ['TYPE_POINTER>();', 5.19766728692163e-06], ['ptype->points_to();', 5.19766728692163e-06], ['t->forward_declaration_type()->named_object();', 5.19766728692163e-06], ['Traverse::traverse_types)', 5.19766728692163e-06], ['multiple-value', 5.19766728692163e-06], ['call";', 5.19766728692163e-06], ['(Type::are_identical(lhs,', 5.19766728692163e-06], ['((rhs->is_abstract()', 5.19766728692163e-06], ['(rhs->points_to()', 5.19766728692163e-06], ['rhs->channel_type()', 5.19766728692163e-06], ['(rhs->is_nil_type()', 5.19766728692163e-06], ['lhs->interface_type()', 5.19766728692163e-06], ['lhs->is_slice_type()', 5.19766728692163e-06], ['lhs->map_type()', 5.19766728692163e-06], ['lhs->channel_type()', 5.19766728692163e-06], ['lhs->function_type()', 5.19766728692163e-06], ['*t1,', 5.19766728692163e-06], ['t1->float_type()', 5.19766728692163e-06], ['(t1->is_slice_type()', 5.19766728692163e-06], ['t2->map_type()', 5.19766728692163e-06], ['struct");', 5.19766728692163e-06], ['array");', 5.19766728692163e-06], ['lhs->unalias();', 5.19766728692163e-06], ['rhs->unalias();', 5.19766728692163e-06], ['Type::are_identical(lhs->base(),', 5.19766728692163e-06], ['rhs->base(),', 5.19766728692163e-06], ['(lhs->named_type()', 5.19766728692163e-06], ['_("cannot', 5.19766728692163e-06], ['%s"),', 5.19766728692163e-06], ['rhs->points_to()', 5.19766728692163e-06], ['(e->integer_type()', 5.19766728692163e-06], ['(e->integer_type()->is_byte()', 5.19766728692163e-06], ['e->integer_type()->is_rune()))', 5.19766728692163e-06], ['vice-versa.', 5.19766728692163e-06], ['Type::lookup_integer_type("uintptr")->real_type())))', 5.19766728692163e-06], ['(";', 5.19766728692163e-06], ['*reason;', 5.19766728692163e-06], ['this->array_type();', 5.19766728692163e-06], ['this->struct_type();', 5.19766728692163e-06], ['sfl->begin();', 5.19766728692163e-06], ['lookup.', 5.19766728692163e-06], ['this->named_type()->is_alias())', 5.19766728692163e-06], ['(this->forward_declaration_type()', 5.19766728692163e-06], ['this->get_btype_without_hash(gogo);', 5.19766728692163e-06], ['(this->is_error_type())', 5.19766728692163e-06], ['Type_btype_entry>', 5.19766728692163e-06], ['std::pair<Type_btypes::iterator,', 5.19766728692163e-06], ['Type::type_btypes.insert(val);', 5.19766728692163e-06], ['GOGO', 5.19766728692163e-06], ['asking', 5.19766728692163e-06], ['(gogo->named_types_are_converted())', 5.19766728692163e-06], ['has_padding', 5.19766728692163e-06], ['Struct_type', 5.19766728692163e-06], ['E.g.,', 5.19766728692163e-06], ['channels', 5.19766728692163e-06], ['(this->interface_type()->is_empty())', 5.19766728692163e-06], ['placeholder.', 5.19766728692163e-06], ['gogo->backend()->array_type(element,', 5.19766728692163e-06], ['(!gogo->backend()->set_placeholder_pointer_type(placeholder,', 5.19766728692163e-06], ['bt))', 5.19766728692163e-06], ['this->unalias();', 5.19766728692163e-06], ['var_addr', 5.19766728692163e-06], ['gogo->backend()->address_expression(var_expr,', 5.19766728692163e-06], ['td_btype', 5.19766728692163e-06], ['td_type->get_backend(gogo);', 5.19766728692163e-06], ['Bvariable**', 5.19766728692163e-06], ['&ins.first->second;', 5.19766728692163e-06], ['gogo->type_descriptor_name(this,', 5.19766728692163e-06], ['(this->type_descriptor_defined_elsewhere(nt,', 5.19766728692163e-06], ['nt->is_builtin();', 5.19766728692163e-06], ['keep.', 5.19766728692163e-06], ['type->do_type_descriptor(gogo,', 5.19766728692163e-06], ['nfields,', 5.19766728692163e-06], ['nfields);', 5.19766728692163e-06], ['nfields;', 5.19766728692163e-06], ['Type*);', 5.19766728692163e-06], ['std::vector<Named_type*>', 5.19766728692163e-06], ['(std::vector<Named_type*>::const_iterator', 5.19766728692163e-06], ['(*p)->verify();', 5.19766728692163e-06], ['(*p)->convert(gogo);', 5.19766728692163e-06], ['instead,', 5.19766728692163e-06], ['pointer_type_descriptor_type,', 5.19766728692163e-06], ['"methods",', 5.19766728692163e-06], ['"size",', 5.19766728692163e-06], ['"ptrdata",', 5.19766728692163e-06], ['"kind",', 5.19766728692163e-06], ['"gcdata",', 5.19766728692163e-06], ['memequalN', 5.19766728692163e-06], ['"int64";', 5.19766728692163e-06], ['(!this->is_comparable())', 5.19766728692163e-06], ['!this->backend_type_align(gogo,', 5.19766728692163e-06], ['equal_fn)', 5.19766728692163e-06], ['(hash_fntype', 5.19766728692163e-06], ['32))', 5.19766728692163e-06], ['identity,', 5.19766728692163e-06], ['compare_is_identity', 5.19766728692163e-06], ['SIZE', 5.19766728692163e-06], ['is_defined_elsewhere', 5.19766728692163e-06], ['name->real_type()->named_type()', 5.19766728692163e-06], ['(this->struct_type()', 5.19766728692163e-06], ['(this->array_type()', 5.19766728692163e-06], ['gogo->finish_function(bloc);', 5.19766728692163e-06], ['[3]byte.', 5.19766728692163e-06], ['memhash', 5.19766728692163e-06], ['called),', 5.19766728692163e-06], ['params->push_back(Typed_identifier("size",', 5.19766728692163e-06], ['key_ref', 5.19766728692163e-06], ['seed_ref', 5.19766728692163e-06], ['size_arg', 5.19766728692163e-06], ['Expression::make_integer_int64(size,', 5.19766728692163e-06], ['args->push_back(key_ref);', 5.19766728692163e-06], ['args->push_back(seed_ref);', 5.19766728692163e-06], ['args->push_back(size_arg);', 5.19766728692163e-06], ['name->real_type()->named_type();', 5.19766728692163e-06], ['RUNTIME_TYPE_KIND', 5.19766728692163e-06], ['vals->reserve(12);', 5.19766728692163e-06], ['(!this->has_pointer())', 5.19766728692163e-06], ['h;', 5.19766728692163e-06], ['Expression::make_nil(bloc),', 5.19766728692163e-06], ['corresponds', 5.19766728692163e-06], ['toolchain,', 5.19766728692163e-06], ['similar', 5.19766728692163e-06], ['(!this->needs_gcprog(gogo,', 5.19766728692163e-06], ['sym_name', 5.19766728692163e-06], ['gogo->backend()->implicit_variable(sym_name,', 5.19766728692163e-06], ['sym_btype,', 5.19766728692163e-06], ['sym_name,', 5.19766728692163e-06], ['(!this->backend_type_ptrdata(gogo,', 5.19766728692163e-06], ['Ptrmask', 5.19766728692163e-06], ['7)', 5.19766728692163e-06], ['set_from(Gogo*,', 5.19766728692163e-06], ['constructor(Gogo*', 5.19766728692163e-06], ['char>', 5.19766728692163e-06], ['type->struct_type()->fields();', 5.19766728692163e-06], ['(soffset', 5.19766728692163e-06], ['soffset);', 5.19766728692163e-06], ['(!type->array_type()->int_length(&len))', 5.19766728692163e-06], ['&ele_size))', 5.19766728692163e-06], ['eoffset);', 5.19766728692163e-06], ["'\\0');", 5.19766728692163e-06], ['this->bits_.begin();', 5.19766728692163e-06], ['this->bits_.end();', 5.19766728692163e-06], ['(remaining', 5.19766728692163e-06], ['chars[b', 5.19766728692163e-06], ['0x1f];', 5.19766728692163e-06], ['vals->push_back(Expression::make_integer_ul(*p,', 5.19766728692163e-06], ['byte_type,', 5.19766728692163e-06], ['Expression::make_array_composite_literal(at,', 5.19766728692163e-06], ['gcbits.', 5.19766728692163e-06], ['lot', 5.19766728692163e-06], ['ele_len;', 5.19766728692163e-06], ['this->index_);', 5.19766728692163e-06], ['this->byte(0x80', 5.19766728692163e-06], ['(skip', 5.19766728692163e-06], ['this->lit(0);', 5.19766728692163e-06], ['char>(x', 5.19766728692163e-06], ['this->byte(static_cast<unsigned', 5.19766728692163e-06], ['pending', 5.19766728692163e-06], ['this->byte(bits);', 5.19766728692163e-06], ['at);', 5.19766728692163e-06], ['prog;', 5.19766728692163e-06], ['prog.set_from(gogo,', 5.19766728692163e-06], ['prog.bit_index()', 5.19766728692163e-06], ['ONLY_VALUE_METHODS', 5.19766728692163e-06], ['go_assert(p->is_field_name("name"));', 5.19766728692163e-06], ['go_assert(p->is_field_name("pkgPath"));', 5.19766728692163e-06], ['Gogo::unpack_hidden_name(no->name());', 5.19766728692163e-06], ['gogo->pkgpath()', 5.19766728692163e-06], ['package->pkgpath());', 5.19766728692163e-06], ['Method*>&', 5.19766728692163e-06], ['table,', 5.19766728692163e-06], ['Method*>', 5.19766728692163e-06], ['Expression::make_slice_composite_literal(methods_type,', 5.19766728692163e-06], ['nonmethod_type', 5.19766728692163e-06], ['vals->push_back(Expression::make_type_descriptor(nonmethod_type,', 5.19766728692163e-06], ['this->struct_type()->fields();', 5.19766728692163e-06], ['space",', 5.19766728692163e-06], ['*palign)', 5.19766728692163e-06], ['*palign', 5.19766728692163e-06], ['pptrdata)', 5.19766728692163e-06], ['this->backend_type_size(gogo,', 5.19766728692163e-06], ['ptr->backend_type_size(gogo,', 5.19766728692163e-06], ['(ptr', 5.19766728692163e-06], ['ptr_ptrdata;', 5.19766728692163e-06], ['ele_ptrdata;', 5.19766728692163e-06], ['backend_ptrdata;', 5.19766728692163e-06], ['&backend_ptrdata))', 5.19766728692163e-06], ['gogo->backend()->void_type();', 5.19766728692163e-06], ['Type::type_descriptor(gogo,', 5.19766728692163e-06], ['no->type_value());', 5.19766728692163e-06], ['named_bool_type;', 5.19766728692163e-06], ['Integer_type(true,', 5.19766728692163e-06], ['RUNTIME_TYPE_KIND_INT);', 5.19766728692163e-06], ['RUNTIME_TYPE_KIND_INT32);', 5.19766728692163e-06], ['complex_type', 5.19766728692163e-06], ['complex_type,', 5.19766728692163e-06], ['128,', 5.19766728692163e-06], ['String_type', 5.19766728692163e-06], ['fields:', 5.19766728692163e-06], ['backend_string_type;', 5.19766728692163e-06], ['(!gogo->named_types_are_converted())', 5.19766728692163e-06], ['fields[0].name', 5.19766728692163e-06], ['fields[0].btype', 5.19766728692163e-06], ['fields[0].location', 5.19766728692163e-06], ['gogo->backend()->struct_type(fields);', 5.19766728692163e-06], ['ret->append("string");', 5.19766728692163e-06], ['string_type;', 5.19766728692163e-06], ['"string".', 5.19766728692163e-06], ['named_string_type;', 5.19766728692163e-06], ['Sink_type', 5.19766728692163e-06], ['do_compare_is_identity(Gogo*)', 5.19766728692163e-06], ['do_type_descriptor(Gogo*,', 5.19766728692163e-06], ['do_reflection(Gogo*,', 5.19766728692163e-06], ['do_mangled_name(Gogo*,', 5.19766728692163e-06], ['redeclaration', 5.19766728692163e-06], ['t->parameters();', 5.19766728692163e-06], ['parms1->begin();', 5.19766728692163e-06], ['parms2->begin();', 5.19766728692163e-06], ['parms2->end();', 5.19766728692163e-06], ['++p2,', 5.19766728692163e-06], ['(p1->name()', 5.19766728692163e-06], ['t1->forward_declaration_type()', 5.19766728692163e-06], ['(t2->forward_declaration_type()', 5.19766728692163e-06], ['(t1->forward_declaration_type()->named_object()', 5.19766728692163e-06], ['t2->forward_declaration_type()->named_object())))', 5.19766728692163e-06], ['t->results();', 5.19766728692163e-06], ['res1', 5.19766728692163e-06], ['results1->begin();', 5.19766728692163e-06], ['results2->begin();', 5.19766728692163e-06], ['results2->end();', 5.19766728692163e-06], ['++res2,', 5.19766728692163e-06], ['++res1)', 5.19766728692163e-06], ['this->receiver();', 5.19766728692163e-06], ['(r1', 5.19766728692163e-06], ['(parms2', 5.19766728692163e-06], ['parms1->end())', 5.19766728692163e-06], ['p2->type(),', 5.19766728692163e-06], ['(results2', 5.19766728692163e-06], ['(res1', 5.19766728692163e-06], ['results1->end())', 5.19766728692163e-06], ['++shift)', 5.19766728692163e-06], ['p->type()->hash_for_method(gogo,', 5.19766728692163e-06], ['Gogo::hash_string(p->name(),', 5.19766728692163e-06], ['this->receiver_->type();', 5.19766728692163e-06], ['bresult_struct', 5.19766728692163e-06], ['(this->results_->size()', 5.19766728692163e-06], ['tid', 5.19766728692163e-06], ['tid.location());', 5.19766728692163e-06], ['slice_type);', 5.19766728692163e-06], ['Function_type::make_function_type_descriptor_type();', 5.19766728692163e-06], ['vals->push_back(this->type_descriptor_params(p->type(),', 5.19766728692163e-06], ['Expression::make_slice_composite_literal(params_type,', 5.19766728692163e-06], ['ret->append("func");', 5.19766728692163e-06], ['this->is_varargs_;', 5.19766728692163e-06], ['ret->append(",', 5.19766728692163e-06], ['!results->empty())', 5.19766728692163e-06], ['ret->append("', 5.19766728692163e-06], ['exp->write_type(p->type()->array_type()->element_type());', 5.19766728692163e-06], ['results->begin()->name().empty())', 5.19766728692163e-06], ['exp->write_type(results->begin()->type());', 5.19766728692163e-06], ['parameters->push_back(Typed_identifier(name,', 5.19766728692163e-06], ['go_assert(!is_varargs);', 5.19766728692163e-06], ['results->push_back(Typed_identifier(name,', 5.19766728692163e-06], ['this->parameters_,', 5.19766728692163e-06], ['(this->is_builtin())', 5.19766728692163e-06], ['go_assert(!this->is_method());', 5.19766728692163e-06], ['receiver_type,', 5.19766728692163e-06], ['this->parameters_;', 5.19766728692163e-06], ['"pt.%u",', 5.19766728692163e-06], ['new_params->push_back(Typed_identifier(buf,', 5.19766728692163e-06], ['orig_results', 5.19766728692163e-06], ['new_results;', 5.19766728692163e-06], ['(orig_results', 5.19766728692163e-06], ['orig_results->empty())', 5.19766728692163e-06], ['orig_results->begin();', 5.19766728692163e-06], ['orig_results->end();', 5.19766728692163e-06], ['new_results->push_back(Typed_identifier("",', 5.19766728692163e-06], ['new_results,', 5.19766728692163e-06], ['Pointer_type::make_pointer_type_descriptor_type();', 5.19766728692163e-06], ["ret->push_back('*');", 5.19766728692163e-06], ['unresolved', 5.19766728692163e-06], ['occasionally', 5.19766728692163e-06], ['dt', 5.19766728692163e-06], ['(t->classification()', 5.19766728692163e-06], ['crashing', 5.19766728692163e-06], ['nt->is_builtin()', 5.19766728692163e-06], ['Gogo::unpack_hidden_name(name))', 5.19766728692163e-06], ['decide', 5.19766728692163e-06], ['registered', 5.19766728692163e-06], ['!Gogo::is_hidden_name(name)', 5.19766728692163e-06], ['(Struct_field_list::iterator', 5.19766728692163e-06], ['t->points_to()', 5.19766728692163e-06], ['"embedded', 5.19766728692163e-06], ['p->set_type(Type::make_error_type());', 5.19766728692163e-06], ['interface");', 5.19766728692163e-06], ['this->fields();', 5.19766728692163e-06], ['fields1', 5.19766728692163e-06], ['fields2', 5.19766728692163e-06], ['pf1', 5.19766728692163e-06], ['(pf2', 5.19766728692163e-06], ['fields2->end())', 5.19766728692163e-06], ['reflexive--whether', 5.19766728692163e-06], ['(this->is_struct_incomparable_)', 5.19766728692163e-06], ['*pindex', 5.19766728692163e-06], ['struct_expr,', 5.19766728692163e-06], ['saw,', 5.19766728692163e-06], ['*depth', 5.19766728692163e-06], ['Expression::make_field_reference(struct_expr,', 5.19766728692163e-06], ['subdepth;', 5.19766728692163e-06], ['found_depth)', 5.19766728692163e-06], ['++ret;', 5.19766728692163e-06], ['finalize_methods', 5.19766728692163e-06], ['Type::finalize_methods(gogo,', 5.19766728692163e-06], ['&this->all_methods_);', 5.19766728692163e-06], ['Type::method_function(this->all_methods_,', 5.19766728692163e-06], ['smtp;', 5.19766728692163e-06], ['smtp', 5.19766728692163e-06], ['Type::interface_method_table(this,', 5.19766728692163e-06], ['saw_nonzero', 5.19766728692163e-06], ['stdt', 5.19766728692163e-06], ['Struct_type::make_struct_type_descriptor_type();', 5.19766728692163e-06], ['stdt->struct_type()->fields();', 5.19766728692163e-06], ['this->methods();', 5.19766728692163e-06], ['attach', 5.19766728692163e-06], ['fvals->push_back(Expression::make_nil(bloc));', 5.19766728692163e-06], ['gogo->package_name();', 5.19766728692163e-06], ['Expression::make_struct_field_offset(this,', 5.19766728692163e-06], ['&*pf);', 5.19766728692163e-06], ['o,', 5.19766728692163e-06], ['elements,', 5.19766728692163e-06], ['Expression::make_struct_composite_literal(stdt,', 5.19766728692163e-06], ['key_arg_type', 5.19766728692163e-06], ['key_arg->var_value()->type();', 5.19766728692163e-06], ['gogo->add_statement(retval);', 5.19766728692163e-06], ['gogo->add_statement(key);', 5.19766728692163e-06], ['Expression::make_cast(key_arg_type,', 5.19766728692163e-06], ['subkey,', 5.19766728692163e-06], ['args->push_back(subkey);', 5.19766728692163e-06], ['args->push_back(ref);', 5.19766728692163e-06], ['vals->push_back(ref);', 5.19766728692163e-06], ['P2.', 5.19766728692163e-06], ['vals->push_back(Expression::make_boolean(true,', 5.19766728692163e-06], ['(!p->is_anonymous())', 5.19766728692163e-06], ['(p->is_anonymous()', 5.19766728692163e-06], ['p->type()->named_type()->is_alias())', 5.19766728692163e-06], ['exp->write_string(efb.body());', 5.19766728692163e-06], ['exp->write_c_string(";', 5.19766728692163e-06], ['exp->write_c_string("}");', 5.19766728692163e-06], ['imp->require_c_string("}");', 5.19766728692163e-06], ['declare)', 5.19766728692163e-06], ['t->forwarded();', 5.19766728692163e-06], ['t->struct_type()->can_write_to_c_header(requires,', 5.19766728692163e-06], ['(t->is_slice_type())', 5.19766728692163e-06], ['t->named_type()->named_object();', 5.19766728692163e-06], ['(t->is_unsafe_pointer_type())', 5.19766728692163e-06], ['t->integer_type();', 5.19766728692163e-06], ['"float', 5.19766728692163e-06], ['_Complex";', 5.19766728692163e-06], ['requires;', 5.19766728692163e-06], ['declare;', 5.19766728692163e-06], ['&declare))', 5.19766728692163e-06], ['"void*";', 5.19766728692163e-06], ["'*';", 5.19766728692163e-06], ['Gogo::message_name(name);', 5.19766728692163e-06], ['no->message_name();', 5.19766728692163e-06], ['go_assert(this->length_', 5.19766728692163e-06], ['(!Type::are_identical(this->element_type(),', 5.19766728692163e-06], ['t->element_type(),', 5.19766728692163e-06], ['(this->length_->type()->integer_type()', 5.19766728692163e-06], ['bound");', 5.19766728692163e-06], ['tbits', 5.19766728692163e-06], ['(nc.to_unsigned_long(&val))', 5.19766728692163e-06], ['overflows");', 5.19766728692163e-06], ['this->element_type_->hash_for_method(gogo,', 5.19766728692163e-06], ['(this->is_array_incomparable_)', 5.19766728692163e-06], ['gogo->add_statement(index);', 5.19766728692163e-06], ['for_range', 5.19766728692163e-06], ['Statement::make_for_range_statement(iref,', 5.19766728692163e-06], ['for_range->add_statements(statements);', 5.19766728692163e-06], ['gogo->add_statement(for_range);', 5.19766728692163e-06], ['pet', 5.19766728692163e-06], ['ploc', 5.19766728692163e-06], ['ARRAY', 5.19766728692163e-06], ['array)', 5.19766728692163e-06], ['this->length_;', 5.19766728692163e-06], ['exp->write_c_string("]', 5.19766728692163e-06], ['exp->write_type(this->element_type_);', 5.19766728692163e-06], ['imp->require_c_string("]', 5.19766728692163e-06], ['Array_type::make_array_type_descriptor_type();', 5.19766728692163e-06], ['Array_type::make_slice_type_descriptor_type();', 5.19766728692163e-06], ["ret->push_back('[');", 5.19766728692163e-06], ['ret->append(s);', 5.19766728692163e-06], ['this->append_reflection(this->element_type_,', 5.19766728692163e-06], ['"fat"', 5.19766728692163e-06], ['max_zero_size', 5.19766728692163e-06], ['(!this->val_type_->backend_type_size(gogo,', 5.19766728692163e-06], ['valsize)', 5.19766728692163e-06], ['valalign;', 5.19766728692163e-06], ['(Map_type::zero_value', 5.19766728692163e-06], ['Named_object::make_variable(name,', 5.19766728692163e-06], ['z;', 5.19766728692163e-06], ['uint8_type->get_backend(gogo);', 5.19766728692163e-06], ['barray_type,', 5.19766728692163e-06], ['"go:notinheap', 5.19766728692163e-06], ['backend_map_type;', 5.19766728692163e-06], ['bfields[0].name', 5.19766728692163e-06], ['bfields[0].btype', 5.19766728692163e-06], ['bfields[0].location', 5.19766728692163e-06], ['bfields[1].name', 5.19766728692163e-06], ['bfields[1].btype', 5.19766728692163e-06], ['bfields[1].location', 5.19766728692163e-06], ['gogo->backend()->pointer_type(bt);', 5.19766728692163e-06], ['"key",', 5.19766728692163e-06], ['"bucket",', 5.19766728692163e-06], ['"flags",', 5.19766728692163e-06], ['Map_type::make_map_type_descriptor_type();', 5.19766728692163e-06], ['(!this->key_type_->backend_type_size(gogo,', 5.19766728692163e-06], ['size");', 5.19766728692163e-06], ['(!Type::make_pointer_type(uint8_type)->backend_type_size(gogo,', 5.19766728692163e-06], ['bucket_type', 5.19766728692163e-06], ['this->bucket_type(gogo,', 5.19766728692163e-06], ['valsize);', 5.19766728692163e-06], ['vals->push_back(Expression::make_integer_int64(ptrsize,', 5.19766728692163e-06], ['Arrange', 5.19766728692163e-06], ['overflow_type', 5.19766728692163e-06], ['Named_type', 5.19766728692163e-06], ['(except', 5.19766728692163e-06], ['property', 5.19766728692163e-06], ['"topbits",', 5.19766728692163e-06], ['topbits_type,', 5.19766728692163e-06], ['"keys",', 5.19766728692163e-06], ['keys_type,', 5.19766728692163e-06], ['"values",', 5.19766728692163e-06], ['values_type,', 5.19766728692163e-06], ['overflow_type);', 5.19766728692163e-06], ['((off', 5.19766728692163e-06], ['padded_overflow_field_size', 5.19766728692163e-06], ['static_cast<size_t>(max_align', 5.19766728692163e-06], ['ovoff', 5.19766728692163e-06], ['pad_type', 5.19766728692163e-06], ['"pad",', 5.19766728692163e-06], ['pad_type,', 5.19766728692163e-06], ['void_ptr_type', 5.19766728692163e-06], ['Type::make_pointer_type(bucket_type);', 5.19766728692163e-06], ['"count",', 5.19766728692163e-06], ['"B",', 5.19766728692163e-06], ['"buckets",', 5.19766728692163e-06], ['ptr_bucket_type,', 5.19766728692163e-06], ['val_ptr_type', 5.19766728692163e-06], ['bucket_ptr_type,', 5.19766728692163e-06], ['void_ptr_type,', 5.19766728692163e-06], ['ret->append("map[");', 5.19766728692163e-06], ['[");', 5.19766728692163e-06], ['Type::make_map_type(key_type,', 5.19766728692163e-06], ['see.', 5.19766728692163e-06], ['"chan', 5.19766728692163e-06], ['(this->may_send_)', 5.19766728692163e-06], ['(this->may_receive_)', 5.19766728692163e-06], ['(this->may_send_', 5.19766728692163e-06], ['backend_channel_type;', 5.19766728692163e-06], ['Channel_type::make_chan_type_descriptor_type();', 5.19766728692163e-06], ['(!this->may_send_)', 5.19766728692163e-06], ['ret->append("<-");', 5.19766728692163e-06], ['ret->append("chan");', 5.19766728692163e-06], ['(!this->may_receive_)', 5.19766728692163e-06], ['scase_type;', 5.19766728692163e-06], ['inheritance.', 5.19766728692163e-06], ['issued_recursive_error', 5.19766728692163e-06], ['++q)', 5.19766728692163e-06], ['"inherited', 5.19766728692163e-06], ['imethods', 5.19766728692163e-06], ['(imethods', 5.19766728692163e-06], ['imethods->begin();', 5.19766728692163e-06], ['imethods->end();', 5.19766728692163e-06], ['(p->name()', 5.19766728692163e-06], ['redeclarations', 5.19766728692163e-06], ['simplicity', 5.19766728692163e-06], ['(((flags', 5.19766728692163e-06], ['COMPARE_EMBEDDED_INTERFACES)', 5.19766728692163e-06], ['tmethods', 5.19766728692163e-06], ['this->assume_identical_;', 5.19766728692163e-06], ['ai;', 5.19766728692163e-06], ['hold_ai;', 5.19766728692163e-06], ['this->assume_identical_', 5.19766728692163e-06], ['tmethods->end();', 5.19766728692163e-06], ['++p1,', 5.19766728692163e-06], ['methods->end())', 5.19766728692163e-06], ['p->t2', 5.19766728692163e-06], ['subreason;', 5.19766728692163e-06], ['&subreason))', 5.19766728692163e-06], ['subreason.length();', 5.19766728692163e-06], ['(subreason.empty())', 5.19766728692163e-06], ['go_close_quote(),', 5.19766728692163e-06], ['subreason.c_str());', 5.19766728692163e-06], ['F()', 5.19766728692163e-06], ['reason->assign(_("pointer', 5.19766728692163e-06], ['reason->assign(_("type', 5.19766728692163e-06], ['m_fn_type', 5.19766728692163e-06], ['n.length();', 5.19766728692163e-06], ['_("method', 5.19766728692163e-06], ['empty_interface_type;', 5.19766728692163e-06], ['"__type_descriptor";', 5.19766728692163e-06], ['pdt->get_backend(gogo);', 5.19766728692163e-06], ['"__object";', 5.19766728692163e-06], ['vt->get_backend(gogo);', 5.19766728692163e-06], ['(this->bmethods_', 5.19766728692163e-06], ['Bmethods_map_entry>', 5.19766728692163e-06], ['std::pair<Bmethods_map::iterator,', 5.19766728692163e-06], ['Interface_type::bmethods_map.insert(val);', 5.19766728692163e-06], ['last_name', 5.19766728692163e-06], ['Sanity', 5.19766728692163e-06], ['this->interface_btype_;', 5.19766728692163e-06], ['this->interface_btype_', 5.19766728692163e-06], ['Getting', 5.19766728692163e-06], ['Interface_type::make_interface_type_descriptor_type();', 5.19766728692163e-06], ['ivals', 5.19766728692163e-06], ['++pif;', 5.19766728692163e-06], ['mvals->push_back(Expression::make_unary(OPERATOR_AND,', 5.19766728692163e-06], ['ivals,', 5.19766728692163e-06], ['this->parse_methods_;', 5.19766728692163e-06], ['pm->type()->function_type();', 5.19766728692163e-06], ['methods->push_back(Typed_identifier("",', 5.19766728692163e-06], ['methods->push_back(Typed_identifier(name,', 5.19766728692163e-06], ['(methods->empty())', 5.19766728692163e-06], ['(this->stub_', 5.19766728692163e-06], ['Expression::make_bound_method(expr,', 5.19766728692163e-06], ['participate', 5.19766728692163e-06], ['Expression::make_interface_field_reference(expr,', 5.19766728692163e-06], ['(m->depth()', 5.19766728692163e-06], ['old_method->depth())', 5.19766728692163e-06], ['definitions,', 5.19766728692163e-06], ['Named_type::named_base()', 5.19766728692163e-06], ['nt->find_local_method(name);', 5.19766728692163e-06], ['p->first)', 5.19766728692163e-06], ['Find_type_use', 5.19766728692163e-06], ['find_type)', 5.19766728692163e-06], ['find_type_(find_type),', 5.19766728692163e-06], ['find_type_;', 5.19766728692163e-06], ['type->named_type())', 5.19766728692163e-06], ['essentially', 5.19766728692163e-06], ['Find_alias', 5.19766728692163e-06], ['this->find_type_)', 5.19766728692163e-06], ['find(this);', 5.19766728692163e-06], ['(find.found())', 5.19766728692163e-06], ['name(p->first);', 5.19766728692163e-06], ['redeclares', 5.19766728692163e-06], ['codes', 5.19766728692163e-06], ['this->create_placeholder(gogo);', 5.19766728692163e-06], ['intermediate', 5.19766728692163e-06], ['created.', 5.19766728692163e-06], ['filling', 5.19766728692163e-06], ['create_placeholder.', 5.19766728692163e-06], ['representations.', 5.19766728692163e-06], ['(base->is_slice_type())', 5.19766728692163e-06], ['gogo->backend()->named_type(this->name(),', 5.19766728692163e-06], ['go_assert(bt', 5.19766728692163e-06], ['(this->seen_in_get_backend_)', 5.19766728692163e-06], ['gogo->backend()->circular_pointer_type(bt,', 5.19766728692163e-06], ['bt1', 5.19766728692163e-06], ['(!gogo->backend()->set_placeholder_pointer_type(bt,', 5.19766728692163e-06], ['bt1))', 5.19766728692163e-06], ['giving', 5.19766728692163e-06], ['this->named_type_descriptor(gogo,', 5.19766728692163e-06], ['USE_ALIAS', 5.19766728692163e-06], ['use_alias,', 5.19766728692163e-06], ['(this->is_alias_', 5.19766728692163e-06], ['!use_alias)', 5.19766728692163e-06], ['ret->append(package', 5.19766728692163e-06], ['package->package_name()', 5.19766728692163e-06], ['gogo->package_name());', 5.19766728692163e-06], ['this->in_function_->func_value()->type()->receiver();', 5.19766728692163e-06], ['ret->append(Gogo::unpack_hidden_name(this->in_function_->name()));', 5.19766728692163e-06], ["ret->push_back('$');", 5.19766728692163e-06], ['this->in_function_index_);', 5.19766728692163e-06], ['ptype)', 5.19766728692163e-06], ['exp->write_type(this->type_);', 5.19766728692163e-06], ['*all_methods', 5.19766728692163e-06], ['Named_type*>', 5.19766728692163e-06], ['&seen,', 5.19766728692163e-06], ['FIELD_INDEXES', 5.19766728692163e-06], ['go.', 5.19766728692163e-06], ['DEPTH', 5.19766728692163e-06], ['(depth', 5.19766728692163e-06], ['NT', 5.19766728692163e-06], ['add_methods_to_type.', 5.19766728692163e-06], ['(is_embedded_pointer', 5.19766728692163e-06], ['(needs_stub_method', 5.19766728692163e-06], ['m))', 5.19766728692163e-06], ['(fnt', 5.19766728692163e-06], ['conflict', 5.19766728692163e-06], ['elsewhere', 5.19766728692163e-06], ['depth);', 5.19766728692163e-06], ['counter;', 5.19766728692163e-06], ['receiver_type', 5.19766728692163e-06], ['stub_params', 5.19766728692163e-06], ['snprintf(pbuf,', 5.19766728692163e-06], ['pbuf,', 5.19766728692163e-06], ['stub_results', 5.19766728692163e-06], ['++pr)', 5.19766728692163e-06], ['stub_params,', 5.19766728692163e-06], ['fntype->location());', 5.19766728692163e-06], ['stub_type,', 5.19766728692163e-06], ['stub->is_function())', 5.19766728692163e-06], ['Type::apply_field_indexes(expr,', 5.19766728692163e-06], ['go_assert(expr->type()->struct_type()', 5.19766728692163e-06], ['Interface_type', 5.19766728692163e-06], ['pimt', 5.19766728692163e-06], ['(type->deref()->is_error_type())', 5.19766728692163e-06], ['type->deref()->named_type();', 5.19766728692163e-06], ['type->deref()->struct_type();', 5.19766728692163e-06], ['receiver_can_be_pointer,', 5.19766728692163e-06], ['(dereferenced)', 5.19766728692163e-06], ['st);', 5.19766728692163e-06], ['it->find_method(name)', 5.19766728692163e-06], ['receiver");', 5.19766728692163e-06], ['hidden.', 5.19766728692163e-06], ["'z'))", 5.19766728692163e-06], ['is_unexported', 5.19766728692163e-06], ['non-recursive', 5.19766728692163e-06], ['ambiguous,', 5.19766728692163e-06], ['*AMBIG1', 5.19766728692163e-06], ['found_pointer_method,', 5.19766728692163e-06], ['(receiver_can_be_pointer', 5.19766728692163e-06], ['inherit', 5.19766728692163e-06], ['found_is_method', 5.19766728692163e-06], ['found_parent', 5.19766728692163e-06], ['sub_is_method;', 5.19766728692163e-06], ['found_ambig1', 5.19766728692163e-06], ['(Gogo::message_name(pf->field_name())', 5.19766728692163e-06], ['found_ambig2', 5.19766728692163e-06], ['sublevel;', 5.19766728692163e-06], ['FOUND_AMBIG1', 5.19766728692163e-06], ['FOUND_AMBIG2', 5.19766728692163e-06], ['(subtype', 5.19766728692163e-06], ['Forward_declaration_type::named_object()', 5.19766728692163e-06], ['anywhere.', 5.19766728692163e-06], ['(!this->warned_)', 5.19766728692163e-06], ['Forward_declaration_type::real_type()', 5.19766728692163e-06], ['(!nt->is_valid())', 5.19766728692163e-06], ['no->type_declaration_value();', 5.19766728692163e-06], ['#GCC', 5.19766728692163e-06], ['autoconf-generated', 5.19766728692163e-06], ['updating', 5.19766728692163e-06], ['switches', 5.19766728692163e-06], ['variables:', 5.19766728692163e-06], ['"yes"', 5.19766728692163e-06], ['presence', 5.19766728692163e-06], ['gnu', 5.19766728692163e-06], ['preferred', 5.19766728692163e-06], ['prefixing', 5.19766728692163e-06], ['tm_p_file', 5.19766728692163e-06], ['hook', 5.19766728692163e-06], ['extra_headers', 5.19766728692163e-06], ['prefixed', 5.19766728692163e-06], ['include_next.', 5.19766728692163e-06], ['machine.', 5.19766728692163e-06], ['xm_file', 5.19766728692163e-06], ['collect2', 5.19766728692163e-06], ['dir', 5.19766728692163e-06], ['`dirname', 5.19766728692163e-06], ['configure_default_options', 5.19766728692163e-06], ['formatting', 5.19766728692163e-06], ['outgoing', 5.19766728692163e-06], ['extra_headers=', 5.19766728692163e-06], ['target_has_targetm_common=yes', 5.19766728692163e-06], ['pattern.', 5.19766728692163e-06], ['arm_neon.h', 5.19766728692163e-06], ['alpha*-*-*)', 5.19766728692163e-06], ['am33_2.0-*-linux*)', 5.19766728692163e-06], ['arc*-*-*)', 5.19766728692163e-06], ['avr-*-*)', 5.19766728692163e-06], ['bfin*-*)', 5.19766728692163e-06], ['extra_headers=math-68881.h', 5.19766728692163e-06], ['m68k/m68k-tables.opt"', 5.19766728692163e-06], ['cpu_type=i386', 5.19766728692163e-06], ['c_target_objs="i386-c.o"', 5.19766728692163e-06], ['cxx_target_objs="i386-c.o"', 5.19766728692163e-06], ['d_target_objs="i386-d.o"', 5.19766728692163e-06], ['extra_objs="x86-tune-sched.o', 5.19766728692163e-06], ['x86-tune-sched-bd.o', 5.19766728692163e-06], ['x86-tune-sched-atom.o', 5.19766728692163e-06], ['x86-tune-sched-core.o"', 5.19766728692163e-06], ['extra_headers="cpuid.h', 5.19766728692163e-06], ['mm3dnow.h', 5.19766728692163e-06], ['emmintrin.h', 5.19766728692163e-06], ['ammintrin.h', 5.19766728692163e-06], ['smmintrin.h', 5.19766728692163e-06], ['nmmintrin.h', 5.19766728692163e-06], ['bmmintrin.h', 5.19766728692163e-06], ['fma4intrin.h', 5.19766728692163e-06], ['wmmintrin.h', 5.19766728692163e-06], ['immintrin.h', 5.19766728692163e-06], ['x86intrin.h', 5.19766728692163e-06], ['avxintrin.h', 5.19766728692163e-06], ['xopintrin.h', 5.19766728692163e-06], ['ia32intrin.h', 5.19766728692163e-06], ['cross-stdarg.h', 5.19766728692163e-06], ['lwpintrin.h', 5.19766728692163e-06], ['popcntintrin.h', 5.19766728692163e-06], ['lzcntintrin.h', 5.19766728692163e-06], ['bmiintrin.h', 5.19766728692163e-06], ['tbmintrin.h', 5.19766728692163e-06], ['avx2intrin.h', 5.19766728692163e-06], ['avx512fintrin.h', 5.19766728692163e-06], ['fmaintrin.h', 5.19766728692163e-06], ['f16cintrin.h', 5.19766728692163e-06], ['rtmintrin.h', 5.19766728692163e-06], ['xtestintrin.h', 5.19766728692163e-06], ['rdseedintrin.h', 5.19766728692163e-06], ['prfchwintrin.h', 5.19766728692163e-06], ['adxintrin.h', 5.19766728692163e-06], ['fxsrintrin.h', 5.19766728692163e-06], ['xsaveintrin.h', 5.19766728692163e-06], ['xsaveoptintrin.h', 5.19766728692163e-06], ['avx512cdintrin.h', 5.19766728692163e-06], ['avx512erintrin.h', 5.19766728692163e-06], ['avx512pfintrin.h', 5.19766728692163e-06], ['shaintrin.h', 5.19766728692163e-06], ['clflushoptintrin.h', 5.19766728692163e-06], ['xsavecintrin.h', 5.19766728692163e-06], ['xsavesintrin.h', 5.19766728692163e-06], ['avx512dqintrin.h', 5.19766728692163e-06], ['avx512bwintrin.h', 5.19766728692163e-06], ['avx512vlintrin.h', 5.19766728692163e-06], ['avx512vlbwintrin.h', 5.19766728692163e-06], ['avx512vldqintrin.h', 5.19766728692163e-06], ['avx512ifmaintrin.h', 5.19766728692163e-06], ['avx512ifmavlintrin.h', 5.19766728692163e-06], ['avx512vbmiintrin.h', 5.19766728692163e-06], ['avx512vbmivlintrin.h', 5.19766728692163e-06], ['avx5124fmapsintrin.h', 5.19766728692163e-06], ['avx5124vnniwintrin.h', 5.19766728692163e-06], ['avx512vpopcntdqintrin.h', 5.19766728692163e-06], ['clwbintrin.h', 5.19766728692163e-06], ['mwaitxintrin.h', 5.19766728692163e-06], ['clzerointrin.h', 5.19766728692163e-06], ['pkuintrin.h', 5.19766728692163e-06], ['sgxintrin.h', 5.19766728692163e-06], ['cetintrin.h', 5.19766728692163e-06], ['gfniintrin.h', 5.19766728692163e-06], ['cet.h', 5.19766728692163e-06], ['avx512vbmi2intrin.h', 5.19766728692163e-06], ['avx512vbmi2vlintrin.h', 5.19766728692163e-06], ['avx512vnniintrin.h', 5.19766728692163e-06], ['avx512vnnivlintrin.h', 5.19766728692163e-06], ['vaesintrin.h', 5.19766728692163e-06], ['vpclmulqdqintrin.h', 5.19766728692163e-06], ['avx512vpopcntdqvlintrin.h', 5.19766728692163e-06], ['avx512bitalgintrin.h', 5.19766728692163e-06], ['pconfigintrin.h', 5.19766728692163e-06], ['wbnoinvdintrin.h', 5.19766728692163e-06], ['movdirintrin.h', 5.19766728692163e-06], ['waitpkgintrin.h', 5.19766728692163e-06], ['cldemoteintrin.h"', 5.19766728692163e-06], ['nds32*-*-linux*)', 5.19766728692163e-06], ['nds32*-*-elf*)', 5.19766728692163e-06], ['nios2-*-*)', 5.19766728692163e-06], ['or1k*-*-*)', 5.19766728692163e-06], ['extra_objs="rs6000-string.o', 5.19766728692163e-06], ['rs6000-p8swap.o"', 5.19766728692163e-06], ['htmintrin.h', 5.19766728692163e-06], ['vec_types.h', 5.19766728692163e-06], ['cpu_is_64bit=yes', 5.19766728692163e-06], ['rs6000/rs6000-tables.opt"', 5.19766728692163e-06], ['s390*-*-*)', 5.19766728692163e-06], ['tic6x-*-*)', 5.19766728692163e-06], ['arm/aarch-common-protos.h"', 5.19766728692163e-06], ['tm_file="aarch64/biarchilp32.h', 5.19766728692163e-06], ['tm_file="aarch64/biarchlp64.h', 5.19766728692163e-06], ['ilp32)', 5.19766728692163e-06], ['lp64)', 5.19766728692163e-06], ['"This', 5.19766728692163e-06], ['"x$enable_cld"', 5.19766728692163e-06], ['USE_IX86_CLD=1"', 5.19766728692163e-06], ['"x$enable_frame_pointer"', 5.19766728692163e-06], ['USE_IX86_FRAME_POINTER=1"', 5.19766728692163e-06], ['tm_file="i386/biarchx32.h', 5.19766728692163e-06], ['tm_file="i386/biarch64.h', 5.19766728692163e-06], ['x32', 5.19766728692163e-06], ['--with-arch=.', 5.19766728692163e-06], ['i386', 5.19766728692163e-06], ['atom', 5.19766728692163e-06], ['darwin9.h', 5.19766728692163e-06], ['darwin-c.o"', 5.19766728692163e-06], ['target_has_targetcm=yes', 5.19766728692163e-06], ['rpath.opt', 5.19766728692163e-06], ['Later', 5.19766728692163e-06], ['sections', 5.19766728692163e-06], ['freebsd.h', 5.19766728692163e-06], ['setting.', 5.19766728692163e-06], ['FreeBSD', 5.19766728692163e-06], ['fbsd_tm_file="${fbsd_tm_file}', 5.19766728692163e-06], [':;;', 5.19766728692163e-06], ['*-*-linux*', 5.19766728692163e-06], ['*-*-kfreebsd*-gnu', 5.19766728692163e-06], ['*-*-kopensolaris*-gnu)', 5.19766728692163e-06], ['gnu-user.opt"', 5.19766728692163e-06], ['Linux', 5.19766728692163e-06], ['selection', 5.19766728692163e-06], ['uclibc', 5.19766728692163e-06], ['*-*-*android*)', 5.19766728692163e-06], ['*-*-*uclibc*)', 5.19766728692163e-06], ['DEFAULT_LIBC=LIBC_UCLIBC"', 5.19766728692163e-06], ['DEFAULT_LIBC=LIBC_GLIBC"', 5.19766728692163e-06], ['glibc-c.o"', 5.19766728692163e-06], ['*-*-rtems*)', 5.19766728692163e-06], ['Solaris', 5.19766728692163e-06], ['${sol2_tm_file_tail}"', 5.19766728692163e-06], ['wrappers', 5.19766728692163e-06], ['extra_objs="$extra_objs', 5.19766728692163e-06], ['fuchsia.h"', 5.19766728692163e-06], ['aarch64_be-*)', 5.19766728692163e-06], ['aarch64_multilibs="${with_multilib_list}"', 5.19766728692163e-06], ['"$aarch64_multilibs"', 5.19766728692163e-06], ['aarch64_multilibs="lp64,ilp32"', 5.19766728692163e-06], ['aarch64_multilibs=`echo', 5.19766728692163e-06], ['$aarch64_multilibs', 5.19766728692163e-06], ['aarch64_multilib', 5.19766728692163e-06], ['${aarch64_multilibs};', 5.19766728692163e-06], ['${aarch64_multilib}', 5.19766728692163e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${aarch64_multilib}"', 5.19766728692163e-06], ['"--with-multilib-list=${aarch64_multilib}', 5.19766728692163e-06], ['aarch64/t-aarch64', 5.19766728692163e-06], ['TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1"', 5.19766728692163e-06], ['netbsd-elf.opt', 5.19766728692163e-06], ['vms/vms.h', 5.19766728692163e-06], ['tm_file="arc/arc-arch.h', 5.19766728692163e-06], ['arc/t-arc"', 5.19766728692163e-06], ['extra_gcc_objs="driver-arc.o"', 5.19766728692163e-06], ['TARGET_CPU_BUILD=PROCESSOR_$with_cpu"', 5.19766728692163e-06], ['arc*be-*-*', 5.19766728692163e-06], ['arc*eb-*-*)', 5.19766728692163e-06], ['big*)', 5.19766728692163e-06], ['tm_file="arc/big.h', 5.19766728692163e-06], ['BPABI', 5.19766728692163e-06], ['$fbsd_major', 5.19766728692163e-06], ['-ge', 5.19766728692163e-06], ['TARGET_FREEBSD_ARM_HARD_FLOAT=1"', 5.19766728692163e-06], ['target_cpu_cname="generic-armv7-a"', 5.19766728692163e-06], ['with_tls=${with_tls:-gnu}', 5.19766728692163e-06], ['arm/linux-gas.h', 5.19766728692163e-06], ['arm/t-arm-elf', 5.19766728692163e-06], ['target_cpu_cname="arm10tdmi"', 5.19766728692163e-06], ['arm/bpabi.h"', 5.19766728692163e-06], ['arm*-*-fuchsia*)', 5.19766728692163e-06], ['bfin/elf.h"', 5.19766728692163e-06], ['target_cpu_default=32', 5.19766728692163e-06], ['cris/elf.opt"', 5.19766728692163e-06], ['csky-*-*)', 5.19766728692163e-06], ['$target"', 5.19766728692163e-06], ['epiphany-*-rtems*)', 5.19766728692163e-06], ['mkoffload\\$(exeext)"', 5.19766728692163e-06], ['tm_file="h8300/h8300.h', 5.19766728692163e-06], ['target_cpu_default="MASK_PA_11|MASK_PA_20"', 5.19766728692163e-06], ['tm_file="pa/pa64-start.h', 5.19766728692163e-06], ['pa/pa-linux.h', 5.19766728692163e-06], ['pa/pa64-regs.h', 5.19766728692163e-06], ['pa/t-pa', 5.19766728692163e-06], ['pa/t-linux"', 5.19766728692163e-06], ['hppa1.1-*-*', 5.19766728692163e-06], ['hppa2*-*-*)', 5.19766728692163e-06], ['pa/som.h', 5.19766728692163e-06], ['pa/t-dce-thr"', 5.19766728692163e-06], ['"x$with_dwarf2"', 5.19766728692163e-06], ['"Warning:', 5.19766728692163e-06], ['dwarf2', 5.19766728692163e-06], ['--with-dwarf2', 5.19766728692163e-06], ['ignored"', 5.19766728692163e-06], ['dwarf2=no', 5.19766728692163e-06], ['target_cpu_default="${target_cpu_default}|MASK_GNU_LD"', 5.19766728692163e-06], ['pa/pa-hpux1010.h', 5.19766728692163e-06], ['pa/pa-hpux11.h"', 5.19766728692163e-06], ['*-*-hpux11.[12]*)', 5.19766728692163e-06], ['pa/pa-hpux1111.opt"', 5.19766728692163e-06], ['*-*-hpux11.[3-9]*)', 5.19766728692163e-06], ['pa/pa-hpux1131.opt"', 5.19766728692163e-06], ['pa/pa-hpux1010.opt', 5.19766728692163e-06], ['x${enable_threads}', 5.19766728692163e-06], ['*-*-hpux11.[01]*)', 5.19766728692163e-06], ['*-*-hpux11.[23]*)', 5.19766728692163e-06], ['with_cpu=${with_cpu:-core2}', 5.19766728692163e-06], ['x86_64-*-darwin*)', 5.19766728692163e-06], ['${cpu_type}/t-darwin64', 5.19766728692163e-06], ['${cpu_type}/darwin64.h"', 5.19766728692163e-06], ['i386/x86-64.h"', 5.19766728692163e-06], ['i386/rtemself.h', 5.19766728692163e-06], ['dragonfly.h', 5.19766728692163e-06], ['dragonfly-stdint.h', 5.19766728692163e-06], ['i386/dragonfly.h"', 5.19766728692163e-06], ['i386/t-crtstuff"', 5.19766728692163e-06], ['x86_64-*-dragonfly*)', 5.19766728692163e-06], ['x86_64-*-freebsd*)', 5.19766728692163e-06], ['i386/openbsdelf.h"', 5.19766728692163e-06], ['i[34567]86-*-kfreebsd*-gnu', 5.19766728692163e-06], ['i[34567]86-*-kopensolaris*-gnu)', 5.19766728692163e-06], ['i386/linux64.h"', 5.19766728692163e-06], ['i386/t-linux64"', 5.19766728692163e-06], ['x86_multilibs="${with_multilib_list}"', 5.19766728692163e-06], ['"$x86_multilibs"', 5.19766728692163e-06], ['x86_multilibs="m64,m32"', 5.19766728692163e-06], ['x86_multilibs=`echo', 5.19766728692163e-06], ['$x86_multilibs', 5.19766728692163e-06], ['x86_multilib', 5.19766728692163e-06], ['${x86_multilibs};', 5.19766728692163e-06], ['${x86_multilib}', 5.19766728692163e-06], ['m32', 5.19766728692163e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${x86_multilib}"', 5.19766728692163e-06], ['"--with-multilib-list=${x86_with_multilib}', 5.19766728692163e-06], ['kfreebsd-gnu.h', 5.19766728692163e-06], ['i[34567]86-*-gnu*)', 5.19766728692163e-06], ['lynx.h"', 5.19766728692163e-06], ['lynx.opt"', 5.19766728692163e-06], ['thread_file=lynx', 5.19766728692163e-06], ['i[34567]86-*-solaris2*', 5.19766728692163e-06], ['x86_64-*-solaris2.1[0-9]*)', 5.19766728692163e-06], ['$x86_64_archs"', 5.19766728692163e-06], ['x86_64-*)', 5.19766728692163e-06], ['*-vxworksae*)', 5.19766728692163e-06], ['i386/cygming.h', 5.19766728692163e-06], ['i386/cygwin.h', 5.19766728692163e-06], ['i386/cygwin-stdint.h"', 5.19766728692163e-06], ['xm_file=i386/xm-cygwin.h', 5.19766728692163e-06], ['i386/cygwin.opt"', 5.19766728692163e-06], ['x86_64-*-cygwin*)', 5.19766728692163e-06], ['i[34567]86-*-mingw*', 5.19766728692163e-06], ['x86_64-*-mingw*)', 5.19766728692163e-06], ['winnt-c.o"', 5.19766728692163e-06], ['target_cpu_default="${target_cpu_default}|MASK_GNU_AS"', 5.19766728692163e-06], ['target_cpu_default="MASK_GNU_AS|MASK_GNU_LD"', 5.19766728692163e-06], ['ia64/t-ia64"', 5.19766728692163e-06], ['ia64*-*-linux*)', 5.19766728692163e-06], ['m32r/little.h', 5.19766728692163e-06], ['m32r/linux.h"', 5.19766728692163e-06], ['m32r/t-linux', 5.19766728692163e-06], ['m68k/m68k-none.h', 5.19766728692163e-06], ['m68k/m68kelf.h', 5.19766728692163e-06], ['m68k/m68kemb.h', 5.19766728692163e-06], ['tmake_file="m68k/t-floatlib', 5.19766728692163e-06], ['m68k/t-m68kbare', 5.19766728692163e-06], ['multilibs', 5.19766728692163e-06], ['CHAR_FAST8=1', 5.19766728692163e-06], ['SHORT_FAST16=1"', 5.19766728692163e-06], ['Motorola', 5.19766728692163e-06], ['m68k/linux.h', 5.19766728692163e-06], ['m68k/t-floatlib', 5.19766728692163e-06], ['xno)', 5.19766728692163e-06], ['xyes)', 5.19766728692163e-06], ['enable_multilib";', 5.19766728692163e-06], ['riscv/t-riscv"', 5.19766728692163e-06], ['mips/linux-common.h', 5.19766728692163e-06], ['mips/mti-linux.h"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=37', 5.19766728692163e-06], ['with_arch_32="mips32r6"', 5.19766728692163e-06], ['with_arch_64="mips64r6"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=33', 5.19766728692163e-06], ['with_arch_32="mips32r2"', 5.19766728692163e-06], ['with_arch_64="mips64r2"', 5.19766728692163e-06], ['mips*-*-linux*)', 5.19766728692163e-06], ['mips/sde.h', 5.19766728692163e-06], ['mips/mti-elf.h"', 5.19766728692163e-06], ['mipsisa64r6*)', 5.19766728692163e-06], ['mipsisa64r2*)', 5.19766728692163e-06], ['mipsisa64*)', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=37"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=33"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=32"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=69"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=65"', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=64"', 5.19766728692163e-06], ['mips/elfoabi.h"', 5.19766728692163e-06], ['*-*-elf*)', 5.19766728692163e-06], ['MIPS_ISA_DEFAULT=64', 5.19766728692163e-06], ['x$stabs', 5.19766728692163e-06], ['dbx.h"', 5.19766728692163e-06], ['nds32*-*-*)', 5.19766728692163e-06], ['nds32/nds32_intrinsic.h"', 5.19766728692163e-06], ['"--with-multilib-list=${with_multilib_list}', 5.19766728692163e-06], ['extra_headers=altivec.h', 5.19766728692163e-06], ['rs6000/t-ppcos', 5.19766728692163e-06], ['powerpc64*)', 5.19766728692163e-06], ['rs6000/default64.h', 5.19766728692163e-06], ['rs6000/eabialtivec.h"', 5.19766728692163e-06], ['rs6000/t-ppcendian', 5.19766728692163e-06], ['rs6000/eabisim.h"', 5.19766728692163e-06], ['rs6000/eabi.h"', 5.19766728692163e-06], ['tm_file="rs6000/biarch64.h', 5.19766728692163e-06], ['rs6000/sysv4.opt', 5.19766728692163e-06], ['powerpc*le-*-*)', 5.19766728692163e-06], ['rs6000/sysv4le.h"', 5.19766728692163e-06], ['maybe_biarch=yes', 5.19766728692163e-06], ['rs6000/linux64.h', 5.19766728692163e-06], ['rs6000/t-linux"', 5.19766728692163e-06], ['rs6000/vxworks.h', 5.19766728692163e-06], ['rs6000/sysv4le.h', 5.19766728692163e-06], ['s390/linux.h"', 5.19766728692163e-06], ['tm_file="s390/s390x.h', 5.19766728692163e-06], ['s390/s390.h', 5.19766728692163e-06], ['md_file=s390/s390.md', 5.19766728692163e-06], ['extra_modes=s390/s390-modes.def', 5.19766728692163e-06], ['out_file=s390/s390.c', 5.19766728692163e-06], ['with_endian=big,little', 5.19766728692163e-06], ['sh*-*-linux*)', 5.19766728692163e-06], ['sh*-*-netbsd*)', 5.19766728692163e-06], ['x$with_libgloss', 5.19766728692163e-06], ['sh/newlib.h"', 5.19766728692163e-06], ['sh/embed-elf.h"', 5.19766728692163e-06], ['`echo', 5.19766728692163e-06], ['sh_cpu_target=sh4a-nofpu', 5.19766728692163e-06], ['sh_cpu_target=sh4-nofpu', 5.19766728692163e-06], ['sh-superh-*)', 5.19766728692163e-06], ['sh3*)', 5.19766728692163e-06], ['sh_cpu_target=sh3', 5.19766728692163e-06], ['sh_cpu_target=sh2a-nofpu', 5.19766728692163e-06], ['sh2a*)', 5.19766728692163e-06], ['sh2*)', 5.19766728692163e-06], ['sh_cpu_target=sh2', 5.19766728692163e-06], ['--without-fp', 5.19766728692163e-06], ['x$with_fp', 5.19766728692163e-06], ['sh4al', 5.19766728692163e-06], ['sh1)', 5.19766728692163e-06], ['$sh_cpu_default', 5.19766728692163e-06], ['SUPPORT_`echo', 5.19766728692163e-06], ["'s/^m/sh/'", 5.19766728692163e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_`=1"', 5.19766728692163e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_', 5.19766728692163e-06], ['m1', 5.19766728692163e-06], ['m4-nofpu', 5.19766728692163e-06], ['m4a', 5.19766728692163e-06], ['m2a', 5.19766728692163e-06], ['m2a-nofpu)', 5.19766728692163e-06], ['verbatim.', 5.19766728692163e-06], ['$sh_multilib', 5.19766728692163e-06], ['sh/elf.h', 5.19766728692163e-06], ['sh/embed-elf.h', 5.19766728692163e-06], ['sparc/t-leon"', 5.19766728692163e-06], ['sparc/t-leon3"', 5.19766728692163e-06], ['sparc/rtemself.h', 5.19766728692163e-06], ['sparc/t-linux64"', 5.19766728692163e-06], ['sparc/netbsd-elf.h"', 5.19766728692163e-06], ['with_cpu=v9', 5.19766728692163e-06], ['sparc/sp64-elf.h"', 5.19766728692163e-06], ['with_cpu=ultrasparc', 5.19766728692163e-06], ['spu-c.o"', 5.19766728692163e-06], ['c6x/elf-common.h', 5.19766728692163e-06], ['mul-tables.o"', 5.19766728692163e-06], ['tilegx-c.o"', 5.19766728692163e-06], ['extra_headers="feedback.h"', 5.19766728692163e-06], ['tilepro-c.o"', 5.19766728692163e-06], ['target_cpu_default="TARGET_CPU_generic"', 5.19766728692163e-06], ['v850/v850.h"', 5.19766728692163e-06], ['c_target_objs="v850-c.o"', 5.19766728692163e-06], ['cxx_target_objs="v850-c.o"', 5.19766728692163e-06], ['vax/elf.h', 5.19766728692163e-06], ['vax/elf.opt"', 5.19766728692163e-06], ['stormy16/stormy16.h"', 5.19766728692163e-06], ['xtensa/t-xtensa"', 5.19766728692163e-06], ['c_target_objs="m32c-pragma.o"', 5.19766728692163e-06], ['cxx_target_objs="m32c-pragma.o"', 5.19766728692163e-06], ['i386/t-i386"', 5.19766728692163e-06], ['*-*-linux*)', 5.19766728692163e-06], ['default-c.o"', 5.19766728692163e-06], ['unrelated', 5.19766728692163e-06], ['options,', 5.19766728692163e-06], ['too).', 5.19766728692163e-06], ['${with_cpu}', 5.19766728692163e-06], ['value"', 5.19766728692163e-06], ['arch=i386', 5.19766728692163e-06], ['znver1-*)', 5.19766728692163e-06], ['arch=znver1', 5.19766728692163e-06], ['cpu=znver1', 5.19766728692163e-06], ['znver2-*)', 5.19766728692163e-06], ['arch=znver2', 5.19766728692163e-06], ['cpu=znver2', 5.19766728692163e-06], ['bdver4-*)', 5.19766728692163e-06], ['arch=bdver4', 5.19766728692163e-06], ['cpu=bdver4', 5.19766728692163e-06], ['bdver3-*)', 5.19766728692163e-06], ['arch=bdver3', 5.19766728692163e-06], ['cpu=bdver3', 5.19766728692163e-06], ['bdver2-*)', 5.19766728692163e-06], ['arch=bdver2', 5.19766728692163e-06], ['cpu=bdver2', 5.19766728692163e-06], ['bdver1-*)', 5.19766728692163e-06], ['arch=bdver1', 5.19766728692163e-06], ['cpu=bdver1', 5.19766728692163e-06], ['btver1-*)', 5.19766728692163e-06], ['arch=btver1', 5.19766728692163e-06], ['cpu=btver1', 5.19766728692163e-06], ['btver2-*)', 5.19766728692163e-06], ['arch=btver2', 5.19766728692163e-06], ['cpu=btver2', 5.19766728692163e-06], ['amdfam10-*|barcelona-*)', 5.19766728692163e-06], ['arch=amdfam10', 5.19766728692163e-06], ['cpu=amdfam10', 5.19766728692163e-06], ['k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)', 5.19766728692163e-06], ['arch=k8-sse3', 5.19766728692163e-06], ['cpu=k8-sse3', 5.19766728692163e-06], ['arch=k8', 5.19766728692163e-06], ['cpu=k8', 5.19766728692163e-06], ['nocona-*)', 5.19766728692163e-06], ['arch=nocona', 5.19766728692163e-06], ['cpu=nocona', 5.19766728692163e-06], ['atom-*)', 5.19766728692163e-06], ['arch=atom', 5.19766728692163e-06], ['cpu=atom', 5.19766728692163e-06], ['slm-*)', 5.19766728692163e-06], ['arch=slm', 5.19766728692163e-06], ['cpu=slm', 5.19766728692163e-06], ['core2-*)', 5.19766728692163e-06], ['arch=core2', 5.19766728692163e-06], ['cpu=core2', 5.19766728692163e-06], ['corei7-*)', 5.19766728692163e-06], ['arch=corei7', 5.19766728692163e-06], ['cpu=corei7', 5.19766728692163e-06], ['arch=pentiumpro', 5.19766728692163e-06], ['${target}.', 5.19766728692163e-06], ['"cf")', 5.19766728692163e-06], ['x$with_cpu_32', 5.19766728692163e-06], ['x$with_arch', 5.19766728692163e-06], ['i[34567]86-*-darwin*|x86_64-*-darwin*)', 5.19766728692163e-06], ['TARGET_SUBTARGET32_ISA_DEFAULT', 5.19766728692163e-06], ['TARGET_SUBTARGET64_ISA_DEFAULT', 5.19766728692163e-06], ['config/i386/darwin.h.', 5.19766728692163e-06], ['4.', 5.19766728692163e-06], ['x$with_fpmath', 5.19766728692163e-06], ['with_arch=$arch', 5.19766728692163e-06], ['x$with_arch_32', 5.19766728692163e-06], ['x$with_arch_64', 5.19766728692163e-06], ['with_arch_32=$with_arch', 5.19766728692163e-06], ['with_arch_64=x86-64', 5.19766728692163e-06], ['with_arch=', 5.19766728692163e-06], ['"Invalid', 5.19766728692163e-06], ['Override', 5.19766728692163e-06], ['arch;', 5.19766728692163e-06], ["'s/\\+.*//'`", 5.19766728692163e-06], ['aarch64-arches.def', 5.19766728692163e-06], ['base_id=`grep', 5.19766728692163e-06], ['$ext', 5.19766728692163e-06], ["'s/,.*$//'", 5.19766728692163e-06], ["'s/).*$//'`", 5.19766728692163e-06], ['ext_mask="("$ext_mask")', 5.19766728692163e-06], ['"$ext_canon")"', 5.19766728692163e-06], ['${srcdir}/config/arm/parsecpu.awk', 5.19766728692163e-06], ['${srcdir}/config/arm/arm-cpus.in`', 5.19766728692163e-06], ['"error"', 5.19766728692163e-06], ['"$with_abi"', 5.19766728692163e-06], ['TLS', 5.19766728692163e-06], ['"Switch', 5.19766728692163e-06], ['\\"--with-cpu\\""', 5.19766728692163e-06], ['supported_defaults=cpu', 5.19766728692163e-06], ['"$with_cpu"', 5.19766728692163e-06], ['cpu"', 5.19766728692163e-06], ['m68k_cpu_ident=m68020', 5.19766728692163e-06], ['tune_64"', 5.19766728692163e-06], ['"x$which"', 5.19766728692163e-06], ['TARGET_RISCV_ATTRIBUTE=1"', 5.19766728692163e-06], ['TARGET_RISCV_ATTRIBUTE=0"', 5.19766728692163e-06], ['rv64g*)', 5.19766728692163e-06], ['"${with_abi}"', 5.19766728692163e-06], ['ilp32d)', 5.19766728692163e-06], ['--with-abi', 5.19766728692163e-06], ['ilp32d', 5.19766728692163e-06], ['"--with-abi=${with_abi}', 5.19766728692163e-06], ['compatible.', 5.19766728692163e-06], ['nan', 5.19766728692163e-06], ['fp_32', 5.19766728692163e-06], ['odd_spreg_32', 5.19766728692163e-06], ['mips-plt', 5.19766728692163e-06], ['madd4"', 5.19766728692163e-06], ['xx', 5.19766728692163e-06], ['eabi)', 5.19766728692163e-06], ['v3', 5.19766728692163e-06], ['TARGET_ARCH_DEFAULT=0"', 5.19766728692163e-06], ['v2', 5.19766728692163e-06], ['v2j', 5.19766728692163e-06], ['v3s)', 5.19766728692163e-06], ['v3f', 5.19766728692163e-06], ['n6', 5.19766728692163e-06], ['n7', 5.19766728692163e-06], ['e8', 5.19766728692163e-06], ['s8', 5.19766728692163e-06], ['n9', 5.19766728692163e-06], ['n10', 5.19766728692163e-06], ['d10', 5.19766728692163e-06], ['n12', 5.19766728692163e-06], ['n13', 5.19766728692163e-06], ['TARGET_DEFAULT_CTOR_DTOR=1"', 5.19766728692163e-06], ['mculib', 5.19766728692163e-06], ['supported_defaults="arch"', 5.19766728692163e-06], ['G3', 5.19766728692163e-06], ['-a', 5.19766728692163e-06], ['LINK_OS_EXTRA_SPEC32"', 5.19766728692163e-06], ['"\\"%(link_os_new_dtags)"', 5.19766728692163e-06], ['"-rpath', 5.19766728692163e-06], ['$prefix/lib', 5.19766728692163e-06], ['-rpath', 5.19766728692163e-06], ['"-L', 5.19766728692163e-06], ['LINK_OS_EXTRA_SPEC64"', 5.19766728692163e-06], ['$prefix/lib64', 5.19766728692163e-06], ['LINK_OS_NEW_DTAGS_SPEC"', 5.19766728692163e-06], ['x$with_long_double_format', 5.19766728692163e-06], ['sh[123456ble]*-*-*', 5.19766728692163e-06], ['target_cpu_default2="\\\\\\"$with_cpu\\\\\\""', 5.19766728692163e-06], ['${cpu_type}-c.o"', 5.19766728692163e-06], ['sh-c.o"', 5.19766728692163e-06], ['schedule', 5.19766728692163e-06], ['$option', 5.19766728692163e-06], ['2>&1', 5.19766728692163e-06], ['"x$t"', 5.19766728692163e-06], ['\\"$option\\",', 5.19766728692163e-06], ['\\"$val\\"', 5.19766728692163e-06], ['configure_default_options="{', 5.19766728692163e-06], ['"basic-block.h"', 5.19766728692163e-06], ['"expr.h"', 5.19766728692163e-06], ['guarantees', 5.19766728692163e-06], ['TARGET.', 5.19766728692163e-06], ['source.', 5.19766728692163e-06], ['(CONST_INT_P', 5.19766728692163e-06], ['(constp', 5.19766728692163e-06], ['r0,', 5.19766728692163e-06], ['(copied', 5.19766728692163e-06], ['copied),', 5.19766728692163e-06], ['optimize_size)', 5.19766728692163e-06], ['(r6,', 5.19766728692163e-06], ['((bytes', 5.19766728692163e-06], ['profile_probability::from_reg_br_prob_base', 5.19766728692163e-06], ['(REG_BR_PROB_BASE', 5.19766728692163e-06], ['.to_reg_br_prob_note', 5.19766728692163e-06], ['s1_addr', 5.19766728692163e-06], ['s2_addr', 5.19766728692163e-06], ['*L_end_loop_byte', 5.19766728692163e-06], ['addr1_alignment', 5.19766728692163e-06], ['(operands[1])', 5.19766728692163e-06], ['(gen_iorsi3', 5.19766728692163e-06], ['s2_addr));', 5.19766728692163e-06], ['(gen_andsi3', 5.19766728692163e-06], ['tmp3));', 5.19766728692163e-06], ['substract', 5.19766728692163e-06], ['(HImode,', 5.19766728692163e-06], ['(low_1,', 5.19766728692163e-06], ['low_1));', 5.19766728692163e-06], ['(low_2,', 5.19766728692163e-06], ['low_2));', 5.19766728692163e-06], ['(gen_rotlsi3_16', 5.19766728692163e-06], ['(L_end_loop_byte);', 5.19766728692163e-06], ['flag_delayed_branch)', 5.19766728692163e-06], ['tmp1)));', 5.19766728692163e-06], ['operands[3]);', 5.19766728692163e-06], ['lenw', 5.19766728692163e-06], ['(gen_lshrsi3', 5.19766728692163e-06], ['(2)));', 5.19766728692163e-06], ['lenw,', 5.19766728692163e-06], ['(gen_jump_compact(', 5.19766728692163e-06], ['L_end_loop_byte));', 5.19766728692163e-06], ['-GET_MODE_SIZE', 5.19766728692163e-06], ['(start_addr,', 5.19766728692163e-06], ['(INTVAL', 5.19766728692163e-06], ['(QImode)));', 5.19766728692163e-06], ['<iostream>', 5.19766728692163e-06], ['"tree-cfg.h"', 5.19766728692163e-06], ['(true),', 5.19766728692163e-06], ['m_globals', 5.19766728692163e-06], ['redefined', 5.19766728692163e-06], ['(TDI_original,', 5.19766728692163e-06], ['generation.', 5.19766728692163e-06], ['analyze_operands', 5.19766728692163e-06], ['*handler;', 5.19766728692163e-06], ['m_data', 5.19766728692163e-06], ['m_code', 5.19766728692163e-06], ['m_operand', 5.19766728692163e-06], ['*mheader', 5.19766728692163e-06], ['(uint32_t', 5.19766728692163e-06], ['sec', 5.19766728692163e-06], ['(m_brig', 5.19766728692163e-06], ['(m_data', 5.19766728692163e-06], ['(m_operand', 5.19766728692163e-06], ['collecting', 5.19766728692163e-06], ['experimental', 5.19766728692163e-06], ['PRM', 5.19766728692163e-06], ['*brig_blob)', 5.19766728692163e-06], ['find_brig_sections', 5.19766728692163e-06], ['var_handler', 5.19766728692163e-06], ['brig_directive_fbarrier_handler', 5.19766728692163e-06], ['fbar_handler', 5.19766728692163e-06], ['brig_directive_function_handler', 5.19766728692163e-06], ['func_handler', 5.19766728692163e-06], ['brig_directive_module_handler', 5.19766728692163e-06], ['module_handler', 5.19766728692163e-06], ['skipped_handler', 5.19766728692163e-06], ['*csection_header', 5.19766728692163e-06], ['m_code;', 5.19766728692163e-06], ['handlers[]', 5.19766728692163e-06], ['{{BRIG_KIND_INST_BASIC,', 5.19766728692163e-06], ['{BRIG_KIND_INST_MOD,', 5.19766728692163e-06], ['{BRIG_KIND_INST_CMP,', 5.19766728692163e-06], ['{BRIG_KIND_INST_MEM,', 5.19766728692163e-06], ['{BRIG_KIND_INST_CVT,', 5.19766728692163e-06], ['{BRIG_KIND_INST_SEG_CVT,', 5.19766728692163e-06], ['{BRIG_KIND_INST_SEG,', 5.19766728692163e-06], ['{BRIG_KIND_INST_ADDR,', 5.19766728692163e-06], ['{BRIG_KIND_INST_SOURCE_TYPE,', 5.19766728692163e-06], ['{BRIG_KIND_INST_ATOMIC,', 5.19766728692163e-06], ['{BRIG_KIND_INST_SIGNAL,', 5.19766728692163e-06], ['{BRIG_KIND_INST_BR,', 5.19766728692163e-06], ['{BRIG_KIND_INST_LANE,', 5.19766728692163e-06], ['{BRIG_KIND_INST_QUEUE,', 5.19766728692163e-06], ['{BRIG_KIND_DIRECTIVE_VARIABLE,', 5.19766728692163e-06], ['&var_handler},', 5.19766728692163e-06], ['{BRIG_KIND_DIRECTIVE_FBARRIER,', 5.19766728692163e-06], ['&fbar_handler},', 5.19766728692163e-06], ['{BRIG_KIND_DIRECTIVE_KERNEL,', 5.19766728692163e-06], ['{BRIG_KIND_DIRECTIVE_MODULE,', 5.19766728692163e-06], ['&module_handler},', 5.19766728692163e-06], ['{BRIG_KIND_DIRECTIVE_FUNCTION,', 5.19766728692163e-06], ['csection_header->headerByteCount;', 5.19766728692163e-06], ['m_code_size;)', 5.19766728692163e-06], ['*entry', 5.19766728692163e-06], ['*handler', 5.19766728692163e-06], ['m_cf->m_brig_def->nextModuleEntry)', 5.19766728692163e-06], ['ended.', 5.19766728692163e-06], ['holder', 5.19766728692163e-06], ['m_cf->m_local_group_variables.size', 5.19766728692163e-06], ['(handlers)', 5.19766728692163e-06], ['(code_entry_handler_info);', 5.19766728692163e-06], ['(handlers[i].kind', 5.19766728692163e-06], ['entry->kind)', 5.19766728692163e-06], ['handlers[i].handler;', 5.19766728692163e-06], ['(*handler)', 5.19766728692163e-06], ['&seg_inst_handler},', 5.19766728692163e-06], ['&copy_move_inst_handler},', 5.19766728692163e-06], ['&arg_block_handler},', 5.19766728692163e-06], ['(m_globals);', 5.19766728692163e-06], ['func_decl;', 5.19766728692163e-06], ['(host_def_var)', 5.19766728692163e-06], ['(var_name.c_str', 5.19766728692163e-06], ['(ptr_var);', 5.19766728692163e-06], ['Mangle', 5.19766728692163e-06], ['side_effects;', 5.19766728692163e-06], ['(TREE_CODE_CLASS', 5.19766728692163e-06], ['(code);', 5.19766728692163e-06], ['side_effects', 5.19766728692163e-06], ['SOURCE', 5.19766728692163e-06], ['extended.', 5.19766728692163e-06], ['destination_type,', 5.19766728692163e-06], ['destination_type', 5.19766728692163e-06], ['(source)', 5.19766728692163e-06], ['(source);', 5.19766728692163e-06], ['(func_decl));', 5.19766728692163e-06], ['source_type)', 5.19766728692163e-06], ['source;', 5.19766728692163e-06], ['dst_size', 5.19766728692163e-06], ['get_scalar_unsigned_int_type', 5.19766728692163e-06], ['*>::iterator', 5.19766728692163e-06], ['book', 5.19766728692163e-06], ['segment.', 5.19766728692163e-06], ['region', 5.19766728692163e-06], ['brig_to_generic', 5.19766728692163e-06], ['m_cf->m_func_decl', 5.19766728692163e-06], ['(m_cf);', 5.19766728692163e-06], ['pop_cfun', 5.19766728692163e-06], ['Initializes', 5.19766728692163e-06], ['push_struct_function', 5.19766728692163e-06], ['(f);', 5.19766728692163e-06], ['push_cfun', 5.19766728692163e-06], ['per-work-item', 5.19766728692163e-06], ['per_var_padding;', 5.19766728692163e-06], ['m_next_private_offset;', 5.19766728692163e-06], ['var_offset_table::const_iterator', 5.19766728692163e-06], ['size_t>::const_iterator', 5.19766728692163e-06], ['m_private_data_sizes.find', 5.19766728692163e-06], ['m_private_data_sizes.end', 5.19766728692163e-06], ['fnptr', 5.19766728692163e-06], ['build_call_array', 5.19766728692163e-06], ['(rettype,', 5.19766728692163e-06], ['fnptr,', 5.19766728692163e-06], ['decl_call', 5.19766728692163e-06], ['brig_function->m_func_decl', 5.19766728692163e-06], ['(decl_call,', 5.19766728692163e-06], ['metadata', 5.19766728692163e-06], ['rounded', 5.19766728692163e-06], ['f->m_descriptor.kernarg_segment_size', 5.19766728692163e-06], ['-%s\\n\\n",', 5.19766728692163e-06], ['dump_flag_name', 5.19766728692163e-06], ['(TDI_original));', 5.19766728692163e-06], ['print_generic_decl', 5.19766728692163e-06], ['(launcher),', 5.19766728692163e-06], ['global;', 5.19766728692163e-06], ['wrapup_global_declarations', 5.19766728692163e-06], ['ORIGINAL_TYPE.', 5.19766728692163e-06], ['original_type)', 5.19766728692163e-06], ['(original_type))', 5.19766728692163e-06], ['(original_type)', 5.19766728692163e-06], ['optimizations.', 5.19766728692163e-06], ['(!lookup_attribute', 5.19766728692163e-06], ['"dmd/hdrgen.h"', 5.19766728692163e-06], ['"debug.h"', 5.19766728692163e-06], ['mangle_decl', 5.19766728692163e-06], ['buflen', 5.19766728692163e-06], ['(2', 5.19766728692163e-06], ['decl->toPrettyChars', 5.19766728692163e-06], ['ModuleDeclaration', 5.19766728692163e-06], ['decl->getModule', 5.19766728692163e-06], ['(md->id->toChars', 5.19766728692163e-06], ['build_module_tree', 5.19766728692163e-06], ['CONTEXT.', 5.19766728692163e-06], ['d_module_context', 5.19766728692163e-06], ['(d->ident', 5.19766728692163e-06], ['Importing', 5.19766728692163e-06], ['debug_hooks->imported_module_or_decl', 5.19766728692163e-06], ['RootObject', 5.19766728692163e-06], ['(d)', 5.19766728692163e-06], ['d->ident', 5.19766728692163e-06], ['warning_at', 5.19766728692163e-06], ['implemented",', 5.19766728692163e-06], ['d->ident->toChars', 5.19766728692163e-06], ['finishes.', 5.19766728692163e-06], ['escaped', 5.19766728692163e-06], ['tb)->sym->isInstantiated', 5.19766728692163e-06], ['(d)||', 5.19766728692163e-06], ['(d->isAnonymous', 5.19766728692163e-06], ['(gcc_attribute_p', 5.19766728692163e-06], ['members,', 5.19766728692163e-06], ['d->vtblOffset', 5.19766728692163e-06], ['d->vtbl[i]->isFuncDeclaration', 5.19766728692163e-06], ['(!fd->functionSemantic', 5.19766728692163e-06], ['(fd2->loc),', 5.19766728692163e-06], ['fd2->toPrettyChars', 5.19766728692163e-06], ['(!d->members)', 5.19766728692163e-06], ['d->csym', 5.19766728692163e-06], ['layout_class_initializer', 5.19766728692163e-06], ['(d->vtblsym);', 5.19766728692163e-06], ['d->type;', 5.19766728692163e-06], ['enum_initializer_decl', 5.19766728692163e-06], ['ENUMERAL_TYPE', 5.19766728692163e-06], ['static,', 5.19766728692163e-06], ['(VarDeclaration', 5.19766728692163e-06], ['(ie,', 5.19766728692163e-06], ['Duplicated', 5.19766728692163e-06], ['VarDeclarations', 5.19766728692163e-06], ['How', 5.19766728692163e-06], ['mixins', 5.19766728692163e-06], ['codegen.', 5.19766728692163e-06], ['ExpInitializer', 5.19766728692163e-06], ['Already', 5.19766728692163e-06], ['unittest', 5.19766728692163e-06], ['(fdp', 5.19766728692163e-06], ['gagged.', 5.19766728692163e-06], ['run.', 5.19766728692163e-06], ['Module::runDeferredSemantic3', 5.19766728692163e-06], ['(d->vthis);', 5.19766728692163e-06], ['_arguments', 5.19766728692163e-06], ['(param);', 5.19766728692163e-06], ['Chain', 5.19766728692163e-06], ['(possibly', 5.19766728692163e-06], ['this_tree', 5.19766728692163e-06], ['(ad->vthis);', 5.19766728692163e-06], ['cfun->language->static_chain', 5.19766728692163e-06], ['(d->v_argptr)', 5.19766728692163e-06], ['RESULT_DECL', 5.19766728692163e-06], ['(d->nrvo_can)', 5.19766728692163e-06], ['(!AGGREGATE_TYPE_P', 5.19766728692163e-06], ['d->nrvo_can', 5.19766728692163e-06], ['DECL_BY_REFERENCE', 5.19766728692163e-06], ['(resdecl);', 5.19766728692163e-06], ['SET_DECL_VALUE_EXPR', 5.19766728692163e-06], ['resdecl);', 5.19766728692163e-06], ['build_function_body', 5.19766728692163e-06], ['(d->v_argptr);', 5.19766728692163e-06], ['FuncAliasDeclaration', 5.19766728692163e-06], ['(decl->loc),', 5.19766728692163e-06], ['(decl->ident->toChars', 5.19766728692163e-06], ['decl->isVarDeclaration', 5.19766728692163e-06], ['(mangle_decl', 5.19766728692163e-06], ['mangled_name);', 5.19766728692163e-06], ['(decl->loc,', 5.19766728692163e-06], ['(mangled_name)', 5.19766728692163e-06], ['(decl->toPrettyChars', 5.19766728692163e-06], ['(true));', 5.19766728692163e-06], ['(decl->csym)))', 5.19766728692163e-06], ['statically.', 5.19766728692163e-06], ['(fd->isMain', 5.19766728692163e-06], ['DECL_NO_INLINE_WARNING_P', 5.19766728692163e-06], ['generated.', 5.19766728692163e-06], ['STCfinal)', 5.19766728692163e-06], ['(decl->protection.kind', 5.19766728692163e-06], ['deprecated', 5.19766728692163e-06], ['set_decl_tls_model', 5.19766728692163e-06], ['decl_default_tls_model', 5.19766728692163e-06], ['(&decl->csym,', 5.19766728692163e-06], ['(DECL_ATTRIBUTES', 5.19766728692163e-06], ['IDENTIFIER_DECL_TREE', 5.19766728692163e-06], ['(current_function_decl', 5.19766728692163e-06], ['(DECL_LANG_FRAME_FIELD', 5.19766728692163e-06], ["`this'.", 5.19766728692163e-06], ['cfun', 5.19766728692163e-06], ['cfun->language->function', 5.19766728692163e-06], ['vd->parent)', 5.19766728692163e-06], ['link.', 5.19766728692163e-06], ['outer->isAggregateDeclaration', 5.19766728692163e-06], ['extern.', 5.19766728692163e-06], ['DECL_COMMON', 5.19766728692163e-06], ['make_alias_for_thunk', 5.19766728692163e-06], ['(alias,', 5.19766728692163e-06], ['(!flag_syntax_only)', 5.19766728692163e-06], ['finish_thunk', 5.19766728692163e-06], ['Setup', 5.19766728692163e-06], ['(TARGET_USE_LOCAL_THUNK_ALIAS_P', 5.19766728692163e-06], ['TREE_ASM_WRITTEN', 5.19766728692163e-06], ['symtab_node', 5.19766728692163e-06], ['flag_function_sections);', 5.19766728692163e-06], ['DECL_ONE_ONLY', 5.19766728692163e-06], ['cloned', 5.19766728692163e-06], ['nreverse', 5.19766728692163e-06], ['(funcn);', 5.19766728692163e-06], ['Tell', 5.19766728692163e-06], ['DECL_UNINLINABLE', 5.19766728692163e-06], ['(old_context)', 5.19766728692163e-06], ['restype);', 5.19766728692163e-06], ['cfun->function_end_locus', 5.19766728692163e-06], ['cfun->language', 5.19766728692163e-06], ['old_context;', 5.19766728692163e-06], ['Tie', 5.19766728692163e-06], ['unconditionally.', 5.19766728692163e-06], ['STATEMENT_LIST)', 5.19766728692163e-06], ['(bind)', 5.19766728692163e-06], ['(body))', 5.19766728692163e-06], ['bind;', 5.19766728692163e-06], ['D-specific', 5.19766728692163e-06], ['node->forced_by_abi', 5.19766728692163e-06], ['Target::classinfosize;', 5.19766728692163e-06], ['bc)', 5.19766728692163e-06], ['csymoffset;', 5.19766728692163e-06], ['*cd2', 5.19766728692163e-06], ['cd2', 5.19766728692163e-06], ['cd2->baseClass)', 5.19766728692163e-06], ['decl->vtblsym;', 5.19766728692163e-06], ['However', 5.19766728692163e-06], ['bc);', 5.19766728692163e-06], ['*expr)', 5.19766728692163e-06], ['(expr->value->sym)', 5.19766728692163e-06], ['expr->value->sym;', 5.19766728692163e-06], ['"__init",', 5.19766728692163e-06], ['decl->sinit', 5.19766728692163e-06], ['sd->alignment', 5.19766728692163e-06], ['(sd->loc,', 5.19766728692163e-06], ['Identifier::generateId', 5.19766728692163e-06], ['approximation', 5.19766728692163e-06], ['(!TREE_PUBLIC', 5.19766728692163e-06], ['inlined.', 5.19766728692163e-06], ['handle_noreturn_attribute', 5.19766728692163e-06], ['handle_leaf_attribute', 5.19766728692163e-06], ['handle_const_attribute', 5.19766728692163e-06], ['handle_malloc_attribute', 5.19766728692163e-06], ['handle_pure_attribute', 5.19766728692163e-06], ['handle_novops_attribute', 5.19766728692163e-06], ['handle_nonnull_attribute', 5.19766728692163e-06], ['handle_nothrow_attribute', 5.19766728692163e-06], ['handle_type_generic_attribute', 5.19766728692163e-06], ['handle_transaction_pure_attribute', 5.19766728692163e-06], ['handle_returns_twice_attribute', 5.19766728692163e-06], ['handle_fnspec_attribute', 5.19766728692163e-06], ['d_handle_noinline_attribute', 5.19766728692163e-06], ['d_handle_forceinline_attribute', 5.19766728692163e-06], ['d_handle_flatten_attribute', 5.19766728692163e-06], ['d_handle_target_attribute', 5.19766728692163e-06], ['d_handle_noclone_attribute', 5.19766728692163e-06], ['d_handle_section_attribute', 5.19766728692163e-06], ['d_handle_alias_attribute', 5.19766728692163e-06], ['d_handle_weak_attribute', 5.19766728692163e-06], ['("malloc",', 5.19766728692163e-06], ['("returns_twice",', 5.19766728692163e-06], ['("noinline",', 5.19766728692163e-06], ['("forceinline",', 5.19766728692163e-06], ['min_len,', 5.19766728692163e-06], ['max_len,', 5.19766728692163e-06], ['decl_req,', 5.19766728692163e-06], ['type_req,', 5.19766728692163e-06], ['fn_type_req,', 5.19766728692163e-06], ['affects_type_identity,', 5.19766728692163e-06], ['handler,', 5.19766728692163e-06], ['attr_const_pure_exclusions),', 5.19766728692163e-06], ['("type', 5.19766728692163e-06], ['generic",', 5.19766728692163e-06], ['("noclone",', 5.19766728692163e-06], ['ATTRNAME', 5.19766728692163e-06], ['insert_type_attribute', 5.19766728692163e-06], ['*attrname,', 5.19766728692163e-06], ['(attrname);', 5.19766728692163e-06], ['merge_attributes', 5.19766728692163e-06], ['attribs);', 5.19766728692163e-06], ['p->name;', 5.19766728692163e-06], ['(p->name)', 5.19766728692163e-06], ['Defined', 5.19766728692163e-06], ['(attr->op', 5.19766728692163e-06], ['attr', 5.19766728692163e-06], ['*e0', 5.19766728692163e-06], ['TOKstring)', 5.19766728692163e-06], ['attribute,', 5.19766728692163e-06], ['FUNCTION_TYPE)', 5.19766728692163e-06], ['(build_type_variant', 5.19766728692163e-06], ['"const"', 5.19766728692163e-06], ['diagnosing', 5.19766728692163e-06], ['(!args)', 5.19766728692163e-06], ['Argument', 5.19766728692163e-06], ['(argument', 5.19766728692163e-06], ['attributes))', 5.19766728692163e-06], ['attributes);', 5.19766728692163e-06], ['(VAR_OR_FUNCTION_DECL_P', 5.19766728692163e-06], ['"section', 5.19766728692163e-06], ['variables");', 5.19766728692163e-06], ['declaration",', 5.19766728692163e-06], ['(args);', 5.19766728692163e-06], ['INCLUDE_ALGORITHM', 5.19766728692163e-06], ['INCLUDE_VECTOR', 5.19766728692163e-06], ['"recog.h"', 5.19766728692163e-06], ['@(4,r4),r1', 5.19766728692163e-06], ['.L5', 5.19766728692163e-06], ['store.', 5.19766728692163e-06], ['173))', 5.19766728692163e-06], ['inverted:', 5.19766728692163e-06], ['200)', 5.19766728692163e-06], ['(ge:SI', 5.19766728692163e-06], ['179)', 5.19766728692163e-06], ['177)))', 5.19766728692163e-06], ['176)', 5.19766728692163e-06], ['SH2A', 5.19766728692163e-06], ['subordinate', 5.19766728692163e-06], ['log_msg(...)\\', 5.19766728692163e-06], ['log_insn(i)\\', 5.19766728692163e-06], ['print_rtl_single', 5.19766728692163e-06], ['(const_rtx)i);', 5.19766728692163e-06], ['log_rtx(r)\\', 5.19766728692163e-06], ['print_rtl', 5.19766728692163e-06], ['(const_rtx)r);', 5.19766728692163e-06], ['log_return(retval,', 5.19766728692163e-06], ['...)\\', 5.19766728692163e-06], ['log_return_void(...)\\', 5.19766728692163e-06], ['parallel.', 5.19766728692163e-06], ['result.insn', 5.19766728692163e-06], ['result.set_rtx', 5.19766728692163e-06], ['set_of', 5.19766728692163e-06], ['SET)', 5.19766728692163e-06], ['insn)', 5.19766728692163e-06], ['(reg))', 5.19766728692163e-06], ['reg_unused_after_insn', 5.19766728692163e-06], ['REG_UNUSED,', 5.19766728692163e-06], ['(ei_edge', 5.19766728692163e-06], ['abort_at_insn)', 5.19766728692163e-06], ['(std::find', 5.19766728692163e-06], ['visited_bb.end', 5.19766728692163e-06], ['(start_insn', 5.19766728692163e-06], ['end_insn', 5.19766728692163e-06], ['(start_insn);', 5.19766728692163e-06], ['(NONDEBUG_INSN_P', 5.19766728692163e-06], ['insn:\\n",', 5.19766728692163e-06], ['(bb->succs);', 5.19766728692163e-06], ['abort_at_insn);', 5.19766728692163e-06], ["'abort_at_insn'", 5.19766728692163e-06], ['trace_reg_uses', 5.19766728692163e-06], ['std::vector<basic_block>', 5.19766728692163e-06], ['BLOCK_FOR_INSN', 5.19766728692163e-06], ['somehow.', 5.19766728692163e-06], ['t_reg_operand', 5.19766728692163e-06], ['(rtx,', 5.19766728692163e-06], ['machine_mode);', 5.19766728692163e-06], ['negt_reg_operand', 5.19766728692163e-06], ['cstore_inverted', 5.19766728692163e-06], ['setcc;', 5.19766728692163e-06], ['(is_conditional_insn', 5.19766728692163e-06], ['(cbranch_insn))', 5.19766728692163e-06], ['&XEXP', 5.19766728692163e-06], ['pc_set', 5.19766728692163e-06], ['(cbranch_insn);', 5.19766728692163e-06], ['rtx&', 5.19766728692163e-06], ['Before', 5.19766728692163e-06], ['default_pass_data;', 5.19766728692163e-06], ['obtained', 5.19766728692163e-06], ['m_ccreg;', 5.19766728692163e-06], ['cond);', 5.19766728692163e-06], ['branch_condition_type', 5.19766728692163e-06], ['triggering', 5.19766728692163e-06], ['make_not_reg_insn', 5.19766728692163e-06], ['dst_reg,', 5.19766728692163e-06], ['src_reg)', 5.19766728692163e-06], ["'m_touched_insns'.", 5.19766728692163e-06], ['(overwritten', 5.19766728692163e-06], ['constructor)', 5.19766728692163e-06], ['TV_OPTIMIZE,', 5.19766728692163e-06], ['(default_pass_data,', 5.19766728692163e-06], ['ctx),', 5.19766728692163e-06], ['(NULL_RTX)', 5.19766728692163e-06], ['this->name', 5.19766728692163e-06], ['(m_ccreg))', 5.19766728692163e-06], ['PUT_MODE', 5.19766728692163e-06], ['("updated', 5.19766728692163e-06], ['unknown_branch_condition;', 5.19766728692163e-06], ['(const_cast<rtx>', 5.19766728692163e-06], ['(x),', 5.19766728692163e-06], ['VOIDmode);', 5.19766728692163e-06], ['start_insn;', 5.19766728692163e-06], ['cstore_normal;', 5.19766728692163e-06], ['(is_inverted_ccreg', 5.19766728692163e-06], ['(set_found,', 5.19766728692163e-06], ['found\\n");', 5.19766728692163e-06], ['(volatile_insn_p', 5.19766728692163e-06], ['volatile\\n");', 5.19766728692163e-06], ['patterns', 5.19766728692163e-06], ['(cstore_pat,', 5.19766728692163e-06], ['(std::vector<set_of_reg>::const_reverse_iterator', 5.19766728692163e-06], ['i->insn))', 5.19766728692163e-06], ['(i->insn);', 5.19766728692163e-06], ['die', 5.19766728692163e-06], ['(cstore_dst,', 5.19766728692163e-06], ["bb_entry's", 5.19766728692163e-06], ['cstore_dst_use_count', 5.19766728692163e-06], ['e.cstore.insn))', 5.19766728692163e-06], ['those.', 5.19766728692163e-06], ['DImode', 5.19766728692163e-06], ['(src_reg)', 5.19766728692163e-06], ['DImode))', 5.19766728692163e-06], ['(EQ,', 5.19766728692163e-06], ['SImode)', 5.19766728692163e-06], ['m_ccreg);', 5.19766728692163e-06], ['DImode)', 5.19766728692163e-06], ['dst_reg),', 5.19766728692163e-06], ['(x_op0)', 5.19766728692163e-06], ['(y_op0))', 5.19766728692163e-06], ['(e.bb', 5.19766728692163e-06], ["entry's", 5.19766728692163e-06], ['%d]",', 5.19766728692163e-06], ['condition\\n");', 5.19766728692163e-06], ['rtx_code', 5.19766728692163e-06], ['reversed_comparison_code', 5.19766728692163e-06], ['comp_insn', 5.19766728692163e-06], ['completly', 5.19766728692163e-06], ['(could', 5.19766728692163e-06], ['cbranch).', 5.19766728692163e-06], ['(i_empty_count', 5.19766728692163e-06], ['"bb', 5.19766728692163e-06], ['safely.', 5.19766728692163e-06], ['(!can_remove_cstore', 5.19766728692163e-06], ['dominating_cstore', 5.19766728692163e-06], ['(i->setcc.insn);', 5.19766728692163e-06], ['!try_invert_branch_condition', 5.19766728692163e-06], ['NULL_RTX);', 5.19766728692163e-06], ['(common_comp,', 5.19766728692163e-06], ['(emit_insn_after', 5.19766728692163e-06], ['(common_comp_insn,', 5.19766728692163e-06], ['(comp_op1))', 5.19766728692163e-06], ['(i_comp_op0)', 5.19766728692163e-06], ['(i_comp_op0,', 5.19766728692163e-06], ['(i_comp_op0));', 5.19766728692163e-06], ['(i->cstore.insn);', 5.19766728692163e-06], ['(i->cstore.empty', 5.19766728692163e-06], ['insn:\\n");', 5.19766728692163e-06], ['("removing', 5.19766728692163e-06], ['%d]:\\n",', 5.19766728692163e-06], ['(trace.cbranch_type', 5.19766728692163e-06], ['("condition:', 5.19766728692163e-06], ['("unknown', 5.19766728692163e-06], ['Scan', 5.19766728692163e-06], ['backwards', 5.19766728692163e-06], ['trace.setcc', 5.19766728692163e-06], ['("set', 5.19766728692163e-06], ['(!trace.can_invert_condition', 5.19766728692163e-06], ['("branch', 5.19766728692163e-06], ['branch,', 5.19766728692163e-06], ['register,', 5.19766728692163e-06], ['trace.bb_entries.push_front', 5.19766728692163e-06], ['(bb_entry', 5.19766728692163e-06], ['(trace_reg,', 5.19766728692163e-06], ['trace.bb_entries.front', 5.19766728692163e-06], ['aborting', 5.19766728692163e-06], ['trace\\n");', 5.19766728692163e-06], ['cstore_normal)', 5.19766728692163e-06], ['cstore_inverted)', 5.19766728692163e-06], ['("will', 5.19766728692163e-06], ['(trace,', 5.19766728692163e-06], ['ccr1', 5.19766728692163e-06], ['(targetm.fixed_condition_code_regs', 5.19766728692163e-06], ['(&ccr0,', 5.19766728692163e-06], ['&ccr1)', 5.19766728692163e-06], ['INVALID_REGNUM)', 5.19766728692163e-06], ['Initially', 5.19766728692163e-06], ['VOIDmode.', 5.19766728692163e-06], ['discovered,', 5.19766728692163e-06], ['(VOIDmode,', 5.19766728692163e-06], ['ccr0);', 5.19766728692163e-06], ['(m_ccreg', 5.19766728692163e-06], ['ccreg.\\n\\n");', 5.19766728692163e-06], ['(STORE_FLAG_VALUE', 5.19766728692163e-06], ['("ccreg:', 5.19766728692163e-06], ['onlyjump_p', 5.19766728692163e-06], ['("\\n\\n");', 5.19766728692163e-06], ['(*i),', 5.19766728692163e-06], ['"\\n\\n");', 5.19766728692163e-06], ['opt_pass*', 5.19766728692163e-06], ['(ctx,', 5.19766728692163e-06], ['-*-', 5.19766728692163e-06], ['<fstream>', 5.19766728692163e-06], ['-fgo-dump-ast', 5.19766728692163e-06], ['traverse_variables),', 5.19766728692163e-06], ['ast_dump_context_(ast_dump_context)', 5.19766728692163e-06], ['block(Block*);', 5.19766728692163e-06], ['ast_dump_context_;', 5.19766728692163e-06], ['Ast_dump_traverse_statements', 5.19766728692163e-06], ['this->ast_dump_context_->print_indent();', 5.19766728692163e-06], ['go_assert(no->is_function());', 5.19766728692163e-06], ['res->begin();', 5.19766728692163e-06], ['res->end();', 5.19766728692163e-06], ['go_assert(no->is_result_variable());', 5.19766728692163e-06], ['no->result_var_value();', 5.19766728692163e-06], ['*/)', 5.19766728692163e-06], ['".dump.ast";', 5.19766728692163e-06], ['basename)', 5.19766728692163e-06], ['std::ofstream', 5.19766728692163e-06], ['adtbf(this);', 5.19766728692163e-06], ['out.close();', 5.19766728692163e-06], ['(std::vector<Expression*>::const_iterator', 5.19766728692163e-06], ['(*it)->dump_expression(this);', 5.19766728692163e-06], ['"tmp."', 5.19766728692163e-06], ['"-";', 5.19766728692163e-06], ['"*";', 5.19766728692163e-06], ['"==";', 5.19766728692163e-06], ['"!=";', 5.19766728692163e-06], ['"<";', 5.19766728692163e-06], ['"<=";', 5.19766728692163e-06], ['">=";', 5.19766728692163e-06], ['"<-";', 5.19766728692163e-06], ['OPERATOR_PLUSPLUS:', 5.19766728692163e-06], ['OPERATOR_MINUSMINUS:', 5.19766728692163e-06], ['OPERATOR_COLON:', 5.19766728692163e-06], ['OPERATOR_COLONEQ:', 5.19766728692163e-06], ['OPERATOR_SEMICOLON:', 5.19766728692163e-06], ['OPERATOR_DOT:', 5.19766728692163e-06], ['OPERATOR_COMMA:', 5.19766728692163e-06], ['OPERATOR_RPAREN:', 5.19766728692163e-06], ['OPERATOR_LCURLY:', 5.19766728692163e-06], ['OPERATOR_RCURLY:', 5.19766728692163e-06], ['OPERATOR_RSQUARE:', 5.19766728692163e-06], ['Ast_dump_context::dump_to_stream(const', 5.19766728692163e-06], ['std::ostream*', 5.19766728692163e-06], ['adc(out,', 5.19766728692163e-06], ['"<null>";', 5.19766728692163e-06], ['&std::cerr);', 5.19766728692163e-06], ['Shallow', 5.19766728692163e-06], ['bs', 5.19766728692163e-06], ['"Block', 5.19766728692163e-06], ['Deep', 5.19766728692163e-06], ['adc(&std::cerr,', 5.19766728692163e-06], ['Type_dumper', 5.19766728692163e-06], ['addr);', 5.19766728692163e-06], ['recorded,', 5.19766728692163e-06], ['N.', 5.19766728692163e-06], ['ptr)', 5.19766728692163e-06], ['tbuf,', 5.19766728692163e-06], ['non-NULL,', 5.19766728692163e-06], ['this->lookup(t);', 5.19766728692163e-06], ['p.second;', 5.19766728692163e-06], ['"\'"', 5.19766728692163e-06], ['"\'', 5.19766728692163e-06], ['"u"', 5.19766728692163e-06], ['"T"', 5.19766728692163e-06], ['routine,', 5.19766728692163e-06], ['go_unreachable()', 5.19766728692163e-06], ['warning/error,', 5.19766728692163e-06], ['possibility', 5.19766728692163e-06], ['((unsigned)t->classification())', 5.19766728692163e-06], ['ft)', 5.19766728692163e-06], ['(rec', 5.19766728692163e-06], ['[";', 5.19766728692163e-06], ['this->typeref("]', 5.19766728692163e-06], ['visit_methods(it->local_methods(),', 5.19766728692163e-06], ['(ct->may_receive())', 5.19766728692163e-06], ['classification', 5.19766728692163e-06], ['deterministic', 5.19766728692163e-06], ['especially', 5.19766728692163e-06], ['__builtin_expect', 5.19766728692163e-06], ['netsort.', 5.19766728692163e-06], ['C->OUT,', 5.19766728692163e-06], ['reorder23', 5.19766728692163e-06], ['(sort_ctx', 5.19766728692163e-06], ['STRIDE,', 5.19766728692163e-06], ['(&t0,', 5.19766728692163e-06], ['OFFSET;', 5.19766728692163e-06], ['3))', 5.19766728692163e-06], ['memmove', 5.19766728692163e-06], ['(TYPE));\\', 5.19766728692163e-06], ['&t0,', 5.19766728692163e-06], ['&t1,', 5.19766728692163e-06], ['(size_t)))', 5.19766728692163e-06], ['(size_t),', 5.19766728692163e-06], ['(int)))', 5.19766728692163e-06], ['(int),', 5.19766728692163e-06], ['(size_t);', 5.19766728692163e-06], ['step)', 5.19766728692163e-06], ['reorder45', 5.19766728692163e-06], ['E1,', 5.19766728692163e-06], ['cmp1', 5.19766728692163e-06], ['e1)', 5.19766728692163e-06], ['IN,', 5.19766728692163e-06], ['IN', 5.19766728692163e-06], ['*in,', 5.19766728692163e-06], ['e1);', 5.19766728692163e-06], ['(e2,', 5.19766728692163e-06], ['OUT.', 5.19766728692163e-06], ['stable', 5.19766728692163e-06], ['(in,', 5.19766728692163e-06], ['nl,', 5.19766728692163e-06], ['in;', 5.19766728692163e-06], ['half,', 5.19766728692163e-06], ['mr', 5.19766728692163e-06], ['lr', 5.19766728692163e-06], ['(intptr_t)l', 5.19766728692163e-06], ['*end', 5.19766728692163e-06], ['(4);', 5.19766728692163e-06], ['gcc_qsort', 5.19766728692163e-06], ['*vbase,', 5.19766728692163e-06], ['nlim', 5.19766728692163e-06], ['bufsz', 5.19766728692163e-06], ['(vbase,', 5.19766728692163e-06], ['"dmd/statement.h"', 5.19766728692163e-06], ['flag_max_errors;', 5.19766728692163e-06], ['occured', 5.19766728692163e-06], ['(this->gaggedErrors', 5.19766728692163e-06], ['oldGagged);', 5.19766728692163e-06], ['printed.', 5.19766728692163e-06], ['file/line', 5.19766728692163e-06], ['this->charnum', 5.19766728692163e-06], ['(":%u",', 5.19766728692163e-06], ['(c2);', 5.19766728692163e-06], ['Target::RealProperties::infinity;', 5.19766728692163e-06], ['little-endian', 5.19766728692163e-06], ['big-endian', 5.19766728692163e-06], ['p[0]', 5.19766728692163e-06], ['(((unsigned)', 5.19766728692163e-06], ['R.', 5.19766728692163e-06], ['real_ldexp', 5.19766728692163e-06], ['REAL_VALUE_ISNAN', 5.19766728692163e-06], ['REAL_VALUE_ISINF', 5.19766728692163e-06], ['(long_double_type_node));', 5.19766728692163e-06], ['fmt', 5.19766728692163e-06], ['(buffer,', 5.19766728692163e-06], ['real_to_decimal', 5.19766728692163e-06], ['main()', 5.19766728692163e-06], ['druntime', 5.19766728692163e-06], ['*sc)', 5.19766728692163e-06], ['global.startGagging', 5.19766728692163e-06], ['Module::load', 5.19766728692163e-06], ['(errors))', 5.19766728692163e-06], ['m->importAll', 5.19766728692163e-06], ['m->semantic', 5.19766728692163e-06], ['m->semantic2', 5.19766728692163e-06], ['m->semantic3', 5.19766728692163e-06], ['d_add_entrypoint_module', 5.19766728692163e-06], ['vectype', 5.19766728692163e-06], ['(vectype,', 5.19766728692163e-06], ['native_interpret_expr', 5.19766728692163e-06], ['interpret', 5.19766728692163e-06], ['Compiler::loadModule', 5.19766728692163e-06], ['(md->packages->dim', 5.19766728692163e-06], ['d_add_builtin_module', 5.19766728692163e-06], ['style', 5.19766728692163e-06], ['(fd->builtin', 5.19766728692163e-06], ['BUILTINunknown)', 5.19766728692163e-06], ['fd->builtin;', 5.19766728692163e-06], ['Scope', 5.19766728692163e-06], ['mitigation', 5.19766728692163e-06], ['"df.h"', 5.19766728692163e-06], ['places', 5.19766728692163e-06], ['(we', 5.19766728692163e-06], ['B.EQ', 5.19766728692163e-06], ['<dst>', 5.19766728692163e-06], ['<dst>:', 5.19766728692163e-06], ['CSEL', 5.19766728692163e-06], ['XZr,', 5.19766728692163e-06], ['speculating', 5.19766728692163e-06], ['SP,', 5.19766728692163e-06], ['pre-call', 5.19766728692163e-06], ['post-call', 5.19766728692163e-06], ['quite', 5.19766728692163e-06], ['sp', 5.19766728692163e-06], ['SP_REGNUM);', 5.19766728692163e-06], ['SPECULATION_TRACKER_REGNUM);', 5.19766728692163e-06], ['(scratch,', 5.19766728692163e-06], ['aarch64_speculation_establish_tracker', 5.19766728692163e-06], ['aarch64_do_track_speculation', 5.19766728692163e-06], ['NOTE_P', 5.19766728692163e-06], ['dump_insn_slim', 5.19766728692163e-06], ['jump,', 5.19766728692163e-06], ['fall-through', 5.19766728692163e-06], ['(gen_speculation_tracker', 5.19766728692163e-06], ['BRANCH_EDGE', 5.19766728692163e-06], ['FALLTHRU_EDGE', 5.19766728692163e-06], ['fixups_pending++;', 5.19766728692163e-06], ['(call_insn)', 5.19766728692163e-06], ['call_insn);', 5.19766728692163e-06], ['(SIBLING_CALL_P', 5.19766728692163e-06], ['find_reg_note', 5.19766728692163e-06], ['REG_NORETURN,', 5.19766728692163e-06], ['transfer', 5.19766728692163e-06], ['easiest', 5.19766728692163e-06], ['commit_edge_insertions', 5.19766728692163e-06], ['INSN_LOCATION', 5.19766728692163e-06], ['pass_track_speculation', 5.19766728692163e-06], ["optinfo_item's", 5.19766728692163e-06], ['KIND.', 5.19766728692163e-06], ['optinfo_kind', 5.19766728692163e-06], ['(kind)', 5.19766728692163e-06], ['OPTINFO_KIND_SUCCESS:', 5.19766728692163e-06], ['OPTINFO_KIND_FAILURE:', 5.19766728692163e-06], ['OPTINFO_KIND_NOTE:', 5.19766728692163e-06], ['OPTINFO_KIND_SCOPE:', 5.19766728692163e-06], ["optinfo's", 5.19766728692163e-06], ['*item;', 5.19766728692163e-06], ['(m_items,', 5.19766728692163e-06], ['item)', 5.19766728692163e-06], ['optinfo.', 5.19766728692163e-06], ['(item);', 5.19766728692163e-06], ['optinfo_kind_to_dump_flag', 5.19766728692163e-06], ['"non-immediate"', 5.19766728692163e-06], ['dump_kind', 5.19766728692163e-06], ['active', 5.19766728692163e-06], ['keywords', 5.19766728692163e-06], ['codes.', 5.19766728692163e-06], ['keyword,', 5.19766728692163e-06], ['bsearch.', 5.19766728692163e-06], ['"break",', 5.19766728692163e-06], ['"continue",', 5.19766728692163e-06], ['Keywords_search_key', 5.19766728692163e-06], ['Mapping*', 5.19766728692163e-06], ['tok)', 5.19766728692163e-06], ['this->u_.keyword', 5.19766728692163e-06], ['tok.u_.keyword;', 5.19766728692163e-06], ['this->u_.string_value', 5.19766728692163e-06], ['tok.u_.string_value;', 5.19766728692163e-06], ['this->u_.op', 5.19766728692163e-06], ['tok.u_.op;', 5.19766728692163e-06], ['mpz_init_set(this->u_.integer_value,', 5.19766728692163e-06], ['tok.u_.integer_value);', 5.19766728692163e-06], ['mpfr_init_set(this->u_.float_value,', 5.19766728692163e-06], ['tok.u_.float_value,', 5.19766728692163e-06], ['"invalid");', 5.19766728692163e-06], ['\\"%s\\"",', 5.19766728692163e-06], ['this->u_.string_value->c_str());', 5.19766728692163e-06], ['mpz_out_str(file,', 5.19766728692163e-06], ['this->u_.integer_value);', 5.19766728692163e-06], ['mpfr_out_str(file,', 5.19766728692163e-06], ['this->u_.float_value,', 5.19766728692163e-06], ['",");', 5.19766728692163e-06], ['linemap_(linemap),', 5.19766728692163e-06], ['pragmas_(0),', 5.19766728692163e-06], ['EOF)', 5.19766728692163e-06], ['ns', 5.19766728692163e-06], ['buf[cur]', 5.19766728692163e-06], ['EOF.', 5.19766728692163e-06], ['this->linemap_->get_location(this->lineoff_', 5.19766728692163e-06], ['chars);', 5.19766728692163e-06], ['add_semi_at_eol', 5.19766728692163e-06], ['this->add_semi_at_eol_;', 5.19766728692163e-06], ['(add_semi_at_eol)', 5.19766728692163e-06], ['this->extern_.clear();', 5.19766728692163e-06], ["':", 5.19766728692163e-06], ["'\\r':", 5.19766728692163e-06], ["'\\r')", 5.19766728692163e-06], ["'\\n':", 5.19766728692163e-06], ['this->add_semi_at_eol_)', 5.19766728692163e-06], ['--p;', 5.19766728692163e-06], ['this->gather_identifier();', 5.19766728692163e-06], ['this->gather_number();', 5.19766728692163e-06], ["'\\'':", 5.19766728692163e-06], ['OPERATOR_INVALID)', 5.19766728692163e-06], ['this->make_operator(op,', 5.19766728692163e-06], ["';':", 5.19766728692163e-06], ["',':", 5.19766728692163e-06], ["'(':", 5.19766728692163e-06], ["')':", 5.19766728692163e-06], ["'{':", 5.19766728692163e-06], ["'}':", 5.19766728692163e-06], ["'[':", 5.19766728692163e-06], ["']':", 5.19766728692163e-06], ['chars', 5.19766728692163e-06], ['&ci,', 5.19766728692163e-06], ['pnext;', 5.19766728692163e-06], ['0xc0', 5.19766728692163e-06], ['0xe0', 5.19766728692163e-06], ['0x7ff)', 5.19766728692163e-06], ['0xf0', 5.19766728692163e-06], ['(p[3]', 5.19766728692163e-06], ['0xffff)', 5.19766728692163e-06], ['NUL', 5.19766728692163e-06], ['file");', 5.19766728692163e-06], ['((cc', 5.19766728692163e-06], ["'Z')", 5.19766728692163e-06], ['swallow', 5.19766728692163e-06], ["'\\r'", 5.19766728692163e-06], ['identifier",', 5.19766728692163e-06], ['(!has_non_ascii_char)', 5.19766728692163e-06], ['buf.assign(pstart,', 5.19766728692163e-06], ['buf.append("$INVALID$");', 5.19766728692163e-06], ['(is_first)', 5.19766728692163e-06], ["'Z';", 5.19766728692163e-06], ['(has_non_ascii_char)', 5.19766728692163e-06], ['pnext', 5.19766728692163e-06], ['is_invalid', 5.19766728692163e-06], ['identifier,', 5.19766728692163e-06], ['Lex::is_unicode_uppercase(ci);', 5.19766728692163e-06], ['NHV', 5.19766728692163e-06], ['@', 5.19766728692163e-06], ['L', 5.19766728692163e-06], ['O', 5.19766728692163e-06], ['Lex::is_hex_digit(p[2]))', 5.19766728692163e-06], ['(base', 5.19766728692163e-06], ["'i'", 5.19766728692163e-06], ['!Lex::could_be_exponent(p,', 5.19766728692163e-06], ['mpz_init_set_str(val,', 5.19766728692163e-06], ['Token::make_integer_token(val,', 5.19766728692163e-06], ['pend))', 5.19766728692163e-06], ['go_assert(r', 5.19766728692163e-06], ['(is_imaginary)', 5.19766728692163e-06], ["'7'", 5.19766728692163e-06], ["'\\\\':", 5.19766728692163e-06], ['Lex::is_hex_digit(p[2])', 5.19766728692163e-06], ['Lex::is_hex_digit(p[3])', 5.19766728692163e-06], ['((Lex::hex_val(p[1])', 5.19766728692163e-06], ['(Lex::hex_val(p[2])', 5.19766728692163e-06], ['(Lex::hex_val(p[3])', 5.19766728692163e-06], ['0xe000)', 5.19766728692163e-06], ['0x%x",', 5.19766728692163e-06], ['*value);', 5.19766728692163e-06], ['point");', 5.19766728692163e-06], ['is_character,', 5.19766728692163e-06], ['0x7f', 5.19766728692163e-06], ['"unicode', 5.19766728692163e-06], ['buf[2]', 5.19766728692163e-06], ['is_character;', 5.19766728692163e-06], ['this->advance_one_char(p,', 5.19766728692163e-06], ['&is_character);', 5.19766728692163e-06], ['Lex::append_char(c,', 5.19766728692163e-06], ['discarded', 5.19766728692163e-06], ["'<')", 5.19766728692163e-06], ["'^')", 5.19766728692163e-06], ['OPERATOR_MINUSEQ;', 5.19766728692163e-06], ['OPERATOR_RCURLY;', 5.19766728692163e-06], ["'*'", 5.19766728692163e-06], ['(lineoff', 5.19766728692163e-06], ['pcolon[1]', 5.19766728692163e-06], ['plend;', 5.19766728692163e-06], ['(plend', 5.19766728692163e-06], ['*plend', 5.19766728692163e-06], ['lineno);', 5.19766728692163e-06], ['precedes', 5.19766728692163e-06], ['std::string(p,', 5.19766728692163e-06], ['ps;', 5.19766728692163e-06], ['pc', 5.19766728692163e-06], ['entering', 5.19766728692163e-06], ['separator', 5.19766728692163e-06], ['0x0020,', 5.19766728692163e-06], ['0x0085,', 5.19766728692163e-06], ['0x00a0,', 5.19766728692163e-06], ['0x1680,', 5.19766728692163e-06], ['0x180e,', 5.19766728692163e-06], ['0x202f,', 5.19766728692163e-06], ['0x205f,', 5.19766728692163e-06], ['0x3000,', 5.19766728692163e-06], ['0xfeff,', 5.19766728692163e-06], ['"Digit".', 5.19766728692163e-06], ['letters--Unicode', 5.19766728692163e-06], ['"Letter".', 5.19766728692163e-06], ['0x0041,', 5.19766728692163e-06], ['0x005a,', 5.19766728692163e-06], ['11},', 5.19766728692163e-06], ['0x00c0,', 5.19766728692163e-06], ['0x00d6,', 5.19766728692163e-06], ['0x00d8,', 5.19766728692163e-06], ['0x0370,', 5.19766728692163e-06], ['0x0376,', 5.19766728692163e-06], ['0x037f,', 5.19766728692163e-06], ['0x0386,', 5.19766728692163e-06], ['7},', 5.19766728692163e-06], ['0x0388,', 5.19766728692163e-06], ['0x038a,', 5.19766728692163e-06], ['0x038c,', 5.19766728692163e-06], ['0x038e,', 5.19766728692163e-06], ['0x038f,', 5.19766728692163e-06], ['0x03a1,', 5.19766728692163e-06], ['0x03a3,', 5.19766728692163e-06], ['0x03f7,', 5.19766728692163e-06], ['0x048a,', 5.19766728692163e-06], ['0x0531,', 5.19766728692163e-06], ['0x0556,', 5.19766728692163e-06], ['16},', 5.19766728692163e-06], ['18},', 5.19766728692163e-06], ['53},', 5.19766728692163e-06], ['0x10a0,', 5.19766728692163e-06], ['0x10c5,', 5.19766728692163e-06], ['0x10c7,', 5.19766728692163e-06], ['0x10cd,', 5.19766728692163e-06], ['0x1e00,', 5.19766728692163e-06], ['0x1f18,', 5.19766728692163e-06], ['0x1f1d,', 5.19766728692163e-06], ['0x1f48,', 5.19766728692163e-06], ['0x1f4d,', 5.19766728692163e-06], ['0x1f59,', 5.19766728692163e-06], ['0x1f5f,', 5.19766728692163e-06], ['0x1fdb,', 5.19766728692163e-06], ['0x1fec,', 5.19766728692163e-06], ['0x2102,', 5.19766728692163e-06], ['0x2107,', 5.19766728692163e-06], ['0x2115,', 5.19766728692163e-06], ['0x2119,', 5.19766728692163e-06], ['0x211a,', 5.19766728692163e-06], ['0x211d,', 5.19766728692163e-06], ['0x2124,', 5.19766728692163e-06], ['0x212a,', 5.19766728692163e-06], ['0x212b,', 5.19766728692163e-06], ['0x212d,', 5.19766728692163e-06], ['0x213f,', 5.19766728692163e-06], ['0x2145,', 5.19766728692163e-06], ['0x2183,', 5.19766728692163e-06], ['0x2c00,', 5.19766728692163e-06], ['0x2c2e,', 5.19766728692163e-06], ['0x2c60,', 5.19766728692163e-06], ['0x2ceb,', 5.19766728692163e-06], ['0x2cf2,', 5.19766728692163e-06], ['0xa640,', 5.19766728692163e-06], ['0xa722,', 5.19766728692163e-06], ['0xa78b,', 5.19766728692163e-06], ['0xa7ad,', 5.19766728692163e-06], ['0xa7b0,', 5.19766728692163e-06], ['0xff21,', 5.19766728692163e-06], ['0xff3a,', 5.19766728692163e-06], ['0x10400,', 5.19766728692163e-06], ['0x118a0,', 5.19766728692163e-06], ['0x1d400,', 5.19766728692163e-06], ['0x1d49c,', 5.19766728692163e-06], ['0x1d49e,', 5.19766728692163e-06], ['0x1d49f,', 5.19766728692163e-06], ['0x1d4a5,', 5.19766728692163e-06], ['0x1d4a6,', 5.19766728692163e-06], ['0x1d4a9,', 5.19766728692163e-06], ['0x1d4aa,', 5.19766728692163e-06], ['0x1d4ac,', 5.19766728692163e-06], ['0x1d4ae,', 5.19766728692163e-06], ['0x1d505,', 5.19766728692163e-06], ['0x1d507,', 5.19766728692163e-06], ['0x1d50a,', 5.19766728692163e-06], ['0x1d50d,', 5.19766728692163e-06], ['0x1d514,', 5.19766728692163e-06], ['0x1d516,', 5.19766728692163e-06], ['0x1d51c,', 5.19766728692163e-06], ['0x1d539,', 5.19766728692163e-06], ['0x1d53b,', 5.19766728692163e-06], ['0x1d53e,', 5.19766728692163e-06], ['0x1d540,', 5.19766728692163e-06], ['0x1d544,', 5.19766728692163e-06], ['0x1d546,', 5.19766728692163e-06], ['0x1d54a,', 5.19766728692163e-06], ['0x1d54b,', 5.19766728692163e-06], ['0x1d550,', 5.19766728692163e-06], ['0x1d6a8,', 5.19766728692163e-06], ['0x1d6c0,', 5.19766728692163e-06], ['0x1d6fa,', 5.19766728692163e-06], ['0x1d734,', 5.19766728692163e-06], ['0x1d76e,', 5.19766728692163e-06], ['0x1d7a8,', 5.19766728692163e-06], ['"Letter,', 5.19766728692163e-06], ['uppercase".', 5.19766728692163e-06], ['0x1d7ca,', 5.19766728692163e-06], ['range_size;', 5.19766728692163e-06], ['p->high)', 5.19766728692163e-06], ['p->stride', 5.19766728692163e-06], ['hi', 5.19766728692163e-06], ['mid', 5.19766728692163e-06], ['name.length();', 5.19766728692163e-06], ['*ent,', 5.19766728692163e-06], ['(bl->kind', 5.19766728692163e-06], ['level_try)', 5.19766728692163e-06], ['level_catch)', 5.19766728692163e-06], ['ent->level', 5.19766728692163e-06], ['obl;', 5.19766728692163e-06], ['(d_label_use_entry', 5.19766728692163e-06], ['ref->next)', 5.19766728692163e-06], ['(ent->label))', 5.19766728692163e-06], ['(ent->label)', 5.19766728692163e-06], ['(level_kind', 5.19766728692163e-06], ['scopes', 5.19766728692163e-06], ['ggc_cleared_alloc<binding_level>', 5.19766728692163e-06], ['level->blocks;', 5.19766728692163e-06], ['(d_function_chain', 5.19766728692163e-06], ['rooted', 5.19766728692163e-06], ['avoids', 5.19766728692163e-06], ['statement-tree.', 5.19766728692163e-06], ['void_node', 5.19766728692163e-06], ['side-effects,', 5.19766728692163e-06], ['CLEANUP_POINT_EXPR)', 5.19766728692163e-06], ['S,', 5.19766728692163e-06], ['Stack', 5.19766728692163e-06], ['break_label_;', 5.19766728692163e-06], ['ent->fwdrefs', 5.19766728692163e-06], ['LABEL', 5.19766728692163e-06], ['TO', 5.19766728692163e-06], ['d_label_use_entry', 5.19766728692163e-06], ['(from->loc),', 5.19766728692163e-06], ['user-defined', 5.19766728692163e-06], ['(b->kind', 5.19766728692163e-06], ['location;', 5.19766728692163e-06], ['"try', 5.19766728692163e-06], ['(13);', 5.19766728692163e-06], ['DECL_MODE', 5.19766728692163e-06], ['VOIDmode;', 5.19766728692163e-06], ['ent->label', 5.19766728692163e-06], ['TREE_VEC.', 5.19766728692163e-06], ['this->lookup_bc_label', 5.19766728692163e-06], ['(s->getRelatedLabeled', 5.19766728692163e-06], ['(this->continue_label_);', 5.19766728692163e-06], ['elsebody', 5.19766728692163e-06], ["'else'", 5.19766728692163e-06], ['parts.', 5.19766728692163e-06], ['ifbody,', 5.19766728692163e-06], ['(cond);', 5.19766728692163e-06], ['executed,', 5.19766728692163e-06], ['exitcond', 5.19766728692163e-06], ['(exitcond,', 5.19766728692163e-06], ['void_node,', 5.19766728692163e-06], ['lbreak)));', 5.19766728692163e-06], ['Jump', 5.19766728692163e-06], ['up.', 5.19766728692163e-06], ['(s->ident)->statement;', 5.19766728692163e-06], ['(this->lookup_bc_label', 5.19766728692163e-06], ['Statements', 5.19766728692163e-06], ['(this->is_return_label', 5.19766728692163e-06], ['Tchar:', 5.19766728692163e-06], ['Twchar:', 5.19766728692163e-06], ['Tdchar:', 5.19766728692163e-06], ['s->cases->dim;', 5.19766728692163e-06], ['*cs', 5.19766728692163e-06], ['(*s->cases)[i];', 5.19766728692163e-06], ['if-then-else', 5.19766728692163e-06], ['(caselabel)', 5.19766728692163e-06], ['LABEL_VARIABLE_CASE', 5.19766728692163e-06], ['(SWITCH_EXPR,', 5.19766728692163e-06], ['SwitchStatement.', 5.19766728692163e-06], ['(LABEL_VARIABLE_CASE', 5.19766728692163e-06], ['casevalue', 5.19766728692163e-06], ['(caselabel);', 5.19766728692163e-06], ["'goto", 5.19766728692163e-06], ['Throw', 5.19766728692163e-06], ['s->exp->type->toBasetype', 5.19766728692163e-06], ['(s->statements', 5.19766728692163e-06], ['s->statements->dim;', 5.19766728692163e-06], ['*statement', 5.19766728692163e-06], ['(*s->statements)[i];', 5.19766728692163e-06], ['unrolled', 5.19766728692163e-06], ['cd->isInterfaceDeclaration', 5.19766728692163e-06], ['warned', 5.19766728692163e-06], ['(id', 5.19766728692163e-06], ['(level_try);', 5.19766728692163e-06], ['trybody', 5.19766728692163e-06], ['ehptr', 5.19766728692163e-06], ['(vcatch->var);', 5.19766728692163e-06], ['catchbody', 5.19766728692163e-06], ['trybody,', 5.19766728692163e-06], ['sorry', 5.19766728692163e-06], ['clobbers', 5.19766728692163e-06], ['(s->args)', 5.19766728692163e-06], ['*cstring', 5.19766728692163e-06], ['cstring);', 5.19766728692163e-06], ['inputs,', 5.19766728692163e-06], ['labels);', 5.19766728692163e-06], ['noutputs);', 5.19766728692163e-06], ['*constraint', 5.19766728692163e-06], ['(&constraint,', 5.19766728692163e-06], ['ninputs,', 5.19766728692163e-06], ['noutputs,', 5.19766728692163e-06], ['&allows_mem,', 5.19766728692163e-06], ['inputs;', 5.19766728692163e-06], ['(ASM_EXPR,', 5.19766728692163e-06], ['volatile', 5.19766728692163e-06], ['Bindings(NULL)),', 5.19766728692163e-06], ['int32_type', 5.19766728692163e-06], ['int_type_size', 5.19766728692163e-06], ['int_type_size,', 5.19766728692163e-06], ['int32_type,', 5.19766728692163e-06], ['Type::make_boolean_type(),', 5.19766728692163e-06], ['Type::make_nil_type(),', 5.19766728692163e-06], ['len_result,', 5.19766728692163e-06], ['print_type', 5.19766728692163e-06], ['print_type->set_is_varargs();', 5.19766728692163e-06], ['print_type->set_is_builtin();', 5.19766728692163e-06], ['print_type,', 5.19766728692163e-06], ['pkgpath)', 5.19766728692163e-06], ['go_assert(this->pkgpath_set_);', 5.19766728692163e-06], ['this->pkgpath_;', 5.19766728692163e-06], ['this->pkgpath_set_', 5.19766728692163e-06], ['this->pkgpath_symbol_;', 5.19766728692163e-06], ['(*result)', 5.19766728692163e-06], ["'U'", 5.19766728692163e-06], ['go_assert(this->package_', 5.19766728692163e-06], ['Gogo::pkgpath_for_symbol(this->pkgpath_);', 5.19766728692163e-06], ['"go";', 5.19766728692163e-06], ['(pf', 5.19766728692163e-06], ['this->current_file_imported_unsafe_', 5.19766728692163e-06], ['local_name;', 5.19766728692163e-06], ['is_ln_exported', 5.19766728692163e-06], ['(ln', 5.19766728692163e-06], ['package->bindings();', 5.19766728692163e-06], ['init_name)', 5.19766728692163e-06], ['(Import_init_set::iterator', 5.19766728692163e-06], ['*ii', 5.19766728692163e-06], ['P1,', 5.19766728692163e-06], ['OK,', 5.19766728692163e-06], ['this->functions_.empty();', 5.19766728692163e-06], ['Gogo::current_bindings()', 5.19766728692163e-06], ['(!this->functions_.empty())', 5.19766728692163e-06], ['this->functions_.back().blocks.back()->bindings();', 5.19766728692163e-06], ['this->globals_;', 5.19766728692163e-06], ['std::set<const', 5.19766728692163e-06], ['succ_prior', 5.19766728692163e-06], ['this->lookup_init(*pci);', 5.19766728692163e-06], ['priorities', 5.19766728692163e-06], ['roots.', 5.19766728692163e-06], ['Import_init*>', 5.19766728692163e-06], ['Bfunction', 5.19766728692163e-06], ['empty_args;', 5.19766728692163e-06], ['(Backend::function_is_visible', 5.19766728692163e-06], ['Backend::function_is_declaration', 5.19766728692163e-06], ['Backend::function_is_inlinable);', 5.19766728692163e-06], ['empty_args,', 5.19766728692163e-06], ['pvt,', 5.19766728692163e-06], ['Expression::make_var_reference(*p,', 5.19766728692163e-06], ['decl_addr', 5.19766728692163e-06], ['Expression::make_type_info(decl->type(),', 5.19766728692163e-06], ['init->push_back(size);', 5.19766728692163e-06], ['Expression::TYPE_INFO_BACKEND_PTRDATA);', 5.19766728692163e-06], ['init->push_back(ptrdata);', 5.19766728692163e-06], ['init->push_back(gcdata);', 5.19766728692163e-06], ['root_ctor', 5.19766728692163e-06], ['Expression::make_struct_composite_literal(root_type,', 5.19766728692163e-06], ['roots_init->push_back(root_ctor);', 5.19766728692163e-06], ['eloc', 5.19766728692163e-06], ['expr->location();', 5.19766728692163e-06], ['Expression::make_type_info(type,', 5.19766728692163e-06], ['this->package_->location();', 5.19766728692163e-06], ['Function(fntype,', 5.19766728692163e-06], ['initfn);', 5.19766728692163e-06], ['code_stmt)', 5.19766728692163e-06], ['code_stmt))', 5.19766728692163e-06], ['looping.', 5.19766728692163e-06], ['const_iterator;', 5.19766728692163e-06], ['(Expression::traverse(&init,', 5.19766728692163e-06], ['tre', 5.19766728692163e-06], ['e->temporary_reference_expression();', 5.19766728692163e-06], ['preinit,', 5.19766728692163e-06], ['find_vars;', 5.19766728692163e-06], ['dep->var_value()->init();', 5.19766728692163e-06], ['(dep->var_value()->has_pre_init())', 5.19766728692163e-06], ['dep->var_value()->preinit()->traverse(&find_vars);', 5.19766728692163e-06], ['(Find_vars::const_iterator', 5.19766728692163e-06], ['find_vars.begin();', 5.19766728692163e-06], ['find_vars.end();', 5.19766728692163e-06], ['Var_init', 5.19766728692163e-06], ['refs_(NULL),', 5.19766728692163e-06], ['dep_count_(0)', 5.19766728692163e-06], ['init_(init),', 5.19766728692163e-06], ['init()', 5.19766728692163e-06], ['this->refs_;', 5.19766728692163e-06], ['resolved.', 5.19766728692163e-06], ['(this->refs_', 5.19766728692163e-06], ['this->refs_', 5.19766728692163e-06], ['Var_init&', 5.19766728692163e-06], ['v1,', 5.19766728692163e-06], ['std::map<Named_object*,', 5.19766728692163e-06], ['std::set<Var_init*>', 5.19766728692163e-06], ['init_loop', 5.19766728692163e-06], ['pvar->var();', 5.19766728692163e-06], ['var->var_value()->init();', 5.19766728692163e-06], ['cycles.', 5.19766728692163e-06], ['pdep', 5.19766728692163e-06], ['("initialization', 5.19766728692163e-06], ['var->message_name().c_str());', 5.19766728692163e-06], ['pdepdep', 5.19766728692163e-06], ['dep->message_name().c_str());', 5.19766728692163e-06], ['Var_inits', 5.19766728692163e-06], ['v1', 5.19766728692163e-06], ['itself",', 5.19766728692163e-06], ['init_fndecl);', 5.19766728692163e-06], ['init_bfn);', 5.19766728692163e-06], ['var_inits;', 5.19766728692163e-06], ['count_definitions', 5.19766728692163e-06], ['(no->is_const()', 5.19766728692163e-06], ['func_decls);', 5.19766728692163e-06], ['is_sink', 5.19766728692163e-06], ['(is_static_initializer)', 5.19766728692163e-06], ['var_init_fn', 5.19766728692163e-06], ['func->get_or_make_decl(this,', 5.19766728692163e-06], ['var_binit);', 5.19766728692163e-06], ['var_inits.push_back(Var_init(no,', 5.19766728692163e-06], ['(this->compiling_runtime()', 5.19766728692163e-06], ['this->package_name()', 5.19766728692163e-06], ['initializations,', 5.19766728692163e-06], ['func_loc);', 5.19766728692163e-06], ['func_code,', 5.19766728692163e-06], ['(this->need_init_fn_', 5.19766728692163e-06], ['var_decls);', 5.19766728692163e-06], ['this->functions_.back().blocks.back();', 5.19766728692163e-06], ['(pfunction', 5.19766728692163e-06], ['*pfunction', 5.19766728692163e-06], ['Named_object::make_sink();', 5.19766728692163e-06], ['this->package_->bindings()->lookup(name);', 5.19766728692163e-06], ['go_assert(!this->functions_.back().blocks.empty());', 5.19766728692163e-06], ['*padd_to_globals', 5.19766728692163e-06], ['(alias_arg', 5.19766728692163e-06], ['real_name;', 5.19766728692163e-06], ['go_assert(package', 5.19766728692163e-06], ['Variable(receiver->type(),', 5.19766728692163e-06], ['rname', 5.19766728692163e-06], ['DECL_ARGUMENTS.', 5.19766728692163e-06], ['param->set_is_varargs_parameter();', 5.19766728692163e-06], ['pname;', 5.19766728692163e-06], ['is_init', 5.19766728692163e-06], ['nested_name', 5.19766728692163e-06], ['&nested_name;', 5.19766728692163e-06], ['Invent', 5.19766728692163e-06], ['(rtype->named_type()->named_object()->package()', 5.19766728692163e-06], ['ahead', 5.19766728692163e-06], ['"(receiver', 5.19766728692163e-06], ['type)"));', 5.19766728692163e-06], ['Redefinition', 5.19766728692163e-06], ['this->functions_.back().function->func_value();', 5.19766728692163e-06], ['issue_goto_errors)', 5.19766728692163e-06], ['Bindings_snapshot*', 5.19766728692163e-06], ['go_assert(!this->functions_.empty()', 5.19766728692163e-06], ['!this->functions_.back().blocks.empty());', 5.19766728692163e-06], ['this->functions_.back().blocks.back()->add_statement(statement);', 5.19766728692163e-06], ['Statement::make_block_statement(block,', 5.19766728692163e-06], ['(!this->in_global_scope()', 5.19766728692163e-06], ['(f->is_function())', 5.19766728692163e-06], ['f->func_value()->new_local_type_index();', 5.19766728692163e-06], ['no->is_type_declaration())', 5.19766728692163e-06], ['go_name.c_str());', 5.19766728692163e-06], ['Gogo::unpack_hidden_name(p->second->name())', 5.19766728692163e-06], ['(Packages::iterator', 5.19766728692163e-06], ['pkg_name', 5.19766728692163e-06], ['go_error_at(p1->second->location(),', 5.19766728692163e-06], ['Specific_type_function*', 5.19766728692163e-06], ['tsf', 5.19766728692163e-06], ['Specific_type_functions', 5.19766728692163e-06], ['(t->needs_specific_type_functions(this->gogo_))', 5.19766728692163e-06], ['t->type_functions(this->gogo_,', 5.19766728692163e-06], ['(Type::traverse(rt,', 5.19766728692163e-06], ['rt->struct_type()->fields();', 5.19766728692163e-06], ['(Packages::const_iterator', 5.19766728692163e-06], ['Verify_types', 5.19766728692163e-06], ['traverse;', 5.19766728692163e-06], ['(std::vector<Type*>::iterator', 5.19766728692163e-06], ['this->verify_types_.begin();', 5.19766728692163e-06], ['this->verify_types_.end();', 5.19766728692163e-06], ['traverse_constants', 5.19766728692163e-06], ['function_(function),', 5.19766728692163e-06], ['inserter_()', 5.19766728692163e-06], ['set_inserter(const', 5.19766728692163e-06], ['*inserter;', 5.19766728692163e-06], ['constant(Named_object*,', 5.19766728692163e-06], ['inserter_;', 5.19766728692163e-06], ['no->var_value()->is_global())', 5.19766728692163e-06], ['no->var_value()->type();', 5.19766728692163e-06], ['go_assert(!no->var_value()->has_pre_init());', 5.19766728692163e-06], ['this->iota_value_', 5.19766728692163e-06], ['ourselves,', 5.19766728692163e-06], ['(sorig->is_block_statement())', 5.19766728692163e-06], ['hold_inserter(this->inserter_);', 5.19766728692163e-06], ['sorig->traverse_contents(this);', 5.19766728692163e-06], ['sorig;', 5.19766728692163e-06], ['(snew', 5.19766728692163e-06], ['snew;', 5.19766728692163e-06], ['((*pexpr)->traverse_subexpressions(this)', 5.19766728692163e-06], ['(enew', 5.19766728692163e-06], ['enew;', 5.19766728692163e-06], ['bodies', 5.19766728692163e-06], ['INSERTER', 5.19766728692163e-06], ['(inserter', 5.19766728692163e-06], ['Create_function_descriptors', 5.19766728692163e-06], ['no->func_value()->descriptor(this->gogo_,', 5.19766728692163e-06], ['expr->func_expression();', 5.19766728692163e-06], ['(fe->closure()', 5.19766728692163e-06], ['!no->func_declaration_value()->type()->is_method()', 5.19766728692163e-06], ['ifre', 5.19766728692163e-06], ['Gather', 5.19766728692163e-06], ['nt->finalize_methods(this->gogo_);', 5.19766728692163e-06], ['finalize(this);', 5.19766728692163e-06], ['Type::traverse(type,', 5.19766728692163e-06], ['((*p)->is_const())', 5.19766728692163e-06], ['(*p)->const_value()->determine_type();', 5.19766728692163e-06], ['(*p)->var_value();', 5.19766728692163e-06], ['warnings', 5.19766728692163e-06], ['traverse(this);', 5.19766728692163e-06], ['block(Block*)', 5.19766728692163e-06], ['this->exprs_.push_back(expression_pointer);', 5.19766728692163e-06], ['conditionals.', 5.19766728692163e-06], ['find_eval_ordering;', 5.19766728692163e-06], ['(vds', 5.19766728692163e-06], ['vds->var()->var_value()->init();', 5.19766728692163e-06], ['arg(),', 5.19766728692163e-06], ['&find_eval_ordering);', 5.19766728692163e-06], ['Expression_statement*', 5.19766728692163e-06], ['es', 5.19766728692163e-06], ['(Find_eval_ordering::const_iterator', 5.19766728692163e-06], ['find_eval_ordering.begin();', 5.19766728692163e-06], ['find_eval_ordering.end();', 5.19766728692163e-06], ['early.', 5.19766728692163e-06], ['((*pexpr)->call_expression()', 5.19766728692163e-06], ['(*pexpr)->call_expression()->result_count()', 5.19766728692163e-06], ['ts;', 5.19766728692163e-06], ['Statement::make_statement(*pexpr,', 5.19766728692163e-06], ['block->insert_statement_before(*pindex,', 5.19766728692163e-06], ['++*pindex;', 5.19766728692163e-06], ['orig_init)', 5.19766728692163e-06], ['vds->var()->var_value()->set_init(init);', 5.19766728692163e-06], ['var->set_init(init);', 5.19766728692163e-06], ['rules.', 5.19766728692163e-06], ['pexpr;', 5.19766728692163e-06], ['find_shortcut;', 5.19766728692163e-06], ['s->variable_declaration_statement();', 5.19766728692163e-06], ['init->traverse(&init,', 5.19766728692163e-06], ['&find_shortcut);', 5.19766728692163e-06], ['pshortcut', 5.19766728692163e-06], ['find_shortcut.found();', 5.19766728692163e-06], ['snew);', 5.19766728692163e-06], ['&init)', 5.19766728692163e-06], ['RIGHT.', 5.19766728692163e-06], ['Local', 5.19766728692163e-06], ['Statement::make_temporary(var->type(),', 5.19766728692163e-06], ['ts->set_is_address_taken();', 5.19766728692163e-06], ['var->set_toplevel_decl(ts);', 5.19766728692163e-06], ['Convert_recover', 5.19766728692163e-06], ['Build_recover_thunks', 5.19766728692163e-06], ['Traverse(traverse_functions),', 5.19766728692163e-06], ['Named_object::make_variable(buf,', 5.19766728692163e-06], ['Swap', 5.19766728692163e-06], ['(now)', 5.19766728692163e-06], ['Change', 5.19766728692163e-06], ['can_recover_no', 5.19766728692163e-06], ['bindings,', 5.19766728692163e-06], ['Variable(Type::lookup_bool_type(),', 5.19766728692163e-06], ['runtime.canrecover(__builtin_return_address()).', 5.19766728692163e-06], ['voidptr_type', 5.19766728692163e-06], ['voidptr_type,', 5.19766728692163e-06], ['Build_method_tables', 5.19766728692163e-06], ['std::vector<Interface_type*>&', 5.19766728692163e-06], ['(std::vector<Interface_type*>::const_iterator', 5.19766728692163e-06], ['++pi)', 5.19766728692163e-06], ['nt->interface_method_table(*p,', 5.19766728692163e-06], ['false)->get_backend(&context);', 5.19766728692163e-06], ['true)->get_backend(&context);', 5.19766728692163e-06], ['st->interface_method_table(*p,', 5.19766728692163e-06], ['Check_return_statements_traverse', 5.19766728692163e-06], ['budget.', 5.19766728692163e-06], ['Traverse(traverse_statements', 5.19766728692163e-06], ['(*this->available_', 5.19766728692163e-06], ['*this->available_', 5.19766728692163e-06], ['Mark_inline_candidates', 5.19766728692163e-06], ['traverse_types)', 5.19766728692163e-06], ['inlining.', 5.19766728692163e-06], ['budget_heuristic;', 5.19766728692163e-06], ['iwb(&budget);', 5.19766728692163e-06], ['func->block()->traverse(&iwb);', 5.19766728692163e-06], ['(budget', 5.19766728692163e-06], ['func->set_export_for_inlining();', 5.19766728692163e-06], ['prefix;', 5.19766728692163e-06], ['this->c_header_.c_str());', 5.19766728692163e-06], ['name[1]', 5.19766728692163e-06], ['types.push_back(no);', 5.19766728692163e-06], ['(!types.empty())', 5.19766728692163e-06], ['types.front();', 5.19766728692163e-06], ['types.begin();', 5.19766728692163e-06], ['++pd)', 5.19766728692163e-06], ['pw', 5.19766728692163e-06], ['Convert_named_types', 5.19766728692163e-06], ['in_unique_section_(false),', 5.19766728692163e-06], ['this->type_->results();', 5.19766728692163e-06], ['this->block_;', 5.19766728692163e-06], ['gogo->pack_hidden_name(buf,', 5.19766728692163e-06], ['block->bindings()->add_result_variable(name,', 5.19766728692163e-06], ['this->results_->push_back(no);', 5.19766728692163e-06], ['(this->pragmas_', 5.19766728692163e-06], ['GOPRAGMA_NOINTERFACE)', 5.19766728692163e-06], ['var->set_is_used();', 5.19766728692163e-06], ['this->closure_var_;', 5.19766728692163e-06], ['var_type;', 5.19766728692163e-06], ['lnull', 5.19766728692163e-06], ['std::pair<Labels::iterator,', 5.19766728692163e-06], ['this->labels_.insert(std::make_pair(label_name,', 5.19766728692163e-06], ['lnull));', 5.19766728692163e-06], ['"label', 5.19766728692163e-06], ['Gogo::message_name(label_name).c_str());', 5.19766728692163e-06], ['label->set_is_used();', 5.19766728692163e-06], ['go_assert(this->fndecl_', 5.19766728692163e-06], ['Traverse::traverse_blocks', 5.19766728692163e-06], ['Traverse::traverse_statements', 5.19766728692163e-06], ['this->descriptor_', 5.19766728692163e-06], ['Expression::make_func_descriptor(no);', 5.19766728692163e-06], ['this->descriptor_;', 5.19766728692163e-06], ['panicing', 5.19766728692163e-06], ['marker', 5.19766728692163e-06], ['defer.', 5.19766728692163e-06], ['this->defer_stack_', 5.19766728692163e-06], ['Expression::make_temporary_reference(this->defer_stack_,', 5.19766728692163e-06], ['nointerface,', 5.19766728692163e-06], ['fntype->receiver();', 5.19766728692163e-06], ['indent);', 5.19766728692163e-06], ['Linemap::location_to_line(loc));', 5.19766728692163e-06], ['Typed_identifier_list**', 5.19766728692163e-06], ['*nointerface', 5.19766728692163e-06], ['*preceiver', 5.19766728692163e-06], ['escape_note', 5.19766728692163e-06], ['llen', 5.19766728692163e-06], ['(this->fndecl_', 5.19766728692163e-06], ['is_init_fn', 5.19766728692163e-06], ['(this->enclosing_', 5.19766728692163e-06], ['asm_name;', 5.19766728692163e-06], ['(!this->asm_name_.empty())', 5.19766728692163e-06], ['gogo->function_asm_name(no->name(),', 5.19766728692163e-06], ['rtype);', 5.19766728692163e-06], ['behaves', 5.19766728692163e-06], ['differently', 5.19766728692163e-06], ['((this->pragmas_', 5.19766728692163e-06], ['disable', 5.19766728692163e-06], ['disable_split_stack', 5.19766728692163e-06], ['nointerface', 5.19766728692163e-06], ['gogo->backend()->function(functype,', 5.19766728692163e-06], ['no->get_id(gogo),', 5.19766728692163e-06], ['this->descriptor_->get_backend(&context);', 5.19766728692163e-06], ['(fntype->receiver()', 5.19766728692163e-06], ['(*p)->get_backend_variable(gogo,', 5.19766728692163e-06], ['(*p)->name()', 5.19766728692163e-06], ['parm_var', 5.19766728692163e-06], ['parm_no', 5.19766728692163e-06], ['parm_var);', 5.19766728692163e-06], ['parm_no->get_backend_variable(gogo,', 5.19766728692163e-06], ['Expression::make_var_reference(parm_no,', 5.19766728692163e-06], ['((*p)->var_value()->is_in_heap())', 5.19766728692163e-06], ['installed', 5.19766728692163e-06], ['var_decls', 5.19766728692163e-06], ['defer_init', 5.19766728692163e-06], ['code_stmt);', 5.19766728692163e-06], ['except,', 5.19766728692163e-06], ['Runtime::make_call(Runtime::CHECKDEFER,', 5.19766728692163e-06], ['stmts.push_back(gogo->backend()->expression_statement(this->fndecl_,', 5.19766728692163e-06], ['ret_bstmt', 5.19766728692163e-06], ['this->return_value(gogo,', 5.19766728692163e-06], ['gogo->backend()->statement_list(stmts);', 5.19766728692163e-06], ['vals.size();', 5.19766728692163e-06], ['Block.', 5.19766728692163e-06], ['bindings_(new', 5.19766728692163e-06], ['this->statements_.insert(this->statements_.begin()', 5.19766728692163e-06], ['e_or_t', 5.19766728692163e-06], ['Traverse::traverse_types);', 5.19766728692163e-06], ['e_or_t_or_s', 5.19766728692163e-06], ['(e_or_t', 5.19766728692163e-06], ['Traverse::traverse_statements);', 5.19766728692163e-06], ['Traverse::traverse_constants)', 5.19766728692163e-06], ['tc', 5.19766728692163e-06], ['(tc', 5.19766728692163e-06], ['Type::traverse(tc,', 5.19766728692163e-06], ['Traverse::traverse_variables)', 5.19766728692163e-06], ['Type::traverse(tv,', 5.19766728692163e-06], ['e_or_t_or_s)', 5.19766728692163e-06], ['traverse_mask);', 5.19766728692163e-06], ['traversed.', 5.19766728692163e-06], ['turn.', 5.19766728692163e-06], ['(std::vector<Statement*>::const_iterator', 5.19766728692163e-06], ['this->statements_.begin();', 5.19766728692163e-06], ['this->statements_.end();', 5.19766728692163e-06], ['efb->indent();', 5.19766728692163e-06], ['efb->increment_indent();', 5.19766728692163e-06], ['efb->decrement_indent();', 5.19766728692163e-06], ['brace', 5.19766728692163e-06], ['//%d\\n",', 5.19766728692163e-06], ['Import_function_body', 5.19766728692163e-06], ['sloc', 5.19766728692163e-06], ['ifb->off();', 5.19766728692163e-06], ['body.length())', 5.19766728692163e-06], ['at_end', 5.19766728692163e-06], ['indent;', 5.19766728692163e-06], ["body.find('\\n',", 5.19766728692163e-06], ['off);', 5.19766728692163e-06], ["'0';", 5.19766728692163e-06], ['ifb->set_off(off);', 5.19766728692163e-06], ['function));', 5.19766728692163e-06], ['go_assert(function', 5.19766728692163e-06], ['function->func_value()->get_or_make_decl(gogo,', 5.19766728692163e-06], ['subcontext(gogo,', 5.19766728692163e-06], ['BFROM', 5.19766728692163e-06], ['BTO', 5.19766728692163e-06], ['BFROM.', 5.19766728692163e-06], ['cto)', 5.19766728692163e-06], ['block->bindings()->end_definitions());', 5.19766728692163e-06], ['colon', 5.19766728692163e-06], ['(colon', 5.19766728692163e-06], ['outer,', 5.19766728692163e-06], ['Variable.', 5.19766728692163e-06], ['gogo->var_depends_on(this);', 5.19766728692163e-06], ['dep->is_variable())', 5.19766728692163e-06], ['global_inserter;', 5.19766728692163e-06], ['global_inserter', 5.19766728692163e-06], ['Statement_inserter(gogo,', 5.19766728692163e-06], ['&global_inserter;', 5.19766728692163e-06], ['this->init_->type()->interface_type()', 5.19766728692163e-06], ['!this->init_->is_variable())', 5.19766728692163e-06], ['go_assert(this->is_global_);', 5.19766728692163e-06], ['definition");', 5.19766728692163e-06], ['expr->type();', 5.19766728692163e-06], ['t->channel_type()->element_type();', 5.19766728692163e-06], ['Variable::type()', 5.19766728692163e-06], ['tge', 5.19766728692163e-06], ['this->init_->type_guard_expression();', 5.19766728692163e-06], ['go_assert(tge', 5.19766728692163e-06], ['tge->expr();', 5.19766728692163e-06], ['(this->type_from_init_tuple_)', 5.19766728692163e-06], ['this->type_from_tuple(init,', 5.19766728692163e-06], ['(this->type_from_range_index_', 5.19766728692163e-06], ['this->type_from_range_value_)', 5.19766728692163e-06], ['this->type_from_range(init,', 5.19766728692163e-06], ['this->type_from_range_index_,', 5.19766728692163e-06], ['(this->type_from_chan_element_)', 5.19766728692163e-06], ['this->type_from_chan_element(init,', 5.19766728692163e-06], ['this->init_->determine_type(&context);', 5.19766728692163e-06], ['call");', 5.19766728692163e-06], ['go_assert(this->preinit_', 5.19766728692163e-06], ['Expression::make_cast(this->type(),', 5.19766728692163e-06], ['pre-init', 5.19766728692163e-06], ['(var_decl', 5.19766728692163e-06], ['block_stmt', 5.19766728692163e-06], ['(this->backend_', 5.19766728692163e-06], ['gogo->backend();', 5.19766728692163e-06], ['(this->is_in_heap())', 5.19766728692163e-06], ['(this->is_non_escaping_address_taken_', 5.19766728692163e-06], ['!this->is_in_heap());', 5.19766728692163e-06], ['bvar_decl', 5.19766728692163e-06], ['backend->local_variable(bfunction,', 5.19766728692163e-06], ['this->backend_;', 5.19766728692163e-06], ['this->expr_->determine_type(&context);', 5.19766728692163e-06], ['(!this->type_->is_abstract())', 5.19766728692163e-06], ['const_decl', 5.19766728692163e-06], ['this->methods_.push_back(ret);', 5.19766728692163e-06], ['NAMED_OBJECT_SINK);', 5.19766728692163e-06], ['NAMED_OBJECT_UNKNOWN);', 5.19766728692163e-06], ['Unknown_name*', 5.19766728692163e-06], ['NAMED_OBJECT_TYPE_DECLARATION);', 5.19766728692163e-06], ['NAMED_OBJECT_FUNC_DECLARATION);', 5.19766728692163e-06], ['alias,', 5.19766728692163e-06], ['Gogo::message_name(this->name_);', 5.19766728692163e-06], ['named_type)', 5.19766728692163e-06], ['NAMED_OBJECT_UNINITIALIZED:', 5.19766728692163e-06], ['NAMED_OBJECT_UNKNOWN:', 5.19766728692163e-06], ['NAMED_OBJECT_FUNC_DECLARATION:', 5.19766728692163e-06], ['%<%s%>', 5.19766728692163e-06], ['decl_name;', 5.19766728692163e-06], ['decl_name', 5.19766728692163e-06], ['std::vector<Btype*>&', 5.19766728692163e-06], ['std::vector<Bfunction*>&', 5.19766728692163e-06], ['(!Gogo::is_erroneous_name(this->name_))', 5.19766728692163e-06], ['Contour::iterator', 5.19766728692163e-06], ['Contour::const_iterator', 5.19766728692163e-06], ['this->bindings_.find(name);', 5.19766728692163e-06], ['this->named_objects_.begin();', 5.19766728692163e-06], ['this->named_objects_.end();', 5.19766728692163e-06], ['(named_object->package()', 5.19766728692163e-06], ['new_object;', 5.19766728692163e-06], ['(new_object->is_type_declaration())', 5.19766728692163e-06], ['this->named_objects_.push_back(old_object);', 5.19766728692163e-06], ['go_error_at(new_object->location(),', 5.19766728692163e-06], ['this->begin_declarations();', 5.19766728692163e-06], ['this->end_declarations();', 5.19766728692163e-06], ['(this->blabel_', 5.19766728692163e-06], ['function->get_decl();', 5.19766728692163e-06], ['this->blabel_', 5.19766728692163e-06], ['context->backend()->label(bfunction,', 5.19766728692163e-06], ['this->blabel_;', 5.19766728692163e-06], ['dummy_label;', 5.19766728692163e-06], ['this->get_blabel(context);', 5.19766728692163e-06], ['context->backend()->label_definition_statement(blabel);', 5.19766728692163e-06], ['context->backend()->goto_statement(blabel,', 5.19766728692163e-06], ['(this->pkgpath_symbol_.empty())', 5.19766728692163e-06], ['this->aliases_.find(alias);', 5.19766728692163e-06], ['(this->fake_uses_.empty())', 5.19766728692163e-06], ['usages', 5.19766728692163e-06], ['(this->types_seen_', 5.19766728692163e-06], ['(this->expressions_seen_', 5.19766728692163e-06], ['type->classification()', 5.19766728692163e-06], ['Type::TYPE_ARRAY', 5.19766728692163e-06], ['std::pair<Types_seen::iterator,', 5.19766728692163e-06], ['!ins.second;', 5.19766728692163e-06], ['(this->var_', 5.19766728692163e-06], ['emulation', 5.19766728692163e-06], ['(double_type_node),', 5.19766728692163e-06], ['wi', 5.19766728692163e-06], ['&overflow,', 5.19766728692163e-06], ['(uint64_t', 5.19766728692163e-06], ['this->rv', 5.19766728692163e-06], ['(d', 5.19766728692163e-06], ['Overload', 5.19766728692163e-06], ['MINUS_EXPR,', 5.19766728692163e-06], ['RDIV_EXPR,', 5.19766728692163e-06], ['(this->rv', 5.19766728692163e-06], ['&q,', 5.19766728692163e-06], ['NEGATE_EXPR,', 5.19766728692163e-06], ['(real_compare', 5.19766728692163e-06], ['&inst_base', 5.19766728692163e-06], ['(inst_base);', 5.19766728692163e-06], ['BRIG_OPCODE_LDQUEUEWRITEINDEX', 5.19766728692163e-06], ['BRIG_OPCODE_STQUEUEWRITEINDEX', 5.19766728692163e-06], ['add_to_globals;', 5.19766728692163e-06], ['"unsafe",', 5.19766728692163e-06], ['&add_to_globals);', 5.19766728692163e-06], ['+INF', 5.19766728692163e-06], ['&w0,', 5.19766728692163e-06], ['&w1,', 5.19766728692163e-06], ['w1,', 5.19766728692163e-06], ['MULT_EXPR:', 5.19766728692163e-06], ['UB]', 5.19766728692163e-06], ['MAY_BE_NONZERO', 5.19766728692163e-06], ['MUST_BE_NONZERO', 5.19766728692163e-06], ['&lb,', 5.19766728692163e-06], ['&ub,', 5.19766728692163e-06], ['wi::minus_one', 5.19766728692163e-06], ['(lb.get_precision', 5.19766728692163e-06], ['(lb,', 5.19766728692163e-06], ['ub))', 5.19766728692163e-06], ['wi::lt_p', 5.19766728692163e-06], ['wide_int_range_order_set', 5.19766728692163e-06], ['(w2,', 5.19766728692163e-06], ['w3,', 5.19766728692163e-06], ['RES_UB].', 5.19766728692163e-06], ['wide_int_range_cross_product', 5.19766728692163e-06], ['cp1,', 5.19766728692163e-06], ['cp2,', 5.19766728692163e-06], ['cp3,', 5.19766728692163e-06], ['(vr0_lb,', 5.19766728692163e-06], ['vr0_ub))', 5.19766728692163e-06], ['cp1;', 5.19766728692163e-06], ['(vr1_lb,', 5.19766728692163e-06], ['vr1_ub))', 5.19766728692163e-06], ['wide_int_range_mult_wrapping', 5.19766728692163e-06], ['2*prec', 5.19766728692163e-06], ['sizem1', 5.19766728692163e-06], ['prod0', 5.19766728692163e-06], ['min1;', 5.19766728692163e-06], ['max1;', 5.19766728692163e-06], ['prod2', 5.19766728692163e-06], ['prod3', 5.19766728692163e-06], ['products', 5.19766728692163e-06], ['(prod0', 5.19766728692163e-06], ['prod3)', 5.19766728692163e-06], ['prod3);', 5.19766728692163e-06], ['(prod2,', 5.19766728692163e-06], ['multiplicative', 5.19766728692163e-06], ['ranges:', 5.19766728692163e-06], ['[VR0_LB,', 5.19766728692163e-06], ['VR0_UB]', 5.19766728692163e-06], ['[VR1_LB,', 5.19766728692163e-06], ['VR1_LB]', 5.19766728692163e-06], ['swapped.', 5.19766728692163e-06], ['mix', 5.19766728692163e-06], ['bound_shift', 5.19766728692163e-06], ['low_bound', 5.19766728692163e-06], ['bound;', 5.19766728692163e-06], ['high_bound', 5.19766728692163e-06], ['complement;', 5.19766728692163e-06], ['(vr0_ub,', 5.19766728692163e-06], ['zeroes,', 5.19766728692163e-06], ['increases', 5.19766728692163e-06], ['vr0_lb))', 5.19766728692163e-06], ['decreases', 5.19766728692163e-06], ['easily', 5.19766728692163e-06], ['BIT_IOR_EXPR', 5.19766728692163e-06], ['Z,', 5.19766728692163e-06], ['(w,', 5.19766728692163e-06], ['among', 5.19766728692163e-06], ['lower_bound', 5.19766728692163e-06], ['upper_bound', 5.19766728692163e-06], ['Optimize', 5.19766728692163e-06], ['&ovf);', 5.19766728692163e-06], ['&vr1_max,', 5.19766728692163e-06], ['(wide_int_range_optimize_bit_op', 5.19766728692163e-06], ['must_be_nonzero0', 5.19766728692163e-06], ['must_be_nonzero1;', 5.19766728692163e-06], ['may_be_nonzero0', 5.19766728692163e-06], ['may_be_nonzero1;', 5.19766728692163e-06], ['(vr1_max,', 5.19766728692163e-06], ['wmax,sign))', 5.19766728692163e-06], ['vr1_max,', 5.19766728692163e-06], ['[-INF,', 5.19766728692163e-06], ['!wi::cmps', 5.19766728692163e-06], ['ABS', 5.19766728692163e-06], ['wi::smax', 5.19766728692163e-06], ['ABS_EXPR', 5.19766728692163e-06], ['MAX].', 5.19766728692163e-06], ['VR0', 5.19766728692163e-06], ['(vr0_min);', 5.19766728692163e-06], ['(vr0_max);', 5.19766728692163e-06], ['MAX.', 5.19766728692163e-06], ['&vr0_max)', 5.19766728692163e-06], ['inner_sign);', 5.19766728692163e-06], ['meaningful', 5.19766728692163e-06], ['divisor_min,', 5.19766728692163e-06], ['(!wide_int_range_multiplicative_op', 5.19766728692163e-06], ['<dir>', 5.19766728692163e-06], ['-MF', 5.19766728692163e-06], ['global_context;', 5.19766728692163e-06], ['TARGET', 5.19766728692163e-06], ['d_option.deps_target', 5.19766728692163e-06], ['*q', 5.19766728692163e-06], ['deps_write', 5.19766728692163e-06], ['modlist.push', 5.19766728692163e-06], ['column++;', 5.19766728692163e-06], ['phony', 5.19766728692163e-06], ['m->parent', 5.19766728692163e-06], ['buffer->writenl', 5.19766728692163e-06], ['d_init_options', 5.19766728692163e-06], ['global.params.useInline', 5.19766728692163e-06], ['global.params.obj', 5.19766728692163e-06], ['global.params.hdrStripPlainFunctions', 5.19766728692163e-06], ['global.params.betterC', 5.19766728692163e-06], ['global.params.allInst', 5.19766728692163e-06], ['d_option.fonly', 5.19766728692163e-06], ['d_option.multilib', 5.19766728692163e-06], ['d_option.prefix', 5.19766728692163e-06], ['d_option.deps_filename_user', 5.19766728692163e-06], ['d_option.deps_phony', 5.19766728692163e-06], ['d_option.stdinc', 5.19766728692163e-06], ['d_init_options_struct', 5.19766728692163e-06], ['flag.', 5.19766728692163e-06], ['d_init', 5.19766728692163e-06], ['specifies', 5.19766728692163e-06], ['(false);', 5.19766728692163e-06], ['Target::_init', 5.19766728692163e-06], ['add_import_paths', 5.19766728692163e-06], ['d_init_ts', 5.19766728692163e-06], ['MARK_TS_TYPED', 5.19766728692163e-06], ['d_handle_option', 5.19766728692163e-06], ['scode,', 5.19766728692163e-06], ['BOUNDSCHECKon', 5.19766728692163e-06], ['BOUNDSCHECKoff;', 5.19766728692163e-06], ['BOUNDSCHECKsafeonly', 5.19766728692163e-06], ['(arg[0]))', 5.19766728692163e-06], ['integral_argument', 5.19766728692163e-06], ['(Identifier::isValidIdentifier', 5.19766728692163e-06], ['arg)))', 5.19766728692163e-06], ['OPT_fonly_:', 5.19766728692163e-06], ['global.params.release', 5.19766728692163e-06], ['global.params.vtls', 5.19766728692163e-06], ['global.params.vfield', 5.19766728692163e-06], ['global.params.vcomplex', 5.19766728692163e-06], ['global.params.useDIP25', 5.19766728692163e-06], ['OPT_MM:', 5.19766728692163e-06], ['OPT_M:', 5.19766728692163e-06], ['OPT_v:', 5.19766728692163e-06], ['DIAGNOSTICerror;', 5.19766728692163e-06], ['d_post_options', 5.19766728692163e-06], ['empty_modify_p', 5.19766728692163e-06], ['CALL_EXPR:', 5.19766728692163e-06], ['alone', 5.19766728692163e-06], ['d_gimplify_expr', 5.19766728692163e-06], ['(*expr_p);', 5.19766728692163e-06], ['(op0),', 5.19766728692163e-06], ['pre_p,', 5.19766728692163e-06], ['pre_p);', 5.19766728692163e-06], ['*expr_p', 5.19766728692163e-06], ['has_side_effects', 5.19766728692163e-06], ['new_arg', 5.19766728692163e-06], ['GS_ERROR)', 5.19766728692163e-06], ['entry;', 5.19766728692163e-06], ['d_parse_file', 5.19766728692163e-06], ['writer', 5.19766728692163e-06], ['(debug_hooks->start_end_main_source_file)', 5.19766728692163e-06], ['Handling', 5.19766728692163e-06], ['global.params.doDocComments,', 5.19766728692163e-06], ['global.params.doHdrGeneration);', 5.19766728692163e-06], ['obstack_1grow', 5.19766728692163e-06], ['(&buffer,', 5.19766728692163e-06], ['suffix.', 5.19766728692163e-06], ['strip', 5.19766728692163e-06], ['gendocfile', 5.19766728692163e-06], ["'header'", 5.19766728692163e-06], ['Module::rootModule)', 5.19766728692163e-06], ['"unable', 5.19766728692163e-06], ['(builtin_modules.dim', 5.19766728692163e-06], ['builtin_modules.pop', 5.19766728692163e-06], ['(global.errors', 5.19766728692163e-06], ['((void', 5.19766728692163e-06], ['buf.data,', 5.19766728692163e-06], ['buf.offset);', 5.19766728692163e-06], ['writeFile', 5.19766728692163e-06], ['(&buf,', 5.19766728692163e-06], ['globals.', 5.19766728692163e-06], ['d_finish_compilation', 5.19766728692163e-06], ['(mode))', 5.19766728692163e-06], ['inner_mode', 5.19766728692163e-06], ['(machine_mode)', 5.19766728692163e-06], ['GET_MODE_INNER', 5.19766728692163e-06], ['(inner_mode,', 5.19766728692163e-06], ['(inner_type', 5.19766728692163e-06], ['build_complex_type', 5.19766728692163e-06], ['(inner_type,', 5.19766728692163e-06], ['d_type_for_size', 5.19766728692163e-06], ['(d_byte_type))', 5.19766728692163e-06], ['(d_short_type))', 5.19766728692163e-06], ['(d_int_type))', 5.19766728692163e-06], ['(d_long_type))', 5.19766728692163e-06], ['d_type_promotes_to', 5.19766728692163e-06], ['get_global_context', 5.19766728692163e-06], ['current_binding_level->names;', 5.19766728692163e-06], ['d_getdecls', 5.19766728692163e-06], ['d_get_alias_set', 5.19766728692163e-06], ['rules,', 5.19766728692163e-06], ['strict', 5.19766728692163e-06], ['programming', 5.19766728692163e-06], ['d_types_compatible_p', 5.19766728692163e-06], ['TYPE_ASSOCIATIVE_ARRAY', 5.19766728692163e-06], ['d_finish_incomplete_decl', 5.19766728692163e-06], ['DECL_SIZE', 5.19766728692163e-06], ['size_zero_node;', 5.19766728692163e-06], ['d_classify_record', 5.19766728692163e-06], ['t->ty', 5.19766728692163e-06], ['d_tree_size', 5.19766728692163e-06], ['d_print_xnode', 5.19766728692163e-06], ['(node))', 5.19766728692163e-06], ['(node),', 5.19766728692163e-06], ['NODE', 5.19766728692163e-06], ['lang', 5.19766728692163e-06], ['lang_type', 5.19766728692163e-06], ['(yet).', 5.19766728692163e-06], ['*ld', 5.19766728692163e-06], ['d_dup_lang_specific_decl', 5.19766728692163e-06], ['d_keep_list', 5.19766728692163e-06], ['d_eh_personality_decl;', 5.19766728692163e-06], ['d_eh_personality', 5.19766728692163e-06], ['d_build_eh_runtime_type', 5.19766728692163e-06], ['LANG_HOOKS_NAME', 5.19766728692163e-06], ['LANG_HOOKS_INIT', 5.19766728692163e-06], ['LANG_HOOKS_INIT_TS', 5.19766728692163e-06], ['LANG_HOOKS_INIT_OPTIONS', 5.19766728692163e-06], ['LANG_HOOKS_INIT_OPTIONS_STRUCT', 5.19766728692163e-06], ['LANG_HOOKS_OPTION_LANG_MASK', 5.19766728692163e-06], ['LANG_HOOKS_HANDLE_OPTION', 5.19766728692163e-06], ['LANG_HOOKS_POST_OPTIONS', 5.19766728692163e-06], ['LANG_HOOKS_PARSE_FILE', 5.19766728692163e-06], ['LANG_HOOKS_COMMON_ATTRIBUTE_TABLE', 5.19766728692163e-06], ['LANG_HOOKS_ATTRIBUTE_TABLE', 5.19766728692163e-06], ['LANG_HOOKS_GET_ALIAS_SET', 5.19766728692163e-06], ['LANG_HOOKS_TYPES_COMPATIBLE_P', 5.19766728692163e-06], ['LANG_HOOKS_BUILTIN_FUNCTION', 5.19766728692163e-06], ['LANG_HOOKS_REGISTER_BUILTIN_TYPE', 5.19766728692163e-06], ['LANG_HOOKS_FINISH_INCOMPLETE_DECL', 5.19766728692163e-06], ['LANG_HOOKS_GIMPLIFY_EXPR', 5.19766728692163e-06], ['LANG_HOOKS_CLASSIFY_RECORD', 5.19766728692163e-06], ['LANG_HOOKS_TREE_SIZE', 5.19766728692163e-06], ['LANG_HOOKS_PRINT_XNODE', 5.19766728692163e-06], ['LANG_HOOKS_DUP_LANG_SPECIFIC_DECL', 5.19766728692163e-06], ['LANG_HOOKS_EH_PERSONALITY', 5.19766728692163e-06], ['LANG_HOOKS_EH_RUNTIME_TYPE', 5.19766728692163e-06], ['LANG_HOOKS_PUSHDECL', 5.19766728692163e-06], ['LANG_HOOKS_GETDECLS', 5.19766728692163e-06], ['LANG_HOOKS_GLOBAL_BINDINGS_P', 5.19766728692163e-06], ['LANG_HOOKS_TYPE_FOR_MODE', 5.19766728692163e-06], ['LANG_HOOKS_TYPE_FOR_SIZE', 5.19766728692163e-06], ['LANG_HOOKS_TYPE_PROMOTES_TO', 5.19766728692163e-06], ['lang_hooks', 5.19766728692163e-06], ['phobos_action', 5.19766728692163e-06], ['PHOBOS_DEFAULT', 5.19766728692163e-06], ['need_spec', 5.19766728692163e-06], ['saw_debug_flag', 5.19766728692163e-06], ['static_link', 5.19766728692163e-06], ['-shared-libgcc', 5.19766728692163e-06], ['phobos.', 5.19766728692163e-06], ['stuff.', 5.19766728692163e-06], ['num_args', 5.19766728692163e-06], ['saw_opt_o', 5.19766728692163e-06], ['saw_opt_c', 5.19766728692163e-06], ['saw_opt_S', 5.19766728692163e-06], ['argc', 5.19766728692163e-06], ['strcpy', 5.19766728692163e-06], ['libphobos.', 5.19766728692163e-06], ['.o', 5.19766728692163e-06], ['PHOBOS_NOLINK)', 5.19766728692163e-06], ['PHOBOS_STATIC;', 5.19766728692163e-06], ['*suffix', 5.19766728692163e-06], ['strrchr', 5.19766728692163e-06], ['(only_source_option,', 5.19766728692163e-06], ['".d")', 5.19766728692163e-06], ['(first_d_file', 5.19766728692163e-06], ['new_decoded_options[j++]', 5.19766728692163e-06], ['--j;', 5.19766728692163e-06], ['(only_source_option)', 5.19766728692163e-06], ['baselen', 5.19766728692163e-06], ["'s';", 5.19766728692163e-06], ['(OPT_o,', 5.19766728692163e-06], ['need_phobos)', 5.19766728692163e-06], ['HAVE_LD_STATIC_DYNAMIC', 5.19766728692163e-06], ['PHOBOS_DYNAMIC', 5.19766728692163e-06], ['static_link)', 5.19766728692163e-06], ['LD_DYNAMIC_OPTION,', 5.19766728692163e-06], ['PHOBOS_STATIC', 5.19766728692163e-06], ['LD_STATIC_OPTION,', 5.19766728692163e-06], ['success', 5.19766728692163e-06], ['lang_specific_pre_link', 5.19766728692163e-06], ['m_has_barriers', 5.19766728692163e-06], ['m_calls_analyzed', 5.19766728692163e-06], ['m_is_wg_function', 5.19766728692163e-06], ['(name.c_str', 5.19766728692163e-06], ['name.size', 5.19766728692163e-06], ['(label_decl)', 5.19766728692163e-06], ['m_func_decl;', 5.19766728692163e-06], ['label_decl;', 5.19766728692163e-06], ['*brigVar,', 5.19766728692163e-06], ['(m_func_decl', 5.19766728692163e-06], ['dispatch', 5.19766728692163e-06], ['WG', 5.19766728692163e-06], ['(char)', 5.19766728692163e-06], ['((int)', 5.19766728692163e-06], ['(m_local_id_vars[i]),', 5.19766728692163e-06], ['cwgz_call', 5.19766728692163e-06], ['(m_cur_wg_size_vars[i]),', 5.19766728692163e-06], ['wgid_call', 5.19766728692163e-06], ['wgsize_call', 5.19766728692163e-06], ['long_long_integer_type_node,', 5.19766728692163e-06], ['DECL_NONLOCAL', 5.19766728692163e-06], ['occur', 5.19766728692163e-06], ['reg_size', 5.19766728692163e-06], ['regs_use_index', 5.19766728692163e-06], ['(*reg);', 5.19766728692163e-06], ['info.m_type_refs.begin', 5.19766728692163e-06], ['info.m_type_refs.end', 5.19766728692163e-06], ['max_refs_as_type_count', 5.19766728692163e-06], ['Drop', 5.19766728692163e-06], ['build_type_variant', 5.19766728692163e-06], ['m_abs_id_vars[dim];', 5.19766728692163e-06], ['m_cur_wg_size_vars[dim];', 5.19766728692163e-06], ['work-items.', 5.19766728692163e-06], ['(ivar)));', 5.19766728692163e-06], ['abs_id_var,', 5.19766728692163e-06], ['loop_body_label);', 5.19766728692163e-06], ['assign,', 5.19766728692163e-06], ['(PREINCREMENT_EXPR,', 5.19766728692163e-06], ['target_goto', 5.19766728692163e-06], ['if_stmt', 5.19766728692163e-06], ['target_goto,', 5.19766728692163e-06], ['work-items', 5.19766728692163e-06], ['tsi_last', 5.19766728692163e-06], ['Emits', 5.19766728692163e-06], ['m_name.substr', 5.19766728692163e-06], ['strstr;', 5.19766728692163e-06], ['strstr.str', 5.19766728692163e-06], ['KernelName', 5.19766728692163e-06], ['(void*', 5.19766728692163e-06], ['group_base_addr)', 5.19766728692163e-06], ['(_KernelName,', 5.19766728692163e-06], ['group_base_addr);', 5.19766728692163e-06], ['or,', 5.19766728692163e-06], ['(void_type_node),', 5.19766728692163e-06], ['restrict_char_ptr', 5.19766728692163e-06], ['(char_type_node),', 5.19766728692163e-06], ['context_arg', 5.19766728692163e-06], ['("__context"),', 5.19766728692163e-06], ['restrict_void_ptr);', 5.19766728692163e-06], ['context_arg;', 5.19766728692163e-06], ['("__group_base_addr"),', 5.19766728692163e-06], ['group_local_offset_arg', 5.19766728692163e-06], ['phsail_launch_kernel_call', 5.19766728692163e-06], ['kernel_func_ptr,', 5.19766728692163e-06], ['context_arg,', 5.19766728692163e-06], ['group_base_addr_arg,', 5.19766728692163e-06], ['ids', 5.19766728692163e-06], ['tsi_link_before', 5.19766728692163e-06], ['append_return_stmt', 5.19766728692163e-06], ['WG.', 5.19766728692163e-06], ['(m_has_allocas)', 5.19766728692163e-06], ['create_alloca_frame', 5.19766728692163e-06], ['result_assign', 5.19766728692163e-06], ['(RETURN_EXPR,', 5.19766728692163e-06], ["builtin's", 5.19766728692163e-06], ['(needs_workitem_context_data', 5.19766728692163e-06], ['BRIG_OPCODE_SAD', 5.19766728692163e-06], ['call_operands));', 5.19766728692163e-06], ['arg_type_chain', 5.19766728692163e-06], ['(arg_type_chain);', 5.19766728692163e-06], ['operand_types.push_back', 5.19766728692163e-06], ['operand_count', 5.19766728692163e-06], ['(4,', 5.19766728692163e-06], ['operand_count;', 5.19766728692163e-06], ['call_operands.at', 5.19766728692163e-06], ['(built_in)),', 5.19766728692163e-06], ['uint32_0', 5.19766728692163e-06], ['uint32_1', 5.19766728692163e-06], ['uint32_2', 5.19766728692163e-06], ['id0', 5.19766728692163e-06], ['uint32_0);', 5.19766728692163e-06], ['id1', 5.19766728692163e-06], ['uint32_1);', 5.19766728692163e-06], ['id2', 5.19766728692163e-06], ['id2_x_max0_x_max1', 5.19766728692163e-06], ['max0);', 5.19766728692163e-06], ['z_x_wgsx_wgsy', 5.19766728692163e-06], ['wg_size_x);', 5.19766728692163e-06], ['[dim];', 5.19766728692163e-06], ['brig_opcode)', 5.19766728692163e-06], ['BRIG_OPCODE_CURRENTWORKGROUPSIZE:', 5.19766728692163e-06], ['BRIG_OPCODE_WORKITEMFLATID:', 5.19766728692163e-06], ['BRIG_OPCODE_WORKITEMID:', 5.19766728692163e-06], ['BRIG_OPCODE_WORKGROUPID:', 5.19766728692163e-06], ['BRIG_OPCODE_WORKGROUPSIZE:', 5.19766728692163e-06], ['BRIG_OPCODE_WORKITEMFLATABSID:', 5.19766728692163e-06], ['opcodes', 5.19766728692163e-06], ['BRIG_OPCODE_BORROW', 5.19766728692163e-06], ['BRIG_OPCODE_CARRY', 5.19766728692163e-06], ['BRIG_OPCODE_BITINSERT)', 5.19766728692163e-06], ['BRIG_TYPE_S32)', 5.19766728692163e-06], ['BRIG_TYPE_S64)', 5.19766728692163e-06], ['BRIG_OPCODE_FLOOR:', 5.19766728692163e-06], ['BRIG_OPCODE_CEIL:', 5.19766728692163e-06], ['BRIG_OPCODE_SQRT:', 5.19766728692163e-06], ['BRIG_OPCODE_NSQRT:', 5.19766728692163e-06], ['BRIG_OPCODE_RINT:', 5.19766728692163e-06], ['BRIG_OPCODE_TRUNC:', 5.19766728692163e-06], ['BRIG_OPCODE_COPYSIGN:', 5.19766728692163e-06], ['BUILT_IN_COPYSIGN);', 5.19766728692163e-06], ['BRIG_OPCODE_NSIN:', 5.19766728692163e-06], ['BRIG_OPCODE_NLOG2:', 5.19766728692163e-06], ['BRIG_OPCODE_NEXP2:', 5.19766728692163e-06], ['BRIG_OPCODE_FMA:', 5.19766728692163e-06], ['BRIG_OPCODE_NFMA:', 5.19766728692163e-06], ['BRIG_OPCODE_NCOS:', 5.19766728692163e-06], ['BRIG_OPCODE_POPCOUNT:', 5.19766728692163e-06], ['BRIG_TYPE_S32', 5.19766728692163e-06], ['builtin_map::const_iterator', 5.19766728692163e-06], ['brig_type));', 5.19766728692163e-06], ['fp32,', 5.19766728692163e-06], ['built-in.', 5.19766728692163e-06], ['builtin;', 5.19766728692163e-06], ['&elements)', 5.19766728692163e-06], ['BRIG_OPCODE_DEBUGTRAP:', 5.19766728692163e-06], ['temp_var', 5.19766728692163e-06], ['cast,', 5.19766728692163e-06], ['(n)', 5.19766728692163e-06], ['VIEW_CONVERT_EXPR)', 5.19766728692163e-06], ['int_cst_value', 5.19766728692163e-06], ['TRUNC_DIV_EXPR;', 5.19766728692163e-06], ['NEGATE_EXPR;', 5.19766728692163e-06], ['BIT_NOT_EXPR;', 5.19766728692163e-06], ['BRIG_OPCODE_ST:', 5.19766728692163e-06], ['BRIG_OPCODE_BR:', 5.19766728692163e-06], ['BRIG_TYPE_U64', 5.19766728692163e-06], ['TREE_LIST;', 5.19766728692163e-06], ['B1', 5.19766728692163e-06], ['m_id_val_defs.end())', 5.19766728692163e-06], ['REG_VAR', 5.19766728692163e-06], ['reg_var)', 5.19766728692163e-06], ['2017', 5.19766728692163e-06], ['obvious', 5.19766728692163e-06], ['Mark_address_taken', 5.19766728692163e-06], ['function_(NULL)', 5.19766728692163e-06], ['call->args()->at(2);', 5.19766728692163e-06], ['Check_escape', 5.19766728692163e-06], ['((no->is_variable()', 5.19766728692163e-06], ['fe->closure()', 5.19766728692163e-06], ['Node::ESCAPE_HEAP)', 5.19766728692163e-06], ['Collect_writebarrierrec_functions', 5.19766728692163e-06], ['worklist)', 5.19766728692163e-06], ['worklist_(worklist)', 5.19766728692163e-06], ['GOPRAGMA_MARK)', 5.19766728692163e-06], ['Collect_callees', 5.19766728692163e-06], ['ce->fn()->func_expression();', 5.19766728692163e-06], ['no->is_function())', 5.19766728692163e-06], ['controlled', 5.19766728692163e-06], ['be,', 5.19766728692163e-06], ['runtime.writeBarrier', 5.19766728692163e-06], ['Write_barriers', 5.19766728692163e-06], ['(!var->type()->has_pointer())', 5.19766728692163e-06], ['(!var->type()->in_heap())', 5.19766728692163e-06], ['(var->type()->points_to()', 5.19766728692163e-06], ['!var->type()->points_to()->in_heap())', 5.19766728692163e-06], ['(s->classification())', 5.19766728692163e-06], ['Statement::STATEMENT_VARIABLE_DECLARATION:', 5.19766728692163e-06], ['(!var->is_in_heap())', 5.19766728692163e-06], ['this->gogo_->assign_with_write_barrier(function,', 5.19766728692163e-06], ['this->statements_added_.insert(assign);', 5.19766728692163e-06], ['write_barrier_var;', 5.19766728692163e-06], ['"runtime",', 5.19766728692163e-06], ['aie->array();', 5.19766728692163e-06], ['in_heap', 5.19766728692163e-06], ['Expression::make_temporary_reference(lhs_temp,', 5.19766728692163e-06], ['rhs_temp', 5.19766728692163e-06], ['Expression::make_temporary_reference(rhs_temp,', 5.19766728692163e-06], ['depending.', 5.19766728692163e-06], ['BrigDirectiveComment', 5.19766728692163e-06], ['(gccbrig_verbose)', 5.19766728692163e-06], ['basic_handler', 5.19766728692163e-06], ['restrict', 5.19766728692163e-06], ['functionality', 5.19766728692163e-06], ['solution', 5.19766728692163e-06], ['gcc.', 5.19766728692163e-06], ['intrinsic_decl', 5.19766728692163e-06], ['ALIAS,', 5.19766728692163e-06], ['MODULE,', 5.19766728692163e-06], ['DECO,', 5.19766728692163e-06], ['INTRINSIC_VA_ARG:', 5.19766728692163e-06], ['INTRINSIC_C_VA_ARG:', 5.19766728692163e-06], ['INTRINSIC_VASTART:', 5.19766728692163e-06], ['INTRINSIC_ADDS:', 5.19766728692163e-06], ['INTRINSIC_SUBS:', 5.19766728692163e-06], ['INTRINSIC_MULS:', 5.19766728692163e-06], ['INTRINSIC_NEGS:', 5.19766728692163e-06], ['INTRINSIC_VLOAD:', 5.19766728692163e-06], ['INTRINSIC_VSTORE:', 5.19766728692163e-06], ['INTRINSIC_POW:', 5.19766728692163e-06], ['pow()', 5.19766728692163e-06], ['(EXPR_LOCATION', 5.19766728692163e-06], ['bsf', 5.19766728692163e-06], ['expand_intrinsic_bsf', 5.19766728692163e-06], ['bsr()', 5.19766728692163e-06], ['bsr', 5.19766728692163e-06], ['expand_intrinsic_bsr', 5.19766728692163e-06], ['bit,', 5.19766728692163e-06], ['expand_intrinsic_bt', 5.19766728692163e-06], ['bitsize', 5.19766728692163e-06], ['bitnum,', 5.19766728692163e-06], ['bitsize);', 5.19766728692163e-06], ['size]', 5.19766728692163e-06], ['INTRINSIC_BTR)', 5.19766728692163e-06], ['ERROR_MARK);', 5.19766728692163e-06], ['expand_intrinsic_bswap', 5.19766728692163e-06], ['popcnt', 5.19766728692163e-06], ['expand_intrinsic_popcnt', 5.19766728692163e-06], ['square', 5.19766728692163e-06], ['expand_intrinsic_sqrt', 5.19766728692163e-06], ['expand_intrinsic_copysign', 5.19766728692163e-06], ['Prefer', 5.19766728692163e-06], ['expand_intrinsic_pow', 5.19766728692163e-06], ['(exptype)', 5.19766728692163e-06], ['va_arg(T)', 5.19766728692163e-06], ['given,', 5.19766728692163e-06], ['expand_intrinsic_vaarg', 5.19766728692163e-06], ['ap', 5.19766728692163e-06], ['(parmn)', 5.19766728692163e-06], ['ADDR_EXPR);', 5.19766728692163e-06], ['VA_ARG_EXP<ap>;', 5.19766728692163e-06], ['expand_intrinsic_vastart', 5.19766728692163e-06], ['y,', 5.19766728692163e-06], ['negs', 5.19766728692163e-06], ['expand_intrinsic_checkedint', 5.19766728692163e-06], ['INTRINSIC_NEGS)', 5.19766728692163e-06], ['IFN_SUB_OVERFLOW', 5.19766728692163e-06], ['(ubyte*', 5.19766728692163e-06], ['(ushort*', 5.19766728692163e-06], ['(uint*', 5.19766728692163e-06], ['(ulong*', 5.19766728692163e-06], ['reads', 5.19766728692163e-06], ['DCE)', 5.19766728692163e-06], ['reordered', 5.19766728692163e-06], ['thread.', 5.19766728692163e-06], ['expand_volatile_load', 5.19766728692163e-06], ['*(volatile', 5.19766728692163e-06], ['(ptrtype),', 5.19766728692163e-06], ['TYPE_QUAL_VOLATILE);', 5.19766728692163e-06], ['expand_volatile_store', 5.19766728692163e-06], ['m_blocks', 5.19766728692163e-06], ['XDELETEVEC', 5.19766728692163e-06], ['memory_block_pool::block_size)', 5.19766728692163e-06], ['chunk.', 5.19766728692163e-06], ['(chunk);', 5.19766728692163e-06], ['(m_parent.m_cf->m_func_decl);', 5.19766728692163e-06], ['m_parent.m_cf->m_generating_arg_block', 5.19766728692163e-06], ['Node.', 5.19766728692163e-06], ['reporting;', 5.19766728692163e-06], ['!this->object()->is_sink())', 5.19766728692163e-06], ['debugging;', 5.19766728692163e-06], ['obj.FmtShort.', 5.19766728692163e-06], ['literal";', 5.19766728692163e-06], ['(is_call)', 5.19766728692163e-06], ['Statement::STATEMENT_SWITCH:', 5.19766728692163e-06], ['Statement::STATEMENT_TYPE_SWITCH:', 5.19766728692163e-06], ['detailed', 5.19766728692163e-06], ['is_assigned', 5.19766728692163e-06], ['class_name;', 5.19766728692163e-06], ['e->var_expression()->named_object();', 5.19766728692163e-06], ['"PPARAMREF";', 5.19766728692163e-06], ['this->state_->loop_depth', 5.19766728692163e-06], ['Expression::EXPRESSION_BINARY:', 5.19766728692163e-06], ['"function', 5.19766728692163e-06], ['"defer";', 5.19766728692163e-06], ['Statement::STATEMENT_DEFER:', 5.19766728692163e-06], ['var_node', 5.19766728692163e-06], ['this->state_', 5.19766728692163e-06], ['this->state_;', 5.19766728692163e-06], ['shares', 5.19766728692163e-06], ['this->encoding_', 5.19766728692163e-06], ['(1', 5.19766728692163e-06], ['(e->temporary_reference_expression()', 5.19766728692163e-06], ['Node::ESCAPE_NONE', 5.19766728692163e-06], ['Node::ESCAPE_RETURN)', 5.19766728692163e-06], ['etype;', 5.19766728692163e-06], ['level.suffix_value()', 5.19766728692163e-06], ['Node::ESCAPE_HEAP;', 5.19766728692163e-06], ['level.value()', 5.19766728692163e-06], ['ESCAPE_RETURN_BITS;', 5.19766728692163e-06], ['ESCAPE_BITS_MASK_FOR_TAG;', 5.19766728692163e-06], ['Gogo::unpack_hidden_name(fn->name());', 5.19766728692163e-06], ['n->location();', 5.19766728692163e-06], ['this->loop_depth_;', 5.19766728692163e-06], ['n.', 5.19766728692163e-06], ['ind;', 5.19766728692163e-06], ['n->set_encoding(Node::ESCAPE_NONE);', 5.19766728692163e-06], ['escapement', 5.19766728692163e-06], ['Node::ESCAPE_UNKNOWN;', 5.19766728692163e-06], ['Discover', 5.19766728692163e-06], ['groups', 5.19766728692163e-06], ['(!this->debug_escape_hash().empty())', 5.19766728692163e-06], ['knows.', 5.19766728692163e-06], ['((*fn)->is_function())', 5.19766728692163e-06], ['fntype->set_is_tagged();', 5.19766728692163e-06], ['debug_function_name(*fn)', 5.19766728692163e-06], ['connection', 5.19766728692163e-06], ['*fn);', 5.19766728692163e-06], ['dst.', 5.19766728692163e-06], ['(std::set<Node*>::iterator', 5.19766728692163e-06], ['escapes[*n]', 5.19766728692163e-06], ['(*n)->encoding();', 5.19766728692163e-06], ['this->propagate_escape(context,', 5.19766728692163e-06], ['*n);', 5.19766728692163e-06], ['(this->debug_escape_level()', 5.19766728692163e-06], ['go_inform((*n)->location(),', 5.19766728692163e-06], ['(*n)->ast_format(this).c_str());', 5.19766728692163e-06], ['discovering', 5.19766728692163e-06], ['components.', 5.19766728692163e-06], ['Escape_analysis_discover', 5.19766728692163e-06], ['counter', 5.19766728692163e-06], ['this->visit(fn);', 5.19766728692163e-06], ['FN,', 5.19766728692163e-06], ['n+1.', 5.19766728692163e-06], ['tells', 5.19766728692163e-06], ['this->id++;', 5.19766728692163e-06], ['this->id;', 5.19766728692163e-06], ['this->component_ids_[fn]', 5.19766728692163e-06], ['group;', 5.19766728692163e-06], ['std::numeric_limits<int>::max();', 5.19766728692163e-06], ['Escape_discover_expr', 5.19766728692163e-06], ['(e->call_expression()', 5.19766728692163e-06], ['(e->func_expression()', 5.19766728692163e-06], ['e->func_expression()->closure()', 5.19766728692163e-06], ['Escape_analysis_loop', 5.19766728692163e-06], ['connectivity', 5.19766728692163e-06], ['Escape_analysis_assign', 5.19766728692163e-06], ['input-to-output', 5.19766728692163e-06], ['NOTE.', 5.19766728692163e-06], ['note,', 5.19766728692163e-06], ['std::vector<Node*>&', 5.19766728692163e-06], ['dsts,', 5.19766728692163e-06], ['following.', 5.19766728692163e-06], ['*Buffer)', 5.19766728692163e-06], ['Foo()', 5.19766728692163e-06], ['b.buf', 5.19766728692163e-06], ['b.buf[n:m]', 5.19766728692163e-06], ['lve', 5.19766728692163e-06], ['String_index_expression*', 5.19766728692163e-06], ['(rarray', 5.19766728692163e-06], ['rve', 5.19766728692163e-06], ['(is_for_statement)', 5.19766728692163e-06], ['this->context_->increase_loop_depth();', 5.19766728692163e-06], ['Node::make_node(s);', 5.19766728692163e-06], ['fn_name', 5.19766728692163e-06], ['this->context_->current_function_name();', 5.19766728692163e-06], ['esc:', 5.19766728692163e-06], ['fn_name.c_str(),', 5.19766728692163e-06], ['(var->is_variable()', 5.19766728692163e-06], ['switched', 5.19766728692163e-06], ['this->context_->current_function_name()).c_str(),', 5.19766728692163e-06], ['Defer', 5.19766728692163e-06], ['Node::make_node(call->fn());', 5.19766728692163e-06], ['(call->args()', 5.19766728692163e-06], ['arg_node', 5.19766728692163e-06], ['arg_node);', 5.19766728692163e-06], ['(expr->var_expression()', 5.19766728692163e-06], ['(expr->enclosed_var_expression()', 5.19766728692163e-06], ['move_to_heap(gogo,', 5.19766728692163e-06], ['append(slice1,', 5.19766728692163e-06], ['leaks', 5.19766728692163e-06], ['appendee);', 5.19766728692163e-06], ['fe->is_runtime_function())', 5.19766728692163e-06], ['(fe->runtime_code())', 5.19766728692163e-06], ['v.(T),', 5.19766728692163e-06], ['dst_node', 5.19766728692163e-06], ['Expression::EXPRESSION_STRING_CONCAT:', 5.19766728692163e-06], ['Expression::EXPRESSION_CONVERSION:', 5.19766728692163e-06], ['Expression::EXPRESSION_FIXED_ARRAY_CONSTRUCTION:', 5.19766728692163e-06], ['Expression::EXPRESSION_SLICE_CONSTRUCTION:', 5.19766728692163e-06], ['((*pexpr)->slice_literal()', 5.19766728692163e-06], ['this->assign(array_node,', 5.19766728692163e-06], ['Expression::EXPRESSION_STRUCT_CONSTRUCTION:', 5.19766728692163e-06], ['this->assign(struct_node,', 5.19766728692163e-06], ['Expression::EXPRESSION_SLICE_VALUE:', 5.19766728692163e-06], ['Expression::EXPRESSION_HEAP:', 5.19766728692163e-06], ['escapes,', 5.19766728692163e-06], ['Expression::EXPRESSION_BOUND_METHOD:', 5.19766728692163e-06], ['Expression::EXPRESSION_MAP_CONSTRUCTION:', 5.19766728692163e-06], ['enclosed_node', 5.19766728692163e-06], ['((*pexpr)->unary_expression()->op()', 5.19766728692163e-06], ['addr_state', 5.19766728692163e-06], ['addr_state->loop_depth', 5.19766728692163e-06], ['OPERATOR_AND', 5.19766728692163e-06], ['&x', 5.19766728692163e-06], ['loopdepth', 5.19766728692163e-06], ['Node::make_node(aie->array());', 5.19766728692163e-06], ['array_state->loop_depth;', 5.19766728692163e-06], ['Slicing', 5.19766728692163e-06], ['Node::make_node(call);', 5.19766728692163e-06], ['(std::vector<Node*>::iterator', 5.19766728692163e-06], ['this->context_->init_retvals(call_node,', 5.19766728692163e-06], ['retvals.begin();', 5.19766728692163e-06], ['retvals.end();', 5.19766728692163e-06], ['callee_bindings', 5.19766728692163e-06], ['std::vector<Node*>::iterator', 5.19766728692163e-06], ['rcvr_no', 5.19766728692163e-06], ['go_assert(rcvr_no', 5.19766728692163e-06], ['Node::make_node(rcvr_no);', 5.19766728692163e-06], ['(*p)->expr()->type()->points_to()', 5.19766728692163e-06], ['Gccgo', 5.19766728692163e-06], ['call_state', 5.19766728692163e-06], ['(*p)->expr()->type(),', 5.19766728692163e-06], ['preemptively', 5.19766728692163e-06], ['show', 5.19766728692163e-06], ['this->context_->track(*p);', 5.19766728692163e-06], ['src->details().c_str(),', 5.19766728692163e-06], ['indirection.', 5.19766728692163e-06], ['Expression::EXPRESSION_TEMPORARY_REFERENCE:', 5.19766728692163e-06], ['Temporary_statement.', 5.19766728692163e-06], ['(src->is_indirect())', 5.19766728692163e-06], ['src->expr();', 5.19766728692163e-06], ['e->call_expression();', 5.19766728692163e-06], ['(bce->code()', 5.19766728692163e-06], ['(call->fn()->func_expression()', 5.19766728692163e-06], ['call->fn()->func_expression()->is_runtime_function())', 5.19766728692163e-06], ['(call->fn()->func_expression()->runtime_code())', 5.19766728692163e-06], ['e->conversion_expression();', 5.19766728692163e-06], ['(e->type_guard_expression()', 5.19766728692163e-06], ['e->type_guard_expression()->expr();', 5.19766728692163e-06], ['Indexing', 5.19766728692163e-06], ['(e->string_index_expression()', 5.19766728692163e-06], ['e->temporary_reference_expression()->statement();', 5.19766728692163e-06], ['this->context_->add_dereference(src));', 5.19766728692163e-06], ['(content', 5.19766728692163e-06], ['dst->state(this->context_,', 5.19766728692163e-06], ['fn->func_value()->block()->bindings();', 5.19766728692163e-06], ['External', 5.19766728692163e-06], ['(fn->package()', 5.19766728692163e-06], ['Escape_analysis_flood', 5.19766728692163e-06], ['context_(context)', 5.19766728692163e-06], ['hit', 5.19766728692163e-06], ['address-of,', 5.19766728692163e-06], ['escaping', 5.19766728692163e-06], ['extra_loop_depth)', 5.19766728692163e-06], ['src_state->max_extra_loop_depth', 5.19766728692163e-06], ['level.suffix_value(),', 5.19766728692163e-06], ['dst_is_result', 5.19766728692163e-06], ['dst->encoding()', 5.19766728692163e-06], ['level={%d', 5.19766728692163e-06], ['level.copy();', 5.19766728692163e-06], ['src_state->flows.begin();', 5.19766728692163e-06], ['src_state->flows.end();', 5.19766728692163e-06], ['Node::max_encoding((src->encoding()', 5.19766728692163e-06], ['ESCAPE_CONTENT_ESCAPES),', 5.19766728692163e-06], ['content:', 5.19766728692163e-06], ['dst_state->loop_depth', 5.19766728692163e-06], ['encoding,', 5.19766728692163e-06], ['(src_leaks', 5.19766728692163e-06], ['(e->unary_expression()', 5.19766728692163e-06], ['e->unary_expression()->op()', 5.19766728692163e-06], ['e->unary_expression()->operand();', 5.19766728692163e-06], ['went', 5.19766728692163e-06], ['src->child(),', 5.19766728692163e-06], ['((e->field_reference_expression()', 5.19766728692163e-06], ['e->field_reference_expression()->expr()->unary_expression()', 5.19766728692163e-06], ['this->flood(level.increase(),', 5.19766728692163e-06], ['Escape_analysis_tag', 5.19766728692163e-06], ['touched', 5.19766728692163e-06], ['Node::ESCAPE_RETURN:', 5.19766728692163e-06], ['tagging', 5.19766728692163e-06], ['flooded,', 5.19766728692163e-06], ['retain', 5.19766728692163e-06], ['Reclaim', 5.19766728692163e-06], ['Nodes.', 5.19766728692163e-06], ['(function*', 5.19766728692163e-06], ['const_setcc_value', 5.19766728692163e-06], ['find_last_ccreg_values', 5.19766728692163e-06], ['prev_visited_bb)', 5.19766728692163e-06], ['*cbranch_insn,', 5.19766728692163e-06], ['cbranch_insn_bb,', 5.19766728692163e-06], ['branch_target_bb)', 5.19766728692163e-06], ['all_ccreg_values_equal', 5.19766728692163e-06], ['remove_ccreg_dead_unused_notes', 5.19766728692163e-06], ['(std::vector<ccreg_value>&', 5.19766728692163e-06], ['optimized.', 5.19766728692163e-06], ['(!INSN_P', 5.19766728692163e-06], ['("number', 5.19766728692163e-06], ['%u\\n",', 5.19766728692163e-06], ['branch_if;', 5.19766728692163e-06], ['branch_if', 5.19766728692163e-06], ['(cbranch_insn_bb)->dest)', 5.19766728692163e-06], ['(v.value);', 5.19766728692163e-06], ['prev_visited_bb.rend', 5.19766728692163e-06], ['values.begin', 5.19766728692163e-06], ['values.end', 5.19766728692163e-06], ['(m_ccreg));', 5.19766728692163e-06], ['remove_note', 5.19766728692163e-06], ['BrigDirectiveControl', 5.19766728692163e-06], ['operands.push_back', 5.19766728692163e-06], ['(1));', 5.19766728692163e-06], ['(2));', 5.19766728692163e-06], ['(brigVar->dim);', 5.19766728692163e-06], ['(is_definition', 5.19766728692163e-06], ['"Array', 5.19766728692163e-06], ['elements.");', 5.19766728692163e-06], ['(var_decltype', 5.19766728692163e-06], ['build_array_type_nelts', 5.19766728692163e-06], ['get_brig_var_alignment', 5.19766728692163e-06], ['TYPE_ADDR_SPACE', 5.19766728692163e-06], ['gccbrig_get_target_addr_space_id', 5.19766728692163e-06], ['get_tree_cst_for_hsa_operand', 5.19766728692163e-06], ['(element_type));', 5.19766728692163e-06], ['var_size', 5.19766728692163e-06], ['(m_parent.m_analyzing)', 5.19766728692163e-06], ['BRIG_SEGMENT_KERNARG)', 5.19766728692163e-06], ['m_parent.m_cf->m_func_decl', 5.19766728692163e-06], ['(!is_definition', 5.19766728692163e-06], ['BRIG_SEGMENT_ARG)', 5.19766728692163e-06], ['m_parent.m_cf->m_func_decl;', 5.19766728692163e-06], ['*brigVar)', 5.19766728692163e-06], ['defined_alignment', 5.19766728692163e-06], ['~A();', 5.19766728692163e-06], ['B:public', 5.19766728692163e-06], ['A::T;', 5.19766728692163e-06], ['brig-code-entry-handler.cc', 5.19766728692163e-06], ['gccbrig', 5.19766728692163e-06], ['"real.h"', 5.19766728692163e-06], ['*brig_label', 5.19766728692163e-06], ['&ref;', 5.19766728692163e-06], ['*label_name', 5.19766728692163e-06], ['(brig_label->name);', 5.19766728692163e-06], ['label_str', 5.19766728692163e-06], ['(label_name->bytes),', 5.19766728692163e-06], ['label_name->byteCount);', 5.19766728692163e-06], ['BRIG_KIND_DIRECTIVE_FUNCTION)', 5.19766728692163e-06], ['m_parent.function_decl', 5.19766728692163e-06], ['m_parent.m_cf->group_variable_segment_offset', 5.19766728692163e-06], ['local_offset', 5.19766728692163e-06], ['(m_parent.m_cf->m_local_group_variables.has_variable', 5.19766728692163e-06], ['m_parent.m_cf->m_group_local_offset_arg));', 5.19766728692163e-06], ['OPERAND_TYPE', 5.19766728692163e-06], ['dictated', 5.19766728692163e-06], ['&oplist', 5.19766728692163e-06], ['(oplist.elements);', 5.19766728692163e-06], ['*operand_element', 5.19766728692163e-06], ['*operand_element,', 5.19766728692163e-06], ['operand_type);', 5.19766728692163e-06], ['data->byteCount', 5.19766728692163e-06], ['build_code_ref', 5.19766728692163e-06], ['(*ref);', 5.19766728692163e-06], ['element;', 5.19766728692163e-06], ['m_parent.m_cf->get_m_var_declfor_reg', 5.19766728692163e-06], ['casted', 5.19766728692163e-06], ['(!INTEGRAL_TYPE_P', 5.19766728692163e-06], ['BrigOperandCodeRef', 5.19766728692163e-06], ['build_address_operand', 5.19766728692163e-06], ['(brig_inst.base.kind', 5.19766728692163e-06], ['BRIG_KIND_INST_MEM)', 5.19766728692163e-06], ['local_size);', 5.19766728692163e-06], ['var_offset));', 5.19766728692163e-06], ['arg_var_decl', 5.19766728692163e-06], ['m_parent.m_cf->arg_variable', 5.19766728692163e-06], ['at.', 5.19766728692163e-06], ['arg_var_decl);', 5.19766728692163e-06], ['element_zero', 5.19766728692163e-06], ['(ARRAY_REF,', 5.19766728692163e-06], ['element_zero);', 5.19766728692163e-06], ['(global_var_decl', 5.19766728692163e-06], ['(var_offset', 5.19766728692163e-06], ['flattened', 5.19766728692163e-06], ['is64b_offset', 5.19766728692163e-06], ['(integer_type_node,', 5.19766728692163e-06], ['*brig_inst,', 5.19766728692163e-06], ['(scalar)', 5.19766728692163e-06], ['ELEMENT_TYPE', 5.19766728692163e-06], ['(uint16_type_node,', 5.19766728692163e-06], ['scalar_element_size', 5.19766728692163e-06], ['"(%lu', 5.19766728692163e-06], ['%lu).",', 5.19766728692163e-06], ['bytes_left,', 5.19766728692163e-06], ['build_tree_cst_element', 5.19766728692163e-06], ['(scalar_element_type,', 5.19766728692163e-06], ['next_data', 5.19766728692163e-06], ['(brig_type)', 5.19766728692163e-06], ['(brig_type);', 5.19766728692163e-06], ['(source_type));', 5.19766728692163e-06], ['(element_size', 5.19766728692163e-06], ['FP16', 5.19766728692163e-06], ['&brig_inst.base;', 5.19766728692163e-06], ['mod->modifier', 5.19766728692163e-06], ['cmp->modifier', 5.19766728692163e-06], ['(brig_inst.type)', 5.19766728692163e-06], ['(brig_inst.opcode);', 5.19766728692163e-06], ['(brig_inst.opcode)', 5.19766728692163e-06], ['(brig_inst.type', 5.19766728692163e-06], ['is_output', 5.19766728692163e-06], ['BRIG_OPCODE_UNPACK', 5.19766728692163e-06], ['(half_to_float)', 5.19766728692163e-06], ['(operand);', 5.19766728692163e-06], ['(operand)', 5.19766728692163e-06], ['operand_data->kind', 5.19766728692163e-06], ['BRIG_OPCODE_CMOV', 5.19766728692163e-06], ['(operand)));', 5.19766728692163e-06], ['(variable).', 5.19766728692163e-06], ['input_type', 5.19766728692163e-06], ['(is_fp16)', 5.19766728692163e-06], ['(output_type,', 5.19766728692163e-06], ['output_type,', 5.19766728692163e-06], ['inst_expr;', 5.19766728692163e-06], ['last_assign', 5.19766728692163e-06], ["'register'", 5.19766728692163e-06], ['src_width', 5.19766728692163e-06], ['Visits', 5.19766728692163e-06], ['HANDLER', 5.19766728692163e-06], ['&handler,', 5.19766728692163e-06], ['output);', 5.19766728692163e-06], ['handler.append_statement', 5.19766728692163e-06], ['(operand0));', 5.19766728692163e-06], ['float_type_node,', 5.19766728692163e-06], ['&caller,', 5.19766728692163e-06], ['uint16_type_node,', 5.19766728692163e-06], ['caller.append_statement', 5.19766728692163e-06], ['extends', 5.19766728692163e-06], ['(dest_type),', 5.19766728692163e-06], ['clipped_input);', 5.19766728692163e-06], ['D.1542', 5.19766728692163e-06], ['bytes_consumed', 5.19766728692163e-06], ['("brig:', 5.19766728692163e-06], ['TYPE_QUAL_CONST)),', 5.19766728692163e-06], ['(func_name.c_str', 5.19766728692163e-06], ['func_name.size', 5.19766728692163e-06], ['launcher.', 5.19766728692163e-06], ['ret_type', 5.19766728692163e-06], ['varhandler', 5.19766728692163e-06], ['arg_var', 5.19766728692163e-06], ['PARM_DECL);', 5.19766728692163e-06], ['(arg_var));', 5.19766728692163e-06], ['(arg_decls,', 5.19766728692163e-06], ['arg_offset', 5.19766728692163e-06], ['++arg)', 5.19766728692163e-06], ['bottom', 5.19766728692163e-06], ['private.', 5.19766728692163e-06], ['(ret_value', 5.19766728692163e-06], ['<<retval>>', 5.19766728692163e-06], ['Walter', 5.19766728692163e-06], ['Lee', 5.19766728692163e-06], ['stdout.', 5.19766728692163e-06], ['MAX_INSTRUCTIONS', 5.19766728692163e-06], ['architecture.', 5.19766728692163e-06], ['multiplication.', 5.19766728692163e-06], ['MUL_TYPE;', 5.19766728692163e-06], ['produce.', 5.19766728692163e-06], ['((x)', 5.19766728692163e-06], ['*pattern,', 5.19766728692163e-06], ['binary_op_func', 5.19766728692163e-06], ['func,', 5.19766728692163e-06], ['cost)', 5.19766728692163e-06], ['m_pattern', 5.19766728692163e-06], ['(pattern),', 5.19766728692163e-06], ['m_top_index', 5.19766728692163e-06], ['(-1),', 5.19766728692163e-06], ['m_unary_func', 5.19766728692163e-06], ['(func),', 5.19766728692163e-06], ['m_cost', 5.19766728692163e-06], ['(cost),', 5.19766728692163e-06], ['m_rhs_if_unary', 5.19766728692163e-06], ['unary_op_func', 5.19766728692163e-06], ['Unary', 5.19766728692163e-06], ['apply,', 5.19766728692163e-06], ['DAG.', 5.19766728692163e-06], ['left-hand', 5.19766728692163e-06], ['cycles', 5.19766728692163e-06], ['ops[]', 5.19766728692163e-06], ['"add",', 5.19766728692163e-06], ['1040),', 5.19766728692163e-06], ['"sub",', 5.19766728692163e-06], ['1041),', 5.19766728692163e-06], ['s1a,', 5.19766728692163e-06], ['1042),', 5.19766728692163e-06], ['1043),', 5.19766728692163e-06], ['s3a,', 5.19766728692163e-06], ['1044),', 5.19766728692163e-06], ['shl', 5.19766728692163e-06], ['team', 5.19766728692163e-06], ['power,', 5.19766728692163e-06], ['prefer', 5.19766728692163e-06], ['shift1,', 5.19766728692163e-06], ['1001),', 5.19766728692163e-06], ['shift2,', 5.19766728692163e-06], ['1002),', 5.19766728692163e-06], ['shift3,', 5.19766728692163e-06], ['1003),', 5.19766728692163e-06], ['shift4,', 5.19766728692163e-06], ['1004),', 5.19766728692163e-06], ['shift5,', 5.19766728692163e-06], ['1005),', 5.19766728692163e-06], ['shift6,', 5.19766728692163e-06], ['1006),', 5.19766728692163e-06], ['shift7,', 5.19766728692163e-06], ['1007),', 5.19766728692163e-06], ['shift8,', 5.19766728692163e-06], ['1008),', 5.19766728692163e-06], ['shift9,', 5.19766728692163e-06], ['1009),', 5.19766728692163e-06], ['shift10,', 5.19766728692163e-06], ['1010),', 5.19766728692163e-06], ['shift11,', 5.19766728692163e-06], ['1011),', 5.19766728692163e-06], ['shift12,', 5.19766728692163e-06], ['1012),', 5.19766728692163e-06], ['shift13,', 5.19766728692163e-06], ['1013),', 5.19766728692163e-06], ['shift14,', 5.19766728692163e-06], ['1014),', 5.19766728692163e-06], ['shift15,', 5.19766728692163e-06], ['1015),', 5.19766728692163e-06], ['shift16,', 5.19766728692163e-06], ['1016),', 5.19766728692163e-06], ['shift17,', 5.19766728692163e-06], ['17,', 5.19766728692163e-06], ['1017),', 5.19766728692163e-06], ['shift18,', 5.19766728692163e-06], ['1018),', 5.19766728692163e-06], ['shift19,', 5.19766728692163e-06], ['19,', 5.19766728692163e-06], ['1019),', 5.19766728692163e-06], ['shift20,', 5.19766728692163e-06], ['20,', 5.19766728692163e-06], ['1020),', 5.19766728692163e-06], ['shift21,', 5.19766728692163e-06], ['21,', 5.19766728692163e-06], ['1021),', 5.19766728692163e-06], ['shift22,', 5.19766728692163e-06], ['22,', 5.19766728692163e-06], ['1022),', 5.19766728692163e-06], ['shift23,', 5.19766728692163e-06], ['23,', 5.19766728692163e-06], ['1023),', 5.19766728692163e-06], ['shift24,', 5.19766728692163e-06], ['24,', 5.19766728692163e-06], ['1024),', 5.19766728692163e-06], ['shift25,', 5.19766728692163e-06], ['25,', 5.19766728692163e-06], ['1025),', 5.19766728692163e-06], ['shift26,', 5.19766728692163e-06], ['26,', 5.19766728692163e-06], ['1026),', 5.19766728692163e-06], ['shift27,', 5.19766728692163e-06], ['1027),', 5.19766728692163e-06], ['shift28,', 5.19766728692163e-06], ['28,', 5.19766728692163e-06], ['1028),', 5.19766728692163e-06], ['shift29,', 5.19766728692163e-06], ['29,', 5.19766728692163e-06], ['1029),', 5.19766728692163e-06], ['shift30,', 5.19766728692163e-06], ['30,', 5.19766728692163e-06], ['1030),', 5.19766728692163e-06], ['shift31,', 5.19766728692163e-06], ['m_num_vals;', 5.19766728692163e-06], ['ExpressionTreeMap', 5.19766728692163e-06], ['s.m_num_vals', 5.19766728692163e-06], ['ops[0];', 5.19766728692163e-06], ['useless.', 5.19766728692163e-06], ['op->m_binary_func', 5.19766728692163e-06], ['ExpressionTreeMap::iterator', 5.19766728692163e-06], ['best_solution.end', 5.19766728692163e-06], ['best_solution);', 5.19766728692163e-06], ['insn_code.', 5.19766728692163e-06], ['create_insn_code_compression_table', 5.19766728692163e-06], ['CODE_FOR_nothing', 5.19766728692163e-06], ['*op', 5.19766728692163e-06], ['("\\n};\\n\\n");', 5.19766728692163e-06], ['multiply_constants_used', 5.19766728692163e-06], ['XSIZE', 5.19766728692163e-06], ['bsearch', 5.19766728692163e-06], ['*key,', 5.19766728692163e-06], ['s->m_num_vals;', 5.19766728692163e-06], ['num_ops)', 5.19766728692163e-06], ['[-1024,', 5.19766728692163e-06], ['1024].', 5.19766728692163e-06], ['(abs_multiplier', 5.19766728692163e-06], ['1024)', 5.19766728692163e-06], ['(abs_multiplier));', 5.19766728692163e-06], ['next_pow2', 5.19766728692163e-06], ['ten.', 5.19766728692163e-06], ['prev_pow10;', 5.19766728692163e-06], ['next_pow10;', 5.19766728692163e-06], ['(((j', 5.19766728692163e-06], ['abs_multiplier)', 5.19766728692163e-06], ['10)))', 5.19766728692163e-06], ['next_pow10', 5.19766728692163e-06], ['ops.', 5.19766728692163e-06], ["0's", 5.19766728692163e-06], ["1's.", 5.19766728692163e-06], ['(INTMAX_MAX', 5.19766728692163e-06], ['*/\\n");', 5.19766728692163e-06], ['(s)))', 5.19766728692163e-06], ['int_min', 5.19766728692163e-06], ['yield', 5.19766728692163e-06], ['{%d', 5.19766728692163e-06], ['{%lldll', 5.19766728692163e-06], ['0x%llx', 5.19766728692163e-06], ['MUL_TYPE)', 5.19766728692163e-06], ['(opnd0,', 5.19766728692163e-06], ['func_ref', 5.19766728692163e-06], ['out_args_p', 5.19766728692163e-06], ['(out_args->length', 5.19766728692163e-06], ['ret_val_type', 5.19766728692163e-06], ['ret_val', 5.19766728692163e-06], ['m_parent.m_cf->m_context_arg);', 5.19766728692163e-06], ['(call)', 5.19766728692163e-06], ['create_artificial_label', 5.19766728692163e-06], ['(UNKNOWN_LOCATION));', 5.19766728692163e-06], ['(cases,', 5.19766728692163e-06], ['if..else', 5.19766728692163e-06], ['m_parent.m_cf->m_has_barriers', 5.19766728692163e-06], ['(m_parent.m_cf->expand_or_call_builtin', 5.19766728692163e-06], ['BRIG_TYPE_NONE,', 5.19766728692163e-06], ['properties.', 5.19766728692163e-06], ['fmt->emin', 5.19766728692163e-06], ['real_inf', 5.19766728692163e-06], ['fmt->p);', 5.19766728692163e-06], ['2**', 5.19766728692163e-06], ['(value-1)', 5.19766728692163e-06], ['10**value', 5.19766728692163e-06], ['(POINTER_SIZE', 5.19766728692163e-06], ['size_t,', 5.19766728692163e-06], ['Tsize_t', 5.19766728692163e-06], ['Tptrdiff_t', 5.19766728692163e-06], ['(align,', 5.19766728692163e-06], ['ADJUST_FIELD_ALIGN', 5.19766728692163e-06], ['(sz', 5.19766728692163e-06], ['Type::tuns8;', 5.19766728692163e-06], ['right-hand', 5.19766728692163e-06], ['vendor-specific', 5.19766728692163e-06], ['is_store', 5.19766728692163e-06], ['BRIG_OPCODE_ST;', 5.19766728692163e-06], ['(data)', 5.19766728692163e-06], ['mem_ref);', 5.19766728692163e-06], ['mem_ref,', 5.19766728692163e-06], ['mem_ref;', 5.19766728692163e-06], ['(mem_inst->align', 5.19766728692163e-06], ['inputs.push_back', 5.19766728692163e-06], ['address_offset', 5.19766728692163e-06], ['build_mem_access', 5.19766728692163e-06], ['BrigInstSignal', 5.19766728692163e-06], ['atomic_opcode;', 5.19766728692163e-06], ['generate_tree', 5.19766728692163e-06], ['(inst->base,', 5.19766728692163e-06], ['atomic_opcode);', 5.19766728692163e-06], ['this->t_', 5.19766728692163e-06], ['t_;', 5.19766728692163e-06], ['Bstatement', 5.19766728692163e-06], ['Bvariable', 5.19766728692163e-06], ['say,', 5.19766728692163e-06], ['Bvariable(tree', 5.19766728692163e-06], ['t_(t),', 5.19766728692163e-06], ['build_fold_indirect_ref_loc(location.gcc_location(),', 5.19766728692163e-06], ['Gcc_backend();', 5.19766728692163e-06], ['std::vector<Btyped_identifier>&,', 5.19766728692163e-06], ['breal,', 5.19766728692163e-06], ['>&', 5.19766728692163e-06], ['std::vector<Bstatement*>&);', 5.19766728692163e-06], ['except_stmt,', 5.19766728692163e-06], ['finally_stmt,', 5.19766728692163e-06], ['Bblock*,', 5.19766728692163e-06], ['Variables.', 5.19766728692163e-06], ['is_external,', 5.19766728692163e-06], ['in_unique_section,', 5.19766728692163e-06], ['Functions.', 5.19766728692163e-06], ['std::vector<Bvariable*>&);', 5.19766728692163e-06], ['const_p,', 5.19766728692163e-06], ['GCCGo.', 5.19766728692163e-06], ['long_integer_type_node,', 5.19766728692163e-06], ['unsigned_type_node,', 5.19766728692163e-06], ['math_function_type_two,', 5.19766728692163e-06], ['math_function_type_long_two,', 5.19766728692163e-06], ['integer_type_node,', 5.19766728692163e-06], ['returns.', 5.19766728692163e-06], ['build_function_type(void_type_node,', 5.19766728692163e-06], ['void_list_node),', 5.19766728692163e-06], ['CHAR_TYPE_SIZE)', 5.19766728692163e-06], ['unsigned_char_type_node;', 5.19766728692163e-06], ['SHORT_TYPE_SIZE)', 5.19766728692163e-06], ['make_node(REAL_TYPE);', 5.19766728692163e-06], ['TYPE_PRECISION(type)', 5.19766728692163e-06], ['to_type->get_tree();', 5.19766728692163e-06], ['Location)', 5.19766728692163e-06], ['tree_cons(NULL_TREE,', 5.19766728692163e-06], ['&TREE_CHAIN(*pp);', 5.19766728692163e-06], ['(std::vector<Btyped_identifier>::const_iterator', 5.19766728692163e-06], ['p->btype->get_tree();', 5.19766728692163e-06], ['fill,', 5.19766728692163e-06], ['fill_tree', 5.19766728692163e-06], ['fill->get_tree();', 5.19766728692163e-06], ['field_trees', 5.19766728692163e-06], ['&field_trees;', 5.19766728692163e-06], ['name_tree', 5.19766728692163e-06], ['name_tree,', 5.19766728692163e-06], ['DECL_CONTEXT(field)', 5.19766728692163e-06], ['field_trees;', 5.19766728692163e-06], ['layout_type(fill_tree);', 5.19766728692163e-06], ['SET_TYPE_STRUCTURAL_EQUALITY(fill_tree);', 5.19766728692163e-06], ['fill;', 5.19766728692163e-06], ['gcc_assert(TREE_CODE(t)', 5.19766728692163e-06], ['build_distinct_type_copy(t);', 5.19766728692163e-06], ['DECL_ORIGINAL_TYPE(TYPE_NAME(t))', 5.19766728692163e-06], ['this->make_type(copy);', 5.19766728692163e-06], ['r->get_tree()', 5.19766728692163e-06], ['(TREE_CODE(type)', 5.19766728692163e-06], ['ptr_type_node;', 5.19766728692163e-06], ['BTYPE.', 5.19766728692163e-06], ['struct_tree', 5.19766728692163e-06], ['(struct_tree', 5.19766728692163e-06], ['DECL_CHAIN(field);', 5.19766728692163e-06], ['const_val', 5.19766728692163e-06], ['CONST_DECL,', 5.19766728692163e-06], ['r1;', 5.19766728692163e-06], ['real_from_mpfr(&r1,', 5.19766728692163e-06], ['r2;', 5.19766728692163e-06], ['real_convert(&r2,', 5.19766728692163e-06], ['&r1);', 5.19766728692163e-06], ['TREE_TYPE(t),', 5.19766728692163e-06], ['TYPE_MODE(TREE_TYPE(t)),', 5.19766728692163e-06], ['build_real(TREE_TYPE(t),', 5.19766728692163e-06], ['complex_tree', 5.19766728692163e-06], ['bcomplex->get_tree();', 5.19766728692163e-06], ['(complex_tree', 5.19766728692163e-06], ['gcc_assert(COMPLEX_FLOAT_TYPE_P(TREE_TYPE(complex_tree)));', 5.19766728692163e-06], ['TREE_TYPE(TREE_TYPE(complex_tree)),', 5.19766728692163e-06], ['complex_tree);', 5.19766728692163e-06], ['imag_tree', 5.19766728692163e-06], ['type->get_tree();', 5.19766728692163e-06], ['INTEGER_TYPE)', 5.19766728692163e-06], ['TREE_CODE(type_tree)', 5.19766728692163e-06], ['bexpr->get_tree();', 5.19766728692163e-06], ['erroneous.', 5.19766728692163e-06], ['(TREE_TYPE(field)', 5.19766728692163e-06], ['fold_build3_loc(location.gcc_location(),', 5.19766728692163e-06], ['TREE_TYPE(field),', 5.19766728692163e-06], ['BSTAT', 5.19766728692163e-06], ['bstat->get_tree();', 5.19766728692163e-06], ['(stat', 5.19766728692163e-06], ['condition->get_tree();', 5.19766728692163e-06], ['build3_loc(location.gcc_location(),', 5.19766728692163e-06], ['cond_tree,', 5.19766728692163e-06], ['then_tree,', 5.19766728692163e-06], ['else_tree);', 5.19766728692163e-06], ['computed_type', 5.19766728692163e-06], ['excess_precision_type(type_tree);', 5.19766728692163e-06], ['(computed_type', 5.19766728692163e-06], ['computed_type;', 5.19766728692163e-06], ['left_tree', 5.19766728692163e-06], ['right_tree);', 5.19766728692163e-06], ['*init;', 5.19766728692163e-06], ['vec_alloc(init,', 5.19766728692163e-06], ['GIMPLE', 5.19766728692163e-06], ['side-effects', 5.19766728692163e-06], ['&sink);', 5.19766728692163e-06], ['constructor_elt', 5.19766728692163e-06], ['NULL};', 5.19766728692163e-06], ['constructor_elt*', 5.19766728692163e-06], ['elt', 5.19766728692163e-06], ['init->quick_push(empty);', 5.19766728692163e-06], ['elt->index', 5.19766728692163e-06], ['elt->value', 5.19766728692163e-06], ['build_constructor(type_tree,', 5.19766728692163e-06], ['(sink', 5.19766728692163e-06], ['index->get_tree();', 5.19766728692163e-06], ['index_tree);', 5.19766728692163e-06], ['index_tree,', 5.19766728692163e-06], ['array_tree,', 5.19766728692163e-06], ['(excess_type', 5.19766728692163e-06], ['change.', 5.19766728692163e-06], ['init->get_tree();', 5.19766728692163e-06], ['ld,', 5.19766728692163e-06], ['crashes', 5.19766728692163e-06], ['omitting', 5.19766728692163e-06], ['DECL_EXPR,', 5.19766728692163e-06], ['(init_tree', 5.19766728692163e-06], ['init_tree,', 5.19766728692163e-06], ['TREE_TYPE(result);', 5.19766728692163e-06], ['set);', 5.19766728692163e-06], ['(DECL_STRUCT_FUNCTION(fntree)', 5.19766728692163e-06], ['push_struct_function(fntree);', 5.19766728692163e-06], ['push_cfun(DECL_STRUCT_FUNCTION(fntree));', 5.19766728692163e-06], ['EXCEPT_STMT', 5.19766728692163e-06], ['except_tree', 5.19766728692163e-06], ['finally_tree', 5.19766728692163e-06], ['stat_tree,', 5.19766728692163e-06], ['push_struct_function(decl);', 5.19766728692163e-06], ['push_cfun(DECL_STRUCT_FUNCTION(decl));', 5.19766728692163e-06], ['create_artificial_label(loc);', 5.19766728692163e-06], ['append_to_statement_list(c,', 5.19766728692163e-06], ['pcv', 5.19766728692163e-06], ['statements)', 5.19766728692163e-06], ['block_tree', 5.19766728692163e-06], ['superblock_tree', 5.19766728692163e-06], ['superblock_tree;', 5.19766728692163e-06], ['(pp', 5.19766728692163e-06], ['&BLOCK_SUBBLOCKS(superblock_tree);', 5.19766728692163e-06], ['&BLOCK_CHAIN(*pp))', 5.19766728692163e-06], ['BLOCK);', 5.19766728692163e-06], ['(*pv)->get_decl();', 5.19766728692163e-06], ['&DECL_CHAIN(*pp);', 5.19766728692163e-06], ['bblock,', 5.19766728692163e-06], ['go_non_zero_struct;', 5.19766728692163e-06], ['Sometimes', 5.19766728692163e-06], ['(!is_hidden)', 5.19766728692163e-06], ['TREE_ADDRESSABLE(decl)', 5.19766728692163e-06], ['DECL_ARG_TYPE(decl)', 5.19766728692163e-06], ['DECL_STRUCT_FUNCTION(fndecl);', 5.19766728692163e-06], ['BLOCK_VARS(block_tree);', 5.19766728692163e-06], ['(this->type_size(btype)', 5.19766728692163e-06], ['weak,', 5.19766728692163e-06], ['compute_reloc_for_constant.', 5.19766728692163e-06], ['immutable_struct_set_init', 5.19766728692163e-06], ['mark_decl_one_only.', 5.19766728692163e-06], ['implicit_variable.', 5.19766728692163e-06], ['make_decl_one_only.', 5.19766728692163e-06], ['make_decl_one_only(decl,', 5.19766728692163e-06], ['DECL_ASSEMBLER_NAME(decl));', 5.19766728692163e-06], ['rest_of_decl_compilation(decl,', 5.19766728692163e-06], ['build_qualified_type(type_tree,', 5.19766728692163e-06], ['immutable_struct.', 5.19766728692163e-06], ['lab);', 5.19766728692163e-06], ['(functype', 5.19766728692163e-06], ['TREE_TYPE(functype);', 5.19766728692163e-06], ['L1', 5.19766728692163e-06], ['name.find("..thunk");', 5.19766728692163e-06], ['defer_tree', 5.19766728692163e-06], ['catch_body', 5.19766728692163e-06], ['catch_body);', 5.19766728692163e-06], ['(func_tree', 5.19766728692163e-06], ['BUILT_IN_NORMAL,', 5.19766728692163e-06], ['(const_p)', 5.19766728692163e-06], ['(noreturn_p)', 5.19766728692163e-06], ['this->make_function(decl);', 5.19766728692163e-06], ['optimizations;', 5.19766728692163e-06], ['ifb,', 5.19766728692163e-06], ['Expression::import_expression(ifb,', 5.19766728692163e-06], ['this->convert<Thunk_statement,', 5.19766728692163e-06], ['lstr;', 5.19766728692163e-06], ['context->backend()->init_statement(bfunction,', 5.19766728692163e-06], ['bvar,', 5.19766728692163e-06], ['context->gogo()->lower_expression(context->function(),', 5.19766728692163e-06], ['temp->get_backend(context);', 5.19766728692163e-06], ['(binit', 5.19766728692163e-06], ['Expression::make_dereference(e,', 5.19766728692163e-06], ['context->backend()->assignment_statement(bfunction,', 5.19766728692163e-06], ['"var', 5.19766728692163e-06], ['this->traverse_type(traverse,', 5.19766728692163e-06], ['this->type_)', 5.19766728692163e-06], ['block_(block)', 5.19766728692163e-06], ['block_;', 5.19766728692163e-06], ['this->block_->add_statement(temp);', 5.19766728692163e-06], ['&this->lhs_)', 5.19766728692163e-06], ['mie->map();', 5.19766728692163e-06], ['KEY_TYPE', 5.19766728692163e-06], ['MAP_INDEX', 5.19766728692163e-06], ['b->add_statement(key_temp);', 5.19766728692163e-06], ['VAL_TYPE', 5.19766728692163e-06], ['MAP,', 5.19766728692163e-06], ['&key_temp)', 5.19766728692163e-06], ['a3);', 5.19766728692163e-06], ['rhs_context_type', 5.19766728692163e-06], ['this->lhs_->type();', 5.19766728692163e-06], ['this->report_error(_("use', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->lhs_);', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->rhs_);', 5.19766728692163e-06], ['lhs_(lhs),', 5.19766728692163e-06], ['rhs_(rhs)', 5.19766728692163e-06], ['lhs_;', 5.19766728692163e-06], ['rhs_;', 5.19766728692163e-06], ['side--a', 5.19766728692163e-06], ['prhs', 5.19766728692163e-06], ['this->rhs_->begin();', 5.19766728692163e-06], ['++plhs,', 5.19766728692163e-06], ['++prhs)', 5.19766728692163e-06], ['go_assert(prhs', 5.19766728692163e-06], ['this->rhs_->end());', 5.19766728692163e-06], ['((*plhs)->is_error_expression()', 5.19766728692163e-06], ['(*plhs)->type()->is_error()', 5.19766728692163e-06], ['(*prhs)->is_error_expression()', 5.19766728692163e-06], ['(*prhs)->type()->is_error())', 5.19766728692163e-06], ['((*plhs)->is_sink_expression())', 5.19766728692163e-06], ['(map_index', 5.19766728692163e-06], ['val_ptr_temp', 5.19766728692163e-06], ['Expression::make_type_descriptor(map_type,', 5.19766728692163e-06], ['Expression::make_temporary_reference(val_ptr_temp,', 5.19766728692163e-06], ['Expression::make_temporary_reference(present_temp,', 5.19766728692163e-06], ['&val_temp)', 5.19766728692163e-06], ['Expression::make_temporary_reference(closed_temp,', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->closed_);', 5.19766728692163e-06], ['expr_;', 5.19766728692163e-06], ['&this->expr_);', 5.19766728692163e-06], ['this->lower_to_type(expr_is_empty', 5.19766728692163e-06], ['Statement::make_assignment(this->ok_,', 5.19766728692163e-06], ['Expression::make_type_descriptor(this->type_,', 5.19766728692163e-06], ['p3', 5.19766728692163e-06], ['p1,', 5.19766728692163e-06], ['p3);', 5.19766728692163e-06], ['is_ignored)', 5.19766728692163e-06], ['expr->location()),', 5.19766728692163e-06], ['ast_dump_context->dump_expression(expr_);', 5.19766728692163e-06], ['braces', 5.19766728692163e-06], ['decrement.', 5.19766728692163e-06], ['Statement::make_assignment_operation(op,', 5.19766728692163e-06], ['this->call_->call_expression()->fn();', 5.19766728692163e-06], ['Simplify_thunk_traverse', 5.19766728692163e-06], ['(this->call_->is_error_expression())', 5.19766728692163e-06], ['fn->interface_field_reference_expression();', 5.19766728692163e-06], ['fn_temp', 5.19766728692163e-06], ['Expression::make_temporary_reference(fn_temp,', 5.19766728692163e-06], ['((*p)->is_constant())', 5.19766728692163e-06], ['backtrace', 5.19766728692163e-06], ['brand', 5.19766728692163e-06], ['ran', 5.19766728692163e-06], ['determine_types', 5.19766728692163e-06], ['(*p)->type(),', 5.19766728692163e-06], ['thunk_results', 5.19766728692163e-06], ['permitted.', 5.19766728692163e-06], ['retaddr_label', 5.19766728692163e-06], ['thunk_parameter', 5.19766728692163e-06], ['Expression::make_var_reference(named_parameter,', 5.19766728692163e-06], ['next_index;', 5.19766728692163e-06], ['Expression::make_field_reference(thunk_parameter,', 5.19766728692163e-06], ['call_params', 5.19766728692163e-06], ['param;', 5.19766728692163e-06], ['thunk_param', 5.19766728692163e-06], ['gogo->lower_block(function,', 5.19766728692163e-06], ['(!this->get_fn_and_arg(&fn,', 5.19766728692163e-06], ['&arg))', 5.19766728692163e-06], ['ast_dump_context->dump_expression(this->call());', 5.19766728692163e-06], ['this->vals_;', 5.19766728692163e-06], ['(this->is_lowered_)', 5.19766728692163e-06], ['vals_count', 5.19766728692163e-06], ['function->func_value()->result_variables();', 5.19766728692163e-06], ['return"));', 5.19766728692163e-06], ['"with', 5.19766728692163e-06], ['results_count;', 5.19766728692163e-06], ['results_count)', 5.19766728692163e-06], ['rv', 5.19766728692163e-06], ['e->location());', 5.19766728692163e-06], ['b->add_statement(this);', 5.19766728692163e-06], ['this->label_->get_goto(context,', 5.19766728692163e-06], ['break/continue', 5.19766728692163e-06], ['this->label_->get_backend_label(context);', 5.19766728692163e-06], ['this->label_->name()', 5.19766728692163e-06], ['&this->cond_)', 5.19766728692163e-06], ['"else"', 5.19766728692163e-06], ['!nc.to_int(&ival))', 5.19766728692163e-06], ['(this->statements_->traverse(traverse)', 5.19766728692163e-06], ['start_label,', 5.19766728692163e-06], ['next_case_label;', 5.19766728692163e-06], ['!COND', 5.19766728692163e-06], ['NEXT_CASE_LABEL', 5.19766728692163e-06], ['b->add_statement(Statement::make_block_statement(this->statements_,', 5.19766728692163e-06], ['(next_case_label', 5.19766728692163e-06], ['this->statements_->determine_types();', 5.19766728692163e-06], ['"fallthrough"', 5.19766728692163e-06], ['*CASES', 5.19766728692163e-06], ['go_assert(!this->is_default_);', 5.19766728692163e-06], ['this->statements_->get_backend(context);', 5.19766728692163e-06], ['break_stat;', 5.19766728692163e-06], ['break_stat', 5.19766728692163e-06], ['break_label->get_goto(context,', 5.19766728692163e-06], ['(statements', 5.19766728692163e-06], ['(fallthrough)"', 5.19766728692163e-06], ['break_label)', 5.19766728692163e-06], ['default_start_label', 5.19766728692163e-06], ['default_finish_label', 5.19766728692163e-06], ['finish_label', 5.19766728692163e-06], ['break_label;', 5.19766728692163e-06], ['finish_label;', 5.19766728692163e-06], ['(!p->is_default())', 5.19766728692163e-06], ['(default_case', 5.19766728692163e-06], ['(p->is_default())', 5.19766728692163e-06], ['!found_default;', 5.19766728692163e-06], ['all_cases,', 5.19766728692163e-06], ['this->clauses_.size();', 5.19766728692163e-06], ['stat;', 5.19766728692163e-06], ['Switch_statement', 5.19766728692163e-06], ['Constant_switch_statement', 5.19766728692163e-06], ['break_label', 5.19766728692163e-06], ['this->clauses_->get_backend(context,', 5.19766728692163e-06], ['context->backend()->switch_statement(bfunction,', 5.19766728692163e-06], ['ldef', 5.19766728692163e-06], ['break_label->get_definition(context);', 5.19766728692163e-06], ['this->val_;', 5.19766728692163e-06], ['this->break_label());', 5.19766728692163e-06], ['Statement::make_unnamed_label_statement(this->break_label_);', 5.19766728692163e-06], ['Switch_statement*', 5.19766728692163e-06], ['DESCRIPTOR_TEMP.', 5.19766728692163e-06], ['switch_val_type,', 5.19766728692163e-06], ['"impossible', 5.19766728692163e-06], ['Expression::make_temporary_reference(descriptor_temp,', 5.19766728692163e-06], ['go_assert(stmts_label', 5.19766728692163e-06], ['stmts_label', 5.19766728692163e-06], ['gloc', 5.19766728692163e-06], ['(p->may_fall_through())', 5.19766728692163e-06], ['Type_switch_statement*', 5.19766728692163e-06], ['%<<-%>', 5.19766728692163e-06], ['Lowering.', 5.19766728692163e-06], ['Expression::make_temporary_reference(scases,', 5.19766728692163e-06], ['chanref', 5.19766728692163e-06], ['(this->is_send_)', 5.19766728692163e-06], ['valtype', 5.19766728692163e-06], ['ct->element_type();', 5.19766728692163e-06], ['Statement::make_temporary(valtype,', 5.19766728692163e-06], ['b->add_statement(val);', 5.19766728692163e-06], ['(this->closedvar_', 5.19766728692163e-06], ['cref,', 5.19766728692163e-06], ['elem,', 5.19766728692163e-06], ['Expression::make_field_reference(scase->copy(),', 5.19766728692163e-06], ['clauses[i]', 5.19766728692163e-06], ['Expression::make_integer_ul(ncases,', 5.19766728692163e-06], ['scases', 5.19766728692163e-06], ['Select_statement*', 5.19766728692163e-06], ['For_statement.', 5.19766728692163e-06], ['(this->post_', 5.19766728692163e-06], ['ast_dump_context->indent();', 5.19766728692163e-06], ['POST', 5.19766728692163e-06], ['(this->index_var_', 5.19766728692163e-06], ['range_type', 5.19766728692163e-06], ['(range_type->array_type()', 5.19766728692163e-06], ['(range_type->is_string_type())', 5.19766728692163e-06], ['gogo->lookup_global("rune")->type_value();', 5.19766728692163e-06], ['(range_type->map_type()', 5.19766728692163e-06], ['(range_type->channel_type()', 5.19766728692163e-06], ['this->value_var_->is_sink_expression())', 5.19766728692163e-06], ['range_object', 5.19766728692163e-06], ['this->range_,', 5.19766728692163e-06], ['Statement::make_for_statement(init,', 5.19766728692163e-06], ['(range_object', 5.19766728692163e-06], ['Expression::make_temporary_reference(range_temp,', 5.19766728692163e-06], ['len_call', 5.19766728692163e-06], ['len_call,', 5.19766728692163e-06], ['lt', 5.19766728692163e-06], ['range[index_temp]', 5.19766728692163e-06], ['Expression::make_index(ref,', 5.19766728692163e-06], ['Statement::make_inc_statement(tref);', 5.19766728692163e-06], ['Expression::make_temporary_reference(for_temp,', 5.19766728692163e-06], ['rune(range[index_temp])', 5.19766728692163e-06], ['utf8.RuneSelf', 5.19766728692163e-06], ['decoderune(range,', 5.19766728692163e-06], ['index_temp)', 5.19766728692163e-06], ['index_ref->set_is_lvalue();', 5.19766728692163e-06], ['index_temp->type(),', 5.19766728692163e-06], ['Statement::make_assignment(index_ref,', 5.19766728692163e-06], ['value_ref->set_is_lvalue();', 5.19766728692163e-06], ['Statement::make_assignment(value_ref,', 5.19766728692163e-06], ['else_block->add_statement(s);', 5.19766728692163e-06], ['map_iteration_struct', 5.19766728692163e-06], ['hiter.key', 5.19766728692163e-06], ['mapiternext(&hiter)', 5.19766728692163e-06], ['*hiter.key', 5.19766728692163e-06], ['*hiter.val', 5.19766728692163e-06], ['iter_init->add_statement(set);', 5.19766728692163e-06], ['<-range', 5.19766728692163e-06], ['!ok_temp', 5.19766728692163e-06], ['oref', 5.19766728692163e-06], ['Expression::make_temporary_reference(ok_temp,', 5.19766728692163e-06], ['oref,', 5.19766728692163e-06], ['value_var,', 5.19766728692163e-06], ['m_parent.m_cf->m_group_base_arg),', 5.19766728692163e-06], ['m_parent.m_cf->m_private_base_arg),', 5.19766728692163e-06], ['(!(inst.modifier', 5.19766728692163e-06], ['BRIG_SEG_CVT_NONULL))', 5.19766728692163e-06], ['segments,', 5.19766728692163e-06], ['flat/global.', 5.19766728692163e-06], ['-1),', 5.19766728692163e-06], ['null_check', 5.19766728692163e-06], ['null_check;', 5.19766728692163e-06], ['BRIG_SEGMENT_PRIVATE)', 5.19766728692163e-06], ['BrigInstSeg', 5.19766728692163e-06], ['"parse.h"', 5.19766728692163e-06], ['Enclosing_var&', 5.19766728692163e-06], ['impossible.', 5.19766728692163e-06], ['(this->unget_token_valid_)', 5.19766728692163e-06], ['this->token_', 5.19766728692163e-06], ['this->lex_->next_token();', 5.19766728692163e-06], ['this->unget_token_valid_', 5.19766728692163e-06], ['this->peek_token()->location();', 5.19766728692163e-06], ['token->location()));', 5.19766728692163e-06], ['may_be_composite_lit)', 5.19766728692163e-06], ['(!this->expression_may_start_here())', 5.19766728692163e-06], ['*ppackage', 5.19766728692163e-06], ['(this->advance_token()->is_identifier())', 5.19766728692163e-06], ['%<_%>");', 5.19766728692163e-06], ['this->gogo_->package_name())', 5.19766728692163e-06], ['TypeLit', 5.19766728692163e-06], ['PointerType', 5.19766728692163e-06], ['InterfaceType', 5.19766728692163e-06], ['SliceType', 5.19766728692163e-06], ['ChannelType', 5.19766728692163e-06], ['this->type_name(true);', 5.19766728692163e-06], ['(token->is_keyword(KEYWORD_FUNC))', 5.19766728692163e-06], ['(token->is_op(OPERATOR_MULT))', 5.19766728692163e-06], ['(this->peek_token()->is_op(OPERATOR_RPAREN))', 5.19766728692163e-06], ['token->is_op(OPERATOR_CHANOP)', 5.19766728692163e-06], ['token->is_op(OPERATOR_MULT)', 5.19766728692163e-06], ['Gogo::message_name(packname).c_str(),', 5.19766728692163e-06], ['this->gogo_->add_unknown_name(name,', 5.19766728692163e-06], ['(named_object->is_type())', 5.19766728692163e-06], ['(named_object->is_unknown()', 5.19766728692163e-06], ['named_object->is_type_declaration())', 5.19766728692163e-06], ['Type::make_forward_declaration(named_object);', 5.19766728692163e-06], ['ArrayLength', 5.19766728692163e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_LSQUARE));', 5.19766728692163e-06], ['%<[...]%>', 5.19766728692163e-06], ['KeyType', 5.19766728692163e-06], ['ValueType', 5.19766728692163e-06], ['FieldDecl', 5.19766728692163e-06], ['(!this->advance_token()->is_op(OPERATOR_LCURLY))', 5.19766728692163e-06], ['(!this->skip_past_error(OPERATOR_RCURLY))', 5.19766728692163e-06], ['pj', 5.19766728692163e-06], ['is_anonymous', 5.19766728692163e-06], ['is_anonymous_pointer', 5.19766728692163e-06], ['is_id_exported', 5.19766728692163e-06], ['id_location', 5.19766728692163e-06], ['(token->is_op(OPERATOR_SEMICOLON)', 5.19766728692163e-06], ['this->unget_token(Token::make_identifier_token(id,', 5.19766728692163e-06], ['is_id_exported,', 5.19766728692163e-06], ['id_location));', 5.19766728692163e-06], ['(is_anonymous_pointer)', 5.19766728692163e-06], ['(!this->peek_token()->is_identifier())', 5.19766728692163e-06], ['(this->peek_token()->is_string())', 5.19766728692163e-06], ['this->peek_token()->string_value();', 5.19766728692163e-06], ['(!tag.empty())', 5.19766728692163e-06], ['sfl->back().set_tag(tag);', 5.19766728692163e-06], ['til.push_back(Typed_identifier(name,', 5.19766728692163e-06], ['(!this->advance_token()->is_op(OPERATOR_COMMA))', 5.19766728692163e-06], ['(Typed_identifier_list::iterator', 5.19766728692163e-06], ['SendChannel', 5.19766728692163e-06], ['RecvChannel', 5.19766728692163e-06], ['"<-"', 5.19766728692163e-06], ['(token->is_op(OPERATOR_RPAREN))', 5.19766728692163e-06], ['%<)%>', 5.19766728692163e-06], ['&names);', 5.19766728692163e-06], ['ParameterList', 5.19766728692163e-06], ['is_varargs)', 5.19766728692163e-06], ['*pparams', 5.19766728692163e-06], ['parenthesis', 5.19766728692163e-06], ['id_name', 5.19766728692163e-06], ['ret->push_back(Typed_identifier(id_name,', 5.19766728692163e-06], ['this->peek_token()->identifier();', 5.19766728692163e-06], ['this->peek_token()->is_identifier_exported();', 5.19766728692163e-06], ['")".', 5.19766728692163e-06], ['(this->advance_token()->is_op(OPERATOR_RPAREN))', 5.19766728692163e-06], ['this->peek_token()->is_op(OPERATOR_RPAREN))', 5.19766728692163e-06], ['this->parameter_decl(parameters_have_names,', 5.19766728692163e-06], ['&mix_error,', 5.19766728692163e-06], ['&saw_error);', 5.19766728692163e-06], ['parameter");', 5.19766728692163e-06], ['%<...%>");', 5.19766728692163e-06], ['this->type_name(false);', 5.19766728692163e-06], ['(!this->peek_token()->is_op(OPERATOR_COMMA)', 5.19766728692163e-06], ['*mix_error', 5.19766728692163e-06], ['til->push_back(Typed_identifier("",', 5.19766728692163e-06], ['orig_count', 5.19766728692163e-06], ['til->size();', 5.19766728692163e-06], ['(this->peek_token()->is_identifier())', 5.19766728692163e-06], ['(this->peek_token()->is_op(OPERATOR_LPAREN))', 5.19766728692163e-06], ['(!token->is_eof())', 5.19766728692163e-06], ['MethodSpecList', 5.19766728692163e-06], ['this->method_spec(methods);', 5.19766728692163e-06], ['(this->advance_token()->is_op(OPERATOR_RCURLY))', 5.19766728692163e-06], ['MethodName', 5.19766728692163e-06], ['InterfaceTypeName', 5.19766728692163e-06], ['(!this->peek_token()->is_op(OPERATOR_SEMICOLON)', 5.19766728692163e-06], ['ConstDecl', 5.19766728692163e-06], ['TypeDecl', 5.19766728692163e-06], ['VarDecl', 5.19766728692163e-06], ['MethodDecl', 5.19766728692163e-06], ['(token->is_keyword(KEYWORD_VAR))', 5.19766728692163e-06], ['this->var_decl();', 5.19766728692163e-06], ['List<P>', 5.19766728692163e-06], ['(Parse::*pfn)(void*,', 5.19766728692163e-06], ['int),', 5.19766728692163e-06], ['pragmas);', 5.19766728692163e-06], ["'}'", 5.19766728692163e-06], ['OPERATOR_RPAREN', 5.19766728692163e-06], ['this->peek_token()->is_op(OPERATOR_COMMA))', 5.19766728692163e-06], ['this->const_spec(iota,', 5.19766728692163e-06], ['&last_type,', 5.19766728692163e-06], ['&last_expr_list);', 5.19766728692163e-06], ['(!this->skip_past_error(OPERATOR_RPAREN))', 5.19766728692163e-06], ['this->identifier_list(&til);', 5.19766728692163e-06], ['*last_type', 5.19766728692163e-06], ['*last_expr_list', 5.19766728692163e-06], ['(!this->peek_token()->is_op(OPERATOR_EQ))', 5.19766728692163e-06], ['(*last_expr_list', 5.19766728692163e-06], ['(pe', 5.19766728692163e-06], ['expr_list->end())', 5.19766728692163e-06], ['iota);', 5.19766728692163e-06], ['"type"', 5.19766728692163e-06], ['(!token->is_op(OPERATOR_SEMICOLON))', 5.19766728692163e-06], ['!this->peek_token()->is_op(OPERATOR_SEMICOLON)', 5.19766728692163e-06], ['(this->peek_token()->is_op(OPERATOR_EQ))', 5.19766728692163e-06], ['this->init_vars(&til,', 5.19766728692163e-06], ['init->size()', 5.19766728692163e-06], ['go_assert(pexpr', 5.19766728692163e-06], ['init->end());', 5.19766728692163e-06], ['first_var', 5.19766728692163e-06], ['Index_expression*', 5.19766728692163e-06], ['val_no->is_variable())', 5.19766728692163e-06], ['val_no->var_value()->set_type_from_init_tuple();', 5.19766728692163e-06], ['this->create_dummy_global(Type::lookup_bool_type(),', 5.19766728692163e-06], ['(receive', 5.19766728692163e-06], ['(type_guard', 5.19766728692163e-06], ['type_guard->expr();', 5.19766728692163e-06], ['this->create_dummy_global(type,', 5.19766728692163e-06], ['IS_COLONEQ', 5.19766728692163e-06], ['(!type_from_init', 5.19766728692163e-06], ['this->gogo_->add_variable(buf,', 5.19766728692163e-06], ['this->gogo_->add_sink();', 5.19766728692163e-06], ['(is_coloneq)', 5.19766728692163e-06], ['go_assert(!this->gogo_->in_global_scope());', 5.19766728692163e-06], ['0"', 5.19766728692163e-06], ['P_RANGE_CLAUSE', 5.19766728692163e-06], ['P_TYPE_SWITCH', 5.19766728692163e-06], ['Type_switch*', 5.19766728692163e-06], ['p_type_switch)', 5.19766728692163e-06], ['is_id_exported);', 5.19766728692163e-06], ['uniq_idents.insert(id);', 5.19766728692163e-06], ['!Gogo::is_sink_name(id))', 5.19766728692163e-06], ['Gogo::message_name(id).c_str());', 5.19766728692163e-06], ['til.push_back(Typed_identifier(id,', 5.19766728692163e-06], ['Gogo::message_name(id);', 5.19766728692163e-06], ['COLONEQ,', 5.19766728692163e-06], ['this->range_clause_decl(&til,', 5.19766728692163e-06], ['p_type_switch->location', 5.19766728692163e-06], ['p_type_switch->expr', 5.19766728692163e-06], ['this->expression_list(expr,', 5.19766728692163e-06], ['Receiver', 5.19766728692163e-06], ['comments.', 5.19766728692163e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_FUNC));', 5.19766728692163e-06], ['expected_receiver', 5.19766728692163e-06], ['(!token->is_string())', 5.19766728692163e-06], ['(!Gogo::is_sink_name(name))', 5.19766728692163e-06], ['this->gogo_->declare_function(name,', 5.19766728692163e-06], ['semi_loc));', 5.19766728692163e-06], ['(is_decl)', 5.19766728692163e-06], ['definition"),', 5.19766728692163e-06], ['this->gogo_->add_erroneous_name(name);', 5.19766728692163e-06], ['named_object->is_function_declaration())', 5.19766728692163e-06], ['hold_is_erroneous_function', 5.19766728692163e-06], ['this->is_erroneous_function_;', 5.19766728692163e-06], ['this->gogo_->finish_function(end_loc);', 5.19766728692163e-06], ['hold_is_erroneous_function;', 5.19766728692163e-06], ['&til->front();', 5.19766728692163e-06], ['BasicLit', 5.19766728692163e-06], ['CompositeLit', 5.19766728692163e-06], ['FunctionLit', 5.19766728692163e-06], ['in_function;', 5.19766728692163e-06], ['&in_function);', 5.19766728692163e-06], ['go_assert(in_function', 5.19766728692163e-06], ['n1.c_str(),', 5.19766728692163e-06], ['n2.c_str());', 5.19766728692163e-06], ['this->gogo_->current_function()', 5.19766728692163e-06], ['(named_object->is_variable()', 5.19766728692163e-06], ['named_object->is_result_variable()))', 5.19766728692163e-06], ['this->enclosing_var_reference(in_function,', 5.19766728692163e-06], ['(named_object->classification())', 5.19766728692163e-06], ['Expression::make_const_reference(named_object,', 5.19766728692163e-06], ['left-hand-side', 5.19766728692163e-06], ['(!may_be_sink)', 5.19766728692163e-06], ['this->mark_var_used(named_object);', 5.19766728692163e-06], ['Expression::make_var_reference(named_object,', 5.19766728692163e-06], ['Expression::make_func_reference(named_object,', 5.19766728692163e-06], ['KEYWORD_CHAN:', 5.19766728692163e-06], ['in_function,', 5.19766728692163e-06], ['Enclosing_var', 5.19766728692163e-06], ['closure_ref', 5.19766728692163e-06], ['LiteralType', 5.19766728692163e-06], ['ElementList', 5.19766728692163e-06], ['FieldName', 5.19766728692163e-06], ['ElementIndex', 5.19766728692163e-06], ['Expression::make_composite_literal(type,', 5.19766728692163e-06], ['has_keys', 5.19766728692163e-06], ['all_are_names', 5.19766728692163e-06], ['is_type_omitted', 5.19766728692163e-06], ['(this->advance_token()->is_op(OPERATOR_COLON))', 5.19766728692163e-06], ['this->composite_lit(type,', 5.19766728692163e-06], ['fntype_is_error', 5.19766728692163e-06], ['Expression::make_type(type,', 5.19766728692163e-06], ['this->break_stack_;', 5.19766728692163e-06], ['this->continue_stack_;', 5.19766728692163e-06], ['PrimaryExpr', 5.19766728692163e-06], ['Selector', 5.19766728692163e-06], ['TypeGuard', 5.19766728692163e-06], ['this->peek_token()->is_op(OPERATOR_LCURLY))', 5.19766728692163e-06], ['ret->location());', 5.19766728692163e-06], ['ret->type();', 5.19766728692163e-06], ['go_error_at(start_loc,', 5.19766728692163e-06], ['is_parenthesized', 5.19766728692163e-06], ['(this->advance_token()->is_op(OPERATOR_RSQUARE))', 5.19766728692163e-06], ['ArgumentList', 5.19766728692163e-06], ['is_parenthesized);', 5.19766728692163e-06], ['(token->op())', 5.19766728692163e-06], ['Expression::make_receive(expr,', 5.19766728692163e-06], ['<-,', 5.19766728692163e-06], ['LabeledStmt', 5.19766728692163e-06], ['SwitchStmt', 5.19766728692163e-06], ['KEYWORD_CONST:', 5.19766728692163e-06], ['KEYWORD_TYPE:', 5.19766728692163e-06], ['KEYWORD_VAR:', 5.19766728692163e-06], ['this->declaration();', 5.19766728692163e-06], ['KEYWORD_GO:', 5.19766728692163e-06], ['KEYWORD_DEFER:', 5.19766728692163e-06], ['KEYWORD_GOTO:', 5.19766728692163e-06], ['KEYWORD_IF:', 5.19766728692163e-06], ['this->if_stat();', 5.19766728692163e-06], ['KEYWORD_SWITCH:', 5.19766728692163e-06], ['KEYWORD_SELECT:', 5.19766728692163e-06], ['KEYWORD_FOR:', 5.19766728692163e-06], ['this->expression_may_start_here();', 5.19766728692163e-06], ['Label', 5.19766728692163e-06], ['EmptyStmt', 5.19766728692163e-06], ['ExpressionStat,', 5.19766728692163e-06], ['(token->is_op(OPERATOR_COLONEQ)', 5.19766728692163e-06], ['(return_exp', 5.19766728692163e-06], ['(this->statement_may_start_here())', 5.19766728692163e-06], ['this->statement(NULL);', 5.19766728692163e-06], ['RANGE_CLAUSE', 5.19766728692163e-06], ['((*pe)->is_error_expression())', 5.19766728692163e-06], ['go/defer', 5.19766728692163e-06], ['(this->simple_stat_may_start_here())', 5.19766728692163e-06], ['this->peek_token()->is_op(OPERATOR_SEMICOLON))', 5.19766728692163e-06], ['this->expression_stat(cond);', 5.19766728692163e-06], ['go_error_at(semi_loc,', 5.19766728692163e-06], ['this->block', 5.19766728692163e-06], ['this->gogo_->finish_block(end_loc);', 5.19766728692163e-06], ['ExprSwitchStmt', 5.19766728692163e-06], ['TypeSwitchStmt', 5.19766728692163e-06], ['"switch"', 5.19766728692163e-06], ['TypeSwitchGuard', 5.19766728692163e-06], ['saw_send_stmt;', 5.19766728692163e-06], ['have_type_switch_block', 5.19766728692163e-06], ['&type_switch);', 5.19766728692163e-06], ['!type_switch.found)', 5.19766728692163e-06], ['&type_switch.found,', 5.19766728692163e-06], ['type_switch.expr', 5.19766728692163e-06], ['this->gogo_->add_block(this->gogo_->finish_block(location),', 5.19766728692163e-06], ['type_switch,', 5.19766728692163e-06], ['switch_val,', 5.19766728692163e-06], ['this->gogo_->add_statement(statement);', 5.19766728692163e-06], ['case_clauses', 5.19766728692163e-06], ['&saw_default);', 5.19766728692163e-06], ['statement->add_clauses(case_clauses);', 5.19766728692163e-06], ['ExprSwitchCase', 5.19766728692163e-06], ['saw_default)', 5.19766728692163e-06], ['%<:%>");', 5.19766728692163e-06], ['(this->statement_list_may_start_here())', 5.19766728692163e-06], ['is_fallthrough', 5.19766728692163e-06], ['(this->advance_token()->is_op(OPERATOR_SEMICOLON))', 5.19766728692163e-06], ['go_error_at(fallthrough_loc,', 5.19766728692163e-06], ['(!this->peek_token()->is_keyword(KEYWORD_CASE)', 5.19766728692163e-06], ['"fallthrough', 5.19766728692163e-06], ['is_default,', 5.19766728692163e-06], ['go_error_at(type_switch.location,', 5.19766728692163e-06], ['Type_case_clauses*', 5.19766728692163e-06], ['TypeSwitchCase', 5.19766728692163e-06], ['&is_default);', 5.19766728692163e-06], ['CommClause', 5.19766728692163e-06], ['CommCase', 5.19766728692163e-06], ['closedvar', 5.19766728692163e-06], ['select");', 5.19766728692163e-06], ['RecvStmt', 5.19766728692163e-06], ['is_send,', 5.19766728692163e-06], ['RecvExpr', 5.19766728692163e-06], ['closed_is_id', 5.19766728692163e-06], ['e->receive_expression();', 5.19766728692163e-06], ['(re', 5.19766728692163e-06], ['(!e->is_error_expression())', 5.19766728692163e-06], ['go_error_at(recv_var_loc,', 5.19766728692163e-06], ['*varname', 5.19766728692163e-06], ['gogo->pack_hidden_name(recv_var,', 5.19766728692163e-06], ['is_rv_exported);', 5.19766728692163e-06], ['re->channel();', 5.19766728692163e-06], ['recv_closed', 5.19766728692163e-06], ['SAW_COMMA', 5.19766728692163e-06], ['*VAL', 5.19766728692163e-06], ["':'.", 5.19766728692163e-06], ["'<-',", 5.19766728692163e-06], ['(!this->peek_token()->is_op(OPERATOR_CHANOP))', 5.19766728692163e-06], ['v:', 5.19766728692163e-06], ['(saw_comma)', 5.19766728692163e-06], ['ForClause', 5.19766728692163e-06], ['RangeClause', 5.19766728692163e-06], ['this->for_clause(&cond,', 5.19766728692163e-06], ['(!this->peek_token()->is_op(OPERATOR_SEMICOLON))', 5.19766728692163e-06], ['sfor;', 5.19766728692163e-06], ['srange;', 5.19766728692163e-06], ['sfor', 5.19766728692163e-06], ['srange', 5.19766728692163e-06], ['PostStat', 5.19766728692163e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_RANGE));', 5.19766728692163e-06], ['p_range_clause->found', 5.19766728692163e-06], ['p_range_clause->range', 5.19766728692163e-06], ['pti', 5.19766728692163e-06], ['this->init_var(*pti,', 5.19766728692163e-06], ['p_range_clause->index', 5.19766728692163e-06], ['Bc_stack();', 5.19766728692163e-06], ['enclosing;', 5.19766728692163e-06], ['token->identifier());', 5.19766728692163e-06], ['Linemap::unknown_location(),', 5.19766728692163e-06], ['Gogo::message_name(token->identifier()).c_str());', 5.19766728692163e-06], ['Statement::STATEMENT_FOR)', 5.19766728692163e-06], ['Statement::STATEMENT_FOR_RANGE)', 5.19766728692163e-06], ['PackageClause', 5.19766728692163e-06], ['"ERROR";', 5.19766728692163e-06], ['ImportDecl', 5.19766728692163e-06], ['is_local_name_exported', 5.19766728692163e-06], ['local_name', 5.19766728692163e-06], ['quals', 5.19766728692163e-06], ['MODconst:', 5.19766728692163e-06], ['MODwild:', 5.19766728692163e-06], ['MODwildconst:', 5.19766728692163e-06], ['TYPE_SHARED', 5.19766728692163e-06], ['var->csym', 5.19766728692163e-06], ['(!inherited_p)', 5.19766728692163e-06], ['UNION_TYPE', 5.19766728692163e-06], ['(!id', 5.19766728692163e-06], ['alignsize,', 5.19766728692163e-06], ['*eattrs', 5.19766728692163e-06], ['(eattrs),', 5.19766728692163e-06], ['ATTR_FLAG_TYPE_IN_PLACE);', 5.19766728692163e-06], ['(structsize', 5.19766728692163e-06], ['(structsize);', 5.19766728692163e-06], ['(alignsize', 5.19766728692163e-06], ['compute_record_mode', 5.19766728692163e-06], ['TYPE_USER_ALIGN', 5.19766728692163e-06], ['754', 5.19766728692163e-06], ['real.', 5.19766728692163e-06], ['(t->varargs', 5.19766728692163e-06], ['(t->next);', 5.19766728692163e-06], ['(dgtype)', 5.19766728692163e-06], ['(t->sym->memtype)', 5.19766728692163e-06], ['(t->sym->members)', 5.19766728692163e-06], ['Templated', 5.19766728692163e-06], ['basetype);', 5.19766728692163e-06], ['enumeration', 5.19766728692163e-06], ['laying', 5.19766728692163e-06], ['(t->sym,', 5.19766728692163e-06], ['t->ctype,', 5.19766728692163e-06], ['t->sym->userAttribDecl);', 5.19766728692163e-06], ['(t->sym);', 5.19766728692163e-06], ['destructor,', 5.19766728692163e-06], ['(tv))', 5.19766728692163e-06], ['(tv)', 5.19766728692163e-06], ['TYPE_BINFO', 5.19766728692163e-06], ['(method)', 5.19766728692163e-06], ['termination.', 5.19766728692163e-06], ['determines', 5.19766728692163e-06], ['structure,', 5.19766728692163e-06], ['DSO', 5.19766728692163e-06], ["`dso_initialized'", 5.19766728692163e-06], ["`minfo'", 5.19766728692163e-06], ['testing,', 5.19766728692163e-06], ['IDENT.', 5.19766728692163e-06], ['build_internal_fn', 5.19766728692163e-06], ['unittests,', 5.19766728692163e-06], ['call_expr);', 5.19766728692163e-06], ['get_moduleinfo_type', 5.19766728692163e-06], ['flags;', 5.19766728692163e-06], ['(d_uint_type,', 5.19766728692163e-06], ['get_moduleinfo_decl', 5.19766728692163e-06], ['ModuleInfo**', 5.19766728692163e-06], ['FuncTable*', 5.19766728692163e-06], ['(get_moduleinfo_type', 5.19766728692163e-06], ['dso_type', 5.19766728692163e-06], ['ctor_p', 5.19766728692163e-06], ['GDC_PREFIX', 5.19766728692163e-06], ['(dso_initialized', 5.19766728692163e-06], ['dso_initialized', 5.19766728692163e-06], ['condition;', 5.19766728692163e-06], ['{1,', 5.19766728692163e-06], ['&dsoSlot,', 5.19766728692163e-06], ['&__start_minfo,', 5.19766728692163e-06], ['&__stop_minfo};', 5.19766728692163e-06], ['(&dso);', 5.19766728692163e-06], ['VISIBILITY_HIDDEN;', 5.19766728692163e-06], ['(dso_initialized_node,', 5.19766728692163e-06], ['register_moduleinfo', 5.19766728692163e-06], ['(minfo);', 5.19766728692163e-06], ['(mref,', 5.19766728692163e-06], ['first_module', 5.19766728692163e-06], ['(GDC_PREFIX', 5.19766728692163e-06], ['(true);', 5.19766728692163e-06], ['moduleinfo', 5.19766728692163e-06], ['layout_moduleinfo_fields', 5.19766728692163e-06], ['(decl->sctor)', 5.19766728692163e-06], ['(decl->sdtor)', 5.19766728692163e-06], ['(decl->ssharedctor)', 5.19766728692163e-06], ['(decl->sshareddtor)', 5.19766728692163e-06], ['(decl->sictor)', 5.19766728692163e-06], ['(decl->stest)', 5.19766728692163e-06], ['aimports_dim', 5.19766728692163e-06], ['(!mi->needmoduleinfo)', 5.19766728692163e-06], ['aimports_dim--;', 5.19766728692163e-06], ['(aimports_dim)', 5.19766728692163e-06], ['ClassDeclarations', 5.19766728692163e-06], ['aclasses;', 5.19766728692163e-06], ['member->addLocalClass', 5.19766728692163e-06], ['(&aclasses);', 5.19766728692163e-06], ['(aclasses.dim)', 5.19766728692163e-06], ['druntime.', 5.19766728692163e-06], ['layout_moduleinfo', 5.19766728692163e-06], ['d_uint_type));', 5.19766728692163e-06], ['elms));', 5.19766728692163e-06], ['(minfo)', 5.19766728692163e-06], ['current_moduleinfo', 5.19766728692163e-06], ['current_module_decl', 5.19766728692163e-06], ['templates.', 5.19766728692163e-06], ['*vgate', 5.19766728692163e-06], ['fd)->vgate;', 5.19766728692163e-06], ['(vgate', 5.19766728692163e-06], ['(vgate);', 5.19766728692163e-06], ['gate);', 5.19766728692163e-06], ['vec_safe_insert', 5.19766728692163e-06], ['(get_file_function_name', 5.19766728692163e-06], ['DEFAULT_INIT_PRIORITY);', 5.19766728692163e-06], ['BrigInstLane', 5.19766728692163e-06], ['use_identity', 5.19766728692163e-06], ['varname_offset_table::const_iterator', 5.19766728692163e-06], ['m_group_offsets.find', 5.19766728692163e-06], ['m_group_offsets.end', 5.19766728692163e-06], ['gcc-hsa', 5.19766728692163e-06], ['BRIG_TYPE_NONE:', 5.19766728692163e-06], ['BRIG_TYPE_B1:', 5.19766728692163e-06], ['BRIG_TYPE_B8:', 5.19766728692163e-06], ['BRIG_TYPE_B16:', 5.19766728692163e-06], ['BRIG_TYPE_B32:', 5.19766728692163e-06], ['BRIG_TYPE_B64:', 5.19766728692163e-06], ['BRIG_TYPE_B128:', 5.19766728692163e-06], ['BRIG_TYPE_S8;', 5.19766728692163e-06], ['BRIG_TYPE_S16;', 5.19766728692163e-06], ['BRIG_TYPE_S32;', 5.19766728692163e-06], ['BRIG_TYPE_S64;', 5.19766728692163e-06], ['pack_type;', 5.19766728692163e-06], ['(inner_brig_type);', 5.19766728692163e-06], ['(brig_type),', 5.19766728692163e-06], ['signals', 5.19766728692163e-06], ['mandated', 5.19766728692163e-06], ['samplers', 5.19766728692163e-06], ['blobs', 5.19766728692163e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT', 5.19766728692163e-06], ['gccbrig_hsa_reg_name_from_id', 5.19766728692163e-06], ['regs_use_index::const_iterator', 5.19766728692163e-06], ['reg_use_it', 5.19766728692163e-06], ['directories', 5.19766728692163e-06], ['prefixed_path', 5.19766728692163e-06], ['(!strncmp', 5.19766728692163e-06], ['PATHS', 5.19766728692163e-06], ['add_globalpaths', 5.19766728692163e-06], ['(Strings', 5.19766728692163e-06], ['*paths)', 5.19766728692163e-06], ['(paths)', 5.19766728692163e-06], ['paths->dim;', 5.19766728692163e-06], ['(*paths)[i];', 5.19766728692163e-06], ['*target', 5.19766728692163e-06], ['lrealpath', 5.19766728692163e-06], ['(target)', 5.19766728692163e-06], ['target));', 5.19766728692163e-06], ['add_filepaths', 5.19766728692163e-06], ['global.params.imppath->dim;', 5.19766728692163e-06], ['global.params.imppath->shift', 5.19766728692163e-06], ['(path)', 5.19766728692163e-06], ['(FileName::splitPath', 5.19766728692163e-06], ['(path));', 5.19766728692163e-06], ['1985', 5.19766728692163e-06], ['Computer', 5.19766728692163e-06], ['University', 5.19766728692163e-06], ['Rather', 5.19766728692163e-06], ['languages.', 5.19766728692163e-06], ['RadixD2', 5.19766728692163e-06], ['PageNo', 5.19766728692163e-06], ['E3', 5.19766728692163e-06], ['X8', 5.19766728692163e-06], ['Q9', 5.19766728692163e-06], ['NoTrials', 5.19766728692163e-06], ['Random9', 5.19766728692163e-06], ['Real', 5.19766728692163e-06], ['procedures', 5.19766728692163e-06], ['NewD', 5.19766728692163e-06], ['PrintIfNPositive', 5.19766728692163e-06], ["I'm", 5.19766728692163e-06], ['setjmp', 5.19766728692163e-06], ['nothing.', 5.19766728692163e-06], ['from_long(l);', 5.19766728692163e-06], ['real_c_float(const', 5.19766728692163e-06], ['memcpy(image,', 5.19766728692163e-06], ['sizeof(image));', 5.19766728692163e-06], ['operator+=', 5.19766728692163e-06], ['operator-=', 5.19766728692163e-06], ['operator*=', 5.19766728692163e-06], ['operator/=', 5.19766728692163e-06], ['r(*this);', 5.19766728692163e-06], ['ldexp', 5.19766728692163e-06], ['(strcasecmp(p,', 5.19766728692163e-06], ['(&bi,', 5.19766728692163e-06], ['&bi);', 5.19766728692163e-06], ['rb[64];', 5.19766728692163e-06], ['&bi,', 5.19766728692163e-06], ['sizeof(bb),', 5.19766728692163e-06], ['(rb,', 5.19766728692163e-06], ['sizeof(rb),', 5.19766728692163e-06], ['rb);', 5.19766728692163e-06], ['*symbol_for_code;', 5.19766728692163e-06], ['.30102999566398119521', 5.19766728692163e-06], ['char[digits', 5.19766728692163e-06], ['10];', 5.19766728692163e-06], ['digits+10,', 5.19766728692163e-06], ['(T,', 5.19766728692163e-06], ['native_float(const', 5.19766728692163e-06], ['b.image;', 5.19766728692163e-06], ['r.image', 5.19766728692163e-06], ['%.*a\\n",', 5.19766728692163e-06], ['(double)b,', 5.19766728692163e-06], ['(double)r);', 5.19766728692163e-06], ['%.*La\\n",', 5.19766728692163e-06], ['double)b,', 5.19766728692163e-06], ['double)r);', 5.19766728692163e-06], ['*symbol,', 5.19766728692163e-06], ['char[50];', 5.19766728692163e-06], ['(double)', 5.19766728692163e-06], ['one)', 5.19766728692163e-06], ['diff2', 5.19766728692163e-06], ['(z', 5.19766728692163e-06], ['(f.hex(),', 5.19766728692163e-06], ['log', 5.19766728692163e-06], ['Cheat.', 5.19766728692163e-06], ['POW', 5.19766728692163e-06], ['d1', 5.19766728692163e-06], ['(base.hex(),', 5.19766728692163e-06], ['(exp.hex(),', 5.19766728692163e-06], ['ld1', 5.19766728692163e-06], ['do_pause', 5.19766728692163e-06], ['Rounding', 5.19766728692163e-06], ['Nine;', 5.19766728692163e-06], ['TwentySeven;', 5.19766728692163e-06], ['CInvrse;', 5.19766728692163e-06], ['Random9;', 5.19766728692163e-06], ['Underflow,', 5.19766728692163e-06], ['X1,', 5.19766728692163e-06], ['Random1;', 5.19766728692163e-06], ['Y1,', 5.19766728692163e-06], ['Random2;', 5.19766728692163e-06], ['Z9;', 5.19766728692163e-06], ['gap', 5.19766728692163e-06], ['1.0,', 5.19766728692163e-06], ['-0.0', 5.19766728692163e-06], ['"4', 5.19766728692163e-06], ['Three),', 5.19766728692163e-06], ['Four),', 5.19766728692163e-06], ['(ThirtyTwo', 5.19766728692163e-06], ['One,', 5.19766728692163e-06], ['(ErrCnt[Failure]', 5.19766728692163e-06], ['("Searching', 5.19766728692163e-06], ['("Radix', 5.19766728692163e-06], ['W)', 5.19766728692163e-06], ['U1.str());', 5.19766728692163e-06], ['F6;', 5.19766728692163e-06], ['(unknown', 5.19766728692163e-06], ['no.)', 5.19766728692163e-06], ['ulps', 5.19766728692163e-06], ['ulp', 5.19766728692163e-06], ['E1)', 5.19766728692163e-06], ['.\\n");', 5.19766728692163e-06], ['Half,', 5.19766728692163e-06], ['Integers', 5.19766728692163e-06], ['((Precision', 5.19766728692163e-06], ['(Precision))', 5.19766728692163e-06], ['One))', 5.19766728692163e-06], ['characterized', 5.19766728692163e-06], ['("of', 5.19766728692163e-06], ['extra-precise', 5.19766728692163e-06], ['Four);', 5.19766728692163e-06], ['Z1))', 5.19766728692163e-06], ['Two))', 5.19766728692163e-06], ['((Half', 5.19766728692163e-06], ['((X1', 5.19766728692163e-06], ['Y1)', 5.19766728692163e-06], ['this");', 5.19766728692163e-06], ['("That', 5.19766728692163e-06], ['program.\\n");', 5.19766728692163e-06], ['Radix);', 5.19766728692163e-06], ['/,', 5.19766728692163e-06], ['X");', 5.19766728692163e-06], ['"Division', 5.19766728692163e-06], ['wrong");', 5.19766728692163e-06], ['(1-U1)', 5.19766728692163e-06], ['(GMult', 5.19766728692163e-06], ['("Checking', 5.19766728692163e-06], ['AInvrse;', 5.19766728692163e-06], ['(!(Done));', 5.19766728692163e-06], ['"X', 5.19766728692163e-06], ['("Multiplication', 5.19766728692163e-06], ['chop.\\n");', 5.19766728692163e-06], ['("*', 5.19766728692163e-06], ['("Division', 5.19766728692163e-06], ['(GDiv', 5.19766728692163e-06], ['No)', 5.19766728692163e-06], ['BInvrse', 5.19766728692163e-06], ['(RAddSub', 5.19766728692163e-06], ['("Sticky', 5.19766728692163e-06], ['("Testing', 5.19766728692163e-06], ['pairs.\\n",', 5.19766728692163e-06], ['(!((I', 5.19766728692163e-06], ['(Z9', 5.19766728692163e-06], ['((U2', 5.19766728692163e-06], ['(J', 5.19766728692163e-06], ['((Radix', 5.19766728692163e-06], ['NotMonot', 5.19766728692163e-06], ['Q)', 5.19766728692163e-06], ['E0.\\n");', 5.19766728692163e-06], ['Y2);', 5.19766728692163e-06], ['PseudoZero.str());', 5.19766728692163e-06], ['"Underflow', 5.19766728692163e-06], ['higher");', 5.19766728692163e-06], ['(UfThold', 5.19766728692163e-06], ['UfNGrad', 5.19766728692163e-06], ['((CInvrse', 5.19766728692163e-06], ['Y|', 5.19766728692163e-06], ['Y2.str());', 5.19766728692163e-06], ['("Underflow', 5.19766728692163e-06], ['H));', 5.19766728692163e-06], ['SERIOUS', 5.19766728692163e-06], ['("Since', 5.19766728692163e-06], ['(%s)', 5.19766728692163e-06], ['HInvrse.str(),', 5.19766728692163e-06], ['underflow\\n");', 5.19766728692163e-06], ['(HInvrse', 5.19766728692163e-06], ['HInvrse);', 5.19766728692163e-06], ['HInvrse)', 5.19766728692163e-06], ['V0;', 5.19766728692163e-06], ['("Overflow', 5.19766728692163e-06], ['traps', 5.19766728692163e-06], ['("No', 5.19766728692163e-06], ['(Indx)', 5.19766728692163e-06], ['sqrt(Z)', 5.19766728692163e-06], ['("What', 5.19766728692163e-06], ['Trying', 5.19766728692163e-06], ['...");', 5.19766728692163e-06], ['(!setjmp', 5.19766728692163e-06], ['MyZero).str());', 5.19766728692163e-06], ['*msg[]', 5.19766728692163e-06], ['"SERIOUS', 5.19766728692163e-06], ['Defects.\\n");', 5.19766728692163e-06], ['(".\\n");', 5.19766728692163e-06], ['K,', 5.19766728692163e-06], ['*T)', 5.19766728692163e-06], ['ErrCnt[K]', 5.19766728692163e-06], ['XB;', 5.19766728692163e-06], ['MinSqEr)', 5.19766728692163e-06], ['MaxSqEr)', 5.19766728692163e-06], ['Radix)', 5.19766728692163e-06], ['X2;', 5.19766728692163e-06], ['(Q9', 5.19766728692163e-06], ['DEFECT!\\n");', 5.19766728692163e-06], ['Random2)', 5.19766728692163e-06], ['V9))', 5.19766728692163e-06], ['("Z', 5.19766728692163e-06], ['Random1.str());', 5.19766728692163e-06], ['(Random2', 5.19766728692163e-06], ['Random2.str());', 5.19766728692163e-06], ['double");', 5.19766728692163e-06], ['(map_t::iterator', 5.19766728692163e-06], ['m_map.end', 5.19766728692163e-06], ['<char', 5.19766728692163e-06], ['(pp);', 5.19766728692163e-06], ['*v)', 5.19766728692163e-06], ['json::array,', 5.19766728692163e-06], ['*v;', 5.19766728692163e-06], ['(m_elements,', 5.19766728692163e-06], ['(utf8);', 5.19766728692163e-06], ['\'"\');', 5.19766728692163e-06], ['"\\\\n");', 5.19766728692163e-06], ['"null");', 5.19766728692163e-06], ['test_writing_objects', 5.19766728692163e-06], ['("bar"));', 5.19766728692163e-06], ['test_writing_arrays', 5.19766728692163e-06], ['arr.append', 5.19766728692163e-06], ['test_writing_numbers', 5.19766728692163e-06], ['test_writing_strings', 5.19766728692163e-06], ['test_writing_literals', 5.19766728692163e-06], ['Processing', 5.19766728692163e-06], ['A,', 5.19766728692163e-06], ['(CONJ_CONSTR,', 5.19766728692163e-06], ['CALL_EXPR);', 5.19766728692163e-06], ['OVL_FIRST', 5.19766728692163e-06], ['TEMPLATE_DECL', 5.19766728692163e-06], ['DECL_DECLARED_CONCEPT_P', 5.19766728692163e-06], ['(DECL_TEMPLATE_RESULT', 5.19766728692163e-06], ['wildcard', 5.19766728692163e-06], ['pack.', 5.19766728692163e-06], ['build_call_check', 5.19766728692163e-06], ['build_variable_check', 5.19766728692163e-06], ['nerrs', 5.19766728692163e-06], ['cands', 5.19766728692163e-06], ['substitution.', 5.19766728692163e-06], ['coerce_template_parms', 5.19766728692163e-06], ['CALL', 5.19766728692163e-06], ['BASELINK_FUNCTIONS', 5.19766728692163e-06], ['INNERMOST_TEMPLATE_PARMS', 5.19766728692163e-06], ['deduce_concept_introduction', 5.19766728692163e-06], ['memoize', 5.19766728692163e-06], ['C2,', 5.19766728692163e-06], ['D<T>', 5.19766728692163e-06], ['C1.', 5.19766728692163e-06], ['(child,', 5.19766728692163e-06], ['(constr))', 5.19766728692163e-06], ['(cxt', 5.19766728692163e-06], ['CONSTR', 5.19766728692163e-06], ['disjunctions', 5.19766728692163e-06], ['constr)', 5.19766728692163e-06], ['(!uses_template_parms', 5.19766728692163e-06], ['get_returned_expression', 5.19766728692163e-06], ['BIND_EXPR)', 5.19766728692163e-06], ['(body);', 5.19766728692163e-06], ['get_variable_initializer', 5.19766728692163e-06], ['expansion_level', 5.19766728692163e-06], ['specialization.', 5.19766728692163e-06], ['(def,', 5.19766728692163e-06], ['normalize', 5.19766728692163e-06], ['norm);', 5.19766728692163e-06], ['transform', 5.19766728692163e-06], ['normalize_simple_requirement', 5.19766728692163e-06], ['normalize_type_requirement', 5.19766728692163e-06], ['(TYPE_CONSTR,', 5.19766728692163e-06], ['normalize_compound_requirement', 5.19766728692163e-06], ['extracting', 5.19766728692163e-06], ['type_constr', 5.19766728692163e-06], ['(DEDUCT_CONSTR,', 5.19766728692163e-06], ['(ICONV_CONSTR,', 5.19766728692163e-06], ['(EXCEPT_CONSTR,', 5.19766728692163e-06], ['transforming', 5.19766728692163e-06], ['normalize_nested_requirement', 5.19766728692163e-06], ['normalize_requirement', 5.19766728692163e-06], ['SIMPLE_REQ:', 5.19766728692163e-06], ['TYPE_REQ:', 5.19766728692163e-06], ['COMPOUND_REQ:', 5.19766728692163e-06], ['NESTED_REQ:', 5.19766728692163e-06], ['normalize_requirements', 5.19766728692163e-06], ['constr);', 5.19766728692163e-06], ['normalize_requires_expression', 5.19766728692163e-06], ['normalize_template_id_expression', 5.19766728692163e-06], ['(fn)))', 5.19766728692163e-06], ['normalize_call_expression', 5.19766728692163e-06], ['Improve', 5.19766728692163e-06], ['"constraint', 5.19766728692163e-06], ['(!type', 5.19766728692163e-06], ['cv_unqualified', 5.19766728692163e-06], ['pat', 5.19766728692163e-06], ['pat);', 5.19766728692163e-06], ['expansion,', 5.19766728692163e-06], ['normalize_pack_expansion', 5.19766728692163e-06], ['normalize_any_expression', 5.19766728692163e-06], ['normalize_any_statement', 5.19766728692163e-06], ['normalize_any_declaration', 5.19766728692163e-06], ['normalize_conjunction', 5.19766728692163e-06], ['normalize_disjunction', 5.19766728692163e-06], ['specializations', 5.19766728692163e-06], ['concepts', 5.19766728692163e-06], ['normalize_predicate_constraint', 5.19766728692163e-06], ['normalize_parameterized_constraint', 5.19766728692163e-06], ['(PARM_CONSTR_OPERAND', 5.19766728692163e-06], ['comprised', 5.19766728692163e-06], ['Semantic', 5.19766728692163e-06], ['current_template_constraints', 5.19766728692163e-06], ['(!current_template_parms)', 5.19766728692163e-06], ['TEMPLATE_PARM_CONSTRAINTS', 5.19766728692163e-06], ['(tmpl_constr,', 5.19766728692163e-06], ['tree_constraint_info*', 5.19766728692163e-06], ['build_constraint_info', 5.19766728692163e-06], ['REST', 5.19766728692163e-06], ['build_concept_check_arguments', 5.19766728692163e-06], ['rest)', 5.19766728692163e-06], ['(rest', 5.19766728692163e-06], ['SET_NON_DEFAULT_TEMPLATE_ARGS_COUNT', 5.19766728692163e-06], ['CNC.', 5.19766728692163e-06], ['(proto);', 5.19766728692163e-06], ['CONSTRAINED_PARM_CONCEPT', 5.19766728692163e-06], ['CONSTRAINED_PARM_EXTRA_ARGS', 5.19766728692163e-06], ['finish_shorthand_constraint', 5.19766728692163e-06], ['template_parameter_pack_p', 5.19766728692163e-06], ['is_decl_pack', 5.19766728692163e-06], ['template_parm_to_arg', 5.19766728692163e-06], ['(apply_to_all_p)', 5.19766728692163e-06], ['expansion.', 5.19766728692163e-06], ['process_introduction_parm', 5.19766728692163e-06], ['src_parm', 5.19766728692163e-06], ['grab', 5.19766728692163e-06], ['chained', 5.19766728692163e-06], ['(parameter_list,', 5.19766728692163e-06], ['parm;', 5.19766728692163e-06], ['TYPE_DECL)', 5.19766728692163e-06], ['(class_type_node,', 5.19766728692163e-06], ['begin_template_parm_list', 5.19766728692163e-06], ['end_template_parm_list', 5.19766728692163e-06], ['(tmpl_decl,', 5.19766728692163e-06], ['(TREE_VEC_LENGTH', 5.19766728692163e-06], ['tsubst_predicate_constraint', 5.19766728692163e-06], ['tsubst_check_constraint', 5.19766728692163e-06], ['tsubst_logical_operator', 5.19766728692163e-06], ['tsubst_expr_constr', 5.19766728692163e-06], ['tsubst_type_constr', 5.19766728692163e-06], ['tsubst_implicit_conversion_constr', 5.19766728692163e-06], ['ICONV_CONSTR_EXPR', 5.19766728692163e-06], ['new_expr', 5.19766728692163e-06], ['(new_expr', 5.19766728692163e-06], ['new_expr,', 5.19766728692163e-06], ['tsubst_argument_deduction_constr', 5.19766728692163e-06], ['(pattern,', 5.19766728692163e-06], ['tsubst_exception_constr', 5.19766728692163e-06], ['PARMS', 5.19766728692163e-06], ['declare_constraint_vars', 5.19766728692163e-06], ['register_local_specialization', 5.19766728692163e-06], ['vars);', 5.19766728692163e-06], ['tsubst_parameterized_constraint', 5.19766728692163e-06], ['tsubst_simple_requirement', 5.19766728692163e-06], ['finish_simple_requirement', 5.19766728692163e-06], ['tsubst_type_requirement', 5.19766728692163e-06], ['finish_type_requirement', 5.19766728692163e-06], ['tsubst_compound_requirement', 5.19766728692163e-06], ['COMPOUND_REQ_NOEXCEPT_P', 5.19766728692163e-06], ['finish_compound_requirement', 5.19766728692163e-06], ['tsubst_nested_requirement', 5.19766728692163e-06], ['finish_nested_requirement', 5.19766728692163e-06], ['tsubst_requirement', 5.19766728692163e-06], ['tsubst_requirement_body', 5.19766728692163e-06], ['reqs', 5.19766728692163e-06], ['finish_requires_expr', 5.19766728692163e-06], ['reqs);', 5.19766728692163e-06], ['decl_constr', 5.19766728692163e-06], ['satisfy_pack_expansion', 5.19766728692163e-06], ['tsubst_pack_expansion', 5.19766728692163e-06], ['(exprs', 5.19766728692163e-06], ['(exprs);', 5.19766728692163e-06], ['(exprs,', 5.19766728692163e-06], ['boolean_true_node)', 5.19766728692163e-06], ['satisfy_predicate_constraint', 5.19766728692163e-06], ['succeeds', 5.19766728692163e-06], ['satisfy_check_constraint', 5.19766728692163e-06], ['cargs', 5.19766728692163e-06], ['Instantiate', 5.19766728692163e-06], ['(targs', 5.19766728692163e-06], ['prev', 5.19766728692163e-06], ['prev;', 5.19766728692163e-06], ['memoize_concept_satisfaction', 5.19766728692163e-06], ['satisfy_expression_constraint', 5.19766728692163e-06], ['deferring_access_check_sentinel', 5.19766728692163e-06], ['deferring;', 5.19766728692163e-06], ['(!perform_deferred_access_checks', 5.19766728692163e-06], ['satisfy_type_constraint', 5.19766728692163e-06], ['satisfy_implicit_conversion_constraint', 5.19766728692163e-06], ['satisfy_argument_deduction_constraint', 5.19766728692163e-06], ['(placeholder);', 5.19766728692163e-06], ['satisfy_exception_constraint', 5.19766728692163e-06], ['satisfy_parameterized_constraint', 5.19766728692163e-06], ['satisfy_conjunction', 5.19766728692163e-06], ['(t0', 5.19766728692163e-06], ['satisfy_disjunction', 5.19766728692163e-06], ['satisfaction.', 5.19766728692163e-06], ['evaluate_constraints', 5.19766728692163e-06], ['evaluate_constraint_expression', 5.19766728692163e-06], ['constraints_satisfied_p', 5.19766728692163e-06], ['DECL_TEMPLATE_INFO', 5.19766728692163e-06], ['TI_TEMPLATE', 5.19766728692163e-06], ['(get_constraints', 5.19766728692163e-06], ['reqs)', 5.19766728692163e-06], ['"definition', 5.19766728692163e-06], ['equivalent_constraints', 5.19766728692163e-06], ['(!a', 5.19766728692163e-06], ['(!b', 5.19766728692163e-06], ["B's", 5.19766728692163e-06], ['(d2));', 5.19766728692163e-06], ['subsumes_constraints', 5.19766728692163e-06], ['(d1);', 5.19766728692163e-06], ['(d2);', 5.19766728692163e-06], ['(subsumes_constraints', 5.19766728692163e-06], ['D1', 5.19766728692163e-06], ['constraint_thresh', 5.19766728692163e-06], ['undiagnosed_constraint_failures', 5.19766728692163e-06], ['diagnose_trait_expression', 5.19766728692163e-06], ['assignable",', 5.19766728692163e-06], ['diagnose_other_expression', 5.19766728692163e-06], ['false",', 5.19766728692163e-06], ['diagnose_predicate_constraint', 5.19766728692163e-06], ['(cur))', 5.19766728692163e-06], ['diagnose_pack_expansion', 5.19766728692163e-06], ['diagnose_constraint.', 5.19766728692163e-06], ['diagnose_check_constraint', 5.19766728692163e-06], ['(dloc,', 5.19766728692163e-06], ['diagnose_logical_constraint', 5.19766728692163e-06], ['(!constraints_satisfied_p', 5.19766728692163e-06], ['(orig,', 5.19766728692163e-06], ['diagnose_expression_constraint', 5.19766728692163e-06], ['ill-formed",', 5.19766728692163e-06], ['"====', 5.19766728692163e-06], ['DUMP', 5.19766728692163e-06], ['====");', 5.19766728692163e-06], ['diagnose_type_constraint', 5.19766728692163e-06], ['diagnose_implicit_conversion_constraint', 5.19766728692163e-06], ['into,', 5.19766728692163e-06], ['"substitution', 5.19766728692163e-06], ['diagnose_argument_deduction_constraint', 5.19766728692163e-06], ['diagnose_exception_constraint', 5.19766728692163e-06], ['diagnose_parameterized_constraint', 5.19766728692163e-06], ['diagnose_declaration_constraints', 5.19766728692163e-06], ['unambiguous.', 5.19766728692163e-06], ['as,', 5.19766728692163e-06], ['(these', 5.19766728692163e-06], ['visible).', 5.19766728692163e-06], ['"type.."', 5.19766728692163e-06], ["'U'.", 5.19766728692163e-06], ['ITYPE', 5.19766728692163e-06], ['PKGPATH.', 5.19766728692163e-06], ['.xNN', 5.19766728692163e-06], ['digit,', 5.19766728692163e-06], ['GO_NAME', 5.19766728692163e-06], ['rtype)', 5.19766728692163e-06], ['(rtype', 5.19766728692163e-06], ['package->pkgpath();', 5.19766728692163e-06], ['ret.append(Gogo::unpack_hidden_name(go_name));', 5.19766728692163e-06], ['go_encode_id(ret);', 5.19766728692163e-06], ['"..f";', 5.19766728692163e-06], ['"..stub";', 5.19766728692163e-06], ['rtype->mangled_name(this);', 5.19766728692163e-06], ['ret.append(1,', 5.19766728692163e-06], ['toplevel_index;', 5.19766728692163e-06], ['this->init_fn_name_', 5.19766728692163e-06], ['".."', 5.19766728692163e-06], ['ri', 5.19766728692163e-06], ['Gogo::append_possibly_hidden_name(ret,', 5.19766728692163e-06], ['this->append_mangled_name(this->element_type_,', 5.19766728692163e-06], ['ret->append("{}");', 5.19766728692163e-06], ['ret->append(no->package()->pkgpath());', 5.19766728692163e-06], ['ret->append(Gogo::unpack_hidden_name(no->name()));', 5.19766728692163e-06], ['"..i%u",', 5.19766728692163e-06], ['ret.append(this->pkgpath());', 5.19766728692163e-06], ['(Note', 5.19766728692163e-06], ['method.)', 5.19766728692163e-06], ['src0', 5.19766728692163e-06], ['operands[first_input', 5.19766728692163e-06], ['casted_to_ptr,', 5.19766728692163e-06], ['src0);', 5.19766728692163e-06], ['(built_in))));', 5.19766728692163e-06], ['::gogo->clear_file_scope();', 5.19766728692163e-06], ['(strcmp(filename,', 5.19766728692163e-06], ['(Lex::Linknames::const_iterator', 5.19766728692163e-06], ['json_from_location_range', 5.19766728692163e-06], ['location_range', 5.19766728692163e-06], ['caret_loc)', 5.19766728692163e-06], ['("start",', 5.19766728692163e-06], ['(start_loc));', 5.19766728692163e-06], ['json_from_fixit_hint', 5.19766728692163e-06], ['fixit_hint', 5.19766728692163e-06], ['*fixit_obj', 5.19766728692163e-06], ['No-op', 5.19766728692163e-06], ['*context,', 5.19766728692163e-06], ['(kind_text);', 5.19766728692163e-06], ['(kind_text[len', 5.19766728692163e-06], ['diag_obj', 5.19766728692163e-06], ['(diag_obj);', 5.19766728692163e-06], ['cur_group', 5.19766728692163e-06], ['cur_children_array', 5.19766728692163e-06], ['toplevel_array', 5.19766728692163e-06], ["compiler's", 2.598833643460815e-06], ['understanding', 2.598833643460815e-06], ['indicator', 2.598833643460815e-06], ['RFT_VOID,', 2.598833643460815e-06], ['_Bool.', 2.598833643460815e-06], ['RFT_BOOL,', 2.598833643460815e-06], ['*bool,', 2.598833643460815e-06], ['_Bool*.', 2.598833643460815e-06], ['RFT_BOOLPTR,', 2.598833643460815e-06], ['intgo.', 2.598833643460815e-06], ['RFT_INT,', 2.598833643460815e-06], ['int32,', 2.598833643460815e-06], ['RFT_INT32,', 2.598833643460815e-06], ['int64,', 2.598833643460815e-06], ['RFT_INT64,', 2.598833643460815e-06], ['uint64,', 2.598833643460815e-06], ['uint64_t.', 2.598833643460815e-06], ['RFT_UINT64,', 2.598833643460815e-06], ['uintptr_t.', 2.598833643460815e-06], ['RFT_UINTPTR,', 2.598833643460815e-06], ['rune,', 2.598833643460815e-06], ['RFT_RUNE,', 2.598833643460815e-06], ['RFT_FLOAT64,', 2.598833643460815e-06], ['complex64,', 2.598833643460815e-06], ['RFT_COMPLEX64,', 2.598833643460815e-06], ['complex128,', 2.598833643460815e-06], ['RFT_COMPLEX128,', 2.598833643460815e-06], ['__go_string.', 2.598833643460815e-06], ['RFT_STRING,', 2.598833643460815e-06], ['unsafe.Pointer,', 2.598833643460815e-06], ['"void', 2.598833643460815e-06], ['*".', 2.598833643460815e-06], ['RFT_POINTER,', 2.598833643460815e-06], ['[]any,', 2.598833643460815e-06], ['__go_open_array.', 2.598833643460815e-06], ['RFT_SLICE,', 2.598833643460815e-06], ['map[any]any,', 2.598833643460815e-06], ['__go_map', 2.598833643460815e-06], ['RFT_MAP,', 2.598833643460815e-06], ['RFT_CHAN,', 2.598833643460815e-06], ['__go_interface.', 2.598833643460815e-06], ['RFT_IFACE,', 2.598833643460815e-06], ['interface{},', 2.598833643460815e-06], ['__go_empty_interface.', 2.598833643460815e-06], ['RFT_EFACE,', 2.598833643460815e-06], ['RFT_TYPE,', 2.598833643460815e-06], ['[2]string.', 2.598833643460815e-06], ['RFT_ARRAY2STRING,', 2.598833643460815e-06], ['[3]string.', 2.598833643460815e-06], ['RFT_ARRAY3STRING,', 2.598833643460815e-06], ['[4]string.', 2.598833643460815e-06], ['RFT_ARRAY4STRING,', 2.598833643460815e-06], ['[5]string.', 2.598833643460815e-06], ['RFT_ARRAY5STRING,', 2.598833643460815e-06], ['NUMBER_OF_RUNTIME_FUNCTION_TYPES', 2.598833643460815e-06], ['runtime_function_types[NUMBER_OF_RUNTIME_FUNCTION_TYPES];', 2.598833643460815e-06], ['runtime_function_type(Runtime_function_type', 2.598833643460815e-06], ['bft)', 2.598833643460815e-06], ['go_assert(bft', 2.598833643460815e-06], ['NUMBER_OF_RUNTIME_FUNCTION_TYPES);', 2.598833643460815e-06], ['(runtime_function_types[bft]', 2.598833643460815e-06], ['Type::make_pointer_type(Type::lookup_bool_type());', 2.598833643460815e-06], ['Type::make_array_type(any,', 2.598833643460815e-06], ['Type::make_map_type(any,', 2.598833643460815e-06], ['Type::make_channel_type(true,', 2.598833643460815e-06], ['any);', 2.598833643460815e-06], ['methods->push_back(Typed_identifier("x",', 2.598833643460815e-06], ['mtype,', 2.598833643460815e-06], ['it->finalize_methods();', 2.598833643460815e-06], ['Type::make_empty_interface_type(bloc);', 2.598833643460815e-06], ['Expression::make_integer_ul(2,', 2.598833643460815e-06], ['Expression::make_integer_ul(4,', 2.598833643460815e-06], ['Expression::make_integer_ul(5,', 2.598833643460815e-06], ['runtime_function_types[bft]', 2.598833643460815e-06], ['runtime_function_types[bft];', 2.598833643460815e-06], ['convert_to_runtime_function_type(Runtime_function_type', 2.598833643460815e-06], ['bft,', 2.598833643460815e-06], ['runtime_function_type(bft);', 2.598833643460815e-06], ['(!Type::are_identical(t,', 2.598833643460815e-06], ['Expression::make_unsafe_cast(runtime_function_type(bft),', 2.598833643460815e-06], ['go_assert(e->type()', 2.598833643460815e-06], ['Type::make_type_descriptor_ptr_type());', 2.598833643460815e-06], ['Runtime::convert_types(Gogo*', 2.598833643460815e-06], ['static_cast<int>(NUMBER_OF_RUNTIME_FUNCTION_TYPES);', 2.598833643460815e-06], ['runtime_function_types[i];', 2.598833643460815e-06], ['t->named_type()', 2.598833643460815e-06], ['t->verify();', 2.598833643460815e-06], ['t->named_type()->convert(gogo);', 2.598833643460815e-06], ['parameter_types[6];', 2.598833643460815e-06], ['result_types[2];', 2.598833643460815e-06], ['runtime_functions[]', 2.598833643460815e-06], ['DEF_GO_RUNTIME(CODE,', 2.598833643460815e-06], ['RESULTS)', 2.598833643460815e-06], ['RESULTS', 2.598833643460815e-06], ['DEF_GO_RUNTIME', 2.598833643460815e-06], ['runtime_function_declarations[Runtime::NUMBER_OF_FUNCTIONS];', 2.598833643460815e-06], ['Runtime::runtime_declaration(Function', 2.598833643460815e-06], ['(runtime_function_declarations[code]', 2.598833643460815e-06], ['(pb->parameter_types[0]', 2.598833643460815e-06], ['(sizeof(pb->parameter_types)', 2.598833643460815e-06], ['(pb->parameter_types[0]));', 2.598833643460815e-06], ['(pb->parameter_types[i]', 2.598833643460815e-06], ['runtime_function_type(pb->parameter_types[i]);', 2.598833643460815e-06], ['param_types->push_back(Typed_identifier("",', 2.598833643460815e-06], ['(pb->result_types[0]', 2.598833643460815e-06], ['sizeof(pb->result_types)', 2.598833643460815e-06], ['sizeof(pb->result_types[0]);', 2.598833643460815e-06], ['(pb->result_types[i]', 2.598833643460815e-06], ['runtime_function_type(pb->result_types[i]);', 2.598833643460815e-06], ['result_types->push_back(Typed_identifier("",', 2.598833643460815e-06], ['result_types,', 2.598833643460815e-06], ['pb->name;', 2.598833643460815e-06], ['strchr(n,', 2.598833643460815e-06], ['(n1', 2.598833643460815e-06], ['Named_object::make_function_declaration(n,', 2.598833643460815e-06], ['no->func_declaration_value()->set_asm_name(pb->name);', 2.598833643460815e-06], ['runtime_function_declarations[code]', 2.598833643460815e-06], ['runtime_function_declarations[code];', 2.598833643460815e-06], ['Runtime::make_call(Runtime::Function', 2.598833643460815e-06], ['go_assert(static_cast<size_t>(param_count)', 2.598833643460815e-06], ['sizeof(pb->parameter_types)', 2.598833643460815e-06], ['sizeof(pb->parameter_types[0]));', 2.598833643460815e-06], ['runtime_declaration(code);', 2.598833643460815e-06], ['args->reserve(param_count);', 2.598833643460815e-06], ['param_count);', 2.598833643460815e-06], ['param_count;', 2.598833643460815e-06], ['Expression*);', 2.598833643460815e-06], ['rft', 2.598833643460815e-06], ['pb->parameter_types[i];', 2.598833643460815e-06], ['args->push_back(convert_to_runtime_function_type(rft,', 2.598833643460815e-06], ['NUMBER_OF_FUNCTIONS.', 2.598833643460815e-06], ['Runtime::name_to_code(const', 2.598833643460815e-06], ['runtime_function_name', 2.598833643460815e-06], ['runtime_functions[i].name;', 2.598833643460815e-06], ['(strcmp(runtime_function_name,', 2.598833643460815e-06], ['"runtime."', 2.598833643460815e-06], ['(strncmp(runtime_function_name,', 2.598833643460815e-06], ['"runtime.",', 2.598833643460815e-06], ['strcmp(runtime_function_name', 2.598833643460815e-06], ['"profile.h"', 2.598833643460815e-06], ['"version.h"', 2.598833643460815e-06], ['"context.h"', 2.598833643460815e-06], ['"pass_manager.h"', 2.598833643460815e-06], ['<zlib.h>', 2.598833643460815e-06], ['optrecord_json_writer::optrecord_json_writer', 2.598833643460815e-06], ['m_scopes', 2.598833643460815e-06], ['metadata;', 2.598833643460815e-06], ['toplev.c:', 2.598833643460815e-06], ['print_version.', 2.598833643460815e-06], ['*metadata', 2.598833643460815e-06], ['(metadata);', 2.598833643460815e-06], ['("format",', 2.598833643460815e-06], ['("1"));', 2.598833643460815e-06], ['*generator', 2.598833643460815e-06], ['("generator",', 2.598833643460815e-06], ['generator);', 2.598833643460815e-06], ['(lang_hooks.name));', 2.598833643460815e-06], ['("pkgversion",', 2.598833643460815e-06], ['(pkgversion_string));', 2.598833643460815e-06], ['("version",', 2.598833643460815e-06], ['(version_string));', 2.598833643460815e-06], ['TARGET_NAME', 2.598833643460815e-06], ['Makefile.', 2.598833643460815e-06], ['(TARGET_NAME));', 2.598833643460815e-06], ['command-line?', 2.598833643460815e-06], ['gen_producer_string', 2.598833643460815e-06], ['dwarf2out.c', 2.598833643460815e-06], ['(currently', 2.598833643460815e-06], ['static).', 2.598833643460815e-06], ['"any', 2.598833643460815e-06], ['plugins?"', 2.598833643460815e-06], ['plugins', 2.598833643460815e-06], ['themselves).', 2.598833643460815e-06], ['*passes', 2.598833643460815e-06], ['(passes);', 2.598833643460815e-06], ['DEF_PASS_LIST(LIST)', 2.598833643460815e-06], ['(passes,', 2.598833643460815e-06], ['g->get_passes', 2.598833643460815e-06], ['()->LIST);', 2.598833643460815e-06], ['GCC_PASS_LISTS', 2.598833643460815e-06], ['DEF_PASS_LIST', 2.598833643460815e-06], ['*records', 2.598833643460815e-06], ['optrecord_json_writer::~optrecord_json_writer', 2.598833643460815e-06], ['m_root_tuple;', 2.598833643460815e-06], ['optrecord_json_writer::write', 2.598833643460815e-06], ['m_root_tuple->print', 2.598833643460815e-06], ['(dump_base_name,', 2.598833643460815e-06], ['".opt-record.json.gz",', 2.598833643460815e-06], ['gzFile', 2.598833643460815e-06], ['outfile', 2.598833643460815e-06], ['gzopen', 2.598833643460815e-06], ['"w");', 2.598833643460815e-06], ['(outfile', 2.598833643460815e-06], ['records",', 2.598833643460815e-06], ['info?', 2.598833643460815e-06], ['(gzputs', 2.598833643460815e-06], ['(&pp))', 2.598833643460815e-06], ['gzerror', 2.598833643460815e-06], ['&tmp));', 2.598833643460815e-06], ['cleanup:', 2.598833643460815e-06], ['(gzclose', 2.598833643460815e-06], ['Z_OK)', 2.598833643460815e-06], ['(!emitted_error)', 2.598833643460815e-06], ['(filename);', 2.598833643460815e-06], ['OPTINFO', 2.598833643460815e-06], ['optinfo_to_json', 2.598833643460815e-06], ['(optinfo);', 2.598833643460815e-06], ['add_record', 2.598833643460815e-06], ['Potentially', 2.598833643460815e-06], ['OPTINFO_KIND_SCOPE)', 2.598833643460815e-06], ['*children', 2.598833643460815e-06], ['children);', 2.598833643460815e-06], ['(children);', 2.598833643460815e-06], ['optrecord_json_writer.', 2.598833643460815e-06], ['OBJ', 2.598833643460815e-06], ['(json::object', 2.598833643460815e-06], ['*obj)', 2.598833643460815e-06], ['m_scopes[m_scopes.length', 2.598833643460815e-06], ['1]->append', 2.598833643460815e-06], ['optrecord_json_writer::pop_scope', 2.598833643460815e-06], ['m_scopes.pop', 2.598833643460815e-06], ['optrecord_json_writer::impl_location_to_json', 2.598833643460815e-06], ['(dump_impl_location_t', 2.598833643460815e-06], ['(loc.m_file));', 2.598833643460815e-06], ['(loc.m_line));', 2.598833643460815e-06], ['(loc.m_function)', 2.598833643460815e-06], ['(loc.m_function));', 2.598833643460815e-06], ['optrecord_json_writer::location_to_json', 2.598833643460815e-06], ['(loc)', 2.598833643460815e-06], ['COUNT.', 2.598833643460815e-06], ['optrecord_json_writer::profile_count_to_json', 2.598833643460815e-06], ['(profile_count', 2.598833643460815e-06], ['("value",', 2.598833643460815e-06], ['(count.to_gcov_type', 2.598833643460815e-06], ['("quality",', 2.598833643460815e-06], ['(profile_quality_as_string', 2.598833643460815e-06], ['(count.quality', 2.598833643460815e-06], ['())));', 2.598833643460815e-06], ['records.', 2.598833643460815e-06], ['optrecord_json_writer::get_id_value_for_pass', 2.598833643460815e-06], ['host-dependent,', 2.598833643460815e-06], ['pp_pointer', 2.598833643460815e-06], ['static_cast<void', 2.598833643460815e-06], ['PASS.', 2.598833643460815e-06], ['optrecord_json_writer::pass_to_json', 2.598833643460815e-06], ['(pass->type)', 2.598833643460815e-06], ['GIMPLE_PASS:', 2.598833643460815e-06], ['"gimple";', 2.598833643460815e-06], ['RTL_PASS:', 2.598833643460815e-06], ['"rtl";', 2.598833643460815e-06], ['SIMPLE_IPA_PASS:', 2.598833643460815e-06], ['"simple_ipa";', 2.598833643460815e-06], ['IPA_PASS:', 2.598833643460815e-06], ['"ipa";', 2.598833643460815e-06], ['("id",', 2.598833643460815e-06], ['("type",', 2.598833643460815e-06], ['(pass->name));', 2.598833643460815e-06], ['Represent', 2.598833643460815e-06], ['optgroup', 2.598833643460815e-06], ['*optgroups', 2.598833643460815e-06], ['("optgroups",', 2.598833643460815e-06], ['optgroups);', 2.598833643460815e-06], ['kv_pair<optgroup_flags_t>', 2.598833643460815e-06], ['*optgroup', 2.598833643460815e-06], ['optgroup_options;', 2.598833643460815e-06], ['optgroup->name', 2.598833643460815e-06], ['optgroup++)', 2.598833643460815e-06], ['(optgroup->value', 2.598833643460815e-06], ['OPTGROUP_ALL', 2.598833643460815e-06], ['(pass->optinfo_flags', 2.598833643460815e-06], ['optgroup->value))', 2.598833643460815e-06], ['optgroups->append', 2.598833643460815e-06], ['(optgroup->name));', 2.598833643460815e-06], ['("num",', 2.598833643460815e-06], ['(pass->static_pass_number));', 2.598833643460815e-06], ['lhd_print_error_function', 2.598833643460815e-06], ['cp_print_error_function.', 2.598833643460815e-06], ['optrecord_json_writer::inlining_chain_to_json', 2.598833643460815e-06], ['*array', 2.598833643460815e-06], ['LOCATION_BLOCK', 2.598833643460815e-06], ['(abstract_origin)', 2.598833643460815e-06], ['*locus;', 2.598833643460815e-06], ['abstract_origin;', 2.598833643460815e-06], ['locus', 2.598833643460815e-06], ['&BLOCK_SOURCE_LOCATION', 2.598833643460815e-06], ['ao', 2.598833643460815e-06], ['ao;', 2.598833643460815e-06], ['*printable_name', 2.598833643460815e-06], ['lang_hooks.decl_printable_name', 2.598833643460815e-06], ['("fndecl",', 2.598833643460815e-06], ['(printable_name));', 2.598833643460815e-06], ['(*locus)', 2.598833643460815e-06], ['("site",', 2.598833643460815e-06], ['(*locus));', 2.598833643460815e-06], ['array->append', 2.598833643460815e-06], ['array;', 2.598833643460815e-06], ['OPTINFO.', 2.598833643460815e-06], ['optrecord_json_writer::optinfo_to_json', 2.598833643460815e-06], ['("impl_location",', 2.598833643460815e-06], ['impl_location_to_json', 2.598833643460815e-06], ['(optinfo->get_impl_location', 2.598833643460815e-06], ['*kind_str', 2.598833643460815e-06], ['(kind_str));', 2.598833643460815e-06], ['*message', 2.598833643460815e-06], ['message);', 2.598833643460815e-06], ['optinfo->num_items', 2.598833643460815e-06], ['*item', 2.598833643460815e-06], ['optinfo->get_item', 2.598833643460815e-06], ['(item->get_kind', 2.598833643460815e-06], ['OPTINFO_ITEM_KIND_TEXT:', 2.598833643460815e-06], ['OPTINFO_ITEM_KIND_TREE:', 2.598833643460815e-06], ['("expr",', 2.598833643460815e-06], ['OPTINFO_ITEM_KIND_GIMPLE:', 2.598833643460815e-06], ['("stmt",', 2.598833643460815e-06], ['OPTINFO_ITEM_KIND_SYMTAB_NODE:', 2.598833643460815e-06], ['("symtab_node",', 2.598833643460815e-06], ['("pass",', 2.598833643460815e-06], ['profile_count', 2.598833643460815e-06], ['optinfo->get_count', 2.598833643460815e-06], ['(count.initialized_p', 2.598833643460815e-06], ['("count",', 2.598833643460815e-06], ['profile_count_to_json', 2.598833643460815e-06], ['(count));', 2.598833643460815e-06], ['UNKNOWN_LOCATION', 2.598833643460815e-06], ['optinfo->get_location_t', 2.598833643460815e-06], ['(get_pure_location', 2.598833643460815e-06], ['TOOD:', 2.598833643460815e-06], ['(just', 2.598833643460815e-06], ['caret', 2.598833643460815e-06], ['now)', 2.598833643460815e-06], ['start/finish', 2.598833643460815e-06], ['also?', 2.598833643460815e-06], ['*fnname', 2.598833643460815e-06], ['(current_function_decl));', 2.598833643460815e-06], ['(fnname));', 2.598833643460815e-06], ['(loc', 2.598833643460815e-06], ['("inlining_chain",', 2.598833643460815e-06], ['inlining_chain_to_json', 2.598833643460815e-06], ['siblings', 2.598833643460815e-06], ['ARR,', 2.598833643460815e-06], ['(adding', 2.598833643460815e-06], ['descriptions', 2.598833643460815e-06], ['array).', 2.598833643460815e-06], ['optrecord_json_writer::add_pass_list', 2.598833643460815e-06], ['(json::array', 2.598833643460815e-06], ['*arr,', 2.598833643460815e-06], ['*pass_obj', 2.598833643460815e-06], ['pass_to_json', 2.598833643460815e-06], ['arr->append', 2.598833643460815e-06], ['(pass_obj);', 2.598833643460815e-06], ['(pass->sub)', 2.598833643460815e-06], ['*sub', 2.598833643460815e-06], ['pass_obj->set', 2.598833643460815e-06], ['(sub,', 2.598833643460815e-06], ['pass->sub);', 2.598833643460815e-06], ['pass->next;', 2.598833643460815e-06], ['dump_*', 2.598833643460815e-06], ['(true,', 2.598833643460815e-06], ['MSG_NOTE);', 2.598833643460815e-06], ['"test', 2.598833643460815e-06], ['dump_generic_expr', 2.598833643460815e-06], ['TDF_SLIM,', 2.598833643460815e-06], ['(info->num_items', 2.598833643460815e-06], ['optrecord_json_writer', 2.598833643460815e-06], ['writer;', 2.598833643460815e-06], ['*json_obj', 2.598833643460815e-06], ['writer.optinfo_to_json', 2.598833643460815e-06], ['(json_obj', 2.598833643460815e-06], ['json_obj->print', 2.598833643460815e-06], ['*json_str', 2.598833643460815e-06], ['"impl_location");', 2.598833643460815e-06], ['"\\"kind\\":', 2.598833643460815e-06], ['\\"note\\"");', 2.598833643460815e-06], ['"\\"message\\":', 2.598833643460815e-06], ['[\\"test', 2.598833643460815e-06], ['\\",', 2.598833643460815e-06], ['{\\"expr\\":', 2.598833643460815e-06], ['\\"0\\"}]");', 2.598833643460815e-06], ['json_obj;', 2.598833643460815e-06], ['optinfo_emit_json_cc_tests', 2.598833643460815e-06], ['Printing', 2.598833643460815e-06], ['*buf,', 2.598833643460815e-06], ['(wi))', 2.598833643460815e-06], ['"-"', 2.598833643460815e-06], ['-(unsigned', 2.598833643460815e-06], ['HOST_WIDE_INT_PRINT_DEC,', 2.598833643460815e-06], ['!wi::neg_p', 2.598833643460815e-06], ['(wi)))', 2.598833643460815e-06], ['"0x0");', 2.598833643460815e-06], ['"0x");', 2.598833643460815e-06], ['ROUND_DOWN', 2.598833643460815e-06], ['(val.get_precision', 2.598833643460815e-06], ['wi::extract_uhwi', 2.598833643460815e-06], ['(!first_p)', 2.598833643460815e-06], ['HOST_WIDE_INT_PRINT_PADDED_HEX,', 2.598833643460815e-06], ['(uhwi', 2.598833643460815e-06], ['HOST_WIDE_INT_PRINT_HEX_PURE,', 2.598833643460815e-06], ['FILE.', 2.598833643460815e-06], ['assemblers', 2.598833643460815e-06], ['modes.', 2.598833643460815e-06], ['expressions.cc', 2.598833643460815e-06], ['<algorithm>', 2.598833643460815e-06], ['Expression::Expression(Expression_classification', 2.598833643460815e-06], ['Expression::~Expression()', 2.598833643460815e-06], ['Expression::traverse(Expression**', 2.598833643460815e-06], ['pexpr,', 2.598833643460815e-06], ['traverse->expression(pexpr);', 2.598833643460815e-06], ['expr->do_traverse(traverse);', 2.598833643460815e-06], ['Expression::traverse_subexpressions(Traverse*', 2.598833643460815e-06], ['Expression::do_traverse(Traverse*)', 2.598833643460815e-06], ['Expression::do_discarding_value()', 2.598833643460815e-06], ['Expression::do_export(Export_function_body*)', 2.598833643460815e-06], ['Expression::unused_value_error()', 2.598833643460815e-06], ['this->report_error(_("value', 2.598833643460815e-06], ['used"));', 2.598833643460815e-06], ['Expression::set_is_error()', 2.598833643460815e-06], ['EXPRESSION_ERROR;', 2.598833643460815e-06], ['Expression::report_error(const', 2.598833643460815e-06], ['Expression::determine_type(const', 2.598833643460815e-06], ['this->do_determine_type(context);', 2.598833643460815e-06], ['Expression::determine_type_no_context()', 2.598833643460815e-06], ['this->do_determine_type(&context);', 2.598833643460815e-06], ['Expression::is_same_variable(Expression*', 2.598833643460815e-06], ['(a->classification()', 2.598833643460815e-06], ['b->classification())', 2.598833643460815e-06], ['a->var_expression();', 2.598833643460815e-06], ['(av', 2.598833643460815e-06], ['av->named_object()', 2.598833643460815e-06], ['b->var_expression()->named_object();', 2.598833643460815e-06], ['af', 2.598833643460815e-06], ['a->field_reference_expression();', 2.598833643460815e-06], ['(af', 2.598833643460815e-06], ['bf', 2.598833643460815e-06], ['b->field_reference_expression();', 2.598833643460815e-06], ['(af->field_index()', 2.598833643460815e-06], ['bf->field_index()', 2.598833643460815e-06], ['Expression::is_same_variable(af->expr(),', 2.598833643460815e-06], ['bf->expr()));', 2.598833643460815e-06], ['au', 2.598833643460815e-06], ['a->unary_expression();', 2.598833643460815e-06], ['(au', 2.598833643460815e-06], ['bu', 2.598833643460815e-06], ['b->unary_expression();', 2.598833643460815e-06], ['(au->op()', 2.598833643460815e-06], ['bu->op()', 2.598833643460815e-06], ['Expression::is_same_variable(au->operand(),', 2.598833643460815e-06], ['bu->operand()));', 2.598833643460815e-06], ['Expression::convert_for_assignment(Gogo*,', 2.598833643460815e-06], ['rhs_type->is_error()', 2.598833643460815e-06], ['rhs->is_error_expression())', 2.598833643460815e-06], ['are_identical', 2.598833643460815e-06], ['Type::are_identical(lhs_type,', 2.598833643460815e-06], ['Type::COMPARE_TAGS),', 2.598833643460815e-06], ['lhs_type->interface_type()', 2.598833643460815e-06], ['(rhs_type->interface_type()', 2.598833643460815e-06], ['Expression::convert_type_to_interface(lhs_type,', 2.598833643460815e-06], ['Expression::convert_interface_to_interface(lhs_type,', 2.598833643460815e-06], ['rhs_type->interface_type()', 2.598833643460815e-06], ['Expression::convert_interface_to_type(lhs_type,', 2.598833643460815e-06], ['(lhs_type->is_slice_type()', 2.598833643460815e-06], ['Assigning', 2.598833643460815e-06], ['Expression::make_slice_value(lhs_type,', 2.598833643460815e-06], ['(are_identical)', 2.598833643460815e-06], ['(lhs_type->forwarded()', 2.598833643460815e-06], ['rhs_type->forwarded())', 2.598833643460815e-06], ['Different', 2.598833643460815e-06], ['(lhs_type->is_numeric_type())', 2.598833643460815e-06], ['((lhs_type->struct_type()', 2.598833643460815e-06], ['rhs_type->struct_type()', 2.598833643460815e-06], ['(lhs_type->array_type()', 2.598833643460815e-06], ['rhs_type->array_type()', 2.598833643460815e-06], ['gotten', 2.598833643460815e-06], ['Expression::convert_type_to_interface(Type*', 2.598833643460815e-06], ['RHS_TYPE', 2.598833643460815e-06], ['(!lhs_interface_type->implements_interface(rhs_type,', 2.598833643460815e-06], ['LHS_TYPE', 2.598833643460815e-06], ['rhs_type->named_type();', 2.598833643460815e-06], ['rhs_type->struct_type();', 2.598833643460815e-06], ['rhs_type->deref()->named_type();', 2.598833643460815e-06], ['rhs_type->deref()->struct_type();', 2.598833643460815e-06], ['rhs_named_type->interface_method_table(lhs_interface_type,', 2.598833643460815e-06], ['(rhs_struct_type', 2.598833643460815e-06], ['rhs_struct_type->interface_method_table(lhs_interface_type,', 2.598833643460815e-06], ['(rhs_type->points_to()', 2.598833643460815e-06], ['OBJ.', 2.598833643460815e-06], ['Expression::make_heap_expression(rhs,', 2.598833643460815e-06], ['Expression::get_interface_type_descriptor(Expression*', 2.598833643460815e-06], ['go_assert(rhs->type()->interface_type()', 2.598833643460815e-06], ['rhs->location();', 2.598833643460815e-06], ['(rhs->type()->interface_type()->is_empty())', 2.598833643460815e-06], ['INTERFACE_INFO_TYPE_DESCRIPTOR,', 2.598833643460815e-06], ['Expression::make_field_reference(descriptor,', 2.598833643460815e-06], ['mtable,', 2.598833643460815e-06], ['Expression::make_conditional(eq,', 2.598833643460815e-06], ['Expression::convert_interface_to_interface(Type', 2.598833643460815e-06], ['for_type_guard,', 2.598833643460815e-06], ['(Type::are_identical(lhs_type,', 2.598833643460815e-06], ['examination', 2.598833643460815e-06], ['rhs_type_expr', 2.598833643460815e-06], ['(for_type_guard)', 2.598833643460815e-06], ['Runtime::make_call(Runtime::ASSERTITAB,', 2.598833643460815e-06], ['rhs_type_expr;', 2.598833643460815e-06], ['fail,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::REQUIREITAB,', 2.598833643460815e-06], ['Expression::convert_interface_to_type(Type', 2.598833643460815e-06], ['rhs_descriptor', 2.598833643460815e-06], ['rhs_inter_expr', 2.598833643460815e-06], ['check_iface', 2.598833643460815e-06], ['Runtime::make_call(Runtime::ASSERTI2T,', 2.598833643460815e-06], ['rhs_descriptor,', 2.598833643460815e-06], ['rhs_inter_expr);', 2.598833643460815e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(lhs_type),', 2.598833643460815e-06], ['Expression::make_dereference(obj,', 2.598833643460815e-06], ['Expression::make_compound(check_iface,', 2.598833643460815e-06], ['Expression::get_backend(Translate_context*', 2.598833643460815e-06], ['Expression::backend_numeric_constant_expression(Translate_context*', 2.598833643460815e-06], ['(!val->to_int(&ival))', 2.598833643460815e-06], ['ival);', 2.598833643460815e-06], ['(!val->to_float(&fval))', 2.598833643460815e-06], ['gogo->backend()->float_constant_expression(btype,', 2.598833643460815e-06], ['(!val->to_complex(&cval))', 2.598833643460815e-06], ['gogo->backend()->complex_constant_expression(btype,', 2.598833643460815e-06], ['Expression::check_bounds(Expression*', 2.598833643460815e-06], ['bound_type', 2.598833643460815e-06], ['val_type_size;', 2.598833643460815e-06], ['(val_type->integer_type()', 2.598833643460815e-06], ['val_type->integer_type()->bits();', 2.598833643460815e-06], ['val_type->integer_type()->is_unsigned();', 2.598833643460815e-06], ['(!val_type->is_numeric_type()', 2.598833643460815e-06], ['!Type::are_convertible(bound_type,', 2.598833643460815e-06], ['(val_type->complex_type()', 2.598833643460815e-06], ['val_type->complex_type()->bits();', 2.598833643460815e-06], ['val_type->float_type()->bits();', 2.598833643460815e-06], ['(!val_is_unsigned)', 2.598833643460815e-06], ['bound_type->integer_type()->bits();', 2.598833643460815e-06], ['val_is_unsigned))', 2.598833643460815e-06], ['maxval', 2.598833643460815e-06], ['2^(bound_type_size', 2.598833643460815e-06], ['maxval;', 2.598833643460815e-06], ['mpz_init(maxval);', 2.598833643460815e-06], ['mpz_mul_2exp(maxval,', 2.598833643460815e-06], ['mpz_sub_ui(maxval,', 2.598833643460815e-06], ['maxval,', 2.598833643460815e-06], ['Expression::make_integer_z(&maxval,', 2.598833643460815e-06], ['mpz_clear(maxval);', 2.598833643460815e-06], ['negative_index,', 2.598833643460815e-06], ['index_overflows,', 2.598833643460815e-06], ['Expression::dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['this->do_dump_expression(ast_dump_context);', 2.598833643460815e-06], ['Error_expression', 2.598833643460815e-06], ['Error_expression(Location', 2.598833643460815e-06], ['Expression(EXPRESSION_ERROR,', 2.598833643460815e-06], ['nc->set_unsigned_long(NULL,', 2.598833643460815e-06], ['Error_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['"_Error_"', 2.598833643460815e-06], ['Expression::make_error(Location', 2.598833643460815e-06], ['Error_expression(location);', 2.598833643460815e-06], ['Type_expression', 2.598833643460815e-06], ['Type_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_TYPE,', 2.598833643460815e-06], ['do_check_types(Gogo*)', 2.598833643460815e-06], ['Type_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_type(Type*', 2.598833643460815e-06], ['Type_expression(type,', 2.598833643460815e-06], ['Parser_expression::do_type()', 2.598833643460815e-06], ['Var_expression.', 2.598833643460815e-06], ['Var_expression::do_lower(Gogo*', 2.598833643460815e-06], ['this->variable_->var_value();', 2.598833643460815e-06], ['var->lower_init_expression(gogo,', 2.598833643460815e-06], ['Var_expression::do_type()', 2.598833643460815e-06], ['this->variable_->var_value()->type();', 2.598833643460815e-06], ['this->variable_->result_var_value()->type();', 2.598833643460815e-06], ['Var_expression::do_determine_type(const', 2.598833643460815e-06], ['this->variable_->var_value()->determine_type();', 2.598833643460815e-06], ['Var_expression::do_address_taken(bool', 2.598833643460815e-06], ['Node::make_node(this)->set_encoding(Node::ESCAPE_HEAP);', 2.598833643460815e-06], ['Var_expression::do_inlining_cost()', 2.598833643460815e-06], ['(this->variable_->var_value()->is_parameter())', 2.598833643460815e-06], ['0x100000;', 2.598833643460815e-06], ['Var_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['efb->write_string(Gogo::unpack_hidden_name(this->variable_->name()));', 2.598833643460815e-06], ['Var_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->variable_->get_backend_variable(context->gogo(),', 2.598833643460815e-06], ['is_in_heap;', 2.598833643460815e-06], ['btype;', 2.598833643460815e-06], ['this->variable_->var_value()->is_in_heap();', 2.598833643460815e-06], ['this->variable_->var_value()->type()->get_backend(gogo);', 2.598833643460815e-06], ['this->variable_->result_var_value()->is_in_heap();', 2.598833643460815e-06], ['this->variable_->result_var_value()->type()->get_backend(gogo);', 2.598833643460815e-06], ['context->backend()->var_expression(bvar,', 2.598833643460815e-06], ['context->backend()->indirect_expression(btype,', 2.598833643460815e-06], ['Var_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['this->variable_->message_name()', 2.598833643460815e-06], ['Expression::make_var_reference(Named_object*', 2.598833643460815e-06], ['(var->is_sink())', 2.598833643460815e-06], ['Creating', 2.598833643460815e-06], ['wasteful.', 2.598833643460815e-06], ['Var_expression(var,', 2.598833643460815e-06], ['Enclosed_var_expression.', 2.598833643460815e-06], ['Enclosed_var_expression::do_traverse(Traverse*)', 2.598833643460815e-06], ['Enclosed_var_expression::do_lower(Gogo*', 2.598833643460815e-06], ['Enclosed_var_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['Enclosed_var_expression::do_address_taken(bool', 2.598833643460815e-06], ['Enclosed_var_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['adc)', 2.598833643460815e-06], ['adc->ostream()', 2.598833643460815e-06], ['this->variable_->message_name();', 2.598833643460815e-06], ['Expression::make_enclosing_var_reference(Expression*', 2.598833643460815e-06], ['Enclosed_var_expression(reference,', 2.598833643460815e-06], ['Temporary_reference_expression.', 2.598833643460815e-06], ['Temporary_reference_expression::do_type()', 2.598833643460815e-06], ['Temporary_reference_expression::do_address_taken(bool)', 2.598833643460815e-06], ['Temporary_reference_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Correct', 2.598833643460815e-06], ['circularity', 2.598833643460815e-06], ['(!this->is_lvalue_', 2.598833643460815e-06], ['stype->points_to()', 2.598833643460815e-06], ['stype->points_to()->is_void_type())', 2.598833643460815e-06], ['this->type()->base()->get_backend(gogo);', 2.598833643460815e-06], ['Temporary_reference_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_temporary_reference(Temporary_statement*', 2.598833643460815e-06], ['Temporary_reference_expression(statement,', 2.598833643460815e-06], ['Set_and_use_temporary_expression.', 2.598833643460815e-06], ['Set_and_use_temporary_expression::do_type()', 2.598833643460815e-06], ['Set_and_use_temporary_expression::do_determine_type(', 2.598833643460815e-06], ['Set_and_use_temporary_expression::do_address_taken(bool)', 2.598833643460815e-06], ['Set_and_use_temporary_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['lvar_ref', 2.598833643460815e-06], ['lvar_ref,', 2.598833643460815e-06], ['gogo->backend()->compound_expression(set,', 2.598833643460815e-06], ['Dump.', 2.598833643460815e-06], ['Set_and_use_temporary_expression::do_dump_expression(', 2.598833643460815e-06], ["'(';", 2.598833643460815e-06], ['set-and-use', 2.598833643460815e-06], ['Expression::make_set_and_use_temporary(Temporary_statement*', 2.598833643460815e-06], ['Set_and_use_temporary_expression(statement,', 2.598833643460815e-06], ['expression--a', 2.598833643460815e-06], ['Sink_expression', 2.598833643460815e-06], ['Sink_expression(Location', 2.598833643460815e-06], ['Expression(EXPRESSION_SINK,', 2.598833643460815e-06], ['Sink_expression(this->location());', 2.598833643460815e-06], ['Sink_expression::do_type()', 2.598833643460815e-06], ['Type::make_sink_type();', 2.598833643460815e-06], ['Sink_expression::do_determine_type(const', 2.598833643460815e-06], ['write-only', 2.598833643460815e-06], ['drop.', 2.598833643460815e-06], ['Sink_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['!this->type_->is_sink_type());', 2.598833643460815e-06], ['fn_ctx', 2.598833643460815e-06], ['this->type_->get_backend(context->gogo());', 2.598833643460815e-06], ['gogo->backend()->temporary_variable(fn_ctx,', 2.598833643460815e-06], ['var_ref;', 2.598833643460815e-06], ['Sink_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_sink(Location', 2.598833643460815e-06], ['Sink_expression(location);', 2.598833643460815e-06], ['Func_expression.', 2.598833643460815e-06], ['unchanging.', 2.598833643460815e-06], ['Func_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Expression::traverse(&this->closure_,', 2.598833643460815e-06], ['traverse));', 2.598833643460815e-06], ['Func_expression::do_type()', 2.598833643460815e-06], ['(this->function_->is_function())', 2.598833643460815e-06], ['this->function_->func_value()->type();', 2.598833643460815e-06], ['(this->function_->is_function_declaration())', 2.598833643460815e-06], ['this->function_->func_declaration_value()->type();', 2.598833643460815e-06], ['Func_expression::get_code_pointer(Gogo*', 2.598833643460815e-06], ['no->func_value()->get_or_make_decl(gogo,', 2.598833643460815e-06], ['no->func_declaration_value()->get_or_make_decl(gogo,', 2.598833643460815e-06], ['gogo->backend()->function_code_expression(fndecl,', 2.598833643460815e-06], ['closes', 2.598833643460815e-06], ['over.', 2.598833643460815e-06], ['Func_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['descriptor;', 2.598833643460815e-06], ['no->func_value()->descriptor(gogo,', 2.598833643460815e-06], ['(no->func_declaration_value()->type()->is_builtin())', 2.598833643460815e-06], ['called"),', 2.598833643460815e-06], ['no->func_declaration_value()->descriptor(gogo,', 2.598833643460815e-06], ['bdesc', 2.598833643460815e-06], ['descriptor->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->address_expression(bdesc,', 2.598833643460815e-06], ['go_assert(this->function_->func_value()->enclosing()', 2.598833643460815e-06], ['*bexpr', 2.598833643460815e-06], ['this->closure_->get_backend(context);', 2.598833643460815e-06], ['Introduce', 2.598833643460815e-06], ['fields).', 2.598833643460815e-06], ['Func_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['{closure', 2.598833643460815e-06], ['this->closure_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['Expression::make_func_reference(Named_object*', 2.598833643460815e-06], ['Func_expression(function,', 2.598833643460815e-06], ['Detect', 2.598833643460815e-06], ['(function->is_function_declaration())', 2.598833643460815e-06], ['fe->set_runtime_code(Runtime::name_to_code(function->name()));', 2.598833643460815e-06], ['fe;', 2.598833643460815e-06], ['Func_descriptor_expression.', 2.598833643460815e-06], ['Func_descriptor_expression::Func_descriptor_expression(Named_object*', 2.598833643460815e-06], ['Expression(EXPRESSION_FUNC_DESCRIPTOR,', 2.598833643460815e-06], ['fn->location()),', 2.598833643460815e-06], ['fn_(fn),', 2.598833643460815e-06], ['dvar_(NULL)', 2.598833643460815e-06], ['go_assert(!fn->is_function()', 2.598833643460815e-06], ['!fn->func_value()->needs_closure());', 2.598833643460815e-06], ['Func_descriptor_expression::do_traverse(Traverse*)', 2.598833643460815e-06], ['Func_descriptor_expression::make_func_descriptor_type()', 2.598833643460815e-06], ['(Func_descriptor_expression::descriptor_type', 2.598833643460815e-06], ['Type::make_builtin_struct_type(1,', 2.598833643460815e-06], ['"fn",', 2.598833643460815e-06], ['Func_descriptor_expression::descriptor_type', 2.598833643460815e-06], ['Type::make_builtin_named_type("functionDescriptor",', 2.598833643460815e-06], ['struct_type);', 2.598833643460815e-06], ['Func_descriptor_expression::do_type()', 2.598833643460815e-06], ['Func_descriptor_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(this->dvar_', 2.598833643460815e-06], ['context->backend()->var_expression(this->dvar_,', 2.598833643460815e-06], ['var_name(gogo->function_descriptor_name(no));', 2.598833643460815e-06], ['!no->func_declaration_value()->asm_name().empty()', 2.598833643460815e-06], ['Linemap::is_predeclared_location(no->location()))', 2.598833643460815e-06], ['no->is_function()', 2.598833643460815e-06], ['!no->func_value()->asm_name().empty()', 2.598833643460815e-06], ['no->func_value()->asm_name().compare(0,', 2.598833643460815e-06], ['"syscall.")', 2.598833643460815e-06], ['is_descriptor)', 2.598833643460815e-06], ['context->backend()->immutable_struct_reference(var_name,', 2.598833643460815e-06], ['runtime,', 2.598833643460815e-06], ['(no->name().find("hash")', 2.598833643460815e-06], ['no->name().find("equal")', 2.598833643460815e-06], ['std::string::npos))', 2.598833643460815e-06], ['(Gogo::is_hidden_name(no->name())', 2.598833643460815e-06], ['!is_exported_runtime)', 2.598833643460815e-06], ['Gogo::is_thunk(no));', 2.598833643460815e-06], ['context->backend()->immutable_struct(var_name,', 2.598833643460815e-06], ['vals->push_back(Expression::make_func_code_reference(this->fn_,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(this->type(),', 2.598833643460815e-06], ['bcontext(gogo,', 2.598833643460815e-06], ['bcontext.set_is_const();', 2.598833643460815e-06], ['init->get_backend(&bcontext);', 2.598833643460815e-06], ['context->backend()->immutable_struct_set_init(bvar,', 2.598833643460815e-06], ['this->dvar_', 2.598833643460815e-06], ['Func_descriptor_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['"[descriptor', 2.598833643460815e-06], ['this->fn_->name()', 2.598833643460815e-06], ['Func_descriptor_expression*', 2.598833643460815e-06], ['Expression::make_func_descriptor(Named_object*', 2.598833643460815e-06], ['Func_descriptor_expression(fn);', 2.598833643460815e-06], ['Expression::make_func_descriptor_type()', 2.598833643460815e-06], ['Func_code_reference_expression', 2.598833643460815e-06], ['Func_code_reference_expression(Named_object*', 2.598833643460815e-06], ['Expression(EXPRESSION_FUNC_CODE_REFERENCE,', 2.598833643460815e-06], ['function_(function)', 2.598833643460815e-06], ['Expression::make_func_code_reference(this->function_,', 2.598833643460815e-06], ['"[raw', 2.598833643460815e-06], ['this->function_->name()', 2.598833643460815e-06], ['Func_code_reference_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Func_expression::get_code_pointer(context->gogo(),', 2.598833643460815e-06], ['Expression::make_func_code_reference(Named_object*', 2.598833643460815e-06], ['Func_code_reference_expression(function,', 2.598833643460815e-06], ['Unknown_expression.', 2.598833643460815e-06], ['Unknown_expression::name()', 2.598833643460815e-06], ['Unknown_expression::do_lower(Gogo*,', 2.598833643460815e-06], ['(!no->is_unknown())', 2.598833643460815e-06], ['this->named_object_->message_name().c_str());', 2.598833643460815e-06], ['(real->classification())', 2.598833643460815e-06], ['Expression::make_const_reference(real,', 2.598833643460815e-06], ['Expression::make_type(real->type_value(),', 2.598833643460815e-06], ['real->message_name().c_str());', 2.598833643460815e-06], ['real->var_value()->set_is_used();', 2.598833643460815e-06], ['Expression::make_var_reference(real,', 2.598833643460815e-06], ['Expression::make_func_reference(real,', 2.598833643460815e-06], ['Unknown_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['"_Unknown_("', 2.598833643460815e-06], ['this->named_object_->name()', 2.598833643460815e-06], ['Expression::make_unknown_reference(Named_object*', 2.598833643460815e-06], ['Unknown_expression(no,', 2.598833643460815e-06], ['Boolean_expression', 2.598833643460815e-06], ['Boolean_expression(bool', 2.598833643460815e-06], ['Expression(EXPRESSION_BOOLEAN,', 2.598833643460815e-06], ['type_(NULL)', 2.598833643460815e-06], ['context->backend()->boolean_constant_expression(this->val_);', 2.598833643460815e-06], ['efb->write_c_string(this->val_', 2.598833643460815e-06], ['"$true"', 2.598833643460815e-06], ['"$false");', 2.598833643460815e-06], ['Boolean_expression::do_type()', 2.598833643460815e-06], ['Boolean_expression::do_determine_type(const', 2.598833643460815e-06], ['Boolean_expression::do_import(Import_expression*', 2.598833643460815e-06], ['imp->require_c_string("true");', 2.598833643460815e-06], ['imp->require_c_string("false");', 2.598833643460815e-06], ['Expression::make_boolean(bool', 2.598833643460815e-06], ['Boolean_expression(val,', 2.598833643460815e-06], ['String_expression.', 2.598833643460815e-06], ['String_expression::do_type()', 2.598833643460815e-06], ['String_expression::do_determine_type(const', 2.598833643460815e-06], ['context->type->is_string_type())', 2.598833643460815e-06], ['String_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Type::make_string_type()->get_backend(gogo);', 2.598833643460815e-06], ['init(2);', 2.598833643460815e-06], ['str_cst', 2.598833643460815e-06], ['gogo->backend()->string_constant_expression(this->val_);', 2.598833643460815e-06], ['init[0]', 2.598833643460815e-06], ['gogo->backend()->address_expression(str_cst,', 2.598833643460815e-06], ['mpz_init_set_ui(lenval,', 2.598833643460815e-06], ['this->val_.length());', 2.598833643460815e-06], ['init[1]', 2.598833643460815e-06], ['gogo->backend()->integer_constant_expression(int_btype,', 2.598833643460815e-06], ['lenval);', 2.598833643460815e-06], ['mpz_clear(lenval);', 2.598833643460815e-06], ['String_expression::export_string(String_dump*', 2.598833643460815e-06], ['s.reserve(str->val_.length()', 2.598833643460815e-06], ['str->val_.begin();', 2.598833643460815e-06], ['str->val_.end();', 2.598833643460815e-06], ['"\\\\n";', 2.598833643460815e-06], ['"\\\\t";', 2.598833643460815e-06], ['"\\\\x";', 2.598833643460815e-06], ['String_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['String_expression::export_string(efb,', 2.598833643460815e-06], ['String_expression::do_import(Import_expression*', 2.598833643460815e-06], ['imp->require_c_string("\\"");', 2.598833643460815e-06], ["'n')", 2.598833643460815e-06], ["'x')", 2.598833643460815e-06], ['vh', 2.598833643460815e-06], ['vl', 2.598833643460815e-06], ['(vh', 2.598833643460815e-06], ['vl;', 2.598833643460815e-06], ['Expression::make_string(val,', 2.598833643460815e-06], ['String_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['String_expression::export_string(ast_dump_context,', 2.598833643460815e-06], ['Expression::make_string(const', 2.598833643460815e-06], ['String_expression(val,', 2.598833643460815e-06], ['String_info_expression', 2.598833643460815e-06], ['String_info_expression(Expression*', 2.598833643460815e-06], ['Expression(EXPRESSION_STRING_INFO,', 2.598833643460815e-06], ['string_(string),', 2.598833643460815e-06], ['string_info_(string_info)', 2.598833643460815e-06], ['String_info_expression(this->string_->copy(),', 2.598833643460815e-06], ['this->string_->issue_nil_check();', 2.598833643460815e-06], ['string_;', 2.598833643460815e-06], ['string_info_;', 2.598833643460815e-06], ['String_info_expression::do_type()', 2.598833643460815e-06], ['String_info_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['bstring', 2.598833643460815e-06], ['this->string_->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->struct_field_expression(bstring,', 2.598833643460815e-06], ['String_info_expression::do_dump_expression(', 2.598833643460815e-06], ['"stringinfo(";', 2.598833643460815e-06], ['this->string_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['(this->string_info_', 2.598833643460815e-06], ['STRING_INFO_DATA', 2.598833643460815e-06], ['"data"', 2.598833643460815e-06], ['this->string_info_', 2.598833643460815e-06], ['STRING_INFO_LENGTH', 2.598833643460815e-06], ['Expression::make_string_info(Expression*', 2.598833643460815e-06], ['String_info_expression(string,', 2.598833643460815e-06], ['Integer_expression', 2.598833643460815e-06], ['Integer_expression(const', 2.598833643460815e-06], ['is_character_constant,', 2.598833643460815e-06], ['Expression(EXPRESSION_INTEGER,', 2.598833643460815e-06], ['is_character_constant_(is_character_constant)', 2.598833643460815e-06], ['mpz_init_set(this->val_,', 2.598833643460815e-06], ['*val);', 2.598833643460815e-06], ['export_integer(String_dump*', 2.598833643460815e-06], ['dump_integer(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_character(&this->val_,', 2.598833643460815e-06], ['Expression::make_integer_z(&this->val_,', 2.598833643460815e-06], ['is_character_constant_;', 2.598833643460815e-06], ['Integer_expression::do_numeric_constant_value(Numeric_constant*', 2.598833643460815e-06], ['nc->set_rune(this->type_,', 2.598833643460815e-06], ['nc->set_int(this->type_,', 2.598833643460815e-06], ['Integer_expression::do_type()', 2.598833643460815e-06], ['Integer_expression::do_determine_type(const', 2.598833643460815e-06], ['Integer_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['nc.set_rune(NULL,', 2.598833643460815e-06], ['nc.set_int(NULL,', 2.598833643460815e-06], ['Integer_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['reason.', 2.598833643460815e-06], ['<=,', 2.598833643460815e-06], ['mpz_sizeinbase(this->val_,', 2.598833643460815e-06], ['int_type;', 2.598833643460815e-06], ['nc.set_int(resolved_type,', 2.598833643460815e-06], ['Integer_expression::export_integer(String_dump*', 2.598833643460815e-06], ['exp->write_c_string(s);', 2.598833643460815e-06], ['Integer_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['efb->write_c_string("\'");', 2.598833643460815e-06], ['Integer_expression::do_import(Import_expression*', 2.598833643460815e-06], ['plus_pos', 2.598833643460815e-06], ["num.find('+',", 2.598833643460815e-06], ['minus_pos', 2.598833643460815e-06], ["num.find('-',", 2.598833643460815e-06], ['pos;', 2.598833643460815e-06], ['(plus_pos', 2.598833643460815e-06], ['minus_pos;', 2.598833643460815e-06], ['(minus_pos', 2.598833643460815e-06], ['plus_pos;', 2.598833643460815e-06], ['real_str', 2.598833643460815e-06], ['(mpfr_init_set_str(real,', 2.598833643460815e-06], ['real_str.c_str(),', 2.598833643460815e-06], ['real_str.c_str());', 2.598833643460815e-06], ['imag_str;', 2.598833643460815e-06], ['num.substr(pos);', 2.598833643460815e-06], ['imag_str.substr(0,', 2.598833643460815e-06], ['imag_str.size()', 2.598833643460815e-06], ['(mpfr_init_set_str(imag,', 2.598833643460815e-06], ['imag_str.c_str(),', 2.598833643460815e-06], ['imag_str.c_str());', 2.598833643460815e-06], ['mpc_init2(cval,', 2.598833643460815e-06], ['mpc_set_fr_fr(cval,', 2.598833643460815e-06], ['Expression::make_complex(&cval,', 2.598833643460815e-06], ["(num.find('.')", 2.598833643460815e-06], ["num.find('E')", 2.598833643460815e-06], ['is_character_constant', 2.598833643460815e-06], ["'\\'');", 2.598833643460815e-06], ['num.length()', 2.598833643460815e-06], ['(mpz_init_set_str(val,', 2.598833643460815e-06], ['Expression::make_character(&val,', 2.598833643460815e-06], ['Expression::make_integer_z(&val,', 2.598833643460815e-06], ['(mpfr_init_set_str(val,', 2.598833643460815e-06], ['Expression::make_float(&val,', 2.598833643460815e-06], ['Integer_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Integer_expression::export_integer(ast_dump_context,', 2.598833643460815e-06], ['multi-precision', 2.598833643460815e-06], ['Expression::make_integer_z(const', 2.598833643460815e-06], ['Expression::make_integer_ul(unsigned', 2.598833643460815e-06], ['mpz_init_set_ui(zval,', 2.598833643460815e-06], ['Expression::make_integer_sl(long', 2.598833643460815e-06], ['mpz_init_set_si(zval,', 2.598833643460815e-06], ['uninitialized', 2.598833643460815e-06], ['mpz_t.', 2.598833643460815e-06], ['set_mpz_from_int64(mpz_t*', 2.598833643460815e-06], ['zval,', 2.598833643460815e-06], ['long>(val);', 2.598833643460815e-06], ['(static_cast<int64_t>(ul)', 2.598833643460815e-06], ['uv;', 2.598833643460815e-06], ['static_cast<uint64_t>(val);', 2.598833643460815e-06], ['static_cast<uint64_t>(-', 2.598833643460815e-06], ['0xffffffffUL;', 2.598833643460815e-06], ['hval;', 2.598833643460815e-06], ['mpz_init_set_ui(hval,', 2.598833643460815e-06], ['long>(uv', 2.598833643460815e-06], ['32));', 2.598833643460815e-06], ['mpz_mul_2exp(hval,', 2.598833643460815e-06], ['hval,', 2.598833643460815e-06], ['mpz_add(*zval,', 2.598833643460815e-06], ['*zval,', 2.598833643460815e-06], ['hval);', 2.598833643460815e-06], ['mpz_clear(hval);', 2.598833643460815e-06], ['mpz_neg(*zval,', 2.598833643460815e-06], ['*zval);', 2.598833643460815e-06], ['Expression::make_integer_int64(int64_t', 2.598833643460815e-06], ['Expression::make_character(const', 2.598833643460815e-06], ['Floats.', 2.598833643460815e-06], ['Float_expression', 2.598833643460815e-06], ['Float_expression(const', 2.598833643460815e-06], ['Expression(EXPRESSION_FLOAT,', 2.598833643460815e-06], ['mpfr_init_set(this->val_,', 2.598833643460815e-06], ['export_float(String_dump*', 2.598833643460815e-06], ['dump_float(Ast_dump_context*', 2.598833643460815e-06], ['nc->set_float(this->type_,', 2.598833643460815e-06], ['Expression::make_float(&this->val_,', 2.598833643460815e-06], ['Float_expression::do_type()', 2.598833643460815e-06], ['Float_expression::do_determine_type(const', 2.598833643460815e-06], ['(context->type->integer_type()', 2.598833643460815e-06], ['context->type->float_type()', 2.598833643460815e-06], ['context->type->complex_type()', 2.598833643460815e-06], ['Float_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['nc.set_float(NULL,', 2.598833643460815e-06], ['Float_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['nc.set_float(resolved_type,', 2.598833643460815e-06], ['Float_expression::export_float(String_dump', 2.598833643460815e-06], ['exponent;', 2.598833643460815e-06], ['mpfr_get_str(NULL,', 2.598833643460815e-06], ['&exponent,', 2.598833643460815e-06], ['exp->write_c_string("-");', 2.598833643460815e-06], ['exp->write_c_string("0.");', 2.598833643460815e-06], ['exp->write_c_string(*s', 2.598833643460815e-06], ['mpfr_free_str(s);', 2.598833643460815e-06], ['"E%ld",', 2.598833643460815e-06], ['Float_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['Float_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Float_expression::export_float(ast_dump_context,', 2.598833643460815e-06], ['Expression::make_float(const', 2.598833643460815e-06], ['Float_expression(val,', 2.598833643460815e-06], ['Complex_expression', 2.598833643460815e-06], ['Complex_expression(const', 2.598833643460815e-06], ['Expression(EXPRESSION_COMPLEX,', 2.598833643460815e-06], ['mpc_init2(this->val_,', 2.598833643460815e-06], ['mpc_set(this->val_,', 2.598833643460815e-06], ['export_complex(String_dump*', 2.598833643460815e-06], ['dump_complex(Ast_dump_context*', 2.598833643460815e-06], ['nc->set_complex(this->type_,', 2.598833643460815e-06], ['Expression::make_complex(&this->val_,', 2.598833643460815e-06], ['Complex_expression::do_type()', 2.598833643460815e-06], ['Complex_expression::do_determine_type(const', 2.598833643460815e-06], ['Complex_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['nc.set_complex(NULL,', 2.598833643460815e-06], ['Complex_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['nc.set_complex(resolved_type,', 2.598833643460815e-06], ['Complex_expression::export_complex(String_dump*', 2.598833643460815e-06], ['(!mpfr_zero_p(mpc_realref(val)))', 2.598833643460815e-06], ['(mpfr_sgn(mpc_imagref(val))', 2.598833643460815e-06], ['exp->write_c_string("+");', 2.598833643460815e-06], ['exp->write_c_string("i");', 2.598833643460815e-06], ['Complex_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['Complex_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Complex_expression::export_complex(ast_dump_context,', 2.598833643460815e-06], ['Expression::make_complex(const', 2.598833643460815e-06], ['Complex_expression(val,', 2.598833643460815e-06], ['Find_named_object(Named_object*', 2.598833643460815e-06], ['no_(no),', 2.598833643460815e-06], ['no_;', 2.598833643460815e-06], ['Const_expression(Named_object*', 2.598833643460815e-06], ['Expression(EXPRESSION_CONST_REFERENCE,', 2.598833643460815e-06], ['constant_(constant),', 2.598833643460815e-06], ['seen_(false)', 2.598833643460815e-06], ['named_object()', 2.598833643460815e-06], ['this->constant_;', 2.598833643460815e-06], ['check_for_init_loop();', 2.598833643460815e-06], ['do_string_constant_value(std::string*', 2.598833643460815e-06], ['this->constant_->const_value()->expr()->export_expression(efb);', 2.598833643460815e-06], ['constant_;', 2.598833643460815e-06], ['seen_;', 2.598833643460815e-06], ['Const_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Const_expression::do_lower(Gogo*', 2.598833643460815e-06], ['(this->constant_->const_value()->expr()->classification()', 2.598833643460815e-06], ['EXPRESSION_IOTA)', 2.598833643460815e-06], ['(iota_value', 2.598833643460815e-06], ['"iota', 2.598833643460815e-06], ['declarations");', 2.598833643460815e-06], ['iota_value', 2.598833643460815e-06], ['Expression::make_integer_ul(iota_value,', 2.598833643460815e-06], ['gogo->lower_constant(this->constant_);', 2.598833643460815e-06], ['Const_expression::do_numeric_constant_value(Numeric_constant*', 2.598833643460815e-06], ['(!nc->set_type(ctype,', 2.598833643460815e-06], ['Const_expression::do_string_constant_value(std::string*', 2.598833643460815e-06], ['e->string_constant_value(val);', 2.598833643460815e-06], ['Const_expression::do_type()', 2.598833643460815e-06], ['this->constant_->const_value();', 2.598833643460815e-06], ['(this->seen_', 2.598833643460815e-06], ['nc->lowering())', 2.598833643460815e-06], ['(nc->type()', 2.598833643460815e-06], ['!nc->type()->is_error_type())', 2.598833643460815e-06], ['(!this->seen_)', 2.598833643460815e-06], ['nc->location();', 2.598833643460815e-06], ['nc->set_type(this->type_);', 2.598833643460815e-06], ['nc->type();', 2.598833643460815e-06], ['nc->expr()->type();', 2.598833643460815e-06], ['(ret->is_error_type())', 2.598833643460815e-06], ['nc->set_type(ret);', 2.598833643460815e-06], ['Const_expression::do_determine_type(const', 2.598833643460815e-06], ['this->constant_->const_value()->expr()->type());', 2.598833643460815e-06], ['!ctype->is_abstract())', 2.598833643460815e-06], ['context->type->is_numeric_type()', 2.598833643460815e-06], ['cetype->is_numeric_type())', 2.598833643460815e-06], ['context->type->is_string_type()', 2.598833643460815e-06], ['cetype->is_string_type())', 2.598833643460815e-06], ['context->type->is_boolean_type()', 2.598833643460815e-06], ['cetype->is_boolean_type())', 2.598833643460815e-06], ['(cetype->is_abstract())', 2.598833643460815e-06], ['cetype->make_non_abstract_type();', 2.598833643460815e-06], ['cetype;', 2.598833643460815e-06], ['Const_expression::check_for_init_loop()', 2.598833643460815e-06], ['find_named_object(this->constant_);', 2.598833643460815e-06], ['&find_named_object);', 2.598833643460815e-06], ['(find_named_object.found())', 2.598833643460815e-06], ['Const_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['this->check_for_init_loop();', 2.598833643460815e-06], ['this->type_->is_numeric_type())', 2.598833643460815e-06], ['(this->constant_->const_value()->expr()->numeric_constant_value(&nc))', 2.598833643460815e-06], ['Const_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->type_->is_error()))', 2.598833643460815e-06], ['this->type_->is_numeric_type()', 2.598833643460815e-06], ['(this->constant_->const_value()->type()', 2.598833643460815e-06], ['this->constant_->const_value()->type()->is_abstract()))', 2.598833643460815e-06], ['(expr->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.set_type(this->type_,', 2.598833643460815e-06], ['nc.expression(this->location());', 2.598833643460815e-06], ['Expression::make_cast(this->type_,', 2.598833643460815e-06], ['expr->get_backend(context);', 2.598833643460815e-06], ['Const_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['this->constant_->name();', 2.598833643460815e-06], ['Expression::make_const_reference(Named_object*', 2.598833643460815e-06], ['Const_expression(constant,', 2.598833643460815e-06], ['Find_named_object::expression(Expression**', 2.598833643460815e-06], ['Expression::EXPRESSION_CONST_REFERENCE:', 2.598833643460815e-06], ['Const_expression*', 2.598833643460815e-06], ['static_cast<Const_expression*>(*pexpr);', 2.598833643460815e-06], ['(ce->named_object()', 2.598833643460815e-06], ['explicitly,', 2.598833643460815e-06], ['initializers.', 2.598833643460815e-06], ['ce->check_for_init_loop();', 2.598833643460815e-06], ['((*pexpr)->var_expression()->named_object()', 2.598833643460815e-06], ['((*pexpr)->func_expression()->named_object()', 2.598833643460815e-06], ['Nil_expression', 2.598833643460815e-06], ['Nil_expression(Location', 2.598833643460815e-06], ['Expression(EXPRESSION_NIL,', 2.598833643460815e-06], ['context->backend()->nil_pointer_expression();', 2.598833643460815e-06], ['efb->write_c_string("$nil");', 2.598833643460815e-06], ['"nil";', 2.598833643460815e-06], ['Nil_expression::do_import(Import_expression*', 2.598833643460815e-06], ['imp->require_c_string("nil");', 2.598833643460815e-06], ['Expression::make_nil(Location', 2.598833643460815e-06], ['Nil_expression(location);', 2.598833643460815e-06], ['marker.', 2.598833643460815e-06], ['Const_expression::do_lower,', 2.598833643460815e-06], ['have.', 2.598833643460815e-06], ['Iota_expression(Location', 2.598833643460815e-06], ['Parser_expression(EXPRESSION_IOTA,', 2.598833643460815e-06], ['"iota";', 2.598833643460815e-06], ['Expression::make_iota()', 2.598833643460815e-06], ['iota_expression(Linemap::unknown_location());', 2.598833643460815e-06], ['&iota_expression;', 2.598833643460815e-06], ['Type_conversion_expression.', 2.598833643460815e-06], ['Type_conversion_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Type_conversion_expression::do_lower(Gogo*,', 2.598833643460815e-06], ['(val->numeric_constant_value(&nc))', 2.598833643460815e-06], ['According', 2.598833643460815e-06], ['(http://golang.org/ref/spec#Conversions_to_and_from_a_string_type):', 2.598833643460815e-06], ['"outside', 2.598833643460815e-06], ['\'\\uFFFD\'."', 2.598833643460815e-06], ['(val->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.is_int())', 2.598833643460815e-06], ['(!nc.set_type(Type::lookup_integer_type("int"),', 2.598833643460815e-06], ['Numeric_constant::NC_UL_NEGATIVE)', 2.598833643460815e-06], ['Expression::make_string("\\ufffd",', 2.598833643460815e-06], ['is_byte', 2.598833643460815e-06], ['element_type->integer_type()->is_byte());', 2.598833643460815e-06], ['is_rune', 2.598833643460815e-06], ['element_type->integer_type()->is_rune());', 2.598833643460815e-06], ['(is_byte', 2.598833643460815e-06], ['is_rune)', 2.598833643460815e-06], ['(val->string_constant_value(&s))', 2.598833643460815e-06], ['(is_byte)', 2.598833643460815e-06], ['s.data()', 2.598833643460815e-06], ['Expression::make_slice_composite_literal(type,', 2.598833643460815e-06], ['Type_conversion_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['this->expr_->is_error_expression())', 2.598833643460815e-06], ['(((this->type()->is_string_type()', 2.598833643460815e-06], ['this->expr_->type()->is_slice_type())', 2.598833643460815e-06], ['this->expr_->type()->interface_type()', 2.598833643460815e-06], ['Type_conversion_expression::do_is_constant()', 2.598833643460815e-06], ['(!this->expr_->is_constant())', 2.598833643460815e-06], ['[]byte(nil).', 2.598833643460815e-06], ['!type->is_boolean_type()', 2.598833643460815e-06], ['Type_conversion_expression::do_is_static_initializer()', 2.598833643460815e-06], ['Type_conversion_expression::do_numeric_constant_value(', 2.598833643460815e-06], ['(!this->type_->is_numeric_type())', 2.598833643460815e-06], ['(!this->expr_->numeric_constant_value(nc))', 2.598833643460815e-06], ['nc->set_type(this->type_,', 2.598833643460815e-06], ['Type_conversion_expression::do_string_constant_value(std::string*', 2.598833643460815e-06], ['(this->type_->is_string_type()', 2.598833643460815e-06], ['this->expr_->type()->integer_type()', 2.598833643460815e-06], ['(this->expr_->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(nc.to_unsigned_long(&ival)', 2.598833643460815e-06], ['val->clear();', 2.598833643460815e-06], ['Lex::append_char(ival,', 2.598833643460815e-06], ['[]int', 2.598833643460815e-06], ['Type_conversion_expression::do_determine_type(const', 2.598833643460815e-06], ['subcontext(this->type_,', 2.598833643460815e-06], ['Type_conversion_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['expr_type->is_error())', 2.598833643460815e-06], ['Type_conversion_expression::do_copy()', 2.598833643460815e-06], ['Type_conversion_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['Type_conversion_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['intval;', 2.598833643460815e-06], ['(this->expr_->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.to_int(&intval)', 2.598833643460815e-06], ['mpz_fits_ushort_p(intval))', 2.598833643460815e-06], ['Lex::append_char(mpz_get_ui(intval),', 2.598833643460815e-06], ['mpz_clear(intval);', 2.598833643460815e-06], ['se', 2.598833643460815e-06], ['se->get_backend(context);', 2.598833643460815e-06], ['i2s_expr', 2.598833643460815e-06], ['Runtime::make_call(Runtime::INTSTRING,', 2.598833643460815e-06], ['i2s_expr,', 2.598833643460815e-06], ['expr_type->array_type();', 2.598833643460815e-06], ['a->element_type()->forwarded();', 2.598833643460815e-06], ['Runtime::SLICEBYTETOSTRING;', 2.598833643460815e-06], ['Runtime::SLICERUNETOSTRING;', 2.598833643460815e-06], ['this->expr_)->get_backend(context);', 2.598833643460815e-06], ['Runtime::STRINGTOSLICEBYTE;', 2.598833643460815e-06], ['Runtime::STRINGTOSLICERUNE;', 2.598833643460815e-06], ['go_assert(Type::are_convertible(type,', 2.598833643460815e-06], ['((type->is_unsafe_pointer_type()', 2.598833643460815e-06], ['(expr_type->points_to()', 2.598833643460815e-06], ['expr_type->integer_type()))', 2.598833643460815e-06], ['(expr_type->is_unsafe_pointer_type()', 2.598833643460815e-06], ['Cost', 2.598833643460815e-06], ['Type_conversion_expression::do_inlining_cost()', 2.598833643460815e-06], ['Type_conversion_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['efb->type_context();', 2.598833643460815e-06], ['efb->set_type_context(this->type_);', 2.598833643460815e-06], ['efb->set_type_context(old_context);', 2.598833643460815e-06], ['Type_conversion_expression::do_import(Import_expression*', 2.598833643460815e-06], ['imp->require_c_string("$convert(");', 2.598833643460815e-06], ['Type_conversion_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_cast(Type*', 2.598833643460815e-06], ['val->is_error_expression())', 2.598833643460815e-06], ['Type_conversion_expression(type,', 2.598833643460815e-06], ['Unsafe_type_conversion_expression.', 2.598833643460815e-06], ['Unsafe_type_conversion_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Unsafe_type_conversion_expression::do_is_static_initializer()', 2.598833643460815e-06], ['Unsafe_type_conversion_expression::do_copy()', 2.598833643460815e-06], ['Unsafe_type_conversion_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['Unsafe_type_conversion_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['et->is_error_type())', 2.598833643460815e-06], ['go_assert(et->array_type()', 2.598833643460815e-06], ['t->is_slice_type()', 2.598833643460815e-06], ['et->is_slice_type());', 2.598833643460815e-06], ['et->named_type()', 2.598833643460815e-06], ['!Type::are_convertible(t,', 2.598833643460815e-06], ['go_assert(et->struct_type()', 2.598833643460815e-06], ['Type::are_convertible(t,', 2.598833643460815e-06], ['go_assert(et->map_type()', 2.598833643460815e-06], ['go_assert(et->channel_type()', 2.598833643460815e-06], ['(et->is_unsafe_pointer_type())', 2.598833643460815e-06], ['go_assert(t->points_to()', 2.598833643460815e-06], ['t->integer_type()', 2.598833643460815e-06], ['Type::lookup_integer_type("uintptr")->real_type()));', 2.598833643460815e-06], ['(t->interface_type()', 2.598833643460815e-06], ['empty_iface', 2.598833643460815e-06], ['t->interface_type()->is_empty();', 2.598833643460815e-06], ['go_assert(et->interface_type()', 2.598833643460815e-06], ['et->interface_type()->is_empty()', 2.598833643460815e-06], ['empty_iface);', 2.598833643460815e-06], ['go_assert(et->is_boolean_type()', 2.598833643460815e-06], ['et->points_to()', 2.598833643460815e-06], ['(t->function_type()', 2.598833643460815e-06], ['Unsafe_type_conversion_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_unsafe_cast(Type*', 2.598833643460815e-06], ['Unsafe_type_conversion_expression(type,', 2.598833643460815e-06], ['Unary_expression.', 2.598833643460815e-06], ['address_taken', 2.598833643460815e-06], ['Unary_expression::check_operand_address_taken(Gogo*)', 2.598833643460815e-06], ['set_does_not_escape,', 2.598833643460815e-06], ['(this->escapes_)', 2.598833643460815e-06], ['int(Node::ESCAPE_NONE))', 2.598833643460815e-06], ['this->expr_->address_taken(this->escapes_);', 2.598833643460815e-06], ['Unary_expression::do_lower(Gogo*,', 2.598833643460815e-06], ['*(*T)(unsafe.Pointer)(&x)', 2.598833643460815e-06], ['here?', 2.598833643460815e-06], ['math/unsafe.go', 2.598833643460815e-06], ['casing.', 2.598833643460815e-06], ['EXPRESSION_CONVERSION)', 2.598833643460815e-06], ['te', 2.598833643460815e-06], ['static_cast<Type_conversion_expression*>(e);', 2.598833643460815e-06], ['te->expr();', 2.598833643460815e-06], ['static_cast<Unary_expression*>(e);', 2.598833643460815e-06], ['(ue->op_', 2.598833643460815e-06], ['(!ue->expr_->is_addressable()', 2.598833643460815e-06], ['!ue->create_temp_)', 2.598833643460815e-06], ['go_error_at(ue->location(),', 2.598833643460815e-06], ['ue->expr_;', 2.598833643460815e-06], ['ue->set_does_not_escape();', 2.598833643460815e-06], ['Catching', 2.598833643460815e-06], ['TYPE_VOID', 2.598833643460815e-06], ['expr->type()->is_unsafe_pointer_type())', 2.598833643460815e-06], ['%<unsafe.Pointer%>");', 2.598833643460815e-06], ['Unary_expression::do_type', 2.598833643460815e-06], ['disappear', 2.598833643460815e-06], ['OPERATOR_MINUS', 2.598833643460815e-06], ['OPERATOR_XOR)', 2.598833643460815e-06], ['(expr->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(Unary_expression::eval_constant(op,', 2.598833643460815e-06], ['&result,', 2.598833643460815e-06], ['result.expression(loc);', 2.598833643460815e-06], ['Unary_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['this->create_temp_', 2.598833643460815e-06], ['(this->create_temp_', 2.598833643460815e-06], ['Unary_expression::do_is_constant()', 2.598833643460815e-06], ['this->expr_->var_expression();', 2.598833643460815e-06], ['this->expr_->is_constant();', 2.598833643460815e-06], ['Unary_expression::do_is_static_initializer()', 2.598833643460815e-06], ['Unary_expression::base_is_static_initializer(this->expr_);', 2.598833643460815e-06], ['this->expr_->is_static_initializer();', 2.598833643460815e-06], ['Unary_expression::base_is_static_initializer(Expression*', 2.598833643460815e-06], ['expr->field_reference_expression();', 2.598833643460815e-06], ['Unary_expression::base_is_static_initializer(fre->expr());', 2.598833643460815e-06], ['aind', 2.598833643460815e-06], ['(aind', 2.598833643460815e-06], ['(aind->end()', 2.598833643460815e-06], ['aind->start()->is_constant()', 2.598833643460815e-06], ['Unary_expression::base_is_static_initializer(aind->array()));', 2.598833643460815e-06], ['expr->var_expression();', 2.598833643460815e-06], ['(expr->is_composite_literal()', 2.598833643460815e-06], ['expr->is_static_initializer())', 2.598833643460815e-06], ['(expr->string_expression()', 2.598833643460815e-06], ['(greater', 2.598833643460815e-06], ['threshold),', 2.598833643460815e-06], ['taken,', 2.598833643460815e-06], ['Unary_expression::Nil_check_classification', 2.598833643460815e-06], ['Unary_expression::requires_nil_check(Gogo*', 2.598833643460815e-06], ['go_assert(this->op_', 2.598833643460815e-06], ['OPERATOR_MULT);', 2.598833643460815e-06], ['(!ptype->is_void_type())', 2.598833643460815e-06], ['ptype->backend_type_size(gogo,', 2.598833643460815e-06], ['&type_size);', 2.598833643460815e-06], ['NIL_CHECK_ERROR_ENCOUNTERED;', 2.598833643460815e-06], ['size_cutoff', 2.598833643460815e-06], ['gogo->nil_check_size_threshold();', 2.598833643460815e-06], ['(size_cutoff', 2.598833643460815e-06], ['(type_size', 2.598833643460815e-06], ['size_cutoff))', 2.598833643460815e-06], ['this->issue_nil_check_;', 2.598833643460815e-06], ['UNC,', 2.598833643460815e-06], ['*ISSUED_ERROR.', 2.598833643460815e-06], ['Unary_expression::eval_constant(Operator', 2.598833643460815e-06], ['unc,', 2.598833643460815e-06], ['*nc', 2.598833643460815e-06], ['*unc;', 2.598833643460815e-06], ['(unc->is_int()', 2.598833643460815e-06], ['unc->is_rune())', 2.598833643460815e-06], ['(unc->is_float())', 2.598833643460815e-06], ['unc->get_float(&uval);', 2.598833643460815e-06], ['nc->set_float(unc->type(),', 2.598833643460815e-06], ['mpfr_clear(uval);', 2.598833643460815e-06], ['(unc->is_complex())', 2.598833643460815e-06], ['unc->get_complex(&uval);', 2.598833643460815e-06], ['mpc_neg(val,', 2.598833643460815e-06], ['nc->set_complex(unc->type(),', 2.598833643460815e-06], ['mpc_clear(uval);', 2.598833643460815e-06], ['(!unc->is_int()', 2.598833643460815e-06], ['!unc->is_rune())', 2.598833643460815e-06], ['unc->get_rune(&uval);', 2.598833643460815e-06], ['unc->get_int(&uval);', 2.598833643460815e-06], ['mpz_cmp_si(uval,', 2.598833643460815e-06], ['unc->type();', 2.598833643460815e-06], ['(utype->integer_type()', 2.598833643460815e-06], ['utype->integer_type()->is_abstract())', 2.598833643460815e-06], ['mpz_com(val,', 2.598833643460815e-06], ['UVAL.', 2.598833643460815e-06], ['((mpz_sizeinbase(uval,', 2.598833643460815e-06], ['HOST_WIDE_INT*', 2.598833643460815e-06], ['phwi', 2.598833643460815e-06], ['HOST_WIDE_INT[count];', 2.598833643460815e-06], ['memset(phwi,', 2.598833643460815e-06], ['sizeof(HOST_WIDE_INT));', 2.598833643460815e-06], ['utype->integer_type()->bits();', 2.598833643460815e-06], ['mpz_sgn(uval)', 2.598833643460815e-06], ['mpz_add(uval,', 2.598833643460815e-06], ['ecount;', 2.598833643460815e-06], ['mpz_export(phwi,', 2.598833643460815e-06], ['&ecount,', 2.598833643460815e-06], ['go_assert(ecount', 2.598833643460815e-06], ['Trim', 2.598833643460815e-06], ['((obits', 2.598833643460815e-06], ['go_assert(ocount', 2.598833643460815e-06], ['ocount;', 2.598833643460815e-06], ['phwi[i]', 2.598833643460815e-06], ['~phwi[i];', 2.598833643460815e-06], ['clearbits', 2.598833643460815e-06], ['obits;', 2.598833643460815e-06], ['(clearbits', 2.598833643460815e-06], ['phwi[ocount', 2.598833643460815e-06], ['(((unsigned', 2.598833643460815e-06], ['(HOST_WIDE_INT)', 2.598833643460815e-06], ['clearbits);', 2.598833643460815e-06], ['mpz_import(val,', 2.598833643460815e-06], ['ocount,', 2.598833643460815e-06], ['phwi);', 2.598833643460815e-06], ['mpz_tstbit(val,', 2.598833643460815e-06], ['phwi;', 2.598833643460815e-06], ['mpz_clear(uval);', 2.598833643460815e-06], ['(!nc->set_type(unc->type(),', 2.598833643460815e-06], ['Unary_expression::do_numeric_constant_value(Numeric_constant*', 2.598833643460815e-06], ['unc;', 2.598833643460815e-06], ['(!this->expr_->numeric_constant_value(&unc))', 2.598833643460815e-06], ['Unary_expression::eval_constant(this->op_,', 2.598833643460815e-06], ['&unc,', 2.598833643460815e-06], ['Unary_expression::do_type()', 2.598833643460815e-06], ['subtype->points_to();', 2.598833643460815e-06], ['Unary_expression::do_determine_type(const', 2.598833643460815e-06], ['something.', 2.598833643460815e-06], ['context->type->points_to());', 2.598833643460815e-06], ['Type::make_pointer_type(context->type));', 2.598833643460815e-06], ['Unary_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->expr_->is_addressable())', 2.598833643460815e-06], ['this->expr_->issue_nil_check();', 2.598833643460815e-06], ['(type->points_to()->is_error())', 2.598833643460815e-06], ['Unary_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['bvar_expr', 2.598833643460815e-06], ['sut->expression()->get_backend(context);', 2.598833643460815e-06], ['bassign', 2.598833643460815e-06], ['bvar_expr,', 2.598833643460815e-06], ['bval,', 2.598833643460815e-06], ['bvar_addr', 2.598833643460815e-06], ['gogo->backend()->address_expression(bvar_expr,', 2.598833643460815e-06], ['gogo->backend()->compound_expression(bassign,', 2.598833643460815e-06], ['bvar_addr,', 2.598833643460815e-06], ['this->expr_->type()->get_backend(gogo);', 2.598833643460815e-06], ['go_assert(!this->expr_->is_composite_literal()', 2.598833643460815e-06], ['this->expr_->is_static_initializer());', 2.598833643460815e-06], ['(this->expr_->classification()', 2.598833643460815e-06], ['static_cast<Unary_expression*>(this->expr_);', 2.598833643460815e-06], ['go_assert(ue->op()', 2.598833643460815e-06], ['OPERATOR_AND);', 2.598833643460815e-06], ['(this->is_gc_root_', 2.598833643460815e-06], ['this->is_slice_init_)', 2.598833643460815e-06], ['(this->is_gc_root_)', 2.598833643460815e-06], ['mutable,', 2.598833643460815e-06], ['gogo->gc_root_name();', 2.598833643460815e-06], ['gogo->initializer_name();', 2.598833643460815e-06], ['this->expr_->type()->array_type();', 2.598833643460815e-06], ['go_assert(at', 2.598833643460815e-06], ['read-only,', 2.598833643460815e-06], ['(context->function()', 2.598833643460815e-06], ['context->is_const());', 2.598833643460815e-06], ['gogo->backend()->implicit_variable(var_name,', 2.598833643460815e-06], ['gogo->backend()->implicit_variable_set_init(implicit,', 2.598833643460815e-06], ['(this->is_slice_init_', 2.598833643460815e-06], ['!copy_to_heap', 2.598833643460815e-06], ['this->expr_->type()->has_pointer())', 2.598833643460815e-06], ['gogo->backend()->address_expression(root,', 2.598833643460815e-06], ['gogo->add_gc_root(Expression::make_backend(root,', 2.598833643460815e-06], ['((this->expr_->is_composite_literal()', 2.598833643460815e-06], ['this->expr_->string_expression()', 2.598833643460815e-06], ['this->expr_->is_static_initializer())', 2.598833643460815e-06], ['var_name(gogo->initializer_name());', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_set_init(decl,', 2.598833643460815e-06], ['gogo->backend()->var_expression(decl,', 2.598833643460815e-06], ['go_assert(!this->create_temp_', 2.598833643460815e-06], ['this->expr_->is_variable());', 2.598833643460815e-06], ['gogo->backend()->address_expression(bexpr,', 2.598833643460815e-06], ['ptype->get_backend(gogo);', 2.598833643460815e-06], ['nil-checking', 2.598833643460815e-06], ['tbexpr', 2.598833643460815e-06], ['Expression::make_nil(loc)->get_backend(context);', 2.598833643460815e-06], ['tbexpr,', 2.598833643460815e-06], ['ubexpr,', 2.598833643460815e-06], ['gogo->backend()->indirect_expression(pbtype,', 2.598833643460815e-06], ['Unary_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['efb->write_c_string("+");', 2.598833643460815e-06], ['efb->write_c_string("-");', 2.598833643460815e-06], ['efb->write_c_string("!");', 2.598833643460815e-06], ['efb->write_c_string("^");', 2.598833643460815e-06], ['efb->write_c_string("&");', 2.598833643460815e-06], ['efb->write_c_string("*");', 2.598833643460815e-06], ['Unary_expression::do_import(Import_expression*', 2.598833643460815e-06], ['(imp->get_char())', 2.598833643460815e-06], ['Unary_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_unary(Operator', 2.598833643460815e-06], ['Unary_expression(op,', 2.598833643460815e-06], ['Expression::make_dereference(Expression*', 2.598833643460815e-06], ['Nil_check_classification', 2.598833643460815e-06], ['docheck,', 2.598833643460815e-06], ['deref->unary_expression()->set_requires_nil_check(true);', 2.598833643460815e-06], ['deref->unary_expression()->set_requires_nil_check(false);', 2.598833643460815e-06], ['deref;', 2.598833643460815e-06], ['Expression::deref()', 2.598833643460815e-06], ['static_cast<Unary_expression*>(this);', 2.598833643460815e-06], ['(ue->op()', 2.598833643460815e-06], ['ue->operand();', 2.598833643460815e-06], ['Binary_expression.', 2.598833643460815e-06], ['Binary_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Expression::traverse(&this->right_,', 2.598833643460815e-06], ['Binary_expression::do_is_static_initializer()', 2.598833643460815e-06], ['(!this->left_->is_static_initializer()', 2.598833643460815e-06], ['!this->right_->is_static_initializer())', 2.598833643460815e-06], ['Addresses', 2.598833643460815e-06], ['arbitray', 2.598833643460815e-06], ['lu', 2.598833643460815e-06], ['this->left_->unary_expression();', 2.598833643460815e-06], ['ru', 2.598833643460815e-06], ['this->right_->unary_expression();', 2.598833643460815e-06], ['(lu', 2.598833643460815e-06], ['lu->op()', 2.598833643460815e-06], ['LEFT_TYPE', 2.598833643460815e-06], ['RIGHT_TYPE.', 2.598833643460815e-06], ['abstract.', 2.598833643460815e-06], ['Binary_expression::operation_type(Operator', 2.598833643460815e-06], ['(left_type', 2.598833643460815e-06], ['!left_type->is_abstract()', 2.598833643460815e-06], ['!right_type->is_abstract()', 2.598833643460815e-06], ['left_type->base()', 2.598833643460815e-06], ['right_type->base()', 2.598833643460815e-06], ['error--let', 2.598833643460815e-06], ['(!left_type->is_abstract()', 2.598833643460815e-06], ['left_type->named_type()', 2.598833643460815e-06], ['right_type->named_type()', 2.598833643460815e-06], ['(!left_type->is_abstract())', 2.598833643460815e-06], ['(!right_type->is_abstract())', 2.598833643460815e-06], ['(left_type->complex_type()', 2.598833643460815e-06], ['(right_type->complex_type()', 2.598833643460815e-06], ['(right_type->float_type()', 2.598833643460815e-06], ['left_type->integer_type()->is_rune())', 2.598833643460815e-06], ['right_type->integer_type()->is_rune())', 2.598833643460815e-06], ['Binary_expression::cmp_to_bool(Operator', 2.598833643460815e-06], ['Binary_expression::compare_constant(Operator', 2.598833643460815e-06], ['cmp;', 2.598833643460815e-06], ['Binary_expression::compare_complex(left_nc,', 2.598833643460815e-06], ['Binary_expression::compare_float(left_nc,', 2.598833643460815e-06], ['Binary_expression::compare_integer(left_nc,', 2.598833643460815e-06], ['Binary_expression::compare_integer(const', 2.598833643460815e-06], ['mpz_cmp(left_val,', 2.598833643460815e-06], ['Binary_expression::compare_float(const', 2.598833643460815e-06], ['mpfr_prec_round(left_val,', 2.598833643460815e-06], ['mpfr_prec_round(right_val,', 2.598833643460815e-06], ['mpfr_cmp(left_val,', 2.598833643460815e-06], ['Binary_expression::compare_complex(const', 2.598833643460815e-06], ['type->complex_type()->bits();', 2.598833643460815e-06], ['mpfr_prec_round(mpc_realref(left_val),', 2.598833643460815e-06], ['mpfr_prec_round(mpc_imagref(left_val),', 2.598833643460815e-06], ['mpfr_prec_round(mpc_realref(right_val),', 2.598833643460815e-06], ['mpfr_prec_round(mpc_imagref(right_val),', 2.598833643460815e-06], ['mpc_cmp(left_val,', 2.598833643460815e-06], ['right_val)', 2.598833643460815e-06], ['appropriate,', 2.598833643460815e-06], ['Binary_expression::eval_constant(Operator', 2.598833643460815e-06], ['numeric.', 2.598833643460815e-06], ['is_shift', 2.598833643460815e-06], ['(!is_shift', 2.598833643460815e-06], ['(is_shift', 2.598833643460815e-06], ['((left_type->integer_type()', 2.598833643460815e-06], ['!left_type->is_abstract())', 2.598833643460815e-06], ['!right_type->is_abstract())))', 2.598833643460815e-06], ['Binary_expression::eval_complex(op,', 2.598833643460815e-06], ['Binary_expression::eval_float(op,', 2.598833643460815e-06], ['Binary_expression::eval_integer(op,', 2.598833643460815e-06], ['nc->set_type(type,', 2.598833643460815e-06], ['(!r)', 2.598833643460815e-06], ['Binary_expression::eval_integer(Operator', 2.598833643460815e-06], ['mpz_add(val,', 2.598833643460815e-06], ['mpz_ior(val,', 2.598833643460815e-06], ['mpz_xor(val,', 2.598833643460815e-06], ['mpz_mul(val,', 2.598833643460815e-06], ['mpz_tdiv_q(val,', 2.598833643460815e-06], ['mpz_tdiv_r(val,', 2.598833643460815e-06], ['mpz_mul_2exp(val,', 2.598833643460815e-06], ['(mpz_cmp_ui(left_val,', 2.598833643460815e-06], ['mpz_tdiv_q_2exp(val,', 2.598833643460815e-06], ['mpz_fdiv_q_2exp(val,', 2.598833643460815e-06], ['tval;', 2.598833643460815e-06], ['mpz_init(tval);', 2.598833643460815e-06], ['mpz_com(tval,', 2.598833643460815e-06], ['tval);', 2.598833643460815e-06], ['mpz_clear(tval);', 2.598833643460815e-06], ['(left_nc->is_rune()', 2.598833643460815e-06], ['right_nc->is_rune()))', 2.598833643460815e-06], ['Binary_expression::eval_float(Operator', 2.598833643460815e-06], ['mpfr_add(val,', 2.598833643460815e-06], ['mpfr_sub(val,', 2.598833643460815e-06], ['mpfr_mul(val,', 2.598833643460815e-06], ['(!mpfr_zero_p(right_val))', 2.598833643460815e-06], ['mpfr_div(val,', 2.598833643460815e-06], ['nc->set_float(NULL,', 2.598833643460815e-06], ['Binary_expression::eval_complex(Operator', 2.598833643460815e-06], ['mpc_add(val,', 2.598833643460815e-06], ['mpc_sub(val,', 2.598833643460815e-06], ['mpc_mul(val,', 2.598833643460815e-06], ['(mpc_cmp_si(right_val,', 2.598833643460815e-06], ['mpc_div(val,', 2.598833643460815e-06], ['nc->set_complex(NULL,', 2.598833643460815e-06], ["Go's", 2.598833643460815e-06], ['unlimited', 2.598833643460815e-06], ['Binary_expression::do_lower(Gogo*', 2.598833643460815e-06], ['(left->numeric_constant_value(&left_nc)', 2.598833643460815e-06], ['right->numeric_constant_value(&right_nc))', 2.598833643460815e-06], ['(!Binary_expression::compare_constant(op,', 2.598833643460815e-06], ['&result))', 2.598833643460815e-06], ['Expression::make_cast(Type::make_boolean_type(),', 2.598833643460815e-06], ['Expression::make_boolean(result,', 2.598833643460815e-06], ['(!Binary_expression::eval_constant(op,', 2.598833643460815e-06], ['(left->type()->is_string_type()', 2.598833643460815e-06], ['right->type()->is_string_type())', 2.598833643460815e-06], ['left_string;', 2.598833643460815e-06], ['right_string;', 2.598833643460815e-06], ['(left->string_constant_value(&left_string)', 2.598833643460815e-06], ['right->string_constant_value(&right_string))', 2.598833643460815e-06], ['Expression::make_string(left_string', 2.598833643460815e-06], ['right_string,', 2.598833643460815e-06], ['left_string.compare(right_string);', 2.598833643460815e-06], ['Expression::make_boolean(r,', 2.598833643460815e-06], ['(left->type()->struct_type()', 2.598833643460815e-06], ['right->type()->struct_type()', 2.598833643460815e-06], ['this->lower_struct_comparison(gogo,', 2.598833643460815e-06], ['(left->type()->array_type()', 2.598833643460815e-06], ['!left->type()->is_slice_type()', 2.598833643460815e-06], ['right->type()->array_type()', 2.598833643460815e-06], ['!right->type()->is_slice_type())', 2.598833643460815e-06], ['this->lower_array_comparison(gogo,', 2.598833643460815e-06], ['((left->type()->interface_type()', 2.598833643460815e-06], ['(left->type()->interface_type()', 2.598833643460815e-06], ['this->lower_interface_value_comparison(gogo,', 2.598833643460815e-06], ['String_concat_expression,', 2.598833643460815e-06], ['additions.', 2.598833643460815e-06], ['(this->left_->type()->is_string_type()', 2.598833643460815e-06], ['exprs;', 2.598833643460815e-06], ['left_sce', 2.598833643460815e-06], ['this->left_->string_concat_expression();', 2.598833643460815e-06], ['(left_sce', 2.598833643460815e-06], ['left_sce->exprs();', 2.598833643460815e-06], ['exprs->push_back(this->left_);', 2.598833643460815e-06], ['right_sce', 2.598833643460815e-06], ['this->right_->string_concat_expression();', 2.598833643460815e-06], ['(right_sce', 2.598833643460815e-06], ['exprs->append(right_sce->exprs());', 2.598833643460815e-06], ['exprs->push_back(this->right_);', 2.598833643460815e-06], ['Expression::make_string_concat(exprs);', 2.598833643460815e-06], ['Binary_expression::lower_struct_comparison(Gogo*', 2.598833643460815e-06], ['this->left_->type()->struct_type();', 2.598833643460815e-06], ['this->right_->type()->struct_type();', 2.598833643460815e-06], ['(st2', 2.598833643460815e-06], ['!Type::are_identical(st,', 2.598833643460815e-06], ['st2,', 2.598833643460815e-06], ['(st->compare_is_identity(gogo)', 2.598833643460815e-06], ['st->total_field_count()', 2.598833643460815e-06], ['(left->var_expression()', 2.598833643460815e-06], ['left->temporary_reference_expression()', 2.598833643460815e-06], ['Statement::make_temporary(left->type(),', 2.598833643460815e-06], ['inserter->insert(left_temp);', 2.598833643460815e-06], ['Expression::make_set_and_use_temporary(left_temp,', 2.598833643460815e-06], ['(right->var_expression()', 2.598833643460815e-06], ['right->temporary_reference_expression()', 2.598833643460815e-06], ['Statement::make_temporary(right->type(),', 2.598833643460815e-06], ['inserter->insert(right_temp);', 2.598833643460815e-06], ['Expression::make_set_and_use_temporary(right_temp,', 2.598833643460815e-06], ['(field_index', 2.598833643460815e-06], ['(left_temp', 2.598833643460815e-06], ['left->copy();', 2.598833643460815e-06], ['Expression::make_temporary_reference(left_temp,', 2.598833643460815e-06], ['(right_temp', 2.598833643460815e-06], ['right->copy();', 2.598833643460815e-06], ['Expression::make_temporary_reference(right_temp,', 2.598833643460815e-06], ['Expression::make_field_reference(right,', 2.598833643460815e-06], ['Expression::make_binary(OPERATOR_ANDAND,', 2.598833643460815e-06], ['Binary_expression::lower_array_comparison(Gogo*', 2.598833643460815e-06], ['this->left_->type()->array_type();', 2.598833643460815e-06], ['this->right_->type()->array_type();', 2.598833643460815e-06], ['(at2', 2.598833643460815e-06], ['!Type::are_identical(at,', 2.598833643460815e-06], ['at2,', 2.598833643460815e-06], ['(at->compare_is_identity(gogo))', 2.598833643460815e-06], ['at->type_functions(gogo,', 2.598833643460815e-06], ['this->left_->type()->named_type(),', 2.598833643460815e-06], ['Expression::make_func_reference(equal_fn,', 2.598833643460815e-06], ['this->left_));', 2.598833643460815e-06], ['this->right_));', 2.598833643460815e-06], ['Binary_expression::lower_interface_value_comparison(Gogo*,', 2.598833643460815e-06], ['ift;', 2.598833643460815e-06], ['left_type->interface_type();', 2.598833643460815e-06], ['(!ift->implements_interface(right_type,', 2.598833643460815e-06], ['right_type->interface_type();', 2.598833643460815e-06], ['(!ift->implements_interface(left_type,', 2.598833643460815e-06], ['!this->left_->is_addressable())', 2.598833643460815e-06], ['Statement::make_temporary(left_type,', 2.598833643460815e-06], ['(right_type->interface_type()', 2.598833643460815e-06], ['right_type->points_to()', 2.598833643460815e-06], ['!this->right_->is_addressable())', 2.598833643460815e-06], ['Statement::make_temporary(right_type,', 2.598833643460815e-06], ['Binary_expression::lower_compare_to_memcmp(Gogo*,', 2.598833643460815e-06], ['this->left_);', 2.598833643460815e-06], ['Expression::make_type_info(this->left_->type(),', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MEMCMP,', 2.598833643460815e-06], ['Expression::make_binary(this->op_,', 2.598833643460815e-06], ['Binary_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['(this->left_->type()->is_error_type()', 2.598833643460815e-06], ['this->right_->type()->is_error_type()', 2.598833643460815e-06], ['this->left_->is_error_expression()', 2.598833643460815e-06], ['this->right_->is_error_expression())', 2.598833643460815e-06], ['((this->op_', 2.598833643460815e-06], ['left_type->integer_type()', 2.598833643460815e-06], ['OPERATOR_MOD);', 2.598833643460815e-06], ['(is_shift_op', 2.598833643460815e-06], ['(is_idiv_op', 2.598833643460815e-06], ['(gogo->check_divide_by_zero()', 2.598833643460815e-06], ['gogo->check_divide_overflow())))', 2.598833643460815e-06], ['(!this->left_->is_variable()', 2.598833643460815e-06], ['!this->left_->is_constant())', 2.598833643460815e-06], ['(!this->right_->is_variable()', 2.598833643460815e-06], ['!this->right_->is_constant())', 2.598833643460815e-06], ['Binary_expression::operand_address(Statement_inserter*', 2.598833643460815e-06], ['(!expr->is_addressable())', 2.598833643460815e-06], ['Statement::make_temporary(expr->type(),', 2.598833643460815e-06], ['static_cast<Unary_expression*>(expr)->set_does_not_escape();', 2.598833643460815e-06], ['Binary_expression::do_numeric_constant_value(Numeric_constant*', 2.598833643460815e-06], ['(!this->left_->numeric_constant_value(&left_nc))', 2.598833643460815e-06], ['(!this->right_->numeric_constant_value(&right_nc))', 2.598833643460815e-06], ['Binary_expression::eval_constant(this->op_,', 2.598833643460815e-06], ['Binary_expression::do_discarding_value()', 2.598833643460815e-06], ['this->right_->discarding_value();', 2.598833643460815e-06], ['Binary_expression::do_type()', 2.598833643460815e-06], ['(!Binary_expression::operation_type(this->op_,', 2.598833643460815e-06], ['Binary_expression::do_determine_type(const', 2.598833643460815e-06], ['tleft', 2.598833643460815e-06], ['tright', 2.598833643460815e-06], ['check_types', 2.598833643460815e-06], ['is_constant_expr', 2.598833643460815e-06], ['(this->left_->is_constant()', 2.598833643460815e-06], ['this->right_->is_constant());', 2.598833643460815e-06], ['(is_constant_expr', 2.598833643460815e-06], ['!is_shift_op)', 2.598833643460815e-06], ['plays', 2.598833643460815e-06], ['role', 2.598833643460815e-06], ['(!tleft->is_abstract())', 2.598833643460815e-06], ['(!tright->is_abstract())', 2.598833643460815e-06], ['((tleft->integer_type()', 2.598833643460815e-06], ['tright->integer_type()', 2.598833643460815e-06], ['tright->float_type()', 2.598833643460815e-06], ['tright->complex_type()', 2.598833643460815e-06], ['(tright->complex_type()', 2.598833643460815e-06], ['(tright->float_type()', 2.598833643460815e-06], ['!context->may_be_abstract)', 2.598833643460815e-06], ['subcontext.type->make_non_abstract_type();', 2.598833643460815e-06], ['this->left_->determine_type(&subcontext);', 2.598833643460815e-06], ['unusable', 2.598833643460815e-06], ['(tleft->is_abstract()', 2.598833643460815e-06], ['!subcontext.may_be_abstract', 2.598833643460815e-06], ['subcontext.type->interface_type()', 2.598833643460815e-06], ['subcontext.type->integer_type()', 2.598833643460815e-06], ['this->report_error(("invalid', 2.598833643460815e-06], ['context-determined', 2.598833643460815e-06], ['shift"));', 2.598833643460815e-06], ['this->right_->determine_type(&subcontext);', 2.598833643460815e-06], ['OTYPE', 2.598833643460815e-06], ['Binary_expression::check_operator_type(Operator', 2.598833643460815e-06], ['(!type->is_boolean_type()', 2.598833643460815e-06], ['!otype->is_boolean_type())', 2.598833643460815e-06], ['(!Type::are_compatible_for_comparison(false,', 2.598833643460815e-06], ['((!type->is_numeric_type()', 2.598833643460815e-06], ['(!otype->is_numeric_type()', 2.598833643460815e-06], ['!otype->is_string_type()))', 2.598833643460815e-06], ['(!type->is_numeric_type()', 2.598833643460815e-06], ['!otype->is_numeric_type())', 2.598833643460815e-06], ['otype->integer_type()', 2.598833643460815e-06], ['Binary_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(left_type->is_error()', 2.598833643460815e-06], ['right_type->is_error())', 2.598833643460815e-06], ['OPERATOR_GE)', 2.598833643460815e-06], ['right_type->is_nil_type())', 2.598833643460815e-06], ['(!Type::are_assignable(left_type,', 2.598833643460815e-06], ['!Type::are_assignable(right_type,', 2.598833643460815e-06], ['this->location())', 2.598833643460815e-06], ['!Binary_expression::check_operator_type(this->op_,', 2.598833643460815e-06], ['(!Type::are_compatible_for_binop(left_type,', 2.598833643460815e-06], ['right_type))', 2.598833643460815e-06], ['OPERATOR_MOD)', 2.598833643460815e-06], ['rconst;', 2.598833643460815e-06], ['this->right_->numeric_constant_value(&rconst)', 2.598833643460815e-06], ['rconst.to_unsigned_long(&rval)', 2.598833643460815e-06], ['this->report_error(_("integer', 2.598833643460815e-06], ['zero"));', 2.598833643460815e-06], ['operand"));', 2.598833643460815e-06], ['(right_type->is_string_type())', 2.598833643460815e-06], ['!right_type->integer_type()->is_unsigned()))', 2.598833643460815e-06], ['(this->right_->numeric_constant_value(&nc))', 2.598833643460815e-06], ['this->report_error(_("negative', 2.598833643460815e-06], ['count"));', 2.598833643460815e-06], ['rloc', 2.598833643460815e-06], ['this->right_->location();', 2.598833643460815e-06], ['rloc);', 2.598833643460815e-06], ['Binary_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Expression::comparison(context,', 2.598833643460815e-06], ['this->op_,', 2.598833643460815e-06], ['left_type->complex_type()', 2.598833643460815e-06], ['Expression::make_unary(OPERATOR_XOR,', 2.598833643460815e-06], ['+,', 2.598833643460815e-06], ['String_concat_expression', 2.598833643460815e-06], ['go_assert(!left_type->is_string_type());', 2.598833643460815e-06], ['provides,', 2.598833643460815e-06], ['this->left_->type()->complex_type()', 2.598833643460815e-06], ['complex_code;', 2.598833643460815e-06], ['(this->left_->type()->complex_type()->bits())', 2.598833643460815e-06], ['Runtime::COMPLEX64_DIV;', 2.598833643460815e-06], ['Runtime::COMPLEX128_DIV;', 2.598833643460815e-06], ['complex_div', 2.598833643460815e-06], ['Runtime::make_call(complex_code,', 2.598833643460815e-06], ['complex_div->get_backend(context);', 2.598833643460815e-06], ['this->left_->get_backend(context);', 2.598833643460815e-06], ['this->right_->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->binary_expression(this->op_,', 2.598833643460815e-06], ['mpz_init_set_ui(zero,', 2.598833643460815e-06], ['0UL);', 2.598833643460815e-06], ['neg_one;', 2.598833643460815e-06], ['mpz_init_set_si(neg_one,', 2.598833643460815e-06], ['left_btype', 2.598833643460815e-06], ['left_type->get_backend(gogo);', 2.598833643460815e-06], ['right_btype', 2.598833643460815e-06], ['right_type->get_backend(gogo);', 2.598833643460815e-06], ['well-defined.', 2.598833643460815e-06], ['go_assert(left_type->integer_type()', 2.598833643460815e-06], ['left_type->integer_type()->bits();', 2.598833643460815e-06], ['(!this->right_->numeric_constant_value(&nc)', 2.598833643460815e-06], ['long>(bits))', 2.598833643460815e-06], ['bitsval;', 2.598833643460815e-06], ['mpz_init_set_ui(bitsval,', 2.598833643460815e-06], ['bits);', 2.598833643460815e-06], ['bits_expr', 2.598833643460815e-06], ['bitsval);', 2.598833643460815e-06], ['bits_expr,', 2.598833643460815e-06], ['!left_type->integer_type()->is_unsigned())', 2.598833643460815e-06], ['neg_expr', 2.598833643460815e-06], ['neg_expr,', 2.598833643460815e-06], ['mpz_clear(bitsval);', 2.598833643460815e-06], ['(is_idiv_op)', 2.598833643460815e-06], ['(gogo->check_divide_by_zero())', 2.598833643460815e-06], ['__go_runtime_error(RUNTIME_ERROR_DIVISION_BY_ZERO)', 2.598833643460815e-06], ['errcode', 2.598833643460815e-06], ['RUNTIME_ERROR_DIVISION_BY_ZERO;', 2.598833643460815e-06], ['gogo->runtime_error(errcode,', 2.598833643460815e-06], ['(__go_runtime_error(...),', 2.598833643460815e-06], ['(gogo->check_divide_overflow())', 2.598833643460815e-06], ['one_expr', 2.598833643460815e-06], ['one);', 2.598833643460815e-06], ['(type->integer_type()->is_unsigned())', 2.598833643460815e-06], ['one_expr,', 2.598833643460815e-06], ['Computing', 2.598833643460815e-06], ['-fwrapv.', 2.598833643460815e-06], ['negate_expr', 2.598833643460815e-06], ['Expression::make_unary(OPERATOR_MINUS,', 2.598833643460815e-06], ['negate_expr->get_backend(context);', 2.598833643460815e-06], ['mpz_clear(zero);', 2.598833643460815e-06], ['mpz_clear(neg_one);', 2.598833643460815e-06], ['Binary_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['efb->write_c_string("(");', 2.598833643460815e-06], ['this->left_->export_expression(efb);', 2.598833643460815e-06], ['this->right_->export_expression(efb);', 2.598833643460815e-06], ['Binary_expression::do_import(Import_expression*', 2.598833643460815e-06], ['"unrecognized', 2.598833643460815e-06], ['Binary_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->right_);', 2.598833643460815e-06], ['Expression::make_binary(Operator', 2.598833643460815e-06], ['Binary_expression(op,', 2.598833643460815e-06], ['Expression::comparison(Translate_context*', 2.598833643460815e-06], ['right->type();', 2.598833643460815e-06], ['(left_type->is_string_type()', 2.598833643460815e-06], ['right_type->is_string_type())', 2.598833643460815e-06], ['Runtime::make_call(Runtime::EQSTRING,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CMPSTRING,', 2.598833643460815e-06], ['zexpr;', 2.598833643460815e-06], ['((left_type->interface_type()', 2.598833643460815e-06], ['!right_type->is_nil_type())', 2.598833643460815e-06], ['!left_type->is_nil_type()', 2.598833643460815e-06], ['Comparing', 2.598833643460815e-06], ['(right_type->points_to()', 2.598833643460815e-06], ['right;', 2.598833643460815e-06], ['go_assert(right->is_addressable());', 2.598833643460815e-06], ['Expression::make_type_descriptor(right_type,', 2.598833643460815e-06], ['Runtime::make_call((left_type->interface_type()->is_empty()', 2.598833643460815e-06], ['Runtime::EFACEVALEQ', 2.598833643460815e-06], ['Runtime::IFACEVALEQ),', 2.598833643460815e-06], ['pointer_arg);', 2.598833643460815e-06], ['compare_function;', 2.598833643460815e-06], ['(left_type->interface_type()->is_empty()', 2.598833643460815e-06], ['right_type->interface_type()->is_empty())', 2.598833643460815e-06], ['Runtime::EFACEEQ;', 2.598833643460815e-06], ['(!left_type->interface_type()->is_empty()', 2.598833643460815e-06], ['!right_type->interface_type()->is_empty())', 2.598833643460815e-06], ['Runtime::IFACEEQ;', 2.598833643460815e-06], ['(left_type->interface_type()->is_empty())', 2.598833643460815e-06], ['go_assert(!left_type->interface_type()->is_empty());', 2.598833643460815e-06], ['go_assert(right_type->interface_type()->is_empty());', 2.598833643460815e-06], ['Runtime::IFACEEFACEEQ;', 2.598833643460815e-06], ['Runtime::make_call(compare_function,', 2.598833643460815e-06], ['OPERATOR_NOTEQ))', 2.598833643460815e-06], ['(right_type->is_nil_type())', 2.598833643460815e-06], ['(left_type->array_type()', 2.598833643460815e-06], ['left_type->array_type()->length()', 2.598833643460815e-06], ['left_type->array_type();', 2.598833643460815e-06], ['is_lvalue', 2.598833643460815e-06], ['at->get_value_pointer(context->gogo(),', 2.598833643460815e-06], ['is_lvalue);', 2.598833643460815e-06], ['left_bexpr', 2.598833643460815e-06], ['left->get_backend(context);', 2.598833643460815e-06], ['right_bexpr', 2.598833643460815e-06], ['right->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->binary_expression(op,', 2.598833643460815e-06], ['left_bexpr,', 2.598833643460815e-06], ['right_bexpr,', 2.598833643460815e-06], ['(result_type', 2.598833643460815e-06], ['gogo->backend()->convert_expression(result_type->get_backend(gogo),', 2.598833643460815e-06], ['String_concat_expression.', 2.598833643460815e-06], ['String_concat_expression::do_is_constant()', 2.598833643460815e-06], ['(!(*pe)->is_constant())', 2.598833643460815e-06], ['String_concat_expression::do_is_static_initializer()', 2.598833643460815e-06], ['(!(*pe)->is_static_initializer())', 2.598833643460815e-06], ['String_concat_expression::do_type()', 2.598833643460815e-06], ['(!Binary_expression::operation_type(OPERATOR_PLUS,', 2.598833643460815e-06], ['(*pe)->type(),', 2.598833643460815e-06], ['&t1))', 2.598833643460815e-06], ['String_concat_expression::do_determine_type(const', 2.598833643460815e-06], ['(!t->is_abstract())', 2.598833643460815e-06], ['(*pe)->determine_type(&subcontext);', 2.598833643460815e-06], ['String_concat_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(t->is_error())', 2.598833643460815e-06], ['(!Type::are_compatible_for_binop(t,', 2.598833643460815e-06], ['this->report_error("incompatible', 2.598833643460815e-06], ['(!Binary_expression::check_operator_type(OPERATOR_PLUS,', 2.598833643460815e-06], ['String_concat_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['nil_arg', 2.598833643460815e-06], ['Expression::make_integer_ul(this->exprs_->size(),', 2.598833643460815e-06], ['arg_type->set_is_array_incomparable();', 2.598833643460815e-06], ['Expression::make_array_composite_literal(arg_type,', 2.598833643460815e-06], ['Runtime::CONCATSTRING2;', 2.598833643460815e-06], ['Runtime::CONCATSTRING3;', 2.598833643460815e-06], ['Runtime::CONCATSTRING4;', 2.598833643460815e-06], ['Runtime::CONCATSTRING5;', 2.598833643460815e-06], ['Expression::make_slice_composite_literal(arg_type,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CONCATSTRINGS,', 2.598833643460815e-06], ['sce);', 2.598833643460815e-06], ['String_concat_expression::do_dump_expression(', 2.598833643460815e-06], ['"concat(";', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->exprs_,', 2.598833643460815e-06], ['Expression::make_string_concat(Expression_list*', 2.598833643460815e-06], ['exprs)', 2.598833643460815e-06], ['String_concat_expression(exprs);', 2.598833643460815e-06], ['Bound_method_expression.', 2.598833643460815e-06], ['Bound_method_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Bound_method_expression::do_type()', 2.598833643460815e-06], ['fntype->copy_without_receiver();', 2.598833643460815e-06], ['Bound_method_expression::do_determine_type(const', 2.598833643460815e-06], ['!fntype->is_method())', 2.598833643460815e-06], ['subcontext(fntype->receiver()->type(),', 2.598833643460815e-06], ['Bound_method_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!fn->is_function()', 2.598833643460815e-06], ['!fn->is_function_declaration())', 2.598833643460815e-06], ['this->report_error(_("object', 2.598833643460815e-06], ['method"));', 2.598833643460815e-06], ['fntype->receiver()->type()->deref();', 2.598833643460815e-06], ['this->expr_->type());', 2.598833643460815e-06], ['etype->deref();', 2.598833643460815e-06], ['(!Type::are_identical(rtype,', 2.598833643460815e-06], ['this->report_error(_("method', 2.598833643460815e-06], ['Bound_method_expression::Method_value_thunks', 2.598833643460815e-06], ['Bound_method_expression::method_value_thunks;', 2.598833643460815e-06], ['Bound_method_expression::create_thunk(Gogo*', 2.598833643460815e-06], ['val(fn,', 2.598833643460815e-06], ['std::pair<Method_value_thunks::iterator,', 2.598833643460815e-06], ['Bound_method_expression::method_value_thunks.insert(val);', 2.598833643460815e-06], ['fn->location();', 2.598833643460815e-06], ['orig_fntype;', 2.598833643460815e-06], ['!orig_fntype->is_method())', 2.598833643460815e-06], ['orig_fntype->receiver()->type(),', 2.598833643460815e-06], ['Expression::make_bound_method(arg,', 2.598833643460815e-06], ['Expression::make_call(bme,', 2.598833643460815e-06], ['FIELD_INDEXES.', 2.598833643460815e-06], ['Field_indexes', 2.598833643460815e-06], ['expressions.h.', 2.598833643460815e-06], ['bme_check_nil(const', 2.598833643460815e-06], ['ref)', 2.598833643460815e-06], ['bme_check_nil(field_indexes->next,', 2.598833643460815e-06], ['(*ref)->type()->deref()->struct_type();', 2.598833643460815e-06], ['((*ref)->type()->struct_type()', 2.598833643460815e-06], ['go_assert((*ref)->type()->points_to()', 2.598833643460815e-06], ['*ref,', 2.598833643460815e-06], ['Expression::make_dereference(*ref,', 2.598833643460815e-06], ['go_assert((*ref)->type()->struct_type()', 2.598833643460815e-06], ['Expression::make_field_reference(*ref,', 2.598833643460815e-06], ['Call_expression::do_lower,', 2.598833643460815e-06], ['Bound_method_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['Bound_method_expression::create_thunk(gogo,', 2.598833643460815e-06], ['this->method_,', 2.598833643460815e-06], ['this->function_);', 2.598833643460815e-06], ['(!expr->is_variable())', 2.598833643460815e-06], ['etemp', 2.598833643460815e-06], ['inserter->insert(etemp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(etemp,', 2.598833643460815e-06], ['val->type()->points_to()', 2.598833643460815e-06], ['Expression::make_dereference(val,', 2.598833643460815e-06], ['this->expr_->type().', 2.598833643460815e-06], ['not-NULL', 2.598833643460815e-06], ['val->type(),', 2.598833643460815e-06], ['ret->heap_expression()->set_allocate_on_stack();', 2.598833643460815e-06], ['(this->method_->field_indexes()', 2.598833643460815e-06], ['bme_check_nil(this->method_->field_indexes(),', 2.598833643460815e-06], ['(this->method_->is_value_method()', 2.598833643460815e-06], ['nil_check,', 2.598833643460815e-06], ['pretending', 2.598833643460815e-06], ['Expression::make_conditional(nil_check,', 2.598833643460815e-06], ['Expression::make_unsafe_cast(this->type(),', 2.598833643460815e-06], ['Bound_method_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_type(this->expr_type_);', 2.598833643460815e-06], ['Expression::make_bound_method(Expression*', 2.598833643460815e-06], ['Bound_method_expression(expr,', 2.598833643460815e-06], ['Builtin_call_expression::Builtin_call_expression(Gogo*', 2.598833643460815e-06], ['code_(BUILTIN_INVALID),', 2.598833643460815e-06], ['recover_arg_is_set_(false)', 2.598833643460815e-06], ['fnexp', 2.598833643460815e-06], ['this->fn()->func_expression();', 2.598833643460815e-06], ['(fnexp', 2.598833643460815e-06], ['BUILTIN_INVALID;', 2.598833643460815e-06], ['name(fnexp->named_object()->name());', 2.598833643460815e-06], ['"append")', 2.598833643460815e-06], ['BUILTIN_APPEND;', 2.598833643460815e-06], ['"cap")', 2.598833643460815e-06], ['BUILTIN_CAP;', 2.598833643460815e-06], ['"close")', 2.598833643460815e-06], ['BUILTIN_CLOSE;', 2.598833643460815e-06], ['"complex")', 2.598833643460815e-06], ['BUILTIN_COMPLEX;', 2.598833643460815e-06], ['"copy")', 2.598833643460815e-06], ['BUILTIN_COPY;', 2.598833643460815e-06], ['"delete")', 2.598833643460815e-06], ['BUILTIN_DELETE;', 2.598833643460815e-06], ['"imag")', 2.598833643460815e-06], ['BUILTIN_IMAG;', 2.598833643460815e-06], ['"len")', 2.598833643460815e-06], ['BUILTIN_LEN;', 2.598833643460815e-06], ['"make")', 2.598833643460815e-06], ['BUILTIN_MAKE;', 2.598833643460815e-06], ['"new")', 2.598833643460815e-06], ['BUILTIN_NEW;', 2.598833643460815e-06], ['BUILTIN_PANIC;', 2.598833643460815e-06], ['"print")', 2.598833643460815e-06], ['BUILTIN_PRINT;', 2.598833643460815e-06], ['"println")', 2.598833643460815e-06], ['"real")', 2.598833643460815e-06], ['BUILTIN_REAL;', 2.598833643460815e-06], ['"recover")', 2.598833643460815e-06], ['"Alignof")', 2.598833643460815e-06], ['BUILTIN_ALIGNOF;', 2.598833643460815e-06], ['"Offsetof")', 2.598833643460815e-06], ['BUILTIN_OFFSETOF;', 2.598833643460815e-06], ['"Sizeof")', 2.598833643460815e-06], ['BUILTIN_SIZEOF;', 2.598833643460815e-06], ['Builtin_call_expression::do_is_recover_call()', 2.598833643460815e-06], ['Builtin_call_expression::do_set_recover_arg(Expression*', 2.598833643460815e-06], ['args->empty());', 2.598833643460815e-06], ['new_args->push_back(arg);', 2.598833643460815e-06], ['this->set_args(new_args);', 2.598833643460815e-06], ['this->recover_arg_is_set_', 2.598833643460815e-06], ['Builtin_call_expression::do_lower(Gogo*,', 2.598833643460815e-06], ['BUILTIN_APPEND)', 2.598833643460815e-06], ['(arg->bound_method_expression()', 2.598833643460815e-06], ['arg->interface_field_reference_expression()', 2.598833643460815e-06], ['Offsetof"));', 2.598833643460815e-06], ['(!farg->implicit())', 2.598833643460815e-06], ['(farg->expr()->deref()', 2.598833643460815e-06], ['farg->expr())', 2.598833643460815e-06], ['Offsetof', 2.598833643460815e-06], ['"indirection', 2.598833643460815e-06], ['field"));', 2.598833643460815e-06], ['farg->expr()->field_reference_expression();', 2.598833643460815e-06], ['(this->is_constant())', 2.598833643460815e-06], ['nc.expression(loc);', 2.598833643460815e-06], ['(!arg->is_type_expression())', 2.598833643460815e-06], ['go_error_at(arg->location(),', 2.598833643460815e-06], ['Expression::make_allocation(arg->type(),', 2.598833643460815e-06], ['this->lower_make(inserter);', 2.598833643460815e-06], ['function->func_value()->set_calls_recover();', 2.598833643460815e-06], ['eface', 2.598833643460815e-06], ['Expression::make_cast(eface,', 2.598833643460815e-06], ['(args->front()->type()->map_type()', 2.598833643460815e-06], ['args->front()->type()->map_type();', 2.598833643460815e-06], ['map_temp', 2.598833643460815e-06], ['Statement::make_temporary(mt,', 2.598833643460815e-06], ['inserter->insert(map_temp);', 2.598833643460815e-06], ['inserter->insert(key_temp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(map_temp,', 2.598833643460815e-06], ['deferred,', 2.598833643460815e-06], ['(!this->is_deferred())', 2.598833643460815e-06], ['Expression::make_allocation(mt->key_type(),', 2.598833643460815e-06], ['atemp', 2.598833643460815e-06], ['inserter->insert(atemp);', 2.598833643460815e-06], ['Expression::make_dereference(a,', 2.598833643460815e-06], ['Statement::make_assignment(a,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPDELETE,', 2.598833643460815e-06], ['lock.', 2.598833643460815e-06], ['!(*pa)->is_constant())', 2.598833643460815e-06], ['Builtin_call_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['this->flatten_append(gogo,', 2.598833643460815e-06], ['this->args()->front()->type();', 2.598833643460815e-06], ['((*pa)->is_nil_expression())', 2.598833643460815e-06], ['Expression::make_slice_value(at,', 2.598833643460815e-06], ['(!(*pa)->is_variable())', 2.598833643460815e-06], ['(*pa)->type()->interface_type()', 2.598833643460815e-06], ['((*pa)->type()->map_type()', 2.598833643460815e-06], ['(*pa)->type()->channel_type()', 2.598833643460815e-06], ['Builtin_call_expression::lower_make(Statement_inserter*', 2.598833643460815e-06], ['(!first_arg->is_type_expression())', 2.598833643460815e-06], ['first_arg->type();', 2.598833643460815e-06], ['(!type->in_heap())', 2.598833643460815e-06], ['int_context(Type::lookup_integer_type("int"),', 2.598833643460815e-06], ['this->report_error(_("length', 2.598833643460815e-06], ['len_arg->determine_type(&int_context);', 2.598833643460815e-06], ['(len_arg->type()->integer_type()', 2.598833643460815e-06], ['go_error_at(len_arg->location(),', 2.598833643460815e-06], ['(!this->check_int_value(len_arg,', 2.598833643460815e-06], ['&len_small))', 2.598833643460815e-06], ['(is_slice', 2.598833643460815e-06], ['cap_arg->determine_type(&int_context);', 2.598833643460815e-06], ['(cap_arg->type()->integer_type()', 2.598833643460815e-06], ['go_error_at(cap_arg->location(),', 2.598833643460815e-06], ['(!this->check_int_value(cap_arg,', 2.598833643460815e-06], ['&cap_small))', 2.598833643460815e-06], ['vcap)', 2.598833643460815e-06], ['this->report_error(_("len', 2.598833643460815e-06], ['cap"));', 2.598833643460815e-06], ['make"));', 2.598833643460815e-06], ['type_loc', 2.598833643460815e-06], ['first_arg->location();', 2.598833643460815e-06], ['(!len_arg->is_constant())', 2.598833643460815e-06], ['inserter->insert(len_temp);', 2.598833643460815e-06], ['(cap_arg', 2.598833643460815e-06], ['len_small;', 2.598833643460815e-06], ['(len_temp', 2.598833643460815e-06], ['len_arg->copy();', 2.598833643460815e-06], ['(!cap_arg->is_constant())', 2.598833643460815e-06], ['cap_temp', 2.598833643460815e-06], ['inserter->insert(cap_temp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(cap_temp,', 2.598833643460815e-06], ['Runtime::MAKESLICE;', 2.598833643460815e-06], ['(!len_small', 2.598833643460815e-06], ['!cap_small)', 2.598833643460815e-06], ['Runtime::MAKESLICE64;', 2.598833643460815e-06], ['cap_arg);', 2.598833643460815e-06], ['len_arg->copy(),', 2.598833643460815e-06], ['cap_arg->copy(),', 2.598833643460815e-06], ['Expression::make_slice_value(type,', 2.598833643460815e-06], ['(is_map)', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAKEMAP64,', 2.598833643460815e-06], ['Map_type::bucket_size)', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAKEMAP_SMALL,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAKEMAP,', 2.598833643460815e-06], ['(is_chan)', 2.598833643460815e-06], ['Runtime::MAKECHAN;', 2.598833643460815e-06], ['Runtime::MAKECHAN64;', 2.598833643460815e-06], ['len_arg);', 2.598833643460815e-06], ['order_evaluations.', 2.598833643460815e-06], ['left-hand-side;', 2.598833643460815e-06], ['append(a,', 2.598833643460815e-06], ['grow.', 2.598833643460815e-06], ['Builtin_call_expression::flatten_append(Gogo*', 2.598833643460815e-06], ['assign_lhs,', 2.598833643460815e-06], ['!args->empty());', 2.598833643460815e-06], ['go_assert(slice_type->is_slice_type());', 2.598833643460815e-06], ['append(s)', 2.598833643460815e-06], ['s.', 2.598833643460815e-06], ['uint_type', 2.598833643460815e-06], ['Implementing', 2.598833643460815e-06], ['inserter->insert(s1tmp);', 2.598833643460815e-06], ['len(s1tmp)', 2.598833643460815e-06], ['lenfn', 2.598833643460815e-06], ['gogo->lookup_global("len");', 2.598833643460815e-06], ['inserter->insert(l1tmp);', 2.598833643460815e-06], ['len2;', 2.598833643460815e-06], ['inserter->insert(s2tmp);', 2.598833643460815e-06], ['len(s2tmp)', 2.598833643460815e-06], ['call_args->push_back(Expression::make_temporary_reference(s2tmp,', 2.598833643460815e-06], ['inserter->insert(l2tmp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(l2tmp,', 2.598833643460815e-06], ['((*pa)->is_variable())', 2.598833643460815e-06], ['add->push_back(*pa);', 2.598833643460815e-06], ['inserter->insert(tmp);', 2.598833643460815e-06], ['add->push_back(Expression::make_temporary_reference(tmp,', 2.598833643460815e-06], ['len(add)', 2.598833643460815e-06], ['Expression::make_integer_ul(add->size(),', 2.598833643460815e-06], ['len2,', 2.598833643460815e-06], ['inserter->insert(ntmp);', 2.598833643460815e-06], ['uint(ntmp)', 2.598833643460815e-06], ['uint(cap(s1tmp))', 2.598833643460815e-06], ['growslice(type,', 2.598833643460815e-06], ['s1tmp,', 2.598833643460815e-06], ['ntmp)', 2.598833643460815e-06], ['s1tmp[:ntmp]', 2.598833643460815e-06], ['overflowed,', 2.598833643460815e-06], ['growslice', 2.598833643460815e-06], ['capfn', 2.598833643460815e-06], ['gogo->lookup_global("cap");', 2.598833643460815e-06], ['capref', 2.598833643460815e-06], ['Expression::make_func_reference(capfn,', 2.598833643460815e-06], ['Expression::make_call(capref,', 2.598833643460815e-06], ['c1tmp', 2.598833643460815e-06], ['inserter->insert(c1tmp);', 2.598833643460815e-06], ['Expression::make_type_descriptor(element_type,', 2.598833643460815e-06], ['slice_type->array_type()->get_value_pointer(gogo,', 2.598833643460815e-06], ['a5', 2.598833643460815e-06], ['Runtime::make_call(Runtime::GROWSLICE,', 2.598833643460815e-06], ['a4,', 2.598833643460815e-06], ['a5);', 2.598833643460815e-06], ['Expression::make_unsafe_cast(slice_type,', 2.598833643460815e-06], ['ref->array_index_expression()->set_needs_bounds_check(false);', 2.598833643460815e-06], ['Expression::make_conditional(cond,', 2.598833643460815e-06], ['Statement::make_assignment(assign_lhs,', 2.598833643460815e-06], ['then_block->add_statement(assign);', 2.598833643460815e-06], ['Statement::make_assignment(assign_lhs->copy(),', 2.598833643460815e-06], ['assign->set_omit_write_barrier();', 2.598833643460815e-06], ['else_block->add_statement(assign);', 2.598833643460815e-06], ['assign_lhs->copy(),', 2.598833643460815e-06], ['copy(s1tmp[l1tmp:],', 2.598833643460815e-06], ['s2tmp)', 2.598833643460815e-06], ['Expression::make_array_index(a1,', 2.598833643460815e-06], ['a1->array_index_expression()->set_needs_bounds_check(false);', 2.598833643460815e-06], ['Expression::make_temporary_reference(s2tmp,', 2.598833643460815e-06], ['copyfn', 2.598833643460815e-06], ['gogo->lookup_global("copy");', 2.598833643460815e-06], ['copyref', 2.598833643460815e-06], ['Expression::make_func_reference(copyfn,', 2.598833643460815e-06], ['call_args->push_back(a1);', 2.598833643460815e-06], ['call_args->push_back(a2);', 2.598833643460815e-06], ['Expression::make_call(copyref,', 2.598833643460815e-06], ['s1tmp[l1tmp+i]', 2.598833643460815e-06], ['add->begin();', 2.598833643460815e-06], ['add->end();', 2.598833643460815e-06], ['lhs->array_index_expression()->set_needs_bounds_check(false);', 2.598833643460815e-06], ['!gogo->assign_needs_write_barrier(lhs))', 2.598833643460815e-06], ['function->func_value();', 2.598833643460815e-06], ['gogo->assign_with_write_barrier(f,', 2.598833643460815e-06], ['*SMALL', 2.598833643460815e-06], ['Builtin_call_expression::check_int_value(Expression*', 2.598833643460815e-06], ['is_length,', 2.598833643460815e-06], ['*small)', 2.598833643460815e-06], ['(e->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(nc.to_unsigned_long(&v))', 2.598833643460815e-06], ['(e->type()->integer_type()', 2.598833643460815e-06], ['e->type()->integer_type()->bits();', 2.598833643460815e-06], ['reject', 2.598833643460815e-06], ['intbits;', 2.598833643460815e-06], ['imag', 2.598833643460815e-06], ['complex64', 2.598833643460815e-06], ['Builtin_call_expression::real_imag_type(Type*', 2.598833643460815e-06], ['"complex64")', 2.598833643460815e-06], ['Type::lookup_float_type("float32");', 2.598833643460815e-06], ['"complex128")', 2.598833643460815e-06], ['argments.', 2.598833643460815e-06], ['real_imag_type,', 2.598833643460815e-06], ['Builtin_call_expression::complex_type(Type*', 2.598833643460815e-06], ['"float32")', 2.598833643460815e-06], ['"float64")', 2.598833643460815e-06], ['Builtin_call_expression::one_arg()', 2.598833643460815e-06], ['Find_call_expression()', 2.598833643460815e-06], ['Find_call_expression::expression(Expression**', 2.598833643460815e-06], ['(!expr->is_constant()', 2.598833643460815e-06], ['expr->receive_expression()', 2.598833643460815e-06], ['len(s)', 2.598833643460815e-06], ['cap(s)', 2.598833643460815e-06], ['(non-constant)', 2.598833643460815e-06], ['calls."', 2.598833643460815e-06], ['Builtin_call_expression::array_len_is_constant(Expression*', 2.598833643460815e-06], ['go_assert(expr->type()->deref()->array_type()', 2.598833643460815e-06], ['!expr->type()->deref()->is_slice_type());', 2.598833643460815e-06], ['(expr->is_constant())', 2.598833643460815e-06], ['find_call;', 2.598833643460815e-06], ['&find_call);', 2.598833643460815e-06], ['!find_call.found();', 2.598833643460815e-06], ['constant:', 2.598833643460815e-06], ['unsafe.Sizeof,', 2.598833643460815e-06], ['unsafe.Offsetof,', 2.598833643460815e-06], ['unsafe.Alignof.', 2.598833643460815e-06], ['Builtin_call_expression::do_is_constant()', 2.598833643460815e-06], ['Builtin_call_expression::array_len_is_constant(arg);', 2.598833643460815e-06], ['this->one_arg()', 2.598833643460815e-06], ['arg->field_reference_expression()', 2.598833643460815e-06], ['args->front()->is_constant()', 2.598833643460815e-06], ['args->back()->is_constant();', 2.598833643460815e-06], ['Builtin_call_expression::do_numeric_constant_value(Numeric_constant*', 2.598833643460815e-06], ['(arg->string_constant_value(&sval))', 2.598833643460815e-06], ['nc->set_unsigned_long(Type::lookup_integer_type("int"),', 2.598833643460815e-06], ['sval.length());', 2.598833643460815e-06], ['arg_type->array_type()->length();', 2.598833643460815e-06], ['(!nc->set_type(Type::lookup_integer_type("int"),', 2.598833643460815e-06], ['BUILTIN_SIZEOF', 2.598833643460815e-06], ['(arg_type->is_error())', 2.598833643460815e-06], ['(arg_type->is_abstract())', 2.598833643460815e-06], ['arg_type->make_non_abstract_type();', 2.598833643460815e-06], ['BUILTIN_SIZEOF)', 2.598833643460815e-06], ['arg_type->backend_type_size(this->gogo_,', 2.598833643460815e-06], ['arg_type->backend_type_align(this->gogo_,', 2.598833643460815e-06], ['unsafe.Alignof(s.f)', 2.598833643460815e-06], ['arg_type->backend_type_field_align(this->gogo_,', 2.598833643460815e-06], ['struct_expr', 2.598833643460815e-06], ['farg->expr();', 2.598833643460815e-06], ['struct_expr->type();', 2.598833643460815e-06], ['(st->struct_type()', 2.598833643460815e-06], ['(st->named_type()', 2.598833643460815e-06], ['st->named_type()->convert(this->gogo_);', 2.598833643460815e-06], ['(st->is_error_type())', 2.598833643460815e-06], ['st->struct_type()->backend_field_offset(this->gogo_,', 2.598833643460815e-06], ['farg->field_index(),', 2.598833643460815e-06], ['&offset);', 2.598833643460815e-06], ['(farg->implicit()', 2.598833643460815e-06], ['struct_expr->field_reference_expression()', 2.598833643460815e-06], ['struct_expr->field_reference_expression();', 2.598833643460815e-06], ['total_offset);', 2.598833643460815e-06], ['BUILTIN_REAL', 2.598833643460815e-06], ['BUILTIN_IMAG)', 2.598833643460815e-06], ['argnc;', 2.598833643460815e-06], ['(!arg->numeric_constant_value(&argnc))', 2.598833643460815e-06], ['(!argnc.to_complex(&val))', 2.598833643460815e-06], ['Builtin_call_expression::real_imag_type(argnc.type());', 2.598833643460815e-06], ['BUILTIN_COMPLEX)', 2.598833643460815e-06], ['rnc;', 2.598833643460815e-06], ['(!args->front()->numeric_constant_value(&rnc))', 2.598833643460815e-06], ['(!args->back()->numeric_constant_value(&inc))', 2.598833643460815e-06], ['(rnc.type()', 2.598833643460815e-06], ['!rnc.type()->is_abstract()', 2.598833643460815e-06], ['inc.type()', 2.598833643460815e-06], ['!inc.type()->is_abstract()', 2.598833643460815e-06], ['!Type::are_identical(rnc.type(),', 2.598833643460815e-06], ['inc.type(),', 2.598833643460815e-06], ['(!rnc.to_float(&r))', 2.598833643460815e-06], ['(!inc.to_float(&i))', 2.598833643460815e-06], ['rnc.type();', 2.598833643460815e-06], ['inc.type();', 2.598833643460815e-06], ['mpfr_clear(i);', 2.598833643460815e-06], ['Builtin_call_expression::complex_type(arg_type);', 2.598833643460815e-06], ['nc->set_complex(type,', 2.598833643460815e-06], ['consistency', 2.598833643460815e-06], ['Builtin_call_expression::do_discarding_value()', 2.598833643460815e-06], ['Builtin_call_expression::do_type()', 2.598833643460815e-06], ['Type::make_pointer_type(args->front()->type());', 2.598833643460815e-06], ['(!ret->is_slice_type())', 2.598833643460815e-06], ['Builtin_call_expression::real_imag_type(t);', 2.598833643460815e-06], ['Builtin_call_expression::complex_type(t);', 2.598833643460815e-06], ['Builtin_call_expression::do_determine_type(const', 2.598833643460815e-06], ['this->fn()->determine_type_no_context();', 2.598833643460815e-06], ['is_print;', 2.598833643460815e-06], ['Builtin_call_expression::complex_type(context->type);', 2.598833643460815e-06], ['other,', 2.598833643460815e-06], ['Builtin_call_expression::real_imag_type(context->type);', 2.598833643460815e-06], ['(!t1->is_abstract())', 2.598833643460815e-06], ['(!t2->is_abstract())', 2.598833643460815e-06], ['(!this->is_varargs()', 2.598833643460815e-06], ['!args->empty()', 2.598833643460815e-06], ['args->front()->type()->is_slice_type())', 2.598833643460815e-06], ['args->front()->type()->array_type()->element_type();', 2.598833643460815e-06], ['subcontext;', 2.598833643460815e-06], ['arg_type;', 2.598833643460815e-06], ['(is_print)', 2.598833643460815e-06], ['nonabstract', 2.598833643460815e-06], ['uint64', 2.598833643460815e-06], ['nonnegative,', 2.598833643460815e-06], ['int64', 2.598833643460815e-06], ['(atype->is_abstract())', 2.598833643460815e-06], ['(atype->integer_type()', 2.598833643460815e-06], ['(nc.to_int(&val))', 2.598833643460815e-06], ['(want_type', 2.598833643460815e-06], ['(atype->float_type()', 2.598833643460815e-06], ['(atype->complex_type()', 2.598833643460815e-06], ['(atype->is_abstract_string_type())', 2.598833643460815e-06], ['(atype->is_abstract_boolean_type())', 2.598833643460815e-06], ['want_type;', 2.598833643460815e-06], ['(trailing_arg_types', 2.598833643460815e-06], ['trailing_arg_types;', 2.598833643460815e-06], ['Builtin_call_expression::check_one_arg()', 2.598833643460815e-06], ['args->front()->type()->is_error())', 2.598833643460815e-06], ['Builtin_call_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['this->one_arg()->type();', 2.598833643460815e-06], ['!arg_type->is_string_type()', 2.598833643460815e-06], ['arg_type->map_type()', 2.598833643460815e-06], ['BUILTIN_PRINT)', 2.598833643460815e-06], ['BUILTIN_PRINT', 2.598833643460815e-06], ['"print"', 2.598833643460815e-06], ['"println"));', 2.598833643460815e-06], ['(*p)->type();', 2.598833643460815e-06], ['type->is_string_type()', 2.598833643460815e-06], ['type->integer_type()', 2.598833643460815e-06], ['type->is_slice_type())', 2.598833643460815e-06], ['((*p)->is_type_expression())', 2.598833643460815e-06], ['anyhow,', 2.598833643460815e-06], ['this->report_error(_("unsupported', 2.598833643460815e-06], ['"builtin', 2.598833643460815e-06], ['(this->one_arg()->type()->channel_type()', 2.598833643460815e-06], ['(!this->one_arg()->type()->channel_type()->may_send())', 2.598833643460815e-06], ['this->check_one_arg();', 2.598833643460815e-06], ['!this->args()->empty()', 2.598833643460815e-06], ['!this->recover_arg_is_set_)', 2.598833643460815e-06], ['reference"));', 2.598833643460815e-06], ['(arg1_type->is_error()', 2.598833643460815e-06], ['arg2_type->is_error())', 2.598833643460815e-06], ['(arg1_type->is_slice_type())', 2.598833643460815e-06], ['arg1_type->array_type()->element_type();', 2.598833643460815e-06], ['this->report_error(_("left', 2.598833643460815e-06], ['(arg2_type->is_slice_type())', 2.598833643460815e-06], ['arg2_type->array_type()->element_type();', 2.598833643460815e-06], ['(!Type::are_identical(e1,', 2.598833643460815e-06], ['this->report_error(_("element', 2.598833643460815e-06], ['same"));', 2.598833643460815e-06], ['(e1->integer_type()', 2.598833643460815e-06], ['!e1->integer_type()->is_byte())', 2.598833643460815e-06], ['this->report_error(_("first', 2.598833643460815e-06], ['[]byte"));', 2.598833643460815e-06], ['this->report_error(_("second', 2.598833643460815e-06], ['(!slice_type->is_slice_type())', 2.598833643460815e-06], ['(slice_type->is_error_type())', 2.598833643460815e-06], ['(slice_type->is_nil_type())', 2.598833643460815e-06], ['(!element_type->in_heap())', 2.598833643460815e-06], ['(!args->back()->type()->is_slice_type()', 2.598833643460815e-06], ['!args->back()->type()->is_string_type())', 2.598833643460815e-06], ['non-slice/non-string");', 2.598833643460815e-06], ['(args->back()->type()->is_string_type()', 2.598833643460815e-06], ['element_type->integer_type()', 2.598833643460815e-06], ['element_type->integer_type()->is_byte())', 2.598833643460815e-06], ['Permit', 2.598833643460815e-06], ['check_type', 2.598833643460815e-06], ['(!Type::are_assignable(check_type,', 2.598833643460815e-06], ['(this->one_arg()->type()->complex_type()', 2.598833643460815e-06], ['args->front()->type()->is_error()', 2.598833643460815e-06], ['args->back()->is_error_expression()', 2.598833643460815e-06], ['args->back()->type()->is_error())', 2.598833643460815e-06], ['(!Type::are_identical(args->front()->type(),', 2.598833643460815e-06], ['(args->front()->type()->float_type()', 2.598833643460815e-06], ['"floating-point', 2.598833643460815e-06], ['Builtin_call_expression::do_copy()', 2.598833643460815e-06], ['Builtin_call_expression(this->gogo_,', 2.598833643460815e-06], ['this->fn()->copy(),', 2.598833643460815e-06], ['this->args()->copy()),', 2.598833643460815e-06], ['this->is_varargs(),', 2.598833643460815e-06], ['(this->varargs_are_lowered())', 2.598833643460815e-06], ['bce->set_varargs_are_lowered();', 2.598833643460815e-06], ['(this->is_deferred())', 2.598833643460815e-06], ['(this->is_concurrent())', 2.598833643460815e-06], ['Builtin_call_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(arg_type->array_type()', 2.598833643460815e-06], ['!arg_type->is_slice_type());', 2.598833643460815e-06], ['BUILTIN_LEN)', 2.598833643460815e-06], ['(arg_type->is_string_type())', 2.598833643460815e-06], ['Expression::make_string_info(arg,', 2.598833643460815e-06], ['arg_type->array_type()->get_length(gogo,', 2.598833643460815e-06], ['(arg_type->map_type()', 2.598833643460815e-06], ['arg_type->array_type()->get_capacity(gogo,', 2.598833643460815e-06], ['(arg_type->channel_type()', 2.598833643460815e-06], ['int_type->integer_type()->bits()', 2.598833643460815e-06], ['eoff', 2.598833643460815e-06], ['Expression::make_integer_ul(off,', 2.598833643460815e-06], ['eoff,', 2.598833643460815e-06], ['Expression::make_dereference(parg,', 2.598833643460815e-06], ['location)->get_backend(context);', 2.598833643460815e-06], ['is_ln', 2.598833643460815e-06], ['Runtime::make_call(Runtime::PRINTLOCK,', 2.598833643460815e-06], ['(call_args', 2.598833643460815e-06], ['call_args->begin();', 2.598833643460815e-06], ['call_args->end();', 2.598833643460815e-06], ['(is_ln', 2.598833643460815e-06], ['call_args->begin())', 2.598833643460815e-06], ['print_space', 2.598833643460815e-06], ['Runtime::make_call(Runtime::PRINTSP,', 2.598833643460815e-06], ['print_space,', 2.598833643460815e-06], ['Runtime::PRINTSTRING;', 2.598833643460815e-06], ['type->integer_type()->is_unsigned())', 2.598833643460815e-06], ['Runtime::PRINTUINT;', 2.598833643460815e-06], ['Runtime::PRINTINT;', 2.598833643460815e-06], ['Expression::make_cast(dtype,', 2.598833643460815e-06], ['Runtime::PRINTFLOAT;', 2.598833643460815e-06], ['Expression::make_cast(ctype,', 2.598833643460815e-06], ['Runtime::PRINTCOMPLEX;', 2.598833643460815e-06], ['(type->is_boolean_type())', 2.598833643460815e-06], ['Runtime::PRINTBOOL;', 2.598833643460815e-06], ['Runtime::PRINTPOINTER;', 2.598833643460815e-06], ['(type->interface_type()->is_empty())', 2.598833643460815e-06], ['Runtime::PRINTEFACE;', 2.598833643460815e-06], ['Runtime::PRINTIFACE;', 2.598833643460815e-06], ['Runtime::PRINTSLICE;', 2.598833643460815e-06], ['(is_ln)', 2.598833643460815e-06], ['print_nl', 2.598833643460815e-06], ['Runtime::make_call(Runtime::PRINTNL,', 2.598833643460815e-06], ['print_nl,', 2.598833643460815e-06], ['unlock', 2.598833643460815e-06], ['Runtime::make_call(Runtime::PRINTUNLOCK,', 2.598833643460815e-06], ['unlock,', 2.598833643460815e-06], ['print_stmts->get_backend(context);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::GOPANIC,', 2.598833643460815e-06], ['panic->get_backend(context);', 2.598833643460815e-06], ['specially,', 2.598833643460815e-06], ['test7', 2.598833643460815e-06], ['test/recover1.go.', 2.598833643460815e-06], ['Runtime::make_call((this->is_deferred()', 2.598833643460815e-06], ['Runtime::DEFERREDRECOVER', 2.598833643460815e-06], ['Runtime::GORECOVER),', 2.598833643460815e-06], ['Expression::make_conditional(arg,', 2.598833643460815e-06], ['cond->get_backend(context);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CLOSE,', 2.598833643460815e-06], ['close->get_backend(context);', 2.598833643460815e-06], ['(!this->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.get_int(&ival);', 2.598833643460815e-06], ['int_cst', 2.598833643460815e-06], ['int_cst->get_backend(context);', 2.598833643460815e-06], ['args->back();', 2.598833643460815e-06], ['arg1->type();', 2.598833643460815e-06], ['arg1_type->array_type();', 2.598833643460815e-06], ['go_assert(arg1->is_variable());', 2.598833643460815e-06], ['arg2->type();', 2.598833643460815e-06], ['go_assert(arg2->is_variable());', 2.598833643460815e-06], ['Runtime::make_call(Runtime::SLICESTRINGCOPY,', 2.598833643460815e-06], ['(et->has_pointer())', 2.598833643460815e-06], ['Runtime::make_call(Runtime::TYPEDSLICECOPY,', 2.598833643460815e-06], ['Expression::make_type_info(et,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::SLICECOPY,', 2.598833643460815e-06], ['sz);', 2.598833643460815e-06], ['Handled', 2.598833643460815e-06], ['Builtin_call_expression::flatten_append.', 2.598833643460815e-06], ['bcomplex', 2.598833643460815e-06], ['gogo->backend()->real_part_expression(bcomplex,', 2.598833643460815e-06], ['gogo->backend()->imag_part_expression(bcomplex,', 2.598833643460815e-06], ['breal', 2.598833643460815e-06], ['bimag', 2.598833643460815e-06], ['args->back()->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->complex_expression(breal,', 2.598833643460815e-06], ['Builtin_call_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['(!this->numeric_constant_value(&nc))', 2.598833643460815e-06], ['"value', 2.598833643460815e-06], ['(nc.is_int())', 2.598833643460815e-06], ['nc.get_int(&val);', 2.598833643460815e-06], ['(nc.is_float())', 2.598833643460815e-06], ['nc.get_float(&fval);', 2.598833643460815e-06], ['(nc.is_complex())', 2.598833643460815e-06], ['nc.get_complex(&cval);', 2.598833643460815e-06], ['ways.', 2.598833643460815e-06], ['consider.', 2.598833643460815e-06], ['scope,', 2.598833643460815e-06], ['pops', 2.598833643460815e-06], ['ignores', 2.598833643460815e-06], ['efficient,', 2.598833643460815e-06], ['unfortunately', 2.598833643460815e-06], ['reshuffle', 2.598833643460815e-06], ['retains', 2.598833643460815e-06], ['Call_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Type::traverse(fntype,', 2.598833643460815e-06], ['(Expression::traverse(&this->fn_,', 2.598833643460815e-06], ['(this->args_->traverse(traverse)', 2.598833643460815e-06], ['Call_expression::do_lower(Gogo*', 2.598833643460815e-06], ['(this->fn_->is_type_expression()', 2.598833643460815e-06], ['Expression::make_cast(this->fn_->type(),', 2.598833643460815e-06], ['this->args_->front(),', 2.598833643460815e-06], ['do_type', 2.598833643460815e-06], ['this->args_->front()->call_expression()->result_count();', 2.598833643460815e-06], ['((fntype->parameters()', 2.598833643460815e-06], ['(fntype->parameters()->size()', 2.598833643460815e-06], ['(fntype->is_varargs()', 2.598833643460815e-06], ['fntype->parameters()->size()', 2.598833643460815e-06], ['rc)))', 2.598833643460815e-06], ['fntype->is_builtin()))', 2.598833643460815e-06], ['this->args_->front()->call_expression();', 2.598833643460815e-06], ['call->set_is_multi_value_arg();', 2.598833643460815e-06], ['go_error_at(call->location(),', 2.598833643460815e-06], ['_("multiple-value', 2.598833643460815e-06], ['single-value', 2.598833643460815e-06], ['Expression::make_error(call->location());', 2.598833643460815e-06], ['args->push_back(Expression::make_call_result(call,', 2.598833643460815e-06], ['Builtin_call_expression(gogo,', 2.598833643460815e-06], ['this->args_,', 2.598833643460815e-06], ['(this->result_count()', 2.598833643460815e-06], ['"res%d",', 2.598833643460815e-06], ['sfl->push_back(Struct_field(Typed_identifier(buf,', 2.598833643460815e-06], ['Statement::make_temporary(st,', 2.598833643460815e-06], ['inserter->insert(this->call_temp_);', 2.598833643460815e-06], ['packaging', 2.598833643460815e-06], ['go_assert(parameters', 2.598833643460815e-06], ['!parameters->empty());', 2.598833643460815e-06], ['varargs_type', 2.598833643460815e-06], ['parameters->back().type();', 2.598833643460815e-06], ['this->lower_varargs(gogo,', 2.598833643460815e-06], ['parameters->size(),', 2.598833643460815e-06], ['SLICE_STORAGE_MAY_ESCAPE);', 2.598833643460815e-06], ['this->fn_->bound_method_expression();', 2.598833643460815e-06], ['methodfn', 2.598833643460815e-06], ['bme->first_argument();', 2.598833643460815e-06], ['(first_arg->type()->points_to()', 2.598833643460815e-06], ['!first_arg->type()->is_error())', 2.598833643460815e-06], ['static_cast<Unary_expression*>(first_arg);', 2.598833643460815e-06], ['ue->set_create_temp();', 2.598833643460815e-06], ['bme->first_argument_type();', 2.598833643460815e-06], ['(fatype', 2.598833643460815e-06], ['(fatype->points_to()', 2.598833643460815e-06], ['Type::make_pointer_type(fatype);', 2.598833643460815e-06], ['Expression::make_unsafe_cast(fatype,', 2.598833643460815e-06], ['new_args->push_back(first_arg);', 2.598833643460815e-06], ['new_args->push_back(*p);', 2.598833643460815e-06], ['this->fn_', 2.598833643460815e-06], ['Expression::make_func_reference(methodfn,', 2.598833643460815e-06], ['bme->location());', 2.598833643460815e-06], ['getcallerpc', 2.598833643460815e-06], ['getcallersp', 2.598833643460815e-06], ['unwind', 2.598833643460815e-06], ['efficient.', 2.598833643460815e-06], ['technique', 2.598833643460815e-06], ['fe->named_object()->package()', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(fe->named_object()->name());', 2.598833643460815e-06], ['"getcallerpc")', 2.598833643460815e-06], ['this->lower_to_builtin(&builtin_return_address,', 2.598833643460815e-06], ['&arg);', 2.598833643460815e-06], ['"getcallersp")', 2.598833643460815e-06], ['builtin_dwarf_cfa;', 2.598833643460815e-06], ['this->lower_to_builtin(&builtin_dwarf_cfa,', 2.598833643460815e-06], ['fe->named_object()->func_declaration_value()->has_imported_body())', 2.598833643460815e-06], ['gogo->add_imported_inlinable_function(fe->named_object());', 2.598833643460815e-06], ["occurs--it's", 2.598833643460815e-06], ['calling.', 2.598833643460815e-06], ['VARARGS_TYPE', 2.598833643460815e-06], ['PARAM_COUNT', 2.598833643460815e-06], ['calling;', 2.598833643460815e-06], ['Call_expression::lower_varargs(Gogo*', 2.598833643460815e-06], ['Slice_storage_escape_disp', 2.598833643460815e-06], ['escape_disp)', 2.598833643460815e-06], ['go_assert(varargs_type->is_slice_type());', 2.598833643460815e-06], ['arg_count', 2.598833643460815e-06], ['(arg_count', 2.598833643460815e-06], ['param_count', 2.598833643460815e-06], ['check_types.', 2.598833643460815e-06], ['old_args', 2.598833643460815e-06], ['(old_args', 2.598833643460815e-06], ['old_args->empty())', 2.598833643460815e-06], ['pa;', 2.598833643460815e-06], ['old_args->begin();', 2.598833643460815e-06], ['(static_cast<size_t>(i)', 2.598833643460815e-06], ['param_count)', 2.598833643460815e-06], ['issued_error', 2.598833643460815e-06], ['old_args->end())', 2.598833643460815e-06], ['old_args->end()', 2.598833643460815e-06], ['this->is_varargs_)', 2.598833643460815e-06], ['((*pa)->type()->is_slice_type())', 2.598833643460815e-06], ['non-slice"));', 2.598833643460815e-06], ['varargs_type->array_type()->element_type();', 2.598833643460815e-06], ['patype', 2.598833643460815e-06], ['paloc', 2.598833643460815e-06], ['(!this->check_argument_type(i,', 2.598833643460815e-06], ['patype,', 2.598833643460815e-06], ['paloc,', 2.598833643460815e-06], ['issued_error))', 2.598833643460815e-06], ['vals->push_back(*pa);', 2.598833643460815e-06], ['Expression::make_slice_composite_literal(varargs_type,', 2.598833643460815e-06], ['(escape_disp', 2.598833643460815e-06], ['SLICE_STORAGE_DOES_NOT_ESCAPE)', 2.598833643460815e-06], ['sce;', 2.598833643460815e-06], ['new_args->push_back(val);', 2.598833643460815e-06], ['(push_empty_arg)', 2.598833643460815e-06], ['new_args->push_back(Expression::make_nil(loc));', 2.598833643460815e-06], ['OLD_ARGS', 2.598833643460815e-06], ['Call_expression', 2.598833643460815e-06], ['Builtin_call_expression', 2.598833643460815e-06], ['this->varargs_are_lowered_', 2.598833643460815e-06], ['Call_expression::lower_to_builtin(Named_object**', 2.598833643460815e-06], ['pno,', 2.598833643460815e-06], ['(*pno', 2.598833643460815e-06], ['*pno', 2.598833643460815e-06], ['Gogo::declare_builtin_rf_address(name,', 2.598833643460815e-06], ['Expression::make_func_reference(*pno,', 2.598833643460815e-06], ['Expression::make_integer_ul(*arg,', 2.598833643460815e-06], ['args->push_back(a);', 2.598833643460815e-06], ['Call_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['(this->is_flattened_)', 2.598833643460815e-06], ['this->is_flattened_', 2.598833643460815e-06], ['!this->args_->empty()', 2.598833643460815e-06], ['fntype->parameters()', 2.598833643460815e-06], ['!fntype->parameters()->empty())', 2.598833643460815e-06], ['this->fn_->interface_field_reference_expression()', 2.598833643460815e-06], ['fntype->parameters()->begin();', 2.598833643460815e-06], ['fntype->parameters()->end());', 2.598833643460815e-06], ['(Type::are_identical(pp->type(),', 2.598833643460815e-06], ['*pa;', 2.598833643460815e-06], ['(!arg->is_variable())', 2.598833643460815e-06], ['args->push_back(arg);', 2.598833643460815e-06], ['Call_expression::get_function_type()', 2.598833643460815e-06], ['this->fn_->type()->function_type();', 2.598833643460815e-06], ['Call_expression::result_count()', 2.598833643460815e-06], ['(fntype->results()', 2.598833643460815e-06], ['fntype->results()->size();', 2.598833643460815e-06], ['Call_expression::results()', 2.598833643460815e-06], ['this->call_temp_;', 2.598833643460815e-06], ['Call_expression::set_expected_result_count(size_t', 2.598833643460815e-06], ['go_assert(this->expected_result_count_', 2.598833643460815e-06], ['Call_expression::is_recover_call()', 2.598833643460815e-06], ['this->do_is_recover_call();', 2.598833643460815e-06], ['Call_expression::set_recover_arg(Expression*', 2.598833643460815e-06], ['this->do_set_recover_arg(arg);', 2.598833643460815e-06], ['Virtual', 2.598833643460815e-06], ['Call_expression::do_is_recover_call()', 2.598833643460815e-06], ['Call_expression::do_set_recover_arg(Expression*)', 2.598833643460815e-06], ['Call_expression::issue_error()', 2.598833643460815e-06], ['(this->issued_error_)', 2.598833643460815e-06], ['this->issued_error_', 2.598833643460815e-06], ['Call_expression::is_erroneous_call()', 2.598833643460815e-06], ['this->fn()->is_error_expression())', 2.598833643460815e-06], ['((*pa)->type()->is_error_type()', 2.598833643460815e-06], ['(*pa)->is_error_expression())', 2.598833643460815e-06], ['Call_expression::do_type()', 2.598833643460815e-06], ['results->begin()->type();', 2.598833643460815e-06], ['Type::make_call_multiple_result_type(this);', 2.598833643460815e-06], ['Call_expression::do_determine_type(const', 2.598833643460815e-06], ['this->fn_->determine_type_no_context();', 2.598833643460815e-06], ['subcontext(rtype,', 2.598833643460815e-06], ['subcontext(pt->type(),', 2.598833643460815e-06], ['++pt;', 2.598833643460815e-06], ['(*pa)->determine_type_no_context();', 2.598833643460815e-06], ['ahead,', 2.598833643460815e-06], ['Call_expression::determining_types()', 2.598833643460815e-06], ['(this->types_are_determined_)', 2.598833643460815e-06], ['this->types_are_determined_', 2.598833643460815e-06], ['I.', 2.598833643460815e-06], ['Call_expression::check_argument_type(int', 2.598833643460815e-06], ['parameter_type,', 2.598833643460815e-06], ['argument_location,', 2.598833643460815e-06], ['(!Type::are_assignable(parameter_type,', 2.598833643460815e-06], ['Call_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(this->expected_result_count_', 2.598833643460815e-06], ['this->result_count())', 2.598833643460815e-06], ['(this->issue_error())', 2.598833643460815e-06], ['this->report_error(_("function', 2.598833643460815e-06], ['mismatch"));', 2.598833643460815e-06], ['fntype->is_method();', 2.598833643460815e-06], ['go_assert(this->args_', 2.598833643460815e-06], ['!this->args_->empty());', 2.598833643460815e-06], ['this->args_->front();', 2.598833643460815e-06], ['(!Type::are_assignable(rtype->deref(),', 2.598833643460815e-06], ['first_arg->type()->deref(),', 2.598833643460815e-06], ['receiver"));', 2.598833643460815e-06], ['lower_varargs()', 2.598833643460815e-06], ['!this->varargs_are_lowered_)', 2.598833643460815e-06], ['(!fntype->is_varargs())', 2.598833643460815e-06], ['non-variadic', 2.598833643460815e-06], ['!parameters->empty())', 2.598833643460815e-06], ['(!is_method', 2.598833643460815e-06], ['(this->args_->size()', 2.598833643460815e-06], ['this->args_->front()->call_expression()->result_count()', 2.598833643460815e-06], ['F(G())', 2.598833643460815e-06], ['mismatch.', 2.598833643460815e-06], ['(this->args_->front()->call_expression()->result_count()', 2.598833643460815e-06], ['parameters->size())', 2.598833643460815e-06], ['++pt,', 2.598833643460815e-06], ['this->check_argument_type(i', 2.598833643460815e-06], ['pt->type(),', 2.598833643460815e-06], ['(*pa)->location(),', 2.598833643460815e-06], ['Call_expression::do_copy()', 2.598833643460815e-06], ['Expression::make_call(this->fn_->copy(),', 2.598833643460815e-06], ['this->args_->copy()),', 2.598833643460815e-06], ['call->set_is_deferred();', 2.598833643460815e-06], ['call->set_is_concurrent();', 2.598833643460815e-06], ['inevitably', 2.598833643460815e-06], ['last.', 2.598833643460815e-06], ['Call_expression::do_must_eval_in_order()', 2.598833643460815e-06], ['this->result_count()', 2.598833643460815e-06], ['Call_expression::interface_method_function(', 2.598833643460815e-06], ['interface_method,', 2.598833643460815e-06], ['first_arg_ptr,', 2.598833643460815e-06], ['interface_method->get_underlying_object();', 2.598833643460815e-06], ['*first_arg_ptr', 2.598833643460815e-06], ['interface_method->get_function();', 2.598833643460815e-06], ['Call_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(this->call_', 2.598833643460815e-06], ['(this->fn_->is_error_expression())', 2.598833643460815e-06], ['this->fn_->interface_field_reference_expression();', 2.598833643460815e-06], ['has_closure', 2.598833643460815e-06], ['func->closure()', 2.598833643460815e-06], ['has_closure_arg;', 2.598833643460815e-06], ['(is_interface_method)', 2.598833643460815e-06], ['fn_args;', 2.598833643460815e-06], ['this->args_->empty())', 2.598833643460815e-06], ['fntype->parameters()->empty())', 2.598833643460815e-06], ['go_assert(!is_interface_method', 2.598833643460815e-06], ['fntype->is_method()', 2.598833643460815e-06], ['this->args_->front()->get_backend(context);', 2.598833643460815e-06], ['fn_args.resize(nargs);', 2.598833643460815e-06], ['(*pe)->get_backend(context);', 2.598833643460815e-06], ['++pp,', 2.598833643460815e-06], ['arg->get_backend(context);', 2.598833643460815e-06], ['func->named_object();', 2.598833643460815e-06], ['Expression::make_func_code_reference(no,', 2.598833643460815e-06], ['func->closure();', 2.598833643460815e-06], ['(!is_interface_method)', 2.598833643460815e-06], ['pfntype', 2.598833643460815e-06], ['Type::make_pointer_type(Type::make_void_type()));', 2.598833643460815e-06], ['Expression::make_unsafe_cast(pfntype,', 2.598833643460815e-06], ['Expression::make_dereference(fn,', 2.598833643460815e-06], ['first_arg;', 2.598833643460815e-06], ['this->interface_method_function(interface_method,', 2.598833643460815e-06], ['&first_arg,', 2.598833643460815e-06], ['first_arg->get_backend(context);', 2.598833643460815e-06], ['(has_closure_arg)', 2.598833643460815e-06], ['closure->get_backend(context);', 2.598833643460815e-06], ['go_assert(closure', 2.598833643460815e-06], ['fn->get_backend(context);', 2.598833643460815e-06], ['!is_interface_method)', 2.598833643460815e-06], ['bft', 2.598833643460815e-06], ['fntype->get_backend_fntype(gogo);', 2.598833643460815e-06], ['gogo->backend()->convert_expression(bft,', 2.598833643460815e-06], ['(context->function())', 2.598833643460815e-06], ['gogo->backend()->call_expression(bfunction,', 2.598833643460815e-06], ['bassn', 2.598833643460815e-06], ['gogo->backend()->compound_expression(bassn,', 2.598833643460815e-06], ['this->call_,', 2.598833643460815e-06], ['expressin.', 2.598833643460815e-06], ['Call_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['this->fn_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['(args_', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->args_);', 2.598833643460815e-06], ['Expression::make_call(Expression*', 2.598833643460815e-06], ['Call_result_expression.', 2.598833643460815e-06], ['Call_result_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(traverse->remember_expression(this->call_))', 2.598833643460815e-06], ['Expression::traverse(&this->call_,', 2.598833643460815e-06], ['Call_result_expression::do_type()', 2.598833643460815e-06], ['THIS->CALL_', 2.598833643460815e-06], ['Call_expression::do_must_eval_in_order', 2.598833643460815e-06], ['(!ce->fn()->type()->is_error())', 2.598833643460815e-06], ['results->size()', 2.598833643460815e-06], ['pr->type();', 2.598833643460815e-06], ['do_type.', 2.598833643460815e-06], ['Call_result_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['Call_result_expression::do_determine_type(const', 2.598833643460815e-06], ['Call_result_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(this->call_->is_error_expression());', 2.598833643460815e-06], ['ce->results();', 2.598833643460815e-06], ['(ts', 2.598833643460815e-06], ['Call_result_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['(struct)', 2.598833643460815e-06], ['"@(";', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->call_);', 2.598833643460815e-06], ['Expression::make_call_result(Call_expression*', 2.598833643460815e-06], ['Call_result_expression(call,', 2.598833643460815e-06], ['Index_expression.', 2.598833643460815e-06], ['Index_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->left_,', 2.598833643460815e-06], ['Expression::traverse(&this->start_,', 2.598833643460815e-06], ['Expression::traverse(&this->end_,', 2.598833643460815e-06], ['TRAVERSE_EXIT))', 2.598833643460815e-06], ['Index_expression::do_lower(Gogo*,', 2.598833643460815e-06], ['Expression::make_array_index(left,', 2.598833643460815e-06], ['type->points_to()->array_type()', 2.598833643460815e-06], ['!type->points_to()->is_slice_type())', 2.598833643460815e-06], ['Expression::make_dereference(left,', 2.598833643460815e-06], ['dereferenced.', 2.598833643460815e-06], ['not--the', 2.598833643460815e-06], ['deref->issue_nil_check();', 2.598833643460815e-06], ['Expression::make_array_index(deref,', 2.598833643460815e-06], ['Expression::make_string_index(left,', 2.598833643460815e-06], ['map");', 2.598833643460815e-06], ['Expression::make_map_index(left,', 2.598833643460815e-06], ['(expr[expr:expr:expr],', 2.598833643460815e-06], ['expr[expr:expr]', 2.598833643460815e-06], ['expr[expr])', 2.598833643460815e-06], ['Index_expression::dump_index_expression(Ast_dump_context*', 2.598833643460815e-06], ['cap)', 2.598833643460815e-06], ['expr->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['start->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['end->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['cap->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['Index_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_index(Expression*', 2.598833643460815e-06], ['Index_expression(left,', 2.598833643460815e-06], ['Array_index_expression.', 2.598833643460815e-06], ['Array_index_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->array_,', 2.598833643460815e-06], ['(Expression::traverse(&this->cap_,', 2.598833643460815e-06], ['Array_index_expression::do_type()', 2.598833643460815e-06], ['type->element_type();', 2.598833643460815e-06], ['this->array_->type()->deref();', 2.598833643460815e-06], ['Type::make_array_type(type->element_type(),', 2.598833643460815e-06], ['Array_index_expression::do_determine_type(const', 2.598833643460815e-06], ['this->array_->determine_type_no_context();', 2.598833643460815e-06], ['(this->cap_->is_constant())', 2.598833643460815e-06], ['this->cap_->determine_type(&index_context);', 2.598833643460815e-06], ['this->cap_->determine_type_no_context();', 2.598833643460815e-06], ['Array_index_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['this->cap_->type()->integer_type()', 2.598833643460815e-06], ['!this->cap_->type()->is_error()', 2.598833643460815e-06], ['!this->cap_->is_nil_expression()', 2.598833643460815e-06], ['!this->cap_->is_error_expression()', 2.598833643460815e-06], ['(!this->cap_->numeric_constant_value(&nc)', 2.598833643460815e-06], ['lvalnc;', 2.598833643460815e-06], ['lval;', 2.598833643460815e-06], ['lval_valid', 2.598833643460815e-06], ['array_type->length()->numeric_constant_value(&lvalnc)', 2.598833643460815e-06], ['lvalnc.to_int(&lval));', 2.598833643460815e-06], ['mpz_sizeinbase(ival,', 2.598833643460815e-06], ['mpz_sizeinbase(eval,', 2.598833643460815e-06], ['this->cap_->numeric_constant_value(&cnc)', 2.598833643460815e-06], ['cnc.to_int(&cval))', 2.598833643460815e-06], ['(mpz_sgn(cval)', 2.598833643460815e-06], ['mpz_sizeinbase(cval,', 2.598833643460815e-06], ['mpz_cmp(cval,', 2.598833643460815e-06], ['start");', 2.598833643460815e-06], ['(eval_valid', 2.598833643460815e-06], ['length");', 2.598833643460815e-06], ['mpz_clear(cval);', 2.598833643460815e-06], ['(eval_valid)', 2.598833643460815e-06], ['(lval_valid)', 2.598833643460815e-06], ['mpz_clear(lval);', 2.598833643460815e-06], ['!array_type->is_slice_type())', 2.598833643460815e-06], ['(!this->array_->is_addressable())', 2.598833643460815e-06], ['unaddressable', 2.598833643460815e-06], ['this->array_->address_taken(false);', 2.598833643460815e-06], ['assigment,', 2.598833643460815e-06], ['Array_index_expression::do_must_eval_subexpressions_in_order(', 2.598833643460815e-06], ['*skip', 2.598833643460815e-06], ['this->array_->type()->is_slice_type()', 2.598833643460815e-06], ['indexes.', 2.598833643460815e-06], ['Array_index_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['this->array_;', 2.598833643460815e-06], ['(array->is_error_expression()', 2.598833643460815e-06], ['array->type()->is_error_type()', 2.598833643460815e-06], ['end->type()->is_error_type()))', 2.598833643460815e-06], ['(cap->is_error_expression()', 2.598833643460815e-06], ['cap->type()->is_error_type())))', 2.598833643460815e-06], ['(array->type()->is_slice_type()', 2.598833643460815e-06], ['!array->is_variable())', 2.598833643460815e-06], ['this->array_', 2.598833643460815e-06], ['(!start->is_variable())', 2.598833643460815e-06], ['!end->is_nil_expression()', 2.598833643460815e-06], ['!end->is_variable())', 2.598833643460815e-06], ['!cap->is_variable())', 2.598833643460815e-06], ['this->cap_', 2.598833643460815e-06], ['Array_index_expression::do_is_addressable()', 2.598833643460815e-06], ['(this->array_->type()->is_slice_type())', 2.598833643460815e-06], ['this->array_->is_addressable();', 2.598833643460815e-06], ['Array_index_expression::do_address_taken(bool', 2.598833643460815e-06], ['&x[0],', 2.598833643460815e-06], ["x's", 2.598833643460815e-06], ['(!this->array_->type()->is_slice_type())', 2.598833643460815e-06], ['this->array_->address_taken(escapes);', 2.598833643460815e-06], ['Array_index_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(!array_type->is_slice_type()', 2.598833643460815e-06], ['this->array_->is_variable());', 2.598833643460815e-06], ['fixed-length', 2.598833643460815e-06], ['disallows', 2.598833643460815e-06], ['this->end_->is_nil_expression())', 2.598833643460815e-06], ['array_type->get_length(gogo,', 2.598833643460815e-06], ['len->get_backend(context);', 2.598833643460815e-06], ['array_type->get_capacity(gogo,', 2.598833643460815e-06], ['cap->get_backend(context);', 2.598833643460815e-06], ['capacity;', 2.598833643460815e-06], ['cap_arg;', 2.598833643460815e-06], ['this->start_->get_backend(context);', 2.598833643460815e-06], ['RUNTIME_ERROR_ARRAY_INDEX_OUT_OF_BOUNDS', 2.598833643460815e-06], ['RUNTIME_ERROR_ARRAY_SLICE_OUT_OF_BOUNDS)', 2.598833643460815e-06], ['RUNTIME_ERROR_SLICE_INDEX_OUT_OF_BOUNDS', 2.598833643460815e-06], ['RUNTIME_ERROR_SLICE_SLICE_OUT_OF_BOUNDS));', 2.598833643460815e-06], ['gogo->backend()->binary_expression((this->end_', 2.598833643460815e-06], ['OPERATOR_GE', 2.598833643460815e-06], ['OPERATOR_GT),', 2.598833643460815e-06], ['capacity),', 2.598833643460815e-06], ['indexing.', 2.598833643460815e-06], ['l-value,', 2.598833643460815e-06], ['this->array_->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->array_index_expression(array,', 2.598833643460815e-06], ['ele_type', 2.598833643460815e-06], ['this->array_->type()->array_type()->element_type();', 2.598833643460815e-06], ['ele_btype', 2.598833643460815e-06], ['ele_type->get_backend(gogo);', 2.598833643460815e-06], ['gogo->backend()->indirect_expression(ele_btype,', 2.598833643460815e-06], ['Expression::check_bounds(this->cap_,', 2.598833643460815e-06], ['cap_too_small', 2.598833643460815e-06], ['cap_too_large', 2.598833643460815e-06], ['bad_cap', 2.598833643460815e-06], ['cap_too_small,', 2.598833643460815e-06], ['cap_too_large,', 2.598833643460815e-06], ['bad_cap,', 2.598833643460815e-06], ['this->end_->get_backend(context);', 2.598833643460815e-06], ['end_too_small', 2.598833643460815e-06], ['end_too_large', 2.598833643460815e-06], ['bad_end', 2.598833643460815e-06], ['end_too_small,', 2.598833643460815e-06], ['end_too_large,', 2.598833643460815e-06], ['bad_end,', 2.598833643460815e-06], ['result_length', 2.598833643460815e-06], ['result_capacity', 2.598833643460815e-06], ['val.', 2.598833643460815e-06], ['result_capacity,', 2.598833643460815e-06], ['gogo->backend()->pointer_offset_expression(val,', 2.598833643460815e-06], ['struct_btype', 2.598833643460815e-06], ['init.push_back(val);', 2.598833643460815e-06], ['init.push_back(result_length);', 2.598833643460815e-06], ['init.push_back(result_capacity);', 2.598833643460815e-06], ['gogo->backend()->constructor_expression(struct_btype,', 2.598833643460815e-06], ['struct_btype,', 2.598833643460815e-06], ['Array_index_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['CAP', 2.598833643460815e-06], ['Expression::make_array_index(Expression*', 2.598833643460815e-06], ['Array_index_expression(array,', 2.598833643460815e-06], ['String_index_expression.', 2.598833643460815e-06], ['String_index_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->string_,', 2.598833643460815e-06], ['String_index_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['(string->is_error_expression()', 2.598833643460815e-06], ['string->type()->is_error_type()', 2.598833643460815e-06], ['end->type()->is_error_type())))', 2.598833643460815e-06], ['(!this->string_->is_variable())', 2.598833643460815e-06], ['this->string_', 2.598833643460815e-06], ['(!this->start_->is_variable())', 2.598833643460815e-06], ['!this->end_->is_variable())', 2.598833643460815e-06], ['String_index_expression::do_type()', 2.598833643460815e-06], ['this->string_->type();', 2.598833643460815e-06], ['String_index_expression::do_determine_type(const', 2.598833643460815e-06], ['this->string_->determine_type_no_context();', 2.598833643460815e-06], ['String_index_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['sval_valid', 2.598833643460815e-06], ['this->string_->string_constant_value(&sval);', 2.598833643460815e-06], ['mpz_cmp_ui(eval,', 2.598833643460815e-06], ['String_index_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(this->string_->type()->points_to()', 2.598833643460815e-06], ['Expression::make_dereference(this->string_,', 2.598833643460815e-06], ['RUNTIME_ERROR_STRING_INDEX_OUT_OF_BOUNDS', 2.598833643460815e-06], ['RUNTIME_ERROR_STRING_SLICE_OUT_OF_BOUNDS);', 2.598833643460815e-06], ['Type_conversion_expression', 2.598833643460815e-06], ['Expression::make_binary(OPERATOR_GE,', 2.598833643460815e-06], ['STRING_INFO_DATA,', 2.598833643460815e-06], ['bstart', 2.598833643460815e-06], ['start->get_backend(context);', 2.598833643460815e-06], ['bytes->get_backend(context);', 2.598833643460815e-06], ['bstart,', 2.598833643460815e-06], ['gogo->backend()->indirect_expression(ubtype,', 2.598833643460815e-06], ['byte_btype', 2.598833643460815e-06], ['bytes->type()->points_to()->get_backend(gogo);', 2.598833643460815e-06], ['byte_btype,', 2.598833643460815e-06], ['Expression::make_integer_sl(-1,', 2.598833643460815e-06], ['bounds_check', 2.598833643460815e-06], ['bounds_check,', 2.598833643460815e-06], ['strslice', 2.598833643460815e-06], ['Runtime::make_call(Runtime::STRING_SLICE,', 2.598833643460815e-06], ['string_arg,', 2.598833643460815e-06], ['end);', 2.598833643460815e-06], ['bstrslice', 2.598833643460815e-06], ['strslice->get_backend(context);', 2.598833643460815e-06], ['str_btype', 2.598833643460815e-06], ['strslice->type()->get_backend(gogo);', 2.598833643460815e-06], ['str_btype,', 2.598833643460815e-06], ['bstrslice,', 2.598833643460815e-06], ['String_index_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_string_index(Expression*', 2.598833643460815e-06], ['String_index_expression(string,', 2.598833643460815e-06], ['Map_index.', 2.598833643460815e-06], ['Map_index_expression::get_map_type()', 2.598833643460815e-06], ['this->map_->type()->map_type();', 2.598833643460815e-06], ['mt;', 2.598833643460815e-06], ['Map_index_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->map_,', 2.598833643460815e-06], ['Expression::traverse(&this->index_,', 2.598833643460815e-06], ['recomputation.', 2.598833643460815e-06], ['Map_index_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['(this->index()->is_error_expression()', 2.598833643460815e-06], ['this->index()->type()->is_error_type()', 2.598833643460815e-06], ['mt->is_error_type())', 2.598833643460815e-06], ['(!Type::are_identical(mt->key_type(),', 2.598833643460815e-06], ['(this->index_->type()->interface_type()', 2.598833643460815e-06], ['!this->index_->is_variable())', 2.598833643460815e-06], ['(!this->index_->is_variable())', 2.598833643460815e-06], ['this->get_value_pointer(gogo);', 2.598833643460815e-06], ['(this->value_pointer_->is_error_expression()', 2.598833643460815e-06], ['this->value_pointer_->type()->is_error_type())', 2.598833643460815e-06], ['(!this->value_pointer_->is_variable())', 2.598833643460815e-06], ['this->value_pointer_,', 2.598833643460815e-06], ['Map_index_expression::do_type()', 2.598833643460815e-06], ['Map_index_expression::do_determine_type(const', 2.598833643460815e-06], ['this->map_->determine_type_no_context();', 2.598833643460815e-06], ['subcontext(key_type,', 2.598833643460815e-06], ['this->index_->determine_type(&subcontext);', 2.598833643460815e-06], ['Map_index_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!Type::are_assignable(mt->key_type(),', 2.598833643460815e-06], ['index"));', 2.598833643460815e-06], ['Map_index_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(this->value_pointer_', 2.598833643460815e-06], ['this->value_pointer_->is_variable());', 2.598833643460815e-06], ['Expression::make_dereference(this->value_pointer_,', 2.598833643460815e-06], ['val->get_backend(context);', 2.598833643460815e-06], ['Map_index_expression::get_value_pointer(Gogo*', 2.598833643460815e-06], ['map_ref', 2.598833643460815e-06], ['this->map_;', 2.598833643460815e-06], ['index_ptr', 2.598833643460815e-06], ['type->fat_zero_value(gogo);', 2.598833643460815e-06], ['(zero', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPACCESS1,', 2.598833643460815e-06], ['index_ptr);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPACCESS1_FAT,', 2.598833643460815e-06], ['index_ptr,', 2.598833643460815e-06], ['type->val_type();', 2.598833643460815e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(val_type),', 2.598833643460815e-06], ['this->value_pointer_;', 2.598833643460815e-06], ['Map_index_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['this->map_,', 2.598833643460815e-06], ['Expression::make_map_index(Expression*', 2.598833643460815e-06], ['Map_index_expression(map,', 2.598833643460815e-06], ['Field_reference_expression.', 2.598833643460815e-06], ['lower,', 2.598833643460815e-06], ['go:"track"', 2.598833643460815e-06], ['Field_reference_expression::do_lower(Gogo*', 2.598833643460815e-06], ['this->expr_->type()->struct_type();', 2.598833643460815e-06], ['(struct_type', 2.598833643460815e-06], ['struct_type->field(this->field_index_);', 2.598833643460815e-06], ['(!field->has_tag())', 2.598833643460815e-06], ['(field->tag().find("go:\\"track\\"")', 2.598833643460815e-06], ['References', 2.598833643460815e-06], ['function->func_value()->is_type_specific_function())', 2.598833643460815e-06], ['__go_fieldtrack', 2.598833643460815e-06], ['(this->called_fieldtrack_)', 2.598833643460815e-06], ['this->called_fieldtrack_', 2.598833643460815e-06], ['"fieldtrack', 2.598833643460815e-06], ['\\"";', 2.598833643460815e-06], ['this->expr_->type()->unalias()->named_type();', 2.598833643460815e-06], ['s.append(gogo->pkgpath());', 2.598833643460815e-06], ['s.append(nt->named_object()->package()->pkgpath());', 2.598833643460815e-06], ['s.append(Gogo::unpack_hidden_name(nt->name()));', 2.598833643460815e-06], ['s.append(field->field_name());', 2.598833643460815e-06], ['s.push_back(\'"\');', 2.598833643460815e-06], ['bytes;', 2.598833643460815e-06], ['collects', 2.598833643460815e-06], ['[...]byte.', 2.598833643460815e-06], ['length_expr', 2.598833643460815e-06], ['Expression::make_integer_ul(s.length(),', 2.598833643460815e-06], ['length_expr);', 2.598833643460815e-06], ['bytes->push_back(Expression::make_integer_ul(c,', 2.598833643460815e-06], ['Expression::make_composite_literal(array_type,', 2.598833643460815e-06], ['"fieldtrack.%d",', 2.598833643460815e-06], ['gogo->add_variable(buf,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::FIELDTRACK,', 2.598833643460815e-06], ['strings,', 2.598833643460815e-06], ['function->func_value()->set_in_unique_section();', 2.598833643460815e-06], ['var->set_in_unique_section();', 2.598833643460815e-06], ['Field_reference_expression::do_type()', 2.598833643460815e-06], ['struct_type->field(this->field_index_)->type();', 2.598833643460815e-06], ['Field_reference_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['go_assert(struct_type->field(this->field_index_)', 2.598833643460815e-06], ['Field_reference_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['bstruct', 2.598833643460815e-06], ['context->gogo()->backend()->struct_field_expression(bstruct,', 2.598833643460815e-06], ['this->field_index_,', 2.598833643460815e-06], ['Field_reference_expression::do_dump_expression(', 2.598833643460815e-06], ['this->field_index_;', 2.598833643460815e-06], ['Expression::make_field_reference(Expression*', 2.598833643460815e-06], ['Field_reference_expression(expr,', 2.598833643460815e-06], ['Interface_field_reference_expression.', 2.598833643460815e-06], ['Interface_field_reference_expression::get_function()', 2.598833643460815e-06], ['(ref->type()->points_to()', 2.598833643460815e-06], ['Expression::make_interface_info(ref,', 2.598833643460815e-06], ['mtable_type', 2.598833643460815e-06], ['mtable->type()->points_to()->struct_type();', 2.598833643460815e-06], ['mtable_type->find_local_field(name,', 2.598833643460815e-06], ['go_assert(field', 2.598833643460815e-06], ['Expression::make_field_reference(mtable,', 2.598833643460815e-06], ['Interface_field_reference_expression::get_underlying_object()', 2.598833643460815e-06], ['Expression::make_interface_info(expr,', 2.598833643460815e-06], ['Interface_field_reference_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Interface_field_reference_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['Interface_field_reference_expression::do_type()', 2.598833643460815e-06], ['expr_type->points_to();', 2.598833643460815e-06], ['expr_type->interface_type();', 2.598833643460815e-06], ['Interface_field_reference_expression::do_determine_type(const', 2.598833643460815e-06], ['Interface_field_reference_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['interface",', 2.598833643460815e-06], ['Gogo::message_name(this->name_).c_str());', 2.598833643460815e-06], ['Interface_field_reference_expression::Interface_method_thunks', 2.598833643460815e-06], ['Interface_field_reference_expression::interface_method_thunks;', 2.598833643460815e-06], ['Interface_field_reference_expression::create_thunk(Gogo*', 2.598833643460815e-06], ['Method_thunks*>', 2.598833643460815e-06], ['val(type,', 2.598833643460815e-06], ['std::pair<Interface_method_thunks::iterator,', 2.598833643460815e-06], ['Interface_field_reference_expression::interface_method_thunks.insert(val);', 2.598833643460815e-06], ['Method_thunks();', 2.598833643460815e-06], ['(Method_thunks::const_iterator', 2.598833643460815e-06], ['ins.first->second->begin();', 2.598833643460815e-06], ['ins.first->second->end();', 2.598833643460815e-06], ['(p->first', 2.598833643460815e-06], ['method_id', 2.598833643460815e-06], ['type->find_method(name);', 2.598833643460815e-06], ['(method_id', 2.598833643460815e-06], ['method_id->type()->function_type();', 2.598833643460815e-06], ['*ifre', 2.598833643460815e-06], ['Expression::make_interface_field_reference(arg,', 2.598833643460815e-06], ['Expression::make_call(ifre,', 2.598833643460815e-06], ['ins.first->second->push_back(std::make_pair(name,', 2.598833643460815e-06], ['new_no));', 2.598833643460815e-06], ['Interface_field_reference_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->expr_->type()->interface_type();', 2.598833643460815e-06], ['Interface_field_reference_expression::create_thunk(context->gogo(),', 2.598833643460815e-06], ['earlier,', 2.598833643460815e-06], ['vals->push_back(this->expr_);', 2.598833643460815e-06], ['bnil_check', 2.598833643460815e-06], ['nil_check->get_backend(context);', 2.598833643460815e-06], ['bcond', 2.598833643460815e-06], ['bnil_check,', 2.598833643460815e-06], ['bcrash,', 2.598833643460815e-06], ['cond_statement', 2.598833643460815e-06], ['bcond);', 2.598833643460815e-06], ['gogo->backend()->compound_expression(cond_statement,', 2.598833643460815e-06], ['Interface_field_reference_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_interface_field_reference(Expression*', 2.598833643460815e-06], ['Interface_field_reference_expression(expr,', 2.598833643460815e-06], ['selector.', 2.598833643460815e-06], ['LEFT.NAME.', 2.598833643460815e-06], ['Selector_expression', 2.598833643460815e-06], ['Selector_expression(Expression*', 2.598833643460815e-06], ['Parser_expression(EXPRESSION_SELECTOR,', 2.598833643460815e-06], ['left_(left),', 2.598833643460815e-06], ['name_(name)', 2.598833643460815e-06], ['Selector_expression(this->left_->copy(),', 2.598833643460815e-06], ['lower_method_expression(Gogo*);', 2.598833643460815e-06], ['left_;', 2.598833643460815e-06], ['name_;', 2.598833643460815e-06], ['Selector_expression::do_lower(Gogo*', 2.598833643460815e-06], ['this->lower_method_expression(gogo);', 2.598833643460815e-06], ['left->type(),', 2.598833643460815e-06], ['T.M', 2.598833643460815e-06], ['(*T).M.', 2.598833643460815e-06], ['Selector_expression::lower_method_expression(Gogo*', 2.598833643460815e-06], ['name(this->name_);', 2.598833643460815e-06], ['is_pointer;', 2.598833643460815e-06], ['("method', 2.598833643460815e-06], ['!is_pointer)', 2.598833643460815e-06], ['nt->interface_type();', 2.598833643460815e-06], ['it->find_method(name);', 2.598833643460815e-06], ['((method', 2.598833643460815e-06], ['(left_type->named_type()', 2.598833643460815e-06], ['(!is_ambiguous)', 2.598833643460815e-06], ['nt->message_name().c_str());', 2.598833643460815e-06], ['!is_pointer', 2.598833643460815e-06], ['!method->is_value_method())', 2.598833643460815e-06], ['(use', 2.598833643460815e-06], ['%<(*%s).%s%>)",', 2.598833643460815e-06], ['method_type;', 2.598833643460815e-06], ['go_assert(method_type->is_method());', 2.598833643460815e-06], ['imethod->type()->function_type();', 2.598833643460815e-06], ['go_assert(method_type', 2.598833643460815e-06], ['!method_type->is_method());', 2.598833643460815e-06], ['"$this";', 2.598833643460815e-06], ['parameters->push_back(Typed_identifier(receiver_name,', 2.598833643460815e-06], ['method_parameters', 2.598833643460815e-06], ['method_type->parameters();', 2.598833643460815e-06], ['(method_parameters', 2.598833643460815e-06], ['method_parameters->begin();', 2.598833643460815e-06], ['method_parameters->end();', 2.598833643460815e-06], ['parameters->push_back(*p);', 2.598833643460815e-06], ['"$param%d",', 2.598833643460815e-06], ['parameters->push_back(Typed_identifier(buf,', 2.598833643460815e-06], ['method_results', 2.598833643460815e-06], ['method_type->results();', 2.598833643460815e-06], ['(method_results', 2.598833643460815e-06], ['method_results->begin();', 2.598833643460815e-06], ['method_results->end();', 2.598833643460815e-06], ['results->push_back(*p);', 2.598833643460815e-06], ['(method_type->is_varargs())', 2.598833643460815e-06], ['(method->needs_stub_method()', 2.598833643460815e-06], ['method->stub_object()', 2.598833643460815e-06], ['method->named_object());', 2.598833643460815e-06], ['Expression::make_func_reference(mno,', 2.598833643460815e-06], ['Expression::make_cast(fntype,', 2.598833643460815e-06], ['f,', 2.598833643460815e-06], ['static_cast<Type_conversion_expression*>(f);', 2.598833643460815e-06], ['tce->set_may_convert_function_types();', 2.598833643460815e-06], ['gogo->start_function(gogo->thunk_name(),', 2.598833643460815e-06], ['Expression::make_var_reference(vno,', 2.598833643460815e-06], ['ve,', 2.598833643460815e-06], ['Expression::make_interface_field_reference(ve,', 2.598833643460815e-06], ['(bm->is_error_expression())', 2.598833643460815e-06], ['args->push_back(Expression::make_var_reference(vno,', 2.598833643460815e-06], ['Expression::make_call(bm,', 2.598833643460815e-06], ['method_type->is_varargs(),', 2.598833643460815e-06], ['gogo->flatten_block(no,', 2.598833643460815e-06], ['Selector_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_selector(Expression*', 2.598833643460815e-06], ['Selector_expression(left,', 2.598833643460815e-06], ['Allocation_expression.', 2.598833643460815e-06], ['Allocation_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Allocation_expression::do_type()', 2.598833643460815e-06], ['Allocation_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->type_->in_heap())', 2.598833643460815e-06], ['Allocation_expression::do_copy()', 2.598833643460815e-06], ['Allocation_expression*', 2.598833643460815e-06], ['Allocation_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['alloc->set_allocate_on_stack();', 2.598833643460815e-06], ['alloc;', 2.598833643460815e-06], ['Allocation_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['gogo->backend()->var_expression(temp,', 2.598833643460815e-06], ['gogo->backend()->address_expression(ret,', 2.598833643460815e-06], ['gogo->allocate_memory(this->type_,', 2.598833643460815e-06], ['gogo->backend()->pointer_type(btype);', 2.598833643460815e-06], ['gogo->backend()->convert_expression(pbtype,', 2.598833643460815e-06], ['Allocation_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['"new(";', 2.598833643460815e-06], ['Expression::make_allocation(Type*', 2.598833643460815e-06], ['Allocation_expression(type,', 2.598833643460815e-06], ['Ordered_value_list.', 2.598833643460815e-06], ['Ordered_value_list::traverse_vals(Traverse*', 2.598833643460815e-06], ['(this->traverse_order_', 2.598833643460815e-06], ['(this->vals_->traverse(traverse)', 2.598833643460815e-06], ['this->traverse_order_->begin();', 2.598833643460815e-06], ['this->traverse_order_->end();', 2.598833643460815e-06], ['(Expression::traverse(&this->vals_->at(*p),', 2.598833643460815e-06], ['Struct_construction_expression.', 2.598833643460815e-06], ['Struct_construction_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Struct_construction_expression::is_constant_struct()', 2.598833643460815e-06], ['Struct_construction_expression::do_is_static_initializer()', 2.598833643460815e-06], ['Struct_construction_expression::do_determine_type(const', 2.598833643460815e-06], ['subcontext(pf->type(),', 2.598833643460815e-06], ['elsewhere;', 2.598833643460815e-06], ['(*pv)->determine_type_no_context();', 2.598833643460815e-06], ['Struct_construction_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(this->vals()->size()', 2.598833643460815e-06], ['st->field_count())', 2.598833643460815e-06], ['(!Type::are_assignable(pf->type(),', 2.598833643460815e-06], ['go_assert(pv', 2.598833643460815e-06], ['this->vals()->end());', 2.598833643460815e-06], ['Struct_construction_expression::do_copy()', 2.598833643460815e-06], ['Struct_construction_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['(this->traverse_order()', 2.598833643460815e-06], ['ret->set_traverse_order(this->traverse_order());', 2.598833643460815e-06], ['Struct_construction_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['(this->is_constant_struct()', 2.598833643460815e-06], ['Struct_construction_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['fbtype', 2.598833643460815e-06], ['pf->type()->get_backend(gogo);', 2.598833643460815e-06], ['init.push_back(val->get_backend(context));', 2.598833643460815e-06], ['(this->type_->struct_type()->has_padding())', 2.598833643460815e-06], ['Feed', 2.598833643460815e-06], ['*fbtype', 2.598833643460815e-06], ['Struct_construction_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['Struct_construction_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(Type*', 2.598833643460815e-06], ['go_assert(type->struct_type()', 2.598833643460815e-06], ['Array_construction_expression.', 2.598833643460815e-06], ['Array_construction_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Array_construction_expression::is_constant_array()', 2.598833643460815e-06], ['Array_construction_expression::do_is_static_initializer()', 2.598833643460815e-06], ['Array_construction_expression::do_determine_type(const', 2.598833643460815e-06], ['subcontext(this->type_->array_type()->element_type(),', 2.598833643460815e-06], ['Array_construction_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['this->type_->array_type();', 2.598833643460815e-06], ['!Type::are_assignable(element_type,', 2.598833643460815e-06], ['Array_construction_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['(this->is_constant_array()', 2.598833643460815e-06], ['Array_construction_expression::get_constructor(Translate_context*', 2.598833643460815e-06], ['array_btype)', 2.598833643460815e-06], ['this->type_->array_type()->element_type();', 2.598833643460815e-06], ['long>', 2.598833643460815e-06], ['indexes.push_back(i);', 2.598833643460815e-06], ['indexes.push_back(*pi);', 2.598833643460815e-06], ['ebtype', 2.598833643460815e-06], ['element_type->get_backend(gogo);', 2.598833643460815e-06], ['*zv', 2.598833643460815e-06], ['gogo->backend()->zero_expression(ebtype);', 2.598833643460815e-06], ['vals.push_back(zv);', 2.598833643460815e-06], ['vals.push_back(val_expr->get_backend(context));', 2.598833643460815e-06], ['gogo->backend()->array_constructor_expression(array_btype,', 2.598833643460815e-06], ['Array_construction_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['"%lu",', 2.598833643460815e-06], ['*pi);', 2.598833643460815e-06], ['efb->write_c_string(":");', 2.598833643460815e-06], ['Array_construction_expression::do_dump_expression(', 2.598833643460815e-06], ['this->type_->array_type()->length();', 2.598833643460815e-06], ['ast_dump_context->dump_expression(length);', 2.598833643460815e-06], ['this->dump_slice_storage_expression(ast_dump_context);', 2.598833643460815e-06], ['this->indexes_->end();', 2.598833643460815e-06], ['(pi', 2.598833643460815e-06], ['this->indexes_->begin())', 2.598833643460815e-06], ['*pi', 2.598833643460815e-06], ["':';", 2.598833643460815e-06], ['ast_dump_context->dump_expression(*pv);', 2.598833643460815e-06], ['Fixed_array_construction_expression.', 2.598833643460815e-06], ['Fixed_array_construction_expression::Fixed_array_construction_expression(', 2.598833643460815e-06], ['Array_construction_expression(EXPRESSION_FIXED_ARRAY_CONSTRUCTION,', 2.598833643460815e-06], ['Fixed_array_construction_expression::do_copy()', 2.598833643460815e-06], ['this->type()->copy_expressions();', 2.598833643460815e-06], ['Fixed_array_construction_expression(t,', 2.598833643460815e-06], ['Fixed_array_construction_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['type->get_backend(context->gogo());', 2.598833643460815e-06], ['this->get_constructor(context,', 2.598833643460815e-06], ['btype);', 2.598833643460815e-06], ['Expression::make_array_composite_literal(Type*', 2.598833643460815e-06], ['Slice_construction_expression.', 2.598833643460815e-06], ['Slice_construction_expression::Slice_construction_expression(', 2.598833643460815e-06], ['Array_construction_expression(EXPRESSION_SLICE_CONSTRUCTION,', 2.598833643460815e-06], ['valtype_(NULL),', 2.598833643460815e-06], ['array_val_(NULL),', 2.598833643460815e-06], ['slice_storage_(NULL),', 2.598833643460815e-06], ['storage_escapes_(true)', 2.598833643460815e-06], ['vals->empty())', 2.598833643460815e-06], ['(this->indexes()', 2.598833643460815e-06], ['Expression::make_integer_ul(lenval,', 2.598833643460815e-06], ['this->valtype_', 2.598833643460815e-06], ['array_type;', 2.598833643460815e-06], ['Slice_construction_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(this->Array_construction_expression::do_traverse(traverse)', 2.598833643460815e-06], ['(Type::traverse(this->valtype_,', 2.598833643460815e-06], ['Expression::traverse(&this->array_val_,', 2.598833643460815e-06], ['Expression::traverse(&this->slice_storage_,', 2.598833643460815e-06], ['flattening,', 2.598833643460815e-06], ['do_get_backend().', 2.598833643460815e-06], ['Slice_construction_expression::create_array_val()', 2.598833643460815e-06], ['this->type()->array_type();', 2.598833643460815e-06], ['go_assert(this->valtype_', 2.598833643460815e-06], ['this->vals();', 2.598833643460815e-06], ['Fixed_array_construction_expression(', 2.598833643460815e-06], ['this->valtype_,', 2.598833643460815e-06], ['Slice_construction_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['(this->type()->array_type()', 2.598833643460815e-06], ['this->Array_construction_expression::do_flatten(gogo,', 2.598833643460815e-06], ['stack-allocated', 2.598833643460815e-06], ['(!this->storage_escapes_', 2.598833643460815e-06], ['go_assert(this->array_val_);', 2.598833643460815e-06], ['Statement::make_temporary(this->valtype_,', 2.598833643460815e-06], ['storeage', 2.598833643460815e-06], ['temp,', 2.598833643460815e-06], ['dump).', 2.598833643460815e-06], ['Slice_construction_expression::', 2.598833643460815e-06], ['dump_slice_storage_expression(Ast_dump_context*', 2.598833643460815e-06], ['"storage="', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->slice_storage_);', 2.598833643460815e-06], ['Slice_construction_expression::do_copy()', 2.598833643460815e-06], ['Slice_construction_expression(this->type()->copy_expressions(),', 2.598833643460815e-06], ['Slice_construction_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->array_val_->is_static_initializer();', 2.598833643460815e-06], ['context->function()', 2.598833643460815e-06], ['!is_static_initializer;', 2.598833643460815e-06], ['space;', 2.598833643460815e-06], ['go_assert(!this->storage_escapes_);', 2.598833643460815e-06], ['this->slice_storage_,', 2.598833643460815e-06], ['(!copy_to_heap)', 2.598833643460815e-06], ['space->unary_expression()->set_is_slice_init();', 2.598833643460815e-06], ['go_assert(this->storage_escapes_', 2.598833643460815e-06], ['Expression::make_heap_expression(this->array_val_,', 2.598833643460815e-06], ['this->valtype_->array_type();', 2.598833643460815e-06], ['at->length();', 2.598833643460815e-06], ['slice_val', 2.598833643460815e-06], ['Expression::make_slice_value(this->type(),', 2.598833643460815e-06], ['slice_val->get_backend(context);', 2.598833643460815e-06], ['Expression::make_slice_composite_literal(Type*', 2.598833643460815e-06], ['Map_construction_expression.', 2.598833643460815e-06], ['Map_construction_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['this->vals_->traverse(traverse)', 2.598833643460815e-06], ['__go_construct_map.', 2.598833643460815e-06], ['Map_construction_expression::do_flatten(Gogo*', 2.598833643460815e-06], ['(!this->is_error_expression()', 2.598833643460815e-06], ['val_type);', 2.598833643460815e-06], ['value_pairs', 2.598833643460815e-06], ['key_value_pair', 2.598833643460815e-06], ['(key->is_error_expression()', 2.598833643460815e-06], ['key->type()->is_error_type())', 2.598833643460815e-06], ['(key->type()->interface_type()', 2.598833643460815e-06], ['!key->is_variable())', 2.598833643460815e-06], ['(val->is_error_expression()', 2.598833643460815e-06], ['val->type()->is_error_type())', 2.598833643460815e-06], ['(val->type()->interface_type()', 2.598833643460815e-06], ['!val->is_variable())', 2.598833643460815e-06], ['key_value_pair->push_back(key);', 2.598833643460815e-06], ['key_value_pair->push_back(val);', 2.598833643460815e-06], ['value_pairs->push_back(', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(this->element_type_,', 2.598833643460815e-06], ['key_value_pair,', 2.598833643460815e-06], ['ctor_type', 2.598833643460815e-06], ['ctor_type->set_is_array_incomparable();', 2.598833643460815e-06], ['Fixed_array_construction_expression(ctor_type,', 2.598833643460815e-06], ['value_pairs,', 2.598833643460815e-06], ['constructor->issue_nil_check();', 2.598833643460815e-06], ['this->constructor_temp_->set_is_address_taken();', 2.598833643460815e-06], ['inserter->insert(this->constructor_temp_);', 2.598833643460815e-06], ['Map_construction_expression::do_determine_type(const', 2.598833643460815e-06], ['key_context(mt->key_type(),', 2.598833643460815e-06], ['val_context(mt->val_type(),', 2.598833643460815e-06], ['(*pv)->determine_type(&key_context);', 2.598833643460815e-06], ['(*pv)->determine_type(&val_context);', 2.598833643460815e-06], ['Map_construction_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!Type::are_assignable(key_type,', 2.598833643460815e-06], ['(!Type::are_assignable(val_type,', 2.598833643460815e-06], ['construction"),', 2.598833643460815e-06], ['Map_construction_expression::do_copy()', 2.598833643460815e-06], ['Map_construction_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['Map_construction_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['ventries;', 2.598833643460815e-06], ['this->vals_->empty())', 2.598833643460815e-06], ['go_assert(this->constructor_temp_', 2.598833643460815e-06], ['this->vals_->size()', 2.598833643460815e-06], ['ctor_ref', 2.598833643460815e-06], ['Expression::make_temporary_reference(this->constructor_temp_,', 2.598833643460815e-06], ['ctor_ref,', 2.598833643460815e-06], ['mt->val_type());', 2.598833643460815e-06], ['uintptr_t', 2.598833643460815e-06], ['uintptr_t,', 2.598833643460815e-06], ['entry_size', 2.598833643460815e-06], ['field_index;', 2.598833643460815e-06], ['valfield', 2.598833643460815e-06], ['this->element_type_->find_local_field("__val",', 2.598833643460815e-06], ['&field_index);', 2.598833643460815e-06], ['val_offset', 2.598833643460815e-06], ['Expression::make_struct_field_offset(this->element_type_,', 2.598833643460815e-06], ['valfield);', 2.598833643460815e-06], ['map_ctor', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CONSTRUCT_MAP,', 2.598833643460815e-06], ['entry_size,', 2.598833643460815e-06], ['val_offset,', 2.598833643460815e-06], ['ventries);', 2.598833643460815e-06], ['map_ctor->get_backend(context);', 2.598833643460815e-06], ['Map_construction_expression::do_export(Export_function_body*', 2.598833643460815e-06], ['Map_construction_expression::do_dump_expression(', 2.598833643460815e-06], ['Composite_literal_expression.', 2.598833643460815e-06], ['Composite_literal_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['itself."', 2.598833643460815e-06], ['bug482.go', 2.598833643460815e-06], ['(this->has_keys_', 2.598833643460815e-06], ['resolvable', 2.598833643460815e-06], ['Type::TYPE_NAMED)', 2.598833643460815e-06], ['type->named_type()->real_type();', 2.598833643460815e-06], ['Type::TYPE_FORWARD)', 2.598833643460815e-06], ['this->vals_->traverse(traverse);', 2.598833643460815e-06], ['Composite_literal_expression::do_lower(Gogo*', 2.598833643460815e-06], ['(!type->is_error())', 2.598833643460815e-06], ['("may', 2.598833643460815e-06], ['this->lower_struct(gogo,', 2.598833643460815e-06], ['this->lower_array(type);', 2.598833643460815e-06], ['this->lower_map(gogo,', 2.598833643460815e-06], ['(is_pointer)', 2.598833643460815e-06], ['Composite_literal_expression::lower_struct(Gogo*', 2.598833643460815e-06], ['st->fields()->begin();', 2.598833643460815e-06], ['st->fields()->end();', 2.598833643460815e-06], ['(Gogo::is_hidden_name(pf->field_name())', 2.598833643460815e-06], ['pf->is_embedded_builtin(gogo))', 2.598833643460815e-06], ['Gogo::message_name(pf->field_name()).c_str(),', 2.598833643460815e-06], ['field_count', 2.598833643460815e-06], ['st->field_count();', 2.598833643460815e-06], ['vals(field_count);', 2.598833643460815e-06], ['new(std::vector<unsigned', 2.598833643460815e-06], ['long>);', 2.598833643460815e-06], ['name_expr', 2.598833643460815e-06], ['(name_expr', 2.598833643460815e-06], ['"mixture', 2.598833643460815e-06], ['(name_expr->classification())', 2.598833643460815e-06], ['EXPRESSION_UNKNOWN_REFERENCE:', 2.598833643460815e-06], ['name_expr->unknown_expression()->name();', 2.598833643460815e-06], ['name_expr->unknown_expression()->named_object();', 2.598833643460815e-06], ['no->package()', 2.598833643460815e-06], ['type->named_type()->named_object()->package())', 2.598833643460815e-06], ['no->package()->forget_usage(name_expr);', 2.598833643460815e-06], ['EXPRESSION_CONST_REFERENCE:', 2.598833643460815e-06], ['static_cast<Const_expression*>(name_expr)->named_object();', 2.598833643460815e-06], ['EXPRESSION_TYPE:', 2.598833643460815e-06], ['name_expr->type();', 2.598833643460815e-06], ['name_expr->var_expression()->named_object();', 2.598833643460815e-06], ['name_expr->enclosed_var_expression()->variable();', 2.598833643460815e-06], ['EXPRESSION_FUNC_REFERENCE:', 2.598833643460815e-06], ['name_expr->func_expression()->named_object();', 2.598833643460815e-06], ['(bad_key)', 2.598833643460815e-06], ['name_expr;', 2.598833643460815e-06], ['gno', 2.598833643460815e-06], ['gogo->lookup_global(name.c_str());', 2.598833643460815e-06], ['(gno', 2.598833643460815e-06], ['(sf', 2.598833643460815e-06], ['(vals[index]', 2.598833643460815e-06], ['(Gogo::is_hidden_name(sf->field_name())', 2.598833643460815e-06], ['sf->is_embedded_builtin(gogo)))', 2.598833643460815e-06], ['Gogo::message_name(sf->field_name()).c_str(),', 2.598833643460815e-06], ['vals[index]', 2.598833643460815e-06], ['traverse_order->push_back(static_cast<unsigned', 2.598833643460815e-06], ['long>(index));', 2.598833643460815e-06], ['(!this->all_are_names_)', 2.598833643460815e-06], ['weird', 2.598833643460815e-06], ['bug462', 2.598833643460815e-06], ['(external_expr', 2.598833643460815e-06], ['go_error_at(external_expr->location(),', 2.598833643460815e-06], ['external_no->message_name().c_str(),', 2.598833643460815e-06], ['list->reserve(field_count);', 2.598833643460815e-06], ['field_count;', 2.598833643460815e-06], ['list->push_back(vals[i]);', 2.598833643460815e-06], ['ret->set_traverse_order(traverse_order);', 2.598833643460815e-06], ['Index/value/traversal-order', 2.598833643460815e-06], ['triple.', 2.598833643460815e-06], ['IVT_triple', 2.598833643460815e-06], ['traversal_order;', 2.598833643460815e-06], ['IVT_triple(unsigned', 2.598833643460815e-06], ['index(i),', 2.598833643460815e-06], ['traversal_order(to),', 2.598833643460815e-06], ['expr(e)', 2.598833643460815e-06], ['IVT_triple&', 2.598833643460815e-06], ['this->index', 2.598833643460815e-06], ['other.index;', 2.598833643460815e-06], ['Composite_literal_expression::lower_array(Type*', 2.598833643460815e-06], ['this->vals_);', 2.598833643460815e-06], ['long>;', 2.598833643460815e-06], ['indexes->reserve(this->vals_->size());', 2.598833643460815e-06], ['vals->reserve(this->vals_->size());', 2.598833643460815e-06], ['(index_expr', 2.598833643460815e-06], ['(!indexes->empty())', 2.598833643460815e-06], ['(indexes->empty()', 2.598833643460815e-06], ['indexes->push_back(i);', 2.598833643460815e-06], ['(!index_expr->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(nc.to_unsigned_long(&index))', 2.598833643460815e-06], ['negative");', 2.598833643460815e-06], ['ntype->integer_type();', 2.598833643460815e-06], ['(sizeof(index)', 2.598833643460815e-06], ['static_cast<size_t>(inttype->bits()', 2.598833643460815e-06], ['(inttype->bits()', 2.598833643460815e-06], ['(!indexes->empty()', 2.598833643460815e-06], ['indexes->back())', 2.598833643460815e-06], ['++index;', 2.598833643460815e-06], ['(indexes->empty())', 2.598833643460815e-06], ['(indexes_out_of_order)', 2.598833643460815e-06], ['std::vector<IVT_triple>', 2.598833643460815e-06], ['v.reserve(indexes->size());', 2.598833643460815e-06], ['indexes->begin();', 2.598833643460815e-06], ['torder', 2.598833643460815e-06], ['++torder)', 2.598833643460815e-06], ['v.push_back(IVT_triple(*pi,', 2.598833643460815e-06], ['torder,', 2.598833643460815e-06], ['*pe));', 2.598833643460815e-06], ['v.end());', 2.598833643460815e-06], ['indexes->reserve(v.size());', 2.598833643460815e-06], ['vals->reserve(v.size());', 2.598833643460815e-06], ['traverse_order->reserve(v.size());', 2.598833643460815e-06], ['(V::const_iterator', 2.598833643460815e-06], ['indexes->push_back(p->index);', 2.598833643460815e-06], ['vals->push_back(p->expr);', 2.598833643460815e-06], ['traverse_order->push_back(p->traversal_order);', 2.598833643460815e-06], ['Array_construction_expression*', 2.598833643460815e-06], ['ace', 2.598833643460815e-06], ['ret->array_literal();', 2.598833643460815e-06], ['(ace', 2.598833643460815e-06], ['ace->set_traverse_order(traverse_order);', 2.598833643460815e-06], ['[...]{...}.', 2.598833643460815e-06], ['Composite_literal_expression::make_array(', 2.598833643460815e-06], ['type->array_type();', 2.598833643460815e-06], ['at->length()->is_nil_expression())', 2.598833643460815e-06], ['Type::lookup_integer_type("int")->integer_type();', 2.598833643460815e-06], ['(sizeof(size)', 2.598833643460815e-06], ['static_cast<size_t>(it->bits()', 2.598833643460815e-06], ['(it->bits()', 2.598833643460815e-06], ['elen', 2.598833643460815e-06], ['Expression::make_integer_ul(size,', 2.598833643460815e-06], ['elen);', 2.598833643460815e-06], ['!at->length()->is_error_expression()', 2.598833643460815e-06], ['(at->length()->numeric_constant_value(&nc)', 2.598833643460815e-06], ['(this->vals_->size()', 2.598833643460815e-06], ['indexes->back();', 2.598833643460815e-06], ['(max', 2.598833643460815e-06], ['("some', 2.598833643460815e-06], ['"are', 2.598833643460815e-06], ['Composite_literal_expression::lower_map(Gogo*', 2.598833643460815e-06], ['(!this->has_keys_)', 2.598833643460815e-06], ['keys");', 2.598833643460815e-06], ['("map', 2.598833643460815e-06], ['"have', 2.598833643460815e-06], ['((*p)->unknown_expression()', 2.598833643460815e-06], ['(*p)->unknown_expression()->clear_is_composite_literal_key();', 2.598833643460815e-06], ['go_assert((*p)->is_error_expression());', 2.598833643460815e-06], ['(!(*p)->is_constant())', 2.598833643460815e-06], ['nval;', 2.598833643460815e-06], ['((*p)->string_constant_value(&sval))', 2.598833643460815e-06], ['Gogo::hash_string(sval,', 2.598833643460815e-06], ['st.find(h);', 2.598833643460815e-06], ['st.end())', 2.598833643460815e-06], ['st.insert(val);', 2.598833643460815e-06], ['(*lit)->string_constant_value(&s);', 2.598833643460815e-06], ['sval)', 2.598833643460815e-06], ['("duplicate', 2.598833643460815e-06], ['((*p)->numeric_constant_value(&nval))', 2.598833643460815e-06], ['nval.hash(0);', 2.598833643460815e-06], ['nt.find(h);', 2.598833643460815e-06], ['nt.end())', 2.598833643460815e-06], ['nt.insert(val);', 2.598833643460815e-06], ['(*lit)->numeric_constant_value(&rval);', 2.598833643460815e-06], ['(nval.equals(rval))', 2.598833643460815e-06], ['Map_construction_expression(type,', 2.598833643460815e-06], ['Composite_literal_expression::do_copy()', 2.598833643460815e-06], ['Composite_literal_expression*', 2.598833643460815e-06], ['Composite_literal_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['this->depth_,', 2.598833643460815e-06], ['this->has_keys_,', 2.598833643460815e-06], ['this->all_are_names_,', 2.598833643460815e-06], ['ret->key_path_', 2.598833643460815e-06], ['this->key_path_;', 2.598833643460815e-06], ['Composite_literal_expression::do_dump_expression(', 2.598833643460815e-06], ['"composite(";', 2.598833643460815e-06], ['this->has_keys_);', 2.598833643460815e-06], ['"})";', 2.598833643460815e-06], ['Expression::make_composite_literal(Type*', 2.598833643460815e-06], ['Composite_literal_expression(type,', 2.598833643460815e-06], ['Expression::is_composite_literal()', 2.598833643460815e-06], ['EXPRESSION_COMPOSITE_LITERAL:', 2.598833643460815e-06], ['Expression::is_nonconstant_composite_literal()', 2.598833643460815e-06], ['Struct_construction_expression', 2.598833643460815e-06], ['*psce', 2.598833643460815e-06], ['Struct_construction_expression*>(this);', 2.598833643460815e-06], ['!psce->is_constant_struct();', 2.598833643460815e-06], ['Fixed_array_construction_expression', 2.598833643460815e-06], ['Fixed_array_construction_expression*>(this);', 2.598833643460815e-06], ['Slice_construction_expression', 2.598833643460815e-06], ['Slice_construction_expression*>(this);', 2.598833643460815e-06], ['temporary_variable.', 2.598833643460815e-06], ['Expression::is_variable()', 2.598833643460815e-06], ['EXPRESSION_TEMPORARY_REFERENCE:', 2.598833643460815e-06], ['EXPRESSION_SET_AND_USE_TEMPORARY:', 2.598833643460815e-06], ['Expression::is_local_variable()', 2.598833643460815e-06], ['this->var_expression();', 2.598833643460815e-06], ['!no->var_value()->is_global()));', 2.598833643460815e-06], ['Type_guard_expression.', 2.598833643460815e-06], ['Type_guard_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Type_guard_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['Type_guard_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!expr_type->interface_type()->implements_interface(this->type_,', 2.598833643460815e-06], ['(!this->type_->is_error())', 2.598833643460815e-06], ['this->report_error(_("impossible', 2.598833643460815e-06], ['("impossible', 2.598833643460815e-06], ['Type_guard_expression::do_copy()', 2.598833643460815e-06], ['Type_guard_expression(this->expr_->copy(),', 2.598833643460815e-06], ['Type_guard_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Expression::convert_interface_to_interface(this->type_,', 2.598833643460815e-06], ['gogo->backend()->convert_expression(bt,', 2.598833643460815e-06], ['Type_guard_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['Expression::make_type_guard(Expression*', 2.598833643460815e-06], ['Type_guard_expression(expr,', 2.598833643460815e-06], ['Heap_expression.', 2.598833643460815e-06], ['Heap_expression::do_type()', 2.598833643460815e-06], ['Heap_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['etype->is_error())', 2.598833643460815e-06], ['Expression::make_allocation(etype,', 2.598833643460815e-06], ['alloc->get_backend(context);', 2.598833643460815e-06], ['space_temp', 2.598833643460815e-06], ['expr_btype', 2.598833643460815e-06], ['etype->get_backend(gogo);', 2.598833643460815e-06], ['typedmemmove.', 2.598833643460815e-06], ['Heap_expression', 2.598833643460815e-06], ['assn;', 2.598833643460815e-06], ['(!etype->has_pointer()', 2.598833643460815e-06], ['this->allocate_on_stack_)', 2.598833643460815e-06], ['gogo->backend()->indirect_expression(expr_btype,', 2.598833643460815e-06], ['gogo->backend()->assignment_statement(fndecl,', 2.598833643460815e-06], ['edecl;', 2.598833643460815e-06], ['expr_btype,', 2.598833643460815e-06], ['&edecl);', 2.598833643460815e-06], ['btempref', 2.598833643460815e-06], ['gogo->backend()->var_expression(btemp,', 2.598833643460815e-06], ['gogo->backend()->address_expression(btempref,', 2.598833643460815e-06], ['Expression::make_type_descriptor(etype,', 2.598833643460815e-06], ['etype_ptr', 2.598833643460815e-06], ['Type::make_pointer_type(etype);', 2.598833643460815e-06], ['elhs', 2.598833643460815e-06], ['Expression::make_backend(space,', 2.598833643460815e-06], ['erhs', 2.598833643460815e-06], ['Expression::make_backend(addr,', 2.598833643460815e-06], ['elhs,', 2.598833643460815e-06], ['erhs);', 2.598833643460815e-06], ['gogo->backend()->expression_statement(fndecl,', 2.598833643460815e-06], ['gogo->backend()->compound_statement(edecl,', 2.598833643460815e-06], ['gogo->backend()->compound_statement(decl,', 2.598833643460815e-06], ['assn);', 2.598833643460815e-06], ['Heap_expression::do_dump_expression(', 2.598833643460815e-06], ['"&(";', 2.598833643460815e-06], ['Expression::make_heap_expression(Expression*', 2.598833643460815e-06], ['Heap_expression(expr,', 2.598833643460815e-06], ['Receive_expression.', 2.598833643460815e-06], ['Receive_expression::do_type()', 2.598833643460815e-06], ['Receive_expression::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!type->channel_type()->may_receive())', 2.598833643460815e-06], ['Flattening', 2.598833643460815e-06], ['receives.', 2.598833643460815e-06], ['Receive_expression::do_flatten(Gogo*,', 2.598833643460815e-06], ['(this->channel_->is_error_expression())', 2.598833643460815e-06], ['(this->temp_receiver_', 2.598833643460815e-06], ['this->temp_receiver_', 2.598833643460815e-06], ['this->temp_receiver_->set_is_address_taken();', 2.598833643460815e-06], ['inserter->insert(this->temp_receiver_);', 2.598833643460815e-06], ['Receive_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(this->channel_->type()->is_error());', 2.598833643460815e-06], ['recv_ref', 2.598833643460815e-06], ['recv_addr,', 2.598833643460815e-06], ['recv', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CHANRECV1,', 2.598833643460815e-06], ['recv_addr);', 2.598833643460815e-06], ['Expression::make_compound(recv,', 2.598833643460815e-06], ['recv_ref,', 2.598833643460815e-06], ['Receive_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_expression(channel_);', 2.598833643460815e-06], ['Expression::make_receive(Expression*', 2.598833643460815e-06], ['Receive_expression(channel,', 2.598833643460815e-06], ['Type_descriptor_expression', 2.598833643460815e-06], ['Type_descriptor_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_TYPE_DESCRIPTOR,', 2.598833643460815e-06], ['this->type_->type_descriptor_pointer(context->gogo(),', 2.598833643460815e-06], ['Type_descriptor_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Type_descriptor_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_type_descriptor(Type*', 2.598833643460815e-06], ['Type_descriptor_expression(type,', 2.598833643460815e-06], ['GC_symbol_expression', 2.598833643460815e-06], ['GC_symbol_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_GC_SYMBOL,', 2.598833643460815e-06], ['this->type_->gc_symbol_pointer(context->gogo());', 2.598833643460815e-06], ['GC_symbol_expression::do_dump_expression(', 2.598833643460815e-06], ['"gcdata(";', 2.598833643460815e-06], ['Expression::make_gc_symbol(Type*', 2.598833643460815e-06], ['GC_symbol_expression(type);', 2.598833643460815e-06], ['Ptrmask_symbol_expression', 2.598833643460815e-06], ['Ptrmask_symbol_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_PTRMASK_SYMBOL,', 2.598833643460815e-06], ['Ptrmask_symbol_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(!this->type_->needs_gcprog(gogo,', 2.598833643460815e-06], ['this->type_->gc_symbol_pointer(gogo);', 2.598833643460815e-06], ['this->type_->gc_ptrmask_var(gogo,', 2.598833643460815e-06], ['baddr', 2.598833643460815e-06], ['gogo->backend()->address_expression(bref,', 2.598833643460815e-06], ['baddr,', 2.598833643460815e-06], ['Ptrmask_symbol_expression::do_dump_expression(', 2.598833643460815e-06], ['"ptrmask(";', 2.598833643460815e-06], ['Expression::make_ptrmask_symbol(Type*', 2.598833643460815e-06], ['Ptrmask_symbol_expression(type);', 2.598833643460815e-06], ['inefficient', 2.598833643460815e-06], ['Type_info_expression', 2.598833643460815e-06], ['Type_info_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_TYPE_INFO,', 2.598833643460815e-06], ['type_info_(type_info)', 2.598833643460815e-06], ['type_info_;', 2.598833643460815e-06], ['chosen', 2.598833643460815e-06], ['Type_info_expression::do_type()', 2.598833643460815e-06], ['Type_info_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->type_->backend_type_align(gogo,', 2.598833643460815e-06], ['this->type_->backend_type_field_align(gogo,', 2.598833643460815e-06], ['this->type_->backend_type_ptrdata(gogo,', 2.598833643460815e-06], ['this->type_->descriptor_ptrdata(gogo,', 2.598833643460815e-06], ['Expression::make_integer_int64(val,', 2.598833643460815e-06], ['this->type(),', 2.598833643460815e-06], ['Type_info_expression::do_dump_expression(', 2.598833643460815e-06], ['"typeinfo(";', 2.598833643460815e-06], ['(this->type_info_', 2.598833643460815e-06], ['TYPE_INFO_ALIGNMENT', 2.598833643460815e-06], ['"alignment"', 2.598833643460815e-06], ['TYPE_INFO_FIELD_ALIGNMENT', 2.598833643460815e-06], ['"field', 2.598833643460815e-06], ['alignment"', 2.598833643460815e-06], ['TYPE_INFO_SIZE', 2.598833643460815e-06], ['"size"', 2.598833643460815e-06], ['TYPE_INFO_BACKEND_PTRDATA', 2.598833643460815e-06], ['"backend_ptrdata"', 2.598833643460815e-06], ['TYPE_INFO_DESCRIPTOR_PTRDATA', 2.598833643460815e-06], ['"descriptor_ptrdata"', 2.598833643460815e-06], ['Expression::make_type_info(Type*', 2.598833643460815e-06], ['Type_info_expression(type,', 2.598833643460815e-06], ['type_info);', 2.598833643460815e-06], ['Slice_info_expression', 2.598833643460815e-06], ['Slice_info_expression(Expression*', 2.598833643460815e-06], ['Expression(EXPRESSION_SLICE_INFO,', 2.598833643460815e-06], ['slice_(slice),', 2.598833643460815e-06], ['slice_info_(slice_info)', 2.598833643460815e-06], ['Slice_info_expression(this->slice_->copy(),', 2.598833643460815e-06], ['this->slice_->issue_nil_check();', 2.598833643460815e-06], ['slice_;', 2.598833643460815e-06], ['slice_info_;', 2.598833643460815e-06], ['Slice_info_expression::do_type()', 2.598833643460815e-06], ['this->slice_->type()->array_type()->element_type());', 2.598833643460815e-06], ['Slice_info_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['bslice', 2.598833643460815e-06], ['this->slice_->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->struct_field_expression(bslice,', 2.598833643460815e-06], ['Slice_info_expression::do_dump_expression(', 2.598833643460815e-06], ['"sliceinfo(";', 2.598833643460815e-06], ['this->slice_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['(this->slice_info_', 2.598833643460815e-06], ['SLICE_INFO_VALUE_POINTER', 2.598833643460815e-06], ['"values"', 2.598833643460815e-06], ['SLICE_INFO_LENGTH', 2.598833643460815e-06], ['SLICE_INFO_CAPACITY', 2.598833643460815e-06], ['"capacity', 2.598833643460815e-06], ['Expression::make_slice_info(Expression*', 2.598833643460815e-06], ['Slice_info_expression(slice,', 2.598833643460815e-06], ['Slice_value_expression.', 2.598833643460815e-06], ['Slice_value_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Expression::traverse(&this->valmem_,', 2.598833643460815e-06], ['Expression::traverse(&this->len_,', 2.598833643460815e-06], ['Slice_value_expression::do_copy()', 2.598833643460815e-06], ['Slice_value_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['this->valmem_->copy(),', 2.598833643460815e-06], ['this->len_->copy(),', 2.598833643460815e-06], ['this->cap_->copy(),', 2.598833643460815e-06], ['Slice_value_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['vals(3);', 2.598833643460815e-06], ['this->valmem_->get_backend(context);', 2.598833643460815e-06], ['this->len_->get_backend(context);', 2.598833643460815e-06], ['vals[2]', 2.598833643460815e-06], ['Slice_value_expression::do_dump_expression(', 2.598833643460815e-06], ['"slicevalue(";', 2.598833643460815e-06], ['"values:', 2.598833643460815e-06], ['this->valmem_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['this->len_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['capacity:', 2.598833643460815e-06], ['this->cap_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['Expression::make_slice_value(Type*', 2.598833643460815e-06], ['at,', 2.598833643460815e-06], ['go_assert(at->is_slice_type());', 2.598833643460815e-06], ['go_assert(valmem->is_nil_expression()', 2.598833643460815e-06], ['(at->array_type()->element_type()', 2.598833643460815e-06], ['valmem->type()->points_to()));', 2.598833643460815e-06], ['Slice_value_expression(at,', 2.598833643460815e-06], ['Interface_info_expression', 2.598833643460815e-06], ['Interface_info_expression(Expression*', 2.598833643460815e-06], ['Expression(EXPRESSION_INTERFACE_INFO,', 2.598833643460815e-06], ['iface_(iface),', 2.598833643460815e-06], ['iface_info_(iface_info)', 2.598833643460815e-06], ['Interface_info_expression(this->iface_->copy(),', 2.598833643460815e-06], ['this->iface_->issue_nil_check();', 2.598833643460815e-06], ['iface_;', 2.598833643460815e-06], ['iface_info_;', 2.598833643460815e-06], ['Interface_info_expression::do_type()', 2.598833643460815e-06], ['Unordered_map(Interface_type*,', 2.598833643460815e-06], ['Type*)', 2.598833643460815e-06], ['Hashtable;', 2.598833643460815e-06], ['Hashtable', 2.598833643460815e-06], ['result_types;', 2.598833643460815e-06], ['this->iface_->type()->interface_type();', 2.598833643460815e-06], ['Hashtable::const_iterator', 2.598833643460815e-06], ['result_types.find(itype);', 2.598833643460815e-06], ['result_types.end())', 2.598833643460815e-06], ['(itype->is_empty())', 2.598833643460815e-06], ['sfl->push_back(', 2.598833643460815e-06], ['Struct_field(Typed_identifier("__type_descriptor",', 2.598833643460815e-06], ['pdt,', 2.598833643460815e-06], ['itype->methods()->begin();', 2.598833643460815e-06], ['itype->methods()->end();', 2.598833643460815e-06], ['Type::make_backend_function_type(NULL,', 2.598833643460815e-06], ['fname', 2.598833643460815e-06], ['sfl->push_back(Struct_field(Typed_identifier(fname,', 2.598833643460815e-06], ['mft,', 2.598833643460815e-06], ['Pointer_type', 2.598833643460815e-06], ['Interface_info_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['biface', 2.598833643460815e-06], ['this->iface_->get_backend(context);', 2.598833643460815e-06], ['gogo->backend()->struct_field_expression(biface,', 2.598833643460815e-06], ['Interface_info_expression::do_dump_expression(', 2.598833643460815e-06], ['this->iface_->type()->interface_type()->is_empty();', 2.598833643460815e-06], ['"interfaceinfo(";', 2.598833643460815e-06], ['this->iface_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['(this->iface_info_', 2.598833643460815e-06], ['INTERFACE_INFO_METHODS', 2.598833643460815e-06], ['!is_empty', 2.598833643460815e-06], ['"methods"', 2.598833643460815e-06], ['INTERFACE_INFO_TYPE_DESCRIPTOR', 2.598833643460815e-06], ['"type_descriptor"', 2.598833643460815e-06], ['INTERFACE_INFO_OBJECT', 2.598833643460815e-06], ['"object"', 2.598833643460815e-06], ['Expression::make_interface_info(Expression*', 2.598833643460815e-06], ['Interface_info_expression(iface,', 2.598833643460815e-06], ['Interface_value_expression', 2.598833643460815e-06], ['Interface_value_expression(Type*', 2.598833643460815e-06], ['Expression(EXPRESSION_INTERFACE_VALUE,', 2.598833643460815e-06], ['first_field_(first_field),', 2.598833643460815e-06], ['obj_(obj)', 2.598833643460815e-06], ['Interface_value_expression(this->type_->copy_expressions(),', 2.598833643460815e-06], ['this->first_field_->copy(),', 2.598833643460815e-06], ['this->obj_->copy(),', 2.598833643460815e-06], ['(either', 2.598833643460815e-06], ['first_field_;', 2.598833643460815e-06], ['obj_;', 2.598833643460815e-06], ['Interface_value_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->first_field_,', 2.598833643460815e-06], ['Expression::traverse(&this->obj_,', 2.598833643460815e-06], ['Interface_value_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['vals(2);', 2.598833643460815e-06], ['this->first_field_->get_backend(context);', 2.598833643460815e-06], ['this->obj_->get_backend(context);', 2.598833643460815e-06], ['Interface_value_expression::do_dump_expression(', 2.598833643460815e-06], ['"interfacevalue(";', 2.598833643460815e-06], ['(this->type_->interface_type()->is_empty()', 2.598833643460815e-06], ['"type_descriptor:', 2.598833643460815e-06], ['"methods:', 2.598833643460815e-06], ['this->first_field_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['this->obj_->dump_expression(ast_dump_context);', 2.598833643460815e-06], ['Expression::make_interface_value(Type*', 2.598833643460815e-06], ['Interface_value_expression(type,', 2.598833643460815e-06], ['types:', 2.598833643460815e-06], ['Interface_mtable_expression', 2.598833643460815e-06], ['Interface_mtable_expression(Interface_type*', 2.598833643460815e-06], ['Expression(EXPRESSION_INTERFACE_MTABLE,', 2.598833643460815e-06], ['itype_(itype),', 2.598833643460815e-06], ['is_pointer_(is_pointer),', 2.598833643460815e-06], ['method_table_type_(NULL),', 2.598833643460815e-06], ['this->itype_->copy_expressions()->interface_type();', 2.598833643460815e-06], ['this->is_pointer_,', 2.598833643460815e-06], ['itype_;', 2.598833643460815e-06], ['is_pointer_;', 2.598833643460815e-06], ['method_table_type_;', 2.598833643460815e-06], ['Interface_mtable_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Type::traverse(this->itype_,', 2.598833643460815e-06], ['Interface_mtable_expression::do_type()', 2.598833643460815e-06], ['(this->method_table_type_', 2.598833643460815e-06], ['tid("__type_descriptor",', 2.598833643460815e-06], ['Type::make_type_descriptor_ptr_type(),', 2.598833643460815e-06], ['method(p->name(),', 2.598833643460815e-06], ['unsafe_ptr_type,', 2.598833643460815e-06], ['sfl->push_back(Struct_field(method));', 2.598833643460815e-06], ['this->method_table_type_', 2.598833643460815e-06], ['Interface_mtable_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['gogo->interface_method_table_name(this->itype_,', 2.598833643460815e-06], ['this->is_pointer_);', 2.598833643460815e-06], ['(this->type_->named_type()->named_object()->package()', 2.598833643460815e-06], ['this->itype_->package()))', 2.598833643460815e-06], ['(Gogo::is_hidden_name(p->name()))', 2.598833643460815e-06], ['(is_public', 2.598833643460815e-06], ['this->type_->named_type()->named_object()->package()', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_reference(mangled_name,', 2.598833643460815e-06], ['td_type;', 2.598833643460815e-06], ['(!this->is_pointer_)', 2.598833643460815e-06], ['bstructfields;', 2.598833643460815e-06], ['svals', 2.598833643460815e-06], ['tdescriptor', 2.598833643460815e-06], ['Expression::make_type_descriptor(td_type,', 2.598833643460815e-06], ['svals->push_back(tdescriptor);', 2.598833643460815e-06], ['tdesc_btype', 2.598833643460815e-06], ['tdescriptor->type()->get_backend(gogo);', 2.598833643460815e-06], ['btd("_type",', 2.598833643460815e-06], ['tdesc_btype,', 2.598833643460815e-06], ['bstructfields.push_back(btd);', 2.598833643460815e-06], ['go_assert(nt', 2.598833643460815e-06], ['m->named_object();', 2.598833643460815e-06], ['go_assert(no->is_function()', 2.598833643460815e-06], ['fcn_btype', 2.598833643460815e-06], ['m->type()->get_backend_fntype(gogo);', 2.598833643460815e-06], ['bmtype(p->name(),', 2.598833643460815e-06], ['fcn_btype,', 2.598833643460815e-06], ['bstructfields.push_back(bmtype);', 2.598833643460815e-06], ['svals->push_back(Expression::make_func_code_reference(no,', 2.598833643460815e-06], ['gogo->backend()->struct_type(bstructfields);', 2.598833643460815e-06], ['ctor_bexprs;', 2.598833643460815e-06], ['svals->begin();', 2.598833643460815e-06], ['svals->end();', 2.598833643460815e-06], ['ctor_bexprs.push_back((*pe)->get_backend(context));', 2.598833643460815e-06], ['ctor_bexprs,', 2.598833643460815e-06], ['gogo->backend()->immutable_struct(mangled_name,', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_set_init(this->bvar_,', 2.598833643460815e-06], ['mangled_name,', 2.598833643460815e-06], ['Interface_mtable_expression::do_dump_expression(', 2.598833643460815e-06], ['"__go_"', 2.598833643460815e-06], ['(this->is_pointer_', 2.598833643460815e-06], ['"pimt__"', 2.598833643460815e-06], ['"imt_");', 2.598833643460815e-06], ['ast_dump_context->dump_type(this->itype_);', 2.598833643460815e-06], ['"__";', 2.598833643460815e-06], ['Expression::make_interface_mtable_ref(Interface_type*', 2.598833643460815e-06], ['This,', 2.598833643460815e-06], ['Type_info_expression,', 2.598833643460815e-06], ['q.v.,', 2.598833643460815e-06], ['Struct_field_offset_expression', 2.598833643460815e-06], ['Struct_field_offset_expression(Struct_type*', 2.598833643460815e-06], ['Expression(EXPRESSION_STRUCT_FIELD_OFFSET,', 2.598833643460815e-06], ['field_(field)', 2.598833643460815e-06], ['field_;', 2.598833643460815e-06], ['Struct_field_offset_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->type_->fields();', 2.598833643460815e-06], ['(&*p', 2.598833643460815e-06], ['this->field_)', 2.598833643460815e-06], ['go_assert(&*p', 2.598833643460815e-06], ['this->field_);', 2.598833643460815e-06], ['uptr_type', 2.598833643460815e-06], ['Expression::make_integer_int64(offset,', 2.598833643460815e-06], ['uptr_type,', 2.598833643460815e-06], ['ret->get_backend(context);', 2.598833643460815e-06], ['Struct_field_offset_expression::do_dump_expression(', 2.598833643460815e-06], ['"unsafe.Offsetof(";', 2.598833643460815e-06], ['Gogo::message_name(this->field_->field_name());', 2.598833643460815e-06], ['Expression::make_struct_field_offset(Struct_type*', 2.598833643460815e-06], ['Struct_field_offset_expression(type,', 2.598833643460815e-06], ['Label_addr_expression', 2.598833643460815e-06], ['Label_addr_expression(Label*', 2.598833643460815e-06], ['Expression(EXPRESSION_LABEL_ADDR,', 2.598833643460815e-06], ['Label_addr_expression(this->label_,', 2.598833643460815e-06], ['this->label_->get_addr(context,', 2.598833643460815e-06], ['this->label_->name();', 2.598833643460815e-06], ['taking.', 2.598833643460815e-06], ['Expression::make_label_addr(Label*', 2.598833643460815e-06], ['Label_addr_expression(label,', 2.598833643460815e-06], ['Conditional_expression.', 2.598833643460815e-06], ['Conditional_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['(Expression::traverse(&this->cond_,', 2.598833643460815e-06], ['Expression::traverse(&this->then_,', 2.598833643460815e-06], ['Expression::traverse(&this->else_,', 2.598833643460815e-06], ['Conditional_expression::do_type()', 2.598833643460815e-06], ['(Type::are_identical(this->then_->type(),', 2.598833643460815e-06], ['this->else_->type(),', 2.598833643460815e-06], ['this->then_->type();', 2.598833643460815e-06], ['(this->then_->is_nil_expression()', 2.598833643460815e-06], ['this->else_->is_nil_expression())', 2.598833643460815e-06], ['(!this->then_->is_nil_expression()', 2.598833643460815e-06], ['this->then_->type()', 2.598833643460815e-06], ['this->else_->type());', 2.598833643460815e-06], ['result_type;', 2.598833643460815e-06], ['Conditional_expression::do_determine_type(const', 2.598833643460815e-06], ['this->cond_->determine_type_no_context();', 2.598833643460815e-06], ['this->then_->determine_type(context);', 2.598833643460815e-06], ['this->else_->determine_type(context);', 2.598833643460815e-06], ['Conditional_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['result_btype', 2.598833643460815e-06], ['this->then_->get_backend(context);', 2.598833643460815e-06], ['belse', 2.598833643460815e-06], ['this->else_->get_backend(context);', 2.598833643460815e-06], ['result_btype,', 2.598833643460815e-06], ['belse,', 2.598833643460815e-06], ['Conditional_expression::do_dump_expression(', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->then_);', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->else_);', 2.598833643460815e-06], ['Expression::make_conditional(Expression*', 2.598833643460815e-06], ['Conditional_expression(cond,', 2.598833643460815e-06], ['Compound_expression.', 2.598833643460815e-06], ['Compound_expression::do_traverse(Traverse*', 2.598833643460815e-06], ['Compound_expression::do_type()', 2.598833643460815e-06], ['Compound_expression::do_determine_type(const', 2.598833643460815e-06], ['Compound_expression::do_get_backend(Translate_context*', 2.598833643460815e-06], ['gogo->backend()->compound_expression(init_stmt,', 2.598833643460815e-06], ['Compound_expression::do_dump_expression(', 2.598833643460815e-06], ['Expression::make_compound(Expression*', 2.598833643460815e-06], ['Compound_expression(init,', 2.598833643460815e-06], ['Backend_expression.', 2.598833643460815e-06], ['Backend_expression::do_traverse(Traverse*)', 2.598833643460815e-06], ['Backend_expression::do_copy()', 2.598833643460815e-06], ['Backend_expression(this->bexpr_,', 2.598833643460815e-06], ['Backend_expression::do_dump_expression(Ast_dump_context*', 2.598833643460815e-06], ['"backend_expression<";', 2.598833643460815e-06], ['Expression::make_backend(Bexpression*', 2.598833643460815e-06], ['Backend_expression(bexpr,', 2.598833643460815e-06], ['Expression::import_expression(Import_expression*', 2.598833643460815e-06], ["'!'", 2.598833643460815e-06], ["'^'", 2.598833643460815e-06], ['Unary_expression::do_import(imp,', 2.598833643460815e-06], ['Binary_expression::do_import(imp,', 2.598833643460815e-06], ['(imp->match_c_string("$true")', 2.598833643460815e-06], ['imp->match_c_string("$false")', 2.598833643460815e-06], ['(imp->match_c_string("true")', 2.598833643460815e-06], ['imp->match_c_string("false"))))', 2.598833643460815e-06], ['Boolean_expression::do_import(imp,', 2.598833643460815e-06], ['String_expression::do_import(imp,', 2.598833643460815e-06], ['floats', 2.598833643460815e-06], ['Integer_expression::do_import(imp,', 2.598833643460815e-06], ['(imp->match_c_string("$nil")', 2.598833643460815e-06], ['imp->match_c_string("nil")))', 2.598833643460815e-06], ['Nil_expression::do_import(imp,', 2.598833643460815e-06], ['(imp->match_c_string("$convert")', 2.598833643460815e-06], ['imp->match_c_string("convert")))', 2.598833643460815e-06], ['Type_conversion_expression::do_import(imp,', 2.598833643460815e-06], ['Import_function_body*', 2.598833643460815e-06], ['ifb', 2.598833643460815e-06], ['imp->ifb();', 2.598833643460815e-06], ['(ifb', 2.598833643460815e-06], ['(ifb->saw_error())', 2.598833643460815e-06], ['ifb->read_identifier();', 2.598833643460815e-06], ['(id.empty())', 2.598833643460815e-06], ['ifb->block()->bindings()->lookup(id);', 2.598833643460815e-06], ['id.c_str());', 2.598833643460815e-06], ['Expression_list.', 2.598833643460815e-06], ['Expression_list::traverse(Traverse*', 2.598833643460815e-06], ['Expression_list::copy()', 2.598833643460815e-06], ['ret->push_back(NULL);', 2.598833643460815e-06], ['ret->push_back((*p)->copy());', 2.598833643460815e-06], ['Expression_list::contains_error()', 2.598833643460815e-06], ['(*p)->is_error_expression())', 2.598833643460815e-06], ['Numeric_constant.', 2.598833643460815e-06], ['Numeric_constant::~Numeric_constant()', 2.598833643460815e-06], ['Numeric_constant::Numeric_constant(const', 2.598833643460815e-06], ['classification_(a.classification_),', 2.598833643460815e-06], ['type_(a.type_)', 2.598833643460815e-06], ['Numeric_constant::operator=(const', 2.598833643460815e-06], ['a.classification_;', 2.598833643460815e-06], ['a.type_;', 2.598833643460815e-06], ['Numeric_constant::equals(const', 2.598833643460815e-06], ['a.classification_)', 2.598833643460815e-06], ['a.type_', 2.598833643460815e-06], ['a.type_,', 2.598833643460815e-06], ['Type::COMPARE_ALIASES,', 2.598833643460815e-06], ['mpz_cmp(this->u_.int_val,', 2.598833643460815e-06], ['a.u_.int_val)', 2.598833643460815e-06], ['mpfr_cmp(this->u_.float_val,', 2.598833643460815e-06], ['a.u_.float_val)', 2.598833643460815e-06], ['mpc_cmp(this->u_.complex_val,', 2.598833643460815e-06], ['a.u_.complex_val)', 2.598833643460815e-06], ['Numeric_constant::clear()', 2.598833643460815e-06], ['mpz_clear(this->u_.int_val);', 2.598833643460815e-06], ['mpfr_clear(this->u_.float_val);', 2.598833643460815e-06], ['mpc_clear(this->u_.complex_val);', 2.598833643460815e-06], ['NC_INVALID;', 2.598833643460815e-06], ['Numeric_constant::set_unsigned_long(Type*', 2.598833643460815e-06], ['mpz_init_set_ui(this->u_.int_val,', 2.598833643460815e-06], ['Numeric_constant::set_int(Type*', 2.598833643460815e-06], ['Numeric_constant::set_rune(Type*', 2.598833643460815e-06], ['NC_RUNE;', 2.598833643460815e-06], ['Numeric_constant::set_float(Type*', 2.598833643460815e-06], ['NC_FLOAT;', 2.598833643460815e-06], ['infinity', 2.598833643460815e-06], ['!type->float_type()->is_abstract())', 2.598833643460815e-06], ['(Numeric_constant::is_float_neg_zero(val,', 2.598833643460815e-06], ['mpfr_init_set_ui(this->u_.float_val,', 2.598833643460815e-06], ['Numeric_constant::set_complex(Type*', 2.598833643460815e-06], ['NC_COMPLEX;', 2.598833643460815e-06], ['set_float.', 2.598833643460815e-06], ['!type->complex_type()->is_abstract())', 2.598833643460815e-06], ['type->complex_type()->bits()', 2.598833643460815e-06], ['mpfr_init_set(real,', 2.598833643460815e-06], ['(Numeric_constant::is_float_neg_zero(real,', 2.598833643460815e-06], ['mpfr_init_set(imag,', 2.598833643460815e-06], ['(Numeric_constant::is_float_neg_zero(imag,', 2.598833643460815e-06], ['mpfr_set_ui(imag,', 2.598833643460815e-06], ['mpc_set_fr_fr(this->u_.complex_val,', 2.598833643460815e-06], ['BITS,', 2.598833643460815e-06], ['BITS', 2.598833643460815e-06], ['Numeric_constant::is_float_neg_zero(const', 2.598833643460815e-06], ['(!mpfr_signbit(val))', 2.598833643460815e-06], ['(mpfr_zero_p(val))', 2.598833643460815e-06], ['(bits)', 2.598833643460815e-06], ['denormalized', 2.598833643460815e-06], ['-126,', 2.598833643460815e-06], ['24', 2.598833643460815e-06], ['-126', 2.598833643460815e-06], ['(24', 2.598833643460815e-06], ['-149.', 2.598833643460815e-06], ['-149;', 2.598833643460815e-06], ['Minimum', 2.598833643460815e-06], ['-1022,', 2.598833643460815e-06], ['53', 2.598833643460815e-06], ['-1074;', 2.598833643460815e-06], ['mpfr_get_exp(val)', 2.598833643460815e-06], ['Numeric_constant::get_int(mpz_t*', 2.598833643460815e-06], ['go_assert(this->is_int());', 2.598833643460815e-06], ['Numeric_constant::get_rune(mpz_t*', 2.598833643460815e-06], ['go_assert(this->is_rune());', 2.598833643460815e-06], ['Numeric_constant::get_float(mpfr_t*', 2.598833643460815e-06], ['go_assert(this->is_float());', 2.598833643460815e-06], ['Numeric_constant::get_complex(mpc_t*', 2.598833643460815e-06], ['go_assert(this->is_complex());', 2.598833643460815e-06], ['Numeric_constant::to_unsigned_long(unsigned', 2.598833643460815e-06], ['this->mpz_to_unsigned_long(this->u_.int_val,', 2.598833643460815e-06], ['this->mpfr_to_unsigned_long(this->u_.float_val,', 2.598833643460815e-06], ['this->mpfr_to_unsigned_long(mpc_realref(this->u_.complex_val),', 2.598833643460815e-06], ['Numeric_constant::mpz_to_unsigned_long(const', 2.598833643460815e-06], ['NC_UL_NEGATIVE;', 2.598833643460815e-06], ['ui', 2.598833643460815e-06], ['(mpz_cmp_ui(ival,', 2.598833643460815e-06], ['ui)', 2.598833643460815e-06], ['NC_UL_BIG;', 2.598833643460815e-06], ['ui;', 2.598833643460815e-06], ['NC_UL_VALID;', 2.598833643460815e-06], ['Numeric_constant::mpfr_to_unsigned_long(const', 2.598833643460815e-06], ['To_unsigned_long', 2.598833643460815e-06], ['this->mpz_to_unsigned_long(ival,', 2.598833643460815e-06], ['Numeric_constant::to_memory_size(int64_t*', 2.598833643460815e-06], ['this->mpz_to_memory_size(this->u_.int_val,', 2.598833643460815e-06], ['this->mpfr_to_memory_size(this->u_.float_val,', 2.598833643460815e-06], ['this->mpfr_to_memory_size(mpc_realref(this->u_.complex_val),', 2.598833643460815e-06], ['Numeric_constant::mpz_to_memory_size(const', 2.598833643460815e-06], ['(mpz_fits_slong_p(ival))', 2.598833643460815e-06], ['static_cast<int64_t>(mpz_get_si(ival));', 2.598833643460815e-06], ['63', 2.598833643460815e-06], ['(mpz_sizeinbase(ival,', 2.598833643460815e-06], ['q,', 2.598833643460815e-06], ['mpz_init(q);', 2.598833643460815e-06], ['mpz_init(r);', 2.598833643460815e-06], ['mpz_tdiv_q_2exp(q,', 2.598833643460815e-06], ['mpz_tdiv_r_2exp(r,', 2.598833643460815e-06], ['go_assert(mpz_fits_ulong_p(q)', 2.598833643460815e-06], ['mpz_fits_ulong_p(r));', 2.598833643460815e-06], ['((static_cast<int64_t>(mpz_get_ui(q))', 2.598833643460815e-06], ['static_cast<int64_t>(mpz_get_ui(r)));', 2.598833643460815e-06], ['mpz_clear(r);', 2.598833643460815e-06], ['mpz_clear(q);', 2.598833643460815e-06], ['Numeric_constant::mpfr_to_memory_size(const', 2.598833643460815e-06], ['this->mpz_to_memory_size(ival,', 2.598833643460815e-06], ['Numeric_constant::to_int(mpz_t*', 2.598833643460815e-06], ['(!mpfr_zero_p(mpc_imagref(this->u_.complex_val))', 2.598833643460815e-06], ['!mpfr_integer_p(mpc_realref(this->u_.complex_val)))', 2.598833643460815e-06], ['Numeric_constant::to_float(mpfr_t*', 2.598833643460815e-06], ['mpfr_init_set_z(*val,', 2.598833643460815e-06], ['Numeric_constant::to_complex(mpc_t*', 2.598833643460815e-06], ['mpc_set_z(*val,', 2.598833643460815e-06], ['mpc_set_fr(*val,', 2.598833643460815e-06], ['Numeric_constant::type()', 2.598833643460815e-06], ['and,', 2.598833643460815e-06], ['ISSUE_ERROR', 2.598833643460815e-06], ['Numeric_constant::set_type(Type*', 2.598833643460815e-06], ['type->is_error())', 2.598833643460815e-06], ['this->check_int_type(type->integer_type(),', 2.598833643460815e-06], ['this->check_float_type(type->float_type(),', 2.598833643460815e-06], ['this->check_complex_type(type->complex_type(),', 2.598833643460815e-06], ['Numeric_constant::check_int_type(Integer_type*', 2.598833643460815e-06], ['mpz_init_set(val,', 2.598833643460815e-06], ['(!mpfr_integer_p(mpc_realref(this->u_.complex_val))', 2.598833643460815e-06], ['!mpfr_zero_p(mpc_imagref(this->u_.complex_val)))', 2.598833643460815e-06], ['(type->is_unsigned())', 2.598833643460815e-06], ['nonnegative', 2.598833643460815e-06], ['BITS.', 2.598833643460815e-06], ['type->bits();', 2.598833643460815e-06], ['sign.', 2.598833643460815e-06], ['(mpz_scan1(val,', 2.598833643460815e-06], ['long>(type->bits()', 2.598833643460815e-06], ['mpz_scan0(val,', 2.598833643460815e-06], ['type->bits())', 2.598833643460815e-06], ['ULONG_MAX));', 2.598833643460815e-06], ['Numeric_constant::check_float_type(Float_type*', 2.598833643460815e-06], ['mpfr_init_set_z(val,', 2.598833643460815e-06], ['(mpfr_nan_p(val)', 2.598833643460815e-06], ['mpfr_inf_p(val)', 2.598833643460815e-06], ['mpfr_zero_p(val))', 2.598833643460815e-06], ['Infinity', 2.598833643460815e-06], ['mpfr_get_exp(val);', 2.598833643460815e-06], ['mpfr_init(t);', 2.598833643460815e-06], ['mpfr_set(t,', 2.598833643460815e-06], ['mpfr_set(val,', 2.598833643460815e-06], ['mpfr_clear(t);', 2.598833643460815e-06], ['this->set_float(type,', 2.598833643460815e-06], ['Numeric_constant::check_complex_type(Complex_type*', 2.598833643460815e-06], ['mpc_set_z(val,', 2.598833643460815e-06], ['mpc_set_fr(val,', 2.598833643460815e-06], ['(!mpfr_nan_p(mpc_realref(val))', 2.598833643460815e-06], ['!mpfr_inf_p(mpc_realref(val))', 2.598833643460815e-06], ['!mpfr_zero_p(mpc_realref(val))', 2.598833643460815e-06], ['mpfr_get_exp(mpc_realref(val))', 2.598833643460815e-06], ['(!mpfr_nan_p(mpc_imagref(val))', 2.598833643460815e-06], ['!mpfr_inf_p(mpc_imagref(val))', 2.598833643460815e-06], ['!mpfr_zero_p(mpc_imagref(val))', 2.598833643460815e-06], ['mpfr_get_exp(mpc_imagref(val))', 2.598833643460815e-06], ['mpc_set(t,', 2.598833643460815e-06], ['mpc_clear(t);', 2.598833643460815e-06], ['this->set_complex(type,', 2.598833643460815e-06], ['Numeric_constant::expression(Location', 2.598833643460815e-06], ['Expression::make_integer_z(&this->u_.int_val,', 2.598833643460815e-06], ['Expression::make_character(&this->u_.int_val,', 2.598833643460815e-06], ['Expression::make_float(&this->u_.float_val,', 2.598833643460815e-06], ['Expression::make_complex(&this->u_.complex_val,', 2.598833643460815e-06], ['Numeric_constant::hash(unsigned', 2.598833643460815e-06], ['PRIME', 2.598833643460815e-06], ['97;', 2.598833643460815e-06], ['1.0;', 2.598833643460815e-06], ['mpz_get_ui(this->u_.int_val);', 2.598833643460815e-06], ['mpfr_init(m);', 2.598833643460815e-06], ['mpc_abs(m,', 2.598833643460815e-06], ['mpfr_get_ui(m,', 2.598833643460815e-06], ['mpfr_clear(m);', 2.598833643460815e-06], ['mpfr_get_d_2exp(&e,', 2.598833643460815e-06], ['4294967295.0;', 2.598833643460815e-06], ['long>(e', 2.598833643460815e-06], ['static_cast<long>(f));', 2.598833643460815e-06], ['(static_cast<unsigned', 2.598833643460815e-06], ['int>(val)', 2.598833643460815e-06], ['imports.cc', 2.598833643460815e-06], ['modules/declarations.', 2.598833643460815e-06], ['2014-2019', 2.598833643460815e-06], ['ISYM', 2.598833643460815e-06], ['make_import', 2.598833643460815e-06], ['IMPORTED_DECL,', 2.598833643460815e-06], ['IMPORTED_DECL_ASSOCIATED_DECL', 2.598833643460815e-06], ['(import)', 2.598833643460815e-06], ['(import);', 2.598833643460815e-06], ['import;', 2.598833643460815e-06], ['toplevel,', 2.598833643460815e-06], ['m->md->loc', 2.598833643460815e-06], ['(m->srcfile->toChars', 2.598833643460815e-06], ['NAMESPACE_DECL,', 2.598833643460815e-06], ['(m->toPrettyChars', 2.598833643460815e-06], ['(m->isym);', 2.598833643460815e-06], ['(!m->isRoot', 2.598833643460815e-06], ['(m->mod);', 2.598833643460815e-06], ['enums', 2.598833643460815e-06], ['TYPE_DECL.', 2.598833643460815e-06], ['ENUMERAL_TYPE)', 2.598833643460815e-06], ['dsymbols.', 2.598833643460815e-06], ['(ScopeDsymbol', 2.598833643460815e-06], ['Alias', 2.598833643460815e-06], ['(AliasDeclaration', 2.598833643460815e-06], ['d->getType', 2.598833643460815e-06], ['Tenum)', 2.598833643460815e-06], ['((TypeEnum', 2.598833643460815e-06], ['dsym->accept', 2.598833643460815e-06], ['dsym->isym;', 2.598833643460815e-06], ['overloadable', 2.598833643460815e-06], ['(OverDeclaration', 2.598833643460815e-06], ['(d->aliassym', 2.598833643460815e-06], ['d->aliassym->accept', 2.598833643460815e-06], ['d->aliassym->isym;', 2.598833643460815e-06], ['(FuncAliasDeclaration', 2.598833643460815e-06], ['d->toAliasFunc', 2.598833643460815e-06], ['fd->accept', 2.598833643460815e-06], ['fd->isym;', 2.598833643460815e-06], ['routines,', 2.598833643460815e-06], ['debug_hook', 2.598833643460815e-06], ['(!d->isym)', 2.598833643460815e-06], ['visitors', 2.598833643460815e-06], ["'isym'.", 2.598833643460815e-06], ['"is-a.h"', 2.598833643460815e-06], ['"tree-ssa.h"', 2.598833643460815e-06], ['"tree-ssa-loop-manip.h"', 2.598833643460815e-06], ['"tree-ssa-loop-niter.h"', 2.598833643460815e-06], ['"tree-ssa-dce.h"', 2.598833643460815e-06], ['"tree-data-ref.h"', 2.598833643460815e-06], ['interchange:', 2.598833643460815e-06], ['steps:', 2.598833643460815e-06], ['loop_k,', 2.598833643460815e-06], ['loop_i>.', 2.598833643460815e-06], ['pair.', 2.598833643460815e-06], ['<loop_k,', 2.598833643460815e-06], ['loop_i,', 2.598833643460815e-06], ['loop_j,', 2.598833643460815e-06], ['loop_j>', 2.598833643460815e-06], ['we:', 2.598833643460815e-06], ['MAX_NUM_STMT', 2.598833643460815e-06], ['(PARAM_LOOP_INTERCHANGE_MAX_NUM_STMTS))', 2.598833643460815e-06], ['MAX_DATAREFS', 2.598833643460815e-06], ['(PARAM_LOOP_MAX_DATAREFS_FOR_DATADEPS))', 2.598833643460815e-06], ['OUTER_STRIDE_RATIO', 2.598833643460815e-06], ['(PARAM_LOOP_INTERCHANGE_STRIDE_RATIO))', 2.598833643460815e-06], ['((OUTER_STRIDE_RATIO)', 2.598833643460815e-06], ['Loops', 2.598833643460815e-06], ['DR_ACCESS_STRIDE(dr)', 2.598833643460815e-06], ['((vec<tree>', 2.598833643460815e-06], ['dr->aux)', 2.598833643460815e-06], ['init_val;', 2.598833643460815e-06], ['of)', 2.598833643460815e-06], ['init_val.', 2.598833643460815e-06], ['init_expr;', 2.598833643460815e-06], ['step;', 2.598833643460815e-06], ['*induction_p;', 2.598833643460815e-06], ['Enum', 2.598833643460815e-06], ['SIMPLE_RTYPE,', 2.598833643460815e-06], ['DOUBLE_RTYPE', 2.598833643460815e-06], ['*phi;', 2.598833643460815e-06], ['*lcssa_phi;', 2.598833643460815e-06], ['*producer;', 2.598833643460815e-06], ['init_ref;', 2.598833643460815e-06], ['fini_ref;', 2.598833643460815e-06], ['*reduction_p;', 2.598833643460815e-06], ['RE.', 2.598833643460815e-06], ['SIMPLE_RTYPE)', 2.598833643460815e-06], ['print_gimple_stmt', 2.598833643460815e-06], ['re->phi,', 2.598833643460815e-06], ["LOOP's", 2.598833643460815e-06], ['iv)', 2.598833643460815e-06], ['Induction:', 2.598833643460815e-06], ['iv->init_expr,', 2.598833643460815e-06], ['iv->step,', 2.598833643460815e-06], ['"}_%d\\n",', 2.598833643460815e-06], ['loop->num);', 2.598833643460815e-06], ['~loop_cand', 2.598833643460815e-06], ['find_reduction_by_stmt', 2.598833643460815e-06], ['(reduction_p);', 2.598833643460815e-06], ['analyze_iloop_reduction_var', 2.598833643460815e-06], ['analyze_oloop_reduction_var', 2.598833643460815e-06], ['analyze_induction_var', 2.598833643460815e-06], ['analyze_carried_vars', 2.598833643460815e-06], ['analyze_lcssa_phis', 2.598833643460815e-06], ['can_interchange_p', 2.598833643460815e-06], ['undo_simple_reduction', 2.598833643460815e-06], ['(reduction_p,', 2.598833643460815e-06], ['bitmap);', 2.598833643460815e-06], ['*m_loop;', 2.598833643460815e-06], ['cand', 2.598833643460815e-06], ['*m_outer;', 2.598833643460815e-06], ['vec<induction_p>', 2.598833643460815e-06], ['m_inductions;', 2.598833643460815e-06], ['vec<reduction_p>', 2.598833643460815e-06], ['m_reductions;', 2.598833643460815e-06], ['vec<gphi', 2.598833643460815e-06], ['m_lcssa_nodes;', 2.598833643460815e-06], ['m_exit;', 2.598833643460815e-06], ['*m_bbs;', 2.598833643460815e-06], ['Inner', 2.598833643460815e-06], ["loops'", 2.598833643460815e-06], ['m_num_stmts;', 2.598833643460815e-06], ['m_const_init_reduc;', 2.598833643460815e-06], ['loop_cand::loop_cand', 2.598833643460815e-06], ['m_loop', 2.598833643460815e-06], ['m_outer', 2.598833643460815e-06], ['(outer),', 2.598833643460815e-06], ['m_exit', 2.598833643460815e-06], ['m_bbs', 2.598833643460815e-06], ['(get_loop_body', 2.598833643460815e-06], ['m_num_stmts', 2.598833643460815e-06], ['m_const_init_reduc', 2.598833643460815e-06], ['m_inductions.create', 2.598833643460815e-06], ['m_reductions.create', 2.598833643460815e-06], ['m_lcssa_nodes.create', 2.598833643460815e-06], ['loop_cand::~loop_cand', 2.598833643460815e-06], ['m_inductions.iterate', 2.598833643460815e-06], ['m_inductions.release', 2.598833643460815e-06], ['m_reductions.release', 2.598833643460815e-06], ['m_lcssa_nodes.release', 2.598833643460815e-06], ['(m_bbs);', 2.598833643460815e-06], ['(res)', 2.598833643460815e-06], ['irreducible', 2.598833643460815e-06], ['(edge', 2.598833643460815e-06], ['(e->flags', 2.598833643460815e-06], ['(EDGE_COMPLEX', 2.598833643460815e-06], ['EDGE_IRREDUCIBLE_LOOP));', 2.598833643460815e-06], ['PHI,', 2.598833643460815e-06], ['loop_cand::find_reduction_by_stmt', 2.598833643460815e-06], ['((phi', 2.598833643460815e-06], ['re->lcssa_phi)', 2.598833643460815e-06], ['re->consumer))', 2.598833643460815e-06], ['loop_cand::can_interchange_p', 2.598833643460815e-06], ['innermostin', 2.598833643460815e-06], ['((iloop', 2.598833643460815e-06], ['m_loop->inner', 2.598833643460815e-06], ['iloop->m_loop->inner', 2.598833643460815e-06], ['m_reductions[0]->type', 2.598833643460815e-06], ['UNKNOWN_RTYPE))', 2.598833643460815e-06], ['(m_lcssa_nodes.length', 2.598833643460815e-06], ['allowed_reduction_num)', 2.598833643460815e-06], ['m_loop->num_nodes;', 2.598833643460815e-06], ['m_bbs[i];', 2.598833643460815e-06], ['psi;', 2.598833643460815e-06], ['m_loop)', 2.598833643460815e-06], ['(gimple_has_side_effects', 2.598833643460815e-06], ['m_num_stmts++;', 2.598833643460815e-06], ['cheap', 2.598833643460815e-06], ['(call))', 2.598833643460815e-06], ['!gimple_vuse', 2.598833643460815e-06], ['(iloop->find_reduction_by_stmt', 2.598833643460815e-06], ["How's", 2.598833643460815e-06], ['invariantness?', 2.598833643460815e-06], ['(gimple_assign_single_p', 2.598833643460815e-06], ['gimple_assign_lhs', 2.598833643460815e-06], ['iloop->m_loop))', 2.598833643460815e-06], ['(m_num_stmts', 2.598833643460815e-06], ['MAX_NUM_STMT)', 2.598833643460815e-06], ['edge.', 2.598833643460815e-06], ['m_loop->header', 2.598833643460815e-06], ['iloop->m_exit->dest)', 2.598833643460815e-06], ['(psi', 2.598833643460815e-06], ['(psi);', 2.598833643460815e-06], ['(&psi))', 2.598833643460815e-06], ['(!virtual_operand_p', 2.598833643460815e-06], ['(psi.phi', 2.598833643460815e-06], ['())))', 2.598833643460815e-06], ['Programmers', 2.598833643460815e-06], ['motion)', 2.598833643460815e-06], ['producer.', 2.598833643460815e-06], ['intitialized', 2.598833643460815e-06], ['a[i];', 2.598833643460815e-06], ['consumer.', 2.598833643460815e-06], ['classifies', 2.598833643460815e-06], ['motion', 2.598833643460815e-06], ['loop_cand::classify_simple_reduction', 2.598833643460815e-06], ['*producer,', 2.598833643460815e-06], ['(re->init)', 2.598833643460815e-06], ['(re->init);', 2.598833643460815e-06], ['producer;', 2.598833643460815e-06], ['bb->loop_father', 2.598833643460815e-06], ['m_outer)', 2.598833643460815e-06], ['(producer))', 2.598833643460815e-06], ['(re->init))', 2.598833643460815e-06], ['m_const_init_reduc++;', 2.598833643460815e-06], ['(re->lcssa_phi),', 2.598833643460815e-06], ['m_outer);', 2.598833643460815e-06], ['(!consumer', 2.598833643460815e-06], ['!gimple_store_p', 2.598833643460815e-06], ['(consumer))', 2.598833643460815e-06], ['re->fini_ref', 2.598833643460815e-06], ['gimple_get_lhs', 2.598833643460815e-06], ['re->consumer', 2.598833643460815e-06], ['consumer;', 2.598833643460815e-06], ['(!re->init_ref)', 2.598833643460815e-06], ['(re->init));', 2.598833643460815e-06], ['(re->fini_ref);', 2.598833643460815e-06], ['(re->init_ref', 2.598833643460815e-06], ['(re->init_ref,', 2.598833643460815e-06], ['re->fini_ref,', 2.598833643460815e-06], ['SIMPLE_RTYPE;', 2.598833643460815e-06], ['loop_cand::analyze_iloop_reduction_var', 2.598833643460815e-06], ['*next_def,', 2.598833643460815e-06], ['*single_use', 2.598833643460815e-06], ['be)', 2.598833643460815e-06], ['depicted', 2.598833643460815e-06], ['PHI<init,', 2.598833643460815e-06], ['<--', 2.598833643460815e-06], ['NEXT', 2.598833643460815e-06], ['OTHER', 2.598833643460815e-06], ['OPERANDS.', 2.598833643460815e-06], ['VAR/NEXT', 2.598833643460815e-06], ['stored.', 2.598833643460815e-06], ['conditions,', 2.598833643460815e-06], ['restrictions', 2.598833643460815e-06], ['box.', 2.598833643460815e-06], ['reassociation', 2.598833643460815e-06], ['operator;', 2.598833643460815e-06], ['NEXT.', 2.598833643460815e-06], ['&single_use)', 2.598833643460815e-06], ['left-associative', 2.598833643460815e-06], ['associate', 2.598833643460815e-06], ['*ass', 2.598833643460815e-06], ['(single_use))', 2.598833643460815e-06], ['(ass);', 2.598833643460815e-06], ['(associative_tree_code', 2.598833643460815e-06], ['use_p->use', 2.598833643460815e-06], ['gimple_assign_rhs1_ptr', 2.598833643460815e-06], ['(ass)))', 2.598833643460815e-06], ['(FLOAT_TYPE_P', 2.598833643460815e-06], ['flag_associative_math))', 2.598833643460815e-06], ['feeding', 2.598833643460815e-06], ['op.', 2.598833643460815e-06], ['(single_use', 2.598833643460815e-06], ['!check_reduction_path', 2.598833643460815e-06], ['(dump_user_location_t', 2.598833643460815e-06], ['phi,', 2.598833643460815e-06], ['next,', 2.598833643460815e-06], ['moment,', 2.598833643460815e-06], ['s[i]', 2.598833643460815e-06], ['loop_cand::analyze_oloop_reduction_var', 2.598833643460815e-06], ['*iloop,', 2.598833643460815e-06], ['*next_def;', 2.598833643460815e-06], ['inner_re', 2.598833643460815e-06], ['iloop->m_reductions.iterate', 2.598833643460815e-06], ['&inner_re);', 2.598833643460815e-06], ['(inner_re->init', 2.598833643460815e-06], ['(inner_re->init,', 2.598833643460815e-06], ['(inner_re', 2.598833643460815e-06], ['inner_re->producer', 2.598833643460815e-06], ['(next_def', 2.598833643460815e-06], ['inner_re->lcssa_phi)', 2.598833643460815e-06], ['&stmt)', 2.598833643460815e-06], ['inner_re->phi)', 2.598833643460815e-06], ['phi.', 2.598833643460815e-06], ['(lcssa_phi', 2.598833643460815e-06], ['CHREC.', 2.598833643460815e-06], ['loop_cand::analyze_induction_var', 2.598833643460815e-06], ['chrec)', 2.598833643460815e-06], ['(tree_does_not_contain_chrecs', 2.598833643460815e-06], ['Punt', 2.598833643460815e-06], ['invariants', 2.598833643460815e-06], ['honoring', 2.598833643460815e-06], ['0.0', 2.598833643460815e-06], ['-0.0.', 2.598833643460815e-06], ['SNaNs', 2.598833643460815e-06], ['exception.', 2.598833643460815e-06], ['(HONOR_SIGNED_ZEROS', 2.598833643460815e-06], ['HONOR_SNANS', 2.598833643460815e-06], ['chrec;', 2.598833643460815e-06], ['POLYNOMIAL_CHREC', 2.598833643460815e-06], ['CHREC_VARIABLE', 2.598833643460815e-06], ['m_loop->num', 2.598833643460815e-06], ['(CHREC_LEFT', 2.598833643460815e-06], ['CHREC_RIGHT', 2.598833643460815e-06], ['iv);', 2.598833643460815e-06], ['loop_cand::analyze_carried_vars', 2.598833643460815e-06], ['(m_outer);', 2.598833643460815e-06], ['"\\nLoop(%d)', 2.598833643460815e-06], ['vars:\\n",', 2.598833643460815e-06], ['m_loop->num);', 2.598833643460815e-06], ['PHI_RESULT', 2.598833643460815e-06], ['(chrec_contains_undetermined', 2.598833643460815e-06], ['chrec_contains_symbols_defined_in_loop', 2.598833643460815e-06], ['(chrec,', 2.598833643460815e-06], ['m_outer->num))', 2.598833643460815e-06], ['!analyze_oloop_reduction_var', 2.598833643460815e-06], ['!analyze_iloop_reduction_var', 2.598833643460815e-06], ['(!analyze_induction_var', 2.598833643460815e-06], ['chrec))', 2.598833643460815e-06], ['successfully.', 2.598833643460815e-06], ['loop_cand::analyze_lcssa_phis', 2.598833643460815e-06], ['(m_exit->dest);', 2.598833643460815e-06], ['(phi)))', 2.598833643460815e-06], ['(!find_reduction_by_stmt', 2.598833643460815e-06], ['(phi))', 2.598833643460815e-06], ['intialized', 2.598833643460815e-06], ['Problem', 2.598833643460815e-06], ['(gimple_seq', 2.598833643460815e-06], ['*stmts,', 2.598833643460815e-06], ['*consumer)', 2.598833643460815e-06], ['auto_vec<gimple', 2.598833643460815e-06], ['4>', 2.598833643460815e-06], ['*def_stmt;', 2.598833643460815e-06], ['bb.', 2.598833643460815e-06], ['(gsi),', 2.598833643460815e-06], ['DFS', 2.598833643460815e-06], ['depended', 2.598833643460815e-06], ['(!worklist.is_empty', 2.598833643460815e-06], ['worklist.pop', 2.598833643460815e-06], ['FOR_EACH_SSA_USE_OPERAND', 2.598833643460815e-06], ['def_stmt', 2.598833643460815e-06], ['(USE_FROM_PTR', 2.598833643460815e-06], ['(use_p));', 2.598833643460815e-06], ['gimple_plf', 2.598833643460815e-06], ['(def_stmt,', 2.598833643460815e-06], ['(def_stmt);', 2.598833643460815e-06], ['(gsi)', 2.598833643460815e-06], ['(gsi))', 2.598833643460815e-06], ['consumer;)', 2.598833643460815e-06], ['(gimple_plf', 2.598833643460815e-06], ['(stmts,', 2.598833643460815e-06], ['write,', 2.598833643460815e-06], ['phi<init,', 2.598833643460815e-06], ['phi<next>', 2.598833643460815e-06], ['phi<0.0,', 2.598833643460815e-06], ['!first_iteration', 2.598833643460815e-06], ['0.0;', 2.598833643460815e-06], ['DCE_SEEDS.', 2.598833643460815e-06], ['loop_cand::undo_simple_reduction', 2.598833643460815e-06], ['dce_seeds)', 2.598833643460815e-06], ['new_var;', 2.598833643460815e-06], ['(re->producer', 2.598833643460815e-06], ['(re->producer,', 2.598833643460815e-06], ['re->producer);', 2.598833643460815e-06], ['re->init;', 2.598833643460815e-06], ['"MEM_REF[idx]"', 2.598833643460815e-06], ['depends.', 2.598833643460815e-06], ['(re->consumer),', 2.598833643460815e-06], ['re->consumer);', 2.598833643460815e-06], ['TMP.', 2.598833643460815e-06], ['re->init_ref);', 2.598833643460815e-06], ['CONST', 2.598833643460815e-06], ['iteration.', 2.598833643460815e-06], ['iv', 2.598833643460815e-06], ['m_inductions[0];', 2.598833643460815e-06], ['iv->init_val);', 2.598833643460815e-06], ['(new_var,', 2.598833643460815e-06], ['re->init);', 2.598833643460815e-06], ['(&to,', 2.598833643460815e-06], ['re->var)', 2.598833643460815e-06], ['iterator)', 2.598833643460815e-06], ["next's", 2.598833643460815e-06], ['def.', 2.598833643460815e-06], ['(re->consumer));', 2.598833643460815e-06], ['gimple_assign_set_rhs1', 2.598833643460815e-06], ['re->next);', 2.598833643460815e-06], ['gsi_move_after', 2.598833643460815e-06], ['(re->lcssa_phi)));', 2.598833643460815e-06], ['auxiliary', 2.598833643460815e-06], ['(dr->aux', 2.598833643460815e-06], ['(vec<struct', 2.598833643460815e-06], ['m_loop_nest', 2.598833643460815e-06], ['m_niters_iv_var', 2.598833643460815e-06], ['m_dce_seeds', 2.598833643460815e-06], ['(BITMAP_ALLOC', 2.598833643460815e-06], ['(NULL))', 2.598833643460815e-06], ['~tree_loop_interchange', 2.598833643460815e-06], ['BITMAP_FREE', 2.598833643460815e-06], ['(vec<data_reference_p>,', 2.598833643460815e-06], ['vec<data_reference_p>,', 2.598833643460815e-06], ['valid_data_dependences', 2.598833643460815e-06], ['ongoing.', 2.598833643460815e-06], ['vec<struct', 2.598833643460815e-06], ['m_loop_nest;', 2.598833643460815e-06], ['3-level', 2.598833643460815e-06], ['skipped.', 2.598833643460815e-06], ['m_niters_iv_var;', 2.598833643460815e-06], ['Bitmap', 2.598833643460815e-06], ['m_dce_seeds;', 2.598833643460815e-06], ["refs'", 2.598833643460815e-06], ['DDRS', 2.598833643460815e-06], ['tree_loop_interchange::update_data_info', 2.598833643460815e-06], ['i_idx);', 2.598833643460815e-06], ['((*stride)[i_idx],', 2.598833643460815e-06], ['(*stride)[o_idx]);', 2.598833643460815e-06], ['(dist_vect[i_idx],', 2.598833643460815e-06], ['dist_vect[o_idx]);', 2.598833643460815e-06], ['relations,', 2.598833643460815e-06], ['I_IDX/O_IDX.', 2.598833643460815e-06], ['Theoretically,', 2.598833643460815e-06], ['dist', 2.598833643460815e-06], ['interchanging,', 2.598833643460815e-06], ['leftmost', 2.598833643460815e-06], ["non-'='", 2.598833643460815e-06], ['direction.', 2.598833643460815e-06], ['Practically,', 2.598833643460815e-06], ['tree_loop_interchange::valid_data_dependences', 2.598833643460815e-06], ['no-dependence', 2.598833643460815e-06], ['dependence_level', 2.598833643460815e-06], ['(dist_vect,', 2.598833643460815e-06], ['dependence.', 2.598833643460815e-06], ['[oloop,', 2.598833643460815e-06], ['iloop]', 2.598833643460815e-06], ['i_idx)', 2.598833643460815e-06], ['i_idx/o_idx', 2.598833643460815e-06], ["'='", 2.598833643460815e-06], ["'<'.", 2.598833643460815e-06], ['(dist_vect[i_idx]', 2.598833643460815e-06], ['dist_vect[o_idx]', 2.598833643460815e-06], ['OLOOP.', 2.598833643460815e-06], ['tree_loop_interchange::interchange_loops', 2.598833643460815e-06], ['&iloop,', 2.598833643460815e-06], ['&oloop)', 2.598833643460815e-06], ['Undo', 2.598833643460815e-06], ['iloop.m_reductions.iterate', 2.598833643460815e-06], ['(re->producer)', 2.598833643460815e-06], ['iloop.undo_simple_reduction', 2.598833643460815e-06], ['(re,', 2.598833643460815e-06], ['m_dce_seeds);', 2.598833643460815e-06], ['reset', 2.598833643460815e-06], ['oloop.m_reductions.iterate', 2.598833643460815e-06], ['DOUBLE_RTYPE);', 2.598833643460815e-06], ['m_loop_nest[0];', 2.598833643460815e-06], ['instantiate_below', 2.598833643460815e-06], ['(loop_nest)->src);', 2.598833643460815e-06], ['(i_niters),', 2.598833643460815e-06], ['(oloop.m_loop', 2.598833643460815e-06], ['(o_niters),', 2.598833643460815e-06], ['iloop.m_loop,', 2.598833643460815e-06], ['oloop.m_bbs);', 2.598833643460815e-06], ['(oloop,', 2.598833643460815e-06], ['iloop);', 2.598833643460815e-06], ['outer/inner', 2.598833643460815e-06], ['oloop.m_exit,', 2.598833643460815e-06], ['&m_niters_iv_var,', 2.598833643460815e-06], ['(iloop.m_loop,', 2.598833643460815e-06], ['iloop.m_exit,', 2.598833643460815e-06], ['Scrap', 2.598833643460815e-06], ['estimation', 2.598833643460815e-06], ['iloop.m_loop->any_upper_bound', 2.598833643460815e-06], ['iloop.m_loop->any_likely_upper_bound', 2.598833643460815e-06], ['oloop.m_loop->any_upper_bound', 2.598833643460815e-06], ['oloop.m_loop->any_likely_upper_bound', 2.598833643460815e-06], ['scev_reset_htab', 2.598833643460815e-06], ['changed,', 2.598833643460815e-06], ['retaining', 2.598833643460815e-06], ['re-using', 2.598833643460815e-06], ['"wrong"', 2.598833643460815e-06], ['deletes', 2.598833643460815e-06], ['re-initialize', 2.598833643460815e-06], ['nest:', 2.598833643460815e-06], ['(jj', 2.598833643460815e-06], ['jj', 2.598833643460815e-06], ['jj++)', 2.598833643460815e-06], ['(ii', 2.598833643460815e-06], ['ii++)', 2.598833643460815e-06], ['jj;', 2.598833643460815e-06], ['tree_loop_interchange::map_inductions_to_loop', 2.598833643460815e-06], ['&src,', 2.598833643460815e-06], ['&tgt)', 2.598833643460815e-06], ['tgt.m_exit;', 2.598833643460815e-06], ['incr_pos', 2.598833643460815e-06], ['src.m_inductions.iterate', 2.598833643460815e-06], ['*use_stmt,', 2.598833643460815e-06], ['(iv->var);', 2.598833643460815e-06], ['(m_niters_iv_var', 2.598833643460815e-06], ['var_before,', 2.598833643460815e-06], ['(iv->init_expr);', 2.598833643460815e-06], ['(iv->step);', 2.598833643460815e-06], ['create_iv', 2.598833643460815e-06], ['SSA_NAME_VAR', 2.598833643460815e-06], ['(iv->var),', 2.598833643460815e-06], ['tgt.m_loop,', 2.598833643460815e-06], ['&incr_pos,', 2.598833643460815e-06], ['&var_before,', 2.598833643460815e-06], ['(var_before));', 2.598833643460815e-06], ['imm_iter;', 2.598833643460815e-06], ['(use_stmt,', 2.598833643460815e-06], ['imm_iter,', 2.598833643460815e-06], ['imm_iter)', 2.598833643460815e-06], ['var_before);', 2.598833643460815e-06], ['(use_stmt);', 2.598833643460815e-06], ['op_iter;', 2.598833643460815e-06], ['FOR_EACH_PHI_OR_STMT_USE', 2.598833643460815e-06], ['op_iter,', 2.598833643460815e-06], ['USE_FROM_PTR', 2.598833643460815e-06], ['(use)', 2.598833643460815e-06], ['SSA_NAME_IS_DEFAULT_DEF', 2.598833643460815e-06], ['(use))', 2.598833643460815e-06], ['(use));', 2.598833643460815e-06], ['remove_phi_node', 2.598833643460815e-06], ['tree_loop_interchange::move_code_to_inner_loop', 2.598833643460815e-06], ['*outer_bbs)', 2.598833643460815e-06], ['oloop_exit_bb', 2.598833643460815e-06], ['single_exit', 2.598833643460815e-06], ['(outer)->src;', 2.598833643460815e-06], ['gsi,', 2.598833643460815e-06], ['to;', 2.598833643460815e-06], ['outer->num_nodes;', 2.598833643460815e-06], ['outer_bbs[i];', 2.598833643460815e-06], ['header/latch', 2.598833643460815e-06], ['header/latch.', 2.598833643460815e-06], ['outer->header)', 2.598833643460815e-06], ['(inner->header);', 2.598833643460815e-06], ['outer->latch)', 2.598833643460815e-06], ['(inner->latch);', 2.598833643460815e-06], ['exit->src.', 2.598833643460815e-06], ['(inner)->src);', 2.598833643460815e-06], ['(gsi);)', 2.598833643460815e-06], ['(oloop_exit_bb', 2.598833643460815e-06], ['(gsi_last_bb', 2.598833643460815e-06], ['(oloop_exit_bb)))', 2.598833643460815e-06], ['gsi_move_before', 2.598833643460815e-06], ['LOOP_NEST,', 2.598833643460815e-06], ["DR's", 2.598833643460815e-06], ['outer.', 2.598833643460815e-06], ['saves', 2.598833643460815e-06], ['DR->aux.', 2.598833643460815e-06], ['arr[100][100][100];', 2.598833643460815e-06], [';(DR->aux)strides[0]', 2.598833643460815e-06], ['40000', 2.598833643460815e-06], [';(DR->aux)strides[1]', 2.598833643460815e-06], ['400', 2.598833643460815e-06], [';(DR->aux)strides[2]', 2.598833643460815e-06], ['arr[i][j', 2.598833643460815e-06], ['1][k]', 2.598833643460815e-06], ['dr)', 2.598833643460815e-06], ['*strides', 2.598833643460815e-06], ['(dr));', 2.598833643460815e-06], ['bb->loop_father);', 2.598833643460815e-06], ['(ref)', 2.598833643460815e-06], ['DECL_BIT_FIELD', 2.598833643460815e-06], ['bitfields.', 2.598833643460815e-06], ['bitfield', 2.598833643460815e-06], ['(!TREE_OPERAND', 2.598833643460815e-06], ['representative,', 2.598833643460815e-06], ['(DECL_BIT_FIELD_REPRESENTATIVE', 2.598833643460815e-06], ['repr', 2.598833643460815e-06], ['DECL_BIT_FIELD_REPRESENTATIVE', 2.598833643460815e-06], ['(COMPONENT_REF,', 2.598833643460815e-06], ['(repr),', 2.598833643460815e-06], ['repr,', 2.598833643460815e-06], ['punt.', 2.598833643460815e-06], ['scev_base', 2.598833643460815e-06], ['(ref);', 2.598833643460815e-06], ['scev_base);', 2.598833643460815e-06], ['scev);', 2.598833643460815e-06], ['(scev))', 2.598833643460815e-06], ['scev;', 2.598833643460815e-06], ['*expected', 2.598833643460815e-06], ['(sl)', 2.598833643460815e-06], ['*sl_loop', 2.598833643460815e-06], ['(sl_loop', 2.598833643460815e-06], ['expected)', 2.598833643460815e-06], ['(sl));', 2.598833643460815e-06], ['(sl,', 2.598833643460815e-06], ['(loop_nest))', 2.598833643460815e-06], ['*stride;', 2.598833643460815e-06], ['dr);', 2.598833643460815e-06], ['stride->truncate', 2.598833643460815e-06], ['(num_loops);', 2.598833643460815e-06], ['((*stride)[j],', 2.598833643460815e-06], ['(*stride)[num_loops', 2.598833643460815e-06], ['superloop_at_depth', 2.598833643460815e-06], ['loop));', 2.598833643460815e-06], ['LOOP_NEST.', 2.598833643460815e-06], ['(loop_nest)', 2.598833643460815e-06], ['stride->block_remove', 2.598833643460815e-06], ['"Access', 2.598833643460815e-06], ['Strides', 2.598833643460815e-06], ['DRs:\\n");', 2.598833643460815e-06], ['(dr),', 2.598833643460815e-06], ['":\\t\\t<");', 2.598833643460815e-06], ['num_loops;', 2.598833643460815e-06], ['(*stride)[j],', 2.598833643460815e-06], ['",\\t"', 2.598833643460815e-06], ['">\\n");', 2.598833643460815e-06], ['DATAREFS:', 2.598833643460815e-06], ['Access', 2.598833643460815e-06], ['O_IDX.', 2.598833643460815e-06], ['Flags', 2.598833643460815e-06], ['ILOOP,', 2.598833643460815e-06], ['INNMOST_LOOP_P', 2.598833643460815e-06], ['DUMP_INFO_P', 2.598833643460815e-06], ['should_interchange_loops', 2.598833643460815e-06], ['i_stmt_cost,', 2.598833643460815e-06], ['o_stmt_cost,', 2.598833643460815e-06], ['innermost_loops_p,', 2.598833643460815e-06], ['dump_info_p', 2.598833643460815e-06], ['ratio;', 2.598833643460815e-06], ['num_unresolved_drs', 2.598833643460815e-06], ['num_resolved_ok_drs', 2.598833643460815e-06], ['"\\nData', 2.598833643460815e-06], ['strides:\\n\\tmem_ref:\\t\\tiloop\\toloop\\n");', 2.598833643460815e-06], ['iloop_stride', 2.598833643460815e-06], ['(*stride)[i_idx],', 2.598833643460815e-06], ['oloop_stride', 2.598833643460815e-06], ['(*stride)[o_idx];', 2.598833643460815e-06], ['subloops.', 2.598833643460815e-06], ['((*stride)[j]))', 2.598833643460815e-06], ['(iloop_stride))', 2.598833643460815e-06], ['num_old_inv_drs++;', 2.598833643460815e-06], ['(oloop_stride))', 2.598833643460815e-06], ['num_new_inv_drs++;', 2.598833643460815e-06], ['(iloop_stride));', 2.598833643460815e-06], ['(oloop_stride));', 2.598833643460815e-06], ['oloop_stride))', 2.598833643460815e-06], ['num_resolved_ok_drs++;', 2.598833643460815e-06], ['iloop_stride))', 2.598833643460815e-06], ['num_resolved_not_ok_drs++;', 2.598833643460815e-06], ['num_unresolved_drs++;', 2.598833643460815e-06], ['(subloop_stride_p)', 2.598833643460815e-06], ['Track', 2.598833643460815e-06], ['before/after', 2.598833643460815e-06], ['(dr)));', 2.598833643460815e-06], ['(all_seq_dr_before_p', 2.598833643460815e-06], ['(all_seq_dr_after_p', 2.598833643460815e-06], ['"\\toverall:\\t\\t");', 2.598833643460815e-06], ['"\\t");', 2.598833643460815e-06], ['"Invariant', 2.598833643460815e-06], ['ref:', 2.598833643460815e-06], ['before(%d),', 2.598833643460815e-06], ['after(%d)\\n",', 2.598833643460815e-06], ['num_old_inv_drs,', 2.598833643460815e-06], ['num_new_inv_drs);', 2.598833643460815e-06], ['"All', 2.598833643460815e-06], ['stride:', 2.598833643460815e-06], ['before(%s),', 2.598833643460815e-06], ['after(%s)\\n",', 2.598833643460815e-06], ['"false",', 2.598833643460815e-06], ['"OK', 2.598833643460815e-06], ['num_resolved_ok_drs);', 2.598833643460815e-06], ['num_resolved_not_ok_drs);', 2.598833643460815e-06], ['"Variable', 2.598833643460815e-06], ['decide:', 2.598833643460815e-06], ['num_unresolved_drs);', 2.598833643460815e-06], ['i_stmt_cost);', 2.598833643460815e-06], ['o_stmt_cost);', 2.598833643460815e-06], ['(num_unresolved_drs', 2.598833643460815e-06], ['(i_stmt_cost', 2.598833643460815e-06], ['i_stmt_cost)', 2.598833643460815e-06], ['innermost_loops_p', 2.598833643460815e-06], ['OUTER_STRIDE_RATIO;', 2.598833643460815e-06], ['locality', 2.598833643460815e-06], ['ratio)))', 2.598833643460815e-06], ['oloop_strides))', 2.598833643460815e-06], ['((!all_seq_dr_before_p', 2.598833643460815e-06], ['num_old_inv_drs)', 2.598833643460815e-06], ['sequential.', 2.598833643460815e-06], ['(num_new_inv_drs', 2.598833643460815e-06], ['!all_seq_dr_before_p', 2.598833643460815e-06], ['tree_loop_interchange::interchange', 2.598833643460815e-06], ['(m_loop_nest[0]);', 2.598833643460815e-06], ['I-th', 2.598833643460815e-06], ['(I+1)-th', 2.598833643460815e-06], ['(!valid_data_dependences', 2.598833643460815e-06], ['iloop', 2.598833643460815e-06], ['(m_loop_nest[i_idx],', 2.598833643460815e-06], ['oloop', 2.598833643460815e-06], ['(m_loop_nest[o_idx],', 2.598833643460815e-06], ['(!iloop.analyze_carried_vars', 2.598833643460815e-06], ['!iloop.analyze_lcssa_phis', 2.598833643460815e-06], ['!oloop.analyze_carried_vars', 2.598833643460815e-06], ['(&iloop)', 2.598833643460815e-06], ['!oloop.analyze_lcssa_phis', 2.598833643460815e-06], ['!iloop.can_interchange_p', 2.598833643460815e-06], ['!oloop.can_interchange_p', 2.598833643460815e-06], ['(&iloop))', 2.598833643460815e-06], ['profit', 2.598833643460815e-06], ['oloop.m_num_stmts;', 2.598833643460815e-06], ['IVOPTs', 2.598833643460815e-06], ['oloop.m_inductions.length', 2.598833643460815e-06], ['cond_expr', 2.598833643460815e-06], ['iloop.m_const_init_reduc', 2.598833643460815e-06], ['(stmt_cost', 2.598833643460815e-06], ['profitability', 2.598833643460815e-06], ['iloop.m_num_stmts,', 2.598833643460815e-06], ['stmt_cost,', 2.598833643460815e-06], ['iloop.m_loop->inner', 2.598833643460815e-06], ['(o_idx', 2.598833643460815e-06], ['simple_dce_from_worklist', 2.598833643460815e-06], ['(changed_p', 2.598833643460815e-06], ['dump_enabled_p', 2.598833643460815e-06], ['"loops', 2.598833643460815e-06], ['nest\\n");', 2.598833643460815e-06], ['changed_p;', 2.598833643460815e-06], ['pass_data_linterchange', 2.598833643460815e-06], ['"linterchange",', 2.598833643460815e-06], ['TV_LINTERCHANGE,', 2.598833643460815e-06], ['(pass_data_linterchange,', 2.598833643460815e-06], ['(m_ctxt);', 2.598833643460815e-06], ['flag_loop_interchange;', 2.598833643460815e-06], ['latch', 2.598833643460815e-06], ['restricts', 2.598833643460815e-06], ['nests:', 2.598833643460815e-06], ['header<---+', 2.598833643460815e-06], ['INNER_LOOP', 2.598833643460815e-06], ['exit--->latch', 2.598833643460815e-06], ['head/exit', 2.598833643460815e-06], ['proper_loop_form_for_interchange', 2.598833643460815e-06], ['**min_outer)', 2.598833643460815e-06], ['exit;', 2.598833643460815e-06], ['(loop->safelen', 2.598833643460815e-06], ['loop->constraints', 2.598833643460815e-06], ['loop->can_be_parallel', 2.598833643460815e-06], ['loop->dont_vectorize', 2.598833643460815e-06], ['loop->force_vectorize', 2.598833643460815e-06], ['loop->in_oacc_kernels_region', 2.598833643460815e-06], ['loop->orig_loop_num', 2.598833643460815e-06], ['loop->simduid', 2.598833643460815e-06], ['latch.', 2.598833643460815e-06], ['loop->num_nodes', 2.598833643460815e-06], ['loop->inner->num_nodes', 2.598833643460815e-06], ['((exit', 2.598833643460815e-06], ['single_dom_exit', 2.598833643460815e-06], ['header/exit', 2.598833643460815e-06], ['(loop->header->succs)', 2.598833643460815e-06], ['!single_succ_p', 2.598833643460815e-06], ['(loop->header)', 2.598833643460815e-06], ['(single_succ_edge', 2.598833643460815e-06], ['(loop->header))', 2.598833643460815e-06], ['(exit->src->succs)', 2.598833643460815e-06], ['!single_pred_p', 2.598833643460815e-06], ['(exit->src)', 2.598833643460815e-06], ['(single_pred_edge', 2.598833643460815e-06], ['(exit->src))))', 2.598833643460815e-06], ['(e0->src', 2.598833643460815e-06], ['e1->src', 2.598833643460815e-06], ['(e0->src->loop_father', 2.598833643460815e-06], ['e1->src->loop_father', 2.598833643460815e-06], ['(e0->dest', 2.598833643460815e-06], ['e1->dest', 2.598833643460815e-06], ['(e0->dest->loop_father', 2.598833643460815e-06], ['e1->dest->loop_father', 2.598833643460815e-06], ['dominate', 2.598833643460815e-06], ['get_loop_body', 2.598833643460815e-06], ['loop->header', 2.598833643460815e-06], ['dominated_by_p', 2.598833643460815e-06], ['(CDI_DOMINATORS,', 2.598833643460815e-06], ['exit->src,', 2.598833643460815e-06], ['(gsi)))', 2.598833643460815e-06], ['(!niters', 2.598833643460815e-06], ['(niters))', 2.598833643460815e-06], ['(loop_p', 2.598833643460815e-06], ['(*min_outer,', 2.598833643460815e-06], ['loop2);', 2.598833643460815e-06], ['(loop2))', 2.598833643460815e-06], ['(loop2),', 2.598833643460815e-06], ['(!evolution_function_is_invariant_p', 2.598833643460815e-06], ['(niters,', 2.598833643460815e-06], ['loop2->num))', 2.598833643460815e-06], ['*min_outer', 2.598833643460815e-06], ['loop2;', 2.598833643460815e-06], ['[INNERMOST,', 2.598833643460815e-06], ['LOOP_NEST]', 2.598833643460815e-06], ['should_interchange_loop_nest', 2.598833643460815e-06], ['(idx', 2.598833643460815e-06], ['idx--)', 2.598833643460815e-06], ['(idx,', 2.598833643460815e-06], ['false))', 2.598833643460815e-06], ['DATAREFS,', 2.598833643460815e-06], ['instantly.', 2.598833643460815e-06], ['(vec<loop_p>', 2.598833643460815e-06], ['loop_nest,', 2.598833643460815e-06], ['*b;', 2.598833643460815e-06], ['loop_nest.last', 2.598833643460815e-06], ['&a);', 2.598833643460815e-06], ['a_outer_p', 2.598833643460815e-06], ['(a))->loop_father', 2.598833643460815e-06], ['(j,', 2.598833643460815e-06], ['&b);', 2.598833643460815e-06], ['(DR_IS_WRITE', 2.598833643460815e-06], ['(b))->loop_father', 2.598833643460815e-06], ['ddr_p', 2.598833643460815e-06], ['initialize_data_dependence_relation', 2.598833643460815e-06], ['loop_nest);', 2.598833643460815e-06], ['ddrs->safe_push', 2.598833643460815e-06], ['compute_affine_dependence', 2.598833643460815e-06], ['loop_nest[0]);', 2.598833643460815e-06], ['classic', 2.598833643460815e-06], ['chrec_dont_know', 2.598833643460815e-06], ['DDR_NUM_DIR_VECTS', 2.598833643460815e-06], ['chrec_known', 2.598833643460815e-06], ['b_outer_p))', 2.598833643460815e-06], ['(dr))))', 2.598833643460815e-06], ['datarefs[j++]', 2.598833643460815e-06], ['(dr->aux)', 2.598833643460815e-06], ['free_data_ref', 2.598833643460815e-06], ['datarefs.truncate', 2.598833643460815e-06], ['shrink', 2.598833643460815e-06], ["block's", 2.598833643460815e-06], ['*datarefs)', 2.598833643460815e-06], ['*bb_refs;', 2.598833643460815e-06], ['get_loop_body_in_dom_order', 2.598833643460815e-06], ['bbs[i]->aux', 2.598833643460815e-06], ['Shrink', 2.598833643460815e-06], ['(find_data_references_in_bb', 2.598833643460815e-06], ['bb_refs)', 2.598833643460815e-06], ['chrec_dont_know)', 2.598833643460815e-06], ['bb->loop_father->inner;', 2.598833643460815e-06], ['!loop_nest->inner)', 2.598833643460815e-06], ['(bb_refs->is_empty', 2.598833643460815e-06], ['(!bb->aux)', 2.598833643460815e-06], ['bb->aux;', 2.598833643460815e-06], ['datarefs->safe_splice', 2.598833643460815e-06], ['succeed,', 2.598833643460815e-06], ['LOOP_NEST;', 2.598833643460815e-06], ['imperfect', 2.598833643460815e-06], ['initializing/finalizing', 2.598833643460815e-06], ['sinve', 2.598833643460815e-06], ['prepare_perfect_loop_nest', 2.598833643460815e-06], ['*start_loop', 2.598833643460815e-06], ['loops_for_fn', 2.598833643460815e-06], ['(cfun)->tree_root;', 2.598833643460815e-06], ['outer*/', 2.598833643460815e-06], ['(loop->num', 2.598833643460815e-06], ['loop->inner', 2.598833643460815e-06], ['(outermost,', 2.598833643460815e-06], ['(!proper_loop_form_for_interchange', 2.598833643460815e-06], ['&outermost))', 2.598833643460815e-06], ['sibling', 2.598833643460815e-06], ['(loop->next', 2.598833643460815e-06], ['!start_loop->inner)', 2.598833643460815e-06], ['datarefs);', 2.598833643460815e-06], ['datarefs->is_empty', 2.598833643460815e-06], ['datarefs->length', 2.598833643460815e-06], ['MAX_DATAREFS)', 2.598833643460815e-06], ['(!start_loop)', 2.598833643460815e-06], ['(!should_interchange_loop_nest', 2.598833643460815e-06], ['*datarefs))', 2.598833643460815e-06], ['start_loop.', 2.598833643460815e-06], ['loop_nest->truncate', 2.598833643460815e-06], ['(find_loop_nest', 2.598833643460815e-06], ['(*loop_nest,', 2.598833643460815e-06], ['"\\nConsider', 2.598833643460815e-06], ['loop_nest<%d', 2.598833643460815e-06], ['%d>\\n",', 2.598833643460815e-06], ['start_loop->num,', 2.598833643460815e-06], ['innermost->num);', 2.598833643460815e-06], ['(*datarefs);', 2.598833643460815e-06], ['(*ddrs);', 2.598833643460815e-06], ['*ddrs', 2.598833643460815e-06], ['stripped.', 2.598833643460815e-06], ['start_loop->inner;', 2.598833643460815e-06], ['(start_loop', 2.598833643460815e-06], ['start_loop->inner);', 2.598833643460815e-06], ['pass_linterchange::execute', 2.598833643460815e-06], ['(fun)', 2.598833643460815e-06], ['LI_ONLY_INNERMOST)', 2.598833643460815e-06], ['datarefs', 2.598833643460815e-06], ['ddrs', 2.598833643460815e-06], ['(prepare_perfect_loop_nest', 2.598833643460815e-06], ['&loop_nest,', 2.598833643460815e-06], ['&datarefs,', 2.598833643460815e-06], ['&ddrs))', 2.598833643460815e-06], ['loop_interchange', 2.598833643460815e-06], ['loop_interchange.interchange', 2.598833643460815e-06], ['(datarefs,', 2.598833643460815e-06], ['(ddrs);', 2.598833643460815e-06], ['loop_nest.release', 2.598833643460815e-06], ['(TODO_update_ssa_only_virtuals)', 2.598833643460815e-06], ['make_pass_linterchange', 2.598833643460815e-06], ['d-convert.cc', 2.598833643460815e-06], ['d_truthvalue_conversion,', 2.598833643460815e-06], ['op1)', 2.598833643460815e-06], ['type0,', 2.598833643460815e-06], ['type1', 2.598833643460815e-06], ['NON_LVALUE_EXPRs,', 2.598833643460815e-06], ['pointer/int', 2.598833643460815e-06], ['(type1)', 2.598833643460815e-06], ['integral,', 2.598833643460815e-06], ['unsigned/signed', 2.598833643460815e-06], ['precisions', 2.598833643460815e-06], ['differ.', 2.598833643460815e-06], ['(result_type)', 2.598833643460815e-06], ['op0);', 2.598833643460815e-06], ['!DECL_WEAK', 2.598833643460815e-06], ['truth-value,', 2.598833643460815e-06], ['purpose.', 2.598833643460815e-06], ['TRUTH_AND_EXPR:', 2.598833643460815e-06], ['TRUTH_OR_EXPR:', 2.598833643460815e-06], ['TRUTH_XOR_EXPR:', 2.598833643460815e-06], ['TRUTH_NOT_EXPR:', 2.598833643460815e-06], ['INTEGER_CST:', 2.598833643460815e-06], ['REAL_CST:', 2.598833643460815e-06], ['&TREE_REAL_CST', 2.598833643460815e-06], ['&dconst0)', 2.598833643460815e-06], ['(decl_with_nonnull_addr_p', 2.598833643460815e-06], ['%<true%>",', 2.598833643460815e-06], ['COMPLEX_EXPR:', 2.598833643460815e-06], ['FLOAT_EXPR:', 2.598833643460815e-06], ['LROTATE_EXPR:', 2.598833643460815e-06], ['RROTATE_EXPR:', 2.598833643460815e-06], ['arms', 2.598833643460815e-06], ['fold_build3', 2.598833643460815e-06], ['cancel', 2.598833643460815e-06], ['REFERENCE_TYPE,', 2.598833643460815e-06], ["`default_conversion'", 2.598833643460815e-06], ['behave.', 2.598833643460815e-06], ['narrowing', 2.598833643460815e-06], ['0))))', 2.598833643460815e-06], ['(real_part', 2.598833643460815e-06], ['(t)),', 2.598833643460815e-06], ['(imaginary_part', 2.598833643460815e-06], ['*invalid_conv_diag', 2.598833643460815e-06], ['targetm.invalid_conversion', 2.598833643460815e-06], ['(invalid_conv_diag)', 2.598833643460815e-06], ['invalid_conv_diag);', 2.598833643460815e-06], ['targetm.convert_to_type', 2.598833643460815e-06], ['ERROR_MARK)', 2.598833643460815e-06], ['VOID_TYPE)', 2.598833643460815e-06], ['("void', 2.598833643460815e-06], ['ought', 2.598833643460815e-06], ['be");', 2.598833643460815e-06], ['ENUMERAL_TYPE:', 2.598833643460815e-06], ['(e))', 2.598833643460815e-06], ['widen/truncate', 2.598833643460815e-06], ['utype,', 2.598833643460815e-06], ['(convert_to_pointer', 2.598833643460815e-06], ['(IMAGPART_EXPR,', 2.598833643460815e-06], ['(convert_to_real', 2.598833643460815e-06], ['(etype))', 2.598833643460815e-06], ['(COMPLEX_EXPR,', 2.598833643460815e-06], ['expr));', 2.598833643460815e-06], ['(convert_to_complex', 2.598833643460815e-06], ['(convert_to_vector', 2.598833643460815e-06], ['UNION_TYPE:', 2.598833643460815e-06], ['(lang_hooks.types_compatible_p', 2.598833643460815e-06], ['("conversion', 2.598833643460815e-06], ['non-scalar', 2.598833643460815e-06], ['requested");', 2.598833643460815e-06], ['(totype', 2.598833643460815e-06], ['TOTYPE.', 2.598833643460815e-06], ['totype))', 2.598833643460815e-06], ['(ebtype->ty)', 2.598833643460815e-06], ['(delegate_method', 2.598833643460815e-06], ['<delegate>.ptr', 2.598833643460815e-06], ['*)<delegate>.', 2.598833643460815e-06], ['Allowed', 2.598833643460815e-06], ['*cdfrom', 2.598833643460815e-06], ['ebtype->isClassHandle', 2.598833643460815e-06], ['*cdto', 2.598833643460815e-06], ['tbtype->isClassHandle', 2.598833643460815e-06], ['(cdto->isBaseOf', 2.598833643460815e-06], ['(cdfrom,', 2.598833643460815e-06], ['OFFSET_RUNTIME)', 2.598833643460815e-06], ['interface:', 2.598833643460815e-06], ['(offset)', 2.598833643460815e-06], ['OFFSET_FWDREF);', 2.598833643460815e-06], ['null_pointer_node));', 2.598833643460815e-06], ['(cdfrom->isCPPclass', 2.598833643460815e-06], ['Downcasting', 2.598833643460815e-06], ['(cdto->isCPPclass', 2.598833643460815e-06], ['class/non-C++', 2.598833643460815e-06], ['run-time,', 2.598833643460815e-06], ['cdfrom->isInterfaceDeclaration', 2.598833643460815e-06], ['LIBCALL_INTERFACE_CAST', 2.598833643460815e-06], ['LIBCALL_DYNAMIC_CAST;', 2.598833643460815e-06], ['(cdto)));', 2.598833643460815e-06], ['ebtype)->dim->toInteger', 2.598833643460815e-06], ['(tbtype->nextOf', 2.598833643460815e-06], ['((dim', 2.598833643460815e-06], ['up",', 2.598833643460815e-06], ['tsize;', 2.598833643460815e-06], ['(dim),', 2.598833643460815e-06], ['tvoid->size()', 2.598833643460815e-06], ['fsize', 2.598833643460815e-06], ['(fsize', 2.598833643460815e-06], ['tsize)', 2.598833643460815e-06], ['(LIBCALL_ARRAYCAST,', 2.598833643460815e-06], ['(tsize),', 2.598833643460815e-06], ['(fsize),', 2.598833643460815e-06], ['(ebtype->isString', 2.598833643460815e-06], ['tbtype->isString', 2.598833643460815e-06], ['Else,', 2.598833643460815e-06], ['Tnull:', 2.598833643460815e-06], ['(tbtype->size', 2.598833643460815e-06], ['ebtype->size', 2.598833643460815e-06], ['non-imaginary', 2.598833643460815e-06], ['(!ebtype->iscomplex', 2.598833643460815e-06], ['!tbtype->iscomplex', 2.598833643460815e-06], ['(ebtype->isimaginary', 2.598833643460815e-06], ['tbtype->isimaginary', 2.598833643460815e-06], ['ebtype->toChars', 2.598833643460815e-06], ['tbtype->toChars', 2.598833643460815e-06], ['(tbtype)));', 2.598833643460815e-06], ['STRING_CST);', 2.598833643460815e-06], ['semantics', 2.598833643460815e-06], ['&array[0])', 2.598833643460815e-06], ['INIT_EXPR.', 2.598833643460815e-06], ['dimensioned', 2.598833643460815e-06], ['Tsarrays.', 2.598833643460815e-06], ['(telem,', 2.598833643460815e-06], ['ebtype))', 2.598833643460815e-06], ['*sa_type', 2.598833643460815e-06], ['tbtype;', 2.598833643460815e-06], ['sa_type->dim->toUInteger', 2.598833643460815e-06], ['(count)', 2.598833643460815e-06], ['(RANGE_EXPR,', 2.598833643460815e-06], ['sa_type->next);', 2.598833643460815e-06], ['VAR_DECLs', 2.598833643460815e-06], ['CONSTRUCTORS.', 2.598833643460815e-06], ['Front', 2.598833643460815e-06], ['IntegerExp(0)', 2.598833643460815e-06], ['zero-init', 2.598833643460815e-06], ['((tbtype->ty', 2.598833643460815e-06], ['tbtype->ty', 2.598833643460815e-06], ['ebtype->isintegral', 2.598833643460815e-06], ['decayed', 2.598833643460815e-06], ['(type_passed_as', 2.598833643460815e-06], ['pointers;', 2.598833643460815e-06], ['enumeral', 2.598833643460815e-06], ['truth-value', 2.598833643460815e-06], ['aa.ptr', 2.598833643460815e-06], ['(arr.length', 2.598833643460815e-06], ['arr.ptr)', 2.598833643460815e-06], ['(i.e', 2.598833643460815e-06], ['arr', 2.598833643460815e-06], ['null).', 2.598833643460815e-06], ['(len))', 2.598833643460815e-06], ['(ptr)))', 2.598833643460815e-06], ['(len);', 2.598833643460815e-06], ['TRUTH_OROR', 2.598833643460815e-06], ['pointer?', 2.598833643460815e-06], ['TRUTH_ORIF', 2.598833643460815e-06], ['(obj),', 2.598833643460815e-06], ['passed.', 2.598833643460815e-06], ['Similar', 2.598833643460815e-06], ['**vars)', 2.598833643460815e-06], ['etype))', 2.598833643460815e-06], ['&var);', 2.598833643460815e-06], ['(*vars,', 2.598833643460815e-06], ['(exp->type->arrayOf', 2.598833643460815e-06], ['go-encode-id.cc', 2.598833643460815e-06], ['packagepath', 2.598833643460815e-06], ['encoding/decoding', 2.598833643460815e-06], ['"go-location.h"', 2.598833643460815e-06], ['assembler.', 2.598833643460815e-06], ['char_needs_encoding(char', 2.598833643460815e-06], ['go_id_needs_encoding(const', 2.598833643460815e-06], ['str.begin();', 2.598833643460815e-06], ['str.end();', 2.598833643460815e-06], ['(char_needs_encoding(*p))', 2.598833643460815e-06], ['Pull', 2.598833643460815e-06], ['*PC.', 2.598833643460815e-06], ['fetch_utf8_char(const', 2.598833643460815e-06], ['pc)', 2.598833643460815e-06], ['++len;', 2.598833643460815e-06], ['((1', 2.598833643460815e-06], ['(7', 2.598833643460815e-06], ['0x3f;', 2.598833643460815e-06], ['detail', 2.598833643460815e-06], ['names.cc.', 2.598833643460815e-06], ['Short', 2.598833643460815e-06], ['version:', 2.598833643460815e-06], ['non-ASCII-alphanumeric', 2.598833643460815e-06], ['..UXXXXXXXX,', 2.598833643460815e-06], ['non-alphanumerics', 2.598833643460815e-06], ['".zXX".', 2.598833643460815e-06], ['go_encode_id(const', 2.598833643460815e-06], ['(Lex::is_invalid_identifier(id))', 2.598833643460815e-06], ['..z,', 2.598833643460815e-06], ['..U.', 2.598833643460815e-06], ['go_assert(id.find("..z")', 2.598833643460815e-06], ['go_assert(id.find("..u")', 2.598833643460815e-06], ['go_assert(id.find("..U")', 2.598833643460815e-06], ['id.c_str();', 2.598833643460815e-06], ['id.length();', 2.598833643460815e-06], ['".0"', 2.598833643460815e-06], ['".0",', 2.598833643460815e-06], ['!char_needs_encoding(c))', 2.598833643460815e-06], ['"..z%02x",', 2.598833643460815e-06], ['0x10000)', 2.598833643460815e-06], ['"..u%04x",', 2.598833643460815e-06], ['"..U%08x",', 2.598833643460815e-06], ['(ret.empty())', 2.598833643460815e-06], ["'_';", 2.598833643460815e-06], ['codepoint.', 2.598833643460815e-06], ['insure', 2.598833643460815e-06], ['meaningful.', 2.598833643460815e-06], ['hex_digits_to_unicode_codepoint(const', 2.598833643460815e-06], ['*digits,', 2.598833643460815e-06], ['ndig)', 2.598833643460815e-06], ['ndig;', 2.598833643460815e-06], ['Lex::hex_val(digits[i]);', 2.598833643460815e-06], ['Decode/demangle', 2.598833643460815e-06], ['go_encode_id().', 2.598833643460815e-06], ['unused;', 2.598833643460815e-06], ['appearing', 2.598833643460815e-06], ['traces.', 2.598833643460815e-06], ['go_decode_id(const', 2.598833643460815e-06], ['&encoded)', 2.598833643460815e-06], ['encoded.c_str();', 2.598833643460815e-06], ['encoded.length();', 2.598833643460815e-06], ['(strncmp(p+1,', 2.598833643460815e-06], ['strncmp(p+1,', 2.598833643460815e-06], ['go_selectively_encode_id(const', 2.598833643460815e-06], ['(go_id_needs_encoding(id))', 2.598833643460815e-06], ['go_encode_id(id);', 2.598833643460815e-06], ['std::string();', 2.598833643460815e-06], ['alphanumerics', 2.598833643460815e-06], ['.xNN,', 2.598833643460815e-06], ['go_mangle_struct_tag(const', 2.598833643460815e-06], ['tag.c_str();', 2.598833643460815e-06], ['tag.length();', 2.598833643460815e-06], ['ret.append(p,', 2.598833643460815e-06], ['(!char_needs_encoding(c)', 2.598833643460815e-06], ['".x%02x",', 2.598833643460815e-06], ["`rt'", 2.598833643460815e-06], ['LCT_VOID,', 2.598833643460815e-06], ['LCT_BYTE,', 2.598833643460815e-06], ['LCT_INT,', 2.598833643460815e-06], ['LCT_UINT,', 2.598833643460815e-06], ['LCT_BOOL,', 2.598833643460815e-06], ['LCT_DCHAR,', 2.598833643460815e-06], ['LCT_VOIDPTR,', 2.598833643460815e-06], ['LCT_STRING,', 2.598833643460815e-06], ['LCT_WSTRING,', 2.598833643460815e-06], ['wstring', 2.598833643460815e-06], ['LCT_DSTRING,', 2.598833643460815e-06], ['dstring', 2.598833643460815e-06], ['LCT_SIZE_T,', 2.598833643460815e-06], ['LCT_ASSOCARRAY,', 2.598833643460815e-06], ['void[void]', 2.598833643460815e-06], ['LCT_ARRAY_VOID,', 2.598833643460815e-06], ['LCT_ARRAY_SIZE_T,', 2.598833643460815e-06], ['size_t[]', 2.598833643460815e-06], ['LCT_ARRAY_BYTE,', 2.598833643460815e-06], ['LCT_ARRAY_STRING,', 2.598833643460815e-06], ['string[]', 2.598833643460815e-06], ['LCT_ARRAY_WSTRING,', 2.598833643460815e-06], ['wstring[]', 2.598833643460815e-06], ['LCT_ARRAY_DSTRING,', 2.598833643460815e-06], ['dstring[]', 2.598833643460815e-06], ['LCT_ARRAYARRAY_BYTE,', 2.598833643460815e-06], ['LCT_POINTER_ASSOCARRAY,', 2.598833643460815e-06], ['void[void]*', 2.598833643460815e-06], ['LCT_POINTER_VOIDPTR,', 2.598833643460815e-06], ['LCT_ARRAYPTR_VOID,', 2.598833643460815e-06], ['void[]*', 2.598833643460815e-06], ['LCT_ARRAYPTR_BYTE,', 2.598833643460815e-06], ['byte[]*', 2.598833643460815e-06], ['LCT_TYPEINFO,', 2.598833643460815e-06], ['LCT_CLASSINFO,', 2.598833643460815e-06], ['LCT_OBJECT,', 2.598833643460815e-06], ['LCT_CONST_TYPEINFO,', 2.598833643460815e-06], ['const(TypeInfo)', 2.598833643460815e-06], ['LCT_CONST_CLASSINFO,', 2.598833643460815e-06], ['const(ClassInfo)', 2.598833643460815e-06], ['LCT_END', 2.598833643460815e-06], ['*libcall_types[LCT_END];', 2.598833643460815e-06], ['libcall_decls[LIBCALL_LAST];', 2.598833643460815e-06], ['readily', 2.598833643460815e-06], ['proper,', 2.598833643460815e-06], ['likewise', 2.598833643460815e-06], ['constOf(),', 2.598833643460815e-06], ['arrayOf()', 2.598833643460815e-06], ['(libcall_type', 2.598833643460815e-06], ['(libcall_types[type])', 2.598833643460815e-06], ['LCT_VOID:', 2.598833643460815e-06], ['Type::tvoid;', 2.598833643460815e-06], ['LCT_BYTE:', 2.598833643460815e-06], ['Type::tint8;', 2.598833643460815e-06], ['LCT_INT:', 2.598833643460815e-06], ['LCT_UINT:', 2.598833643460815e-06], ['Type::tuns32;', 2.598833643460815e-06], ['LCT_BOOL:', 2.598833643460815e-06], ['Type::tbool;', 2.598833643460815e-06], ['LCT_DCHAR:', 2.598833643460815e-06], ['Type::tdchar;', 2.598833643460815e-06], ['LCT_VOIDPTR:', 2.598833643460815e-06], ['Type::tvoidptr;', 2.598833643460815e-06], ['LCT_STRING:', 2.598833643460815e-06], ['Type::tstring;', 2.598833643460815e-06], ['LCT_WSTRING:', 2.598833643460815e-06], ['Type::twstring;', 2.598833643460815e-06], ['LCT_DSTRING:', 2.598833643460815e-06], ['Type::tdstring;', 2.598833643460815e-06], ['LCT_SIZE_T:', 2.598833643460815e-06], ['LCT_ASSOCARRAY:', 2.598833643460815e-06], ['TypeAArray::create', 2.598833643460815e-06], ['(Type::tvoid,', 2.598833643460815e-06], ['Type::tvoid);', 2.598833643460815e-06], ['LCT_TYPEINFO:', 2.598833643460815e-06], ['Type::dtypeinfo->type;', 2.598833643460815e-06], ['LCT_CLASSINFO:', 2.598833643460815e-06], ['Type::typeinfoclass->type;', 2.598833643460815e-06], ['LCT_OBJECT:', 2.598833643460815e-06], ['LCT_CONST_TYPEINFO:', 2.598833643460815e-06], ['Type::dtypeinfo->type->constOf', 2.598833643460815e-06], ['LCT_CONST_CLASSINFO:', 2.598833643460815e-06], ['Type::typeinfoclass->type->constOf', 2.598833643460815e-06], ['LCT_ARRAY_VOID:', 2.598833643460815e-06], ['LCT_ARRAY_SIZE_T:', 2.598833643460815e-06], ['Type::tsize_t->arrayOf', 2.598833643460815e-06], ['LCT_ARRAY_BYTE:', 2.598833643460815e-06], ['LCT_ARRAY_STRING:', 2.598833643460815e-06], ['Type::tstring->arrayOf', 2.598833643460815e-06], ['LCT_ARRAY_WSTRING:', 2.598833643460815e-06], ['Type::twstring->arrayOf', 2.598833643460815e-06], ['LCT_ARRAY_DSTRING:', 2.598833643460815e-06], ['Type::tdstring->arrayOf', 2.598833643460815e-06], ['LCT_ARRAYARRAY_BYTE:', 2.598833643460815e-06], ['LCT_POINTER_ASSOCARRAY:', 2.598833643460815e-06], ['(LCT_ASSOCARRAY)->pointerTo', 2.598833643460815e-06], ['LCT_POINTER_VOIDPTR:', 2.598833643460815e-06], ['Type::tvoidptr->arrayOf', 2.598833643460815e-06], ['LCT_ARRAYPTR_VOID:', 2.598833643460815e-06], ['LCT_ARRAYPTR_BYTE:', 2.598833643460815e-06], ['RETURN_TYPE', 2.598833643460815e-06], ['returned,', 2.598833643460815e-06], ['FLAGS', 2.598833643460815e-06], ['NPARAMS', 2.598833643460815e-06], ['return_type,', 2.598833643460815e-06], ["'void'", 2.598833643460815e-06], ['nparams;', 2.598833643460815e-06], ['(libcall_type)', 2.598833643460815e-06], ['(ptype);', 2.598833643460815e-06], ['(get_libcall_type', 2.598833643460815e-06], ['(return_type));', 2.598833643460815e-06], ['(varargs)', 2.598833643460815e-06], ['VISIBILITY_DEFAULT;', 2.598833643460815e-06], ['malloc', 2.598833643460815e-06], ['noreturn.', 2.598833643460815e-06], ['set_call_expr_flags', 2.598833643460815e-06], ['LIBCALL.', 2.598833643460815e-06], ['Library', 2.598833643460815e-06], ['stage,', 2.598833643460815e-06], ['are,', 2.598833643460815e-06], ["`Object'", 2.598833643460815e-06], ["`TypeInfo'.", 2.598833643460815e-06], ['libcall)', 2.598833643460815e-06], ['(libcall_decls[libcall])', 2.598833643460815e-06], ['(libcall)', 2.598833643460815e-06], ['DEF_D_RUNTIME(CODE,', 2.598833643460815e-06], ['FLAGS)', 2.598833643460815e-06], ['LIBCALL_', 2.598833643460815e-06], ['CODE:', 2.598833643460815e-06], ['libcall_decls[libcall]', 2.598833643460815e-06], ['(NAME,', 2.598833643460815e-06], ['FLAGS,', 2.598833643460815e-06], ['PARAMS);', 2.598833643460815e-06], ['DEF_D_RUNTIME', 2.598833643460815e-06], ['LIBCALL,', 2.598833643460815e-06], ['(libcall);', 2.598833643460815e-06], ['knows', 2.598833643460815e-06], ['doing.', 2.598833643460815e-06], ['brig-basic-inst-handler.cc', 2.598833643460815e-06], ['brig_basic_inst_handler::brig_basic_inst_handler', 2.598833643460815e-06], ['tree_element_binary_visitor', 2.598833643460815e-06], ['m_brig_inst', 2.598833643460815e-06], ['(brig_inst)', 2.598833643460815e-06], ['DEF_HSAIL_SAT_BUILTIN(ENUM,', 2.598833643460815e-06], ['BRIG_OPCODE,', 2.598833643460815e-06], ['m_builtin', 2.598833643460815e-06], ['simplest', 2.598833643460815e-06], ['built-ins.', 2.598833643460815e-06], ['(m_builtin,', 2.598833643460815e-06], ['(operand1),', 2.598833643460815e-06], ['&m_brig_inst;', 2.598833643460815e-06], ['m_builtin;', 2.598833643460815e-06], ['shuffle.', 2.598833643460815e-06], ['OPERAND[1]', 2.598833643460815e-06], ['brig_basic_inst_handler::build_shuffle', 2.598833643460815e-06], ['(operands[0])));', 2.598833643460815e-06], ['Offsets', 2.598833643460815e-06], ['spanning', 2.598833643460815e-06], ['"full', 2.598833643460815e-06], ['shuffle"', 2.598833643460815e-06], ['originate', 2.598833643460815e-06], ['*mask_offset_vals', 2.598833643460815e-06], ['input_mask_element_size', 2.598833643460815e-06], ['exact_log2', 2.598833643460815e-06], ['BIT_FIELD_REFs', 2.598833643460815e-06], ['understood', 2.598833643460815e-06], ['mask_operand', 2.598833643460815e-06], ['("shuffle_mask",', 2.598833643460815e-06], ['mask_element_type', 2.598833643460815e-06], ['(input_mask_element_size,', 2.598833643460815e-06], ['mask_element_type,', 2.598833643460815e-06], ['mask_operand,', 2.598833643460815e-06], ['(input_mask_element_size),', 2.598833643460815e-06], ['input_mask_element_size));', 2.598833643460815e-06], ['(mask_offset_vals,', 2.598833643460815e-06], ['offset_vec', 2.598833643460815e-06], ['mask_offset_vals);', 2.598833643460815e-06], ['mask_vec_type,', 2.598833643460815e-06], ['mask_vec,', 2.598833643460815e-06], ['offset_vec);', 2.598833643460815e-06], ['(extracts)', 2.598833643460815e-06], ['OPERANDS[0].', 2.598833643460815e-06], ['brig_basic_inst_handler::build_unpack', 2.598833643460815e-06], ['dest.', 2.598833643460815e-06], ['uppermost', 2.598833643460815e-06], ['src_element_type', 2.598833643460815e-06], ['(src_element_type);', 2.598833643460815e-06], ['*and_mask_vals', 2.598833643460815e-06], ['mask_element;', 2.598833643460815e-06], ['and_mask_element;', 2.598833643460815e-06], ['(and_mask_vals,', 2.598833643460815e-06], ['and_mask_element);', 2.598833643460815e-06], ['and_mask_vec', 2.598833643460815e-06], ['and_mask_vals);', 2.598833643460815e-06], ['perm,', 2.598833643460815e-06], ['and_mask_vec);', 2.598833643460815e-06], ['(cleared))', 2.598833643460815e-06], ['raw_type', 2.598833643460815e-06], ['as_int', 2.598833643460815e-06], ['(raw_type,', 2.598833643460815e-06], ['cleared);', 2.598833643460815e-06], ['(src_element_type)', 2.598833643460815e-06], ['(src_element_type))', 2.598833643460815e-06], ['(as_int,', 2.598833643460815e-06], ['src_element_type);', 2.598833643460815e-06], ['as_int;', 2.598833643460815e-06], ['Packs', 2.598833643460815e-06], ['(inserts)', 2.598833643460815e-06], ['OPERANDS[2].', 2.598833643460815e-06], ['brig_basic_inst_handler::build_pack', 2.598833643460815e-06], ['insertion.', 2.598833643460815e-06], ['Reuse', 2.598833643460815e-06], ["'bitinsert'", 2.598833643460815e-06], ['vecsize', 2.598833643460815e-06], ['(operands[0]))', 2.598833643460815e-06], ['wide_type', 2.598833643460815e-06], ['(vecsize,', 2.598833643460815e-06], ['("src_vect",', 2.598833643460815e-06], ['src_vect);', 2.598833643460815e-06], ['scalar));', 2.598833643460815e-06], ['garbage.', 2.598833643460815e-06], ['well-defined', 2.598833643460815e-06], ['("pos",', 2.598833643460815e-06], ['ewidth', 2.598833643460815e-06], ['element_width);', 2.598833643460815e-06], ['ewidth,', 2.598833643460815e-06], ['("offset",', 2.598833643460815e-06], ['mask_int', 2.598833643460815e-06], ['((uint64_t)', 2.598833643460815e-06], ['element_width)', 2.598833643460815e-06], ['mask_int);', 2.598833643460815e-06], ['("mask",', 2.598833643460815e-06], ['mask));', 2.598833643460815e-06], ['clearing_mask', 2.598833643460815e-06], ['bitoffset));', 2.598833643460815e-06], ['zeroed_element', 2.598833643460815e-06], ['src_vect,', 2.598833643460815e-06], ['clearing_mask);', 2.598833643460815e-06], ['necessary:', 2.598833643460815e-06], ['zero?', 2.598833643460815e-06], ['element_in_position', 2.598833643460815e-06], ['mask),', 2.598833643460815e-06], ['zeroed_element,', 2.598833643460815e-06], ['element_in_position);', 2.598833643460815e-06], ['inserted;', 2.598833643460815e-06], ['unpack{lo,hi}.', 2.598833643460815e-06], ['brig_basic_inst_handler::build_unpack_lo_or_hi', 2.598833643460815e-06], ['BRIG_OPCODE_UNPACKLO)', 2.598833643460815e-06], ['brig_basic_inst_handler::build_inst_expr', 2.598833643460815e-06], ['instr_inner_type', 2.598833643460815e-06], ['arith_type;', 2.598833643460815e-06], ['LSHIFT_EXPR)', 2.598833643460815e-06], ['modulo/clipping', 2.598833643460815e-06], ['amounts', 2.598833643460815e-06], ['tree.def', 2.598833643460815e-06], ['scalar_mask', 2.598833643460815e-06], ['(instr_inner_type,', 2.598833643460815e-06], ['(inner_type)', 2.598833643460815e-06], ['scalar_mask)', 2.598833643460815e-06], ['scalar_mask;', 2.598833643460815e-06], ['(arith_type))', 2.598833643460815e-06], ['instruction;', 2.598833643460815e-06], ['BRIG_OPCODE_MAD', 2.598833643460815e-06], ['BRIG_OPCODE_MAD24)', 2.598833643460815e-06], ['MAD', 2.598833643460815e-06], ['method).', 2.598833643460815e-06], ['WIDEN_MULT_EXPR', 2.598833643460815e-06], ['close,', 2.598833643460815e-06], ['BRIG_OPCODE_MAD24HI)', 2.598833643460815e-06], ['(MULT_HIGHPART_EXPR,', 2.598833643460815e-06], ['build_shuffle', 2.598833643460815e-06], ['BRIG_OPCODE_UNPACKHI)', 2.598833643460815e-06], ['build_unpack_lo_or_hi', 2.598833643460815e-06], ['BRIG_OPCODE_UNPACK)', 2.598833643460815e-06], ['build_unpack', 2.598833643460815e-06], ['build_pack', 2.598833643460815e-06], ['BRIG_OPCODE_NRSQRT)', 2.598833643460815e-06], ['1.0/sqrt', 2.598833643460815e-06], ['compliant.', 2.598833643460815e-06], ['(BRIG_OPCODE_SQRT,', 2.598833643460815e-06], ['BRIG_OPCODE_NRCP)', 2.598833643460815e-06], ['1.0/x', 2.598833643460815e-06], ['BRIG_OPCODE_LANEID', 2.598833643460815e-06], ['BRIG_OPCODE_MAXWAVEID', 2.598833643460815e-06], ['BRIG_OPCODE_WAVEID)', 2.598833643460815e-06], ['now),', 2.598833643460815e-06], ['LANEID,', 2.598833643460815e-06], ['WAVEID', 2.598833643460815e-06], ['MAXWAVEID', 2.598833643460815e-06], ['Deals', 2.598833643460815e-06], ['packing', 2.598833643460815e-06], ['unpacking/packing', 2.598833643460815e-06], ['Delegates', 2.598833643460815e-06], ['build_inst_expr().', 2.598833643460815e-06], ['brig_basic_inst_handler::operator', 2.598833643460815e-06], ['BRIG_OPCODE_NOP)', 2.598833643460815e-06], ['output_count);', 2.598833643460815e-06], ['tree_stl_vec::iterator', 2.598833643460815e-06], ['first_input_i', 2.598833643460815e-06], ['operands.begin', 2.598833643460815e-06], ['++first_input_i;', 2.598833643460815e-06], ['in_operands;', 2.598833643460815e-06], ['in_operands.assign', 2.598833643460815e-06], ['(first_input_i,', 2.598833643460815e-06], ['operands.end', 2.598833643460815e-06], ['brig_inst->type;', 2.598833643460815e-06], ['BRIG_OPCODE_FIRSTBIT', 2.598833643460815e-06], ['BRIG_OPCODE_SAD)', 2.598833643460815e-06], ['HSAIL,', 2.598833643460815e-06], ["argument's", 2.598833643460815e-06], ['instruction/builtin.', 2.598833643460815e-06], ['(in_operands[0]));', 2.598833643460815e-06], ['(!instr_type)', 2.598833643460815e-06], ["opcode's", 2.598833643460815e-06], ['storage-only', 2.598833643460815e-06], ['f16.', 2.598833643460815e-06], ['(brig_inst->opcode)', 2.598833643460815e-06], ['BrigPack8_t', 2.598833643460815e-06], ['BRIG_PACK_NONE;', 2.598833643460815e-06], ['BRIG_PACK_PS', 2.598833643460815e-06], ['BRIG_PACK_PSSAT)', 2.598833643460815e-06], ['in_operands[1]', 2.598833643460815e-06], ['(in_operands[1]);', 2.598833643460815e-06], ['BRIG_PACK_SP', 2.598833643460815e-06], ['BRIG_PACK_SPSAT)', 2.598833643460815e-06], ['in_operands[0]', 2.598833643460815e-06], ['(in_operands[0]);', 2.598833643460815e-06], ['brig_inst_type);', 2.598833643460815e-06], ['BRIG_PACK_PPSAT', 2.598833643460815e-06], ['BRIG_PACK_PSAT)', 2.598833643460815e-06], ['in_operands[0],', 2.598833643460815e-06], ['in_operands[1]);', 2.598833643460815e-06], ['(m_parent.m_cf->m_is_kernel)', 2.598833643460815e-06], ['m_parent.m_cf->m_exit_label);', 2.598833643460815e-06], ['m_parent.m_cf->append_return_stmt', 2.598833643460815e-06], ['scalarization', 2.598833643460815e-06], ['promotion', 2.598833643460815e-06], ['MUL.', 2.598833643460815e-06], ['2x64b', 2.598833643460815e-06], ['CPUs', 2.598833643460815e-06], ['128b', 2.598833643460815e-06], ['modular', 2.598833643460815e-06], ['frontend,', 2.598833643460815e-06], ['legalization', 2.598833643460815e-06], ['datatype.', 2.598833643460815e-06], ['promote', 2.598833643460815e-06], ['s8x8', 2.598833643460815e-06], ['s16x8', 2.598833643460815e-06], ['my', 2.598833643460815e-06], ['x86-64.', 2.598833643460815e-06], ['(in_operands[0],', 2.598833643460815e-06], ['(in_operands[1],', 2.598833643460815e-06], ['scalar_type', 2.598833643460815e-06], ['(BRIG_TYPE_S16);', 2.598833643460815e-06], ['(BRIG_TYPE_S32);', 2.598833643460815e-06], ['(BRIG_TYPE_S64);', 2.598833643460815e-06], ['(promoted_type)', 2.598833643460815e-06], ['operand0', 2.598833643460815e-06], ['operand0_elements.at', 2.598833643460815e-06], ['operand1', 2.598833643460815e-06], ['operand1_elements.at', 2.598833643460815e-06], ['scalar_expr,', 2.598833643460815e-06], ['(scalar_type,', 2.598833643460815e-06], ['scalar_expr));', 2.598833643460815e-06], ["'class'", 2.598833643460815e-06], ['b1', 2.598833643460815e-06], ['BRIG_OPCODE_CLASS)', 2.598833643460815e-06], ['base)->sourceType;', 2.598833643460815e-06], ['build_inst_expr', 2.598833643460815e-06], ['brig_inst_type,', 2.598833643460815e-06], ['in_operands);', 2.598833643460815e-06], ['(instr_expr', 2.598833643460815e-06], ['BRIG_PACK_SS', 2.598833643460815e-06], ['BRIG_PACK_S', 2.598833643460815e-06], ['BRIG_PACK_SSSAT', 2.598833643460815e-06], ['BRIG_PACK_SSAT)', 2.598833643460815e-06], ['_s_', 2.598833643460815e-06], ['_ss_,', 2.598833643460815e-06], ['datapaths.', 2.598833643460815e-06], ['old_value;', 2.598833643460815e-06], ['(brig_inst_type', 2.598833643460815e-06], ['(brig_inst->opcode);', 2.598833643460815e-06], ['(is_fp16_operation)', 2.598833643460815e-06], ['operands[0]));', 2.598833643460815e-06], ['permutation', 2.598833643460815e-06], ['old_value.', 2.598833643460815e-06], ['new_value', 2.598833643460815e-06], ['"new_output");', 2.598833643460815e-06], ['old_value,', 2.598833643460815e-06], ['lower_output', 2.598833643460815e-06], ['"s_output");', 2.598833643460815e-06], ['assign_lower', 2.598833643460815e-06], ['lower_output,', 2.598833643460815e-06], ['(assign_lower);', 2.598833643460815e-06], ['lower_output;', 2.598833643460815e-06], ['broadcasts', 2.598833643460815e-06], ['VEC_OPERAND', 2.598833643460815e-06], ['brig_basic_inst_handler::build_lower_element_broadcast', 2.598833643460815e-06], ['vec_operand)', 2.598833643460815e-06], ['(vec_operand),', 2.598833643460815e-06], ['import-archive.cc', 2.598833643460815e-06], ['armag[]', 2.598833643460815e-06], ["'r',", 2.598833643460815e-06], ["'c',", 2.598833643460815e-06], ['armagt[]', 2.598833643460815e-06], ["'t',", 2.598833643460815e-06], ["'n',", 2.598833643460815e-06], ['armagb[]', 2.598833643460815e-06], ["'b',", 2.598833643460815e-06], ["'g',", 2.598833643460815e-06], ["'f',", 2.598833643460815e-06], ['arfmag[2]', 2.598833643460815e-06], ["'`',", 2.598833643460815e-06], ['fl_magic[8];', 2.598833643460815e-06], ['fl_memoff[20];', 2.598833643460815e-06], ['fl_gstoff[20];', 2.598833643460815e-06], ['fl_gst64off[20];', 2.598833643460815e-06], ['fl_fstmoff[20];', 2.598833643460815e-06], ['fl_lstmoff[20];', 2.598833643460815e-06], ['fl_freeoff[20];', 2.598833643460815e-06], ['text,', 2.598833643460815e-06], ['padded', 2.598833643460815e-06], ['necesary.', 2.598833643460815e-06], ['ar_name[16];', 2.598833643460815e-06], ['ar_uid[6];', 2.598833643460815e-06], ['ar_gid[6];', 2.598833643460815e-06], ['ar_mode[8];', 2.598833643460815e-06], ['ar_size[10];', 2.598833643460815e-06], ['ar_fmag[2];', 2.598833643460815e-06], ['arfmag.', 2.598833643460815e-06], ['ar_size[20];', 2.598833643460815e-06], ['ar_nxtmem[20];', 2.598833643460815e-06], ['ar_prvmem[20];', 2.598833643460815e-06], ['ar_uid[12];', 2.598833643460815e-06], ['ar_gid[12];', 2.598833643460815e-06], ['ar_mode[12];', 2.598833643460815e-06], ['ar_namlen[4];', 2.598833643460815e-06], ['Import::archive_magic_len;', 2.598833643460815e-06], ['BYTES,', 2.598833643460815e-06], ['Import::is_archive_magic(const', 2.598833643460815e-06], ['(memcmp(bytes,', 2.598833643460815e-06], ['armag,', 2.598833643460815e-06], ['Archive_file(const', 2.598833643460815e-06], ['filename_(filename),', 2.598833643460815e-06], ['filesize_(-1),', 2.598833643460815e-06], ['first_member_offset_(0),', 2.598833643460815e-06], ['extended_names_(),', 2.598833643460815e-06], ['is_thin_archive_(false),', 2.598833643460815e-06], ['is_big_archive_(false),', 2.598833643460815e-06], ['nested_archives_()', 2.598833643460815e-06], ['Initialize.', 2.598833643460815e-06], ['initialize();', 2.598833643460815e-06], ['filename()', 2.598833643460815e-06], ['this->filename_;', 2.598833643460815e-06], ['filesize()', 2.598833643460815e-06], ['first_member_offset()', 2.598833643460815e-06], ['this->first_member_offset_;', 2.598833643460815e-06], ['is_thin_archive()', 2.598833643460815e-06], ['this->is_thin_archive_;', 2.598833643460815e-06], ['is_big_archive()', 2.598833643460815e-06], ['this->is_big_archive_;', 2.598833643460815e-06], ['location()', 2.598833643460815e-06], ['read(off_t', 2.598833643460815e-06], ['char*);', 2.598833643460815e-06], ['parse_decimal(const', 2.598833643460815e-06], ['read_header(off_t', 2.598833643460815e-06], ['interpret_header(const', 2.598833643460815e-06], ['get_file_and_offset(off_t', 2.598833643460815e-06], ['(AIX)', 2.598833643460815e-06], ['initialize_big_archive();', 2.598833643460815e-06], ['initialize_archive();', 2.598833643460815e-06], ['read_big_archive_header(off_t', 2.598833643460815e-06], ['read_archive_header(off_t', 2.598833643460815e-06], ['archives', 2.598833643460815e-06], ['Archive_file*>', 2.598833643460815e-06], ['Nested_archive_table;', 2.598833643460815e-06], ['filename_;', 2.598833643460815e-06], ['fd_;', 2.598833643460815e-06], ['filesize_;', 2.598833643460815e-06], ['first_member_offset_;', 2.598833643460815e-06], ['extended_names_;', 2.598833643460815e-06], ['is_thin_archive_;', 2.598833643460815e-06], ['is_big_archive_;', 2.598833643460815e-06], ['location_;', 2.598833643460815e-06], ['archives.', 2.598833643460815e-06], ['Nested_archive_table', 2.598833643460815e-06], ['nested_archives_;', 2.598833643460815e-06], ['Archive_file::initialize()', 2.598833643460815e-06], ['(fstat(this->fd_,', 2.598833643460815e-06], ['&st)', 2.598833643460815e-06], ['this->filesize_', 2.598833643460815e-06], ['st.st_size;', 2.598833643460815e-06], ['buf[sizeof(armagt)];', 2.598833643460815e-06], ['this->is_thin_archive_', 2.598833643460815e-06], ['sizeof(armagb))', 2.598833643460815e-06], ['this->is_big_archive_', 2.598833643460815e-06], ['this->initialize_big_archive();', 2.598833643460815e-06], ['this->initialize_archive();', 2.598833643460815e-06], ['(AIX).', 2.598833643460815e-06], ['Archive_file::initialize_big_archive()', 2.598833643460815e-06], ['flhdr;', 2.598833643460815e-06], ['&flhdr,', 2.598833643460815e-06], ['header",', 2.598833643460815e-06], ['(!this->parse_decimal(flhdr.fl_fstmoff,', 2.598833643460815e-06], ['sizeof(flhdr.fl_fstmoff),', 2.598833643460815e-06], ['&off))', 2.598833643460815e-06], ['char[sizeof(flhdr.fl_fstmoff)', 2.598833643460815e-06], ['flhdr.fl_fstmoff,', 2.598833643460815e-06], ['sizeof(flhdr.fl_fstmoff));', 2.598833643460815e-06], ['header"', 2.598833643460815e-06], ['Archive_file::initialize_archive()', 2.598833643460815e-06], ['sizeof(armag);', 2.598833643460815e-06], ['(this->first_member_offset_', 2.598833643460815e-06], ['next_off;', 2.598833643460815e-06], ['(!this->read_header(this->first_member_offset_,', 2.598833643460815e-06], ['&next_off))', 2.598833643460815e-06], ['(!this->read_header(next_off,', 2.598833643460815e-06], ['filename.clear();', 2.598833643460815e-06], ['char[size];', 2.598833643460815e-06], ['(::read(this->fd_,', 2.598833643460815e-06], ['names",', 2.598833643460815e-06], ['this->extended_names_.assign(rdbuf,', 2.598833643460815e-06], ['Archive_file::read(off_t', 2.598833643460815e-06], ['buf)', 2.598833643460815e-06], ['Archive_file::parse_decimal(const', 2.598833643460815e-06], ['char[size', 2.598833643460815e-06], ['ps[-1]', 2.598833643460815e-06], ['--ps;', 2.598833643460815e-06], ['strtol(buf,', 2.598833643460815e-06], ['(*res', 2.598833643460815e-06], ['*NEXT_OFF', 2.598833643460815e-06], ['Archive_file::read_header(off_t', 2.598833643460815e-06], ['this->read_big_archive_header(off,', 2.598833643460815e-06], ['this->read_archive_header(off,', 2.598833643460815e-06], ['Archive_file::read_big_archive_header(off_t', 2.598833643460815e-06], ['(!this->parse_decimal(hdr.ar_size,', 2.598833643460815e-06], ['sizeof(hdr.ar_size),', 2.598833643460815e-06], ['char[sizeof(hdr.ar_size)', 2.598833643460815e-06], ['hdr.ar_size,', 2.598833643460815e-06], ['sizeof(hdr.ar_size));', 2.598833643460815e-06], ['ar_size', 2.598833643460815e-06], ['namlen;', 2.598833643460815e-06], ['(!this->parse_decimal(hdr.ar_namlen,', 2.598833643460815e-06], ['sizeof(hdr.ar_namlen),', 2.598833643460815e-06], ['&namlen))', 2.598833643460815e-06], ['char[sizeof(hdr.ar_namlen)', 2.598833643460815e-06], ['hdr.ar_namlen,', 2.598833643460815e-06], ['sizeof(hdr.ar_namlen));', 2.598833643460815e-06], ['char[namlen];', 2.598833643460815e-06], ['namlen)', 2.598833643460815e-06], ['pname->assign(rdbuf,', 2.598833643460815e-06], ['(!this->parse_decimal(hdr.ar_nxtmem,', 2.598833643460815e-06], ['sizeof(hdr.ar_nxtmem),', 2.598833643460815e-06], ['&local_next_off))', 2.598833643460815e-06], ['char[sizeof(hdr.ar_nxtmem)', 2.598833643460815e-06], ['hdr.ar_nxtmem,', 2.598833643460815e-06], ['sizeof(hdr.ar_nxtmem));', 2.598833643460815e-06], ['ar_nxtmem', 2.598833643460815e-06], ['Archive_file::read_archive_header(off_t', 2.598833643460815e-06], ['(!this->interpret_header(&hdr,', 2.598833643460815e-06], ['&local_nested_off))', 2.598833643460815e-06], ['(!this->is_thin_archive_', 2.598833643460815e-06], ['pname->empty()', 2.598833643460815e-06], ['*size;', 2.598833643460815e-06], ['((local_next_off', 2.598833643460815e-06], ['++local_next_off;', 2.598833643460815e-06], ['Archive_file::interpret_header(const', 2.598833643460815e-06], ['(memcmp(hdr->ar_fmag,', 2.598833643460815e-06], ['arfmag,', 2.598833643460815e-06], ['arfmag)', 2.598833643460815e-06], ['(!this->parse_decimal(hdr->ar_size,', 2.598833643460815e-06], ['hdr->ar_size,', 2.598833643460815e-06], ['(hdr->ar_name[0]', 2.598833643460815e-06], ['strchr(hdr->ar_name,', 2.598833643460815e-06], ['(name_end', 2.598833643460815e-06], ['hdr->ar_name', 2.598833643460815e-06], ['static_cast<int>(sizeof', 2.598833643460815e-06], ['hdr->ar_name))', 2.598833643460815e-06], ['pname->assign(hdr->ar_name,', 2.598833643460815e-06], ['hdr->ar_name);', 2.598833643460815e-06], ["'S'", 2.598833643460815e-06], ['hdr->ar_name[2]', 2.598833643460815e-06], ["'Y'", 2.598833643460815e-06], ['hdr->ar_name[3]', 2.598833643460815e-06], ["'M'", 2.598833643460815e-06], ['hdr->ar_name[4]', 2.598833643460815e-06], ["'6'", 2.598833643460815e-06], ['hdr->ar_name[5]', 2.598833643460815e-06], ["'4'", 2.598833643460815e-06], ['hdr->ar_name[6]', 2.598833643460815e-06], ['hdr->ar_name[7]', 2.598833643460815e-06], ['pname->assign(1,', 2.598833643460815e-06], ['strtol(hdr->ar_name', 2.598833643460815e-06], ["':')", 2.598833643460815e-06], ['strtol(end', 2.598833643460815e-06], ['ERANGE)', 2.598833643460815e-06], ['static_cast<size_t>(x)', 2.598833643460815e-06], ['this->extended_names_.size())', 2.598833643460815e-06], ['this->extended_names_.data()', 2.598833643460815e-06], ['strchr(name,', 2.598833643460815e-06], ["'\\n');", 2.598833643460815e-06], ['(static_cast<size_t>(name_end', 2.598833643460815e-06], ['this->extended_names_.size()', 2.598833643460815e-06], ['name_end[-1]', 2.598833643460815e-06], ['pname->assign(name,', 2.598833643460815e-06], ['Archive_file::get_file_and_offset(off_t', 2.598833643460815e-06], ['memname)', 2.598833643460815e-06], ['sizeof(Archive_big_header)', 2.598833643460815e-06], ['hdrname.length()', 2.598833643460815e-06], ['sizeof(arfmag));', 2.598833643460815e-06], ['((*memoff', 2.598833643460815e-06], ['++*memoff;', 2.598833643460815e-06], ['(!this->is_thin_archive_)', 2.598833643460815e-06], ['hdrname;', 2.598833643460815e-06], ['(!IS_ABSOLUTE_PATH(filename.c_str()))', 2.598833643460815e-06], ['archive_path', 2.598833643460815e-06], ['this->filename_.c_str();', 2.598833643460815e-06], ['lbasename(archive_path);', 2.598833643460815e-06], ['(basename', 2.598833643460815e-06], ['archive_path)', 2.598833643460815e-06], ['filename.replace(0,', 2.598833643460815e-06], ['this->filename_.substr(0,', 2.598833643460815e-06], ['archive_path));', 2.598833643460815e-06], ['Nested_archive_table::const_iterator', 2.598833643460815e-06], ['this->nested_archives_.find(filename);', 2.598833643460815e-06], ['this->nested_archives_.end())', 2.598833643460815e-06], ['nfd', 2.598833643460815e-06], ['(nfd', 2.598833643460815e-06], ['Archive_file(filename,', 2.598833643460815e-06], ['nfd,', 2.598833643460815e-06], ['(!nfile->initialize())', 2.598833643460815e-06], ['this->nested_archives_[filename]', 2.598833643460815e-06], ['nname;', 2.598833643460815e-06], ['nsize;', 2.598833643460815e-06], ['nnested_off;', 2.598833643460815e-06], ['(!nfile->read_header(nested_off,', 2.598833643460815e-06], ['&nname,', 2.598833643460815e-06], ['&nsize,', 2.598833643460815e-06], ['&nnested_off,', 2.598833643460815e-06], ['nfile->get_file_and_offset(nested_off,', 2.598833643460815e-06], ['nname,', 2.598833643460815e-06], ['nnested_off,', 2.598833643460815e-06], ['(*memfd', 2.598833643460815e-06], ['more-or-less', 2.598833643460815e-06], ['gold.', 2.598833643460815e-06], ['nested_off;', 2.598833643460815e-06], ['Archive_iterator(Archive_file*', 2.598833643460815e-06], ['afile,', 2.598833643460815e-06], ['off)', 2.598833643460815e-06], ['afile_(afile),', 2.598833643460815e-06], ['off_(off)', 2.598833643460815e-06], ['Header&', 2.598833643460815e-06], ['operator*()', 2.598833643460815e-06], ['this->header_;', 2.598833643460815e-06], ['Header*', 2.598833643460815e-06], ['operator->()', 2.598833643460815e-06], ['&this->header_;', 2.598833643460815e-06], ['operator++()', 2.598833643460815e-06], ['this->afile_->filesize())', 2.598833643460815e-06], ['operator++(int)', 2.598833643460815e-06], ['++*this;', 2.598833643460815e-06], ['operator==(const', 2.598833643460815e-06], ['operator!=(const', 2.598833643460815e-06], ['read_next_header();', 2.598833643460815e-06], ['afile_;', 2.598833643460815e-06], ['off_;', 2.598833643460815e-06], ['next_off_;', 2.598833643460815e-06], ['header_;', 2.598833643460815e-06], ['Archive_iterator::read_next_header()', 2.598833643460815e-06], ['filesize', 2.598833643460815e-06], ['this->afile_->filesize();', 2.598833643460815e-06], ['filesize)', 2.598833643460815e-06], ['(!this->afile_->read_header(this->off_,', 2.598833643460815e-06], ['&this->header_.name,', 2.598833643460815e-06], ['&this->header_.size,', 2.598833643460815e-06], ['&this->header_.nested_off,', 2.598833643460815e-06], ['&this->next_off_))', 2.598833643460815e-06], ['(!this->header_.name.empty()', 2.598833643460815e-06], ['this->header_.name', 2.598833643460815e-06], ['Initial', 2.598833643460815e-06], ['archive_begin(Archive_file*', 2.598833643460815e-06], ['afile->first_member_offset());', 2.598833643460815e-06], ['archive_end(Archive_file*', 2.598833643460815e-06], ['afile->filesize());', 2.598833643460815e-06], ['Import_stream', 2.598833643460815e-06], ['Import_streams', 2.598833643460815e-06], ['Stream_concatenate', 2.598833643460815e-06], ['Import::Stream', 2.598833643460815e-06], ['Stream_concatenate()', 2.598833643460815e-06], ['inputs_()', 2.598833643460815e-06], ['add(Import::Stream*', 2.598833643460815e-06], ['is)', 2.598833643460815e-06], ['this->inputs_.push_back(is);', 2.598833643460815e-06], ['do_peek(size_t,', 2.598833643460815e-06], ['char**);', 2.598833643460815e-06], ['do_advance(size_t);', 2.598833643460815e-06], ['std::list<Import::Stream*>', 2.598833643460815e-06], ['inputs_;', 2.598833643460815e-06], ['Peek', 2.598833643460815e-06], ['ahead.', 2.598833643460815e-06], ['Stream_concatenate::do_peek(size_t', 2.598833643460815e-06], ['(this->inputs_.front()->peek(length,', 2.598833643460815e-06], ['bytes))', 2.598833643460815e-06], ['Stream_concatenate::do_advance(size_t', 2.598833643460815e-06], ['(!this->inputs_.front()->at_eof())', 2.598833643460815e-06], ['streams.', 2.598833643460815e-06], ['this->inputs_.front()->advance(skip);', 2.598833643460815e-06], ['Import::find_archive_export_data(const', 2.598833643460815e-06], ['afile(filename,', 2.598833643460815e-06], ['(!afile.initialize())', 2.598833643460815e-06], ['Stream_concatenate*', 2.598833643460815e-06], ['Stream_concatenate;', 2.598833643460815e-06], ['archive_end(&afile);', 2.598833643460815e-06], ['(Archive_iterator', 2.598833643460815e-06], ['archive_begin(&afile);', 2.598833643460815e-06], ['member_fd;', 2.598833643460815e-06], ['member_off;', 2.598833643460815e-06], ['member_name;', 2.598833643460815e-06], ['(!afile.get_file_and_offset(p->off,', 2.598833643460815e-06], ['p->name,', 2.598833643460815e-06], ['p->nested_off,', 2.598833643460815e-06], ['&member_fd,', 2.598833643460815e-06], ['&member_off,', 2.598833643460815e-06], ['&member_name))', 2.598833643460815e-06], ['Import::find_object_export_data(member_name,', 2.598833643460815e-06], ['member_fd,', 2.598833643460815e-06], ['member_off,', 2.598833643460815e-06], ['(is', 2.598833643460815e-06], ['ret->add(is);', 2.598833643460815e-06], ['(!any_members)', 2.598833643460815e-06], ['gobuild.', 2.598833643460815e-06], ['Stream_from_string("");', 2.598833643460815e-06], ['(!any_data)', 2.598833643460815e-06], ['go-diagnostics.cc', 2.598833643460815e-06], ['error/warning', 2.598833643460815e-06], ['mformat_value()', 2.598833643460815e-06], ['std::string(xstrerror(errno));', 2.598833643460815e-06], ['sprintf().', 2.598833643460815e-06], ['go-diagnostics.h', 2.598833643460815e-06], ['specifiers.', 2.598833643460815e-06], ['expand_format(const', 2.598833643460815e-06], ['fmt)', 2.598833643460815e-06], ["'%')", 2.598833643460815e-06], ['(*c)', 2.598833643460815e-06], ["'m')", 2.598833643460815e-06], ['specifiers,', 2.598833643460815e-06], ['expand_format', 2.598833643460815e-06], ['%m,', 2.598833643460815e-06], ['%q)', 2.598833643460815e-06], ['printf-style', 2.598833643460815e-06], ['pragma', 2.598833643460815e-06], ['suppress', 2.598833643460815e-06], ['‘std::__cxx11::string', 2.598833643460815e-06], ['__va_list_tag*)’', 2.598833643460815e-06], ['‘gnu_printf’', 2.598833643460815e-06], ['[-Wsuggest-attribute=format]', 2.598833643460815e-06], ['happening', 2.598833643460815e-06], ['checker', 2.598833643460815e-06], ['gnu_printf),', 2.598833643460815e-06], ['gnu_printf', 2.598833643460815e-06], ['GO_ATTRIBUTE_GCC_DIAG(1,0);', 2.598833643460815e-06], ['"-Wsuggest-attribute=format"', 2.598833643460815e-06], ['mbuf', 2.598833643460815e-06], ['expanded_fmt', 2.598833643460815e-06], ['expand_format(fmt);', 2.598833643460815e-06], ['nwr', 2.598833643460815e-06], ['vasprintf(&mbuf,', 2.598833643460815e-06], ['expanded_fmt.c_str(),', 2.598833643460815e-06], ['(nwr', 2.598833643460815e-06], ['go_be_error_at(Linemap::unknown_location(),', 2.598833643460815e-06], ['"memory', 2.598833643460815e-06], ['vasprintf");', 2.598833643460815e-06], ['go_assert(0);', 2.598833643460815e-06], ['std::string(mbuf);', 2.598833643460815e-06], ['free(mbuf);', 2.598833643460815e-06], ['cached_open_quote', 2.598833643460815e-06], ['cached_close_quote', 2.598833643460815e-06], ['go_open_quote()', 2.598833643460815e-06], ['(cached_open_quote', 2.598833643460815e-06], ['cached_open_quote;', 2.598833643460815e-06], ['go_close_quote()', 2.598833643460815e-06], ['(cached_close_quote', 2.598833643460815e-06], ['cached_close_quote;', 2.598833643460815e-06], ['go_error_at(const', 2.598833643460815e-06], ['go_be_error_at(location,', 2.598833643460815e-06], ['go_warning_at(const', 2.598833643460815e-06], ['go_be_warning_at(location,', 2.598833643460815e-06], ['go_fatal_error(const', 2.598833643460815e-06], ['go_be_fatal_error(location,', 2.598833643460815e-06], ['go_inform(const', 2.598833643460815e-06], ['go_be_inform(location,', 2.598833643460815e-06], ['Unit', 2.598833643460815e-06], ['unique-ptr.h.', 2.598833643460815e-06], ['ctor_count', 2.598833643460815e-06], ['dtor_count', 2.598833643460815e-06], ['ctor_count;', 2.598833643460815e-06], ['dtor_count;', 2.598833643460815e-06], ['"stats"', 2.598833643460815e-06], ['(stats', 2.598833643460815e-06], ['m_s', 2.598833643460815e-06], ['++m_s.ctor_count;', 2.598833643460815e-06], ['~foo', 2.598833643460815e-06], ['++m_s.dtor_count;', 2.598833643460815e-06], ['example_method', 2.598833643460815e-06], ['foo&);', 2.598833643460815e-06], ['&m_s;', 2.598833643460815e-06], ['unique_ptr<T[]>.', 2.598833643460815e-06], ['m_field', 2.598833643460815e-06], ['(42)', 2.598833643460815e-06], ['m_field;', 2.598833643460815e-06], ['unique_xmalloc_ptr.', 2.598833643460815e-06], ['ptrs', 2.598833643460815e-06], ['gnu::unique_ptr<void', 2.598833643460815e-06], ['gnu::unique_xmalloc_ptr<void', 2.598833643460815e-06], ['q);', 2.598833643460815e-06], ['deletion', 2.598833643460815e-06], ['unique_ptr', 2.598833643460815e-06], ['2nd', 2.598833643460815e-06], ["unique_ptr's", 2.598833643460815e-06], ['f->example_method', 2.598833643460815e-06], ['(*f).example_method', 2.598833643460815e-06], ['f.get', 2.598833643460815e-06], ['gnu::unique_ptr', 2.598833643460815e-06], ['T[]', 2.598833643460815e-06], ['gnu::unique_ptr<has_default_ctor[]>', 2.598833643460815e-06], ['has_default_ctor[num]);', 2.598833643460815e-06], ['works,', 2.598833643460815e-06], ['p[i].m_field);', 2.598833643460815e-06], ['gnu::unique_xmalloc_ptr<dummy>', 2.598833643460815e-06], ['(XNEW', 2.598833643460815e-06], ['(dummy));', 2.598833643460815e-06], ['T[].', 2.598833643460815e-06], ['gnu::unique_xmalloc_ptr<dummy[]>', 2.598833643460815e-06], ['(XNEWVEC', 2.598833643460815e-06], ['num));', 2.598833643460815e-06], ['p[i].field', 2.598833643460815e-06], ['p[i].field);', 2.598833643460815e-06], ['unique_ptr_tests_cc_tests', 2.598833643460815e-06], ['d-diagnostics.cc', 2.598833643460815e-06], ['pp_format().', 2.598833643460815e-06], ['specifiers', 2.598833643460815e-06], ['handled:', 2.598833643460815e-06], ['`...`:', 2.598833643460815e-06], ['backticks', 2.598833643460815e-06], ["'%<...%>'.", 2.598833643460815e-06], ['%-10s:', 2.598833643460815e-06], ['left-justify', 2.598833643460815e-06], ['%02x:', 2.598833643460815e-06], ['zero-padding', 2.598833643460815e-06], ["'%x'", 2.598833643460815e-06], ['%X:', 2.598833643460815e-06], ['hexadecimals', 2.598833643460815e-06], ['rewritten', 2.598833643460815e-06], ["'%x'.", 2.598833643460815e-06], ['freed', 2.598833643460815e-06], ['*format)', 2.598833643460815e-06], ['format;', 2.598833643460815e-06], ['*p;)', 2.598833643460815e-06], ["'%'", 2.598833643460815e-06], ['Text', 2.598833643460815e-06], ['`...`', 2.598833643460815e-06], ['(inbacktick)', 2.598833643460815e-06], ['("%>");', 2.598833643460815e-06], ['("%<");', 2.598833643460815e-06], ['Malformed', 2.598833643460815e-06], ['Hex', 2.598833643460815e-06], ['lower-case.', 2.598833643460815e-06], ["('x');", 2.598833643460815e-06], ['(!inbacktick);', 2.598833643460815e-06], ['ATTRIBUTE_GCC_DIAG(3,0)', 2.598833643460815e-06], ['verbatim)', 2.598833643460815e-06], ['argp;', 2.598833643460815e-06], ['va_copy', 2.598833643460815e-06], ['(argp,', 2.598833643460815e-06], ['(loc.filename', 2.598833643460815e-06], ['!verbatim)', 2.598833643460815e-06], ['rich_loc', 2.598833643460815e-06], ['diagnostic;', 2.598833643460815e-06], ['*xformat', 2.598833643460815e-06], ['diagnostic_set_info_translated', 2.598833643460815e-06], ['(&diagnostic,', 2.598833643460815e-06], ['&argp,', 2.598833643460815e-06], ['&rich_loc,', 2.598833643460815e-06], ['kind);', 2.598833643460815e-06], ['(opt', 2.598833643460815e-06], ['diagnostic.option_index', 2.598833643460815e-06], ['opt;', 2.598833643460815e-06], ['diagnostic_report_diagnostic', 2.598833643460815e-06], ['(global_dc,', 2.598833643460815e-06], ['&diagnostic);', 2.598833643460815e-06], ['&argp;', 2.598833643460815e-06], ['text.x_data', 2.598833643460815e-06], ['pp_format_verbatim', 2.598833643460815e-06], ['(global_dc->printer,', 2.598833643460815e-06], ['pp_newline_and_flush', 2.598833643460815e-06], ['(global_dc->printer);', 2.598833643460815e-06], ['(argp);', 2.598833643460815e-06], ['*prefix2,', 2.598833643460815e-06], ['global.params.showGaggedErrors)', 2.598833643460815e-06], ['global.gag', 2.598833643460815e-06], ['DK_ANACHRONISM', 2.598833643460815e-06], ['DK_ERROR,', 2.598833643460815e-06], ['(global.gag)', 2.598833643460815e-06], ['global.gaggedErrors++;', 2.598833643460815e-06], ['global.errors++;', 2.598833643460815e-06], ['errorSupplemental', 2.598833643460815e-06], ['(global.gag', 2.598833643460815e-06], ['!global.params.showGaggedErrors)', 2.598833643460815e-06], ['LOC,', 2.598833643460815e-06], ['DIAGNOSTICoff)', 2.598833643460815e-06], ['global.warnings++;', 2.598833643460815e-06], ['warningSupplemental', 2.598833643460815e-06], ['DIAGNOSTICoff', 2.598833643460815e-06], ['global.gag)', 2.598833643460815e-06], ['treated.', 2.598833643460815e-06], ['*prefix2)', 2.598833643460815e-06], ['prefix2);', 2.598833643460815e-06], ['OPT_Wdeprecated,', 2.598833643460815e-06], ['deprecationSupplemental', 2.598833643460815e-06], ['ATTRIBUTE_GCC_DIAG(2,', 2.598833643460815e-06], ['ATTRIBUTE_GCC_DIAG(1,', 2.598833643460815e-06], ['(FATAL_EXIT_CODE);', 2.598833643460815e-06], ['"tree-ssa-loop.h"', 2.598833643460815e-06], ['"tree-chrec.h"', 2.598833643460815e-06], ['"tree-ssa-propagate.h"', 2.598833643460815e-06], ['"domwalk.h"', 2.598833643460815e-06], ['"alloc-pool.h"', 2.598833643460815e-06], ['"vr-values.h"', 2.598833643460815e-06], ['"gimple-ssa-evrp-analyze.h"', 2.598833643460815e-06], ['"omp-general.h"', 2.598833643460815e-06], ['"tree-into-ssa.h"', 2.598833643460815e-06], ['IL.', 2.598833643460815e-06], ['---------------------------------', 2.598833643460815e-06], ['(stride', 2.598833643460815e-06], ['...x[i]...', 2.598833643460815e-06], ['benefits:', 2.598833643460815e-06], ['vectorize', 2.598833643460815e-06], ['[B].', 2.598833643460815e-06], ['evolutions,', 2.598833643460815e-06], ['particularly', 2.598833643460815e-06], ['assumed-shape', 2.598833643460815e-06], ['Fortran,', 2.598833643460815e-06], ['f1(x)', 2.598833643460815e-06], ['*x.dim[0].stride;', 2.598833643460815e-06], ['x_base', 2.598833643460815e-06], ['*x.data;', 2.598833643460815e-06], ['*x_base[tmp2]', 2.598833643460815e-06], ['*x_base[tmp3]', 2.598833643460815e-06], ['IL,', 2.598833643460815e-06], ['estimating', 2.598833643460815e-06], ['---------', 2.598833643460815e-06], ['phases:', 2.598833643460815e-06], ['none.', 2.598833643460815e-06], ['context-sensitive', 2.598833643460815e-06], ['exist.)', 2.598833643460815e-06], ['selected', 2.598833643460815e-06], ['that:', 2.598833643460815e-06], ['(!cond)', 2.598833643460815e-06], ['Original', 2.598833643460815e-06], ['INNER_UNLIKELY,', 2.598833643460815e-06], ['INNER_DONT_KNOW,', 2.598833643460815e-06], ['unrecorded', 2.598833643460815e-06], ['identified.', 2.598833643460815e-06], ['inner_likelihood;', 2.598833643460815e-06], ['isolation.', 2.598833643460815e-06], ['versioning_opportunity_p;', 2.598833643460815e-06], ['calculation,', 2.598833643460815e-06], ['MAX_TERMS', 2.598833643460815e-06], ['(cached', 2.598833643460815e-06], ['convenience).', 2.598833643460815e-06], ['decomposition', 2.598833643460815e-06], ['provided,', 2.598833643460815e-06], ['TERMs', 2.598833643460815e-06], ['auto_vec<address_term_info,', 2.598833643460815e-06], ['MAX_TERMS>', 2.598833643460815e-06], ['terms;', 2.598833643460815e-06], ['[MIN_OFFSET,', 2.598833643460815e-06], ['MAX_OFFSET).', 2.598833643460815e-06], ['min_offset,', 2.598833643460815e-06], ['max_offset;', 2.598833643460815e-06], ['(ignoring', 2.598833643460815e-06], ['address_info_hasher', 2.598833643460815e-06], ['nofree_ptr_hash', 2.598833643460815e-06], ['<address_info>', 2.598833643460815e-06], ['worth_versioning_p', 2.598833643460815e-06], ['rejected_p;', 2.598833643460815e-06], ['benefits', 2.598833643460815e-06], ['subloops_benefit_p;', 2.598833643460815e-06], ['excluding', 2.598833643460815e-06], ['num_insns;', 2.598833643460815e-06], ['*outermost;', 2.598833643460815e-06], ['subloops).', 2.598833643460815e-06], ['m_next_block_in_loop', 2.598833643460815e-06], ['block_list;', 2.598833643460815e-06], ["We'd", 2.598833643460815e-06], ['(keyed', 2.598833643460815e-06], ['SSA_NAME_VERSION)', 2.598833643460815e-06], ['bitmap_head', 2.598833643460815e-06], ['unity_names;', 2.598833643460815e-06], ['holds.', 2.598833643460815e-06], ['*optimized_loop;', 2.598833643460815e-06], ['~loop_versioning', 2.598833643460815e-06], ['dominator', 2.598833643460815e-06], ['before_dom_children', 2.598833643460815e-06], ['after_dom_children', 2.598833643460815e-06], ['&m_lv;', 2.598833643460815e-06], ['context-dependent', 2.598833643460815e-06], ['evrp_range_analyzer', 2.598833643460815e-06], ['m_range_analyzer;', 2.598833643460815e-06], ['substitute_and_fold_engine', 2.598833643460815e-06], ['(loop_info', 2.598833643460815e-06], ['&li)', 2.598833643460815e-06], ['m_li', 2.598833643460815e-06], ['(li)', 2.598833643460815e-06], ['get_value', 2.598833643460815e-06], ['&m_li;', 2.598833643460815e-06], ['&get_loop_info', 2.598833643460815e-06], ['m_loops[loop->num];', 2.598833643460815e-06], ['expensive_stmt_p', 2.598833643460815e-06], ['analyze_block', 2.598833643460815e-06], ['(basic_block);', 2.598833643460815e-06], ['analyze_blocks', 2.598833643460815e-06], ['prune_loop_conditions', 2.598833643460815e-06], ['decide_whether_loop_is_versionable', 2.598833643460815e-06], ['version_loop', 2.598833643460815e-06], ['optimizing.', 2.598833643460815e-06], ['*m_fn;', 2.598833643460815e-06], ['pass-specific', 2.598833643460815e-06], ['bitmaps.', 2.598833643460815e-06], ['bitmap_obstack', 2.598833643460815e-06], ['m_bitmap_obstack;', 2.598833643460815e-06], ['m_obstack;', 2.598833643460815e-06], ['m_num_conditions;', 2.598833643460815e-06], ['scale)', 2.598833643460815e-06], ['m_maximum_scale;', 2.598833643460815e-06], ['auto_vec<loop_info>', 2.598833643460815e-06], ['m_loops;', 2.598833643460815e-06], ['loop_info::block_list.', 2.598833643460815e-06], ['auto_vec<basic_block>', 2.598833643460815e-06], ['m_next_block_in_loop;', 2.598833643460815e-06], ['auto_vec<struct', 2.598833643460815e-06], ['m_loops_to_version;', 2.598833643460815e-06], ['keyed', 2.598833643460815e-06], ['offsets.', 2.598833643460815e-06], ['hash_table', 2.598833643460815e-06], ['<address_info_hasher>', 2.598833643460815e-06], ['m_address_table;', 2.598833643460815e-06], ['M_ADDRESS_TABLE,', 2.598833643460815e-06], ['predictable', 2.598833643460815e-06], ['auto_vec', 2.598833643460815e-06], ['<address_info', 2.598833643460815e-06], ['32>', 2.598833643460815e-06], ['m_address_list;', 2.598833643460815e-06], ['!SSA_NAME_IS_DEFAULT_DEF', 2.598833643460815e-06], ['maybe_get_stmt,', 2.598833643460815e-06], ['safe_dyn_cast', 2.598833643460815e-06], ['(maybe_get_stmt', 2.598833643460815e-06], ['from)', 2.598833643460815e-06], ['nops.', 2.598833643460815e-06], ['simulate', 2.598833643460815e-06], ['structured.', 2.598833643460815e-06], ['(CONVERT_EXPR_P', 2.598833643460815e-06], ['++niters)', 2.598833643460815e-06], ['(assign', 2.598833643460815e-06], ['CONVERT_EXPR_CODE_P', 2.598833643460815e-06], ['(gimple_assign_rhs_code', 2.598833643460815e-06], ['address_term_infos', 2.598833643460815e-06], ['compare_address_terms', 2.598833643460815e-06], ['*a_uncast,', 2.598833643460815e-06], ['*b_uncast)', 2.598833643460815e-06], ['*a', 2.598833643460815e-06], ['a_uncast;', 2.598833643460815e-06], ['b_uncast;', 2.598833643460815e-06], ['(a->expr', 2.598833643460815e-06], ['b->expr)', 2.598833643460815e-06], ['(a->expr)', 2.598833643460815e-06], ['(b->expr)', 2.598833643460815e-06], ['(a->multiplier', 2.598833643460815e-06], ['b->multiplier)', 2.598833643460815e-06], ['a->multiplier', 2.598833643460815e-06], ['b->multiplier', 2.598833643460815e-06], ['FLAGS.', 2.598833643460815e-06], ['(address.base)', 2.598833643460815e-06], ['address.base);', 2.598833643460815e-06], ['"%T",', 2.598833643460815e-06], ['address.terms[i].expr);', 2.598833643460815e-06], ['(address.terms[i].multiplier', 2.598833643460815e-06], ['address.terms[i].multiplier);', 2.598833643460815e-06], ['[%wd,', 2.598833643460815e-06], ['%wd]",', 2.598833643460815e-06], ['address.min_offset,', 2.598833643460815e-06], ['address_info_hasher::hash', 2.598833643460815e-06], ['*info)', 2.598833643460815e-06], ['inchash::hash', 2.598833643460815e-06], ['(info->base', 2.598833643460815e-06], ['(info->base)', 2.598833643460815e-06], ['(info->terms.length', 2.598833643460815e-06], ['info->terms.length', 2.598833643460815e-06], ['(SSA_NAME_VERSION', 2.598833643460815e-06], ['(info->terms[i].expr));', 2.598833643460815e-06], ['hash.add_hwi', 2.598833643460815e-06], ['(info->terms[i].multiplier);', 2.598833643460815e-06], ['hash.end', 2.598833643460815e-06], ['address_infos', 2.598833643460815e-06], ['bases', 2.598833643460815e-06], ['range).', 2.598833643460815e-06], ['address_info_hasher::equal', 2.598833643460815e-06], ['*b)', 2.598833643460815e-06], ['(a->base', 2.598833643460815e-06], ['b->base', 2.598833643460815e-06], ['(!a->base', 2.598833643460815e-06], ['!b->base', 2.598833643460815e-06], ['(a->base,', 2.598833643460815e-06], ['b->base,', 2.598833643460815e-06], ['(a->terms.length', 2.598833643460815e-06], ['b->terms.length', 2.598833643460815e-06], ['a->terms.length', 2.598833643460815e-06], ['(a->terms[i].expr', 2.598833643460815e-06], ['b->terms[i].expr', 2.598833643460815e-06], ['a->terms[i].multiplier', 2.598833643460815e-06], ['b->terms[i].multiplier)', 2.598833643460815e-06], ['loop_info::worth_versioning_p', 2.598833643460815e-06], ['(!rejected_p', 2.598833643460815e-06], ['(!bitmap_empty_p', 2.598833643460815e-06], ['(&unity_names)', 2.598833643460815e-06], ['subloops_benefit_p));', 2.598833643460815e-06], ['loop_versioning::lv_dom_walker::lv_dom_walker', 2.598833643460815e-06], ['&lv)', 2.598833643460815e-06], ['(CDI_DOMINATORS),', 2.598833643460815e-06], ['m_lv', 2.598833643460815e-06], ['(lv),', 2.598833643460815e-06], ['m_range_analyzer', 2.598833643460815e-06], ['(false)', 2.598833643460815e-06], ['loop_versioning::lv_dom_walker::before_dom_children', 2.598833643460815e-06], ['m_range_analyzer.enter', 2.598833643460815e-06], ['bb->loop_father->header)', 2.598833643460815e-06], ['m_lv.prune_loop_conditions', 2.598833643460815e-06], ['(bb->loop_father,', 2.598833643460815e-06], ['m_range_analyzer.get_vr_values', 2.598833643460815e-06], ['si', 2.598833643460815e-06], ['(si);', 2.598833643460815e-06], ['(&si))', 2.598833643460815e-06], ['m_range_analyzer.record_ranges_from_stmt', 2.598833643460815e-06], ['(si),', 2.598833643460815e-06], ['loop_versioning::lv_dom_walker::after_dom_children', 2.598833643460815e-06], ['m_range_analyzer.leave', 2.598833643460815e-06], ['loop_versioning::name_prop::get_value', 2.598833643460815e-06], ['bitmap_bit_p', 2.598833643460815e-06], ['(&m_li.unity_names,', 2.598833643460815e-06], ['(val)))', 2.598833643460815e-06], ['(val));', 2.598833643460815e-06], ['FN.', 2.598833643460815e-06], ['loop_versioning::loop_versioning', 2.598833643460815e-06], ['m_fn', 2.598833643460815e-06], ['m_nloops', 2.598833643460815e-06], ['(fn)),', 2.598833643460815e-06], ['m_address_table', 2.598833643460815e-06], ['(31)', 2.598833643460815e-06], ['bitmap_obstack_initialize', 2.598833643460815e-06], ['(&m_obstack);', 2.598833643460815e-06], ['m_loops.safe_grow_cleared', 2.598833643460815e-06], ['(m_nloops);', 2.598833643460815e-06], ['m_loops[i].outermost', 2.598833643460815e-06], ['get_loop', 2.598833643460815e-06], ['bitmap_initialize', 2.598833643460815e-06], ['(&m_loops[i].unity_names,', 2.598833643460815e-06], ['&m_bitmap_obstack);', 2.598833643460815e-06], ['nbbs', 2.598833643460815e-06], ['last_basic_block_for_fn', 2.598833643460815e-06], ['m_next_block_in_loop.safe_grow', 2.598833643460815e-06], ['(nbbs);', 2.598833643460815e-06], ['(bb->loop_father);', 2.598833643460815e-06], ['m_next_block_in_loop[bb->index]', 2.598833643460815e-06], ['li.block_list;', 2.598833643460815e-06], ['li.block_list', 2.598833643460815e-06], ['MAX_FIXED_MODE_SIZE', 2.598833643460815e-06], ['unvectorizable', 2.598833643460815e-06], ['efficiently', 2.598833643460815e-06], ['omp_max_vf', 2.598833643460815e-06], ['estimated_poly_value', 2.598833643460815e-06], ['(omp_max_vf', 2.598833643460815e-06], ['(m_maximum_scale,', 2.598833643460815e-06], ['MAX_FIXED_MODE_SIZE);', 2.598833643460815e-06], ['loop_versioning::~loop_versioning', 2.598833643460815e-06], ['bitmap_obstack_release', 2.598833643460815e-06], ["*doesn't*", 2.598833643460815e-06], ['versioning;', 2.598833643460815e-06], ['"taken', 2.598833643460815e-06], ['ride".', 2.598833643460815e-06], ['small,', 2.598833643460815e-06], ['outer-loop', 2.598833643460815e-06], ['loop_versioning::max_insns_for_loop', 2.598833643460815e-06], ['(PARAM_LOOP_VERSIONING_MAX_OUTER_INSNS)', 2.598833643460815e-06], ['(PARAM_LOOP_VERSIONING_MAX_INNER_INSNS));', 2.598833643460815e-06], ['reasons', 2.598833643460815e-06], ['correctness', 2.598833643460815e-06], ['loop_versioning::expensive_stmt_p', 2.598833643460815e-06], ['spent', 2.598833643460815e-06], ['"expensive"', 2.598833643460815e-06], ['overwhelm', 2.598833643460815e-06], ['saving', 2.598833643460815e-06], ['loop_versioning::version_for_unity', 2.598833643460815e-06], ['(bitmap_set_bit', 2.598833643460815e-06], ['(name)))', 2.598833643460815e-06], ['LI.', 2.598833643460815e-06], ['outermost_invariant_loop_for_expr', 2.598833643460815e-06], ['li.outermost', 2.598833643460815e-06], ['outermost;', 2.598833643460815e-06], ['"want', 2.598833643460815e-06], ['1",', 2.598833643460815e-06], ['(outermost', 2.598833643460815e-06], ['further");', 2.598833643460815e-06], ['(outermost));', 2.598833643460815e-06], ['allow"', 2.598833643460815e-06], ['(li.outermost));', 2.598833643460815e-06], ['request.', 2.598833643460815e-06], ['"already', 2.598833643460815e-06], ['containing"', 2.598833643460815e-06], ['1\\n",', 2.598833643460815e-06], ['whether:', 2.598833643460815e-06], ['loop_versioning::acceptable_multiplier_p', 2.598833643460815e-06], ['op1_tree,', 2.598833643460815e-06], ['*result)', 2.598833643460815e-06], ['(tree_fits_uhwi_p', 2.598833643460815e-06], ['(op1_tree))', 2.598833643460815e-06], ['(op1_tree);', 2.598833643460815e-06], ['m_maximum_scale)', 2.598833643460815e-06], ['op2;', 2.598833643460815e-06], ['loop_versioning::acceptable_type_p', 2.598833643460815e-06], ['*size)', 2.598833643460815e-06], ['exceeding', 2.598833643460815e-06], ['loop_versioning::multiply_term_by', 2.598833643460815e-06], ['term.multiplier,', 2.598833643460815e-06], ['&term.multiplier);', 2.598833643460815e-06], ['INNER_*', 2.598833643460815e-06], ['probability.', 2.598833643460815e-06], ['loop_versioning::get_inner_likelihood', 2.598833643460815e-06], ['STRIDE.', 2.598833643460815e-06], ['UNLIKELY_P', 2.598833643460815e-06], ['E.g.', 2.598833643460815e-06], ['for:', 2.598833643460815e-06], ['circumstances.', 2.598833643460815e-06], ['(See', 2.598833643460815e-06], ['below.)', 2.598833643460815e-06], ['However:', 2.598833643460815e-06], ['worklist[MAX_NITERS];', 2.598833643460815e-06], ['worklist[i];', 2.598833643460815e-06], ['grouped', 2.598833643460815e-06], ['(acceptable_multiplier_p', 2.598833643460815e-06], ['multiplier))', 2.598833643460815e-06], ['INNER_LIKELY;', 2.598833643460815e-06], ['important', 2.598833643460815e-06], ['a.dim[0].stride;', 2.598833643460815e-06], ['(Strides', 2.598833643460815e-06], ['dimensions', 2.598833643460815e-06], ['specially.)', 2.598833643460815e-06], ['(gphi', 2.598833643460815e-06], ['gimple_phi_num_args', 2.598833643460815e-06], ['(gimple_phi_arg_def', 2.598833643460815e-06], ['j));', 2.598833643460815e-06], ['descriptor)', 2.598833643460815e-06], ['calculated.', 2.598833643460815e-06], ['Things', 2.598833643460815e-06], ['actively', 2.598833643460815e-06], ['INNER_UNLIKELY', 2.598833643460815e-06], ['INNER_DONT_KNOW;', 2.598833643460815e-06], ["TERM's", 2.598833643460815e-06], ['loop_versioning::dump_inner_likelihood', 2.598833643460815e-06], ['INNER_UNLIKELY)', 2.598833643460815e-06], ['interest', 2.598833643460815e-06], ['OP_LOOP.', 2.598833643460815e-06], ['loop_versioning::analyze_stride', 2.598833643460815e-06], ['*op_loop)', 2.598833643460815e-06], ['require:', 2.598833643460815e-06], ['consecutive.', 2.598833643460815e-06], ['deliberately', 2.598833643460815e-06], ['conservative.', 2.598833643460815e-06], ['gaps', 2.598833643460815e-06], ['iterations)', 2.598833643460815e-06], ['testcases', 2.598833643460815e-06], ['enabling', 2.598833643460815e-06], ['savings', 2.598833643460815e-06], ['address.min_offset;', 2.598833643460815e-06], ['(term.multiplier', 2.598833643460815e-06], ['address.loop', 2.598833643460815e-06], ['op_loop', 2.598833643460815e-06], ['(address.loop,', 2.598833643460815e-06], ['stride))', 2.598833643460815e-06], ['term.versioning_opportunity_p', 2.598833643460815e-06], ['versioning"', 2.598833643460815e-06], ['opportunity\\n",', 2.598833643460815e-06], ['stride);', 2.598833643460815e-06], ['ADDRESS)', 2.598833643460815e-06], ['varies', 2.598833643460815e-06], ['iterations,', 2.598833643460815e-06], ['a[index[i]', 2.598833643460815e-06], ['loop_versioning::find_per_loop_multiplication', 2.598833643460815e-06], ['(!mult', 2.598833643460815e-06], ['*mult_loop', 2.598833643460815e-06], ['(mult);', 2.598833643460815e-06], ['(mult_loop))', 2.598833643460815e-06], ['invariant1_p', 2.598833643460815e-06], ['invariant2_p', 2.598833643460815e-06], ['(invariant1_p', 2.598833643460815e-06], ['invariant2_p)', 2.598833643460815e-06], ['(invariant1_p)', 2.598833643460815e-06], ['op1,', 2.598833643460815e-06], ['mult_loop);', 2.598833643460815e-06], ['ADDRESS.', 2.598833643460815e-06], ['evolution', 2.598833643460815e-06], ['find,', 2.598833643460815e-06], ['wrt', 2.598833643460815e-06], ['ADDRESS->LOOP.', 2.598833643460815e-06], ['worthless', 2.598833643460815e-06], ['loop_versioning::analyze_term_using_scevs', 2.598833643460815e-06], ['*setter', 2.598833643460815e-06], ['(!setter)', 2.598833643460815e-06], ['*wrt_loop', 2.598833643460815e-06], ['(setter);', 2.598833643460815e-06], ['(wrt_loop))', 2.598833643460815e-06], ['(analyze_scalar_evolution', 2.598833643460815e-06], ['(wrt_loop,', 2.598833643460815e-06], ['term.expr));', 2.598833643460815e-06], ['accumulate', 2.598833643460815e-06], ['multiplications,', 2.598833643460815e-06], ['*assign;', 2.598833643460815e-06], ['((assign', 2.598833643460815e-06], ['(stride))', 2.598833643460815e-06], ['(assign)', 2.598833643460815e-06], ['"looking', 2.598833643460815e-06], ['(assign));', 2.598833643460815e-06], ['Address', 2.598833643460815e-06], ['mistakenly', 2.598833643460815e-06], ['(less', 2.598833643460815e-06], ['likely)', 2.598833643460815e-06], ['copes', 2.598833643460815e-06], ['x(i,', 2.598833643460815e-06], [':)', 2.598833643460815e-06], ['loop_versioning::analyze_arbitrary_term', 2.598833643460815e-06], ['offers', 2.598833643460815e-06], ['(mult', 2.598833643460815e-06], ['(alt)', 2.598833643460815e-06], ['alt_l', 2.598833643460815e-06], ['(alt,', 2.598833643460815e-06], ['(alt_l', 2.598833643460815e-06], ['term.inner_likelihood)', 2.598833643460815e-06], ['alt;', 2.598833643460815e-06], ['alt_l;', 2.598833643460815e-06], ['difficulty', 2.598833643460815e-06], ["(that's", 2.598833643460815e-06], ['easy).', 2.598833643460815e-06], ['bloat,', 2.598833643460815e-06], ['a(:,:)', 2.598833643460815e-06], ['idea,', 2.598833643460815e-06], ['iterating', 2.598833643460815e-06], ['(It', 2.598833643460815e-06], ['impossible,', 2.598833643460815e-06], ['transposed.)', 2.598833643460815e-06], ['Similarly,', 2.598833643460815e-06], ['a(:,:),', 2.598833643460815e-06], ['b(:,:)', 2.598833643460815e-06], ["isn't.", 2.598833643460815e-06], ["b's", 2.598833643460815e-06], ['identifiable', 2.598833643460815e-06], ['"likely",', 2.598833643460815e-06], ['know"', 2.598833643460815e-06], ['"unlikely".', 2.598833643460815e-06], ['STMT,', 2.598833643460815e-06], ['deals', 2.598833643460815e-06], ['fairly', 2.598833643460815e-06], ['know",', 2.598833643460815e-06], ['principally', 2.598833643460815e-06], ['x]', 2.598833643460815e-06], ['and:', 2.598833643460815e-06], ['y]', 2.598833643460815e-06], ['"x"', 2.598833643460815e-06], ['"y"', 2.598833643460815e-06], ['appropriately', 2.598833643460815e-06], ['(although', 2.598833643460815e-06], ['examples', 2.598833643460815e-06], ['GEMM', 2.598833643460815e-06], ['loop_versioning::analyze_address_fragment', 2.598833643460815e-06], ['"analyzing', 2.598833643460815e-06], ['apparent', 2.598833643460815e-06], ['overlap', 2.598833643460815e-06], ['(!find_per_loop_multiplication', 2.598833643460815e-06], ['!analyze_term_using_scevs', 2.598833643460815e-06], ['!POINTER_TYPE_P', 2.598833643460815e-06], ['(address.terms[i].expr)))', 2.598833643460815e-06], ['address.terms[i]);', 2.598833643460815e-06], ['bail', 2.598833643460815e-06], ['suggests', 2.598833643460815e-06], ['a[j', 2.598833643460815e-06], ['stride][i]', 2.598833643460815e-06], ['a[j][i', 2.598833643460815e-06], ['nesting):', 2.598833643460815e-06], ['a[i][j]', 2.598833643460815e-06], ['(yet)', 2.598833643460815e-06], ['hoisted', 2.598833643460815e-06], ['reasons.', 2.598833643460815e-06], ['uniqueness', 2.598833643460815e-06], ['(chosen_stride', 2.598833643460815e-06], ['(chosen_stride)', 2.598833643460815e-06], ['(address.terms[i].versioning_opportunity_p)', 2.598833643460815e-06], ['chosen_stride;', 2.598833643460815e-06], ['INNER_DONT_KNOW.', 2.598833643460815e-06], ['handles.', 2.598833643460815e-06], ['(!chosen_stride)', 2.598833643460815e-06], ['(version_stride', 2.598833643460815e-06], ['INNER_DONT_KNOW', 2.598833643460815e-06], ['address.terms[i].versioning_opportunity_p)', 2.598833643460815e-06], ['(address.stmt,', 2.598833643460815e-06], ['version_stride);', 2.598833643460815e-06], ['loop_versioning::record_address_fragment', 2.598833643460815e-06], ['(expr_invariant_in_loop_p', 2.598833643460815e-06], ['expr))', 2.598833643460815e-06], ['*address', 2.598833643460815e-06], ['XOBNEW', 2.598833643460815e-06], ['address_info);', 2.598833643460815e-06], ['(address)', 2.598833643460815e-06], ['address_info;', 2.598833643460815e-06], ['address->stmt', 2.598833643460815e-06], ['address->loop', 2.598833643460815e-06], ['address->terms.quick_grow', 2.598833643460815e-06], ['address->terms[0].expr', 2.598833643460815e-06], ['address->terms[0].stride', 2.598833643460815e-06], ['address->terms[0].inner_likelihood', 2.598833643460815e-06], ['INNER_UNLIKELY;', 2.598833643460815e-06], ['address->terms[0].versioning_opportunity_p', 2.598833643460815e-06], ['address_terms,', 2.598833643460815e-06], ['decreasing.', 2.598833643460815e-06], ['(address->terms[i].expr))', 2.598833643460815e-06], ['POINTER_PLUS_EXPR', 2.598833643460815e-06], ['address->terms[i].multiplier);', 2.598833643460815e-06], ['address_info::MAX_TERMS)', 2.598833643460815e-06], ['address->terms.quick_push', 2.598833643460815e-06], ['(address->terms[i]);', 2.598833643460815e-06], ['address->terms[j].expr', 2.598833643460815e-06], ['(op2);', 2.598833643460815e-06], ['(multiply_term_by', 2.598833643460815e-06], ['(address->terms[i],', 2.598833643460815e-06], ['op2))', 2.598833643460815e-06], ['symbolic', 2.598833643460815e-06], ['(address->terms[0].expr)', 2.598833643460815e-06], ['address->terms[0].expr;', 2.598833643460815e-06], ['address->terms.ordered_remove', 2.598833643460815e-06], ['unfolded', 2.598833643460815e-06], ['with.)', 2.598833643460815e-06], ['(address->terms[i].expr)', 2.598833643460815e-06], ['MIN_OFFSET', 2.598833643460815e-06], ['address->max_offset', 2.598833643460815e-06], ['address->terms.qsort', 2.598833643460815e-06], ['(compare_address_terms);', 2.598833643460815e-06], ['"recording', 2.598833643460815e-06], ['%T",', 2.598833643460815e-06], ['multiplier);', 2.598833643460815e-06], ['*address);', 2.598833643460815e-06], ['Pool', 2.598833643460815e-06], ['**slot', 2.598833643460815e-06], ['m_address_table.find_slot', 2.598833643460815e-06], ['*old_address', 2.598833643460815e-06], ['*slot)', 2.598833643460815e-06], ['paper', 2.598833643460815e-06], ['gaps,', 2.598833643460815e-06], ['3];', 2.598833643460815e-06], ['vectorizer', 2.598833643460815e-06], ['gapped', 2.598833643460815e-06], ['problems,', 2.598833643460815e-06], ['(old_address->min_offset', 2.598833643460815e-06], ['address->min_offset)', 2.598833643460815e-06], ['old_address->min_offset', 2.598833643460815e-06], ['address->min_offset;', 2.598833643460815e-06], ['(old_address->max_offset', 2.598833643460815e-06], ['address->max_offset)', 2.598833643460815e-06], ['old_address->max_offset', 2.598833643460815e-06], ['address->max_offset;', 2.598833643460815e-06], ['address;', 2.598833643460815e-06], ['m_address_list.safe_push', 2.598833643460815e-06], ['(address);', 2.598833643460815e-06], ['loop_versioning::analyze_expr', 2.598833643460815e-06], ['(handled_component_p', 2.598833643460815e-06], ['ARRAY_REF', 2.598833643460815e-06], ['MEM_REF.', 2.598833643460815e-06], ['TARGET_MEM_REF);', 2.598833643460815e-06], ['versioned.', 2.598833643460815e-06], ['loop_versioning::analyze_block', 2.598833643460815e-06], ['bb->loop_father;', 2.598833643460815e-06], ['(expensive_stmt_p', 2.598833643460815e-06], ['"expensive', 2.598833643460815e-06], ['versioning:', 2.598833643460815e-06], ['tends', 2.598833643460815e-06], ['(!loop->inner)', 2.598833643460815e-06], ['gimple_num_ops', 2.598833643460815e-06], ['nops;', 2.598833643460815e-06], ['gimple_op', 2.598833643460815e-06], ['op);', 2.598833643460815e-06], ['growth,', 2.598833643460815e-06], ['size-based', 2.598833643460815e-06], ['aimed', 2.598833643460815e-06], ['speed.', 2.598833643460815e-06], ['estimate_num_insns', 2.598833643460815e-06], ['&eni_size_weights);', 2.598833643460815e-06], ['loop_versioning::analyze_blocks', 2.598833643460815e-06], ['("analyze_blocks",', 2.598833643460815e-06], ['(get_loop', 2.598833643460815e-06], ['0)).rejected_p', 2.598833643460815e-06], ['cold', 2.598833643460815e-06], ['(!optimize_loop_for_speed_p', 2.598833643460815e-06], ['(inner).rejected_p)', 2.598833643460815e-06], ['possibility,', 2.598833643460815e-06], ['*start_point', 2.598833643460815e-06], ['obstack_alloc', 2.598833643460815e-06], ['linfo.block_list;', 2.598833643460815e-06], ['m_next_block_in_loop[bb->index])', 2.598833643460815e-06], ['(!analyze_block', 2.598833643460815e-06], ['(bb))', 2.598833643460815e-06], ['fragments,', 2.598833643460815e-06], ['grouping', 2.598833643460815e-06], ['*address;', 2.598833643460815e-06], ['(m_address_list,', 2.598833643460815e-06], ['address)', 2.598833643460815e-06], ['(*address);', 2.598833643460815e-06], ['m_address_table.empty', 2.598833643460815e-06], ['m_address_list.truncate', 2.598833643460815e-06], ['start_point);', 2.598833643460815e-06], ['VRS', 2.598833643460815e-06], ['loop_versioning::prune_loop_conditions', 2.598833643460815e-06], ['*vrs)', 2.598833643460815e-06], ['value_range', 2.598833643460815e-06], ['*vr', 2.598833643460815e-06], ['vrs->get_value_range', 2.598833643460815e-06], ['(vr', 2.598833643460815e-06], ['!range_includes_p', 2.598833643460815e-06], ['(vr,', 2.598833643460815e-06], ['scheduled', 2.598833643460815e-06], ['loop_versioning::prune_conditions', 2.598833643460815e-06], ['("prune_loop_conditions",', 2.598833643460815e-06], ['calculate_dominance_info', 2.598833643460815e-06], ['(CDI_DOMINATORS);', 2.598833643460815e-06], ['dom_walker.walk', 2.598833643460815e-06], ['(m_fn));', 2.598833643460815e-06], ['INNER', 2.598833643460815e-06], ['immediately-enclosing', 2.598833643460815e-06], ['OUTER.', 2.598833643460815e-06], ['loop_versioning::merge_loop_info', 2.598833643460815e-06], ['*inner)', 2.598833643460815e-06], ['&outer_li', 2.598833643460815e-06], ['(outer);', 2.598833643460815e-06], ['(&inner_li.unity_names,', 2.598833643460815e-06], ['(!bitmap_bit_p', 2.598833643460815e-06], ['(inner),', 2.598833643460815e-06], ['"hoisting', 2.598833643460815e-06], ['bitmap_ior_into', 2.598833643460815e-06], ['&inner_li.unity_names);', 2.598833643460815e-06], ['(outer_li.outermost)', 2.598833643460815e-06], ['(inner_li.outermost))', 2.598833643460815e-06], ['outer_li.outermost', 2.598833643460815e-06], ['inner_li.outermost;', 2.598833643460815e-06], ['loop_versioning::add_loop_to_queue', 2.598833643460815e-06], ['"queuing', 2.598833643460815e-06], ['versioning\\n");', 2.598833643460815e-06], ['m_loops_to_version.safe_push', 2.598833643460815e-06], ['superloops.', 2.598833643460815e-06], ['li.rejected_p', 2.598833643460815e-06], ['benefited.', 2.598833643460815e-06], ['decision', 2.598833643460815e-06], ['loop_versioning::decide_whether_loop_is_versionable', 2.598833643460815e-06], ['(li.rejected_p)', 2.598833643460815e-06], ['decisions', 2.598833643460815e-06], ['(inner_li.rejected_p)', 2.598833643460815e-06], ['its"', 2.598833643460815e-06], ['versioned\\n");', 2.598833643460815e-06], ['(inner_li.worth_versioning_p', 2.598833643460815e-06], ['li.subloops_benefit_p', 2.598833643460815e-06], ['Accumulate', 2.598833643460815e-06], ['loop-versioning-max-inner-insns;', 2.598833643460815e-06], ['loop-versioning-max-outer-insns.', 2.598833643460815e-06], ['(!inner_li.worth_versioning_p', 2.598833643460815e-06], ['inner->inner)', 2.598833643460815e-06], ['"counting', 2.598833643460815e-06], ['inner_li.num_insns);', 2.598833643460815e-06], ['inner_li.num_insns;', 2.598833643460815e-06], ['limits.', 2.598833643460815e-06], ['(li.worth_versioning_p', 2.598833643460815e-06], ['max_num_insns', 2.598833643460815e-06], ['against"', 2.598833643460815e-06], ['li.num_insns,', 2.598833643460815e-06], ['max_num_insns);', 2.598833643460815e-06], ['(li.num_insns', 2.598833643460815e-06], ['max_num_insns)', 2.598833643460815e-06], ['(MSG_MISSED_OPTIMIZATION', 2.598833643460815e-06], ['MSG_PRIORITY_USER_FACING,', 2.598833643460815e-06], ['version");', 2.598833643460815e-06], ['Hoist', 2.598833643460815e-06], ['subloop);', 2.598833643460815e-06], ['loop_versioning::make_versioning_decisions', 2.598833643460815e-06], ['("make_versioning_decisions",', 2.598833643460815e-06], ['(decide_whether_loop_is_versionable', 2.598833643460815e-06], ['Commit', 2.598833643460815e-06], ['(linfo.worth_versioning_p', 2.598833643460815e-06], ['linfo.outermost', 2.598833643460815e-06], ['individually', 2.598833643460815e-06], ['(subloop).worth_versioning_p', 2.598833643460815e-06], ['(subloop);', 2.598833643460815e-06], ['!m_loops_to_version.is_empty', 2.598833643460815e-06], ['loop_info.', 2.598833643460815e-06], ['loop_versioning::version_loop', 2.598833643460815e-06], ['ne_one', 2.598833643460815e-06], ['(name)));', 2.598833643460815e-06], ['ne_one);', 2.598833643460815e-06], ['gcond.', 2.598833643460815e-06], ['force_gimple_operand_1', 2.598833643460815e-06], ['&stmts,', 2.598833643460815e-06], ['is_gimple_condexpr,', 2.598833643460815e-06], ['Version', 2.598833643460815e-06], ['initialize_original_copy_tables', 2.598833643460815e-06], ['cond_bb;', 2.598833643460815e-06], ['li.optimized_loop', 2.598833643460815e-06], ['loop_version', 2.598833643460815e-06], ['&cond_bb,', 2.598833643460815e-06], ['free_original_copy_tables', 2.598833643460815e-06], ['(!li.optimized_loop)', 2.598833643460815e-06], ['"tried', 2.598833643460815e-06], ['when"', 2.598833643460815e-06], ['"versioned', 2.598833643460815e-06], ['feed', 2.598833643460815e-06], ['COND.', 2.598833643460815e-06], ['(cond_bb);', 2.598833643460815e-06], ['loop_versioning::implement_versioning_decisions', 2.598833643460815e-06], ['user-facing', 2.598833643460815e-06], ['(version_loop', 2.598833643460815e-06], ['(!any_succeeded_p)', 2.598833643460815e-06], ['update_ssa', 2.598833643460815e-06], ['(TODO_update_ssa);', 2.598833643460815e-06], ['(linfo.optimized_loop)', 2.598833643460815e-06], ['(linfo).substitute_and_fold', 2.598833643460815e-06], ['(linfo.optimized_loop->header);', 2.598833643460815e-06], ['TODO_*', 2.598833643460815e-06], ['loop_versioning::run', 2.598833643460815e-06], ['(scev_initialized_p', 2.598833643460815e-06], ['(analyze_blocks', 2.598833643460815e-06], ['pass_data_loop_versioning', 2.598833643460815e-06], ['"lversion",', 2.598833643460815e-06], ['TV_LOOP_VERSIONING,', 2.598833643460815e-06], ['(pass_data_loop_versioning,', 2.598833643460815e-06], ['flag_version_loops_for_strides;', 2.598833643460815e-06], ['pass_loop_versioning::execute', 2.598833643460815e-06], ['(fn).run', 2.598833643460815e-06], ['make_pass_loop_versioning', 2.598833643460815e-06], ['export.cc', 2.598833643460815e-06], ['Export::magic_len;', 2.598833643460815e-06], ['Export::cur_magic[Export::magic_len]', 2.598833643460815e-06], ["'3',", 2.598833643460815e-06], ['Magic', 2.598833643460815e-06], ['(still', 2.598833643460815e-06], ['supported).', 2.598833643460815e-06], ['Export::v1_magic[Export::magic_len]', 2.598833643460815e-06], ["'1',", 2.598833643460815e-06], ['Export::v2_magic[Export::magic_len]', 2.598833643460815e-06], ["'2',", 2.598833643460815e-06], ['Export::checksum_len;', 2.598833643460815e-06], ['Export::Export(Stream*', 2.598833643460815e-06], ['stream)', 2.598833643460815e-06], ['type_index_(1),', 2.598833643460815e-06], ['packages_()', 2.598833643460815e-06], ['go_assert(Export::checksum_len', 2.598833643460815e-06], ['Go_sha1_helper::checksum_len);', 2.598833643460815e-06], ['distinct.', 2.598833643460815e-06], ['Type_hash_alias_identical', 2.598833643460815e-06], ['type->hash_for_method(NULL,', 2.598833643460815e-06], ['Type::COMPARE_ALIASES));', 2.598833643460815e-06], ['Type_alias_identical', 2.598833643460815e-06], ['Type::are_identical(t1,', 2.598833643460815e-06], ['Type::COMPARE_ALIASES),', 2.598833643460815e-06], ['nicer', 2.598833643460815e-06], ['Export,', 2.598833643460815e-06], ['export.h', 2.598833643460815e-06], ['types.h.', 2.598833643460815e-06], ['Unordered_map_hash(const', 2.598833643460815e-06], ['Type_hash_alias_identical,', 2.598833643460815e-06], ['Type_alias_identical)', 2.598833643460815e-06], ['Type_refs;', 2.598833643460815e-06], ['Type_refs', 2.598833643460815e-06], ['type_refs;', 2.598833643460815e-06], ['functor', 2.598833643460815e-06], ['Sort_bindings', 2.598833643460815e-06], ['n1->name()', 2.598833643460815e-06], ['n2->name();', 2.598833643460815e-06], ['NO.', 2.598833643460815e-06], ['should_export(Named_object*', 2.598833643460815e-06], ['(Gogo::is_hidden_name(no->name()))', 2.598833643460815e-06], ['(Gogo::is_special_name(no->name()))', 2.598833643460815e-06], ['no->func_value()->type()->is_method())', 2.598833643460815e-06], ['no->func_declaration_value()->type()->is_method())', 2.598833643460815e-06], ['sinks.', 2.598833643460815e-06], ['exporting.', 2.598833643460815e-06], ['Export::export_globals(const', 2.598833643460815e-06], ['packages,', 2.598833643460815e-06], ['far,', 2.598833643460815e-06], ['confusions.', 2.598833643460815e-06], ['irrelevant', 2.598833643460815e-06], ['exports;', 2.598833643460815e-06], ['exports.reserve(bindings->size_definitions());', 2.598833643460815e-06], ['(should_export(*p))', 2.598833643460815e-06], ['exports.push_back(*p);', 2.598833643460815e-06], ['(p->second->is_function_declaration()', 2.598833643460815e-06], ['should_export(p->second))', 2.598833643460815e-06], ['exports.push_back(p->second);', 2.598833643460815e-06], ['std::sort(exports.begin(),', 2.598833643460815e-06], ['exports.end(),', 2.598833643460815e-06], ['Sort_bindings());', 2.598833643460815e-06], ['mentioned.', 2.598833643460815e-06], ['type_imports;', 2.598833643460815e-06], ['unexported_type_index', 2.598833643460815e-06], ['this->prepare_types(&exports,', 2.598833643460815e-06], ['&type_imports);', 2.598833643460815e-06], ['readable,', 2.598833643460815e-06], ['conceptually', 2.598833643460815e-06], ['this->write_bytes(Export::cur_magic,', 2.598833643460815e-06], ['(prefix.empty())', 2.598833643460815e-06], ['this->write_c_string("pkgpath', 2.598833643460815e-06], ['this->write_string(pkgpath);', 2.598833643460815e-06], ['this->write_c_string("prefix', 2.598833643460815e-06], ['this->write_string(prefix);', 2.598833643460815e-06], ['this->write_packages(packages);', 2.598833643460815e-06], ['this->write_imports(imports,', 2.598833643460815e-06], ['type_imports);', 2.598833643460815e-06], ['this->write_imported_init_fns(package_name,', 2.598833643460815e-06], ['imported_init_fns);', 2.598833643460815e-06], ['area', 2.598833643460815e-06], ['this->write_types(unexported_type_index);', 2.598833643460815e-06], ['non-type', 2.598833643460815e-06], ['exports.begin();', 2.598833643460815e-06], ['exports.end();', 2.598833643460815e-06], ['(*p)->export_named_object(this);', 2.598833643460815e-06], ['this->stream_->checksum();', 2.598833643460815e-06], ['"checksum', 2.598833643460815e-06], ['checksum.begin();', 2.598833643460815e-06], ['checksum.end();', 2.598833643460815e-06], ['this->stream_->write_checksum(s);', 2.598833643460815e-06], ['Find_types_to_prepare(Export*', 2.598833643460815e-06], ['exp_(exp),', 2.598833643460815e-06], ['imports_(imports)', 2.598833643460815e-06], ['type(Type*', 2.598833643460815e-06], ['traverse_function(Function_type*);', 2.598833643460815e-06], ['traverse_named_type(Named_type*);', 2.598833643460815e-06], ['Exporters.', 2.598833643460815e-06], ['Export*', 2.598833643460815e-06], ['exp_;', 2.598833643460815e-06], ['imports_;', 2.598833643460815e-06], ['Find_types_to_prepare::type(Type*', 2.598833643460815e-06], ['forwarders;', 2.598833643460815e-06], ['(type->forward_declaration_type()', 2.598833643460815e-06], ['exported,', 2.598833643460815e-06], ['Pointer_type::do_export', 2.598833643460815e-06], ['sorted,', 2.598833643460815e-06], ['set_type_index', 2.598833643460815e-06], ['(!this->exp_->set_type_index(type))', 2.598833643460815e-06], ['traverses', 2.598833643460815e-06], ['it->local_methods();', 2.598833643460815e-06], ['Type::traverse(p->type(),', 2.598833643460815e-06], ['this->traverse_function(p->type()->function_type());', 2.598833643460815e-06], ['this->traverse_named_type(nt);', 2.598833643460815e-06], ['Find_types_to_prepare::traverse_function(Function_type*', 2.598833643460815e-06], ['(this->remember_type(type))', 2.598833643460815e-06], ['Type::traverse(receiver->type(),', 2.598833643460815e-06], ['parameters->traverse(this);', 2.598833643460815e-06], ['type->results();', 2.598833643460815e-06], ['results->traverse(this);', 2.598833643460815e-06], ['Find_types_to_prepare::traverse_named_type(Named_type*', 2.598833643460815e-06], ['this->imports_->insert(package);', 2.598833643460815e-06], ['(*pm)->func_value();', 2.598833643460815e-06], ['this->traverse_function(fn->type());', 2.598833643460815e-06], ['fn->block()->traverse(this);', 2.598833643460815e-06], ['pm->second;', 2.598833643460815e-06], ['(mno->is_function_declaration())', 2.598833643460815e-06], ['this->traverse_function(mno->func_declaration_value()->type());', 2.598833643460815e-06], ['importer', 2.598833643460815e-06], ['Export::prepare_types(const', 2.598833643460815e-06], ['exports,', 2.598833643460815e-06], ['(*p)->type_value()->interface_type();', 2.598833643460815e-06], ['this->set_type_index((*p)->type_value());', 2.598833643460815e-06], ["they've", 2.598833643460815e-06], ['find(this,', 2.598833643460815e-06], ['imports);', 2.598833643460815e-06], ['(no->classification())', 2.598833643460815e-06], ['!t->is_abstract())', 2.598833643460815e-06], ['Type::traverse(t,', 2.598833643460815e-06], ['Type::traverse(no->type_value()->real_type(),', 2.598833643460815e-06], ['find.traverse_named_type(no->type_value());', 2.598833643460815e-06], ['Type::traverse(no->var_value()->type(),', 2.598833643460815e-06], ['find.traverse_function(fn->type());', 2.598833643460815e-06], ['fn->block()->traverse(&find);', 2.598833643460815e-06], ['find.traverse_function(no->func_declaration_value()->type());', 2.598833643460815e-06], ['Export::set_type_index(Type*', 2.598833643460815e-06], ['type_refs.insert(std::make_pair(type,', 2.598833643460815e-06], ['++this->type_index_;', 2.598833643460815e-06], ['packages_compare(const', 2.598833643460815e-06], ['a->package_name()', 2.598833643460815e-06], ['b->package_name();', 2.598833643460815e-06], ['Export::write_packages(const', 2.598833643460815e-06], ['packages)', 2.598833643460815e-06], ['std::vector<Package*>', 2.598833643460815e-06], ['packages.begin();', 2.598833643460815e-06], ['packages.end();', 2.598833643460815e-06], ['(p->second->pkgpath_symbol()', 2.598833643460815e-06], ['Gogo::pkgpath_for_symbol(p->second->pkgpath()))', 2.598833643460815e-06], ['out.push_back(p->second);', 2.598833643460815e-06], ['std::sort(out.begin(),', 2.598833643460815e-06], ['out.end(),', 2.598833643460815e-06], ['(std::vector<Package*>::const_iterator', 2.598833643460815e-06], ['out.begin();', 2.598833643460815e-06], ['out.end();', 2.598833643460815e-06], ['this->write_string((*p)->pkgpath_symbol());', 2.598833643460815e-06], ['import_compare(const', 2.598833643460815e-06], ['a.first', 2.598833643460815e-06], ['b.first;', 2.598833643460815e-06], ['Export::write_imports(const', 2.598833643460815e-06], ['Package*)&', 2.598833643460815e-06], ['type_imports)', 2.598833643460815e-06], ['sorted_imports;', 2.598833643460815e-06], ['imports.begin();', 2.598833643460815e-06], ['imports.end();', 2.598833643460815e-06], ['sorted_imports.push_back(std::make_pair(p->first,', 2.598833643460815e-06], ['seen.insert(p->second);', 2.598833643460815e-06], ['std::sort(sorted_imports.begin(),', 2.598833643460815e-06], ['sorted_imports.end(),', 2.598833643460815e-06], ['import_compare);', 2.598833643460815e-06], ['sorted_imports.begin();', 2.598833643460815e-06], ['sorted_imports.end();', 2.598833643460815e-06], ['this->write_c_string("import', 2.598833643460815e-06], ['this->write_string(p->second->package_name());', 2.598833643460815e-06], ['this->write_string(p->second->pkgpath());', 2.598833643460815e-06], ['this->write_string(p->first);', 2.598833643460815e-06], ['this->write_c_string("\\"\\n");', 2.598833643460815e-06], ['this->packages_.insert(p->second);', 2.598833643460815e-06], ['indirect_imports;', 2.598833643460815e-06], ['(Unordered_set(const', 2.598833643460815e-06], ['Package*)::const_iterator', 2.598833643460815e-06], ['type_imports.begin();', 2.598833643460815e-06], ['type_imports.end();', 2.598833643460815e-06], ['(seen.find(*p)', 2.598833643460815e-06], ['indirect_imports.push_back(*p);', 2.598833643460815e-06], ['std::sort(indirect_imports.begin(),', 2.598833643460815e-06], ['indirect_imports.end(),', 2.598833643460815e-06], ['indirect_imports.begin();', 2.598833643460815e-06], ['indirect_imports.end();', 2.598833643460815e-06], ['this->write_c_string("indirectimport', 2.598833643460815e-06], ['Export::add_init_graph_edge(Init_graph*', 2.598833643460815e-06], ['sink)', 2.598833643460815e-06], ['Init_graph::iterator', 2.598833643460815e-06], ['init_graph->find(src);', 2.598833643460815e-06], ['init_graph->end())', 2.598833643460815e-06], ['it->second.insert(sink);', 2.598833643460815e-06], ['std::set<unsigned>', 2.598833643460815e-06], ['succs.insert(sink);', 2.598833643460815e-06], ['(*init_graph)[src]', 2.598833643460815e-06], ['Constructs', 2.598833643460815e-06], ['Export::populate_init_graph(Init_graph*', 2.598833643460815e-06], ['unsigned>&', 2.598833643460815e-06], ['init_idx)', 2.598833643460815e-06], ['srcit', 2.598833643460815e-06], ['init_idx.find(ii->init_name());', 2.598833643460815e-06], ['go_assert(srcit', 2.598833643460815e-06], ['srcit->second;', 2.598833643460815e-06], ['init_idx.find(*pci);', 2.598833643460815e-06], ['go_assert(it', 2.598833643460815e-06], ['add_init_graph_edge(init_graph,', 2.598833643460815e-06], ['Export::write_imported_init_fns(const', 2.598833643460815e-06], ['imported_init_fns)', 2.598833643460815e-06], ['(import_init_fn.empty()', 2.598833643460815e-06], ['imported_init_fns.empty())', 2.598833643460815e-06], ['this->write_c_string("init");', 2.598833643460815e-06], ['this->write_string(import_init_fn);', 2.598833643460815e-06], ['init_idx[import_init_fn]', 2.598833643460815e-06], ['(imported_init_fns.empty())', 2.598833643460815e-06], ['std::map<int,', 2.598833643460815e-06], ['level_map;', 2.598833643460815e-06], ['Init_graph', 2.598833643460815e-06], ['init_graph;', 2.598833643460815e-06], ['level_map', 2.598833643460815e-06], ['inits_at_level;', 2.598833643460815e-06], ['import_init_fn)', 2.598833643460815e-06], ['this->write_string(ii->package_name());', 2.598833643460815e-06], ['this->write_string(ii->init_name());', 2.598833643460815e-06], ['init_idx.', 2.598833643460815e-06], ['go_assert(init_idx.find(ii->init_name())', 2.598833643460815e-06], ['init_idx[ii->init_name()]', 2.598833643460815e-06], ['file).', 2.598833643460815e-06], ['fcns', 2.598833643460815e-06], ['(handled', 2.598833643460815e-06], ['function).', 2.598833643460815e-06], ['inits_at_level.find(ii->priority());', 2.598833643460815e-06], ['l.push_back(ii->init_name());', 2.598833643460815e-06], ['inits_at_level[ii->priority()]', 2.598833643460815e-06], ['it->second.push_back(ii->init_name());', 2.598833643460815e-06], ['populating', 2.598833643460815e-06], ['populate_init_graph(&init_graph,', 2.598833643460815e-06], ['init_idx);', 2.598833643460815e-06], ['fcns.', 2.598833643460815e-06], ['go_assert(init_idx[import_init_fn]', 2.598833643460815e-06], ['init_idx[ii->init_name()];', 2.598833643460815e-06], ['relationships.', 2.598833643460815e-06], ['*A', 2.598833643460815e-06], ['*C', 2.598833643460815e-06], ['*D', 2.598833643460815e-06], ['*E', 2.598833643460815e-06], ['|/', 2.598833643460815e-06], ['*F', 2.598833643460815e-06], ['*G', 2.598833643460815e-06], ['suppose', 2.598833643460815e-06], ['gccgo,', 2.598833643460815e-06], ['Packages', 2.598833643460815e-06], ["*'s", 2.598833643460815e-06], ['"A";', 2.598833643460815e-06], ['F..import', 2.598833643460815e-06], ['G..import', 2.598833643460815e-06], ['D..import', 2.598833643460815e-06], ['E..import', 2.598833643460815e-06], ['convey', 2.598833643460815e-06], ['consumers', 2.598833643460815e-06], ['"A",', 2.598833643460815e-06], ['K-1', 2.598833643460815e-06], ['K.', 2.598833643460815e-06], ['G),', 2.598833643460815e-06], ['(inits_at_level.size()', 2.598833643460815e-06], ['(level_map::reverse_iterator', 2.598833643460815e-06], ['inits_at_level.rbegin();', 2.598833643460815e-06], ['inits_at_level.rend();', 2.598833643460815e-06], ['std::vector<std::string>&', 2.598833643460815e-06], ['fcns_at_level', 2.598833643460815e-06], ['fcns_at_level.begin();', 2.598833643460815e-06], ['fcns_at_level.end();', 2.598833643460815e-06], ['++sit)', 2.598833643460815e-06], ['init_idx[*sit];', 2.598833643460815e-06], ['inits_at_level.find(level', 2.598833643460815e-06], ['(it2', 2.598833643460815e-06], ['fcns_at_lm1', 2.598833643460815e-06], ['it2->second;', 2.598833643460815e-06], ['fcns_at_lm1.begin();', 2.598833643460815e-06], ['fcns_at_lm1.end();', 2.598833643460815e-06], ['++mit)', 2.598833643460815e-06], ['init_idx[*mit];', 2.598833643460815e-06], ['this->write_c_string("init_graph");', 2.598833643460815e-06], ['(Init_graph::const_iterator', 2.598833643460815e-06], ['init_graph.begin();', 2.598833643460815e-06], ['init_graph.end();', 2.598833643460815e-06], ['++ki)', 2.598833643460815e-06], ['ki->first;', 2.598833643460815e-06], ['std::set<unsigned>&', 2.598833643460815e-06], ['successors', 2.598833643460815e-06], ['ki->second;', 2.598833643460815e-06], ['(std::set<unsigned>::const_iterator', 2.598833643460815e-06], ['successors.begin();', 2.598833643460815e-06], ['successors.end();', 2.598833643460815e-06], ['++vi)', 2.598833643460815e-06], ['this->write_unsigned(src);', 2.598833643460815e-06], ['(*vi);', 2.598833643460815e-06], ['this->write_unsigned(sink);', 2.598833643460815e-06], ['Export::write_types(int', 2.598833643460815e-06], ['unexported_type_index)', 2.598833643460815e-06], ['types(static_cast<size_t>(this->type_index_));', 2.598833643460815e-06], ['(Type_refs::const_iterator', 2.598833643460815e-06], ['type_refs.begin();', 2.598833643460815e-06], ['type_refs.end();', 2.598833643460815e-06], ['types.at(p->second)', 2.598833643460815e-06], ['Stream_to_string', 2.598833643460815e-06], ['Export::Stream*', 2.598833643460815e-06], ['&type_data;', 2.598833643460815e-06], ['std::vector<size_t>', 2.598833643460815e-06], ['type_sizes(static_cast<size_t>(this->type_index_));', 2.598833643460815e-06], ['type_sizes[0]', 2.598833643460815e-06], ['this->write_type_definition(types[i],', 2.598833643460815e-06], ['type_data.string().size();', 2.598833643460815e-06], ['type_sizes[i]', 2.598833643460815e-06], ['start_size;', 2.598833643460815e-06], ['cur_size;', 2.598833643460815e-06], ['Back', 2.598833643460815e-06], ['SIZES..."', 2.598833643460815e-06], ['used;', 2.598833643460815e-06], ['Indexes', 2.598833643460815e-06], ['SIZES...', 2.598833643460815e-06], ['MAXP1-1', 2.598833643460815e-06], ['listing', 2.598833643460815e-06], ['this->type_index_,', 2.598833643460815e-06], ['unexported_type_index);', 2.598833643460815e-06], ['long>(type_sizes[i]));', 2.598833643460815e-06], ['this->write_string(type_data.string());', 2.598833643460815e-06], ['Export::write_type_definition(const', 2.598833643460815e-06], ['this->write_c_string("type', 2.598833643460815e-06], ['"%d', 2.598833643460815e-06], ['this->write_c_string("\\"");', 2.598833643460815e-06], ['this->write_string(package->pkgpath());', 2.598833643460815e-06], ['this->write_c_string(".");', 2.598833643460815e-06], ['this->write_string(nt->named_object()->name());', 2.598833643460815e-06], ['this->write_c_string("\\"', 2.598833643460815e-06], ['this->write_c_string("=', 2.598833643460815e-06], ['type->export_type(this);', 2.598833643460815e-06], ['Type::export_type', 2.598833643460815e-06], ['Export::write_name(const', 2.598833643460815e-06], ['this->write_c_string("?");', 2.598833643460815e-06], ['this->write_string(Gogo::message_name(name));', 2.598833643460815e-06], ['Export::write_int(int', 2.598833643460815e-06], ['Export::write_unsigned(unsigned', 2.598833643460815e-06], ['Export::type_index(const', 2.598833643460815e-06], ['Type_refs::const_iterator', 2.598833643460815e-06], ['type_refs.find(type);', 2.598833643460815e-06], ['type_refs.end());', 2.598833643460815e-06], ['Export::write_type(const', 2.598833643460815e-06], ['Export::write_type_to(const', 2.598833643460815e-06], ['Export_function_body*', 2.598833643460815e-06], ['Export::write_escape(std::string*', 2.598833643460815e-06], ['note)', 2.598833643460815e-06], ['(note', 2.598833643460815e-06], ['*note', 2.598833643460815e-06], ['"esc:0x0")', 2.598833643460815e-06], ['go_assert(note->find("esc:")', 2.598833643460815e-06], ['"<%s>",', 2.598833643460815e-06], ['note->c_str());', 2.598833643460815e-06], ['Export::register_builtin_types(Gogo*', 2.598833643460815e-06], ['Export::register_builtin_type(Gogo*', 2.598833643460815e-06], ['type_refs.insert(std::make_pair(named_object->type_value(),', 2.598833643460815e-06], ['fails--we', 2.598833643460815e-06], ['duplications', 2.598833643460815e-06], ['named_object->type_value()->real_type();', 2.598833643460815e-06], ['type_refs.insert(std::make_pair(real_type,', 2.598833643460815e-06], ['Export::Stream.', 2.598833643460815e-06], ['Export::Stream::Stream()', 2.598833643460815e-06], ['this->sha1_helper_', 2.598833643460815e-06], ['go_assert(this->sha1_helper_', 2.598833643460815e-06], ['Export::Stream::~Stream()', 2.598833643460815e-06], ['by.', 2.598833643460815e-06], ['Export::Stream::write_and_sum_bytes(const', 2.598833643460815e-06], ['this->sha1_helper_->process_bytes(bytes,', 2.598833643460815e-06], ['this->do_write(bytes,', 2.598833643460815e-06], ['Export::Stream::checksum()', 2.598833643460815e-06], ['this->sha1_helper_->finish();', 2.598833643460815e-06], ['this->sha1_helper_;', 2.598833643460815e-06], ['Export::Stream::write_checksum(const', 2.598833643460815e-06], ['this->do_write(s.data(),', 2.598833643460815e-06], ['s.length());', 2.598833643460815e-06], ['Stream_to_section.', 2.598833643460815e-06], ['Stream_to_section::Stream_to_section(Backend*', 2.598833643460815e-06], ['backend)', 2.598833643460815e-06], ['backend_(backend)', 2.598833643460815e-06], ['Stream_to_section::do_write(const', 2.598833643460815e-06], ['this->backend_->write_export_data', 2.598833643460815e-06], ['d-codegen.cc', 2.598833643460815e-06], ['Code', 2.598833643460815e-06], ['loc.filename,', 2.598833643460815e-06], ['loc.linnum);', 2.598833643460815e-06], ['loc.linnum,', 2.598833643460815e-06], ['loc.charnum);', 2.598833643460815e-06], ['gcc_location;', 2.598833643460815e-06], ['dsym;', 2.598833643460815e-06], ['dsym->isDeclaration', 2.598833643460815e-06], ['((parent', 2.598833643460815e-06], ['parent->toParent2', 2.598833643460815e-06], ['extern(D)', 2.598833643460815e-06], ['(parent->isModule', 2.598833643460815e-06], ['decl->linkage', 2.598833643460815e-06], ['(parent);', 2.598833643460815e-06], ["'static'", 2.598833643460815e-06], ["'__gshared'", 2.598833643460815e-06], ['Nested', 2.598833643460815e-06], ['parent->isFuncDeclaration', 2.598833643460815e-06], ['parent->isAggregateDeclaration', 2.598833643460815e-06], ['RECORD_TYPE.', 2.598833643460815e-06], ['(context);', 2.598833643460815e-06], ['newtype', 2.598833643460815e-06], ['(newtype)', 2.598833643460815e-06], ['(newtype);', 2.598833643460815e-06], ['(f))', 2.598833643460815e-06], ['declaration_reference_p', 2.598833643460815e-06], ['decl->type->toBasetype', 2.598833643460815e-06], ['decl->type,', 2.598833643460815e-06], ['(decl->isParameter', 2.598833643460815e-06], ['(decl->type))', 2.598833643460815e-06], ['decl->type->nextOf', 2.598833643460815e-06], ['(decl->type->mod);', 2.598833643460815e-06], ['const.', 2.598833643460815e-06], ['(decl->isThisDeclaration', 2.598833643460815e-06], ['MODconst);', 2.598833643460815e-06], ['argument_reference_p', 2.598833643460815e-06], ['arg->type->toBasetype', 2.598833643460815e-06], ['arg->storageClass', 2.598833643460815e-06], ['arg->type,', 2.598833643460815e-06], ['arg->type->nextOf', 2.598833643460815e-06], ['(arg->type->mod);', 2.598833643460815e-06], ['(dinteger_t', 2.598833643460815e-06], ['build_int_cst_type', 2.598833643460815e-06], ['REAL_CST', 2.598833643460815e-06], ['real_t&', 2.598833643460815e-06], ['new_value;', 2.598833643460815e-06], ['TypeBasic', 2.598833643460815e-06], ['totype->isTypeBasic', 2.598833643460815e-06], ['type_node', 2.598833643460815e-06], ['(&new_value.rv', 2.598833643460815e-06], ['(type_node),', 2.598833643460815e-06], ['&value.rv', 2.598833643460815e-06], ['(type_node,', 2.598833643460815e-06], ['new_value.rv', 2.598833643460815e-06], ['len_field);', 2.598833643460815e-06], ['DATA.', 2.598833643460815e-06], ['ptr_field;', 2.598833643460815e-06], ['(len_field);', 2.598833643460815e-06], ['(len_field),', 2.598833643460815e-06], ['(ptr_field),', 2.598833643460815e-06], ['ptr_field,', 2.598833643460815e-06], ['(tb->ty)', 2.598833643460815e-06], ['type->toChars', 2.598833643460815e-06], ["ClassDeclaration's", 2.598833643460815e-06], ['cd->baseClass));', 2.598833643460815e-06], ['debugger,', 2.598833643460815e-06], ['unsigned&', 2.598833643460815e-06], ['(cd->baseclasses->dim);', 2.598833643460815e-06], ['BINFO_VIRTUAL_P', 2.598833643460815e-06], ['cd->baseclasses->dim;', 2.598833643460815e-06], ['(*cd->baseclasses)[i];', 2.598833643460815e-06], ['bc->sym,', 2.598833643460815e-06], ['funcptr', 2.598833643460815e-06], ['method_field', 2.598833643460815e-06], ['method_field);', 2.598833643460815e-06], ['obj_field', 2.598833643460815e-06], ['obj_field);', 2.598833643460815e-06], ['METHOD,', 2.598833643460815e-06], ['(CONSTRUCTOR);', 2.598833643460815e-06], ['("delegate()",', 2.598833643460815e-06], ['("object"),', 2.598833643460815e-06], ['("func"),', 2.598833643460815e-06], ['(method));', 2.598833643460815e-06], ['(ctype)),', 2.598833643460815e-06], ['METHOD_CALL_EXPR', 2.598833643460815e-06], ['object)', 2.598833643460815e-06], ['0)->value;', 2.598833643460815e-06], ['1)->value;', 2.598833643460815e-06], ['interior', 2.598833643460815e-06], ['build_constructor_single', 2.598833643460815e-06], ['(ctype,', 2.598833643460815e-06], ['delegates,', 2.598833643460815e-06], ['(null_pointer_node,', 2.598833643460815e-06], ['null_pointer_node,', 2.598833643460815e-06], ['retrieve', 2.598833643460815e-06], ['INDEX.', 2.598833643460815e-06], ["class's", 2.598833643460815e-06], ['vtable,', 2.598833643460815e-06], ['(Target::ptrsize', 2.598833643460815e-06], ['lost.', 2.598833643460815e-06], ['SAVE_EXPR:', 2.598833643460815e-06], ['INDIRECT_REF:', 2.598833643460815e-06], ['!FUNC_OR_METHOD_TYPE_P', 2.598833643460815e-06], ['CASE_CONVERT:', 2.598833643460815e-06], ['unwanted', 2.598833643460815e-06], ['VALUEP', 2.598833643460815e-06], ['pre-evaluate', 2.598833643460815e-06], ['about,', 2.598833643460815e-06], ['Callers', 2.598833643460815e-06], ['*valuep)', 2.598833643460815e-06], ['*valuep;', 2.598833643460815e-06], ['((e1,', 2.598833643460815e-06], ['eN):', 2.598833643460815e-06], ["'eN'", 2.598833643460815e-06], ['*valuep', 2.598833643460815e-06], ['(TARGET_EXPR,', 2.598833643460815e-06], ['(EXPR_HAS_LOCATION', 2.598833643460815e-06], ['EXPR_LOCATION', 2.598833643460815e-06], ['reside', 2.598833643460815e-06], ['expand_expr', 2.598833643460815e-06], ['ptrtype;', 2.598833643460815e-06], ['(char[])', 2.598833643460815e-06], ['(char[]*)', 2.598833643460815e-06], ['decay', 2.598833643460815e-06], ['&(e1,', 2.598833643460815e-06], ['&e2).', 2.598833643460815e-06], ['request', 2.598833643460815e-06], ['build_fold_addr_expr_with_type_loc', 2.598833643460815e-06], ['ptrtype);', 2.598833643460815e-06], ['TREE_NO_TRAMPOLINE', 2.598833643460815e-06], ['"used"', 2.598833643460815e-06], ['DECL_READ_P', 2.598833643460815e-06], ['SD', 2.598833643460815e-06], ['(!identity_compare_p', 2.598833643460815e-06], ['(ts->sym))', 2.598833643460815e-06], ['Tcomplex80', 2.598833643460815e-06], ['Tfloat80', 2.598833643460815e-06], ['Timaginary80)', 2.598833643460815e-06], ['vd->type->size', 2.598833643460815e-06], ['sd->structsize)', 2.598833643460815e-06], ['sfield', 2.598833643460815e-06], ['type->isintegral', 2.598833643460815e-06], ['type->isfloating', 2.598833643460815e-06], ['(!type->iscomplex', 2.598833643460815e-06], ['opt_scalar_int_mode', 2.598833643460815e-06], ['int_mode_for_mode', 2.598833643460815e-06], ['(mode.exists', 2.598833643460815e-06], ['&t1)', 2.598833643460815e-06], ['&t2)', 2.598833643460815e-06], ['(tmode', 2.598833643460815e-06], ['(GET_MODE_BITSIZE', 2.598833643460815e-06], ['t1ref);', 2.598833643460815e-06], ['(t2ref),', 2.598833643460815e-06], ['tcmp,', 2.598833643460815e-06], ['(tmemcmp)', 2.598833643460815e-06], ['tcmp)', 2.598833643460815e-06], ['RECORD_TYPES', 2.598833643460815e-06], ['t1init', 2.598833643460815e-06], ['(&t1);', 2.598833643460815e-06], ['t2init', 2.598833643460815e-06], ['Bitwise', 2.598833643460815e-06], ['loosing', 2.598833643460815e-06], ['BLKmode', 2.598833643460815e-06], ['!identity_compare_p', 2.598833643460815e-06], ['(sd))', 2.598833643460815e-06], ['(sd->structsize);', 2.598833643460815e-06], ['(t1init,', 2.598833643460815e-06], ['t2init),', 2.598833643460815e-06], ['ARRAY_TYPES', 2.598833643460815e-06], ['LENGTH.', 2.598833643460815e-06], ['(d_bool_type);', 2.598833643460815e-06], ['pointer-to-array', 2.598833643460815e-06], ['pointer-to-struct.', 2.598833643460815e-06], ['(sd->type->pointerTo', 2.598833643460815e-06], ['t1)));', 2.598833643460815e-06], ['t2)));', 2.598833643460815e-06], ['boolean_false_node));', 2.598833643460815e-06], ['caching', 2.598833643460815e-06], ['(*t1', 2.598833643460815e-06], ['*t2);', 2.598833643460815e-06], ['t1++,', 2.598833643460815e-06], ['t2++;', 2.598833643460815e-06], ['(ptrtype)));', 2.598833643460815e-06], ['ubyte[T]', 2.598833643460815e-06], ['FIELDPOS.', 2.598833643460815e-06], ['(Type::tuns8,', 2.598833643460815e-06], ['(atype,', 2.598833643460815e-06], ['(atype));', 2.598833643460815e-06], ['DECL_PADDING_P', 2.598833643460815e-06], ['*init)', 2.598833643460815e-06], ['Filling', 2.598833643460815e-06], ['aggregates,', 2.598833643460815e-06], ['hole.', 2.598833643460815e-06], ['FOR_EACH_CONSTRUCTOR_ELT', 2.598833643460815e-06], ['idx,', 2.598833643460815e-06], ['layout_typeinfo(),', 2.598833643460815e-06], ['init->ordered_remove', 2.598833643460815e-06], ['(idx);', 2.598833643460815e-06], ['(!finished)', 2.598833643460815e-06], ['(is_initialized)', 2.598833643460815e-06], ['(field);', 2.598833643460815e-06], ['in-place', 2.598833643460815e-06], ['fieldpos);', 2.598833643460815e-06], ['overlap.', 2.598833643460815e-06], ['(fieldpos', 2.598833643460815e-06], ['nearest', 2.598833643460815e-06], ['(vtype))', 2.598833643460815e-06], ['(vtype);', 2.598833643460815e-06], ['(vfield))', 2.598833643460815e-06], ['(vfield)))', 2.598833643460815e-06], ['(vtype)', 2.598833643460815e-06], ['("overlapping', 2.598833643460815e-06], ['%qT.%qD",', 2.598833643460815e-06], ['(vtype),', 2.598833643460815e-06], ['drained', 2.598833643460815e-06], ['UNION_TYPE)', 2.598833643460815e-06], ['assigned,', 2.598833643460815e-06], ['Finally', 2.598833643460815e-06], ['consumed', 2.598833643460815e-06], ['harder.', 2.598833643460815e-06], ['subfield', 2.598833643460815e-06], ['(subfield)', 2.598833643460815e-06], ['subfield;', 2.598833643460815e-06], ['OBJECT.FIELD', 2.598833643460815e-06], ['(object)', 2.598833643460815e-06], ['FIELD_DECL);', 2.598833643460815e-06], ['e2).field', 2.598833643460815e-06], ['e2.field)', 2.598833643460815e-06], ['(&object);', 2.598833643460815e-06], ['member,', 2.598833643460815e-06], ['recur', 2.598833643460815e-06], ['FIELD.', 2.598833643460815e-06], ['anonymous_field', 2.598833643460815e-06], ['anonymous_field);', 2.598833643460815e-06], ['NRVO.', 2.598833643460815e-06], ['(rhs),', 2.598833643460815e-06], ['TARGET_EXPR_SLOT.', 2.598833643460815e-06], ['INIT_EXPR,', 2.598833643460815e-06], ['INIT_EXPR)', 2.598833643460815e-06], ['(rhs));', 2.598833643460815e-06], ['(lhs),', 2.598833643460815e-06], ['cast(TYPE)(e1,', 2.598833643460815e-06], ['cast(TYPE)', 2.598833643460815e-06], ['build_nop,', 2.598833643460815e-06], ['type-punned,', 2.598833643460815e-06], ['straight-forward', 2.598833643460815e-06], ['*(cast(TYPE', 2.598833643460815e-06], ['*)&e1)', 2.598833643460815e-06], ['vector-to-array', 2.598833643460815e-06], ['viewing,', 2.598833643460815e-06], ['MODIFY_EXPR.', 2.598833643460815e-06], ['warn', 2.598833643460815e-06], ['%<null%>",', 2.598833643460815e-06], ['Aggregate', 2.598833643460815e-06], ['(arg0)))', 2.598833643460815e-06], ['<e1', 2.598833643460815e-06], ['cmptype', 2.598833643460815e-06], ['build_same_sized_truth_vector_type', 2.598833643460815e-06], ['cmptype,', 2.598833643460815e-06], ['VEC_COND_EXPR,', 2.598833643460815e-06], ['NE_EXPR)', 2.598833643460815e-06], ['ARG0,', 2.598833643460815e-06], ['ARG2', 2.598833643460815e-06], ['(arg2', 2.598833643460815e-06], ['arg0;', 2.598833643460815e-06], ['(arg0', 2.598833643460815e-06], ['!TREE_SIDE_EFFECTS', 2.598833643460815e-06], ["target_expr's", 2.598833643460815e-06], ['(arg0,', 2.598833643460815e-06], ['(arg1));', 2.598833643460815e-06], ['(arg1),', 2.598833643460815e-06], ['size_type_node.', 2.598833643460815e-06], ['IM.', 2.598833643460815e-06], ['im)', 2.598833643460815e-06], ['pointer)', 2.598833643460815e-06], ['TYPE*', 2.598833643460815e-06], ['indirect.', 2.598833643460815e-06], ['(INDIRECT_REF,', 2.598833643460815e-06], ['build_fold_indirect_ref', 2.598833643460815e-06], ['PTR[INDEX].', 2.598833643460815e-06], ['target_type', 2.598833643460815e-06], ['(ptr_type);', 2.598833643460815e-06], ['size_exp', 2.598833643460815e-06], ['size_in_bytes', 2.598833643460815e-06], ['(target_type);', 2.598833643460815e-06], ['(target_type)', 2.598833643460815e-06], ['(void_type_node))', 2.598833643460815e-06], ['(target_type));', 2.598833643460815e-06], ['(integer_onep', 2.598833643460815e-06], ['size_exp));', 2.598833643460815e-06], ['ptr_type,', 2.598833643460815e-06], ['PLUS_EXPR);', 2.598833643460815e-06], ['OFFSET).', 2.598833643460815e-06], ['.length=length,', 2.598833643460815e-06], ['.ptr=ptr', 2.598833643460815e-06], ['ptr++;', 2.598833643460815e-06], ['loop_body', 2.598833643460815e-06], ['loop_body));', 2.598833643460815e-06], ['multidimensional', 2.598833643460815e-06], ['type)->dim->toInteger', 2.598833643460815e-06], ['dims;', 2.598833643460815e-06], ['byte*', 2.598833643460815e-06], ['&a[3];', 2.598833643460815e-06], ['(type)))', 2.598833643460815e-06], ['totype', 2.598833643460815e-06], ['(Type::tuns8->pointerTo', 2.598833643460815e-06], ['(totype,', 2.598833643460815e-06], ['throws', 2.598833643460815e-06], ['INCLUSIVE,', 2.598833643460815e-06], ['inclusive)', 2.598833643460815e-06], ['(!array_bounds_check', 2.598833643460815e-06], ['Prevent', 2.598833643460815e-06], ['unsigned.', 2.598833643460815e-06], ['(inclusive', 2.598833643460815e-06], ['GT_EXPR', 2.598833643460815e-06], ['GE_EXPR,', 2.598833643460815e-06], ['boundserr', 2.598833643460815e-06], ['boundserr,', 2.598833643460815e-06], ['*fd;', 2.598833643460815e-06], ['(global.params.useArrayBounds)', 2.598833643460815e-06], ['BOUNDSCHECKoff:', 2.598833643460815e-06], ['BOUNDSCHECKon:', 2.598833643460815e-06], ['BOUNDSCHECKsafeonly:', 2.598833643460815e-06], ['d_function_chain->function;', 2.598833643460815e-06], ['fd->type->ty', 2.598833643460815e-06], ['(tf->trust', 2.598833643460815e-06], ['TRUSTsafe)', 2.598833643460815e-06], ['OUT_VAR', 2.598833643460815e-06], ['*out_var)', 2.598833643460815e-06], ['(!DECL_P', 2.598833643460815e-06], ['!REFERENCE_CLASS_P', 2.598833643460815e-06], ['(*out_var)', 2.598833643460815e-06], ['*out_var;', 2.598833643460815e-06], ['VAR_CHAIN.', 2.598833643460815e-06], ['(var_chain))', 2.598833643460815e-06], ['ini', 2.598833643460815e-06], ['(var_chain));', 2.598833643460815e-06], ['(ini,', 2.598833643460815e-06], ['(build3', 2.598833643460815e-06], ['(body),', 2.598833643460815e-06], ['->toBasetype().', 2.598833643460815e-06], ['((TypeDelegate', 2.598833643460815e-06], ['t)->next;', 2.598833643460815e-06], ['tf;', 2.598833643460815e-06], ['call_by_alias_p', 2.598833643460815e-06], ['*caller,', 2.598833643460815e-06], ['*callee)', 2.598833643460815e-06], ['(!callee->isNested', 2.598833643460815e-06], ['(caller->toParent', 2.598833643460815e-06], ['callee->toParent', 2.598833643460815e-06], ['callee;', 2.598833643460815e-06], ['(dsym)', 2.598833643460815e-06], ['(dsym->isTemplateInstance', 2.598833643460815e-06], ['(dsym->isFuncDeclaration', 2.598833643460815e-06], ['caller)', 2.598833643460815e-06], ['dsym->toParent', 2.598833643460815e-06], ['(get_function_type', 2.598833643460815e-06], ['(fd->type),', 2.598833643460815e-06], ['(fd)),', 2.598833643460815e-06], ['TF', 2.598833643460815e-06], ['CALLABLE.', 2.598833643460815e-06], ['ARGUMENTS', 2.598833643460815e-06], ['passing.', 2.598833643460815e-06], ['*tf,', 2.598833643460815e-06], ['callable,', 2.598833643460815e-06], ['callable;', 2.598833643460815e-06], ['(FUNC_OR_METHOD_TYPE_P', 2.598833643460815e-06], ['FUNCTION_TYPE', 2.598833643460815e-06], ['(callable)', 2.598833643460815e-06], ['(callable));', 2.598833643460815e-06], ['delegate,', 2.598833643460815e-06], ['(object', 2.598833643460815e-06], ['(arguments)', 2.598833643460815e-06], ['tuples', 2.598833643460815e-06], ['TOKtuple);', 2.598833643460815e-06], ['CommaExp', 2.598833643460815e-06], ['(ce->e1);', 2.598833643460815e-06], ['tce);', 2.598833643460815e-06], ['(*arguments)[i]', 2.598833643460815e-06], ['(tf->parameters);', 2.598833643460815e-06], ['_arguments[]', 2.598833643460815e-06], ['LINKd', 2.598833643460815e-06], ['tf->varargs', 2.598833643460815e-06], ['arguments->dim', 2.598833643460815e-06], ['formal_args->dim', 2.598833643460815e-06], ['(!tf->varargs).', 2.598833643460815e-06], ['varargs)', 2.598833643460815e-06], ['Actual', 2.598833643460815e-06], ['Parameter::getNth', 2.598833643460815e-06], ['(tf->parameters,', 2.598833643460815e-06], ['varargs);', 2.598833643460815e-06], ['(targ,', 2.598833643460815e-06], ['parg);', 2.598833643460815e-06], ['(empty_aggregate_p', 2.598833643460815e-06], ['(targ))', 2.598833643460815e-06], ['(targ),', 2.598833643460815e-06], ['targ);', 2.598833643460815e-06], ['saved_args);', 2.598833643460815e-06], ['CALL_EXPR_ARGS_ORDERED', 2.598833643460815e-06], ['(result)))', 2.598833643460815e-06], ['AssertError', 2.598833643460815e-06], ['AssertErrorMsg.', 2.598833643460815e-06], ['(loc.linnum);', 2.598833643460815e-06], ['(loc.filename);', 2.598833643460815e-06], ['loc.filename);', 2.598833643460815e-06], ['(str)', 2.598833643460815e-06], ['(str));', 2.598833643460815e-06], ['null_array_node;', 2.598833643460815e-06], ['(msg', 2.598833643460815e-06], ['msg,', 2.598833643460815e-06], ['fmod', 2.598833643460815e-06], ['double_type_node', 2.598833643460815e-06], ['idouble_type_node)', 2.598833643460815e-06], ['(BUILT_IN_FMOD);', 2.598833643460815e-06], ['float_type_node', 2.598833643460815e-06], ['ifloat_type_node)', 2.598833643460815e-06], ['(BUILT_IN_FMODF);', 2.598833643460815e-06], ['long_double_type_node', 2.598833643460815e-06], ['ireal_type_node)', 2.598833643460815e-06], ['(BUILT_IN_FMODL);', 2.598833643460815e-06], ['(!fmodfn)', 2.598833643460815e-06], ['("tried', 2.598833643460815e-06], ['modulo', 2.598833643460815e-06], ['BASETYPE,', 2.598833643460815e-06], ['argtypes', 2.598833643460815e-06], ['argtypes);', 2.598833643460815e-06], ['TYPE_METHOD_BASETYPE', 2.598833643460815e-06], ['(fntype)', 2.598833643460815e-06], ['(basetype));', 2.598833643460815e-06], ['CFUN.', 2.598833643460815e-06], ['*sym)', 2.598833643460815e-06], ['*thisfd', 2.598833643460815e-06], ['sym->isFuncDeclaration', 2.598833643460815e-06], ['*fdparent', 2.598833643460815e-06], ['*fdoverride', 2.598833643460815e-06], ["'fd'.", 2.598833643460815e-06], ['"nested', 2.598833643460815e-06], ['body");', 2.598833643460815e-06], ['__require.', 2.598833643460815e-06], ['((fd->ident', 2.598833643460815e-06], ['("__ensure")', 2.598833643460815e-06], ['("__require"))', 2.598833643460815e-06], ['thisfd)', 2.598833643460815e-06], ['fdoverride', 2.598833643460815e-06], ['fdparent;', 2.598833643460815e-06], ['struct).', 2.598833643460815e-06], ['(sym', 2.598833643460815e-06], ['!sym->isFuncDeclaration', 2.598833643460815e-06], ['sym->toParent2', 2.598833643460815e-06], ['sym;', 2.598833643460815e-06], ['fdparent)', 2.598833643460815e-06], ['(!thisfd->vthis)', 2.598833643460815e-06], ['(sym->loc),', 2.598833643460815e-06], ['thisfd->toPrettyChars', 2.598833643460815e-06], ['dsym)', 2.598833643460815e-06], ['dsym->isAggregateDeclaration', 2.598833643460815e-06], ['Lnoframe;', 2.598833643460815e-06], ['(ad->isStructDeclaration', 2.598833643460815e-06], ['(!ad->isNested', 2.598833643460815e-06], ['!ad->vthis)', 2.598833643460815e-06], ['Lnoframe:', 2.598833643460815e-06], ['(thisfd->loc),', 2.598833643460815e-06], ['sym->toPrettyChars', 2.598833643460815e-06], ['(fdparent);', 2.598833643460815e-06], ['(thisfd,', 2.598833643460815e-06], ['fdparent);', 2.598833643460815e-06], ["'thisfd'", 2.598833643460815e-06], ["'fdparent'", 2.598833643460815e-06], ['environment,', 2.598833643460815e-06], ['(fdoverride)', 2.598833643460815e-06], ['fdoverride->isThis', 2.598833643460815e-06], ['thisfd->isThis', 2.598833643460815e-06], ['(cdo', 2.598833643460815e-06], ['cd);', 2.598833643460815e-06], ['(cdo->isBaseOf', 2.598833643460815e-06], ['overriden', 2.598833643460815e-06], ['OFFSET_RUNTIME);', 2.598833643460815e-06], ['(fdoverride));', 2.598833643460815e-06], ["'__chain'.", 2.598833643460815e-06], ['thisfield', 2.598833643460815e-06], ['chain_index', 2.598833643460815e-06], ['(frame_ref);', 2.598833643460815e-06], ['(frame_ref,', 2.598833643460815e-06], ['framefields);', 2.598833643460815e-06], ['thisfield)', 2.598833643460815e-06], ['(framefields);', 2.598833643460815e-06], ['(build_constructor', 2.598833643460815e-06], ['frame_ref;', 2.598833643460815e-06], ['cd->isNested', 2.598833643460815e-06], ['cd', 2.598833643460815e-06], ['dsym->isClassDeclaration', 2.598833643460815e-06], ['sd->isNested', 2.598833643460815e-06], ['sd->toParent2', 2.598833643460815e-06], ['dsym->isStructDeclaration', 2.598833643460815e-06], ['FD,', 2.598833643460815e-06], ['*ocd)', 2.598833643460815e-06], ['(ocd', 2.598833643460815e-06], ['cd)', 2.598833643460815e-06], ['(get_decl_tree', 2.598833643460815e-06], ['(fd->vthis),', 2.598833643460815e-06], ['class/struct', 2.598833643460815e-06], ['decl->isClassDeclaration', 2.598833643460815e-06], ['translated.', 2.598833643460815e-06], ['decl->toParent2', 2.598833643460815e-06], ['(outer->isStructDeclaration', 2.598833643460815e-06], ['(outer->parent', 2.598833643460815e-06], ['outer->parent->isTemplateInstance', 2.598833643460815e-06], ['outer->parent)->enclosing;', 2.598833643460815e-06], ['*fdo', 2.598833643460815e-06], ['(cdo)', 2.598833643460815e-06], ['(cdo);', 2.598833643460815e-06], ['(vthis_value', 2.598833643460815e-06], ['(fdo)', 2.598833643460815e-06], ['(fdo);', 2.598833643460815e-06], ['fdo->hasNestedFrameRefs', 2.598833643460815e-06], ['(fdo->vthis', 2.598833643460815e-06], ['fdo->vthis->type', 2.598833643460815e-06], ['(fdo->vthis);', 2.598833643460815e-06], ['vthis_value;', 2.598833643460815e-06], ['FFI', 2.598833643460815e-06], ['ffi,', 2.598833643460815e-06], ['frame_rec_type', 2.598833643460815e-06], ['"CLOSURE."', 2.598833643460815e-06], ['"FRAME.",', 2.598833643460815e-06], ['("__chain"),', 2.598833643460815e-06], ['__require', 2.598833643460815e-06], ['nevertheless', 2.598833643460815e-06], ['non-locally.', 2.598833643460815e-06], ['(fd->parameters)', 2.598833643460815e-06], ['fd->parameters', 2.598833643460815e-06], ['fd->parameters->dim;', 2.598833643460815e-06], ['(*fd->parameters)[i];', 2.598833643460815e-06], ['front.', 2.598833643460815e-06], ['fd->closureVars[j];', 2.598833643460815e-06], ['fd->vthis)', 2.598833643460815e-06], ['v->ident', 2.598833643460815e-06], ['(v->ident->toChars', 2.598833643460815e-06], ['SET_DECL_LANG_FRAME_FIELD', 2.598833643460815e-06], ['(vsym,', 2.598833643460815e-06], ['(fields,', 2.598833643460815e-06], ['(vsym)', 2.598833643460815e-06], ['(fd->nrvo_can', 2.598833643460815e-06], ['fd->nrvo_var', 2.598833643460815e-06], ['fd->nrvo_can', 2.598833643460815e-06], ['((v->edtor', 2.598833643460815e-06], ['(v->storage_class', 2.598833643460815e-06], ['STCparameter))', 2.598833643460815e-06], ['v->needsScopeDtor', 2.598833643460815e-06], ['scoped', 2.598833643460815e-06], ['destruction,', 2.598833643460815e-06], ['closure");', 2.598833643460815e-06], ['Closures', 2.598833643460815e-06], ['chuck', 2.598833643460815e-06], ['chunk,', 2.598833643460815e-06], ['frames', 2.598833643460815e-06], ['required,', 2.598833643460815e-06], ['refs,', 2.598833643460815e-06], ['(!FRAMEINFO_CREATES_FRAME', 2.598833643460815e-06], ['decl_ref;', 2.598833643460815e-06], ['("__closptr");', 2.598833643460815e-06], ['(LIBCALL_ALLOCMEMORY,', 2.598833643460815e-06], ['init_exp', 2.598833643460815e-06], ['(init_exp);', 2.598833643460815e-06], ['("__frame");', 2.598833643460815e-06], ['closure/frame,', 2.598833643460815e-06], ['chain_field', 2.598833643460815e-06], ['chain_expr', 2.598833643460815e-06], ['(chain_field,', 2.598833643460815e-06], ['d_function_chain->static_chain);', 2.598833643460815e-06], ['(chain_expr);', 2.598833643460815e-06], ['nonlocally.', 2.598833643460815e-06], ['(!v->isParameter', 2.598833643460815e-06], ['vsym);', 2.598833643460815e-06], ['(!FRAMEINFO_IS_CLOSURE', 2.598833643460815e-06], ['fds', 2.598833643460815e-06], ['(DECL_LANG_FRAMEINFO', 2.598833643460815e-06], ['(fds))', 2.598833643460815e-06], ['(fds);', 2.598833643460815e-06], ['(FUNCFRAME_INFO);', 2.598833643460815e-06], ['(fds)', 2.598833643460815e-06], ['(fd->needsClosure', 2.598833643460815e-06], ['(fd->hasNestedFrameRefs', 2.598833643460815e-06], ['populate', 2.598833643460815e-06], ['`void*`', 2.598833643460815e-06], ['(fd->vthis', 2.598833643460815e-06], ['fd->vthis->type', 2.598833643460815e-06], ['checkNestedReference,', 2.598833643460815e-06], ['(deeply)', 2.598833643460815e-06], ['vthis', 2.598833643460815e-06], ['*ff', 2.598833643460815e-06], ['(ff)', 2.598833643460815e-06], ['(ff);', 2.598833643460815e-06], ['(ff', 2.598833643460815e-06], ['(ffo)));', 2.598833643460815e-06], ['(ff->vthis', 2.598833643460815e-06], ['ff->isThis', 2.598833643460815e-06], ['ad->isNested', 2.598833643460815e-06], ['d->isAggregateDeclaration', 2.598833643460815e-06], ['ff->toParent2', 2.598833643460815e-06], ['(ffi,', 2.598833643460815e-06], ['fd);', 2.598833643460815e-06], ['OUTER', 2.598833643460815e-06], ['INNER.', 2.598833643460815e-06], ['d_function_chain->static_chain;', 2.598833643460815e-06], ['outer)', 2.598833643460815e-06], ['*ad;', 2.598833643460815e-06], ['*cd;', 2.598833643460815e-06], ['*sd;', 2.598833643460815e-06], ['(fd)))', 2.598833643460815e-06], ['intervening', 2.598833643460815e-06], ['So,', 2.598833643460815e-06], ['ad->isStructDeclaration', 2.598833643460815e-06], ['(outer));', 2.598833643460815e-06], ['(frame_type),', 2.598833643460815e-06], ['(inner->loc),', 2.598833643460815e-06], ['"forward', 2.598833643460815e-06], ['outer->toChars', 2.598833643460815e-06], ['brig-cmp-inst-handler.cc', 2.598833643460815e-06], ['brig_cmp_inst_handler::operator', 2.598833643460815e-06], ['*inst_base', 2.598833643460815e-06], ['cmp_type', 2.598833643460815e-06], ['(inst->sourceType);', 2.598833643460815e-06], ['(inst_base->type);', 2.598833643460815e-06], ['is_fp16_dest', 2.598833643460815e-06], ['is_boolean_dest', 2.598833643460815e-06], ['BRIG_TYPE_B1;', 2.598833643460815e-06], ['is_int_cmp', 2.598833643460815e-06], ['(cmp_type)', 2.598833643460815e-06], ['(cmp_type))', 2.598833643460815e-06], ['extend/convert', 2.598833643460815e-06], ['(*inst_base);', 2.598833643460815e-06], ['(inst->compare)', 2.598833643460815e-06], ['BRIG_COMPARE_SEQ:', 2.598833643460815e-06], ['BRIG_COMPARE_EQ:', 2.598833643460815e-06], ['BRIG_COMPARE_SNE:', 2.598833643460815e-06], ['BRIG_COMPARE_NE:', 2.598833643460815e-06], ['(!is_int_cmp)', 2.598833643460815e-06], ['operands[2]));', 2.598833643460815e-06], ['BRIG_COMPARE_SLT:', 2.598833643460815e-06], ['BRIG_COMPARE_LT:', 2.598833643460815e-06], ['BRIG_COMPARE_SLE:', 2.598833643460815e-06], ['BRIG_COMPARE_LE:', 2.598833643460815e-06], ['(LE_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SGT:', 2.598833643460815e-06], ['BRIG_COMPARE_GT:', 2.598833643460815e-06], ['BRIG_COMPARE_SGE:', 2.598833643460815e-06], ['BRIG_COMPARE_GE:', 2.598833643460815e-06], ['(GE_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SEQU:', 2.598833643460815e-06], ['BRIG_COMPARE_EQU:', 2.598833643460815e-06], ['(UNEQ_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SNEU:', 2.598833643460815e-06], ['BRIG_COMPARE_NEU:', 2.598833643460815e-06], ['BRIG_COMPARE_SLTU:', 2.598833643460815e-06], ['BRIG_COMPARE_LTU:', 2.598833643460815e-06], ['(UNLT_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SLEU:', 2.598833643460815e-06], ['BRIG_COMPARE_LEU:', 2.598833643460815e-06], ['(UNLE_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SGTU:', 2.598833643460815e-06], ['BRIG_COMPARE_GTU:', 2.598833643460815e-06], ['(UNGT_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SGEU:', 2.598833643460815e-06], ['BRIG_COMPARE_GEU:', 2.598833643460815e-06], ['(UNGE_EXPR,', 2.598833643460815e-06], ['BRIG_COMPARE_SNUM:', 2.598833643460815e-06], ['BRIG_COMPARE_NUM:', 2.598833643460815e-06], ['BRIG_COMPARE_SNAN:', 2.598833643460815e-06], ['BRIG_COMPARE_NAN:', 2.598833643460815e-06], ['(UNORDERED_EXPR,', 2.598833643460815e-06], ['(is_fp16_dest)', 2.598833643460815e-06], ['ANY_INTEGRAL_TYPE_P', 2.598833643460815e-06], ['!is_boolean_dest', 2.598833643460815e-06], ['4.9.1.', 2.598833643460815e-06], ["'true'", 2.598833643460815e-06], ['HSA.', 2.598833643460815e-06], ['<a', 2.598833643460815e-06], ['all_ones', 2.598833643460815e-06], ['all_zeroes', 2.598833643460815e-06], ['(VEC_COND_EXPR,', 2.598833643460815e-06], ['all_ones,', 2.598833643460815e-06], ['all_zeroes);', 2.598833643460815e-06], ['!is_boolean_dest)', 2.598833643460815e-06], ['all-ones', 2.598833643460815e-06], ['propagating', 2.598833643460815e-06], ['signed_type', 2.598833643460815e-06], ['signed_type_for', 2.598833643460815e-06], ['signed_result', 2.598833643460815e-06], ['shift_amount_cst', 2.598833643460815e-06], ['shift_left_result', 2.598833643460815e-06], ['signed_result,', 2.598833643460815e-06], ['shift_left_result,', 2.598833643460815e-06], ['S32', 2.598833643460815e-06], ['S16s', 2.598833643460815e-06], ['ints).', 2.598833643460815e-06], ['("wide_cmp_result",', 2.598833643460815e-06], ['wide_elements;', 2.598833643460815e-06], ['shrunk_elements;', 2.598833643460815e-06], ['wide_elements);', 2.598833643460815e-06], ['wide_elements.size', 2.598833643460815e-06], ['wide_elements.at', 2.598833643460815e-06], ['shrunk_elements.push_back', 2.598833643460815e-06], ['(short_integer_type_node,', 2.598833643460815e-06], ['wide));', 2.598833643460815e-06], ['(shrunk_elements);', 2.598833643460815e-06], ['(*inst_base,', 2.598833643460815e-06], ['go-dump.cc', 2.598833643460815e-06], ['Go_dump*', 2.598833643460815e-06], ['Go_dump::Go_dump(const', 2.598833643460815e-06], ['next_(dumps),', 2.598833643460815e-06], ['is_enabled_(false)', 2.598833643460815e-06], ['Go_dump::enable_by_name(const', 2.598833643460815e-06], ['(Go_dump*', 2.598833643460815e-06], ['go_enable_dump(const', 2.598833643460815e-06], ['Go_dump::enable_by_name(name)', 2.598833643460815e-06], ['brig-cvt-inst-handler.cc', 2.598833643460815e-06], ['(convert)', 2.598833643460815e-06], ['brig_cvt_inst_handler::modifier', 2.598833643460815e-06], ['brig_cvt_inst_handler::round', 2.598833643460815e-06], ['brig_cvt_inst_handler::generate', 2.598833643460815e-06], ['involved:', 2.598833643460815e-06], ['*inst_modifier', 2.598833643460815e-06], ['FTZ', 2.598833643460815e-06], ['inst_modifier', 2.598833643460815e-06], ['(*inst_modifier)', 2.598833643460815e-06], ['cvt_inst->sourceType', 2.598833643460815e-06], ['dest_is_fp16', 2.598833643460815e-06], ['brig_inst->type', 2.598833643460815e-06], ['(!dest_type', 2.598833643460815e-06], ['!src_type)', 2.598833643460815e-06], ['&input', 2.598833643460815e-06], ['&output', 2.598833643460815e-06], ['conv_src_size', 2.598833643460815e-06], ['src_reg_size', 2.598833643460815e-06], ['(src_reg_size', 2.598833643460815e-06], ['conv_src_size)', 2.598833643460815e-06], ['unsigned_type_for', 2.598833643460815e-06], ["'ftz'.", 2.598833643460815e-06], ['(FTZ', 2.598833643460815e-06], ['BRIG_TYPE_B1)', 2.598833643460815e-06], ['b1,', 2.598833643460815e-06], ["'ztest'", 2.598833643460815e-06], ['similarly', 2.598833643460815e-06], ['(!=', 2.598833643460815e-06], ['0.0f)', 2.598833643460815e-06], ['floats.', 2.598833643460815e-06], ['ztest', 2.598833643460815e-06], ['+-', 2.598833643460815e-06], ['0.0f.', 2.598833643460815e-06], ['masking', 2.598833643460815e-06], ['absf', 2.598833643460815e-06], ['(NaN', 2.598833643460815e-06], ['cvt).', 2.598833643460815e-06], ['Bit', 2.598833643460815e-06], ['battern', 2.598833643460815e-06], ['0x7FFF);', 2.598833643460815e-06], ['0x7FFFFFFF);', 2.598833643460815e-06], ['0x7FFFFFFFFFFFFFFF);', 2.598833643460815e-06], ['masked_input', 2.598833643460815e-06], ['unsigned_int_type,', 2.598833643460815e-06], ['casted_input,', 2.598833643460815e-06], ['and_mask);', 2.598833643460815e-06], ['(masked_input),', 2.598833643460815e-06], ['masked_input,', 2.598833643460815e-06], ['(BRIG_TYPE_B1),', 2.598833643460815e-06], ['(dest_is_fp16)', 2.598833643460815e-06], ['(FTZ)', 2.598833643460815e-06], ['(conversion_result);', 2.598833643460815e-06], ['src_type);', 2.598833643460815e-06], ['(cvt_inst->round', 2.598833643460815e-06], ['BRIG_ROUND_INTEGER_ZERO_SAT)', 2.598833643460815e-06], ['(BrigType16_t)', 2.598833643460815e-06], ['cvt_inst->sourceType;', 2.598833643460815e-06], ['DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN(ENUM,', 2.598833643460815e-06], ['HSAIL_DST_TYPE,', 2.598833643460815e-06], ['HSAIL_SRC_TYPE,', 2.598833643460815e-06], ['HSAIL_DST_TYPE', 2.598833643460815e-06], ['HSAIL_SRC_TYPE)', 2.598833643460815e-06], ['src_type,', 2.598833643460815e-06], ['dst_reg_size', 2.598833643460815e-06], ['(output));', 2.598833643460815e-06], ['reinterpret_cast.', 2.598833643460815e-06], ['(casted_output)))', 2.598833643460815e-06], ['resized_int_type', 2.598833643460815e-06], ['resized_int_type,', 2.598833643460815e-06], ['brig-module-handler.cc', 2.598833643460815e-06], ['brig_directive_module_handler::operator', 2.598833643460815e-06], ['BrigDirectiveModule*', 2.598833643460815e-06], ['BrigDirectiveModule*)base;', 2.598833643460815e-06], ['m_parent.m_module_name', 2.598833643460815e-06], ['(mod->name).substr', 2.598833643460815e-06], ['(mod->hsailMajor', 2.598833643460815e-06], ['mod->hsailMinor', 2.598833643460815e-06], ['"HSAIL', 2.598833643460815e-06], ['(mod->machineModel', 2.598833643460815e-06], ['BRIG_MACHINE_LARGE)', 2.598833643460815e-06], ['"Only', 2.598833643460815e-06], ["'large'", 2.598833643460815e-06], ['supported.");', 2.598833643460815e-06], ["'full'", 2.598833643460815e-06], ['FE.', 2.598833643460815e-06], ['HOST_BITS_PER_LONG', 2.598833643460815e-06], ['HOST_BITS_PER_INT', 2.598833643460815e-06], ['#error', 2.598833643460815e-06], ['Please', 2.598833643460815e-06], ['longlong.h', 2.598833643460815e-06], ['clang-based.', 2.598833643460815e-06], ['PR61146.', 2.598833643460815e-06], ['GCC_VERSION', 2.598833643460815e-06], ['3000', 2.598833643460815e-06], ['(W_TYPE_SIZE', 2.598833643460815e-06], ['(__SIZEOF_INT128__))', 2.598833643460815e-06], ['!defined(__clang__)', 2.598833643460815e-06], ['UHWtype;', 2.598833643460815e-06], ['UWtype;', 2.598833643460815e-06], ['UQItype', 2.598833643460815e-06], ['(QI)));', 2.598833643460815e-06], ['USItype', 2.598833643460815e-06], ['(SI)));', 2.598833643460815e-06], ['UDItype', 2.598833643460815e-06], ['(TI)));', 2.598833643460815e-06], ['"longlong.h"', 2.598833643460815e-06], ['zeros[WIDE_INT_MAX_ELTS]', 2.598833643460815e-06], ['{};', 2.598833643460815e-06], ['Quantities', 2.598833643460815e-06], ['HALF_INT_MASK', 2.598833643460815e-06], ['((HOST_WIDE_INT_1', 2.598833643460815e-06], ['BLOCK_OF(TARGET)', 2.598833643460815e-06], ['((TARGET)', 2.598833643460815e-06], ['(PREC', 2.598833643460815e-06], ['SIGN_MASK(X)', 2.598833643460815e-06], ['(X)', 2.598833643460815e-06], ['VAL[I]', 2.598833643460815e-06], ['LEN,', 2.598833643460815e-06], ['HOST_WIDE_INT_M1', 2.598833643460815e-06], ['form,', 2.598833643460815e-06], ['represents.', 2.598833643460815e-06], ['blocks_needed;', 2.598833643460815e-06], ['(top,', 2.598833643460815e-06], ['(HOST_WIDE_INT)-1)', 2.598833643460815e-06], ['val[i];', 2.598833643460815e-06], ['(SIGN_MASK', 2.598833643460815e-06], ['VAL[0]', 2.598833643460815e-06], ['Canonize', 2.598833643460815e-06], ['(val[0]', 2.598833643460815e-06], ['val[1]', 2.598833643460815e-06], ['NEED_CANON,', 2.598833643460815e-06], ['PRECISION.', 2.598833643460815e-06], ['(after', 2.598833643460815e-06], ['canonization.', 2.598833643460815e-06], ['wi::from_array', 2.598833643460815e-06], ['need_canon)', 2.598833643460815e-06], ['BUFFER_LEN', 2.598833643460815e-06], ['cleared.', 2.598833643460815e-06], ['wi::from_buffer', 2.598833643460815e-06], ['buffer_len)', 2.598833643460815e-06], ['ourself,', 2.598833643460815e-06], ['merely', 2.598833643460815e-06], ['buffer_len;', 2.598833643460815e-06], ['byte++)', 2.598833643460815e-06], ['UNITS_PER_WORD)', 2.598833643460815e-06], ['(WORDS_BIG_ENDIAN)', 2.598833643460815e-06], ['(words', 2.598833643460815e-06], ['word;', 2.598833643460815e-06], ['(UNITS_PER_WORD', 2.598833643460815e-06], ['(byte', 2.598833643460815e-06], ['UNITS_PER_WORD);', 2.598833643460815e-06], ['BYTES_BIG_ENDIAN', 2.598833643460815e-06], ['buffer[offset];', 2.598833643460815e-06], ['val[index]', 2.598833643460815e-06], ['(bitpos', 2.598833643460815e-06], ['wi::to_mpz', 2.598833643460815e-06], ['x.get_len', 2.598833643460815e-06], ['x.get_val', 2.598833643460815e-06], ['sgn))', 2.598833643460815e-06], ['-x80..0', 2.598833643460815e-06], ['~v[i];', 2.598833643460815e-06], ['mpz_com', 2.598833643460815e-06], ['v[i];', 2.598833643460815e-06], ['v[len', 2.598833643460815e-06], ['WRAP', 2.598833643460815e-06], ['out-of-range', 2.598833643460815e-06], ['wrapped;', 2.598833643460815e-06], ['bound.', 2.598833643460815e-06], ['wi::from_mpz', 2.598833643460815e-06], ['wrap)', 2.598833643460815e-06], ['(!wrap)', 2.598833643460815e-06], ['max;', 2.598833643460815e-06], ['get_type_static_bounds', 2.598833643460815e-06], ['max)', 2.598833643460815e-06], ['extracted', 2.598833643460815e-06], ['manual,', 2.598833643460815e-06], ['"Integer', 2.598833643460815e-06], ['Export":', 2.598833643460815e-06], ['http://gmplib.org/manual/Integer-Import-and-Export.html', 2.598833643460815e-06], ['(HOST_WIDE_INT);', 2.598833643460815e-06], ['(mpz_sizeinbase', 2.598833643460815e-06], ['res.write_val', 2.598833643460815e-06], ['mpz_tdiv_r_2exp', 2.598833643460815e-06], ['situation', 2.598833643460815e-06], ['mpz', 2.598833643460815e-06], ['*valres', 2.598833643460815e-06], ['mpz_export', 2.598833643460815e-06], ['WIDE_INT_MAX_ELTS', 2.598833643460815e-06], ['&count,', 2.598833643460815e-06], ['(count,', 2.598833643460815e-06], ['(prec));', 2.598833643460815e-06], ['(valres', 2.598833643460815e-06], ['valres,', 2.598833643460815e-06], ['(HOST_WIDE_INT));', 2.598833643460815e-06], ['(valres);', 2.598833643460815e-06], ['val[count', 2.598833643460815e-06], ['val[count++]', 2.598833643460815e-06], ['res.set_len', 2.598833643460815e-06], ['(mpz_sgn', 2.598833643460815e-06], ['-res;', 2.598833643460815e-06], ['Largest', 2.598833643460815e-06], ['double_int', 2.598833643460815e-06], ['era', 2.598833643460815e-06], ['trys', 2.598833643460815e-06], ["int's", 2.598833643460815e-06], ['wide_ints', 2.598833643460815e-06], ['int-csts.', 2.598833643460815e-06], ['shwi', 2.598833643460815e-06], ['XVAL,', 2.598833643460815e-06], ['XPRECISION,', 2.598833643460815e-06], ['XPRECISION)', 2.598833643460815e-06], ['XPRECISION).', 2.598833643460815e-06], ['wi::force_to_size', 2.598833643460815e-06], ['xprecision)', 2.598833643460815e-06], ['small_xprecision', 2.598833643460815e-06], ['Expanding.', 2.598833643460815e-06], ['(small_xprecision)', 2.598833643460815e-06], ['hides', 2.598833643460815e-06], ['comparisions', 2.598833643460815e-06], ['a[index];', 2.598833643460815e-06], ['sgn', 2.598833643460815e-06], ['(a[len', 2.598833643460815e-06], ['(small_prec', 2.598833643460815e-06], ['small_prec));', 2.598833643460815e-06], ['top_bit_of', 2.598833643460815e-06], ['a[len', 2.598833643460815e-06], ['Comparisons,', 2.598833643460815e-06], ['inherently', 2.598833643460815e-06], ['wi::eq_p_large', 2.598833643460815e-06], ['zext', 2.598833643460815e-06], ['sext', 2.598833643460815e-06], ['(zext_hwi', 2.598833643460815e-06], ['(op0', 2.598833643460815e-06], ['small_prec))', 2.598833643460815e-06], ['(op0[l0]', 2.598833643460815e-06], ['op1[l0])', 2.598833643460815e-06], ['wi::lts_p_large', 2.598833643460815e-06], ['wi::cmps_large', 2.598833643460815e-06], ['wi::ltu_p_large', 2.598833643460815e-06], ['wi::cmpu_large', 2.598833643460815e-06], ['Extension.', 2.598833643460815e-06], ['wi::sext_large', 2.598833643460815e-06], ['signs.', 2.598833643460815e-06], ['(xval[len],', 2.598833643460815e-06], ['wi::zext_large', 2.598833643460815e-06], ['xval[xlen', 2.598833643460815e-06], ['xval[i]', 2.598833643460815e-06], ['xval[len]', 2.598833643460815e-06], ['Masking,', 2.598833643460815e-06], ['inserting,', 2.598833643460815e-06], ['shifting,', 2.598833643460815e-06], ['rotating.', 2.598833643460815e-06], ['wi::insert', 2.598833643460815e-06], ['&y,', 2.598833643460815e-06], ['width)', 2.598833643460815e-06], ['(start,', 2.598833643460815e-06], ['(wide_int::from', 2.598833643460815e-06], ['BIT.', 2.598833643460815e-06], ['wi::set_bit_large', 2.598833643460815e-06], ['msb', 2.598833643460815e-06], ['wide_int_storage::bswap', 2.598833643460815e-06], ['get_len', 2.598833643460815e-06], ['*xval', 2.598833643460815e-06], ['get_val', 2.598833643460815e-06], ['8.', 2.598833643460815e-06], ['((precision', 2.598833643460815e-06], ['precision;', 2.598833643460815e-06], ['(safe_uhwi', 2.598833643460815e-06], ['0xff;', 2.598833643460815e-06], ['~last', 2.598833643460815e-06], ['last;', 2.598833643460815e-06], ['START', 2.598833643460815e-06], ['start)', 2.598833643460815e-06], ['(shift)', 2.598833643460815e-06], ['000111000', 2.598833643460815e-06], ['...111000', 2.598833643460815e-06], ['~block;', 2.598833643460815e-06], ['1111111', 2.598833643460815e-06], ['000011111', 2.598833643460815e-06], ['wi::and_large', 2.598833643460815e-06], ['wi::and_not_large', 2.598833643460815e-06], ['wi::or_large', 2.598833643460815e-06], ['wi::or_not_large', 2.598833643460815e-06], ['wi::xor_large', 2.598833643460815e-06], ['op1mask;', 2.598833643460815e-06], ['wi::add_large', 2.598833643460815e-06], ['op0[i]', 2.598833643460815e-06], ['op1[i]', 2.598833643460815e-06], ['o0;', 2.598833643460815e-06], ['carry)', 2.598833643460815e-06], ['o1);', 2.598833643460815e-06], ['wi::OVF_UNDERFLOW;', 2.598833643460815e-06], ['wi::OVF_OVERFLOW;', 2.598833643460815e-06], ['(old_carry)', 2.598833643460815e-06], ['Subroutines', 2.598833643460815e-06], ['HOST_HALF_WIDE_INTs', 2.598833643460815e-06], ['uncompressing', 2.598833643460815e-06], ['INPUT[IN_LEN', 2.598833643460815e-06], ['1].', 2.598833643460815e-06], ['out_len,', 2.598833643460815e-06], ['Smear', 2.598833643460815e-06], ['out_len)', 2.598833643460815e-06], ['inverse', 2.598833643460815e-06], ['wi_unpack.', 2.598833643460815e-06], ['in_len)', 2.598833643460815e-06], ['input[i]', 2.598833643460815e-06], ['input[i', 2.598833643460815e-06], ['in_len', 2.598833643460815e-06], ['odd.', 2.598833643460815e-06], ['extend.', 2.598833643460815e-06], ['(in_len', 2.598833643460815e-06], ['input[i];', 2.598833643460815e-06], ['Op1', 2.598833643460815e-06], ['Op2.', 2.598833643460815e-06], ['SGN', 2.598833643460815e-06], ['wi::mul_internal', 2.598833643460815e-06], ['*op1val,', 2.598833643460815e-06], ['*op2val,', 2.598833643460815e-06], ['*overflow,', 2.598833643460815e-06], ['high)', 2.598833643460815e-06], ['o0,', 2.598833643460815e-06], ['o1,', 2.598833643460815e-06], ['scaled', 2.598833643460815e-06], ['yielding', 2.598833643460815e-06], ['4x', 2.598833643460815e-06], ['vpn.', 2.598833643460815e-06], ['u[4', 2.598833643460815e-06], ['v[4', 2.598833643460815e-06], ["'2'", 2.598833643460815e-06], ["'R'", 2.598833643460815e-06], ['r[2', 2.598833643460815e-06], ['((HOST_WIDE_INT)1', 2.598833643460815e-06], ['needs_overflow', 2.598833643460815e-06], ['(op1val,', 2.598833643460815e-06], ['(op2val,', 2.598833643460815e-06], ['surprisingly', 2.598833643460815e-06], ['HWIs', 2.598833643460815e-06], ['HWIs,', 2.598833643460815e-06], ['(val[1],', 2.598833643460815e-06], ['val[2]', 2.598833643460815e-06], ['HWI,', 2.598833643460815e-06], ['needed.)', 2.598833643460815e-06], ['(upper,', 2.598833643460815e-06], ['(upper', 2.598833643460815e-06], ['multiplications', 2.598833643460815e-06], ['(op2,', 2.598833643460815e-06], ['op2val[i];', 2.598833643460815e-06], ['(op2', 2.598833643460815e-06], ['op1val[i];', 2.598833643460815e-06], ['((high', 2.598833643460815e-06], ['needs_overflow)', 2.598833643460815e-06], ['HOST_BITS_PER_HALF_WIDE_INT))', 2.598833643460815e-06], ['op1.to_shwi', 2.598833643460815e-06], ['op2.to_shwi', 2.598833643460815e-06], ['op1.to_uhwi', 2.598833643460815e-06], ['op2.to_uhwi', 2.598833643460815e-06], ['OVF_UNKNOWN;', 2.598833643460815e-06], ['((r', 2.598833643460815e-06], ['mul', 2.598833643460815e-06], ['(u,', 2.598833643460815e-06], ['op1val,', 2.598833643460815e-06], ['op2val,', 2.598833643460815e-06], ['mult.', 2.598833643460815e-06], ['CHAR_BIT);', 2.598833643460815e-06], ['HOST_WIDE_INT)v[j]', 2.598833643460815e-06], ['k);', 2.598833643460815e-06], ['r[j', 2.598833643460815e-06], ['that).', 2.598833643460815e-06], ['needs_overflow))', 2.598833643460815e-06], ['HOST_WIDE_INT)v[i]', 2.598833643460815e-06], ['signed,', 2.598833643460815e-06], ['r[(half_blocks_needed)', 2.598833643460815e-06], ['(((HOST_WIDE_INT)(r[i]', 2.598833643460815e-06], ['wi::OVF_UNKNOWN;', 2.598833643460815e-06], ['r_offset', 2.598833643460815e-06], ['&r[r_offset],', 2.598833643460815e-06], ['population', 2.598833643460815e-06], ['wi::popcount', 2.598833643460815e-06], ['HOST_BITS_PER_WIDE_INT.', 2.598833643460815e-06], ['popcount', 2.598833643460815e-06], ['x.len;', 2.598833643460815e-06], ['(x.uhigh', 2.598833643460815e-06], ['-count);', 2.598833643460815e-06], ['Negation', 2.598833643460815e-06], ['HOST_WIDE_INT)op0[i]', 2.598833643460815e-06], ['HOST_WIDE_INT)op1[i]', 2.598833643460815e-06], ['borrow)', 2.598833643460815e-06], ['o0);', 2.598833643460815e-06], ['OVF_UNDERFLOW;', 2.598833643460815e-06], ['(old_borrow)', 2.598833643460815e-06], ['Mod', 2.598833643460815e-06], ['B_QUOTIENT', 2.598833643460815e-06], ['B_REMAINDER', 2.598833643460815e-06], ['B_DIVIDEND/B_DIVISOR.', 2.598833643460815e-06], ["Hacker's", 2.598833643460815e-06], ['Delight', 2.598833643460815e-06], ['Warren,', 2.598833643460815e-06], ["Knuth's", 2.598833643460815e-06], ['algorithm.', 2.598833643460815e-06], ['*b_quotient,', 2.598833643460815e-06], ['*b_remainder,', 2.598833643460815e-06], ['*b_dividend,', 2.598833643460815e-06], ['*b_divisor,', 2.598833643460815e-06], ['"digits"', 2.598833643460815e-06], ['HOST_WIDE_INT)1', 2.598833643460815e-06], ['Estimate', 2.598833643460815e-06], ['rhat;', 2.598833643460815e-06], ['remainder.', 2.598833643460815e-06], ['Product', 2.598833643460815e-06], ['divisor.', 2.598833643460815e-06], ['b_dividend[j])/b_divisor[0];', 2.598833643460815e-06], ['((k', 2.598833643460815e-06], ['b_dividend[j])', 2.598833643460815e-06], ['HOST_WIDE_INT)b_quotient[j]', 2.598833643460815e-06], ['HOST_WIDE_INT)b_divisor[0]));', 2.598833643460815e-06], ['b_remainder[0]', 2.598833643460815e-06], ['(b_divisor[n-1])', 2.598833643460815e-06], ['algorithm,', 2.598833643460815e-06], ['b_dividend', 2.598833643460815e-06], ['(b_divisor[i]', 2.598833643460815e-06], ['(b_divisor[i-1]', 2.598833643460815e-06], ['b_dividend[m-1]', 2.598833643460815e-06], ['b_dividend[i]', 2.598833643460815e-06], ['(b_dividend[i-1]', 2.598833643460815e-06], ['again:', 2.598833643460815e-06], ['(qhat', 2.598833643460815e-06], ['b_divisor[n-2]', 2.598833643460815e-06], ['b_dividend[j+n-2])', 2.598833643460815e-06], ['(rhat', 2.598833643460815e-06], ['again;', 2.598833643460815e-06], ['subtract.', 2.598833643460815e-06], ['b_divisor[i];', 2.598833643460815e-06], ['HALF_INT_MASK);', 2.598833643460815e-06], ['b_dividend[i', 2.598833643460815e-06], ['((p', 2.598833643460815e-06], ['(HOST_WIDE_INT)b_dividend[i+j]', 2.598833643460815e-06], ['(b_dividend[i+1]', 2.598833643460815e-06], ['b_dividend[i];', 2.598833643460815e-06], ['Divide', 2.598833643460815e-06], ['DIVIDEND', 2.598833643460815e-06], ['DIVISOR,', 2.598833643460815e-06], ['QUOTIENT', 2.598833643460815e-06], ['REMAINDER', 2.598833643460815e-06], ['*REMAINDER_LEN.', 2.598833643460815e-06], ['OFLOW', 2.598833643460815e-06], ['*OFLOW', 2.598833643460815e-06], ['wi::divmod_internal', 2.598833643460815e-06], ['*quotient,', 2.598833643460815e-06], ['*remainder,', 2.598833643460815e-06], ['*dividend_val,', 2.598833643460815e-06], ['*divisor_val,', 2.598833643460815e-06], ['*oflow)', 2.598833643460815e-06], ['dividend_blocks_needed', 2.598833643460815e-06], ['(dividend_prec);', 2.598833643460815e-06], ['divisor_blocks_needed', 2.598833643460815e-06], ['(divisor_prec);', 2.598833643460815e-06], ['b_quotient[4', 2.598833643460815e-06], ['b_remainder[4', 2.598833643460815e-06], ['b_dividend[(4', 2.598833643460815e-06], ['b_divisor[4', 2.598833643460815e-06], ['neg_dividend,', 2.598833643460815e-06], ['(dividend_val,', 2.598833643460815e-06], ['(divisor_val,', 2.598833643460815e-06], ['divisor_prec);', 2.598833643460815e-06], ['(divisor', 2.598833643460815e-06], ['speed', 2.598833643460815e-06], ['correctness.', 2.598833643460815e-06], ['(dividend_prec)', 2.598833643460815e-06], ['Viewed', 2.598833643460815e-06], ['orignal', 2.598833643460815e-06], ['traditionally', 2.598833643460815e-06], ['act', 2.598833643460815e-06], ['quotient[i]', 2.598833643460815e-06], ['dividend_val[i];', 2.598833643460815e-06], ['dividend.to_shwi', 2.598833643460815e-06], ['divisor.to_shwi', 2.598833643460815e-06], ['HOST_WIDE_INT_MIN', 2.598833643460815e-06], ['(dividend_prec', 2.598833643460815e-06], ['HOST_WIDE_INT_MIN;', 2.598833643460815e-06], ['quotient[1]', 2.598833643460815e-06], ['dividend.to_uhwi', 2.598833643460815e-06], ['divisor.to_uhwi', 2.598833643460815e-06], ['neg_dividend', 2.598833643460815e-06], ['-dividend;', 2.598833643460815e-06], ['neg_dividend;', 2.598833643460815e-06], ['neg_divisor', 2.598833643460815e-06], ['-divisor;', 2.598833643460815e-06], ['(b_dividend,', 2.598833643460815e-06], ['dividend.get_val', 2.598833643460815e-06], ['dividend.get_len', 2.598833643460815e-06], ['dividend_blocks_needed,', 2.598833643460815e-06], ['(b_divisor,', 2.598833643460815e-06], ['divisor.get_val', 2.598833643460815e-06], ['divisor.get_len', 2.598833643460815e-06], ['divisor_blocks_needed,', 2.598833643460815e-06], ['dividend_blocks_needed;', 2.598833643460815e-06], ['b_dividend[m', 2.598833643460815e-06], ['m--;', 2.598833643460815e-06], ['divisor_blocks_needed;', 2.598833643460815e-06], ['b_divisor[n', 2.598833643460815e-06], ['n--;', 2.598833643460815e-06], ['(b_quotient));', 2.598833643460815e-06], ['b_dividend,', 2.598833643460815e-06], ['b_quotient,', 2.598833643460815e-06], ['neg.', 2.598833643460815e-06], ['(dividend_neg', 2.598833643460815e-06], ['divisor_neg)', 2.598833643460815e-06], ['quotient,', 2.598833643460815e-06], ['quotient_len,', 2.598833643460815e-06], ['(dividend_neg)', 2.598833643460815e-06], ['Shifting,', 2.598833643460815e-06], ['rotating', 2.598833643460815e-06], ['extraction.', 2.598833643460815e-06], ['wi::lshift_large', 2.598833643460815e-06], ['fills', 2.598833643460815e-06], ['unfilled', 2.598833643460815e-06], ['small_shift)', 2.598833643460815e-06], ['(excluding', 2.598833643460815e-06], ['signs).', 2.598833643460815e-06], ['small_shift;', 2.598833643460815e-06], ['Logically', 2.598833643460815e-06], ['wi::lrshift_large', 2.598833643460815e-06], ['Arithmetically', 2.598833643460815e-06], ['wi::arshift_large', 2.598833643460815e-06], ['(upper)', 2.598833643460815e-06], ['-count)', 2.598833643460815e-06], ['nonzero;', 2.598833643460815e-06], ['(high);', 2.598833643460815e-06], ['(That', 2.598833643460815e-06], ['bit.)', 2.598833643460815e-06], ['wi::clrsb', 2.598833643460815e-06], ['1s.', 2.598833643460815e-06], ['(lower)', 2.598833643460815e-06], ['x.ulow', 2.598833643460815e-06], ['x.precision;', 2.598833643460815e-06], ['Having', 2.598833643460815e-06], ['dealt', 2.598833643460815e-06], ['ctz_hwi', 2.598833643460815e-06], ['logarithm,', 2.598833643460815e-06], ['wi::exact_log2', 2.598833643460815e-06], ['Reject', 2.598833643460815e-06], ['x.sign_mask', 2.598833643460815e-06], ['CRUX', 2.598833643460815e-06], ['nonzero.', 2.598833643460815e-06], ['any)', 2.598833643460815e-06], ['(crux', 2.598833643460815e-06], ['x.val[crux]', 2.598833643460815e-06], ['crux;', 2.598833643460815e-06], ['zero-extended', 2.598833643460815e-06], ['CRUX.', 2.598833643460815e-06], ['x.val[crux];', 2.598833643460815e-06], ['((crux', 2.598833643460815e-06], ['x.precision)', 2.598833643460815e-06], ['(hwi,', 2.598833643460815e-06], ['::exact_log2', 2.598833643460815e-06], ['(hwi);', 2.598833643460815e-06], ['logarithm', 2.598833643460815e-06], ['down.', 2.598833643460815e-06], ['wi::floor_log2', 2.598833643460815e-06], ['(lowest)', 2.598833643460815e-06], ['wi::ffs', 2.598833643460815e-06], ['eq_p', 2.598833643460815e-06], ['sign-extending', 2.598833643460815e-06], ['only_sign_bit_p', 2.598833643460815e-06], ['x.precision);', 2.598833643460815e-06], ['17.', 2.598833643460815e-06], ['EXTRA_BITS', 2.598833643460815e-06], ['lower_mask', 2.598833643460815e-06], ['MASK,', 2.598833643460815e-06], ['mask)', 2.598833643460815e-06], ['(mask', 2.598833643460815e-06], ['lower_mask);', 2.598833643460815e-06], ['32.', 2.598833643460815e-06], ['Conceptually', 2.598833643460815e-06], ['(upper_mask,', 2.598833643460815e-06], ['tmp)', 2.598833643460815e-06], ['-tmp;', 2.598833643460815e-06], ['gt_ggc_mx', 2.598833643460815e-06], ['(*)', 2.598833643460815e-06], ['wide_int::dump', 2.598833643460815e-06], ['<false>', 2.598833643460815e-06], ['<true>', 2.598833643460815e-06], ['offset_int::dump', 2.598833643460815e-06], ['widest_int::dump', 2.598833643460815e-06], ['::dump', 2.598833643460815e-06], ['Besides,', 2.598833643460815e-06], ['Selftests', 2.598833643460815e-06], ['Specializations', 2.598833643460815e-06], ['fixture', 2.598833643460815e-06], ['wide-int', 2.598833643460815e-06], ['offset_int.', 2.598833643460815e-06], ['widest_int.', 2.598833643460815e-06], ['(WI,', 2.598833643460815e-06], ['...,', 2.598833643460815e-06], ['SGN)', 2.598833643460815e-06], ['10).', 2.598833643460815e-06], ['16.', 2.598833643460815e-06], ['&wi)', 2.598833643460815e-06], ['("42",', 2.598833643460815e-06], ['("0x2a",', 2.598833643460815e-06], ['("0x1fffffffffffffffff",', 2.598833643460815e-06], ['(WIDE_INT_MAX_PRECISION', 2.598833643460815e-06], ['("0x20000000000000000fffffffffffffffe",', 2.598833643460815e-06], ['("0x200000000000004000123456789abcdef",', 2.598833643460815e-06], ['74)', 2.598833643460815e-06], ['(0x1234567,', 2.598833643460815e-06], ['0x89abcdef);', 2.598833643460815e-06], ['VALUE_TYPE,', 2.598833643460815e-06], ['binary,', 2.598833643460815e-06], ['syntax,', 2.598833643460815e-06], ['overloaded-operators.', 2.598833643460815e-06], ['wi::neg', 2.598833643460815e-06], ['a),', 2.598833643460815e-06], ['-a,', 2.598833643460815e-06], ['selftests,', 2.598833643460815e-06], ['precs[]', 2.598833643460815e-06], ['65,', 2.598833643460815e-06], ['127,', 2.598833643460815e-06], ['offsets[]', 2.598833643460815e-06], ['(precs);', 2.598833643460815e-06], ['(offsets);', 2.598833643460815e-06], ['precs[i];', 2.598833643460815e-06], ['offsets[j];', 2.598833643460815e-06], ['round_{down,up}_for_mask', 2.598833643460815e-06], ['18;', 2.598833643460815e-06], ['(16,', 2.598833643460815e-06], ['(32,', 2.598833643460815e-06], ['(0x011,', 2.598833643460815e-06], ['(0x100,', 2.598833643460815e-06], ['(100,', 2.598833643460815e-06], ['(104,', 2.598833643460815e-06], ['(0x2bc,', 2.598833643460815e-06], ['(0x800,', 2.598833643460815e-06], ['wide_int_cc_tests', 2.598833643460815e-06], ['<wide_int>', 2.598833643460815e-06], ['<offset_int>', 2.598833643460815e-06], ['Rich', 2.598833643460815e-06], ['"opt-problem.h"', 2.598833643460815e-06], ['AP', 2.598833643460815e-06], ['via:', 2.598833643460815e-06], ['replayed', 2.598833643460815e-06], ['handled,', 2.598833643460815e-06], ['opt_problem::opt_problem', 2.598833643460815e-06], ['dump_location_t', 2.598833643460815e-06], ['&loc,', 2.598833643460815e-06], ['*fmt,', 2.598833643460815e-06], ['*ap)', 2.598833643460815e-06], ['OPTINFO_KIND_FAILURE,', 2.598833643460815e-06], ['current_pass)', 2.598833643460815e-06], ['bothering', 2.598833643460815e-06], ['singleton.', 2.598833643460815e-06], ['s_the_problem;', 2.598833643460815e-06], ['dump_context', 2.598833643460815e-06], ['&dc', 2.598833643460815e-06], ['dc.dump_loc', 2.598833643460815e-06], ['loc.get_user_location', 2.598833643460815e-06], ['dump_pretty_printer', 2.598833643460815e-06], ['(&dump_context::get', 2.598833643460815e-06], ['MSG_MISSED_OPTIMIZATION);', 2.598833643460815e-06], ['i18n', 2.598833643460815e-06], ['performed.', 2.598833643460815e-06], ['Phases', 2.598833643460815e-06], ['pp_format.', 2.598833643460815e-06], ['pp_format', 2.598833643460815e-06], ['Phase', 2.598833643460815e-06], ['pp.emit_items', 2.598833643460815e-06], ['(&m_optinfo);', 2.598833643460815e-06], ['opt_problem::emit_and_clear', 2.598833643460815e-06], ['s_the_problem);', 2.598833643460815e-06], ['m_optinfo.emit_for_opt_problem', 2.598833643460815e-06], ['*opt_problem::s_the_problem;', 2.598833643460815e-06], ['twice,', 2.598833643460815e-06], ['MSG_ALL_PRIORITIES);', 2.598833643460815e-06], ['"success"', 2.598833643460815e-06], ['(info,', 2.598833643460815e-06], ['pre-canned', 2.598833643460815e-06], ['("function_that_fails",', 2.598833643460815e-06], ['(stmt)),', 2.598833643460815e-06], ['static_cast', 2.598833643460815e-06], ['("function_that_indirectly_fails",', 2.598833643460815e-06], ['(!res)', 2.598833643460815e-06], ['whilst', 2.598833643460815e-06], ['considering', 2.598833643460815e-06], ['notionally', 2.598833643460815e-06], ['microcosm', 2.598833643460815e-06], ['problematic', 2.598833643460815e-06], ['test_opt_result_failure_at', 2.598833643460815e-06], ['line_table_case', 2.598833643460815e-06], ['&case_)', 2.598833643460815e-06], ['line_table_test', 2.598833643460815e-06], ['ltt', 2.598833643460815e-06], ['(case_);', 2.598833643460815e-06], ['*ord_map', 2.598833643460815e-06], ['linemap_check_ordinary', 2.598833643460815e-06], ['(linemap_add', 2.598833643460815e-06], ['"test.c",', 2.598833643460815e-06], ['"test.c:5:10".', 2.598833643460815e-06], ['line_5', 2.598833643460815e-06], ['Another', 2.598833643460815e-06], ['"test.c:6:12".', 2.598833643460815e-06], ['line_6', 2.598833643460815e-06], ['linemap_position_for_line_and_column', 2.598833643460815e-06], ['ord_map,', 2.598833643460815e-06], ['(line_6', 2.598833643460815e-06], ['LINE_MAP_MAX_LOCATION_WITH_COLS)', 2.598833643460815e-06], ['"line_5"', 2.598833643460815e-06], ['"line_6"', 2.598833643460815e-06], ['*stmt_at_5', 2.598833643460815e-06], ['(integer_one_node);', 2.598833643460815e-06], ['(stmt_at_5,', 2.598833643460815e-06], ['line_5);', 2.598833643460815e-06], ['*stmt_at_6', 2.598833643460815e-06], ['(integer_zero_node);', 2.598833643460815e-06], ['(stmt_at_6,', 2.598833643460815e-06], ['MSG_PRIORITY_INTERNALS', 2.598833643460815e-06], ['MSG_PRIORITY_REEMITTED.', 2.598833643460815e-06], ['MSG_PRIORITY_USER_FACING;', 2.598833643460815e-06], ['MSG_PRIORITY_INTERNALS;', 2.598833643460815e-06], ['filter);', 2.598833643460815e-06], ['attempting', 2.598833643460815e-06], ['"stmt_at_6".', 2.598833643460815e-06], ['(stmt_at_6);', 2.598833643460815e-06], ['"failure"', 2.598833643460815e-06], ['"false"', 2.598833643460815e-06], ['*problem', 2.598833643460815e-06], ['res.get_problem', 2.598833643460815e-06], ['(problem->get_dump_location', 2.598833643460815e-06], ['(__GNUC__', 2.598833643460815e-06], ['__GNUC_MINOR__', 2.598833643460815e-06], ['captures', 2.598833643460815e-06], ['dump_impl_location_t', 2.598833643460815e-06], ['&impl_location', 2.598833643460815e-06], ['problem->get_dump_location', 2.598833643460815e-06], ['().get_impl_location', 2.598833643460815e-06], ['(impl_location.m_function,', 2.598833643460815e-06], ['"function_that_fails");', 2.598833643460815e-06], ['problem->get_optinfo', 2.598833643460815e-06], ['(info.get_dump_location', 2.598833643460815e-06], ['(info.num_items', 2.598833643460815e-06], ['ASSERT_IS_TREE', 2.598833643460815e-06], ['UNKNOWN_LOCATION,', 2.598833643460815e-06], ['"int");', 2.598833643460815e-06], ['ASSERT_IS_GIMPLE', 2.598833643460815e-06], ['line_6,', 2.598833643460815e-06], ['...but', 2.598833643460815e-06], ["dump_context's", 2.598833643460815e-06], ['pending_optinfo.', 2.598833643460815e-06], ['(tmp.get_pending_optinfo', 2.598833643460815e-06], ['high-level', 2.598833643460815e-06], ['summary', 2.598833643460815e-06], ['message,', 2.598833643460815e-06], ['problem.', 2.598833643460815e-06], ['stmt_at_5,', 2.598833643460815e-06], ['problem->emit_and_clear', 2.598833643460815e-06], ['(when', 2.598833643460815e-06], ['occurred).', 2.598833643460815e-06], ['C++98).', 2.598833643460815e-06], ['effective_filter', 2.598833643460815e-06], ['MSG_PRIORITY_REEMITTED);', 2.598833643460815e-06], ['MSG_PRIORITY_REEMITTED))', 2.598833643460815e-06], ['-fopt-info-internals', 2.598833643460815e-06], ['MSG_PRIORITY_INTERNALS)', 2.598833643460815e-06], ['MSG_PRIORITY_REEMITTED)', 2.598833643460815e-06], ['-fopt-info', 2.598833643460815e-06], ['opt_problem_cc_tests', 2.598833643460815e-06], ['for_each_line_table_case', 2.598833643460815e-06], ['(test_opt_result_failure_at);', 2.598833643460815e-06], ['typeinfo.cc', 2.598833643460815e-06], ['identification.', 2.598833643460815e-06], ['retrieved', 2.598833643460815e-06], ["`typeid()'.", 2.598833643460815e-06], ['helpers,', 2.598833643460815e-06], ["`new',", 2.598833643460815e-06], ["`delete',", 2.598833643460815e-06], ['forward,', 2.598833643460815e-06], ["`object.d',", 2.598833643460815e-06], ['`rt/typeinfo`.', 2.598833643460815e-06], ['POD-structs', 2.598833643460815e-06], ['user,', 2.598833643460815e-06], ['TK_TYPEINFO_TYPE,', 2.598833643460815e-06], ['object.TypeInfo', 2.598833643460815e-06], ['TK_CLASSINFO_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Class', 2.598833643460815e-06], ['TK_INTERFACE_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Interface', 2.598833643460815e-06], ['TK_STRUCT_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Struct', 2.598833643460815e-06], ['TK_POINTER_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Pointer', 2.598833643460815e-06], ['TK_ARRAY_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Array', 2.598833643460815e-06], ['TK_STATICARRAY_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_StaticArray', 2.598833643460815e-06], ['TK_ASSOCIATIVEARRAY_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_AssociativeArray', 2.598833643460815e-06], ['TK_VECTOR_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Vector', 2.598833643460815e-06], ['TK_ENUMERAL_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Enum', 2.598833643460815e-06], ['TK_FUNCTION_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Function', 2.598833643460815e-06], ['TK_DELEGATE_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Delegate', 2.598833643460815e-06], ['TK_TYPELIST_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Tuple', 2.598833643460815e-06], ['TK_CONST_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Const', 2.598833643460815e-06], ['TK_IMMUTABLE_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Invariant', 2.598833643460815e-06], ['TK_SHARED_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Shared', 2.598833643460815e-06], ['TK_INOUT_TYPE,', 2.598833643460815e-06], ['object.TypeInfo_Inout', 2.598833643460815e-06], ['TK_CPPTI_TYPE,', 2.598833643460815e-06], ['object.__cpp_type_info_ptr', 2.598833643460815e-06], ['TK_END', 2.598833643460815e-06], ['early,', 2.598833643460815e-06], ['tinfo_types[TK_END];', 2.598833643460815e-06], ['shared/const', 2.598833643460815e-06], ['(type->isShared', 2.598833643460815e-06], ['TK_SHARED_TYPE;', 2.598833643460815e-06], ['(type->isConst', 2.598833643460815e-06], ['TK_CONST_TYPE;', 2.598833643460815e-06], ['(type->isImmutable', 2.598833643460815e-06], ['TK_IMMUTABLE_TYPE;', 2.598833643460815e-06], ['(type->isWild', 2.598833643460815e-06], ['TK_INOUT_TYPE;', 2.598833643460815e-06], ['(type->ty)', 2.598833643460815e-06], ['TK_POINTER_TYPE;', 2.598833643460815e-06], ['TK_ARRAY_TYPE;', 2.598833643460815e-06], ['TK_STATICARRAY_TYPE;', 2.598833643460815e-06], ['TK_ASSOCIATIVEARRAY_TYPE;', 2.598833643460815e-06], ['TK_STRUCT_TYPE;', 2.598833643460815e-06], ['TK_VECTOR_TYPE;', 2.598833643460815e-06], ['Tenum:', 2.598833643460815e-06], ['TK_ENUMERAL_TYPE;', 2.598833643460815e-06], ['Tfunction:', 2.598833643460815e-06], ['TK_FUNCTION_TYPE;', 2.598833643460815e-06], ['TK_DELEGATE_TYPE;', 2.598833643460815e-06], ['Ttuple:', 2.598833643460815e-06], ['TK_TYPELIST_TYPE;', 2.598833643460815e-06], ['TK_INTERFACE_TYPE;', 2.598833643460815e-06], ['TK_CLASSINFO_TYPE;', 2.598833643460815e-06], ['TK_TYPEINFO_TYPE;', 2.598833643460815e-06], ['derivative', 2.598833643460815e-06], ["`object.d'", 2.598833643460815e-06], ['(tinfo_kind', 2.598833643460815e-06], ['tk,', 2.598833643460815e-06], ['(field_type', 2.598833643460815e-06], ['(field_type,', 2.598833643460815e-06], ['tinfo_types[tk]', 2.598833643460815e-06], ['create_tinfo_types.', 2.598833643460815e-06], ['*mod,', 2.598833643460815e-06], ['(!base)', 2.598833643460815e-06], ['Type::dtypeinfo;', 2.598833643460815e-06], ['(!mod->_scope)', 2.598833643460815e-06], ['mod->importAll', 2.598833643460815e-06], ['(mod->md)', 2.598833643460815e-06], ['mod->md->loc', 2.598833643460815e-06], ['mod->loc;', 2.598833643460815e-06], ['*tinfo', 2.598833643460815e-06], ['ClassDeclaration::create', 2.598833643460815e-06], ['tinfo->parent', 2.598833643460815e-06], ['tinfo->semantic', 2.598833643460815e-06], ['(mod->_scope);', 2.598833643460815e-06], ['tinfo->baseClass', 2.598833643460815e-06], ['documentation', 2.598833643460815e-06], ['(TK_TYPEINFO_TYPE,', 2.598833643460815e-06], ['(TK_CLASSINFO_TYPE,', 2.598833643460815e-06], ['("TypeInfo_Class"),', 2.598833643460815e-06], ['d_uint_type,', 2.598833643460815e-06], ['existing,', 2.598833643460815e-06], ['(!Type::dtypeinfo)', 2.598833643460815e-06], ['(!Type::typeinfoclass)', 2.598833643460815e-06], ['("TypeInfo_Class"));', 2.598833643460815e-06], ['(!Type::typeinfointerface)', 2.598833643460815e-06], ['("TypeInfo_Interface"));', 2.598833643460815e-06], ['(!Type::typeinfostruct)', 2.598833643460815e-06], ['("TypeInfo_Struct"));', 2.598833643460815e-06], ['(!Type::typeinfopointer)', 2.598833643460815e-06], ['("TypeInfo_Pointer"));', 2.598833643460815e-06], ['(!Type::typeinfoarray)', 2.598833643460815e-06], ['("TypeInfo_Array"));', 2.598833643460815e-06], ['(!Type::typeinfostaticarray)', 2.598833643460815e-06], ['("TypeInfo_StaticArray"));', 2.598833643460815e-06], ['(!Type::typeinfoassociativearray)', 2.598833643460815e-06], ['("TypeInfo_AssociativeArray"));', 2.598833643460815e-06], ['(!Type::typeinfoenum)', 2.598833643460815e-06], ['("TypeInfo_Enum"));', 2.598833643460815e-06], ['(!Type::typeinfofunction)', 2.598833643460815e-06], ['("TypeInfo_Function"));', 2.598833643460815e-06], ['(!Type::typeinfodelegate)', 2.598833643460815e-06], ['("TypeInfo_Delegate"));', 2.598833643460815e-06], ['(!Type::typeinfotypelist)', 2.598833643460815e-06], ['("TypeInfo_Tuple"));', 2.598833643460815e-06], ['(!Type::typeinfoconst)', 2.598833643460815e-06], ['("TypeInfo_Const"));', 2.598833643460815e-06], ['(!Type::typeinfoinvariant)', 2.598833643460815e-06], ['("TypeInfo_Invariant"),', 2.598833643460815e-06], ['(!Type::typeinfoshared)', 2.598833643460815e-06], ['("TypeInfo_Shared"),', 2.598833643460815e-06], ['(!Type::typeinfowild)', 2.598833643460815e-06], ['("TypeInfo_Wild"),', 2.598833643460815e-06], ['(!Type::typeinfovector)', 2.598833643460815e-06], ['("TypeInfo_Vector"));', 2.598833643460815e-06], ['(!ClassDeclaration::cpp_type_info_ptr)', 2.598833643460815e-06], ['*init_;', 2.598833643460815e-06], ['layout_field', 2.598833643460815e-06], ['(this->init_,', 2.598833643460815e-06], ['layout_string', 2.598833643460815e-06], ['__vptr', 2.598833643460815e-06], ['__monitor', 2.598833643460815e-06], ['layout_base', 2.598833643460815e-06], ['layout_interfaces', 2.598833643460815e-06], ['vtblInterfaces', 2.598833643460815e-06], ['(cd->vtblInterfaces->dim),', 2.598833643460815e-06], ['(offset)));', 2.598833643460815e-06], ['Internally,', 2.598833643460815e-06], ['void*[4]', 2.598833643460815e-06], ['classinfo;', 2.598833643460815e-06], ['b->fillVtbl', 2.598833643460815e-06], ['&b->vtbl,', 2.598833643460815e-06], ['(voffset', 2.598833643460815e-06], ['0u);', 2.598833643460815e-06], ['(voffset));', 2.598833643460815e-06], ['(id->vtbl.dim));', 2.598833643460815e-06], ['(b->offset));', 2.598833643460815e-06], ['(cd->vtblInterfaces->dim', 2.598833643460815e-06], ['interfacing', 2.598833643460815e-06], ['vtable[]', 2.598833643460815e-06], ['BCD', 2.598833643460815e-06], ['layout_base_vtable', 2.598833643460815e-06], ['*bcd,', 2.598833643460815e-06], ['(*bcd->vtblInterfaces)[index];', 2.598833643460815e-06], ['bs->sym;', 2.598833643460815e-06], ['bvtbl;', 2.598833643460815e-06], ['bvtbl', 2.598833643460815e-06], ['!bs->fillVtbl', 2.598833643460815e-06], ['&bvtbl,', 2.598833643460815e-06], ['(id->vtblOffset', 2.598833643460815e-06], ['(vtbl_interface_type_node));', 2.598833643460815e-06], ['(bcd)),', 2.598833643460815e-06], ['id->vtblOffset', 2.598833643460815e-06], ['id->vtbl.dim;', 2.598833643460815e-06], ['bcd)', 2.598833643460815e-06], ['bs->vtbl[i]', 2.598833643460815e-06], ['bvtbl[i];', 2.598833643460815e-06], ['(make_thunk', 2.598833643460815e-06], ['bs->offset));', 2.598833643460815e-06], ['(this->type_,', 2.598833643460815e-06], ['this->init_);', 2.598833643460815e-06], ['(Type::dtypeinfo);', 2.598833643460815e-06], ['TypeInfo_Const', 2.598833643460815e-06], ['(TypeInfoConstDeclaration', 2.598833643460815e-06], ['TypeInfo_Const.', 2.598833643460815e-06], ['(Type::typeinfoconst);', 2.598833643460815e-06], ['TypeInfo_Immutable', 2.598833643460815e-06], ['(TypeInfoInvariantDeclaration', 2.598833643460815e-06], ['TypeInfo_Invariant.', 2.598833643460815e-06], ['(Type::typeinfoinvariant);', 2.598833643460815e-06], ['TypeInfo_Shared', 2.598833643460815e-06], ['(TypeInfoSharedDeclaration', 2.598833643460815e-06], ['d->tinfo->unSharedOf', 2.598833643460815e-06], ['TypeInfo_Shared.', 2.598833643460815e-06], ['(Type::typeinfoshared);', 2.598833643460815e-06], ['unshared', 2.598833643460815e-06], ['TypeInfo_Inout', 2.598833643460815e-06], ['(TypeInfoWildDeclaration', 2.598833643460815e-06], ['TypeInfo_Inout.', 2.598833643460815e-06], ['(Type::typeinfowild);', 2.598833643460815e-06], ['TypeInfo_Enum', 2.598833643460815e-06], ['(TypeInfoEnumDeclaration', 2.598833643460815e-06], ['Tenum);', 2.598833643460815e-06], ['EnumDeclaration', 2.598833643460815e-06], ['*ed', 2.598833643460815e-06], ['TypeInfo_Enum.', 2.598833643460815e-06], ['(Type::typeinfoenum);', 2.598833643460815e-06], ['memtype', 2.598833643460815e-06], ['(memtype);', 2.598833643460815e-06], ['(ed->toPrettyChars', 2.598833643460815e-06], ['(ed->members', 2.598833643460815e-06], ['!d->tinfo->isZeroInit', 2.598833643460815e-06], ['(ed->type->size', 2.598833643460815e-06], ['(enum_initializer_decl', 2.598833643460815e-06], ['(ed));', 2.598833643460815e-06], ['TypeInfo_Pointer', 2.598833643460815e-06], ['m_next;', 2.598833643460815e-06], ['(TypeInfoPointerDeclaration', 2.598833643460815e-06], ['TypeInfo_Pointer.', 2.598833643460815e-06], ['(Type::typeinfopointer);', 2.598833643460815e-06], ['pointer-to', 2.598833643460815e-06], ['TypeInfo_Array', 2.598833643460815e-06], ['(TypeInfoArrayDeclaration', 2.598833643460815e-06], ['TypeInfo_Array.', 2.598833643460815e-06], ['(Type::typeinfoarray);', 2.598833643460815e-06], ['TypeInfo_StaticArray', 2.598833643460815e-06], ['(TypeInfoStaticArrayDeclaration', 2.598833643460815e-06], ['TypeInfo_StaticArray.', 2.598833643460815e-06], ['(Type::typeinfostaticarray);', 2.598833643460815e-06], ['(ti->dim->toInteger', 2.598833643460815e-06], ['TypeInfo_AssociativeArray', 2.598833643460815e-06], ['(TypeInfoAssociativeArrayDeclaration', 2.598833643460815e-06], ['TypeInfo_AssociativeArray.', 2.598833643460815e-06], ['(Type::typeinfoassociativearray);', 2.598833643460815e-06], ['(ti->index));', 2.598833643460815e-06], ['TypeInfo_Vector', 2.598833643460815e-06], ['(TypeInfoVectorDeclaration', 2.598833643460815e-06], ['Tvector);', 2.598833643460815e-06], ['TypeVector', 2.598833643460815e-06], ['TypeInfo_Vector.', 2.598833643460815e-06], ['(Type::typeinfovector);', 2.598833643460815e-06], ['(ti->basetype));', 2.598833643460815e-06], ['TypeInfo_Function', 2.598833643460815e-06], ['(TypeInfoFunctionDeclaration', 2.598833643460815e-06], ['Tfunction', 2.598833643460815e-06], ['TypeInfo_Function.', 2.598833643460815e-06], ['(Type::typeinfofunction);', 2.598833643460815e-06], ['TypeInfo_Delegate', 2.598833643460815e-06], ['(TypeInfoDelegateDeclaration', 2.598833643460815e-06], ['Tdelegate', 2.598833643460815e-06], ['TypeInfo_Delegate.', 2.598833643460815e-06], ['(Type::typeinfodelegate);', 2.598833643460815e-06], ['ClassInfo/TypeInfo_Class', 2.598833643460815e-06], ['Interface[]', 2.598833643460815e-06], ['interfaces;', 2.598833643460815e-06], ['write.', 2.598833643460815e-06], ['ClassInfo.', 2.598833643460815e-06], ['(Type::typeinfoclass);', 2.598833643460815e-06], ['(!cd->members)', 2.598833643460815e-06], ['(cd->structsize),', 2.598833643460815e-06], ['(init));', 2.598833643460815e-06], ['cd->ident->toChars', 2.598833643460815e-06], ['(!(strlen', 2.598833643460815e-06], ['"TypeInfo_",', 2.598833643460815e-06], ['9)', 2.598833643460815e-06], ['cd->toPrettyChars', 2.598833643460815e-06], ['(cd->vtbl.dim),', 2.598833643460815e-06], ['(cd->baseClass))', 2.598833643460815e-06], ['(cd->dtor)', 2.598833643460815e-06], ['(cd->dtor))', 2.598833643460815e-06], ['inv', 2.598833643460815e-06], ['(cd->inv)', 2.598833643460815e-06], ['(cd->inv))', 2.598833643460815e-06], ['(inv);', 2.598833643460815e-06], ['(cd->isCOMclass', 2.598833643460815e-06], ['ClassFlags::isCPPclass;', 2.598833643460815e-06], ['ClassFlags::hasGetMembers;', 2.598833643460815e-06], ['(cd->ctor)', 2.598833643460815e-06], ['ClassFlags::hasCtor;', 2.598833643460815e-06], ['(bcd->dtor)', 2.598833643460815e-06], ['ClassFlags::hasDtor;', 2.598833643460815e-06], ['(cd->isAbstract', 2.598833643460815e-06], ['ClassFlags::isAbstract;', 2.598833643460815e-06], ['(!bcd->members)', 2.598833643460815e-06], ['bcd->members->dim;', 2.598833643460815e-06], ['*sm', 2.598833643460815e-06], ['(*bcd->members)[i];', 2.598833643460815e-06], ['(sm->hasPointers', 2.598833643460815e-06], ['Lhaspointers;', 2.598833643460815e-06], ['ClassFlags::noPointers;', 2.598833643460815e-06], ['Lhaspointers:', 2.598833643460815e-06], ['ddtor', 2.598833643460815e-06], ['(cd->aggDelete)', 2.598833643460815e-06], ['(cd->aggDelete))', 2.598833643460815e-06], ['(ddtor);', 2.598833643460815e-06], ['(cd->defaultCtor', 2.598833643460815e-06], ['!(cd->defaultCtor->storage_class', 2.598833643460815e-06], ['dctor', 2.598833643460815e-06], ['(cd->defaultCtor);', 2.598833643460815e-06], ['(dctor));', 2.598833643460815e-06], ['(!(flags', 2.598833643460815e-06], ['ClassFlags::noPointers))', 2.598833643460815e-06], ['(cd->toPrettyChars', 2.598833643460815e-06], ['(cd->isCOMinterface', 2.598833643460815e-06], ['Interfaces.', 2.598833643460815e-06], ['(interfaces', 2.598833643460815e-06], ['(interfaces);', 2.598833643460815e-06], ['cd,', 2.598833643460815e-06], ['bcd,', 2.598833643460815e-06], ['TypeInfo_Interface', 2.598833643460815e-06], ['info;', 2.598833643460815e-06], ['(TypeInfoInterfaceDeclaration', 2.598833643460815e-06], ['(!ti->sym->vclassinfo)', 2.598833643460815e-06], ['ti->sym->vclassinfo', 2.598833643460815e-06], ['TypeInfo_Interface.', 2.598833643460815e-06], ['(Type::typeinfointerface);', 2.598833643460815e-06], ['tidecl', 2.598833643460815e-06], ['(ti->sym->vclassinfo);', 2.598833643460815e-06], ['(tidecl));', 2.598833643460815e-06], ['(X86_64)', 2.598833643460815e-06], ['(TypeInfoStructDeclaration', 2.598833643460815e-06], ['TypeInfo_Struct.', 2.598833643460815e-06], ['(Type::typeinfostruct);', 2.598833643460815e-06], ['(!sd->members)', 2.598833643460815e-06], ['(sd->toPrettyChars', 2.598833643460815e-06], ['(sd->zeroInit)', 2.598833643460815e-06], ['null_pointer_node', 2.598833643460815e-06], ['(aggregate_initializer_decl', 2.598833643460815e-06], ['(sd));', 2.598833643460815e-06], ['(sd->structsize),', 2.598833643460815e-06], ['xhash', 2.598833643460815e-06], ['(sd->xhash))', 2.598833643460815e-06], ['(xhash);', 2.598833643460815e-06], ['sd->xhash->type;', 2.598833643460815e-06], ['(!tf->isnothrow', 2.598833643460815e-06], ['TRUSTsystem)', 2.598833643460815e-06], ['(sd->xhash->loc,', 2.598833643460815e-06], ['"toHash()', 2.598833643460815e-06], ['toHash()', 2.598833643460815e-06], ['@safe,', 2.598833643460815e-06], ['tf->toChars', 2.598833643460815e-06], ['xeq', 2.598833643460815e-06], ['(sd->xeq)', 2.598833643460815e-06], ['(sd->xeq))', 2.598833643460815e-06], ['(xeq);', 2.598833643460815e-06], ['xcmp', 2.598833643460815e-06], ['(sd->xcmp)', 2.598833643460815e-06], ['(sd->xcmp))', 2.598833643460815e-06], ['(xcmp);', 2.598833643460815e-06], ['*fdx', 2.598833643460815e-06], ['search_toString', 2.598833643460815e-06], ['(fdx)', 2.598833643460815e-06], ['(fdx)));', 2.598833643460815e-06], ['StructFlags::Type', 2.598833643460815e-06], ['(ti->hasPointers', 2.598833643460815e-06], ['StructFlags::hasPointers;', 2.598833643460815e-06], ['(m_flags));', 2.598833643460815e-06], ['(sd->dtor))', 2.598833643460815e-06], ['(sd->postblit', 2.598833643460815e-06], ['!(sd->postblit->storage_class', 2.598833643460815e-06], ['(sd->postblit)));', 2.598833643460815e-06], ['(ti->alignsize', 2.598833643460815e-06], ['(global.params.is64bit)', 2.598833643460815e-06], ['arg1type', 2.598833643460815e-06], ['(arg1type);', 2.598833643460815e-06], ['arg2type', 2.598833643460815e-06], ['(arg2type);', 2.598833643460815e-06], ['(sd->getRTInfo)', 2.598833643460815e-06], ['(sd->getRTInfo,', 2.598833643460815e-06], ['(m_flags', 2.598833643460815e-06], ['StructFlags::hasPointers)', 2.598833643460815e-06], ['TypeInfo_Tuple', 2.598833643460815e-06], ['(TypeInfoTupleDeclaration', 2.598833643460815e-06], ['Ttuple);', 2.598833643460815e-06], ['TypeTuple', 2.598833643460815e-06], ['TypeInfo_Tuple.', 2.598833643460815e-06], ['(Type::typeinfotypelist);', 2.598833643460815e-06], ['Type::tvoidptr->sarrayOf', 2.598833643460815e-06], ['ti->arguments->dim;', 2.598833643460815e-06], ['(*ti->arguments)[i];', 2.598833643460815e-06], ['(arg->type));', 2.598833643460815e-06], ['public,', 2.598833643460815e-06], ['unit,', 2.598833643460815e-06], ['VISIBILITY_INTERNAL;', 2.598833643460815e-06], ['layout_typeinfo,', 2.598833643460815e-06], ['TypeInfoClassDeclaration', 2.598833643460815e-06], ['tinfo_types[TK_CLASSINFO_TYPE];', 2.598833643460815e-06], ['(decl->vtblInterfaces->dim)', 2.598833643460815e-06], ['Interface,', 2.598833643460815e-06], ['(decl->vtblInterfaces->dim', 2.598833643460815e-06], ['structsize);', 2.598833643460815e-06], ['decl->vtblInterfaces->dim', 2.598833643460815e-06], ['decl->vtblInterfaces->dim;', 2.598833643460815e-06], ['(*decl->vtblInterfaces)[i];', 2.598833643460815e-06], ['vtables.', 2.598833643460815e-06], ['decl->baseClass;', 2.598833643460815e-06], ['placed', 2.598833643460815e-06], ['builtin_typeinfo_p', 2.598833643460815e-06], ['Tnull)', 2.598833643460815e-06], ['!type->mod;', 2.598833643460815e-06], ['!type->mod', 2.598833643460815e-06], ['((next->isTypeBasic', 2.598833643460815e-06], ['!next->mod)', 2.598833643460815e-06], ['MODimmutable)', 2.598833643460815e-06], ['MODconst));', 2.598833643460815e-06], ['(tid->ident->toChars', 2.598833643460815e-06], ['tinfo_types[get_typeinfo_kind', 2.598833643460815e-06], ['(tid->tinfo)];', 2.598833643460815e-06], ['one-only.', 2.598833643460815e-06], ['(!tid->isInstantiated', 2.598833643460815e-06], ['(builtin_typeinfo_p', 2.598833643460815e-06], ['(tid->tinfo))', 2.598833643460815e-06], ['(tid->tinfo->ty', 2.598833643460815e-06], ['tid->tinfo;', 2.598833643460815e-06], ['(tc->sym);', 2.598833643460815e-06], ['(decl->tinfo->ty', 2.598833643460815e-06], ['decl->accept', 2.598833643460815e-06], ['decl->isInterfaceDeclaration', 2.598833643460815e-06], ['"__Interface"', 2.598833643460815e-06], ['"__Class",', 2.598833643460815e-06], ['(type->vtinfo));', 2.598833643460815e-06], ['layout_classinfo,', 2.598833643460815e-06], ['__cpp_type_info_ptr,', 2.598833643460815e-06], ['.classinfo', 2.598833643460815e-06], ['(ClassDeclaration::cpp_type_info_ptr);', 2.598833643460815e-06], ['(vptr));', 2.598833643460815e-06], ['RTTI', 2.598833643460815e-06], ['extern,', 2.598833643460815e-06], ['(ident),', 2.598833643460815e-06], ['unknown_type_node);', 2.598833643460815e-06], ['(typeinfo)', 2.598833643460815e-06], ['(typeinfo));', 2.598833643460815e-06], ['(decl->isCPPclass', 2.598833643460815e-06], ['(!tinfo_types[TK_CPPTI_TYPE])', 2.598833643460815e-06], ['(TK_CPPTI_TYPE,', 2.598833643460815e-06], ['"_cpp_type_info_ptr",', 2.598833643460815e-06], ['tinfo_types[TK_CPPTI_TYPE];', 2.598833643460815e-06], ['decl->cpp_type_info_ptr_sym', 2.598833643460815e-06], ['(decl->cpp_type_info_ptr_sym);', 2.598833643460815e-06], ["Type's", 2.598833643460815e-06], ['merged.', 2.598833643460815e-06], ['type->merge2', 2.598833643460815e-06], ['*ident;', 2.598833643460815e-06], ['(!t->vtinfo)', 2.598833643460815e-06], ['tk', 2.598833643460815e-06], ['(tk)', 2.598833643460815e-06], ['TK_SHARED_TYPE:', 2.598833643460815e-06], ['TK_CONST_TYPE:', 2.598833643460815e-06], ['TK_IMMUTABLE_TYPE:', 2.598833643460815e-06], ['TK_INOUT_TYPE:', 2.598833643460815e-06], ['TK_POINTER_TYPE:', 2.598833643460815e-06], ['TK_ARRAY_TYPE:', 2.598833643460815e-06], ['TK_VECTOR_TYPE:', 2.598833643460815e-06], ['TK_INTERFACE_TYPE:', 2.598833643460815e-06], ['Kinds', 2.598833643460815e-06], ['TK_SHARED_TYPE)', 2.598833643460815e-06], ["'shared'", 2.598833643460815e-06], ["'shared", 2.598833643460815e-06], ["const'.", 2.598833643460815e-06], ['TypeInfoSharedDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Shared");', 2.598833643460815e-06], ['TK_CONST_TYPE)', 2.598833643460815e-06], ['TypeInfoConstDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Const");', 2.598833643460815e-06], ['TK_IMMUTABLE_TYPE)', 2.598833643460815e-06], ['TypeInfoInvariantDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Invariant");', 2.598833643460815e-06], ['TK_INOUT_TYPE)', 2.598833643460815e-06], ['TypeInfoWildDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Wild");', 2.598833643460815e-06], ['TK_POINTER_TYPE)', 2.598833643460815e-06], ['TypeInfoPointerDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Pointer");', 2.598833643460815e-06], ['TK_ARRAY_TYPE)', 2.598833643460815e-06], ['TypeInfoArrayDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Array");', 2.598833643460815e-06], ['TK_VECTOR_TYPE)', 2.598833643460815e-06], ['TypeInfoVectorDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Vector");', 2.598833643460815e-06], ['TK_INTERFACE_TYPE)', 2.598833643460815e-06], ['TypeInfoInterfaceDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Interface");', 2.598833643460815e-06], ['TK_STATICARRAY_TYPE:', 2.598833643460815e-06], ['("TypeInfo_StaticArray");', 2.598833643460815e-06], ['TypeInfoStaticArrayDeclaration::create', 2.598833643460815e-06], ['TK_ASSOCIATIVEARRAY_TYPE:', 2.598833643460815e-06], ['("TypeInfo_AssociativeArray");', 2.598833643460815e-06], ['TypeInfoAssociativeArrayDeclaration::create', 2.598833643460815e-06], ['TK_STRUCT_TYPE:', 2.598833643460815e-06], ['ABIs', 2.598833643460815e-06], ['ptr_type_node', 2.598833643460815e-06], ['("TypeInfo_Struct");', 2.598833643460815e-06], ['TypeInfoStructDeclaration::create', 2.598833643460815e-06], ['TK_ENUMERAL_TYPE:', 2.598833643460815e-06], ['("TypeInfo_Enum");', 2.598833643460815e-06], ['TypeInfoEnumDeclaration::create', 2.598833643460815e-06], ['TK_FUNCTION_TYPE:', 2.598833643460815e-06], ['TK_DELEGATE_TYPE:', 2.598833643460815e-06], ['TK_FUNCTION_TYPE)', 2.598833643460815e-06], ['TypeInfoFunctionDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Function");', 2.598833643460815e-06], ['TK_DELEGATE_TYPE)', 2.598833643460815e-06], ['TypeInfoDelegateDeclaration::create', 2.598833643460815e-06], ['("TypeInfo_Delegate");', 2.598833643460815e-06], ['TK_TYPELIST_TYPE:', 2.598833643460815e-06], ['("TypeInfo_Tuple");', 2.598833643460815e-06], ['TypeInfoTupleDeclaration::create', 2.598833643460815e-06], ['TK_CLASSINFO_TYPE:', 2.598833643460815e-06], ['TypeInfoDeclaration::create', 2.598833643460815e-06], ['rt/typeinfo,', 2.598833643460815e-06], ['(!builtin_typeinfo_p', 2.598833643460815e-06], ['mod->members->push', 2.598833643460815e-06], ['merged,', 2.598833643460815e-06], ["vtinfo's.", 2.598833643460815e-06], ['(!type->vtinfo)', 2.598833643460815e-06], ['type->vtinfo', 2.598833643460815e-06], ['t->vtinfo;', 2.598833643460815e-06], ['(type->vtinfo', 2.598833643460815e-06], ['speculative.', 2.598833643460815e-06], ['(e.g:', 2.598833643460815e-06], ['opEquals', 2.598833643460815e-06], ['xopEquals', 2.598833643460815e-06], ['`unresolved', 2.598833643460815e-06], ["symbol'", 2.598833643460815e-06], ['(TypeNext', 2.598833643460815e-06], ['(t->next)', 2.598833643460815e-06], ['t->next->accept', 2.598833643460815e-06], ['t->basetype->accept', 2.598833643460815e-06], ['t->index->accept', 2.598833643460815e-06], ['sd->isInstantiated', 2.598833643460815e-06], ['(ti->minst', 2.598833643460815e-06], ['sd->requestTypeInfo)', 2.598833643460815e-06], ['cd->isInstantiated', 2.598833643460815e-06], ['!ti->minst)', 2.598833643460815e-06], ['(!t->arguments)', 2.598833643460815e-06], ['t->arguments->dim;', 2.598833643460815e-06], ['*tprm', 2.598833643460815e-06], ['(*t->arguments)[i]->type;', 2.598833643460815e-06], ['(tprm)', 2.598833643460815e-06], ['tprm->accept', 2.598833643460815e-06], ['speculative_type_p', 2.598833643460815e-06], ['"gt-d-typeinfo.h"', 2.598833643460815e-06], ['*gcc_builtins_functions', 2.598833643460815e-06], ['*gcc_builtins_libfuncs', 2.598833643460815e-06], ['*gcc_builtins_types', 2.598833643460815e-06], ['*dsym;', 2.598833643460815e-06], ['*t,', 2.598833643460815e-06], ['dtype(t),', 2.598833643460815e-06], ['ctype(c),', 2.598833643460815e-06], ['dsym(d)', 2.598833643460815e-06], ['vec<builtin_data>', 2.598833643460815e-06], ['builtin_converted_decls;', 2.598833643460815e-06], ['build_ctype()', 2.598833643460815e-06], ["char'", 2.598833643460815e-06], ['`D', 2.598833643460815e-06], ["char',", 2.598833643460815e-06], ['`char', 2.598833643460815e-06], ['*`', 2.598833643460815e-06], ['MOD', 2.598833643460815e-06], ['(TYPE_READONLY', 2.598833643460815e-06], ['MODconst;', 2.598833643460815e-06], ['(TYPE_VOLATILE', 2.598833643460815e-06], ['MODshared;', 2.598833643460815e-06], ['builtin_converted_decls[i].ctype;', 2.598833643460815e-06], ['builtin_converted_decls[i].dtype;', 2.598833643460815e-06], ['Needs', 2.598833643460815e-06], ['chars/string.', 2.598833643460815e-06], ['char_type_node)', 2.598833643460815e-06], ['Type::tchar->addMod', 2.598833643460815e-06], ['(dtype->mod)->pointerTo', 2.598833643460815e-06], ['(dtype->ty', 2.598833643460815e-06], ['dtype->pointerTo', 2.598833643460815e-06], ["`inout'", 2.598833643460815e-06], ['shared.', 2.598833643460815e-06], ['dtype->ctype', 2.598833643460815e-06], ['Type::tbool->addMod', 2.598833643460815e-06], ['cent/ucent', 2.598833643460815e-06], ['Tint8;', 2.598833643460815e-06], ['signedness.', 2.598833643460815e-06], ['(unsignedp', 2.598833643460815e-06], ['dtype->isunsigned', 2.598833643460815e-06], ['dtype->size', 2.598833643460815e-06], ['Tfloat32;', 2.598833643460815e-06], ['Tfloat80;', 2.598833643460815e-06], ['Tcomplex32;', 2.598833643460815e-06], ['Tcomplex80;', 2.598833643460815e-06], ['Type::tvoid->addMod', 2.598833643460815e-06], ['ub', 2.598833643460815e-06], ['(lb),', 2.598833643460815e-06], ['ub,', 2.598833643460815e-06], ['lb);', 2.598833643460815e-06], ['(length))->addMod', 2.598833643460815e-06], ['(nunits.to_constant', 2.598833643460815e-06], ['())->addMod', 2.598833643460815e-06], ['(dtype->nextOf', 2.598833643460815e-06], ['()->isTypeBasic', 2.598833643460815e-06], ['(TypeVector::create', 2.598833643460815e-06], ['dtype))->addMod', 2.598833643460815e-06], ['structname', 2.598833643460815e-06], ['(structname));', 2.598833643460815e-06], ["`object'", 2.598833643460815e-06], ["'object'", 2.598833643460815e-06], ['meantime.', 2.598833643460815e-06], ['*object', 2.598833643460815e-06], ['("object");', 2.598833643460815e-06], ['*stubmod', 2.598833643460815e-06], ['("object.d",', 2.598833643460815e-06], ['*sdecl', 2.598833643460815e-06], ['StructDeclaration::create', 2.598833643460815e-06], ['sdecl->parent', 2.598833643460815e-06], ['stubmod;', 2.598833643460815e-06], ['sdecl->structsize', 2.598833643460815e-06], ['sdecl->alignsize', 2.598833643460815e-06], ['sdecl->alignment', 2.598833643460815e-06], ['STRUCTALIGN_DEFAULT;', 2.598833643460815e-06], ['sdecl->sizeok', 2.598833643460815e-06], ['SIZEOKdone;', 2.598833643460815e-06], ['sdecl->type', 2.598833643460815e-06], ['(TypeStruct::create', 2.598833643460815e-06], ['(sdecl))->addMod', 2.598833643460815e-06], ['sdecl->type->ctype', 2.598833643460815e-06], ['sdecl->type->merge2', 2.598833643460815e-06], ['stick.', 2.598833643460815e-06], ['sdecl->members', 2.598833643460815e-06], ['sdecl->type;', 2.598833643460815e-06], ['sdecl));', 2.598833643460815e-06], ['FUNCTION_TYPE:', 2.598833643460815e-06], ['Parameters;', 2.598833643460815e-06], ['args->reserve', 2.598833643460815e-06], ['(list_length', 2.598833643460815e-06], ['(argtype', 2.598833643460815e-06], ['StorageClass', 2.598833643460815e-06], ['STCundefined;', 2.598833643460815e-06], ['*targ', 2.598833643460815e-06], ['(!targ)', 2.598833643460815e-06], ['args->push', 2.598833643460815e-06], ['(Parameter::create', 2.598833643460815e-06], ['(sc,', 2.598833643460815e-06], ['(args->dim', 2.598833643460815e-06], ['!varargs_p)', 2.598833643460815e-06], ['dtype,', 2.598833643460815e-06], ['varargs_p,', 2.598833643460815e-06], ['LINKc);', 2.598833643460815e-06], ['const-folded', 2.598833643460815e-06], ['cst)', 2.598833643460815e-06], ['hard,', 2.598833643460815e-06], ['CTFE-able', 2.598833643460815e-06], ['COMPLEX_CST)', 2.598833643460815e-06], ['(TREE_REALPART', 2.598833643460815e-06], ['(TREE_IMAGPART', 2.598833643460815e-06], ['(ldouble', 2.598833643460815e-06], ['(re),', 2.598833643460815e-06], ['(im));', 2.598833643460815e-06], ['ComplexExp::create', 2.598833643460815e-06], ['IntegerExp::create', 2.598833643460815e-06], ['REAL_CST)', 2.598833643460815e-06], ['RealExp::create', 2.598833643460815e-06], ['TREE_STRING_LENGTH', 2.598833643460815e-06], ['StringExp::create', 2.598833643460815e-06], ['CONST_CAST', 2.598833643460815e-06], ['string),', 2.598833643460815e-06], ['VECTOR_CST)', 2.598833643460815e-06], ['VECTOR_CST_NELTS', 2.598833643460815e-06], ['(cst).to_constant', 2.598833643460815e-06], ['Expressions;', 2.598833643460815e-06], ['elements->setDim', 2.598833643460815e-06], ['(nunits);', 2.598833643460815e-06], ['nunits;', 2.598833643460815e-06], ['(VECTOR_CST_ELT', 2.598833643460815e-06], ['(*elements)[i]', 2.598833643460815e-06], ['elem;', 2.598833643460815e-06], ['ArrayLiteralExp::create', 2.598833643460815e-06], ['elements);', 2.598833643460815e-06], ['((TypeVector', 2.598833643460815e-06], ['type)->basetype;', 2.598833643460815e-06], ['VectorExp::create', 2.598833643460815e-06], ['TARGET_D_CPU_VERSIONS', 2.598833643460815e-06], ['TARGET_D_OS_VERSIONS.', 2.598833643460815e-06], ['d_add_builtin_version', 2.598833643460815e-06], ['targeted.', 2.598833643460815e-06], ['fixed.', 2.598833643460815e-06], ['"linux")', 2.598833643460815e-06], ['global.params.isLinux', 2.598833643460815e-06], ['"OSX")', 2.598833643460815e-06], ['global.params.isOSX', 2.598833643460815e-06], ['"Windows")', 2.598833643460815e-06], ['global.params.isWindows', 2.598833643460815e-06], ['"FreeBSD")', 2.598833643460815e-06], ['global.params.isFreeBSD', 2.598833643460815e-06], ['"OpenBSD")', 2.598833643460815e-06], ['global.params.isOpenBSD', 2.598833643460815e-06], ['"Solaris")', 2.598833643460815e-06], ['global.params.isSolaris', 2.598833643460815e-06], ['is64bit', 2.598833643460815e-06], ['x86_64', 2.598833643460815e-06], ['"X86_64")', 2.598833643460815e-06], ['("GNU");', 2.598833643460815e-06], ['("D_Version2");', 2.598833643460815e-06], ['("BigEndian");', 2.598833643460815e-06], ['("LittleEndian");', 2.598833643460815e-06], ['UI_SJLJ)', 2.598833643460815e-06], ['("GNU_SjLj_Exceptions");', 2.598833643460815e-06], ['UI_SEH)', 2.598833643460815e-06], ['("GNU_SEH_Exceptions");', 2.598833643460815e-06], ['UI_DWARF2)', 2.598833643460815e-06], ['("GNU_DWARF2_Exceptions");', 2.598833643460815e-06], ['(!targetm.have_tls)', 2.598833643460815e-06], ['("GNU_EMUTLS");', 2.598833643460815e-06], ['(STACK_GROWS_DOWNWARD)', 2.598833643460815e-06], ['("GNU_StackGrowsDown");', 2.598833643460815e-06], ['competition.', 2.598833643460815e-06], ['("GNU_InlineAsm");', 2.598833643460815e-06], ['LP64', 2.598833643460815e-06], ['(global.params.isLP64)', 2.598833643460815e-06], ['("D_LP64");', 2.598833643460815e-06], ['Setting', 2.598833643460815e-06], ['coverage', 2.598833643460815e-06], ['flag_test_coverage', 2.598833643460815e-06], ['unset.', 2.598833643460815e-06], ['(flag_test_coverage)', 2.598833643460815e-06], ['("D_Coverage");', 2.598833643460815e-06], ['(flag_pic)', 2.598833643460815e-06], ['("D_PIC");', 2.598833643460815e-06], ['(global.params.doDocComments)', 2.598833643460815e-06], ['("D_Ddoc");', 2.598833643460815e-06], ['("unittest");', 2.598833643460815e-06], ['("assert");', 2.598833643460815e-06], ['BOUNDSCHECKoff)', 2.598833643460815e-06], ['("D_NoBoundsChecks");', 2.598833643460815e-06], ['("all");', 2.598833643460815e-06], ['targetdm.d_cpu_versions', 2.598833643460815e-06], ['targetdm.d_os_versions', 2.598833643460815e-06], ['("CppRuntime_Gcc");', 2.598833643460815e-06], ['d_build_builtins_module.', 2.598833643460815e-06], ['Analogous', 2.598833643460815e-06], ['`alias', 2.598833643460815e-06], ["TYPE'", 2.598833643460815e-06], ['build_alias_declaration', 2.598833643460815e-06], ['*alias,', 2.598833643460815e-06], ['AliasDeclaration::create', 2.598833643460815e-06], ['(alias),', 2.598833643460815e-06], ['*members', 2.598833643460815e-06], ['(!tf)', 2.598833643460815e-06], ['functions:', 2.598833643460815e-06], ['@safe', 2.598833643460815e-06], ['pure.', 2.598833643460815e-06], ["`__attribute__(nothrow)'", 2.598833643460815e-06], ["`@trusted'.", 2.598833643460815e-06], ['purity', 2.598833643460815e-06], ["`-foptions'", 2.598833643460815e-06], ['passed,', 2.598833643460815e-06], ['flag_unsafe_math_optimizations.', 2.598833643460815e-06], ["`nothrow'", 2.598833643460815e-06], ["`@nogc'.", 2.598833643460815e-06], ['tf->purity', 2.598833643460815e-06], ['PUREstrong', 2.598833643460815e-06], ['PUREconst', 2.598833643460815e-06], ['PUREimpure;', 2.598833643460815e-06], ['TRUSTsafe', 2.598833643460815e-06], ['TRUSTtrusted', 2.598833643460815e-06], ['TRUSTsystem;', 2.598833643460815e-06], ['tf->isnothrow', 2.598833643460815e-06], ['tf->isnogc', 2.598833643460815e-06], ['FuncDeclaration::create', 2.598833643460815e-06], ['STCextern,', 2.598833643460815e-06], ['func->csym', 2.598833643460815e-06], ['func->builtin', 2.598833643460815e-06], ['(targetm.enum_va_list_p)', 2.598833643460815e-06], ['targetm.enum_va_list_p', 2.598833643460815e-06], ['Currently,', 2.598833643460815e-06], ['semantic,', 2.598833643460815e-06], ['builtin_converted_decls[i].dsym;', 2.598833643460815e-06], ['dsym->parent', 2.598833643460815e-06], ['built,', 2.598833643460815e-06], ['("__builtin_va_list",', 2.598833643460815e-06], ['Type::tvalist));', 2.598833643460815e-06], ['Expose', 2.598833643460815e-06], ['("__builtin_clong",', 2.598833643460815e-06], ['(long_unsigned_type_node);', 2.598833643460815e-06], ['("__builtin_culong",', 2.598833643460815e-06], ['(long_long_integer_type_node);', 2.598833643460815e-06], ['("__builtin_clonglong",', 2.598833643460815e-06], ['(long_long_unsigned_type_node);', 2.598833643460815e-06], ['("__builtin_culonglong",', 2.598833643460815e-06], ['("__builtin_machine_byte",', 2.598833643460815e-06], ['("__builtin_machine_ubyte",', 2.598833643460815e-06], ['("__builtin_machine_int",', 2.598833643460815e-06], ['("__builtin_machine_uint",', 2.598833643460815e-06], ['("__builtin_pointer_int",', 2.598833643460815e-06], ['("__builtin_pointer_uint",', 2.598833643460815e-06], ['_Unwind_Word', 2.598833643460815e-06], ['targetm.unwind_word_mode', 2.598833643460815e-06], ['("__builtin_unwind_int",', 2.598833643460815e-06], ['("__builtin_unwind_uint",', 2.598833643460815e-06], ['m->members->push', 2.598833643460815e-06], ['(LinkDeclaration::create', 2.598833643460815e-06], ['(LINKc,', 2.598833643460815e-06], ['members));', 2.598833643460815e-06], ['d->isAttribDeclaration', 2.598833643460815e-06], ['ad->include', 2.598833643460815e-06], ['decls->dim)', 2.598833643460815e-06], ['decls->dim;', 2.598833643460815e-06], ['(*decls)[i];', 2.598833643460815e-06], ['!fd->fbody)', 2.598833643460815e-06], ['&t);', 2.598833643460815e-06], ['(DECL_ASSEMBLER_NAME_SET_P', 2.598833643460815e-06], ['match,', 2.598833643460815e-06], ['fd->csym', 2.598833643460815e-06], ['fd->builtin', 2.598833643460815e-06], ['!m->members)', 2.598833643460815e-06], ['m->members->dim;', 2.598833643460815e-06], ['(*m->members)[i];', 2.598833643460815e-06], ['segfaults', 2.598833643460815e-06], ['builtin_type_for_size', 2.598833643460815e-06], ['DEF_BUILTIN.', 2.598833643460815e-06], ['(built_in_function', 2.598833643460815e-06], ['built_in_class', 2.598833643460815e-06], ['both_p,', 2.598833643460815e-06], ['fallback_p,', 2.598833643460815e-06], ['fnattrs,', 2.598833643460815e-06], ['implicit_p)', 2.598833643460815e-06], ['*libname;', 2.598833643460815e-06], ['((!both_p', 2.598833643460815e-06], ['!fallback_p)', 2.598833643460815e-06], ['!strncmp', 2.598833643460815e-06], ['"__builtin_",', 2.598833643460815e-06], ['("__builtin_")));', 2.598833643460815e-06], ['("__builtin_");', 2.598833643460815e-06], ['add_builtin_function', 2.598833643460815e-06], ['fallback_p', 2.598833643460815e-06], ['fnattrs);', 2.598833643460815e-06], ['set_builtin_decl', 2.598833643460815e-06], ['(fncode,', 2.598833643460815e-06], ['implicit_p);', 2.598833643460815e-06], ['string_type_node;', 2.598833643460815e-06], ['const_string_type_node;', 2.598833643460815e-06], ['wint_type_node;', 2.598833643460815e-06], ['intmax_type_node;', 2.598833643460815e-06], ['uintmax_type_node;', 2.598833643460815e-06], ['signed_size_type_node;', 2.598833643460815e-06], ['front-end;', 2.598833643460815e-06], ['ultimately', 2.598833643460815e-06], ['void_list_node', 2.598833643460815e-06], ['string_type_node', 2.598833643460815e-06], ['(char_type_node);', 2.598833643460815e-06], ['const_string_type_node', 2.598833643460815e-06], ['"unsigned', 2.598833643460815e-06], ['wint_type_node', 2.598833643460815e-06], ['pid_type_node', 2.598833643460815e-06], ['Integral', 2.598833643460815e-06], ['d_byte_type', 2.598833643460815e-06], ['d_short_type', 2.598833643460815e-06], ['d_int_type', 2.598833643460815e-06], ['d_long_type', 2.598833643460815e-06], ['d_cent_type', 2.598833643460815e-06], ['Re-define', 2.598833643460815e-06], ['type_mode', 2.598833643460815e-06], ['size_type_node', 2.598833643460815e-06], ['(type_mode,', 2.598833643460815e-06], ['Bool', 2.598833643460815e-06], ['Character', 2.598833643460815e-06], ['d_bool_type', 2.598833643460815e-06], ['TREE_SET_CODE', 2.598833643460815e-06], ['(d_bool_type,', 2.598833643460815e-06], ['BOOLEAN_TYPE);', 2.598833643460815e-06], ['char8_type_node', 2.598833643460815e-06], ['(char8_type_node)', 2.598833643460815e-06], ['char16_type_node', 2.598833643460815e-06], ['(char16_type_node)', 2.598833643460815e-06], ['char32_type_node', 2.598833643460815e-06], ['(char32_type_node)', 2.598833643460815e-06], ['Imaginary', 2.598833643460815e-06], ['ifloat_type_node', 2.598833643460815e-06], ['(ifloat_type_node)', 2.598833643460815e-06], ['idouble_type_node', 2.598833643460815e-06], ['(idouble_type_node)', 2.598833643460815e-06], ['ireal_type_node', 2.598833643460815e-06], ['(ireal_type_node)', 2.598833643460815e-06], ['unknown_type_node', 2.598833643460815e-06], ['vfunc_type', 2.598833643460815e-06], ['(FUNCTION_TYPE);', 2.598833643460815e-06], ['vtable_entry_type', 2.598833643460815e-06], ['vtbl_ptr_type_node', 2.598833643460815e-06], ['(vtable_entry_type);', 2.598833643460815e-06], ['(vtbl_ptr_type_node);', 2.598833643460815e-06], ['vtbl_interface_type_node', 2.598833643460815e-06], ['domain);', 2.598833643460815e-06], ["`void[]'", 2.598833643460815e-06], ['array_type_node', 2.598833643460815e-06], ['("__builtin_void[]",', 2.598833643460815e-06], ['(array_type_node)', 2.598833643460815e-06], ['null_array_node', 2.598833643460815e-06], ['built_in_attribute', 2.598833643460815e-06], ['ATTR_LAST', 2.598833643460815e-06], ['ATTR_LAST];', 2.598833643460815e-06], ['built_in_attributes', 2.598833643460815e-06], ['(VALUE),', 2.598833643460815e-06], ['(STRING);', 2.598833643460815e-06], ['(built_in_attributes[(int)', 2.598833643460815e-06], ['PURPOSE],', 2.598833643460815e-06], ['VALUE],', 2.598833643460815e-06], ['CHAIN]);', 2.598833643460815e-06], ['DEF_PRIMITIVE_TYPE(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_0(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_1(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_2(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_3(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_4(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_5(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_6(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_7(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_8(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_9(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_10(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_11(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_0(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_1(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_2(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_3(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_4(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_5(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_6(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_7(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_11(NAME,', 2.598833643460815e-06], ['DEF_POINTER_TYPE(NAME,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_0', 2.598833643460815e-06], ['builtin_type;', 2.598833643460815e-06], ['communication', 2.598833643460815e-06], ['def_fn_type.', 2.598833643460815e-06], ['d_init_builtins.', 2.598833643460815e-06], ['DEF', 2.598833643460815e-06], ['said', 2.598833643460815e-06], ['builtin_type_for_size).', 2.598833643460815e-06], ['(builtin_type', 2.598833643460815e-06], ['def,', 2.598833643460815e-06], ['(builtin_type)', 2.598833643460815e-06], ['builtin_types[a];', 2.598833643460815e-06], ['builtin_types[ret];', 2.598833643460815e-06], ['egress:', 2.598833643460815e-06], ['builtin_types[def]', 2.598833643460815e-06], ['(list);', 2.598833643460815e-06], ['VA_LIST_REF_TYPE_NODE', 2.598833643460815e-06], ['VA_LIST_ARG_TYPE_NODE', 2.598833643460815e-06], ['builtin-types.def.', 2.598833643460815e-06], ['va_list_ref_type_node', 2.598833643460815e-06], ['va_list_arg_type_node', 2.598833643460815e-06], ['DEF_PRIMITIVE_TYPE(ENUM,', 2.598833643460815e-06], ['VALUE;', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_0(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_1(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_2(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_3(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_4(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_5(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_6(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_7(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_8(ENUM,', 2.598833643460815e-06], ['ARG8);', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_9(ENUM,', 2.598833643460815e-06], ['ARG9);', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_10(ENUM,', 2.598833643460815e-06], ['ARG10);', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_11(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_0(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_1(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_2(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_3(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_4(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_5(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_6(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_7(ENUM,', 2.598833643460815e-06], ['DEF_FUNCTION_TYPE_VAR_11(ENUM,', 2.598833643460815e-06], ['DEF_POINTER_TYPE(ENUM,', 2.598833643460815e-06], ['(builtin_types[(int)', 2.598833643460815e-06], ['TYPE]);', 2.598833643460815e-06], ['BT_LAST]', 2.598833643460815e-06], ['DEF_BUILTIN(ENUM,', 2.598833643460815e-06], ['LIBTYPE,', 2.598833643460815e-06], ['NONANSI_P,', 2.598833643460815e-06], ['ATTRS,', 2.598833643460815e-06], ['IMPLICIT,', 2.598833643460815e-06], ['(NAME', 2.598833643460815e-06], ['TYPE],', 2.598833643460815e-06], ['ATTRS],', 2.598833643460815e-06], ['IMPLICIT);', 2.598833643460815e-06], ['"builtins.def"', 2.598833643460815e-06], ['DEF_BUILTIN', 2.598833643460815e-06], ['Type::tvalist', 2.598833643460815e-06], ['(va_list_type_node);', 2.598833643460815e-06], ['(!Type::tvalist)', 2.598833643460815e-06], ['D");', 2.598833643460815e-06], ['targetm.canonical_va_list_type.', 2.598833643460815e-06], ['Type::tvalist->ctype', 2.598833643460815e-06], ['va_list_type_node;', 2.598833643460815e-06], ['(Type::tvalist);', 2.598833643460815e-06], ['(va_list_type_node,', 2.598833643460815e-06], ['(build_reference_type', 2.598833643460815e-06], ['(va_list_type_node),', 2.598833643460815e-06], ['targetm.init_builtins', 2.598833643460815e-06], ['build_common_builtin_nodes', 2.598833643460815e-06], ['Registration', 2.598833643460815e-06], ['machine-', 2.598833643460815e-06], ['os-specific', 2.598833643460815e-06], ['(!TYPE_NAME', 2.598833643460815e-06], ['(!flag_no_builtin', 2.598833643460815e-06], ['DECL_ASSEMBLER_NAME_SET_P', 2.598833643460815e-06], ['"gt-d-d-builtins.h"', 2.598833643460815e-06], ['import.cc', 2.598833643460815e-06], ['search_path;', 2.598833643460815e-06], ['hook.', 2.598833643460815e-06], ['go_add_search_path(const', 2.598833643460815e-06], ['path)', 2.598833643460815e-06], ['search_path.push_back(std::string(path));', 2.598833643460815e-06], ['searches', 2.598833643460815e-06], ['Stream', 2.598833643460815e-06], ['-I', 2.598833643460815e-06], ['RELATIVE_IMPORT_PATH', 2.598833643460815e-06], ['exists:', 2.598833643460815e-06], ['".gox".', 2.598833643460815e-06], ['libFILENAME.so.', 2.598833643460815e-06], ['libFILENAME.a.', 2.598833643460815e-06], ['".o".', 2.598833643460815e-06], ['transformations', 2.598833643460815e-06], ['Import::open_package(const', 2.598833643460815e-06], ['relative_import_path)', 2.598833643460815e-06], ['is_local;', 2.598833643460815e-06], ['(IS_ABSOLUTE_PATH(filename))', 2.598833643460815e-06], ['(filename[1]', 2.598833643460815e-06], ['IS_DIR_SEPARATOR(filename[1])))', 2.598833643460815e-06], ['filename[1]', 2.598833643460815e-06], ['(filename[2]', 2.598833643460815e-06], ['IS_DIR_SEPARATOR(filename[2])))', 2.598833643460815e-06], ['(is_local', 2.598833643460815e-06], ['!IS_ABSOLUTE_PATH(filename)', 2.598833643460815e-06], ['!relative_import_path.empty())', 2.598833643460815e-06], ['relative_import_path;', 2.598833643460815e-06], ['(fn[0]', 2.598833643460815e-06], ['fn[1]', 2.598833643460815e-06], ['(fn[2]', 2.598833643460815e-06], ['IS_DIR_SEPARATOR(fn[2])))', 2.598833643460815e-06], ['DIR/../PATH.', 2.598833643460815e-06], ['DIR', 2.598833643460815e-06], ["shouldn't.", 2.598833643460815e-06], ['path.Join', 2.598833643460815e-06], ['cleans', 2.598833643460815e-06], ['..,', 2.598833643460815e-06], ['relative_import_path.length()', 2.598833643460815e-06], ['!IS_DIR_SEPARATOR(relative_import_path[index]);', 2.598833643460815e-06], ['index--)', 2.598833643460815e-06], ['relative_import_path.substr(0,', 2.598833643460815e-06], ['fn.substr(2);', 2.598833643460815e-06], ['(!is_local)', 2.598833643460815e-06], ['search_path.begin();', 2.598833643460815e-06], ['search_path.end();', 2.598833643460815e-06], ['(!indir.empty()', 2.598833643460815e-06], ['indir[indir.size()', 2.598833643460815e-06], ['Import::try_package_in_directory(indir,', 2.598833643460815e-06], ['Import::try_package_in_directory(fn,', 2.598833643460815e-06], ['FILENAME.', 2.598833643460815e-06], ['Import::try_package_in_directory(const', 2.598833643460815e-06], ['found_filename', 2.598833643460815e-06], ['open(found_filename.c_str(),', 2.598833643460815e-06], ['(fstat(fd,', 2.598833643460815e-06], ['S_ISDIR(s.st_mode))', 2.598833643460815e-06], ['EISDIR;', 2.598833643460815e-06], ['(errno', 2.598833643460815e-06], ['ENOENT', 2.598833643460815e-06], ['EISDIR)', 2.598833643460815e-06], ['Import::try_suffixes(&found_filename);', 2.598833643460815e-06], ['Import::find_export_data(found_filename,', 2.598833643460815e-06], ['found_filename.c_str());', 2.598833643460815e-06], ['"*PFILENAME",', 2.598833643460815e-06], ['suffixes.', 2.598833643460815e-06], ['Import::try_suffixes(std::string*', 2.598833643460815e-06], ['pfilename)', 2.598833643460815e-06], ['".gox";', 2.598833643460815e-06], ['lbasename(pfilename->c_str());', 2.598833643460815e-06], ['basename_pos', 2.598833643460815e-06], ['pfilename->c_str();', 2.598833643460815e-06], ['".so";', 2.598833643460815e-06], ['".a";', 2.598833643460815e-06], ['".o";', 2.598833643460815e-06], ['Import::find_export_data(const', 2.598833643460815e-06], ['Import::find_object_export_data(filename,', 2.598833643460815e-06], ['MAX(Export::magic_len,', 2.598833643460815e-06], ['Import::archive_magic_len);', 2.598833643460815e-06], ['buf[len];', 2.598833643460815e-06], ['::read(fd,', 2.598833643460815e-06], ['Stream_from_file(fd);', 2.598833643460815e-06], ['(Import::is_archive_magic(buf))', 2.598833643460815e-06], ['Import::find_archive_export_data(filename,', 2.598833643460815e-06], ['Import::find_object_export_data(const', 2.598833643460815e-06], ['*buf;', 2.598833643460815e-06], ['err;', 2.598833643460815e-06], ['*errmsg', 2.598833643460815e-06], ['go_read_export_data(fd,', 2.598833643460815e-06], ['&buf,', 2.598833643460815e-06], ['&len,', 2.598833643460815e-06], ['&err);', 2.598833643460815e-06], ['(errmsg', 2.598833643460815e-06], ['(err', 2.598833643460815e-06], ['errmsg);', 2.598833643460815e-06], ['errmsg,', 2.598833643460815e-06], ['xstrerror(err));', 2.598833643460815e-06], ['Stream_from_buffer(buf,', 2.598833643460815e-06], ['builtin_types_', 2.598833643460815e-06], ['Import::Import(Stream*', 2.598833643460815e-06], ['stream,', 2.598833643460815e-06], ['gogo_(NULL),', 2.598833643460815e-06], ['add_to_globals_(false),', 2.598833643460815e-06], ['type_data_(),', 2.598833643460815e-06], ['type_pos_(0),', 2.598833643460815e-06], ['type_offsets_(),', 2.598833643460815e-06], ['builtin_types_((-', 2.598833643460815e-06], ['SMALLEST_BUILTIN_CODE)', 2.598833643460815e-06], ['types_(),', 2.598833643460815e-06], ['version_(EXPORT_FORMAT_UNKNOWN)', 2.598833643460815e-06], ['Import::import(Gogo*', 2.598833643460815e-06], ['is_local_name_exported)', 2.598833643460815e-06], ['Hold', 2.598833643460815e-06], ['Gogo', 2.598833643460815e-06], ['(!stream->at_eof()', 2.598833643460815e-06], ['!stream->saw_error())', 2.598833643460815e-06], ['specific.', 2.598833643460815e-06], ['this->types_.clear();', 2.598833643460815e-06], ['(stream->match_bytes(Export::cur_magic,', 2.598833643460815e-06], ['EXPORT_FORMAT_CURRENT;', 2.598833643460815e-06], ['(stream->match_bytes(Export::v1_magic,', 2.598833643460815e-06], ['EXPORT_FORMAT_V1;', 2.598833643460815e-06], ['(stream->match_bytes(Export::v2_magic,', 2.598833643460815e-06], ['EXPORT_FORMAT_V2;', 2.598833643460815e-06], ['string"),', 2.598833643460815e-06], ['(this->match_c_string("prefix', 2.598833643460815e-06], ['this->advance(7);', 2.598833643460815e-06], ['(Gogo::pkgpath_for_symbol(unique_prefix)', 2.598833643460815e-06], ['this->require_c_string("pkgpath', 2.598833643460815e-06], ['Gogo::pkgpath_for_symbol(pkgpath);', 2.598833643460815e-06], ['(stream->saw_error())', 2.598833643460815e-06], ['gogo->add_imported_package(package_name,', 2.598833643460815e-06], ['&this->add_to_globals_);', 2.598833643460815e-06], ['(version()', 2.598833643460815e-06], ['this->require_c_string("priority', 2.598833643460815e-06], ['priority_string', 2.598833643460815e-06], ['(!this->string_to_int(priority_string,', 2.598833643460815e-06], ['&prio))', 2.598833643460815e-06], ['this->require_c_string(";\\n");', 2.598833643460815e-06], ['(stream->match_c_string("package"))', 2.598833643460815e-06], ['this->read_one_package();', 2.598833643460815e-06], ['(stream->match_c_string("import"))', 2.598833643460815e-06], ['this->read_one_import();', 2.598833643460815e-06], ['(stream->match_c_string("indirectimport"))', 2.598833643460815e-06], ['this->read_one_indirect_import();', 2.598833643460815e-06], ['(stream->match_c_string("init"))', 2.598833643460815e-06], ['this->read_import_init_fns(gogo);', 2.598833643460815e-06], ['(stream->match_c_string("types', 2.598833643460815e-06], ['(!this->read_types())', 2.598833643460815e-06], ['(stream->match_c_string("const', 2.598833643460815e-06], ['this->import_const();', 2.598833643460815e-06], ['(stream->match_c_string("type', 2.598833643460815e-06], ['this->import_type();', 2.598833643460815e-06], ['(stream->match_c_string("var', 2.598833643460815e-06], ['this->import_var();', 2.598833643460815e-06], ['(stream->match_c_string("func', 2.598833643460815e-06], ['this->import_func(this->package_);', 2.598833643460815e-06], ['(stream->match_c_string("checksum', 2.598833643460815e-06], ['%<const%>,', 2.598833643460815e-06], ['%<type%>,', 2.598833643460815e-06], ['%<var%>,', 2.598833643460815e-06], ['"%<func%>,', 2.598833643460815e-06], ['%<checksum%>"),', 2.598833643460815e-06], ['this->require_c_string("checksum', 2.598833643460815e-06], ['stream->advance(Export::checksum_len', 2.598833643460815e-06], ['Import::read_one_package()', 2.598833643460815e-06], ['Import::read_one_import()', 2.598833643460815e-06], ['this->require_c_string("import', 2.598833643460815e-06], ['this->require_c_string("\\"");', 2.598833643460815e-06], ['indirectimport', 2.598833643460815e-06], ['Import::read_one_indirect_import()', 2.598833643460815e-06], ['this->require_c_string("indirectimport', 2.598833643460815e-06], ['Import::read_import_init_fns(Gogo*', 2.598833643460815e-06], ['this->require_c_string("init");', 2.598833643460815e-06], ['clause;', 2.598833643460815e-06], ['Older', 2.598833643460815e-06], ['<packname>', 2.598833643460815e-06], ['<fcn>', 2.598833643460815e-06], ['<priority>', 2.598833643460815e-06], ['prio_string', 2.598833643460815e-06], ['(!this->string_to_int(prio_string,', 2.598833643460815e-06], ['&priority))', 2.598833643460815e-06], ['gogo->add_import_init_fn(package_name,', 2.598833643460815e-06], ['priority);', 2.598833643460815e-06], ['init_idx[init_name]', 2.598833643460815e-06], ['(this->match_c_string("init_graph"))', 2.598833643460815e-06], ['this->require_c_string("init_graph");', 2.598833643460815e-06], ['go_assert(init_idx.size()', 2.598833643460815e-06], ['std::vector<Import_init*>', 2.598833643460815e-06], ['import_initvec;', 2.598833643460815e-06], ['import_initvec.resize(init_idx.size());', 2.598833643460815e-06], ['init_idx.begin();', 2.598833643460815e-06], ['init_idx.end();', 2.598833643460815e-06], ['gogo->lookup_init(init_name);', 2.598833643460815e-06], ['import_initvec[it->second]', 2.598833643460815e-06], ['<src1>', 2.598833643460815e-06], ['<sink1>', 2.598833643460815e-06], ['<src2>', 2.598833643460815e-06], ['<sink2>', 2.598833643460815e-06], ['indices.', 2.598833643460815e-06], ['src_string', 2.598833643460815e-06], ['(!this->string_to_unsigned(src_string,', 2.598833643460815e-06], ['&src))', 2.598833643460815e-06], ['sink_string', 2.598833643460815e-06], ['sink;', 2.598833643460815e-06], ['(!this->string_to_unsigned(sink_string,', 2.598833643460815e-06], ['&sink))', 2.598833643460815e-06], ['go_assert(src', 2.598833643460815e-06], ['ii_src', 2.598833643460815e-06], ['import_initvec[src];', 2.598833643460815e-06], ['go_assert(sink', 2.598833643460815e-06], ['ii_sink', 2.598833643460815e-06], ['import_initvec[sink];', 2.598833643460815e-06], ['ii_src->record_precursor_fcn(ii_sink->init_name());', 2.598833643460815e-06], ['listed', 2.598833643460815e-06], ['Import::read_types()', 2.598833643460815e-06], ['this->require_c_string("types', 2.598833643460815e-06], ['&maxp1))', 2.598833643460815e-06], ['&exportedp1))', 2.598833643460815e-06], ['this->type_offsets_.resize(maxp1,', 2.598833643460815e-06], ['std::make_pair<size_t,', 2.598833643460815e-06], ['size_t>(0,', 2.598833643460815e-06], ['&v))', 2.598833643460815e-06], ['static_cast<size_t>(v);', 2.598833643460815e-06], ['this->type_offsets_[i]', 2.598833643460815e-06], ['std::make_pair(total_type_size,', 2.598833643460815e-06], ['vs);', 2.598833643460815e-06], ['vs;', 2.598833643460815e-06], ['unpredictable', 2.598833643460815e-06], ['type_offsets_', 2.598833643460815e-06], ['this->type_pos_', 2.598833643460815e-06], ['this->stream_->pos();', 2.598833643460815e-06], ['(!this->stream_->peek(total_type_size,', 2.598833643460815e-06], ['&type_data))', 2.598833643460815e-06], ['this->type_data_', 2.598833643460815e-06], ['std::string(type_data,', 2.598833643460815e-06], ['total_type_size);', 2.598833643460815e-06], ['this->advance(total_type_size);', 2.598833643460815e-06], ['this->types_.resize(maxp1,', 2.598833643460815e-06], ['lazily.', 2.598833643460815e-06], ['(!this->parse_type(i))', 2.598833643460815e-06], ['nt->set_is_visible();', 2.598833643460815e-06], ['this->gogo_->add_named_type(nt);', 2.598833643460815e-06], ['Import::import_const()', 2.598833643460815e-06], ['Named_constant::import_const(this,', 2.598833643460815e-06], ['&type,', 2.598833643460815e-06], ['&expr);', 2.598833643460815e-06], ['tid(name,', 2.598833643460815e-06], ['this->package_->add_constant(tid,', 2.598833643460815e-06], ['Import::import_type()', 2.598833643460815e-06], ['syntax",', 2.598833643460815e-06], ['Named_type::import_named_type(this,', 2.598833643460815e-06], ['process.', 2.598833643460815e-06], ['type->set_is_visible();', 2.598833643460815e-06], ['this->gogo_->add_named_type(type);', 2.598833643460815e-06], ['Import::import_var()', 2.598833643460815e-06], ['Variable::import_var(this,', 2.598833643460815e-06], ['this->package_->add_variable(name,', 2.598833643460815e-06], ['PACKAGE.', 2.598833643460815e-06], ['THIS->PACKAGE_,', 2.598833643460815e-06], ['Import::import_func(Package*', 2.598833643460815e-06], ['is_varargs;', 2.598833643460815e-06], ['nointerface;', 2.598833643460815e-06], ['Function::import_func(this,', 2.598833643460815e-06], ['&receiver,', 2.598833643460815e-06], ['&parameters,', 2.598833643460815e-06], ['&results,', 2.598833643460815e-06], ['&is_varargs,', 2.598833643460815e-06], ['&nointerface,', 2.598833643460815e-06], ['receiver->type();', 2.598833643460815e-06], ['RTYPE,', 2.598833643460815e-06], ['convert.', 2.598833643460815e-06], ['rtype->forward_declaration_type()->add_method_declaration(name,', 2.598833643460815e-06], ['package->add_function_declaration(name,', 2.598833643460815e-06], ['no->func_declaration_value()->set_nointerface();', 2.598833643460815e-06], ['(!body.empty()', 2.598833643460815e-06], ['!no->func_declaration_value()->has_imported_body())', 2.598833643460815e-06], ['no->func_declaration_value()->set_imported_body(this,', 2.598833643460815e-06], ['this->types_.', 2.598833643460815e-06], ['parses', 2.598833643460815e-06], ['read_types', 2.598833643460815e-06], ['Import::parse_type(int', 2.598833643460815e-06], ['static_cast<size_t>(i)', 2.598833643460815e-06], ['this->types_.size());', 2.598833643460815e-06], ['go_assert(this->types_[i]', 2.598833643460815e-06], ['this->type_offsets_[i].first;', 2.598833643460815e-06], ['this->type_offsets_[i].second;', 2.598833643460815e-06], ['Stream_from_string_ref', 2.598833643460815e-06], ['stream(this->type_data_,', 2.598833643460815e-06], ['stream.set_pos(this->type_pos_', 2.598833643460815e-06], ['&stream;', 2.598833643460815e-06], ['this->require_c_string("type', 2.598833643460815e-06], ['&id))', 2.598833643460815e-06], ['mismatch:', 2.598833643460815e-06], ['%d"),', 2.598833643460815e-06], ['stream.pos(),', 2.598833643460815e-06], ['(stream.peek_char()', 2.598833643460815e-06], ['stream.advance(1);', 2.598833643460815e-06], ['this->read_named_type(i);', 2.598833643460815e-06], ['this->types_[i]', 2.598833643460815e-06], ['formats),', 2.598833643460815e-06], ['marks', 2.598833643460815e-06], ['Import::read_type()', 2.598833643460815e-06], ['number;', 2.598833643460815e-06], ['(!this->string_to_int(number,', 2.598833643460815e-06], ['this->type_for_index(index,', 2.598833643460815e-06], ['%<>%>",', 2.598833643460815e-06], ['%<>%>\'",', 2.598833643460815e-06], ['this->types_.size())', 2.598833643460815e-06], ['newsize', 2.598833643460815e-06], ['std::max(static_cast<size_t>(index)', 2.598833643460815e-06], ['this->types_.resize(newsize,', 2.598833643460815e-06], ['this->read_named_type(index);', 2.598833643460815e-06], ['this->types_[index].', 2.598833643460815e-06], ['positioned', 2.598833643460815e-06], ['Import::read_named_type(int', 2.598833643460815e-06], ['type_name;', 2.598833643460815e-06], ['type_name', 2.598833643460815e-06], ['importing,', 2.598833643460815e-06], ['.PKGPATH.NAME', 2.598833643460815e-06], ['non-hidden', 2.598833643460815e-06], ['PKGPATH.NAME', 2.598833643460815e-06], ['.PKGPATH.NAME.', 2.598833643460815e-06], ["(type_name.find('.')", 2.598833643460815e-06], ["type_name.rfind('.');", 2.598833643460815e-06], ['type_name.substr(start,', 2.598833643460815e-06], ['type_name.erase(0,', 2.598833643460815e-06], ['different.', 2.598833643460815e-06], ['(this->match_c_string("=', 2.598833643460815e-06], ['stream->advance(2);', 2.598833643460815e-06], ['(pkgpath.empty()', 2.598833643460815e-06], ['this->gogo_->pkgpath())', 2.598833643460815e-06], ['(!package_name.empty())', 2.598833643460815e-06], ['package->set_package_name(package_name,', 2.598833643460815e-06], ['package->bindings()->lookup(type_name);', 2.598833643460815e-06], ['package->add_type_declaration(type_name,', 2.598833643460815e-06], ['(!no->is_type_declaration()', 2.598833643460815e-06], ['!no->is_type())', 2.598833643460815e-06], ['%<%s.%s%>', 2.598833643460815e-06], ['non-type",', 2.598833643460815e-06], ['pkgpath.c_str(),', 2.598833643460815e-06], ['Gogo::message_name(type_name).c_str());', 2.598833643460815e-06], ['silly', 2.598833643460815e-06], ['(this->match_c_string(">")', 2.598833643460815e-06], ['this->match_c_string("\\n"))', 2.598833643460815e-06], ['this->read_type();', 2.598833643460815e-06], ['package->add_type(type_name,', 2.598833643460815e-06], ['ntype->clear_is_visible();', 2.598833643460815e-06], ['ntype->set_is_alias();', 2.598833643460815e-06], ['(!type->is_undefined()', 2.598833643460815e-06], ['this->gogo_->record_interface_type(type->interface_type());', 2.598833643460815e-06], ['ntype;', 2.598833643460815e-06], ['identical,', 2.598833643460815e-06], ['(this->match_c_string("\\n"))', 2.598833643460815e-06], ['func"))', 2.598833643460815e-06], ['this->import_func(package);', 2.598833643460815e-06], ['*PARSED', 2.598833643460815e-06], ['Import::type_for_index(int', 2.598833643460815e-06], ['input_name,', 2.598833643460815e-06], ['input_offset,', 2.598833643460815e-06], ['parsed)', 2.598833643460815e-06], ['!this->type_data_.empty())', 2.598833643460815e-06], ['this->type_offsets_.size())', 2.598833643460815e-06], ['static_cast<int>(this->type_offsets_.size()));', 2.598833643460815e-06], ['(!this->parse_type(index))', 2.598833643460815e-06], ['(static_cast<size_t>(-', 2.598833643460815e-06], ['this->builtin_types_.size()', 2.598833643460815e-06], ['Import::read_escape()', 2.598833643460815e-06], ['<esc:"))', 2.598833643460815e-06], ['<esc:");', 2.598833643460815e-06], ['"esc:";', 2.598833643460815e-06], ['!ISXDIGIT(c))', 2.598833643460815e-06], ['"expect', 2.598833643460815e-06], ['%<>%>,', 2.598833643460815e-06], ['%c"),', 2.598833643460815e-06], ['Import::register_builtin_types(Gogo*', 2.598833643460815e-06], ['Import::register_builtin_type(Gogo*', 2.598833643460815e-06], ['static_cast<int>(code);', 2.598833643460815e-06], ['static_cast<size_t>(index)', 2.598833643460815e-06], ['this->builtin_types_.size());', 2.598833643460815e-06], ['this->builtin_types_[index]', 2.598833643460815e-06], ['Import::read_identifier()', 2.598833643460815e-06], ['stream->peek_char();', 2.598833643460815e-06], ['Import::read_name()', 2.598833643460815e-06], ['ret.clear();', 2.598833643460815e-06], ['Import::read(size_t', 2.598833643460815e-06], ['data;', 2.598833643460815e-06], ['(!this->stream_->peek(length,', 2.598833643460815e-06], ['&data))', 2.598833643460815e-06], ['bytes",', 2.598833643460815e-06], ['this->stream_->pos(),', 2.598833643460815e-06], ['static_cast<int>(length));', 2.598833643460815e-06], ['std::string(data,', 2.598833643460815e-06], ['Import::string_to_int(const', 2.598833643460815e-06], ['is_neg_ok,', 2.598833643460815e-06], ['strtol(s.c_str(),', 2.598833643460815e-06], ['0x7fffffff', 2.598833643460815e-06], ['(prio', 2.598833643460815e-06], ['!is_neg_ok))', 2.598833643460815e-06], ['Import::Stream.', 2.598833643460815e-06], ['Import::Stream::Stream()', 2.598833643460815e-06], ['pos_(0),', 2.598833643460815e-06], ['saw_error_(false)', 2.598833643460815e-06], ['Import::Stream::~Stream()', 2.598833643460815e-06], ['Import::Stream::peek_char()', 2.598833643460815e-06], ['(!this->do_peek(1,', 2.598833643460815e-06], ['\\xff.', 2.598833643460815e-06], ['*read;', 2.598833643460815e-06], ['BYTES', 2.598833643460815e-06], ['Import::Stream::match_bytes(const', 2.598833643460815e-06], ['BYTES.', 2.598833643460815e-06], ['Import::Stream::require_bytes(Location', 2.598833643460815e-06], ['&read)', 2.598833643460815e-06], ['%<%.*s%>",', 2.598833643460815e-06], ['this->pos(),', 2.598833643460815e-06], ['static_cast<int>(length),', 2.598833643460815e-06], ['Stream_from_file.', 2.598833643460815e-06], ['Stream_from_file::Stream_from_file(int', 2.598833643460815e-06], ['fd)', 2.598833643460815e-06], ['data_()', 2.598833643460815e-06], ['Stream_from_file::~Stream_from_file()', 2.598833643460815e-06], ['close(this->fd_);', 2.598833643460815e-06], ['Stream_from_file::do_peek(size_t', 2.598833643460815e-06], ['this->data_.resize(length);', 2.598833643460815e-06], ['&this->data_[0],', 2.598833643460815e-06], ['"read', 2.598833643460815e-06], ['got,', 2.598833643460815e-06], ['(static_cast<size_t>(got)', 2.598833643460815e-06], ['Stream_from_file::do_advance(size_t', 2.598833643460815e-06], ['(!this->data_.empty())', 2.598833643460815e-06], ['this->data_.erase(0,', 2.598833643460815e-06], ['this->data_.clear();', 2.598833643460815e-06], ['Import_function_body::name()', 2.598833643460815e-06], ['STR,', 2.598833643460815e-06], ['issuing', 2.598833643460815e-06], ['Import_function_body::require_c_string(const', 2.598833643460815e-06], ['(!this->match_c_string(str))', 2.598833643460815e-06], ['long>(this->off_));', 2.598833643460815e-06], ['this->advance(strlen(str));', 2.598833643460815e-06], ['Import_function_body::read_identifier()', 2.598833643460815e-06], ['this->body_.substr(start,', 2.598833643460815e-06], ['this->body_.substr(start);', 2.598833643460815e-06], ['Import_function_body::read_type()', 2.598833643460815e-06], ['*end;', 2.598833643460815e-06], ['strtol(this->body_.substr(start,', 2.598833643460815e-06], ['start).c_str(),', 2.598833643460815e-06], ['long>(start));', 2.598833643460815e-06], ['%<>%>', 2.598833643460815e-06], ['long>(i));', 2.598833643460815e-06], ['this->imp_->type_for_index(static_cast<int>(val),', 2.598833643460815e-06], ['this->name(),', 2.598833643460815e-06], ['long>(start),', 2.598833643460815e-06], ['(parsed)', 2.598833643460815e-06], ['this->gogo_->finalize_methods_for_type(type);', 2.598833643460815e-06], ['near-matches', 2.598833643460815e-06], ['macros.', 2.598833643460815e-06], ['"cpplib.h"', 2.598833643460815e-06], ['"spellcheck-tree.h"', 2.598833643460815e-06], ['"c-family/c-spellcheck.h"', 2.598833643460815e-06], ['thus,', 2.598833643460815e-06], ['(str[0]', 2.598833643460815e-06], ["'_')", 2.598833643460815e-06], ['(str[1]', 2.598833643460815e-06], ['ISUPPER(str[1]));', 2.598833643460815e-06], ['suggestion', 2.598833643460815e-06], ['misspelling.', 2.598833643460815e-06], ['should_suggest_as_macro_p', 2.598833643460815e-06], ['(cpp_hashnode', 2.598833643460815e-06], ['*hashnode)', 2.598833643460815e-06], ['(!cpp_macro_p', 2.598833643460815e-06], ['implementation,', 2.598833643460815e-06], ['__FILE__,', 2.598833643460815e-06], ['__LINE__', 2.598833643460815e-06], ['(cpp_user_macro_p', 2.598833643460815e-06], ['(hashnode)', 2.598833643460815e-06], ['*)hashnode->ident.str))', 2.598833643460815e-06], ['callback', 2.598833643460815e-06], ['cpp_forall_identifiers,', 2.598833643460815e-06], ["best_macro_match's", 2.598833643460815e-06], ['USER_DATA.', 2.598833643460815e-06], ['(cpp_reader', 2.598833643460815e-06], ['cpp_hashnode', 2.598833643460815e-06], ['*hashnode,', 2.598833643460815e-06], ['*user_data)', 2.598833643460815e-06], ['(!should_suggest_as_macro_p', 2.598833643460815e-06], ['*bmm', 2.598833643460815e-06], ['(best_macro_match', 2.598833643460815e-06], ['*)user_data;', 2.598833643460815e-06], ['bmm->consider', 2.598833643460815e-06], ['(hashnode);', 2.598833643460815e-06], ['iterating.', 2.598833643460815e-06], ['Constructor', 2.598833643460815e-06], ['best_macro_match.', 2.598833643460815e-06], ['distance', 2.598833643460815e-06], ['best_distance_so_far.', 2.598833643460815e-06], ['best_macro_match::best_macro_match', 2.598833643460815e-06], ['edit_distance_t', 2.598833643460815e-06], ['best_distance_so_far,', 2.598833643460815e-06], ['cpp_reader', 2.598833643460815e-06], ['*reader)', 2.598833643460815e-06], ['best_match', 2.598833643460815e-06], ['<goal_t,', 2.598833643460815e-06], ['candidate_t>', 2.598833643460815e-06], ['(goal,', 2.598833643460815e-06], ['best_distance_so_far)', 2.598833643460815e-06], ['cpp_forall_identifiers', 2.598833643460815e-06], ['(reader,', 2.598833643460815e-06], ['find_closest_macro_cpp_cb,', 2.598833643460815e-06], ['(""));', 2.598833643460815e-06], ['("_"));', 2.598833643460815e-06], ['("_foo"));', 2.598833643460815e-06], ['("_42"));', 2.598833643460815e-06], ['("_Foo"));', 2.598833643460815e-06], ['("__"));', 2.598833643460815e-06], ['("__foo"));', 2.598833643460815e-06], ['c_spellcheck_cc_tests', 2.598833643460815e-06], ['go-gcc-diagnostics.cc', 2.598833643460815e-06], ['Than', 2.598833643460815e-06], ['McIntosh,', 2.598833643460815e-06], ['go_be_error_at(const', 2.598833643460815e-06], ['errmsg)', 2.598833643460815e-06], ['error_at(gcc_loc,', 2.598833643460815e-06], ['errmsg.c_str());', 2.598833643460815e-06], ['go_be_warning_at(const', 2.598833643460815e-06], ['warningmsg)', 2.598833643460815e-06], ['warning_at(gcc_loc,', 2.598833643460815e-06], ['warningmsg.c_str());', 2.598833643460815e-06], ['go_be_fatal_error(const', 2.598833643460815e-06], ['fatalmsg)', 2.598833643460815e-06], ['fatal_error(gcc_loc,', 2.598833643460815e-06], ['fatalmsg.c_str());', 2.598833643460815e-06], ['go_be_inform(const', 2.598833643460815e-06], ['infomsg)', 2.598833643460815e-06], ['inform(gcc_loc,', 2.598833643460815e-06], ['infomsg.c_str());', 2.598833643460815e-06], ['go_be_get_quotechars(const', 2.598833643460815e-06], ['open_qu,', 2.598833643460815e-06], ['close_qu)', 2.598833643460815e-06], ['*open_qu', 2.598833643460815e-06], ['open_quote;', 2.598833643460815e-06], ['*close_qu', 2.598833643460815e-06], ['close_quote;', 2.598833643460815e-06], ['Derivation', 2.598833643460815e-06], ['subsumption', 2.598833643460815e-06], ['algorithms', 2.598833643460815e-06], ['I>', 2.598833643460815e-06], ['I,', 2.598833643460815e-06], ['P>', 2.598833643460815e-06], ['pred)', 2.598833643460815e-06], ['last)', 2.598833643460815e-06], ['(pred(*first))', 2.598833643460815e-06], ['++first;', 2.598833643460815e-06], ['Hashing', 2.598833643460815e-06], ['term_hasher', 2.598833643460815e-06], ['ggc_ptr_hash<term_entry>', 2.598833643460815e-06], ['(e->t,', 2.598833643460815e-06], ['(e1->t,', 2.598833643460815e-06], ['e2->t);', 2.598833643460815e-06], ['maintains', 2.598833643460815e-06], ['stateful', 2.598833643460815e-06], ['std::list<tree>::iterator', 2.598833643460815e-06], ['(iterator);', 2.598833643460815e-06], ['seq.begin();', 2.598833643460815e-06], ['seq.end();', 2.598833643460815e-06], ['std::list<tree>', 2.598833643460815e-06], ['hash_table<term_hasher>', 2.598833643460815e-06], ['tab;', 2.598833643460815e-06], ['seq(),', 2.598833643460815e-06], ['term_list::includes', 2.598833643460815e-06], ['tab.find', 2.598833643460815e-06], ['term_list::push_back', 2.598833643460815e-06], ['(end(),', 2.598833643460815e-06], ['(unseen)', 2.598833643460815e-06], ['ITER.', 2.598833643460815e-06], ['term_list::insert', 2.598833643460815e-06], ['seq.insert', 2.598833643460815e-06], ['term_entry**', 2.598833643460815e-06], ['tab.find_slot', 2.598833643460815e-06], ['(&ent,', 2.598833643460815e-06], ['term_entry*', 2.598833643460815e-06], ['ggc_alloc<term_entry>', 2.598833643460815e-06], ['ent;', 2.598833643460815e-06], ['end().', 2.598833643460815e-06], ['term_list::erase', 2.598833643460815e-06], ['(includes', 2.598833643460815e-06], ['{*iter};', 2.598833643460815e-06], ['tab.remove_elt', 2.598833643460815e-06], ['seq.erase', 2.598833643460815e-06], ['t2.', 2.598833643460815e-06], ['subgoal)', 2.598833643460815e-06], ['sequent', 2.598833643460815e-06], ["'A", 2.598833643460815e-06], ['|-', 2.598833643460815e-06], ["C'", 2.598833643460815e-06], ['propositions', 2.598833643460815e-06], ['(i.e.,', 2.598833643460815e-06], ['trees).', 2.598833643460815e-06], ['proof_goal', 2.598833643460815e-06], ['assumptions;', 2.598833643460815e-06], ['conclusions;', 2.598833643460815e-06], ['owns', 2.598833643460815e-06], ['sub-goal.', 2.598833643460815e-06], ['subgoals', 2.598833643460815e-06], ['discharge', 2.598833643460815e-06], ['proof_state::proof_state', 2.598833643460815e-06], ['Branch', 2.598833643460815e-06], ['proof_state::branch', 2.598833643460815e-06], ['*i;', 2.598833643460815e-06], ['(++i,', 2.598833643460815e-06], ['Discharge', 2.598833643460815e-06], ['non-satisfied', 2.598833643460815e-06], ['proof_state::discharge', 2.598833643460815e-06], ['Debugging', 2.598833643460815e-06], ['ts)', 2.598833643460815e-06], ['%E",', 2.598833643460815e-06], ['(g.assumptions);', 2.598833643460815e-06], ['|-");', 2.598833643460815e-06], ['(g.conclusions);', 2.598833643460815e-06], ['Atomicity', 2.598833643460815e-06], ['non_atomic_constraint_p', 2.598833643460815e-06], ['atomic,', 2.598833643460815e-06], ['decompose', 2.598833643460815e-06], ['atom,', 2.598833643460815e-06], ['any_non_atomic_constraints_p', 2.598833643460815e-06], ['(t.begin(),', 2.598833643460815e-06], ['t.end(),', 2.598833643460815e-06], ['non_atomic_constraint_p);', 2.598833643460815e-06], ['validations', 2.598833643460815e-06], ['undecided', 2.598833643460815e-06], ['(term_list&,', 2.598833643460815e-06], ['Hook', 2.598833643460815e-06], ['(non_atomic_constraint_p', 2.598833643460815e-06], ['(any_non_atomic_constraints_p', 2.598833643460815e-06], ['(ts))', 2.598833643460815e-06], ['(prove_implication', 2.598833643460815e-06], ['(*i)', 2.598833643460815e-06], ['(bool*', 2.598833643460815e-06], ['lookup_subsumption_result', 2.598833643460815e-06], ['proving', 2.598833643460815e-06], ['Encountering', 2.598833643460815e-06], ['anywhere', 2.598833643460815e-06], ['invalidates', 2.598833643460815e-06], ['proof,', 2.598833643460815e-06], ['non-atomic', 2.598833643460815e-06], ['not-atomic.', 2.598833643460815e-06], ['(ts.includes', 2.598833643460815e-06], ['means.', 2.598833643460815e-06], ['undecided,', 2.598833643460815e-06], ['g.conclusions.begin', 2.598833643460815e-06], ['g.conclusions.end', 2.598833643460815e-06], ['*iter);', 2.598833643460815e-06], ['Was', 2.598833643460815e-06], ['complete?', 2.598833643460815e-06], ['(incomplete)', 2.598833643460815e-06], ['discharged.', 2.598833643460815e-06], ['invalid)', 2.598833643460815e-06], ['p.discharge', 2.598833643460815e-06], ['discharged,', 2.598833643460815e-06], ['(p.empty())', 2.598833643460815e-06], ['PARM_CONSTR_OPERAND(*i));', 2.598833643460815e-06], ['left-logical', 2.598833643460815e-06], ['g.assumptions.begin();', 2.598833643460815e-06], ['g.assumptions.end();', 2.598833643460815e-06], ['(*iter))', 2.598833643460815e-06], ['load_assumptions(proof_state&', 2.598833643460815e-06], ['ti1)', 2.598833643460815e-06], ['Erase', 2.598833643460815e-06], ['g1', 2.598833643460815e-06], ['*gi;', 2.598833643460815e-06], ['g2', 2.598833643460815e-06], ['*p.branch', 2.598833643460815e-06], ['(gi);', 2.598833643460815e-06], ['th', 2.598833643460815e-06], ['std::distance', 2.598833643460815e-06], ['(g1.assumptions.begin', 2.598833643460815e-06], ['ti1);', 2.598833643460815e-06], ['ti2', 2.598833643460815e-06], ['g2.assumptions.begin', 2.598833643460815e-06], ['std::advance', 2.598833643460815e-06], ['branches.', 2.598833643460815e-06], ['g1.assumptions.replace', 2.598833643460815e-06], ['(ti1,', 2.598833643460815e-06], ['g2.assumptions.replace', 2.598833643460815e-06], ['explode_goal', 2.598833643460815e-06], ['gi)', 2.598833643460815e-06], ['term_list&', 2.598833643460815e-06], ['gi->assumptions;', 2.598833643460815e-06], ['(*ti)', 2.598833643460815e-06], ['++ti;', 2.598833643460815e-06], ['disjunction,', 2.598833643460815e-06], ['(explode_goal', 2.598833643460815e-06], ['iter))', 2.598833643460815e-06], ['g,', 2.598833643460815e-06], ['g.replace(i,', 2.598833643460815e-06], ['conclusion', 2.598833643460815e-06], ['tpp-level', 2.598833643460815e-06], ['g.conclusions.begin();', 2.598833643460815e-06], ['g.conclusions.end();', 2.598833643460815e-06], ['(g.conclusions,', 2.598833643460815e-06], ['High-level', 2.598833643460815e-06], ['accept.', 2.598833643460815e-06], ['(cp_tree_equal', 2.598833643460815e-06], ['c))', 2.598833643460815e-06], ['proof;', 2.598833643460815e-06], ['proof.front();', 2.598833643460815e-06], ['goal.assumptions.push_back(a);', 2.598833643460815e-06], ['goal.conclusions.push_back(c);', 2.598833643460815e-06], ['right-expansion', 2.598833643460815e-06], ['off-chance', 2.598833643460815e-06], ['step_count', 2.598833643460815e-06], ['std::size_t', 2.598833643460815e-06], ['branch_limit', 2.598833643460815e-06], ['configurable.', 2.598833643460815e-06], ['proof.size()', 2.598833643460815e-06], ['entail', 2.598833643460815e-06], ['solve', 2.598833643460815e-06], ['++step_count;', 2.598833643460815e-06], ['step_max)', 2.598833643460815e-06], ['("subsumption', 2.598833643460815e-06], ['resolve");', 2.598833643460815e-06], ['(proof.size()', 2.598833643460815e-06], ['("exceeded', 2.598833643460815e-06], ['branches");', 2.598833643460815e-06], ['deriving', 2.598833643460815e-06], ['(left));', 2.598833643460815e-06], ['(right));', 2.598833643460815e-06], ['(TV_CONSTRAINT_SUB);', 2.598833643460815e-06], ['(left);', 2.598833643460815e-06], ['(right);', 2.598833643460815e-06], ['(left', 2.598833643460815e-06], ['(!left)', 2.598833643460815e-06], ['(!right)', 2.598833643460815e-06], ['(left,', 2.598833643460815e-06], ['brig-fbarrier-handler.cc', 2.598833643460815e-06], ['fbarrier', 2.598833643460815e-06], ['fbarrier.', 2.598833643460815e-06], ['FBARRIER_STRUCT_SIZE', 2.598833643460815e-06], ['brig_directive_fbarrier_handler::operator', 2.598833643460815e-06], ['fbarriers', 2.598833643460815e-06], ['BrigDirectiveFbarrier*)base;', 2.598833643460815e-06], ['FBARRIER_STRUCT_SIZE,', 2.598833643460815e-06], ['go-linemap.cc', 2.598833643460815e-06], ['Linemap.', 2.598833643460815e-06], ['Gcc_linemap', 2.598833643460815e-06], ['Gcc_linemap()', 2.598833643460815e-06], ['Linemap(),', 2.598833643460815e-06], ['in_file_(false)', 2.598833643460815e-06], ['start_file(const', 2.598833643460815e-06], ['start_line(unsigned', 2.598833643460815e-06], ['line_number,', 2.598833643460815e-06], ['line_size);', 2.598833643460815e-06], ['get_location(unsigned', 2.598833643460815e-06], ['column);', 2.598833643460815e-06], ['stop();', 2.598833643460815e-06], ['to_string(Location);', 2.598833643460815e-06], ['location_file(Location);', 2.598833643460815e-06], ['location_line(Location);', 2.598833643460815e-06], ['get_predeclared_location();', 2.598833643460815e-06], ['get_unknown_location();', 2.598833643460815e-06], ['is_predeclared(Location);', 2.598833643460815e-06], ['is_unknown(Location);', 2.598833643460815e-06], ['in_file_;', 2.598833643460815e-06], ['Linemap::instance_', 2.598833643460815e-06], ['Gcc_linemap::start_file(const', 2.598833643460815e-06], ['*file_name,', 2.598833643460815e-06], ['line_begin)', 2.598833643460815e-06], ['(this->in_file_)', 2.598833643460815e-06], ['Stringify', 2.598833643460815e-06], ['Gcc_linemap::to_string(Location', 2.598833643460815e-06], ['*lmo;', 2.598833643460815e-06], ['resolved_location;', 2.598833643460815e-06], ['Screen', 2.598833643460815e-06], ['locations;', 2.598833643460815e-06], ['file:line', 2.598833643460815e-06], ['linemap_resolve_location', 2.598833643460815e-06], ['location.gcc_location(),', 2.598833643460815e-06], ['LRK_SPELLING_LOCATION,', 2.598833643460815e-06], ['&lmo);', 2.598833643460815e-06], ['(lmo', 2.598833643460815e-06], ['RESERVED_LOCATION_COUNT)', 2.598833643460815e-06], ['LINEMAP_FILE', 2.598833643460815e-06], ['(lmo);', 2.598833643460815e-06], ['(!path)', 2.598833643460815e-06], ['clutter.', 2.598833643460815e-06], ['lbasename(path)', 2.598833643460815e-06], ['SOURCE_LINE', 2.598833643460815e-06], ['(lmo,', 2.598833643460815e-06], ['location.gcc_location());', 2.598833643460815e-06], ['Gcc_linemap::location_file(Location', 2.598833643460815e-06], ['LOCATION_FILE(loc.gcc_location());', 2.598833643460815e-06], ['Gcc_linemap::location_line(Location', 2.598833643460815e-06], ['LOCATION_LINE(loc.gcc_location());', 2.598833643460815e-06], ['Gcc_linemap::stop()', 2.598833643460815e-06], ['Gcc_linemap::start_line(unsigned', 2.598833643460815e-06], ['linesize)', 2.598833643460815e-06], ['linemap_line_start(line_table,', 2.598833643460815e-06], ['linesize);', 2.598833643460815e-06], ['Gcc_linemap::get_location(unsigned', 2.598833643460815e-06], ['column)', 2.598833643460815e-06], ['Location(linemap_position_for_column(line_table,', 2.598833643460815e-06], ['column));', 2.598833643460815e-06], ['Gcc_linemap::get_unknown_location()', 2.598833643460815e-06], ['Location(UNKNOWN_LOCATION);', 2.598833643460815e-06], ['Gcc_linemap::get_predeclared_location()', 2.598833643460815e-06], ['Location(BUILTINS_LOCATION);', 2.598833643460815e-06], ['Gcc_linemap::is_predeclared(Location', 2.598833643460815e-06], ['BUILTINS_LOCATION;', 2.598833643460815e-06], ['Gcc_linemap::is_unknown(Location', 2.598833643460815e-06], ['UNKNOWN_LOCATION;', 2.598833643460815e-06], ['go_get_linemap()', 2.598833643460815e-06], ['Gcc_linemap;', 2.598833643460815e-06], ['Digital', 2.598833643460815e-06], ['Mars', 2.598833643460815e-06], ['https://github.com/dlang/dmd/.', 2.598833643460815e-06], ['Programming', 2.598833643460815e-06], ['documents', 2.598833643460815e-06], ['https://dlang.org/.', 2.598833643460815e-06], ['please', 2.598833643460815e-06], ['https://issues.dlang.org/.', 2.598833643460815e-06], ['repository', 2.598833643460815e-06], ['Cause', 2.598833643460815e-06], ['gcc/Makefile.in', 2.598833643460815e-06], ['(DRIVER_DEFINES).', 2.598833643460815e-06], ['SHLIB', 2.598833643460815e-06], ['expr.cc', 2.598833643460815e-06], ['E,', 2.598833643460815e-06], ['RESULT_', 2.598833643460815e-06], ['constp_;', 2.598833643460815e-06], ['needs_postblit', 2.598833643460815e-06], ['(sd->postblit)', 2.598833643460815e-06], ['needs_dtor', 2.598833643460815e-06], ['((e->op', 2.598833643460815e-06], ['e->isLvalue', 2.598833643460815e-06], ['TOKcast', 2.598833643460815e-06], ['ARG1.', 2.598833643460815e-06], ['FLOAT_MOD_EXPR)', 2.598833643460815e-06], ['arg0));', 2.598833643460815e-06], ['MINUS_EXPR);', 2.598833643460815e-06], ['POINTER_DIFF_EXPR', 2.598833643460815e-06], ['ptrdiff_type', 2.598833643460815e-06], ['computations', 2.598833643460815e-06], ['(ptrtype)', 2.598833643460815e-06], ['(POINTER_DIFF_EXPR,', 2.598833643460815e-06], ['unsignedp))', 2.598833643460815e-06], ['(unsignedp)', 2.598833643460815e-06], ['inttype,', 2.598833643460815e-06], ['(t1)', 2.598833643460815e-06], ['binop_assignment', 2.598833643460815e-06], ['Stabilize', 2.598833643460815e-06], ['lhs);', 2.598833643460815e-06], ['RHS,', 2.598833643460815e-06], ['(e2);', 2.598833643460815e-06], ['rexpr', 2.598833643460815e-06], ['(e1->type),', 2.598833643460815e-06], ['e1->type),', 2.598833643460815e-06], ['rexpr);', 2.598833643460815e-06], ['(rexpr,', 2.598833643460815e-06], ['e1->type,', 2.598833643460815e-06], ['e1b->type));', 2.598833643460815e-06], ['constp;', 2.598833643460815e-06], ['(CondExp', 2.598833643460815e-06], ['(e->econd),', 2.598833643460815e-06], ['e->econd->type);', 2.598833643460815e-06], ['(IdentityExp', 2.598833643460815e-06], ['TOKidentity)', 2.598833643460815e-06], ['(tb1->isfloating', 2.598833643460815e-06], ['(!tb1->iscomplex', 2.598833643460815e-06], ['Alignment', 2.598833643460815e-06], ['inequality.', 2.598833643460815e-06], ['(EqualExp', 2.598833643460815e-06], ['matching,', 2.598833643460815e-06], ['*t1elem', 2.598833643460815e-06], ['*t2elem', 2.598833643460815e-06], ['((t1elem->isintegral', 2.598833643460815e-06], ['Tvoid', 2.598833643460815e-06], ['!((TypeStruct', 2.598833643460815e-06], ['*)t1elem)->sym->xeq))', 2.598833643460815e-06], ['t2elem->ty)', 2.598833643460815e-06], ['t1saved', 2.598833643460815e-06], ['t2saved', 2.598833643460815e-06], ['t1len', 2.598833643460815e-06], ['t2len', 2.598833643460815e-06], ['Reference', 2.598833643460815e-06], ['t1ptr', 2.598833643460815e-06], ['t2ptr', 2.598833643460815e-06], ['structs,', 2.598833643460815e-06], ['(((TypeStruct', 2.598833643460815e-06], ['t1elem)->sym))', 2.598833643460815e-06], ['(t1len,', 2.598833643460815e-06], ['(t1elem->size', 2.598833643460815e-06], ['t2ptr,', 2.598833643460815e-06], ['t1elem)->sym;', 2.598833643460815e-06], ['t2ptr);', 2.598833643460815e-06], ['inequality:', 2.598833643460815e-06], ['tsizecmp', 2.598833643460815e-06], ['size_zero_node);', 2.598833643460815e-06], ['Finally,', 2.598833643460815e-06], ['dynamic.', 2.598833643460815e-06], ['(tb1->size', 2.598833643460815e-06], ['tb2->size', 2.598833643460815e-06], ['tlencmp', 2.598833643460815e-06], ['t2len);', 2.598833643460815e-06], ['left-to-right', 2.598833643460815e-06], ['(t2saved,', 2.598833643460815e-06], ['(t1saved,', 2.598833643460815e-06], ['_adEq2()', 2.598833643460815e-06], ['*t1array', 2.598833643460815e-06], ['t1elem->arrayOf', 2.598833643460815e-06], ['(LIBCALL_ADEQ2,', 2.598833643460815e-06], ['(t1array));', 2.598833643460815e-06], ['Equality', 2.598833643460815e-06], ['_aaEqual()', 2.598833643460815e-06], ['*taa1', 2.598833643460815e-06], ['tb1;', 2.598833643460815e-06], ['(LIBCALL_AAEQUAL,', 2.598833643460815e-06], ['(taa1),', 2.598833643460815e-06], ['exactly.', 2.598833643460815e-06], ["`in'", 2.598833643460815e-06], ['(InExp', 2.598833643460815e-06], ['tb2)->index->toBasetype', 2.598833643460815e-06], ['_aaInX().', 2.598833643460815e-06], ['(LIBCALL_AAINX,', 2.598833643460815e-06], ['(CmpExp', 2.598833643460815e-06], ['non-equal', 2.598833643460815e-06], ['lengths,', 2.598833643460815e-06], ['shorter', 2.598833643460815e-06], ['longer.', 2.598833643460815e-06], ['(LIBCALL_ADCMP2,', 2.598833643460815e-06], ['(telem->arrayOf', 2.598833643460815e-06], ['`and', 2.598833643460815e-06], ['(AndAndExp', 2.598833643460815e-06], ['`or', 2.598833643460815e-06], ['(OrOrExp', 2.598833643460815e-06], ['evaluating.', 2.598833643460815e-06], ['TOKadd:', 2.598833643460815e-06], ['TOKmin:', 2.598833643460815e-06], ['((e->e1->type->isreal', 2.598833643460815e-06], ['e->e2->type->isimaginary', 2.598833643460815e-06], ['(e->e1->type->isimaginary', 2.598833643460815e-06], ['e->e2->type->isreal', 2.598833643460815e-06], ['TOKmin)', 2.598833643460815e-06], ['(e->e1->type->isreal', 2.598833643460815e-06], ['TOKmul:', 2.598833643460815e-06], ['TOKdiv:', 2.598833643460815e-06], ['TOKand:', 2.598833643460815e-06], ['TOKor:', 2.598833643460815e-06], ['TOKxor:', 2.598833643460815e-06], ['TOKshl:', 2.598833643460815e-06], ['TOKshr:', 2.598833643460815e-06], ['TOKushr:', 2.598833643460815e-06], ['*etype;', 2.598833643460815e-06], ['*elemvars', 2.598833643460815e-06], ['concatenations', 2.598833643460815e-06], ['((a', 2.598833643460815e-06], ['[a,', 2.598833643460815e-06], ['c]', 2.598833643460815e-06], ['*ex', 2.598833643460815e-06], ['ex->op', 2.598833643460815e-06], ['TOKcat;)', 2.598833643460815e-06], ['(ex->op', 2.598833643460815e-06], ['ex', 2.598833643460815e-06], ['((CatExp', 2.598833643460815e-06], ['ex)->e1;', 2.598833643460815e-06], ['ndims++;', 2.598833643460815e-06], ['byte[][ndims]', 2.598833643460815e-06], ['*targselem', 2.598833643460815e-06], ['(targselem,', 2.598833643460815e-06], ['ndims));', 2.598833643460815e-06], ['(elemvars,', 2.598833643460815e-06], ['left.', 2.598833643460815e-06], ['CatExp', 2.598833643460815e-06], ['*oe', 2.598833643460815e-06], ['(ce->e1->op', 2.598833643460815e-06], ['TOKcat', 2.598833643460815e-06], ['*)ce->e1,', 2.598833643460815e-06], ['ce->e2)))', 2.598833643460815e-06], ['oe,', 2.598833643460815e-06], ['&elemvars);', 2.598833643460815e-06], ['(dim);', 2.598833643460815e-06], ['Finished', 2.598833643460815e-06], ['arrs', 2.598833643460815e-06], ['(targselem->arrayOf', 2.598833643460815e-06], ['(ndims),', 2.598833643460815e-06], ['(LIBCALL_ARRAYCATNTX,', 2.598833643460815e-06], ['arrs);', 2.598833643460815e-06], ['b).', 2.598833643460815e-06], ['(LIBCALL_ARRAYCATT,', 2.598833643460815e-06], ['e->e1,', 2.598833643460815e-06], ['&elemvars),', 2.598833643460815e-06], ['e->e2,', 2.598833643460815e-06], ['&elemvars));', 2.598833643460815e-06], ['(elemvars);', 2.598833643460815e-06], ['((*elemvars)[i],', 2.598833643460815e-06], ['(BinAssignExp', 2.598833643460815e-06], ['TOKaddass:', 2.598833643460815e-06], ['TOKminass:', 2.598833643460815e-06], ['TOKmulass:', 2.598833643460815e-06], ['TOKdivass:', 2.598833643460815e-06], ['TOKandass:', 2.598833643460815e-06], ['TOKorass:', 2.598833643460815e-06], ['TOKxorass:', 2.598833643460815e-06], ['TOKshlass:', 2.598833643460815e-06], ['TOKshrass:', 2.598833643460815e-06], ['TOKushrass:', 2.598833643460815e-06], ['promoted.', 2.598833643460815e-06], ["`>>>='", 2.598833643460815e-06], ['undergo', 2.598833643460815e-06], ['shifting.', 2.598833643460815e-06], ['TOKshrass)', 2.598833643460815e-06], ['this->binop_assignment', 2.598833643460815e-06], ['e1b,', 2.598833643460815e-06], ['e->e2);', 2.598833643460815e-06], ['(CatAssignExp', 2.598833643460815e-06], ['Tdchar', 2.598833643460815e-06], ['etype->ty', 2.598833643460815e-06], ['Twchar))', 2.598833643460815e-06], ['char[]', 2.598833643460815e-06], ['wchar[]', 2.598833643460815e-06], ['Tchar)', 2.598833643460815e-06], ['LIBCALL_ARRAYAPPENDCD', 2.598833643460815e-06], ['LIBCALL_ARRAYAPPENDWD;', 2.598833643460815e-06], ['(e->e1)),', 2.598833643460815e-06], ['((tb2->ty', 2.598833643460815e-06], ['(LIBCALL_ARRAYAPPENDT,', 2.598833643460815e-06], ['tb2))', 2.598833643460815e-06], ['(LIBCALL_ARRAYAPPENDCTX,', 2.598833643460815e-06], ['(offexp),', 2.598833643460815e-06], ['offexp,', 2.598833643460815e-06], ['(offexp);', 2.598833643460815e-06], ['(ptrexp);', 2.598833643460815e-06], ['(ptrexp,', 2.598833643460815e-06], ['offexp);', 2.598833643460815e-06], ['appending.', 2.598833643460815e-06], ['(ptrexp),', 2.598833643460815e-06], ['(AssignExp', 2.598833643460815e-06], ['array.length', 2.598833643460815e-06], ['TOKarraylength)', 2.598833643460815e-06], ["array's", 2.598833643460815e-06], ['property;', 2.598833643460815e-06], ['resize', 2.598833643460815e-06], ['ArrayLengthExp', 2.598833643460815e-06], ['Type::tsize_t);', 2.598833643460815e-06], ['(ale->e1));', 2.598833643460815e-06], ['ale->e1->type->toBasetype', 2.598833643460815e-06], ['etype->isZeroInit', 2.598833643460815e-06], ['LIBCALL_ARRAYSETLENGTHT', 2.598833643460815e-06], ['LIBCALL_ARRAYSETLENGTHIT;', 2.598833643460815e-06], ['ale->e1->type,', 2.598833643460815e-06], ['(ale->e1->type),', 2.598833643460815e-06], ['array[]', 2.598833643460815e-06], ['TOKslice)', 2.598833643460815e-06], ['SliceExp', 2.598833643460815e-06], ['se->e1->type->toBasetype', 2.598833643460815e-06], ['stype->nextOf', 2.598833643460815e-06], ['blockAssign)', 2.598833643460815e-06], ['LIBCALL_ARRAYSETCTOR', 2.598833643460815e-06], ['LIBCALL_ARRAYSETASSIGN;', 2.598833643460815e-06], ['postblits', 2.598833643460815e-06], ['const/immutable', 2.598833643460815e-06], ['(etype->unSharedOf', 2.598833643460815e-06], ['(d_array_ptr', 2.598833643460815e-06], ['(e->e2->type->ty', 2.598833643460815e-06], ['(!postblit', 2.598833643460815e-06], ['!destructor', 2.598833643460815e-06], ['!array_bounds_check', 2.598833643460815e-06], ['(d_array_convert', 2.598833643460815e-06], ['_d_arrayassign(ti,', 2.598833643460815e-06], ['LIBCALL_ARRAYCTOR', 2.598833643460815e-06], ['LIBCALL_ARRAYASSIGN;', 2.598833643460815e-06], ['_d_arraycopy()', 2.598833643460815e-06], ['(LIBCALL_ARRAYCOPY,', 2.598833643460815e-06], ['referenceInit)', 2.598833643460815e-06], ['e->e1)->var;', 2.598833643460815e-06], ['modifycode', 2.598833643460815e-06], ['vthis_exp', 2.598833643460815e-06], ['(component_ref', 2.598833643460815e-06], ['vthis_exp);', 2.598833643460815e-06], ['(e->e1->type->size', 2.598833643460815e-06], ['rvalues', 2.598833643460815e-06], ['postblits,', 2.598833643460815e-06], ['dtors', 2.598833643460815e-06], ['((!postblit', 2.598833643460815e-06], ['!destructor)', 2.598833643460815e-06], ['!lvalue_p', 2.598833643460815e-06], ['postblit)', 2.598833643460815e-06], ['TOKblit', 2.598833643460815e-06], ['e->e1->type->size', 2.598833643460815e-06], ['*arrtype', 2.598833643460815e-06], ['etype->arrayOf', 2.598833643460815e-06], ['(LIBCALL_ARRAYCTOR,', 2.598833643460815e-06], ['_d_arrayassign_l()', 2.598833643460815e-06], ['_d_arrayassign_r()', 2.598833643460815e-06], ['(lvalue_p)', 2.598833643460815e-06], ['LIBCALL_ARRAYASSIGN_L', 2.598833643460815e-06], ['LIBCALL_ARRAYASSIGN_R;', 2.598833643460815e-06], ['elembuf', 2.598833643460815e-06], ['(etype));', 2.598833643460815e-06], ['(elembuf));', 2.598833643460815e-06], ['postfix', 2.598833643460815e-06], ['(PostExp', 2.598833643460815e-06], ['TOKplusplus)', 2.598833643460815e-06], ['TOKminusminus)', 2.598833643460815e-06], ['(IndexExp', 2.598833643460815e-06], ['tb1)->index->toBasetype', 2.598833643460815e-06], ['(e->modifiable)', 2.598833643460815e-06], ['LIBCALL_AAGETY;', 2.598833643460815e-06], ['(tb1->unSharedOf', 2.598833643460815e-06], ['LIBCALL_AAGETRVALUEX;', 2.598833643460815e-06], ['(tkey);', 2.598833643460815e-06], ['e->type->pointerTo', 2.598833643460815e-06], ['(!e->indexIsInBounds', 2.598833643460815e-06], ['tassert', 2.598833643460815e-06], ['tassert);', 2.598833643460815e-06], ['!e->indexIsInBounds)', 2.598833643460815e-06], ['(e->e2->loc,', 2.598833643460815e-06], ['.ptr.', 2.598833643460815e-06], ['(ptr)),', 2.598833643460815e-06], ['(e->type)', 2.598833643460815e-06], ['size_t.', 2.598833643460815e-06], ['("unexpected', 2.598833643460815e-06], ['e->type->toChars', 2.598833643460815e-06], ['(DelegatePtrExp', 2.598833643460815e-06], ['(DelegateFuncptrExp', 2.598833643460815e-06], ['convert-to-dynamic-array', 2.598833643460815e-06], ['(!e->lwr)', 2.598833643460815e-06], ['(e->upr', 2.598833643460815e-06], ['most,', 2.598833643460815e-06], ['(e->lwr));', 2.598833643460815e-06], ['upr_tree', 2.598833643460815e-06], ['(e->upr));', 2.598833643460815e-06], ['always.', 2.598833643460815e-06], ['(upr_tree)', 2.598833643460815e-06], ['SAVE_EXPR)', 2.598833643460815e-06], ['(lwr_tree);', 2.598833643460815e-06], ['(lwr_tree))', 2.598833643460815e-06], ['(void_okay_p', 2.598833643460815e-06], ['newlength;', 2.598833643460815e-06], ['(!e->upperIsInBounds)', 2.598833643460815e-06], ['(length)', 2.598833643460815e-06], ['(e->upr->loc,', 2.598833643460815e-06], ['Enforces', 2.598833643460815e-06], ['upr.', 2.598833643460815e-06], ['(!e->lowerIsLessThanUpper)', 2.598833643460815e-06], ['(e->lwr->loc,', 2.598833643460815e-06], ['lwr_tree,', 2.598833643460815e-06], ['lwr_tree)', 2.598833643460815e-06], ['newlength);', 2.598833643460815e-06], ['(lwr,', 2.598833643460815e-06], ['upr)', 2.598833643460815e-06], ['lwr.', 2.598833643460815e-06], ['(newlength),', 2.598833643460815e-06], ['(lwr_tree,', 2.598833643460815e-06], ['newlength),', 2.598833643460815e-06], ['e->to->toBasetype', 2.598833643460815e-06], ['(tbtype),', 2.598833643460815e-06], ['ebtype,', 2.598833643460815e-06], ['tbtype);', 2.598833643460815e-06], ['(DeleteExp', 2.598833643460815e-06], ['e->e1)->var->isVarDeclaration', 2.598833643460815e-06], ['v->onstack)', 2.598833643460815e-06], ['LIBCALL_CALLINTERFACEFINALIZER', 2.598833643460815e-06], ['LIBCALL_CALLFINALIZER;', 2.598833643460815e-06], ['LIBCALL_DELINTERFACE', 2.598833643460815e-06], ['LIBCALL_DELCLASS;', 2.598833643460815e-06], ['telem;', 2.598833643460815e-06], ['_delarray_t', 2.598833643460815e-06], ['(LIBCALL_DELARRAYT,', 2.598833643460815e-06], ['instance,', 2.598833643460815e-06], ['delete,', 2.598833643460815e-06], ['((TypePointer', 2.598833643460815e-06], ['*)tb1)->next->toBasetype', 2.598833643460815e-06], ['(tnext->ty', 2.598833643460815e-06], ['*)tnext;', 2.598833643460815e-06], ['(LIBCALL_DELSTRUCT,', 2.598833643460815e-06], ['(tnext));', 2.598833643460815e-06], ['(LIBCALL_DELMEMORY,', 2.598833643460815e-06], ['("don\'t', 2.598833643460815e-06], ['(RemoveExp', 2.598833643460815e-06], ['tb)->index->toBasetype', 2.598833643460815e-06], ['(LIBCALL_AADELX,', 2.598833643460815e-06], ['Type::tbool,', 2.598833643460815e-06], ['(index));', 2.598833643460815e-06], ['array",', 2.598833643460815e-06], ['(NotExp', 2.598833643460815e-06], ['compliment', 2.598833643460815e-06], ['complemented.', 2.598833643460815e-06], ['(ComExp', 2.598833643460815e-06], ['negation', 2.598833643460815e-06], ['(NegExp', 2.598833643460815e-06], ['(PtrExp', 2.598833643460815e-06], ['BinExp', 2.598833643460815e-06], ['*be', 2.598833643460815e-06], ['(be->e1->op', 2.598833643460815e-06], ['TOKaddress', 2.598833643460815e-06], ['be->e2->isConst', 2.598833643460815e-06], ['be->e2->type->isintegral', 2.598833643460815e-06], ['*ae', 2.598833643460815e-06], ['((AddrExp', 2.598833643460815e-06], ['be->e1)->e1;', 2.598833643460815e-06], ['ae->type->toBasetype', 2.598833643460815e-06], ['(ae);', 2.598833643460815e-06], ['be->e2->toUInteger', 2.598833643460815e-06], ['TOKsymoff)', 2.598833643460815e-06], ['SymOffExp', 2.598833643460815e-06], ['(!declaration_reference_p', 2.598833643460815e-06], ['(se->var))', 2.598833643460815e-06], ['se->var->type->toBasetype', 2.598833643460815e-06], ['(se->var);', 2.598833643460815e-06], ['se->offset;', 2.598833643460815e-06], ['*(#record', 2.598833643460815e-06], ['COMPONENT_REFERENCE.', 2.598833643460815e-06], ['(tnext', 2.598833643460815e-06], ['tnext->ty', 2.598833643460815e-06], ['tnext)->sym;', 2.598833643460815e-06], ['(field->type,', 2.598833643460815e-06], ['e->type))', 2.598833643460815e-06], ['(AddrExp', 2.598833643460815e-06], ['illegal.', 2.598833643460815e-06], ['((StructLiteralExp', 2.598833643460815e-06], ['e->e1)->origin;', 2.598833643460815e-06], ['(sle', 2.598833643460815e-06], ['(!sle->sym)', 2.598833643460815e-06], ['sle->sym', 2.598833643460815e-06], ['(sle->type),', 2.598833643460815e-06], ['"S");', 2.598833643460815e-06], ['(sle->sym)', 2.598833643460815e-06], ['(sle->sym);', 2.598833643460815e-06], ['(sle->sym,', 2.598833643460815e-06], ['sle->sym;', 2.598833643460815e-06], ['(CallExp', 2.598833643460815e-06], ['((CommaExp', 2.598833643460815e-06], ['e1b)->e2;', 2.598833643460815e-06], ['e1b)->var;', 2.598833643460815e-06], ['(var->isFuncDeclaration', 2.598833643460815e-06], ['!var->needThis', 2.598833643460815e-06], ['TOKdotvar', 2.598833643460815e-06], ['*dve', 2.598833643460815e-06], ['(dve->e1->op', 2.598833643460815e-06], ['dve->e1;', 2.598833643460815e-06], ['sle->useStaticInit', 2.598833643460815e-06], ['dve->var->isFuncDeclaration', 2.598833643460815e-06], ['(!ad)', 2.598833643460815e-06], ['(dve->e1);', 2.598833643460815e-06], ['throws,', 2.598833643460815e-06], ['destructed', 2.598833643460815e-06], ['(fd->isCtorDeclaration', 2.598833643460815e-06], ['(thisexp)', 2.598833643460815e-06], ['COMPOUND_EXPR', 2.598833643460815e-06], ['(thisexp)))', 2.598833643460815e-06], ['(thisexp);', 2.598833643460815e-06], ['!fd->isFinalFunc', 2.598833643460815e-06], ['!e->directcall)', 2.598833643460815e-06], ['thistype', 2.598833643460815e-06], ['(thistype,', 2.598833643460815e-06], ['(thisexp));', 2.598833643460815e-06], ['fd->vtblIndex);', 2.598833643460815e-06], ['thisexp,', 2.598833643460815e-06], ['fd->type);', 2.598833643460815e-06], ['(callee', 2.598833643460815e-06], ['(TY', 2.598833643460815e-06], ['Tdelegate),', 2.598833643460815e-06], ['TOKdotvar)', 2.598833643460815e-06], ['e1->type', 2.598833643460815e-06], ['incorrect,', 2.598833643460815e-06], ["'ref'", 2.598833643460815e-06], ['(((DotVarExp', 2.598833643460815e-06], ['e1b)->var->type);', 2.598833643460815e-06], ['e1b)->var->isFuncDeclaration', 2.598833643460815e-06], ['re-evaluate', 2.598833643460815e-06], ["'fd'", 2.598833643460815e-06], ['(call_by_alias_p', 2.598833643460815e-06], ['(d_function_chain->function,', 2.598833643460815e-06], ['fd))', 2.598833643460815e-06], ['(fd->needThis', 2.598833643460815e-06], ['(e1b->loc),', 2.598833643460815e-06], ['"need', 2.598833643460815e-06], ['compiling...', 2.598833643460815e-06], ['this->type', 2.598833643460815e-06], ['(e->type->isTypeBasic', 2.598833643460815e-06], ['cleanup,', 2.598833643460815e-06], ['(cleanup', 2.598833643460815e-06], ['(slot);', 2.598833643460815e-06], ['slot,', 2.598833643460815e-06], ['(cleanup)', 2.598833643460815e-06], ['(DelegateExp', 2.598833643460815e-06], ['(e->func->semanticRun', 2.598833643460815e-06], ['PASSsemantic3done)', 2.598833643460815e-06], ['ie:', 2.598833643460815e-06], ['*owner', 2.598833643460815e-06], ['e->func->toParent', 2.598833643460815e-06], ['(!owner->isTemplateInstance', 2.598833643460815e-06], ['(owner->isTemplateInstance', 2.598833643460815e-06], ['d_function_chain->module)', 2.598833643460815e-06], ['(e->func->isNested', 2.598833643460815e-06], ['TOKnull)', 2.598833643460815e-06], ['(e->func));', 2.598833643460815e-06], ['(!e->func->isThis', 2.598833643460815e-06], ['("delegates', 2.598833643460815e-06], ['functions");', 2.598833643460815e-06], ['e->e1->type->ty', 2.598833643460815e-06], ["`void*'.", 2.598833643460815e-06], ['(e->e1->type),', 2.598833643460815e-06], ['(e->func->isVirtual', 2.598833643460815e-06], ['!e->func->isFinalFunc', 2.598833643460815e-06], ['TOKsuper', 2.598833643460815e-06], ['TOKdottype)', 2.598833643460815e-06], ['e->func->vtblIndex);', 2.598833643460815e-06], ['(DotTypeExp', 2.598833643460815e-06], ['CallExp.', 2.598833643460815e-06], ['(!vd->isField', 2.598833643460815e-06], ['e->var->toChars', 2.598833643460815e-06], ['e->var->kind', 2.598833643460815e-06], ['(AssertExp', 2.598833643460815e-06], ['assert_fail;', 2.598833643460815e-06], ['((bool)', 2.598833643460815e-06], ['(void)0', 2.598833643460815e-06], ['(e1', 2.598833643460815e-06], ['e1._invariant()', 2.598833643460815e-06], ['d_function_chain->function->isUnitTestDeclaration', 2.598833643460815e-06], ['(e->msg)', 2.598833643460815e-06], ['(e->msg);', 2.598833643460815e-06], ['LIBCALL_UNITTEST_MSG', 2.598833643460815e-06], ['LIBCALL_ASSERT_MSG;', 2.598833643460815e-06], ['LIBCALL_UNITTEST', 2.598833643460815e-06], ['LIBCALL_ASSERT;', 2.598833643460815e-06], ['_d_assert().', 2.598833643460815e-06], ['tmsg);', 2.598833643460815e-06], ['(global.params.useInvariants)', 2.598833643460815e-06], ['(LIBCALL_INVARIANT,', 2.598833643460815e-06], ['())->sym;', 2.598833643460815e-06], ['(sd->inv', 2.598833643460815e-06], ['(sd->inv,', 2.598833643460815e-06], ['&args);', 2.598833643460815e-06], ['optimizer.', 2.598833643460815e-06], ['build_predict_expr', 2.598833643460815e-06], ['(PRED_NORETURN,', 2.598833643460815e-06], ['NOT_TAKEN);', 2.598833643460815e-06], ['asserting', 2.598833643460815e-06], ['(BUILT_IN_EXPECT);', 2.598833643460815e-06], ['arg_types', 2.598833643460815e-06], ['pred_type', 2.598833643460815e-06], ['(arg_types);', 2.598833643460815e-06], ['expected_type', 2.598833643460815e-06], ['(arg_types));', 2.598833643460815e-06], ['(pred_type,', 2.598833643460815e-06], ['condition),', 2.598833643460815e-06], ['(expected_type,', 2.598833643460815e-06], ['(condition,', 2.598833643460815e-06], ['assert_pass,', 2.598833643460815e-06], ['assert_fail);', 2.598833643460815e-06], ['(DeclarationExp', 2.598833643460815e-06], ['(e->declaration);', 2.598833643460815e-06], ['Construction', 2.598833643460815e-06], ['typesafe-variadic', 2.598833643460815e-06], ['STMT_LIST', 2.598833643460815e-06], ['typeid', 2.598833643460815e-06], ['(TypeidExp', 2.598833643460815e-06], ['isType', 2.598833643460815e-06], ['(tid->vtinfo->offset)', 2.598833643460815e-06], ['(tid->vtinfo->offset));', 2.598833643460815e-06], ['isExpression', 2.598833643460815e-06], ['tid->type->toBasetype', 2.598833643460815e-06], ['**classptr', 2.598833643460815e-06], ['classinfo.', 2.598833643460815e-06], ['function/lambda', 2.598833643460815e-06], ['(FuncExp', 2.598833643460815e-06], ["lambda's,", 2.598833643460815e-06], ['nested.', 2.598833643460815e-06], ['(e->fd->tok', 2.598833643460815e-06], ['TOKreserved', 2.598833643460815e-06], ['ftype->ty', 2.598833643460815e-06], ['e->fd->tok', 2.598833643460815e-06], ['e->fd->vthis', 2.598833643460815e-06], ['trampoline.', 2.598833643460815e-06], ['(e->fd->isNested', 2.598833643460815e-06], ['(e->fd));', 2.598833643460815e-06], ['(e->fd)));', 2.598833643460815e-06], ['halt', 2.598833643460815e-06], ['(HaltExp', 2.598833643460815e-06], ['trap()', 2.598833643460815e-06], ['abort()?', 2.598833643460815e-06], ['ttrap', 2.598833643460815e-06], ['(BUILT_IN_TRAP);', 2.598833643460815e-06], ['(ttrap,', 2.598833643460815e-06], ['((SymOffExp', 2.598833643460815e-06], ['e)->offset;', 2.598833643460815e-06], ['(!soffset)', 2.598833643460815e-06], ['(soffset);', 2.598833643460815e-06], ['(VarExp', 2.598833643460815e-06], ['(e->var->needThis', 2.598833643460815e-06], ['e->var->ident->toChars', 2.598833643460815e-06], ['(e->var->ident', 2.598833643460815e-06], ['("__ctfe"))', 2.598833643460815e-06], ['__ctfe', 2.598833643460815e-06], ['FuncExp', 2.598833643460815e-06], ['lambdas.', 2.598833643460815e-06], ['FuncLiteralDeclaration', 2.598833643460815e-06], ['*fld', 2.598833643460815e-06], ['e->var->isFuncLiteralDeclaration', 2.598833643460815e-06], ['(fld', 2.598833643460815e-06], ['(fld->tok', 2.598833643460815e-06], ['TOKreserved)', 2.598833643460815e-06], ['fld->tok', 2.598833643460815e-06], ['fld->vthis', 2.598833643460815e-06], ['(fld);', 2.598833643460815e-06], ['e->var->isSymbolDeclaration', 2.598833643460815e-06], ['(var->isConst', 2.598833643460815e-06], ['var->isImmutable', 2.598833643460815e-06], ['var->_init)', 2.598833643460815e-06], ['(var->inuse)', 2.598833643460815e-06], ['"recursive', 2.598833643460815e-06], ['var->inuse++;', 2.598833643460815e-06], ['(initializerToExpression', 2.598833643460815e-06], ['(var->_init),', 2.598833643460815e-06], ['var->inuse--;', 2.598833643460815e-06], ['sd->dsym)', 2.598833643460815e-06], ['out/inout', 2.598833643460815e-06], ['(e->var->type),', 2.598833643460815e-06], ['(ThisExp', 2.598833643460815e-06], ['(e->var)', 2.598833643460815e-06], ['(NewExp', 2.598833643460815e-06], ['(e->newargs);', 2.598833643460815e-06], ['tb)->sym;', 2.598833643460815e-06], ['(e->onstack)', 2.598833643460815e-06], ['allocator,', 2.598833643460815e-06], ['_d_newclass()', 2.598833643460815e-06], ['(LIBCALL_NEWCLASS,', 2.598833643460815e-06], ['(cd->isNested', 2.598833643460815e-06], ['(cd->vthis);', 2.598833643460815e-06], ['(e->thisexp)', 2.598833643460815e-06], ['*tcd', 2.598833643460815e-06], ['e->thisexp->type->isClassHandle', 2.598833643460815e-06], ['(e->thisexp);', 2.598833643460815e-06], ['tcd)', 2.598833643460815e-06], ['*ocd', 2.598833643460815e-06], ['(tcd,', 2.598833643460815e-06], ['&offset));', 2.598833643460815e-06], ['offset...', 2.598833643460815e-06], ['e->thisexp->type,', 2.598833643460815e-06], ['(new())->vthis', 2.598833643460815e-06], ['*htype', 2.598833643460815e-06], ['(htype->ty', 2.598833643460815e-06], ['(!e->onstack);', 2.598833643460815e-06], ['htype;', 2.598833643460815e-06], ['stype->sym;', 2.598833643460815e-06], ['opaque', 2.598833643460815e-06], ['(sd->size', 2.598833643460815e-06], ['(tb),', 2.598833643460815e-06], ['_d_newitemT()', 2.598833643460815e-06], ['htype->isZeroInit', 2.598833643460815e-06], ['(e->member', 2.598833643460815e-06], ['!e->arguments)', 2.598833643460815e-06], ['(stype);', 2.598833643460815e-06], ['(indirect_ref', 2.598833643460815e-06], ['new_call),', 2.598833643460815e-06], ['value),', 2.598833643460815e-06], ['sd->fields.dim', 2.598833643460815e-06], ['e->arguments,', 2.598833643460815e-06], ['htype);', 2.598833643460815e-06], ['se->type', 2.598833643460815e-06], ['se->sym', 2.598833643460815e-06], ['(se),', 2.598833643460815e-06], ['*tarray', 2.598833643460815e-06], ['(!e->allocator);', 2.598833643460815e-06], ['(e->arguments->dim', 2.598833643460815e-06], ['(*e->arguments)[0];', 2.598833643460815e-06], ['(tarray->next->size', 2.598833643460815e-06], ['tarray->next->isZeroInit', 2.598833643460815e-06], ['LIBCALL_NEWARRAYT', 2.598833643460815e-06], ['LIBCALL_NEWARRAYIT;', 2.598833643460815e-06], ['Multidimensional', 2.598833643460815e-06], ['tarray', 2.598833643460815e-06], ['(Type::tsize_t,', 2.598833643460815e-06], ['e->arguments->dim);', 2.598833643460815e-06], ['(tarray);', 2.598833643460815e-06], ['e->arguments->dim;', 2.598833643460815e-06], ['(*e->arguments)[i];', 2.598833643460815e-06], ['telem', 2.598833643460815e-06], ['telem->toBasetype', 2.598833643460815e-06], ['(telem);', 2.598833643460815e-06], ['_d_newarraymTX(ti,', 2.598833643460815e-06], ['_d_newarraymiTX(ti,', 2.598833643460815e-06], ['telem->isZeroInit', 2.598833643460815e-06], ['LIBCALL_NEWARRAYMTX', 2.598833643460815e-06], ['LIBCALL_NEWARRAYMITX;', 2.598833643460815e-06], ['(Type::tsize_t->arrayOf', 2.598833643460815e-06], ['(e->arguments->dim),', 2.598833643460815e-06], ['*tpointer', 2.598833643460815e-06], ['(tpointer->next->size', 2.598833643460815e-06], ['tpointer->next->isZeroInit', 2.598833643460815e-06], ['((*e->arguments)[0]));', 2.598833643460815e-06], ['(IntegerExp', 2.598833643460815e-06], ['ctype);', 2.598833643460815e-06], ['(RealExp', 2.598833643460815e-06], ['(ComplexExp', 2.598833643460815e-06], ['*tnext;', 2.598833643460815e-06], ['Type::tfloat32;', 2.598833643460815e-06], ['Type::tfloat64;', 2.598833643460815e-06], ['Type::tfloat80;', 2.598833643460815e-06], ['build_complex', 2.598833643460815e-06], ['(creall', 2.598833643460815e-06], ['tnext),', 2.598833643460815e-06], ['(cimagl', 2.598833643460815e-06], ['tnext));', 2.598833643460815e-06], ['e->len);', 2.598833643460815e-06], ['e->len;', 2.598833643460815e-06], ['(e->charAt', 2.598833643460815e-06], ['etype);', 2.598833643460815e-06], ['(e->len', 2.598833643460815e-06], ['e->sz);', 2.598833643460815e-06], ['e->string,', 2.598833643460815e-06], ['string[length]', 2.598833643460815e-06], ['terminator.', 2.598833643460815e-06], ['(length,', 2.598833643460815e-06], ['(e->len),', 2.598833643460815e-06], ['(TupleExp', 2.598833643460815e-06], ['(e->e0)', 2.598833643460815e-06], ['(e->e0);', 2.598833643460815e-06], ['e->exps->dim;', 2.598833643460815e-06], ['(*e->exps)[i];', 2.598833643460815e-06], ['(ArrayLiteralExp', 2.598833643460815e-06], ['void[n]', 2.598833643460815e-06], ['ubyte[n].', 2.598833643460815e-06], ['Type::tuns8->sarrayOf', 2.598833643460815e-06], ['e->getElement', 2.598833643460815e-06], ['CONSTRUCTOR_NO_CLEARING.', 2.598833643460815e-06], ['expr->type,', 2.598833643460815e-06], ['etype));', 2.598833643460815e-06], ['this->constp_)', 2.598833643460815e-06], ['ctor,', 2.598833643460815e-06], ['"A");', 2.598833643460815e-06], ['(constant_p', 2.598833643460815e-06], ['(LIBCALL_ARRAYLITERALTX,', 2.598833643460815e-06], ['etype->pointerTo', 2.598833643460815e-06], ['(etype->arrayOf', 2.598833643460815e-06], ['(e->elements->dim));', 2.598833643460815e-06], ['(mem);', 2.598833643460815e-06], ['(AssocArrayLiteralExp', 2.598833643460815e-06], ['assoc', 2.598833643460815e-06], ['*ta', 2.598833643460815e-06], ['(e->keys->dim', 2.598833643460815e-06], ['KEYS', 2.598833643460815e-06], ['*kelts', 2.598833643460815e-06], ['e->keys->dim;', 2.598833643460815e-06], ['(*e->keys)[i];', 2.598833643460815e-06], ['key->type,', 2.598833643460815e-06], ['ta->index));', 2.598833643460815e-06], ['tkeys', 2.598833643460815e-06], ['(ta->index,', 2.598833643460815e-06], ['akeys', 2.598833643460815e-06], ['(tkeys,', 2.598833643460815e-06], ['kelts);', 2.598833643460815e-06], ['VALUES.', 2.598833643460815e-06], ['*velts', 2.598833643460815e-06], ['e->values->dim;', 2.598833643460815e-06], ['(*e->values)[i];', 2.598833643460815e-06], ['value->type,', 2.598833643460815e-06], ['ta->next));', 2.598833643460815e-06], ['tvals', 2.598833643460815e-06], ['(ta->next,', 2.598833643460815e-06], ['avals', 2.598833643460815e-06], ['(tvals,', 2.598833643460815e-06], ['velts);', 2.598833643460815e-06], ['_d_assocarrayliteralTX', 2.598833643460815e-06], ['(ta->index->arrayOf', 2.598833643460815e-06], ['(e->keys->dim),', 2.598833643460815e-06], ['(akeys));', 2.598833643460815e-06], ['(ta->next->arrayOf', 2.598833643460815e-06], ['(e->values->dim),', 2.598833643460815e-06], ['(avals));', 2.598833643460815e-06], ['(LIBCALL_ASSOCARRAYLITERALTX,', 2.598833643460815e-06], ['aatype', 2.598833643460815e-06], ['(ta);', 2.598833643460815e-06], ['(aatype),', 2.598833643460815e-06], ['(aatype,', 2.598833643460815e-06], ['ce));', 2.598833643460815e-06], ['(e->elements', 2.598833643460815e-06], ['delayed', 2.598833643460815e-06], ['!this->constp_)', 2.598833643460815e-06], ['NullExp.', 2.598833643460815e-06], ['e->sd->fields.dim);', 2.598833643460815e-06], ['(*e->elements)[i];', 2.598833643460815e-06], ['(!exp)', 2.598833643460815e-06], ['e->sd->fields[i];', 2.598833643460815e-06], ['field->type->toBasetype', 2.598833643460815e-06], ['(ftype->ty', 2.598833643460815e-06], ['!same_type_p', 2.598833643460815e-06], ['ftype))', 2.598833643460815e-06], ['(elem);', 2.598833643460815e-06], ['(initializer_zerop', 2.598833643460815e-06], ['(elem))', 2.598833643460815e-06], ['(ftype),', 2.598833643460815e-06], ['(ftype,', 2.598833643460815e-06], ['elem);', 2.598833643460815e-06], ['field->type);', 2.598833643460815e-06], ['setup', 2.598833643460815e-06], ['(e->sd->isNested', 2.598833643460815e-06], ['e->elements->dim', 2.598833643460815e-06], ['(e->sd->vthis);', 2.598833643460815e-06], ['(e->sym', 2.598833643460815e-06], ['(e->sym);', 2.598833643460815e-06], ['ctor),', 2.598833643460815e-06], ['(e->sd->isUnionDeclaration', 2.598833643460815e-06], ['(ctor));', 2.598833643460815e-06], ['(e->sd->structsize));', 2.598833643460815e-06], ['saved_elems);', 2.598833643460815e-06], ['(NullExp', 2.598833643460815e-06], ['(VectorExp', 2.598833643460815e-06], ['ArrayLiteralExp', 2.598833643460815e-06], ['e->e1);', 2.598833643460815e-06], ['ale->elements->dim);', 2.598833643460815e-06], ['ale->elements->dim;', 2.598833643460815e-06], ['ale->getElement', 2.598833643460815e-06], ['(!CONSTANT_CLASS_P', 2.598833643460815e-06], ['VECTOR_CST', 2.598833643460815e-06], ['(VectorArrayExp', 2.598833643460815e-06], ['(build_new_class_expr', 2.598833643460815e-06], ['(e));', 2.598833643460815e-06], ['*to', 2.598833643460815e-06], ['tc->sym->isInterfaceDeclaration', 2.598833643460815e-06], ['*from', 2.598833643460815e-06], ['e->originalClass', 2.598833643460815e-06], ['(to->isBaseOf', 2.598833643460815e-06], ['mainly', 2.598833643460815e-06], ['(ScopeExp', 2.598833643460815e-06], ['(TypeExp', 2.598833643460815e-06], ['E.', 2.598833643460815e-06], ['const_p)', 2.598833643460815e-06], ['(const_p);', 2.598833643460815e-06], ['(e->loc);', 2.598833643460815e-06], ['e->accept', 2.598833643460815e-06], ['(const_p', 2.598833643460815e-06], ['!initializer_constant_valid_p', 2.598833643460815e-06], ['build_expr,', 2.598833643460815e-06], ['Codegen', 2.598833643460815e-06], ['improved', 2.598833643460815e-06], ['dtor,', 2.598833643460815e-06], ['build_expr_dtor,', 2.598833643460815e-06], ['*tf)', 2.598833643460815e-06], ['(cfun->decl);', 2.598833643460815e-06], ['(&result);', 2.598833643460815e-06], ['go-sha1.cc', 2.598833643460815e-06], ['"sha1.h"', 2.598833643460815e-06], ['Gcc_sha1_helper', 2.598833643460815e-06], ['Go_sha1_helper', 2.598833643460815e-06], ['Gcc_sha1_helper()', 2.598833643460815e-06], ['ctx_(new', 2.598833643460815e-06], ['sha1_ctx)', 2.598833643460815e-06], ['sha1_init_ctx(this->ctx_);', 2.598833643460815e-06], ['~Gcc_sha1_helper();', 2.598833643460815e-06], ['Incorporate', 2.598833643460815e-06], ["'len'", 2.598833643460815e-06], ["'buffer'", 2.598833643460815e-06], ['process_bytes(const', 2.598833643460815e-06], ['finish();', 2.598833643460815e-06], ['sha1_ctx', 2.598833643460815e-06], ['*ctx_;', 2.598833643460815e-06], ['Gcc_sha1_helper::~Gcc_sha1_helper()', 2.598833643460815e-06], ['ctx_;', 2.598833643460815e-06], ['Gcc_sha1_helper::process_bytes(const', 2.598833643460815e-06], ['sha1_process_bytes(buffer,', 2.598833643460815e-06], ['this->ctx_);', 2.598833643460815e-06], ['Gcc_sha1_helper::finish()', 2.598833643460815e-06], ['checksum[checksum_len];', 2.598833643460815e-06], ['sha1_finish_ctx(this->ctx_,', 2.598833643460815e-06], ['u.checksum);', 2.598833643460815e-06], ['std::string(u.checksum,', 2.598833643460815e-06], ['checksum_len);', 2.598833643460815e-06], ['go_create_sha1_helper()', 2.598833643460815e-06], ['Gcc_sha1_helper();', 2.598833643460815e-06], ['suggestions', 2.598833643460815e-06], ['"c-family/name-hint.h"', 2.598833643460815e-06], ['"c-family/known-headers.h"', 2.598833643460815e-06], ['"gcc-rich-location.h"', 2.598833643460815e-06], ['STDLIB_C,', 2.598833643460815e-06], ['STDLIB_CPLUSPLUS,', 2.598833643460815e-06], ['NUM_STDLIBS', 2.598833643460815e-06], ['associating', 2.598833643460815e-06], ['locate', 2.598833643460815e-06], ['stdlibs', 2.598833643460815e-06], ['stdlib).', 2.598833643460815e-06], ['*header[NUM_STDLIBS];', 2.598833643460815e-06], ['subset', 2.598833643460815e-06], ['lib)', 2.598833643460815e-06], ['(lib', 2.598833643460815e-06], ['NUM_STDLIBS);', 2.598833643460815e-06], ['hints[]', 2.598833643460815e-06], ['<cassert>.', 2.598833643460815e-06], ['{"assert",', 2.598833643460815e-06], ['{"<assert.h>",', 2.598833643460815e-06], ['"<cassert>"}', 2.598833643460815e-06], ['<errno.h>', 2.598833643460815e-06], ['<cerrno>.', 2.598833643460815e-06], ['{"errno",', 2.598833643460815e-06], ['{"<errno.h>",', 2.598833643460815e-06], ['"<cerrno>"}', 2.598833643460815e-06], ['<climits>.', 2.598833643460815e-06], ['{"CHAR_BIT",', 2.598833643460815e-06], ['{"CHAR_MAX",', 2.598833643460815e-06], ['{"CHAR_MIN",', 2.598833643460815e-06], ['{"INT_MAX",', 2.598833643460815e-06], ['{"INT_MIN",', 2.598833643460815e-06], ['{"LLONG_MAX",', 2.598833643460815e-06], ['{"LLONG_MIN",', 2.598833643460815e-06], ['{"LONG_MAX",', 2.598833643460815e-06], ['{"LONG_MIN",', 2.598833643460815e-06], ['{"MB_LEN_MAX",', 2.598833643460815e-06], ['{"SCHAR_MAX",', 2.598833643460815e-06], ['{"SCHAR_MIN",', 2.598833643460815e-06], ['{"SHRT_MAX",', 2.598833643460815e-06], ['{"SHRT_MIN",', 2.598833643460815e-06], ['{"UCHAR_MAX",', 2.598833643460815e-06], ['{"UINT_MAX",', 2.598833643460815e-06], ['{"ULLONG_MAX",', 2.598833643460815e-06], ['{"ULONG_MAX",', 2.598833643460815e-06], ['{"USHRT_MAX",', 2.598833643460815e-06], ['<cfloat>.', 2.598833643460815e-06], ['{"DBL_MAX",', 2.598833643460815e-06], ['{"DBL_MIN",', 2.598833643460815e-06], ['{"FLT_MAX",', 2.598833643460815e-06], ['{"FLT_MIN",', 2.598833643460815e-06], ['{"LDBL_MAX",', 2.598833643460815e-06], ['{"LDBL_MIN",', 2.598833643460815e-06], ['<stdarg.h>', 2.598833643460815e-06], ['<cstdarg>.', 2.598833643460815e-06], ['{"va_list",', 2.598833643460815e-06], ['{"<stdarg.h>",', 2.598833643460815e-06], ['"<cstdarg>"}', 2.598833643460815e-06], ['<cstddef>.', 2.598833643460815e-06], ['{"NULL",', 2.598833643460815e-06], ['{"nullptr_t",', 2.598833643460815e-06], ['{"offsetof",', 2.598833643460815e-06], ['{"ptrdiff_t",', 2.598833643460815e-06], ['{"size_t",', 2.598833643460815e-06], ['{"wchar_t",', 2.598833643460815e-06], ['*/}', 2.598833643460815e-06], ['<cstdio>.', 2.598833643460815e-06], ['{"BUFSIZ",', 2.598833643460815e-06], ['{"EOF",', 2.598833643460815e-06], ['{"FILE",', 2.598833643460815e-06], ['{"FILENAME_MAX",', 2.598833643460815e-06], ['{"fopen",', 2.598833643460815e-06], ['{"fpos_t",', 2.598833643460815e-06], ['{"getchar",', 2.598833643460815e-06], ['{"printf",', 2.598833643460815e-06], ['{"snprintf",', 2.598833643460815e-06], ['{"sprintf",', 2.598833643460815e-06], ['{"stderr",', 2.598833643460815e-06], ['{"stdin",', 2.598833643460815e-06], ['{"stdout",', 2.598833643460815e-06], ['<cstdlib>.', 2.598833643460815e-06], ['{"free",', 2.598833643460815e-06], ['{"malloc",', 2.598833643460815e-06], ['{"realloc",', 2.598833643460815e-06], ['<cstring>.', 2.598833643460815e-06], ['{"memchr",', 2.598833643460815e-06], ['{"memcmp",', 2.598833643460815e-06], ['{"memcpy",', 2.598833643460815e-06], ['{"memmove",', 2.598833643460815e-06], ['{"memset",', 2.598833643460815e-06], ['{"strcat",', 2.598833643460815e-06], ['{"strchr",', 2.598833643460815e-06], ['{"strcmp",', 2.598833643460815e-06], ['{"strcpy",', 2.598833643460815e-06], ['{"strlen",', 2.598833643460815e-06], ['{"strncat",', 2.598833643460815e-06], ['{"strncmp",', 2.598833643460815e-06], ['{"strncpy",', 2.598833643460815e-06], ['{"strrchr",', 2.598833643460815e-06], ['{"strspn",', 2.598833643460815e-06], ['{"strstr",', 2.598833643460815e-06], ['<stdint.h>.', 2.598833643460815e-06], ['{"PTRDIFF_MAX",', 2.598833643460815e-06], ['{"PTRDIFF_MIN",', 2.598833643460815e-06], ['{"SIG_ATOMIC_MAX",', 2.598833643460815e-06], ['{"SIG_ATOMIC_MIN",', 2.598833643460815e-06], ['{"SIZE_MAX",', 2.598833643460815e-06], ['{"WINT_MAX",', 2.598833643460815e-06], ['{"WINT_MIN",', 2.598833643460815e-06], ['<wchar.h>.', 2.598833643460815e-06], ['{"WCHAR_MAX",', 2.598833643460815e-06], ['{"WCHAR_MIN",', 2.598833643460815e-06], ['num_hints', 2.598833643460815e-06], ['(hints)', 2.598833643460815e-06], ['(hints[0]);', 2.598833643460815e-06], ['num_hints;', 2.598833643460815e-06], ['hints[i].name)', 2.598833643460815e-06], ['hints[i].header[lib];', 2.598833643460815e-06], ['get_c_stdlib_header_for_name', 2.598833643460815e-06], ['STDLIB_C);', 2.598833643460815e-06], ['get_cp_stdlib_header_for_name', 2.598833643460815e-06], ['STDLIB_CPLUSPLUS);', 2.598833643460815e-06], ['suggest_missing_header.', 2.598833643460815e-06], ['suggest_missing_header::suggest_missing_header', 2.598833643460815e-06], ['*header_hint)', 2.598833643460815e-06], ['deferred_diagnostic', 2.598833643460815e-06], ['m_name_str', 2.598833643460815e-06], ['m_header_hint', 2.598833643460815e-06], ['(header_hint)', 2.598833643460815e-06], ['(header_hint);', 2.598833643460815e-06], ['suggest_missing_header::~suggest_missing_header', 2.598833643460815e-06], ['(is_suppressed_p', 2.598833643460815e-06], ['gcc_rich_location', 2.598833643460815e-06], ['richloc', 2.598833643460815e-06], ['(get_location', 2.598833643460815e-06], ['maybe_add_include_fixit', 2.598833643460815e-06], ['%qs;"', 2.598833643460815e-06], ['%<#include', 2.598833643460815e-06], ['%s%>?",', 2.598833643460815e-06], ['m_name_str,', 2.598833643460815e-06], ['m_header_hint);', 2.598833643460815e-06], ['<ostream>', 2.598833643460815e-06], ['Type::Type(Type_classification', 2.598833643460815e-06], ['btype_(NULL),', 2.598833643460815e-06], ['type_descriptor_var_(NULL),', 2.598833643460815e-06], ['gc_symbol_var_(NULL)', 2.598833643460815e-06], ['Type::~Type()', 2.598833643460815e-06], ['type--skip', 2.598833643460815e-06], ['this->forwarded()->convert_no_base<Named_type,', 2.598833643460815e-06], ['this->forwarded()->convert_no_base<const', 2.598833643460815e-06], ['Named_type,', 2.598833643460815e-06], ['Type::is_undefined()', 2.598833643460815e-06], ['this->forwarded()->forward_declaration_type()', 2.598833643460815e-06], ['Type::is_basic_type()', 2.598833643460815e-06], ['this->base()->is_basic_type();', 2.598833643460815e-06], ['Type::is_abstract()', 2.598833643460815e-06], ['this->integer_type()->is_abstract();', 2.598833643460815e-06], ['this->float_type()->is_abstract();', 2.598833643460815e-06], ['this->complex_type()->is_abstract();', 2.598833643460815e-06], ['this->is_abstract_string_type();', 2.598833643460815e-06], ['this->is_abstract_boolean_type();', 2.598833643460815e-06], ['Type::make_non_abstract_type()', 2.598833643460815e-06], ['go_assert(this->is_abstract());', 2.598833643460815e-06], ['(this->integer_type()->is_rune())', 2.598833643460815e-06], ['legitimately', 2.598833643460815e-06], ['Type::is_error_type()', 2.598833643460815e-06], ['(t->classification_)', 2.598833643460815e-06], ['t->named_type()->is_named_error_type();', 2.598833643460815e-06], ['Type::points_to()', 2.598833643460815e-06], ['this->convert<const', 2.598833643460815e-06], ['Pointer_type,', 2.598833643460815e-06], ['Type::is_slice_type()', 2.598833643460815e-06], ['this->array_type()', 2.598833643460815e-06], ['this->array_type()->length()', 2.598833643460815e-06], ['Type::is_nil_constant_as_type()', 2.598833643460815e-06], ['no->is_const()', 2.598833643460815e-06], ['no->const_value()->expr()->is_nil_expression())', 2.598833643460815e-06], ['Type::traverse(Type*', 2.598833643460815e-06], ['go_assert((traverse->traverse_mask()', 2.598833643460815e-06], ['(traverse->remember_type(type))', 2.598833643460815e-06], ['traverse->type(type);', 2.598833643460815e-06], ['traverse_expressions', 2.598833643460815e-06], ['(type->do_traverse(traverse)', 2.598833643460815e-06], ['Type::do_traverse(Traverse*)', 2.598833643460815e-06], ['Type::are_identical(const', 2.598833643460815e-06], ['t1->forwarded();', 2.598833643460815e-06], ['t2->forwarded();', 2.598833643460815e-06], ['COMPARE_ALIASES)', 2.598833643460815e-06], ['t1->unalias();', 2.598833643460815e-06], ['t2->unalias();', 2.598833643460815e-06], ['(t1->forward_declaration_type()', 2.598833643460815e-06], ['t2->forward_declaration_type()', 2.598833643460815e-06], ['(t1->is_error_type()', 2.598833643460815e-06], ['t2->is_error_type())', 2.598833643460815e-06], ['t1->is_error_type()', 2.598833643460815e-06], ['t2->is_error_type();', 2.598833643460815e-06], ['are_assignable.', 2.598833643460815e-06], ['(t1->is_sink_type()', 2.598833643460815e-06], ['t2->is_sink_type())', 2.598833643460815e-06], ['_";', 2.598833643460815e-06], ['(t1->named_type()', 2.598833643460815e-06], ['t2->named_type()', 2.598833643460815e-06], ['shapes.', 2.598833643460815e-06], ['(t1->classification()', 2.598833643460815e-06], ['t2->classification())', 2.598833643460815e-06], ['(t1->classification())', 2.598833643460815e-06], ['t1->integer_type()->is_identical(t2->integer_type());', 2.598833643460815e-06], ['t1->float_type()->is_identical(t2->float_type());', 2.598833643460815e-06], ['t1->complex_type()->is_identical(t2->complex_type());', 2.598833643460815e-06], ['t1->function_type()->is_identical(t2->function_type(),', 2.598833643460815e-06], ['Type::are_identical(t1->points_to(),', 2.598833643460815e-06], ['t2->points_to(),', 2.598833643460815e-06], ['t1->struct_type()->is_identical(t2->struct_type(),', 2.598833643460815e-06], ['t1->array_type()->is_identical(t2->array_type(),', 2.598833643460815e-06], ['t1->map_type()->is_identical(t2->map_type(),', 2.598833643460815e-06], ['t1->channel_type()->is_identical(t2->channel_type(),', 2.598833643460815e-06], ['t1->interface_type()->is_identical(t2->interface_type(),', 2.598833643460815e-06], ['Type::are_compatible_for_binop(const', 2.598833643460815e-06], ['((rhs->is_abstract_boolean_type()', 2.598833643460815e-06], ['lhs->is_boolean_type())', 2.598833643460815e-06], ['(lhs->is_abstract_boolean_type()', 2.598833643460815e-06], ['rhs->is_boolean_type()))', 2.598833643460815e-06], ['((rhs->is_abstract_string_type()', 2.598833643460815e-06], ['lhs->is_string_type())', 2.598833643460815e-06], ['(lhs->is_abstract_string_type()', 2.598833643460815e-06], ['rhs->is_string_type()))', 2.598833643460815e-06], ['lhs->base();', 2.598833643460815e-06], ['rhs->base();', 2.598833643460815e-06], ['(lhs->is_abstract()', 2.598833643460815e-06], ['(lhs->is_nil_type()', 2.598833643460815e-06], ['rhs->interface_type()', 2.598833643460815e-06], ['rhs->is_slice_type()', 2.598833643460815e-06], ['rhs->map_type()', 2.598833643460815e-06], ['rhs->function_type()', 2.598833643460815e-06], ['T2.', 2.598833643460815e-06], ['IS_EQUALITY_OP', 2.598833643460815e-06], ['!=,', 2.598833643460815e-06], ['Type::are_compatible_for_comparison(bool', 2.598833643460815e-06], ['is_equality_op,', 2.598833643460815e-06], ['*t2,', 2.598833643460815e-06], ['*reason)', 2.598833643460815e-06], ['!Type::are_assignable(t1,', 2.598833643460815e-06], ['!Type::are_assignable(t2,', 2.598833643460815e-06], ['expression";', 2.598833643460815e-06], ['(!is_equality_op)', 2.598833643460815e-06], ['(t1->integer_type()', 2.598833643460815e-06], ['!t1->is_string_type())', 2.598833643460815e-06], ['non-ordered', 2.598833643460815e-06], ['t1->map_type()', 2.598833643460815e-06], ['t1->function_type()', 2.598833643460815e-06], ['t2->is_slice_type()', 2.598833643460815e-06], ['t2->function_type()', 2.598833643460815e-06], ['(!t1->is_nil_type()', 2.598833643460815e-06], ['!t2->is_nil_type())', 2.598833643460815e-06], ['t2->is_slice_type())', 2.598833643460815e-06], ['_("slice', 2.598833643460815e-06], ['(t1->map_type()', 2.598833643460815e-06], ['_("map', 2.598833643460815e-06], ['_("func', 2.598833643460815e-06], ['Match', 2.598833643460815e-06], ['6g', 2.598833643460815e-06], ['(t1->interface_type()', 2.598833643460815e-06], ['t2->interface_type()', 2.598833643460815e-06], ['reason->c_str());', 2.598833643460815e-06], ['(!t1->is_boolean_type()', 2.598833643460815e-06], ['t1->integer_type()', 2.598833643460815e-06], ['t1->complex_type()', 2.598833643460815e-06], ['!t1->is_string_type()', 2.598833643460815e-06], ['t1->points_to()', 2.598833643460815e-06], ['t1->channel_type()', 2.598833643460815e-06], ['t1->interface_type()', 2.598833643460815e-06], ['t1->struct_type()', 2.598833643460815e-06], ['t1->array_type()', 2.598833643460815e-06], ['!t1->is_nil_type())', 2.598833643460815e-06], ['(t1->unalias()->named_type()', 2.598833643460815e-06], ['t1->unalias()->named_type()->named_type_is_comparable(reason);', 2.598833643460815e-06], ['(t2->unalias()->named_type()', 2.598833643460815e-06], ['t2->unalias()->named_type()->named_type_is_comparable(reason);', 2.598833643460815e-06], ['(t1->struct_type()', 2.598833643460815e-06], ['(t1->struct_type()->is_struct_incomparable())', 2.598833643460815e-06], ['t1->struct_type()->fields();', 2.598833643460815e-06], ['(!p->type()->is_comparable())', 2.598833643460815e-06], ['(t1->array_type()', 2.598833643460815e-06], ['(t1->array_type()->is_array_incomparable())', 2.598833643460815e-06], ['(t1->array_type()->length()->is_nil_expression()', 2.598833643460815e-06], ['!t1->array_type()->element_type()->is_comparable())', 2.598833643460815e-06], ['Type::are_assignable(const', 2.598833643460815e-06], ['(rhs', 2.598833643460815e-06], ['!rhs->is_undefined())', 2.598833643460815e-06], ['(rhs->is_void_type())', 2.598833643460815e-06], ['"non-value', 2.598833643460815e-06], ['value";', 2.598833643460815e-06], ['(rhs->is_call_multiple_result_type())', 2.598833643460815e-06], ['reason->assign(_("multiple-value', 2.598833643460815e-06], ['"single-value', 2.598833643460815e-06], ['!lhs->is_undefined()', 2.598833643460815e-06], ['lhs->is_sink_type())', 2.598833643460815e-06], ['Identical', 2.598833643460815e-06], ['aliases,', 2.598833643460815e-06], ['lhs_orig', 2.598833643460815e-06], ['rhs_orig', 2.598833643460815e-06], ['(((lhs->named_type()', 2.598833643460815e-06], ['(rhs->named_type()', 2.598833643460815e-06], ['lhs->named_type()', 2.598833643460815e-06], ['lhs->interface_type();', 2.598833643460815e-06], ['(lhs_interface_type', 2.598833643460815e-06], ['(lhs_interface_type->implements_interface(rhs,', 2.598833643460815e-06], ['rhs_interface_type', 2.598833643460815e-06], ['rhs->interface_type();', 2.598833643460815e-06], ['(rhs_interface_type', 2.598833643460815e-06], ['lhs_interface_type->is_compatible_for_assign(rhs_interface_type,', 2.598833643460815e-06], ['bidirectional', 2.598833643460815e-06], ['(lhs->channel_type()', 2.598833643460815e-06], ['rhs->channel_type()->may_send()', 2.598833643460815e-06], ['rhs->channel_type()->may_receive()', 2.598833643460815e-06], ['Type::are_identical(lhs->channel_type()->element_type(),', 2.598833643460815e-06], ['rhs->channel_type()->element_type(),', 2.598833643460815e-06], ['reason->empty())', 2.598833643460815e-06], ['(rhs->interface_type()', 2.598833643460815e-06], ['reason->assign(_("need', 2.598833643460815e-06], ['conversion"));', 2.598833643460815e-06], ['(lhs_orig->named_type()', 2.598833643460815e-06], ['rhs_orig->named_type()', 2.598833643460815e-06], ['(lhs_orig->named_type()->name().length()', 2.598833643460815e-06], ['rhs_orig->named_type()->name().length()', 2.598833643460815e-06], ['rhs_orig->named_type()->message_name().c_str(),', 2.598833643460815e-06], ['lhs_orig->named_type()->message_name().c_str());', 2.598833643460815e-06], ['Type::are_convertible(const', 2.598833643460815e-06], ['(Type::are_assignable(lhs,', 2.598833643460815e-06], ['!lhs->points_to()->in_heap()', 2.598833643460815e-06], ['rhs->points_to()->in_heap()', 2.598833643460815e-06], ['!rhs->is_unsafe_pointer_type())', 2.598833643460815e-06], ['reason->assign(_("conversion', 2.598833643460815e-06], ['notinheap', 2.598833643460815e-06], ['((lhs->named_type()', 2.598833643460815e-06], ['lhs->points_to()', 2.598833643460815e-06], ['(lhs->points_to()->named_type()', 2.598833643460815e-06], ['rhs->points_to()->named_type()', 2.598833643460815e-06], ['Type::are_identical(lhs->points_to()->base(),', 2.598833643460815e-06], ['rhs->points_to()->base(),', 2.598833643460815e-06], ['((lhs->integer_type()', 2.598833643460815e-06], ['(lhs->complex_type()', 2.598833643460815e-06], ['[]byte,', 2.598833643460815e-06], ['[]rune,', 2.598833643460815e-06], ['(lhs->is_string_type())', 2.598833643460815e-06], ['(rhs->is_slice_type())', 2.598833643460815e-06], ['rhs->array_type()->element_type()->forwarded();', 2.598833643460815e-06], ['[]byte', 2.598833643460815e-06], ['[]rune.', 2.598833643460815e-06], ['(rhs->is_string_type()', 2.598833643460815e-06], ['lhs->is_slice_type())', 2.598833643460815e-06], ['lhs->array_type()->element_type()->forwarded();', 2.598833643460815e-06], ['(lhs->is_unsafe_pointer_type()', 2.598833643460815e-06], ['rhs->integer_type()', 2.598833643460815e-06], ['(rhs->is_unsafe_pointer_type()', 2.598833643460815e-06], ['lhs->integer_type()', 2.598833643460815e-06], ['(reason->empty())', 2.598833643460815e-06], ['conversion";', 2.598833643460815e-06], ['Type::copy_expressions()', 2.598833643460815e-06], ['at->length()->copy();', 2.598833643460815e-06], ['(sfl', 2.598833643460815e-06], ['Struct_field_list', 2.598833643460815e-06], ['*nsfl', 2.598833643460815e-06], ['pf->type()->copy_expressions();', 2.598833643460815e-06], ['nf(Typed_identifier((pf->is_anonymous()', 2.598833643460815e-06], ['pf->field_name()),', 2.598833643460815e-06], ['ft,', 2.598833643460815e-06], ['pf->location()));', 2.598833643460815e-06], ['(pf->has_tag())', 2.598833643460815e-06], ['nf.set_tag(pf->tag());', 2.598833643460815e-06], ['nsfl->push_back(nf);', 2.598833643460815e-06], ['(ft', 2.598833643460815e-06], ['pf->type())', 2.598833643460815e-06], ['(!changed)', 2.598833643460815e-06], ['delete(nsfl);', 2.598833643460815e-06], ['Type::make_struct_type(nsfl,', 2.598833643460815e-06], ['st->location());', 2.598833643460815e-06], ['Type::hash_for_method(Gogo*', 2.598833643460815e-06], ['t->named_type()->is_alias())', 2.598833643460815e-06], ['t->named_type()->real_type()->hash_for_method(gogo,', 2.598833643460815e-06], ['Type::COMPARE_ALIASES)', 2.598833643460815e-06], ['TYPE_FORWARD;', 2.598833643460815e-06], ['t->classification_;', 2.598833643460815e-06], ['t->do_hash_for_method(gogo,', 2.598833643460815e-06], ['do_hash_for_method.', 2.598833643460815e-06], ['subfields.', 2.598833643460815e-06], ['Type::do_hash_for_method(Gogo*,', 2.598833643460815e-06], ['Type::Type_btypes', 2.598833643460815e-06], ['Type::type_btypes;', 2.598833643460815e-06], ['Type::get_backend(Gogo*', 2.598833643460815e-06], ['this->unalias()->get_backend(gogo);', 2.598833643460815e-06], ['gogo->named_types_are_converted())', 2.598833643460815e-06], ['this->named_type()', 2.598833643460815e-06], ['confusing', 2.598833643460815e-06], ['themselves.', 2.598833643460815e-06], ['(!ins.first->second.is_placeholder)', 2.598833643460815e-06], ['this->finish_backend(gogo,', 2.598833643460815e-06], ['ins.first->second.btype);', 2.598833643460815e-06], ["Struct_type's", 2.598833643460815e-06], ['awkward.', 2.598833643460815e-06], ['(ins.first->first->struct_type()', 2.598833643460815e-06], ['ins.first->first->struct_type()->has_padding())', 2.598833643460815e-06], ['this->struct_type()->set_has_padding();', 2.598833643460815e-06], ['bt)', 2.598833643460815e-06], ['Type::get_btype_without_hash(Gogo*', 2.598833643460815e-06], ['temporarily', 2.598833643460815e-06], ['gogo->backend()->is_circular_pointer_type(bt))', 2.598833643460815e-06], ['!gogo->named_types_are_converted())', 2.598833643460815e-06], ['forcing', 2.598833643460815e-06], ['incomplete.', 2.598833643460815e-06], ['points)', 2.598833643460815e-06], ['Type::get_backend_placeholder(Gogo*', 2.598833643460815e-06], ['manage', 2.598833643460815e-06], ['this->unalias()->get_backend_placeholder(gogo);', 2.598833643460815e-06], ['this->function_type()->location();', 2.598833643460815e-06], ['this->convert<Pointer_type,', 2.598833643460815e-06], ['Type::placeholder_pointers.push_back(pt);', 2.598833643460815e-06], ['promised', 2.598833643460815e-06], ['this->struct_type(),', 2.598833643460815e-06], ['this->array_type(),', 2.598833643460815e-06], ['this->array_type()->get_backend_element(gogo,', 2.598833643460815e-06], ['this->array_type()->get_backend_length(gogo);', 2.598833643460815e-06], ['go_assert(!this->interface_type()->is_empty());', 2.598833643460815e-06], ['this->interface_type(),', 2.598833643460815e-06], ['classifications', 2.598833643460815e-06], ['Type::finish_backend(Gogo*', 2.598833643460815e-06], ['*placeholder)', 2.598833643460815e-06], ['this->struct_type()->finish_backend_fields(gogo);', 2.598833643460815e-06], ['this->array_type()->finish_backend_element(gogo);', 2.598833643460815e-06], ['this->interface_type()->finish_backend_methods(gogo);', 2.598833643460815e-06], ['placeholder;', 2.598833643460815e-06], ['Type::type_descriptor_pointer(Gogo*', 2.598833643460815e-06], ['(t->type_descriptor_var_', 2.598833643460815e-06], ['t->make_type_descriptor_var(gogo);', 2.598833643460815e-06], ['go_assert(t->type_descriptor_var_', 2.598833643460815e-06], ['gogo->backend()->var_expression(t->type_descriptor_var_,', 2.598833643460815e-06], ['ptd_btype', 2.598833643460815e-06], ['gogo->backend()->pointer_type(td_btype);', 2.598833643460815e-06], ['gogo->backend()->convert_expression(ptd_btype,', 2.598833643460815e-06], ['var_addr,', 2.598833643460815e-06], ['Type::Type_descriptor_vars', 2.598833643460815e-06], ['Type::type_descriptor_vars;', 2.598833643460815e-06], ['Type::make_type_descriptor_var(Gogo*', 2.598833643460815e-06], ['go_assert(this->type_descriptor_var_', 2.598833643460815e-06], ['unique,', 2.598833643460815e-06], ['std::pair<Type_descriptor_vars::iterator,', 2.598833643460815e-06], ['Type::type_descriptor_vars.insert(std::make_pair(this,', 2.598833643460815e-06], ['libgo/go-unsafe-pointer.c,', 2.598833643460815e-06], ['asm_name(go_selectively_encode_id(name));', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_reference(name,', 2.598833643460815e-06], ['td_btype,', 2.598833643460815e-06], ['this->do_type_descriptor(gogo,', 2.598833643460815e-06], ['initializer_btype', 2.598833643460815e-06], ['initializer->type()->get_backend(gogo);', 2.598833643460815e-06], ['Linemap::predeclared_location()', 2.598833643460815e-06], ['nt->location();', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_reference(var_name,', 2.598833643460815e-06], ['type_descriptor_var_', 2.598833643460815e-06], ['type_descriptor_pointer', 2.598833643460815e-06], ['INITIALIZER.', 2.598833643460815e-06], ['binitializer', 2.598833643460815e-06], ['initializer->get_backend(&context);', 2.598833643460815e-06], ['gogo->backend()->immutable_struct_set_init(this->type_descriptor_var_,', 2.598833643460815e-06], ['binitializer);', 2.598833643460815e-06], ['*PACKAGE', 2.598833643460815e-06], ['Type::type_descriptor_defined_elsewhere(Named_type*', 2.598833643460815e-06], ['Package**', 2.598833643460815e-06], ['this->points_to()->named_type()', 2.598833643460815e-06], ['this->points_to()->named_type()->named_object()->package()', 2.598833643460815e-06], ['this->points_to()->named_type()->named_object()->package();', 2.598833643460815e-06], ['Type::type_descriptor(Gogo*', 2.598833643460815e-06], ['Type::named_type_descriptor(Gogo*', 2.598833643460815e-06], ['Type::make_builtin_struct_type(int', 2.598833643460815e-06], ['field_name', 2.598833643460815e-06], ['sfl->push_back(Struct_field(Typed_identifier(field_name,', 2.598833643460815e-06], ['bloc)));', 2.598833643460815e-06], ['Type::named_builtin_types;', 2.598833643460815e-06], ['Type::make_builtin_named_type(const', 2.598833643460815e-06], ['Named_object::make_type(name,', 2.598833643460815e-06], ['Type::named_builtin_types.push_back(ret);', 2.598833643460815e-06], ['Type::convert_builtin_named_types(Gogo*', 2.598833643460815e-06], ['Type::named_builtin_types.begin();', 2.598833643460815e-06], ['Type::named_builtin_types.end();', 2.598833643460815e-06], ['tie', 2.598833643460815e-06], ['runtime.Type', 2.598833643460815e-06], ['"_type"', 2.598833643460815e-06], ['libgo/go/runtime/type.go.', 2.598833643460815e-06], ['Type::make_type_descriptor_type()', 2.598833643460815e-06], ['*params', 2.598833643460815e-06], ['named_type_descriptor_type', 2.598833643460815e-06], ['Named_object::make_type_declaration("_type",', 2.598833643460815e-06], ['Type::make_forward_declaration(named_type_descriptor_type);', 2.598833643460815e-06], ['pointer_type_descriptor_type', 2.598833643460815e-06], ['Type::make_pointer_type(ft);', 2.598833643460815e-06], ['concrete', 2.598833643460815e-06], ['"mtyp",', 2.598833643460815e-06], ['"tfn",', 2.598833643460815e-06], ['unsafe_pointer_type);', 2.598833643460815e-06], ['named_method_type', 2.598833643460815e-06], ['Type::make_builtin_named_type("method",', 2.598833643460815e-06], ['method_type);', 2.598833643460815e-06], ['slice_named_method_type', 2.598833643460815e-06], ['Type::make_array_type(named_method_type,', 2.598833643460815e-06], ['uncommon_type', 2.598833643460815e-06], ['slice_named_method_type);', 2.598833643460815e-06], ['named_uncommon_type', 2.598833643460815e-06], ['Type::make_builtin_named_type("uncommonType",', 2.598833643460815e-06], ['uncommon_type);', 2.598833643460815e-06], ['pointer_uncommon_type', 2.598833643460815e-06], ['Type::make_pointer_type(named_uncommon_type);', 2.598833643460815e-06], ['type_descriptor_type', 2.598833643460815e-06], ['Type::make_builtin_struct_type(12,', 2.598833643460815e-06], ['"hash",', 2.598833643460815e-06], ['"align",', 2.598833643460815e-06], ['"fieldAlign",', 2.598833643460815e-06], ['"hashfn",', 2.598833643460815e-06], ['"equalfn",', 2.598833643460815e-06], ['pointer_uint8_type,', 2.598833643460815e-06], ['pointer_uncommon_type,', 2.598833643460815e-06], ['"ptrToThis",', 2.598833643460815e-06], ['pointer_type_descriptor_type);', 2.598833643460815e-06], ['Type::make_builtin_named_type("_type",', 2.598833643460815e-06], ['type_descriptor_type);', 2.598833643460815e-06], ['named_type_descriptor_type->set_type_value(named);', 2.598833643460815e-06], ['named;', 2.598833643460815e-06], ['Type::make_type_descriptor_ptr_type()', 2.598833643460815e-06], ['Type::make_pointer_type(Type::make_type_descriptor_type());', 2.598833643460815e-06], ['size:', 2.598833643460815e-06], ['128.', 2.598833643460815e-06], ['libgo/go/runtime/alg.go.', 2.598833643460815e-06], ['Type::memequal_align(Gogo*', 2.598833643460815e-06], ['tn;', 2.598833643460815e-06], ['"int16";', 2.598833643460815e-06], ['"int32";', 2.598833643460815e-06], ['[2]int64,', 2.598833643460815e-06], ['int64.', 2.598833643460815e-06], ['Type::lookup_integer_type(tn);', 2.598833643460815e-06], ['(!t->backend_type_align(gogo,', 2.598833643460815e-06], ['&ret))', 2.598833643460815e-06], ['comparable', 2.598833643460815e-06], ['Type::needs_specific_type_functions(Gogo*', 2.598833643460815e-06], ['(!this->compare_is_identity(gogo))', 2.598833643460815e-06], ['Linemap::is_predeclared_location(nt->location()))', 2.598833643460815e-06], ['Type::type_functions.', 2.598833643460815e-06], ['128);', 2.598833643460815e-06], ['*HASH_FN', 2.598833643460815e-06], ['*EQUAL_FN', 2.598833643460815e-06], ['HASH_FNTYPE', 2.598833643460815e-06], ['EQUAL_FNTYPE', 2.598833643460815e-06], ['convenience;', 2.598833643460815e-06], ['Type::type_functions(Gogo*', 2.598833643460815e-06], ['unaliased', 2.598833643460815e-06], ['name->unalias()->named_type();', 2.598833643460815e-06], ['(equal_fntype', 2.598833643460815e-06], ['hash_fnname;', 2.598833643460815e-06], ['equal_fnname;', 2.598833643460815e-06], ['(this->compare_is_identity(gogo))', 2.598833643460815e-06], ['Type::needs_specific_type_functions.', 2.598833643460815e-06], ['"runtime.memhash0";', 2.598833643460815e-06], ['"runtime.memequal0";', 2.598833643460815e-06], ['"runtime.memhash8";', 2.598833643460815e-06], ['"runtime.memequal8";', 2.598833643460815e-06], ['16))', 2.598833643460815e-06], ['"runtime.memhash16";', 2.598833643460815e-06], ['"runtime.memequal16";', 2.598833643460815e-06], ['"runtime.memhash32";', 2.598833643460815e-06], ['"runtime.memequal32";', 2.598833643460815e-06], ['64))', 2.598833643460815e-06], ['"runtime.memhash64";', 2.598833643460815e-06], ['"runtime.memequal64";', 2.598833643460815e-06], ['128))', 2.598833643460815e-06], ['"runtime.memhash128";', 2.598833643460815e-06], ['"runtime.memequal128";', 2.598833643460815e-06], ['(build_functions)', 2.598833643460815e-06], ['(this->base()->classification())', 2.598833643460815e-06], ['is_comparable', 2.598833643460815e-06], ['(this->float_type()->bits())', 2.598833643460815e-06], ['"runtime.f32hash";', 2.598833643460815e-06], ['"runtime.f32equal";', 2.598833643460815e-06], ['"runtime.f64hash";', 2.598833643460815e-06], ['"runtime.f64equal";', 2.598833643460815e-06], ['(this->complex_type()->bits())', 2.598833643460815e-06], ['"runtime.c64hash";', 2.598833643460815e-06], ['"runtime.c64equal";', 2.598833643460815e-06], ['"runtime.c128hash";', 2.598833643460815e-06], ['"runtime.c128equal";', 2.598833643460815e-06], ['"runtime.strhash";', 2.598833643460815e-06], ['"runtime.strequal";', 2.598833643460815e-06], ['Type::is_compatible_for_comparison', 2.598833643460815e-06], ['"runtime.nilinterhash";', 2.598833643460815e-06], ['"runtime.nilinterequal";', 2.598833643460815e-06], ['"runtime.interhash";', 2.598833643460815e-06], ['"runtime.interequal";', 2.598833643460815e-06], ['Named_object::make_function_declaration(hash_fnname,', 2.598833643460815e-06], ['(*hash_fn)->func_declaration_value()->set_asm_name(hash_fnname);', 2.598833643460815e-06], ['Named_object::make_function_declaration(equal_fnname,', 2.598833643460815e-06], ['(*equal_fn)->func_declaration_value()->set_asm_name(equal_fnname);', 2.598833643460815e-06], ['Type::Type_functions', 2.598833643460815e-06], ['Type::type_functions_table;', 2.598833643460815e-06], ['Type::specific_type_functions(Gogo*', 2.598833643460815e-06], ['Hash_equal_fn', 2.598833643460815e-06], ['fnull(NULL,', 2.598833643460815e-06], ['Hash_equal_fn>', 2.598833643460815e-06], ['val(name', 2.598833643460815e-06], ['fnull);', 2.598833643460815e-06], ['std::pair<Type_functions::iterator,', 2.598833643460815e-06], ['Type::type_functions_table.insert(val);', 2.598833643460815e-06], ['ins.first->second.first;', 2.598833643460815e-06], ['ins.first->second.second;', 2.598833643460815e-06], ['hash_name;', 2.598833643460815e-06], ['equal_name;', 2.598833643460815e-06], ['gogo->specific_type_function_names(this,', 2.598833643460815e-06], ['&hash_name,', 2.598833643460815e-06], ['&equal_name);', 2.598833643460815e-06], ['this->type_descriptor_defined_elsewhere(name,', 2.598833643460815e-06], ['&package);', 2.598833643460815e-06], ['(is_defined_elsewhere)', 2.598833643460815e-06], ['Named_object::make_function_declaration(hash_name,', 2.598833643460815e-06], ['Named_object::make_function_declaration(equal_name,', 2.598833643460815e-06], ['gogo->declare_package_function(hash_name,', 2.598833643460815e-06], ['gogo->declare_package_function(equal_name,', 2.598833643460815e-06], ['ins.first->second.first', 2.598833643460815e-06], ['*hash_fn;', 2.598833643460815e-06], ['ins.first->second.second', 2.598833643460815e-06], ['*equal_fn;', 2.598833643460815e-06], ['(!is_defined_elsewhere)', 2.598833643460815e-06], ['(gogo->in_global_scope())', 2.598833643460815e-06], ['this->write_specific_type_functions(gogo,', 2.598833643460815e-06], ['gogo->queue_specific_type_function(this,', 2.598833643460815e-06], ['Type::write_specific_type_functions(Gogo*', 2.598833643460815e-06], ['(gogo->specific_type_functions_are_written())', 2.598833643460815e-06], ['go_assert(this->is_comparable());', 2.598833643460815e-06], ['hash_fn', 2.598833643460815e-06], ['gogo->start_function(hash_name,', 2.598833643460815e-06], ['hash_fn->func_value()->set_is_type_specific_function();', 2.598833643460815e-06], ['this->write_identity_hash(gogo,', 2.598833643460815e-06], ['this->write_named_hash(gogo,', 2.598833643460815e-06], ['this->struct_type()->write_hash_function(gogo,', 2.598833643460815e-06], ['this->array_type()->write_hash_function(gogo,', 2.598833643460815e-06], ['gogo->lower_block(hash_fn,', 2.598833643460815e-06], ['gogo->start_function(equal_name,', 2.598833643460815e-06], ['equal_fn->func_value()->set_is_type_specific_function();', 2.598833643460815e-06], ['this->write_identity_equal(gogo,', 2.598833643460815e-06], ['this->write_named_equal(gogo,', 2.598833643460815e-06], ['this->struct_type()->write_equal_function(gogo,', 2.598833643460815e-06], ['this->array_type()->write_equal_function(gogo,', 2.598833643460815e-06], ['gogo->lower_block(equal_fn,', 2.598833643460815e-06], ['hash_fn->func_value()->descriptor(gogo,', 2.598833643460815e-06], ['hash_fn);', 2.598833643460815e-06], ['equal_fn->func_value()->descriptor(gogo,', 2.598833643460815e-06], ['Type::write_identity_hash(Gogo*', 2.598833643460815e-06], ['memhash_fntype', 2.598833643460815e-06], ['Named_object::make_function_declaration("runtime.memhash",', 2.598833643460815e-06], ['memhash_fntype,', 2.598833643460815e-06], ['memhash->func_declaration_value()->set_asm_name("runtime.memhash");', 2.598833643460815e-06], ['Expression::make_func_reference(memhash,', 2.598833643460815e-06], ['Type::write_identity_equal(Gogo*', 2.598833643460815e-06], ['memequal_fntype', 2.598833643460815e-06], ['Named_object::make_function_declaration("runtime.memequal",', 2.598833643460815e-06], ['memequal_fntype,', 2.598833643460815e-06], ['memequal->func_declaration_value()->set_asm_name("runtime.memequal");', 2.598833643460815e-06], ['go_assert(key2_arg', 2.598833643460815e-06], ['key1_ref', 2.598833643460815e-06], ['key2_ref', 2.598833643460815e-06], ['args->push_back(key1_ref);', 2.598833643460815e-06], ['args->push_back(key2_ref);', 2.598833643460815e-06], ['Expression::make_func_reference(memequal,', 2.598833643460815e-06], ['Type::write_named_hash(Gogo*', 2.598833643460815e-06], ['(base_type->is_alias())', 2.598833643460815e-06], ['base_type->real_type()->named_type();', 2.598833643460815e-06], ['name->real_type()->type_functions(gogo,', 2.598833643460815e-06], ['base_type,', 2.598833643460815e-06], ['Type::write_named_equal(Gogo*', 2.598833643460815e-06], ['Type::make_pointer_type(base_type);', 2.598833643460815e-06], ['Expression::make_dereference(t1,', 2.598833643460815e-06], ['Expression::make_dereference(t2,', 2.598833643460815e-06], ['vals->push_back(cond);', 2.598833643460815e-06], ['Type::type_descriptor_constructor(Gogo*', 2.598833643460815e-06], ['td_type->struct_type()->fields();', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_NO_POINTERS;', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_DIRECT_IFACE;', 2.598833643460815e-06], ['(this->needs_gcprog(gogo,', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_GC_PROG;', 2.598833643460815e-06], ['go_assert(p->is_field_name("size"));', 2.598833643460815e-06], ['Expression::Type_info', 2.598833643460815e-06], ['Expression::TYPE_INFO_SIZE;', 2.598833643460815e-06], ['go_assert(p->is_field_name("ptrdata"));', 2.598833643460815e-06], ['Expression::TYPE_INFO_DESCRIPTOR_PTRDATA;', 2.598833643460815e-06], ['go_assert(p->is_field_name("hash"));', 2.598833643460815e-06], ['name->hash_for_method(gogo,', 2.598833643460815e-06], ['this->hash_for_method(gogo,', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_ul(h,', 2.598833643460815e-06], ['go_assert(p->is_field_name("kind"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_ul(runtime_type_kind,', 2.598833643460815e-06], ['go_assert(p->is_field_name("align"));', 2.598833643460815e-06], ['Expression::TYPE_INFO_ALIGNMENT;', 2.598833643460815e-06], ['go_assert(p->is_field_name("fieldAlign"));', 2.598833643460815e-06], ['Expression::TYPE_INFO_FIELD_ALIGNMENT;', 2.598833643460815e-06], ['go_assert(p->is_field_name("hashfn"));', 2.598833643460815e-06], ['go_assert(p->is_field_name("equalfn"));', 2.598833643460815e-06], ['this->type_functions(gogo,', 2.598833643460815e-06], ['(hash_fn', 2.598833643460815e-06], ['vals->push_back(Expression::make_cast(hash_fntype,', 2.598833643460815e-06], ['vals->push_back(Expression::make_func_reference(hash_fn,', 2.598833643460815e-06], ['(equal_fn', 2.598833643460815e-06], ['vals->push_back(Expression::make_cast(equal_fntype,', 2.598833643460815e-06], ['vals->push_back(Expression::make_func_reference(equal_fn,', 2.598833643460815e-06], ['go_assert(p->is_field_name("gcdata"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_gc_symbol(this));', 2.598833643460815e-06], ['go_assert(p->is_field_name("string"));', 2.598833643460815e-06], ['Expression::make_string((name', 2.598833643460815e-06], ['name->reflection(gogo)', 2.598833643460815e-06], ['this->reflection(gogo)),', 2.598833643460815e-06], ['go_assert(p->is_field_name("uncommonType"));', 2.598833643460815e-06], ['name->methods();', 2.598833643460815e-06], ['vals->push_back(this->uncommon_type_constructor(gogo,', 2.598833643460815e-06], ['p->type()->deref(),', 2.598833643460815e-06], ['go_assert(p->is_field_name("ptrToThis"));', 2.598833643460815e-06], ['Type::make_pointer_type(name);', 2.598833643460815e-06], ['Type::make_pointer_type(this);', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(pt,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(td_type,', 2.598833643460815e-06], ['bitmap.', 2.598833643460815e-06], ['libgo/go/reflect/type.go.', 2.598833643460815e-06], ['max_ptrmask_bytes', 2.598833643460815e-06], ['2048;', 2.598833643460815e-06], ['Type::gc_symbol_pointer(Gogo*', 2.598833643460815e-06], ['(!t->has_pointer())', 2.598833643460815e-06], ['gogo->backend()->nil_pointer_expression();', 2.598833643460815e-06], ['(t->gc_symbol_var_', 2.598833643460815e-06], ['t->make_gc_symbol_var(gogo);', 2.598833643460815e-06], ['go_assert(t->gc_symbol_var_', 2.598833643460815e-06], ['gogo->backend()->var_expression(t->gc_symbol_var_,', 2.598833643460815e-06], ['addr_expr', 2.598833643460815e-06], ['addr_expr,', 2.598833643460815e-06], ['Type::GC_symbol_vars', 2.598833643460815e-06], ['Type::gc_symbol_vars;', 2.598833643460815e-06], ['Type::make_gc_symbol_var(Gogo*', 2.598833643460815e-06], ['go_assert(this->gc_symbol_var_', 2.598833643460815e-06], ['std::pair<GC_symbol_vars::iterator,', 2.598833643460815e-06], ['Type::gc_symbol_vars.insert(std::make_pair(this,', 2.598833643460815e-06], ['this->gc_ptrmask_var(gogo,', 2.598833643460815e-06], ['gogo->gc_symbol_name(this);', 2.598833643460815e-06], ['sym_init', 2.598833643460815e-06], ['this->gcprog_constructor(gogo,', 2.598833643460815e-06], ['sym_btype', 2.598833643460815e-06], ['sym_init->type()->get_backend(gogo);', 2.598833643460815e-06], ['gogo->backend()->implicit_variable_reference(sym_name,', 2.598833643460815e-06], ['sym_btype);', 2.598833643460815e-06], ['sym_binit', 2.598833643460815e-06], ['sym_init->get_backend(&context);', 2.598833643460815e-06], ['gogo->backend()->implicit_variable_set_init(this->gc_symbol_var_,', 2.598833643460815e-06], ['sym_binit);', 2.598833643460815e-06], ['*PTRDATA', 2.598833643460815e-06], ['*PTRSIZE', 2.598833643460815e-06], ['Type::needs_gcprog(Gogo*', 2.598833643460815e-06], ['voidptr', 2.598833643460815e-06], ['(!voidptr->backend_type_size(gogo,', 2.598833643460815e-06], ['ptrsize))', 2.598833643460815e-06], ['ptrdata))', 2.598833643460815e-06], ['*ptrdata', 2.598833643460815e-06], ['*ptrsize', 2.598833643460815e-06], ['max_ptrmask_bytes;', 2.598833643460815e-06], ['Ptrmask(size_t', 2.598833643460815e-06], ['bits_((count', 2.598833643460815e-06], ['symname()', 2.598833643460815e-06], ['set(size_t', 2.598833643460815e-06], ['this->bits_.at(index', 2.598833643460815e-06], ['bits_;', 2.598833643460815e-06], ['Ptrmask::set_from(Gogo*', 2.598833643460815e-06], ['this->set((offset', 2.598833643460815e-06], ['coalesce', 2.598833643460815e-06], ['ptrmasks,', 2.598833643460815e-06], ['common.', 2.598833643460815e-06], ['short.', 2.598833643460815e-06], ['U.', 2.598833643460815e-06], ['Ptrmask::symname()', 2.598833643460815e-06], ['chars[33]', 2.598833643460815e-06], ['"abcdefghijklmnopqrstvwxyzABCDEFG";', 2.598833643460815e-06], ['go_assert(chars[32]', 2.598833643460815e-06], ['remaining;', 2.598833643460815e-06], ['Ptrmask::constructor(Gogo*', 2.598833643460815e-06], ['Expression::make_integer_ul(this->bits_.size(),', 2.598833643460815e-06], ['vals->reserve(this->bits_.size());', 2.598833643460815e-06], ['Type::GC_gcbits_vars', 2.598833643460815e-06], ['Type::gc_gcbits_vars;', 2.598833643460815e-06], ['PTRDATA', 2.598833643460815e-06], ['Type::gc_ptrmask_var(Gogo*', 2.598833643460815e-06], ['ptrmask(ptrdata', 2.598833643460815e-06], ['(ptrdata', 2.598833643460815e-06], ['ptrmask.set_from(gogo,', 2.598833643460815e-06], ['gogo->ptrmask_symbol_name(ptrmask.symname());', 2.598833643460815e-06], ['std::pair<GC_gcbits_vars::iterator,', 2.598833643460815e-06], ['Type::gc_gcbits_vars.insert(std::make_pair(sym_name,', 2.598833643460815e-06], ['ptrmask.constructor(gogo);', 2.598833643460815e-06], ['val->get_backend(&context);', 2.598833643460815e-06], ['val->type()->get_backend(gogo);', 2.598833643460815e-06], ['gogo->backend()->implicit_variable_set_init(ret,', 2.598833643460815e-06], ['bval);', 2.598833643460815e-06], ['runGCProg', 2.598833643460815e-06], ['libgo/go/runtime/mbitmap.go.', 2.598833643460815e-06], ['GCProg()', 2.598833643460815e-06], ['bytes_(),', 2.598833643460815e-06], ['index_(0),', 2.598833643460815e-06], ['nb_(0)', 2.598833643460815e-06], ['bit_index()', 2.598833643460815e-06], ['end();', 2.598833643460815e-06], ['ptr(int64_t);', 2.598833643460815e-06], ['should_repeat(int64_t,', 2.598833643460815e-06], ['repeat(int64_t,', 2.598833643460815e-06], ['zero_until(int64_t);', 2.598833643460815e-06], ['lit(unsigned', 2.598833643460815e-06], ['char);', 2.598833643460815e-06], ['varint(int64_t);', 2.598833643460815e-06], ['flushlit();', 2.598833643460815e-06], ['byte(unsigned', 2.598833643460815e-06], ['this->bytes_.push_back(x);', 2.598833643460815e-06], ['max_literal', 2.598833643460815e-06], ['127;', 2.598833643460815e-06], ['bytes_;', 2.598833643460815e-06], ['index_;', 2.598833643460815e-06], ['b_[max_literal];', 2.598833643460815e-06], ['nb_;', 2.598833643460815e-06], ['GCProg::set_from(Gogo*', 2.598833643460815e-06], ['this->ptr((offset', 2.598833643460815e-06], ['counts.', 2.598833643460815e-06], ['(element_type->array_type()', 2.598833643460815e-06], ['!element_type->is_slice_type())', 2.598833643460815e-06], ['(!element_type->array_type()->int_length(&ele_len))', 2.598833643460815e-06], ['element_type->array_type()->element_type();', 2.598833643460815e-06], ['go_assert(len', 2.598833643460815e-06], ['(!this->should_repeat(ele_size', 2.598833643460815e-06], ['Cheaper', 2.598833643460815e-06], ['go_assert((ele_size', 2.598833643460815e-06], ['this->zero_until((offset', 2.598833643460815e-06], ['this->repeat(ele_size', 2.598833643460815e-06], ['GCProg::ptr(int64_t', 2.598833643460815e-06], ['this->zero_until(index);', 2.598833643460815e-06], ['this->lit(1);', 2.598833643460815e-06], ['each,', 2.598833643460815e-06], ['n-bit', 2.598833643460815e-06], ['description.', 2.598833643460815e-06], ['GCProg::should_repeat(int64_t', 2.598833643460815e-06], ['Repeat', 2.598833643460815e-06], ['(including', 2.598833643460815e-06], ['description,', 2.598833643460815e-06], ['total).', 2.598833643460815e-06], ['GCProg::repeat(int64_t', 2.598833643460815e-06], ['char>(n', 2.598833643460815e-06], ['this->byte(0x80);', 2.598833643460815e-06], ['this->varint(n);', 2.598833643460815e-06], ['this->varint(c);', 2.598833643460815e-06], ['GCProg::zero_until(int64_t', 2.598833643460815e-06], ['this->repeat(1,', 2.598833643460815e-06], ['GCProg::lit(unsigned', 2.598833643460815e-06], ['GCProg::max_literal)', 2.598833643460815e-06], ['this->b_[this->nb_]', 2.598833643460815e-06], ['++this->nb_;', 2.598833643460815e-06], ['++this->index_;', 2.598833643460815e-06], ['varint', 2.598833643460815e-06], ['GCProg::varint(int64_t', 2.598833643460815e-06], ['go_assert(x', 2.598833643460815e-06], ['GCProg::flushlit()', 2.598833643460815e-06], ['char>(this->nb_));', 2.598833643460815e-06], ['this->nb_;', 2.598833643460815e-06], ['this->b_[i]', 2.598833643460815e-06], ['((i', 2.598833643460815e-06], ['this->nb_', 2.598833643460815e-06], ['GCProg::end()', 2.598833643460815e-06], ['this->byte(0);', 2.598833643460815e-06], ['GCProg::constructor(Gogo*', 2.598833643460815e-06], ['uint32', 2.598833643460815e-06], ['Expression::make_integer_ul(this->bytes_.size(),', 2.598833643460815e-06], ['"bytes",', 2.598833643460815e-06], ['vals->reserve(this->bytes_.size());', 2.598833643460815e-06], ['this->bytes_.begin();', 2.598833643460815e-06], ['this->bytes_.end();', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_ul(this->bytes_.size(),', 2.598833643460815e-06], ['vals->push_back(bytes);', 2.598833643460815e-06], ['Type::gcprog_constructor(Gogo*', 2.598833643460815e-06], ['prog.end();', 2.598833643460815e-06], ['Expression::make_error(bloc);', 2.598833643460815e-06], ['type_size);', 2.598833643460815e-06], ['prog.constructor(gogo);', 2.598833643460815e-06], ['UNCOMMON_STRUCT_TYPE', 2.598833643460815e-06], ['Type::uncommon_type_constructor(Gogo*', 2.598833643460815e-06], ['uncommon_type,', 2.598833643460815e-06], ['uncommon_type->struct_type()->fields();', 2.598833643460815e-06], ['name->named_object();', 2.598833643460815e-06], ['(name->is_builtin())', 2.598833643460815e-06], ['pkgpath(package', 2.598833643460815e-06], ['Expression::make_string(pkgpath,', 2.598833643460815e-06], ['go_assert(p->is_field_name("methods"));', 2.598833643460815e-06], ['vals->push_back(this->methods_constructor(gogo,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(uncommon_type,', 2.598833643460815e-06], ['Sort_methods', 2.598833643460815e-06], ['m1,', 2.598833643460815e-06], ['m2)', 2.598833643460815e-06], ['(Gogo::unpack_hidden_name(m1.first)', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(m2.first));', 2.598833643460815e-06], ['METHODS_TYPE', 2.598833643460815e-06], ['Type::methods_constructor(Gogo*', 2.598833643460815e-06], ['methods_type,', 2.598833643460815e-06], ['smethods;', 2.598833643460815e-06], ['smethods.reserve(methods->count());', 2.598833643460815e-06], ['(p->second->is_ambiguous())', 2.598833643460815e-06], ['(only_value_methods', 2.598833643460815e-06], ['!p->second->is_value_method())', 2.598833643460815e-06], ['comment,', 2.598833643460815e-06], ['(p->second->nointerface())', 2.598833643460815e-06], ['smethods.push_back(std::make_pair(p->first,', 2.598833643460815e-06], ['(smethods.empty())', 2.598833643460815e-06], ['std::sort(smethods.begin(),', 2.598833643460815e-06], ['smethods.end(),', 2.598833643460815e-06], ['Sort_methods());', 2.598833643460815e-06], ['methods_type->array_type()->element_type();', 2.598833643460815e-06], ['vals->reserve(smethods.size());', 2.598833643460815e-06], ['smethods.begin();', 2.598833643460815e-06], ['smethods.end();', 2.598833643460815e-06], ['vals->push_back(this->method_constructor(gogo,', 2.598833643460815e-06], ['p->first,', 2.598833643460815e-06], ['p->second,', 2.598833643460815e-06], ['METHOD_TYPE', 2.598833643460815e-06], ['METHOD_NAME', 2.598833643460815e-06], ['Type::method_constructor(Gogo*,', 2.598833643460815e-06], ['method_name,', 2.598833643460815e-06], ['method_type->struct_type()->fields();', 2.598833643460815e-06], ['vals->reserve(5);', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(method_name);', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(method_name))', 2.598833643460815e-06], ['Expression::make_string(Gogo::hidden_name_pkgpath(method_name),', 2.598833643460815e-06], ['(m->needs_stub_method()', 2.598833643460815e-06], ['m->stub_object()', 2.598833643460815e-06], ['m->named_object());', 2.598833643460815e-06], ['mtype;', 2.598833643460815e-06], ['go_assert(mtype->is_method());', 2.598833643460815e-06], ['mtype->copy_without_receiver();', 2.598833643460815e-06], ['go_assert(p->is_field_name("mtyp"));', 2.598833643460815e-06], ['go_assert(p->is_field_name("typ"));', 2.598833643460815e-06], ['want_pointer_receiver', 2.598833643460815e-06], ['!only_value_methods', 2.598833643460815e-06], ['m->is_value_method();', 2.598833643460815e-06], ['mtype->copy_with_receiver_as_param(want_pointer_receiver);', 2.598833643460815e-06], ['go_assert(p->is_field_name("tfn"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_func_code_reference(no,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(method_type,', 2.598833643460815e-06], ['Type::plain_type_descriptor(Gogo*', 2.598833643460815e-06], ['this->type_descriptor_constructor(gogo,', 2.598833643460815e-06], ['Type::reflection(Gogo*', 2.598833643460815e-06], ['do_reflection', 2.598833643460815e-06], ['this->do_reflection(gogo,', 2.598833643460815e-06], ['Type::is_backend_type_size_known(Gogo*', 2.598833643460815e-06], ['(!pf->type()->is_backend_type_size_known(gogo))', 2.598833643460815e-06], ['(!at->length()->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(!nc.to_int(&ival))', 2.598833643460815e-06], ['at->element_type()->is_backend_type_size_known(gogo);', 2.598833643460815e-06], ['this->named_type()->convert(gogo);', 2.598833643460815e-06], ['this->named_type()->is_named_backend_type_size_known();', 2.598833643460815e-06], ['fdt', 2.598833643460815e-06], ['this->forward_declaration_type();', 2.598833643460815e-06], ['fdt->real_type()->is_backend_type_size_known(gogo);', 2.598833643460815e-06], ['*PSIZE', 2.598833643460815e-06], ['queries', 2.598833643460815e-06], ['Type::backend_type_size(Gogo*', 2.598833643460815e-06], ['*psize)', 2.598833643460815e-06], ['*psize', 2.598833643460815e-06], ['gogo->backend()->type_size(bt);', 2.598833643460815e-06], ['(*psize', 2.598833643460815e-06], ['go_error_at(this->named_type()->location(),', 2.598833643460815e-06], ['Gogo::message_name(this->named_type()->name()).c_str());', 2.598833643460815e-06], ['this->reflection(gogo).c_str());', 2.598833643460815e-06], ['knock-on', 2.598833643460815e-06], ['TYPE_ERROR;', 2.598833643460815e-06], ['*PALIGN', 2.598833643460815e-06], ['Type::backend_type_align(Gogo*', 2.598833643460815e-06], ['gogo->backend()->type_alignment(bt);', 2.598833643460815e-06], ['backend_type_align,', 2.598833643460815e-06], ['Type::backend_type_field_align(Gogo*', 2.598833643460815e-06], ['gogo->backend()->type_field_alignment(bt);', 2.598833643460815e-06], ['*PPTRDATA', 2.598833643460815e-06], ['Type::backend_type_ptrdata(Gogo*', 2.598833643460815e-06], ['this->base()->backend_type_ptrdata(gogo,', 2.598833643460815e-06], ['(pf->type()->has_pointer())', 2.598833643460815e-06], ['(!ptr->type()->backend_type_ptrdata(gogo,', 2.598833643460815e-06], ['&ptr_ptrdata))', 2.598833643460815e-06], ['Type::make_pointer_type(element_type);', 2.598833643460815e-06], ['(!this->array_type()->length()->numeric_constant_value(&nc))', 2.598833643460815e-06], ['(!nc.to_memory_size(&len))', 2.598833643460815e-06], ['&ele_size)', 2.598833643460815e-06], ['!element_type->backend_type_ptrdata(gogo,', 2.598833643460815e-06], ['&ele_ptrdata))', 2.598833643460815e-06], ['go_assert(ele_size', 2.598833643460815e-06], ['ele_ptrdata', 2.598833643460815e-06], ['backend_type_ptrdata,', 2.598833643460815e-06], ['subtle', 2.598833643460815e-06], ['difference', 2.598833643460815e-06], ['expected.', 2.598833643460815e-06], ['Type::descriptor_ptrdata(Gogo*', 2.598833643460815e-06], ['backend_ptrdata);', 2.598833643460815e-06], ['Type::do_export(Export*)', 2.598833643460815e-06], ['Type::import_type(Import*', 2.598833643460815e-06], ['(imp->match_c_string("("))', 2.598833643460815e-06], ['Function_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("*"))', 2.598833643460815e-06], ['Pointer_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("struct', 2.598833643460815e-06], ['Struct_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("["))', 2.598833643460815e-06], ['Array_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("map', 2.598833643460815e-06], ['Map_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("chan', 2.598833643460815e-06], ['Channel_type::do_import(imp);', 2.598833643460815e-06], ['(imp->match_c_string("interface"))', 2.598833643460815e-06], ['Interface_type::do_import(imp);', 2.598833643460815e-06], ['Error_type.', 2.598833643460815e-06], ['Error_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['Error_type::do_type_descriptor(Gogo*,', 2.598833643460815e-06], ['Expression::make_error(Linemap::predeclared_location());', 2.598833643460815e-06], ['Error_type::do_reflection(Gogo*,', 2.598833643460815e-06], ['Type::make_error_type()', 2.598833643460815e-06], ['Error_type', 2.598833643460815e-06], ['singleton_error_type;', 2.598833643460815e-06], ['&singleton_error_type;', 2.598833643460815e-06], ['Void_type.', 2.598833643460815e-06], ['Void_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['Type::make_void_type()', 2.598833643460815e-06], ['Void_type', 2.598833643460815e-06], ['singleton_void_type;', 2.598833643460815e-06], ['&singleton_void_type;', 2.598833643460815e-06], ['Boolean_type.', 2.598833643460815e-06], ['Boolean_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['gogo->backend()->bool_type();', 2.598833643460815e-06], ['Boolean_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_BOOL,', 2.598833643460815e-06], ['gogo->lookup_global("bool");', 2.598833643460815e-06], ['Boolean_type', 2.598833643460815e-06], ['boolean_type;', 2.598833643460815e-06], ['&boolean_type;', 2.598833643460815e-06], ['Type::lookup_bool_type()', 2.598833643460815e-06], ['Type::make_named_bool_type()', 2.598833643460815e-06], ['Named_object::make_type("bool",', 2.598833643460815e-06], ['named_bool_type', 2.598833643460815e-06], ['Integer_type.', 2.598833643460815e-06], ['Integer_type::Named_integer_types', 2.598833643460815e-06], ['Integer_type::named_integer_types;', 2.598833643460815e-06], ['Integer_type::create_integer_type(const', 2.598833643460815e-06], ['integer_type', 2.598833643460815e-06], ['Integer_type(false,', 2.598833643460815e-06], ['integer_type,', 2.598833643460815e-06], ['std::pair<Named_integer_types::iterator,', 2.598833643460815e-06], ['Integer_type::named_integer_types.insert(std::make_pair(sname,', 2.598833643460815e-06], ['Integer_type::lookup_integer_type(const', 2.598833643460815e-06], ['Named_integer_types::const_iterator', 2.598833643460815e-06], ['Integer_type::named_integer_types.find(name);', 2.598833643460815e-06], ['Integer_type::named_integer_types.end());', 2.598833643460815e-06], ['Integer_type::create_abstract_integer_type()', 2.598833643460815e-06], ['int_type->integer_type()->bits(),', 2.598833643460815e-06], ['Integer_type::create_abstract_character_type()', 2.598833643460815e-06], ['abstract_type->set_is_rune();', 2.598833643460815e-06], ['compatibility.', 2.598833643460815e-06], ['Integer_type::is_identical(const', 2.598833643460815e-06], ['(this->is_unsigned_', 2.598833643460815e-06], ['t->is_unsigned_', 2.598833643460815e-06], ['this->bits_', 2.598833643460815e-06], ['Integer_type::do_hash_for_method(Gogo*,', 2.598833643460815e-06], ['((this->bits_', 2.598833643460815e-06], ['((this->is_unsigned_', 2.598833643460815e-06], ['9));', 2.598833643460815e-06], ['Integer_type', 2.598833643460815e-06], ['Integer_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['(this->is_abstract_)', 2.598833643460815e-06], ['gogo->backend()->integer_type(this->is_unsigned_,', 2.598833643460815e-06], ['Integer_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['Integer_type::do_reflection(Gogo*,', 2.598833643460815e-06], ['Type::make_integer_type(const', 2.598833643460815e-06], ['Integer_type::create_integer_type(name,', 2.598833643460815e-06], ['Type::make_abstract_integer_type()', 2.598833643460815e-06], ['Integer_type::create_abstract_integer_type();', 2.598833643460815e-06], ['Type::make_abstract_character_type()', 2.598833643460815e-06], ['Integer_type::create_abstract_character_type();', 2.598833643460815e-06], ['Type::lookup_integer_type(const', 2.598833643460815e-06], ['Integer_type::lookup_integer_type(name);', 2.598833643460815e-06], ['Float_type.', 2.598833643460815e-06], ['Float_type::Named_float_types', 2.598833643460815e-06], ['Float_type::named_float_types;', 2.598833643460815e-06], ['Float_type::create_float_type(const', 2.598833643460815e-06], ['float_type', 2.598833643460815e-06], ['Float_type(false,', 2.598833643460815e-06], ['float_type,', 2.598833643460815e-06], ['std::pair<Named_float_types::iterator,', 2.598833643460815e-06], ['Float_type::named_float_types.insert(std::make_pair(sname,', 2.598833643460815e-06], ['Float_type::lookup_float_type(const', 2.598833643460815e-06], ['Named_float_types::const_iterator', 2.598833643460815e-06], ['Float_type::named_float_types.find(name);', 2.598833643460815e-06], ['Float_type::named_float_types.end());', 2.598833643460815e-06], ['Float_type::create_abstract_float_type()', 2.598833643460815e-06], ['Float_type(true,', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_FLOAT64);', 2.598833643460815e-06], ['Float_type::is_identical(const', 2.598833643460815e-06], ['Float_type::do_hash_for_method(Gogo*,', 2.598833643460815e-06], ['Float_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['gogo->backend()->float_type(this->bits_);', 2.598833643460815e-06], ['Float', 2.598833643460815e-06], ['Float_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['Float_type::do_reflection(Gogo*,', 2.598833643460815e-06], ['Type::make_float_type(const', 2.598833643460815e-06], ['Float_type::create_float_type(name,', 2.598833643460815e-06], ['Type::make_abstract_float_type()', 2.598833643460815e-06], ['Float_type::create_abstract_float_type();', 2.598833643460815e-06], ['Type::lookup_float_type(const', 2.598833643460815e-06], ['Float_type::lookup_float_type(name);', 2.598833643460815e-06], ['Complex_type.', 2.598833643460815e-06], ['Complex_type::Named_complex_types', 2.598833643460815e-06], ['Complex_type::named_complex_types;', 2.598833643460815e-06], ['Complex_type::create_complex_type(const', 2.598833643460815e-06], ['Complex_type(false,', 2.598833643460815e-06], ['std::pair<Named_complex_types::iterator,', 2.598833643460815e-06], ['Complex_type::named_complex_types.insert(std::make_pair(sname,', 2.598833643460815e-06], ['Complex_type::lookup_complex_type(const', 2.598833643460815e-06], ['Named_complex_types::const_iterator', 2.598833643460815e-06], ['Complex_type::named_complex_types.find(name);', 2.598833643460815e-06], ['Complex_type::named_complex_types.end());', 2.598833643460815e-06], ['Complex_type::create_abstract_complex_type()', 2.598833643460815e-06], ['Complex_type(true,', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_COMPLEX128);', 2.598833643460815e-06], ['Complex_type::is_identical(const', 2.598833643460815e-06], ['Complex_type', 2.598833643460815e-06], ['Complex_type::do_hash_for_method(Gogo*,', 2.598833643460815e-06], ['Complex_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['gogo->backend()->complex_type(this->bits_);', 2.598833643460815e-06], ['Complex_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['Complex_type::do_reflection(Gogo*,', 2.598833643460815e-06], ['Type::make_complex_type(const', 2.598833643460815e-06], ['Complex_type::create_complex_type(name,', 2.598833643460815e-06], ['Type::make_abstract_complex_type()', 2.598833643460815e-06], ['Complex_type::create_abstract_complex_type();', 2.598833643460815e-06], ['Type::lookup_complex_type(const', 2.598833643460815e-06], ['Complex_type::lookup_complex_type(name);', 2.598833643460815e-06], ['String_type.', 2.598833643460815e-06], ['String_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['(backend_string_type', 2.598833643460815e-06], ['fields(2);', 2.598833643460815e-06], ['Type::make_pointer_type(b);', 2.598833643460815e-06], ['pb->get_backend_placeholder(gogo);', 2.598833643460815e-06], ['pb->finish_backend(gogo,', 2.598833643460815e-06], ['bt);', 2.598833643460815e-06], ['"__data";', 2.598833643460815e-06], ['pb->get_backend(gogo);', 2.598833643460815e-06], ['fields[1].name', 2.598833643460815e-06], ['"__length";', 2.598833643460815e-06], ['fields[1].btype', 2.598833643460815e-06], ['fields[1].location', 2.598833643460815e-06], ['fields[0].location;', 2.598833643460815e-06], ['backend_string_type', 2.598833643460815e-06], ['String_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_STRING,', 2.598833643460815e-06], ['gogo->lookup_global("string");', 2.598833643460815e-06], ['String_type::do_reflection(Gogo*,', 2.598833643460815e-06], ['Type::make_string_type()', 2.598833643460815e-06], ['&string_type;', 2.598833643460815e-06], ['Type::lookup_string_type()', 2.598833643460815e-06], ['Type::make_named_string_type()', 2.598833643460815e-06], ['Named_object::make_type("string",', 2.598833643460815e-06], ['string_type,', 2.598833643460815e-06], ['named_string_type', 2.598833643460815e-06], ['Sink_type()', 2.598833643460815e-06], ['Type(TYPE_SINK)', 2.598833643460815e-06], ['do_get_backend(Gogo*)', 2.598833643460815e-06], ['Type::make_sink_type()', 2.598833643460815e-06], ['sink_type;', 2.598833643460815e-06], ['&sink_type;', 2.598833643460815e-06], ['Function_type.', 2.598833643460815e-06], ['Function_type::do_traverse(Traverse*', 2.598833643460815e-06], ['Type::traverse(this->receiver_->type(),', 2.598833643460815e-06], ['this->parameters_->traverse(traverse)', 2.598833643460815e-06], ['this->results_->traverse(traverse)', 2.598833643460815e-06], ['brief', 2.598833643460815e-06], ['explanation', 2.598833643460815e-06], ['Function_type::is_valid_redeclaration(const', 2.598833643460815e-06], ['(!this->is_identical(t,', 2.598833643460815e-06], ['COMPARE_TAGS,', 2.598833643460815e-06], ['(this->receiver()', 2.598833643460815e-06], ['this->receiver()->name()', 2.598833643460815e-06], ['t->receiver()->name())', 2.598833643460815e-06], ['"receiver', 2.598833643460815e-06], ['p2->name())', 2.598833643460815e-06], ['"parameter', 2.598833643460815e-06], ['p1->type()->forwarded();', 2.598833643460815e-06], ['p2->type()->forwarded();', 2.598833643460815e-06], ['(res1->name()', 2.598833643460815e-06], ['res2->name())', 2.598833643460815e-06], ['"result', 2.598833643460815e-06], ['res1->type()->forwarded();', 2.598833643460815e-06], ['res2->type()->forwarded();', 2.598833643460815e-06], ['Function_type::is_identical(const', 2.598833643460815e-06], ['ignore_receiver,', 2.598833643460815e-06], ['(this->is_backend_function_type()', 2.598833643460815e-06], ['t->is_backend_function_type())', 2.598833643460815e-06], ['(!ignore_receiver)', 2.598833643460815e-06], ['r2', 2.598833643460815e-06], ['t->receiver();', 2.598833643460815e-06], ['((r1', 2.598833643460815e-06], ['(r2', 2.598833643460815e-06], ['(!Type::are_identical(r1->type(),', 2.598833643460815e-06], ['r2->type(),', 2.598833643460815e-06], ['!reason->empty())', 2.598833643460815e-06], ['"receiver:', 2.598833643460815e-06], ['parms1->empty())', 2.598833643460815e-06], ['parms2->empty())', 2.598833643460815e-06], ['((parms1', 2.598833643460815e-06], ['(!Type::are_identical(p1->type(),', 2.598833643460815e-06], ['t->is_varargs())', 2.598833643460815e-06], ['varargs");', 2.598833643460815e-06], ['results1->empty())', 2.598833643460815e-06], ['results2->empty())', 2.598833643460815e-06], ['((results1', 2.598833643460815e-06], ['(!Type::are_identical(res1->type(),', 2.598833643460815e-06], ['res2->type(),', 2.598833643460815e-06], ['Function_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['Function_type::Results_hash::operator()(const', 2.598833643460815e-06], ['t->begin();', 2.598833643460815e-06], ['t->end();', 2.598833643460815e-06], ['hash);', 2.598833643460815e-06], ['p->type()->hash_for_method(NULL,', 2.598833643460815e-06], ['Function_type::Results_equal::operator()(const', 2.598833643460815e-06], ['(a->size()', 2.598833643460815e-06], ['b->size())', 2.598833643460815e-06], ['a->begin();', 2.598833643460815e-06], ['b->begin();', 2.598833643460815e-06], ['b->end();', 2.598833643460815e-06], ['(pa->name()', 2.598833643460815e-06], ['pb->name()', 2.598833643460815e-06], ['!Type::are_identical(pa->type(),', 2.598833643460815e-06], ['pb->type(),', 2.598833643460815e-06], ['Function_type::Results_structs', 2.598833643460815e-06], ['Function_type::results_structs;', 2.598833643460815e-06], ['Function_type::get_backend_fntype(Gogo*', 2.598833643460815e-06], ['(this->fnbtype_', 2.598833643460815e-06], ['breceiver;', 2.598833643460815e-06], ['breceiver.name', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(this->receiver_->name());', 2.598833643460815e-06], ['breceiver.btype', 2.598833643460815e-06], ['rtype->get_backend(gogo);', 2.598833643460815e-06], ['breceiver.location', 2.598833643460815e-06], ['this->receiver_->location();', 2.598833643460815e-06], ['bparameters;', 2.598833643460815e-06], ['bparameters.resize(this->parameters_->size());', 2.598833643460815e-06], ['bparameters[i].name', 2.598833643460815e-06], ['bparameters[i].btype', 2.598833643460815e-06], ['bparameters[i].location', 2.598833643460815e-06], ['bparameters.size());', 2.598833643460815e-06], ['bresults;', 2.598833643460815e-06], ['bresults.resize(this->results_->size());', 2.598833643460815e-06], ['bresults[i].name', 2.598833643460815e-06], ['bresults[i].btype', 2.598833643460815e-06], ['bresults[i].location', 2.598833643460815e-06], ['bresults.size());', 2.598833643460815e-06], ['unify', 2.598833643460815e-06], ['std::pair<Typed_identifier_list*,', 2.598833643460815e-06], ['Btype*>', 2.598833643460815e-06], ['val.second', 2.598833643460815e-06], ['std::pair<Results_structs::iterator,', 2.598833643460815e-06], ['Function_type::results_structs.insert(val);', 2.598833643460815e-06], ['(tid.name().empty())', 2.598833643460815e-06], ['Typed_identifier("UNNAMED",', 2.598833643460815e-06], ['tid.type(),', 2.598833643460815e-06], ['st->get_backend(gogo);', 2.598833643460815e-06], ['this->fnbtype_', 2.598833643460815e-06], ['gogo->backend()->function_type(breceiver,', 2.598833643460815e-06], ['bparameters,', 2.598833643460815e-06], ['bresults,', 2.598833643460815e-06], ['bresult_struct,', 2.598833643460815e-06], ['this->fnbtype_;', 2.598833643460815e-06], ['Function_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['gogo->backend()->placeholder_struct_type("__go_descriptor",', 2.598833643460815e-06], ['ptr_struct_type', 2.598833643460815e-06], ['gogo->backend()->pointer_type(struct_type);', 2.598833643460815e-06], ['fields(1);', 2.598833643460815e-06], ['"code";', 2.598833643460815e-06], ['this->get_backend_fntype(gogo);', 2.598833643460815e-06], ['(!gogo->backend()->set_placeholder_struct_type(struct_type,', 2.598833643460815e-06], ['fields))', 2.598833643460815e-06], ['ptr_struct_type;', 2.598833643460815e-06], ['Function_type::make_function_type_descriptor_type()', 2.598833643460815e-06], ['Type::make_array_type(ptdt,', 2.598833643460815e-06], ['"dotdotdot",', 2.598833643460815e-06], ['"in",', 2.598833643460815e-06], ['slice_type,', 2.598833643460815e-06], ['"out",', 2.598833643460815e-06], ['Type::make_builtin_named_type("FuncType",', 2.598833643460815e-06], ['Function_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['ftdt', 2.598833643460815e-06], ['ftdt->struct_type()->fields();', 2.598833643460815e-06], ['vals->reserve(4);', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_FUNC,', 2.598833643460815e-06], ['go_assert(p->is_field_name("dotdotdot"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_boolean(this->is_varargs(),', 2.598833643460815e-06], ['go_assert(p->is_field_name("in"));', 2.598833643460815e-06], ['this->receiver(),', 2.598833643460815e-06], ['this->parameters()));', 2.598833643460815e-06], ['go_assert(p->is_field_name("out"));', 2.598833643460815e-06], ['this->results()));', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(ftdt,', 2.598833643460815e-06], ['Function_type::type_descriptor_params(Type*', 2.598833643460815e-06], ['params_type,', 2.598833643460815e-06], ['params)', 2.598833643460815e-06], ['vals->reserve((params', 2.598833643460815e-06], ['params->size())', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(receiver->type(),', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(p->type(),', 2.598833643460815e-06], ['Function_type::do_reflection(Gogo*', 2.598833643460815e-06], ['straighten', 2.598833643460815e-06], ['go_assert(this->receiver_', 2.598833643460815e-06], ['this->append_reflection(this->receiver_->type(),', 2.598833643460815e-06], ['params->begin())', 2.598833643460815e-06], ['ret->append("...");', 2.598833643460815e-06], ['this->append_reflection(p->type()->array_type()->element_type(),', 2.598833643460815e-06], ['results->begin())', 2.598833643460815e-06], ['Function_type::do_export(Export*', 2.598833643460815e-06], ['Function::export_func.', 2.598833643460815e-06], ['this->parameters_->end())', 2.598833643460815e-06], ['Function_type::do_import(Import*', 2.598833643460815e-06], ['Function_type::copy_without_receiver()', 2.598833643460815e-06], ['ret->set_is_builtin();', 2.598833643460815e-06], ['Function_type::copy_with_receiver(Type*', 2.598833643460815e-06], ['receiver_type)', 2.598833643460815e-06], ['Typed_identifier("",', 2.598833643460815e-06], ['Function_type::copy_with_receiver_as_param(bool', 2.598833643460815e-06], ['want_pointer_receiver)', 2.598833643460815e-06], ['(want_pointer_receiver)', 2.598833643460815e-06], ['receiver(this->receiver_->name(),', 2.598833643460815e-06], ['this->receiver_->location());', 2.598833643460815e-06], ['new_params->push_back(receiver);', 2.598833643460815e-06], ['new_params->push_back(*p);', 2.598833643460815e-06], ['Function_type::copy_with_names()', 2.598833643460815e-06], ['Type::make_function_type(Typed_identifier*', 2.598833643460815e-06], ['Function_type(receiver,', 2.598833643460815e-06], ['Type::make_backend_function_type(Typed_identifier*', 2.598833643460815e-06], ['Backend_function_type(receiver,', 2.598833643460815e-06], ['Pointer_type.', 2.598833643460815e-06], ['Pointer_type::do_traverse(Traverse*', 2.598833643460815e-06], ['Type::traverse(this->to_type_,', 2.598833643460815e-06], ['Pointer_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['this->to_type_->hash_for_method(gogo,', 2.598833643460815e-06], ['Pointer_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['to_btype', 2.598833643460815e-06], ['this->to_type_->get_backend(gogo);', 2.598833643460815e-06], ['gogo->backend()->pointer_type(to_btype);', 2.598833643460815e-06], ['Pointer_type::make_pointer_type_descriptor_type()', 2.598833643460815e-06], ['Type::make_builtin_named_type("PtrType",', 2.598833643460815e-06], ['Pointer_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UNSAFE_POINTER,', 2.598833643460815e-06], ['this->points_to();', 2.598833643460815e-06], ['(deref->named_type()', 2.598833643460815e-06], ['deref->named_type()->methods();', 2.598833643460815e-06], ['(deref->struct_type()', 2.598833643460815e-06], ['deref->struct_type()->methods();', 2.598833643460815e-06], ['ptr_tdt', 2.598833643460815e-06], ['ptr_tdt->struct_type()->fields();', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_PTR,', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(deref,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(ptr_tdt,', 2.598833643460815e-06], ['Pointer_type::do_reflection(Gogo*', 2.598833643460815e-06], ['this->append_reflection(this->to_type_,', 2.598833643460815e-06], ['Pointer_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("*");', 2.598833643460815e-06], ['exp->write_c_string("any");', 2.598833643460815e-06], ['exp->write_type(this->to_type_);', 2.598833643460815e-06], ['Pointer_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("*");', 2.598833643460815e-06], ['(imp->match_c_string("any"))', 2.598833643460815e-06], ['Type::make_pointer_type(to);', 2.598833643460815e-06], ['Cache', 2.598833643460815e-06], ['"to"', 2.598833643460815e-06], ['Type::Pointer_type_table', 2.598833643460815e-06], ['Type::pointer_types;', 2.598833643460815e-06], ['std::vector<Pointer_type*>', 2.598833643460815e-06], ['Type::placeholder_pointers;', 2.598833643460815e-06], ['Type::make_pointer_type(Type*', 2.598833643460815e-06], ['Pointer_type_table::const_iterator', 2.598833643460815e-06], ['pointer_types.find(to_type);', 2.598833643460815e-06], ['pointer_types.end())', 2.598833643460815e-06], ['Pointer_type(to_type);', 2.598833643460815e-06], ['pointer_types[to_type]', 2.598833643460815e-06], ['converted,', 2.598833643460815e-06], ['cache.', 2.598833643460815e-06], ['motivation', 2.598833643460815e-06], ['routine:', 2.598833643460815e-06], ['pointer-to-void),', 2.598833643460815e-06], ['Type::backend_type_size()', 2.598833643460815e-06], ['it),', 2.598833643460815e-06], ['Type::finish_backend', 2.598833643460815e-06], ['(hence', 2.598833643460815e-06], ['remains', 2.598833643460815e-06], ['placeholder).', 2.598833643460815e-06], ['Type::finish_pointer_types(Gogo*', 2.598833643460815e-06], ['Type::placeholder_pointers.size();', 2.598833643460815e-06], ['Type::placeholder_pointers[i];', 2.598833643460815e-06], ['Type_btypes::iterator', 2.598833643460815e-06], ['tbti', 2.598833643460815e-06], ['Type::type_btypes.find(pt);', 2.598833643460815e-06], ['(tbti', 2.598833643460815e-06], ['Type::type_btypes.end()', 2.598833643460815e-06], ['tbti->second.is_placeholder)', 2.598833643460815e-06], ['pt->finish_backend(gogo,', 2.598833643460815e-06], ['tbti->second.btype);', 2.598833643460815e-06], ['tbti->second.is_placeholder', 2.598833643460815e-06], ['Nil_type.', 2.598833643460815e-06], ['called?', 2.598833643460815e-06], ['Nil_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['gogo->backend()->pointer_type(gogo->backend()->void_type());', 2.598833643460815e-06], ['Type::make_nil_type()', 2.598833643460815e-06], ['Nil_type', 2.598833643460815e-06], ['singleton_nil_type;', 2.598833643460815e-06], ['&singleton_nil_type;', 2.598833643460815e-06], ['Call_multiple_result_type(Call_expression*', 2.598833643460815e-06], ['Type(TYPE_CALL_MULTIPLE_RESULT),', 2.598833643460815e-06], ['call_(call)', 2.598833643460815e-06], ['do_has_pointer()', 2.598833643460815e-06], ['do_get_backend(Gogo*', 2.598833643460815e-06], ['Expression::make_error(Linemap::unknown_location());', 2.598833643460815e-06], ['call_;', 2.598833643460815e-06], ['Type::make_call_multiple_result_type(Call_expression*', 2.598833643460815e-06], ['Call_multiple_result_type(call);', 2.598833643460815e-06], ['Struct_field.', 2.598833643460815e-06], ['Struct_field::field_name()', 2.598833643460815e-06], ['name(this->typed_identifier_.name());', 2.598833643460815e-06], ['lowered,', 2.598833643460815e-06], ['Very', 2.598833643460815e-06], ['ugly.', 2.598833643460815e-06], ['static_cast<Pointer_type*>(t);', 2.598833643460815e-06], ['(dt->forward_declaration_type()', 2.598833643460815e-06], ['dt->forward_declaration_type()->name();', 2.598833643460815e-06], ['(dt->named_type()', 2.598833643460815e-06], ['dt->named_type()->name();', 2.598833643460815e-06], ['dt->is_error_type())', 2.598833643460815e-06], ['error_string', 2.598833643460815e-06], ['"*error*";', 2.598833643460815e-06], ['error_string;', 2.598833643460815e-06], ['DT', 2.598833643460815e-06], ['go_assert(t', 2.598833643460815e-06], ['dt);', 2.598833643460815e-06], ['t->forward_declaration_type()->name();', 2.598833643460815e-06], ['t->named_type()->name();', 2.598833643460815e-06], ['Struct_field::is_field_name(const', 2.598833643460815e-06], ['me(this->typed_identifier_.name());', 2.598833643460815e-06], ['(!me.empty())', 2.598833643460815e-06], ['me', 2.598833643460815e-06], ['horrible', 2.598833643460815e-06], ['(!this->is_imported_', 2.598833643460815e-06], ['Struct_field::is_unexported_field_name(Gogo*', 2.598833643460815e-06], ['field_name(this->field_name());', 2.598833643460815e-06], ['(Gogo::is_hidden_name(field_name)', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(field_name)', 2.598833643460815e-06], ['field_name)', 2.598833643460815e-06], ['is_field_name,', 2.598833643460815e-06], ['this->is_imported_,', 2.598833643460815e-06], ['(this->is_imported_', 2.598833643460815e-06], ['this->is_anonymous())', 2.598833643460815e-06], ['Struct_field::is_embedded_builtin(Gogo*', 2.598833643460815e-06], ['name(this->field_name());', 2.598833643460815e-06], ['anonymous.', 2.598833643460815e-06], ["field's", 2.598833643460815e-06], ['(this->is_anonymous()', 2.598833643460815e-06], ['gogo->lookup_global(name.c_str())', 2.598833643460815e-06], ['Struct_type.', 2.598833643460815e-06], ['Struct_type::Identical_structs', 2.598833643460815e-06], ['Struct_type::identical_structs;', 2.598833643460815e-06], ['Struct_type::Struct_method_tables', 2.598833643460815e-06], ['Struct_type::struct_method_tables;', 2.598833643460815e-06], ['Struct_type::do_traverse(Traverse*', 2.598833643460815e-06], ['Struct_type::do_verify()', 2.598833643460815e-06], ['((t->named_type()', 2.598833643460815e-06], ['t->points_to()->points_to()', 2.598833643460815e-06], ['pointer");', 2.598833643460815e-06], ['Struct_type::do_has_pointer()', 2.598833643460815e-06], ['Struct_type::is_identical(const', 2.598833643460815e-06], ['(this->is_struct_incomparable_', 2.598833643460815e-06], ['t->is_struct_incomparable_)', 2.598833643460815e-06], ['t->fields();', 2.598833643460815e-06], ['(fields1', 2.598833643460815e-06], ['fields2;', 2.598833643460815e-06], ['pf2', 2.598833643460815e-06], ['fields2->begin();', 2.598833643460815e-06], ['fields1->begin();', 2.598833643460815e-06], ['fields1->end();', 2.598833643460815e-06], ['++pf1,', 2.598833643460815e-06], ['++pf2)', 2.598833643460815e-06], ['(pf1->field_name()', 2.598833643460815e-06], ['pf2->field_name())', 2.598833643460815e-06], ['(pf1->is_anonymous()', 2.598833643460815e-06], ['pf2->is_anonymous()', 2.598833643460815e-06], ['!Type::are_identical(pf1->type(),', 2.598833643460815e-06], ['pf2->type(),', 2.598833643460815e-06], ['Type::COMPARE_TAGS)', 2.598833643460815e-06], ['(!pf1->has_tag())', 2.598833643460815e-06], ['(pf2->has_tag())', 2.598833643460815e-06], ['(!pf2->has_tag())', 2.598833643460815e-06], ['(pf1->tag()', 2.598833643460815e-06], ['pf2->tag())', 2.598833643460815e-06], ['Struct_type::do_compare_is_identity(Gogo*', 2.598833643460815e-06], ['(!pf->type()->compare_is_identity(gogo))', 2.598833643460815e-06], ['(!pf->type()->backend_type_align(gogo,', 2.598833643460815e-06], ['((offset', 2.598833643460815e-06], ['struct_size;', 2.598833643460815e-06], ['&struct_size))', 2.598833643460815e-06], ['struct_size)', 2.598833643460815e-06], ['Trailing', 2.598833643460815e-06], ['Struct_type::do_is_reflexive()', 2.598833643460815e-06], ['(!pf->type()->is_reflexive())', 2.598833643460815e-06], ['Struct_type::do_needs_key_update()', 2.598833643460815e-06], ['(pf->type()->needs_key_update())', 2.598833643460815e-06], ['Struct_type::do_hash_might_panic()', 2.598833643460815e-06], ['(pf->type()->hash_might_panic())', 2.598833643460815e-06], ['Struct_type::do_in_heap()', 2.598833643460815e-06], ['(!pf->type()->in_heap())', 2.598833643460815e-06], ['Struct_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['(this->fields()', 2.598833643460815e-06], ['this->fields()->begin();', 2.598833643460815e-06], ['this->fields()->end();', 2.598833643460815e-06], ['pf->type()->hash_for_method(gogo,', 2.598833643460815e-06], ['Struct_type::find_local_field(const', 2.598833643460815e-06], ['*pindex)', 2.598833643460815e-06], ['(pindex', 2.598833643460815e-06], ['STRUCT_EXPR,', 2.598833643460815e-06], ['Struct_type::field_reference(Expression*', 2.598833643460815e-06], ['depth;', 2.598833643460815e-06], ['this->field_reference_depth(struct_expr,', 2.598833643460815e-06], ['&depth);', 2.598833643460815e-06], ['Struct_type::field_reference_depth(Expression*', 2.598833643460815e-06], ['depth)', 2.598833643460815e-06], ['pf->type()->deref()->struct_type();', 2.598833643460815e-06], ['hold_saw', 2.598833643460815e-06], ['Saw_named_type', 2.598833643460815e-06], ['saw_here;', 2.598833643460815e-06], ['q->next)', 2.598833643460815e-06], ['(q->nt', 2.598833643460815e-06], ['saw_here.next', 2.598833643460815e-06], ['saw_here.nt', 2.598833643460815e-06], ['&saw_here;', 2.598833643460815e-06], ['st->field_reference_depth(NULL,', 2.598833643460815e-06], ['&subdepth);', 2.598833643460815e-06], ['hold_saw;', 2.598833643460815e-06], ['(sub', 2.598833643460815e-06], ['subdepth', 2.598833643460815e-06], ['(pf->type()->points_to()', 2.598833643460815e-06], ['Expression::make_dereference(here,', 2.598833643460815e-06], ['(sub->expr()', 2.598833643460815e-06], ['sub->expr()->deref()->field_reference_expression();', 2.598833643460815e-06], ['go_assert(sub', 2.598833643460815e-06], ['sub->set_struct_expression(here);', 2.598833643460815e-06], ['sub->set_implicit(true);', 2.598833643460815e-06], ['(subdepth', 2.598833643460815e-06], ['here--it', 2.598833643460815e-06], ['Type::bind_field_or_method.', 2.598833643460815e-06], ['Struct_type::total_field_count()', 2.598833643460815e-06], ['(this->fields_', 2.598833643460815e-06], ['(!pf->is_anonymous()', 2.598833643460815e-06], ['pf->type()->struct_type()', 2.598833643460815e-06], ['pf->type()->struct_type()->total_field_count();', 2.598833643460815e-06], ['Struct_type::is_unexported_local_field(Gogo*', 2.598833643460815e-06], ['(pf->is_unexported_field_name(gogo,', 2.598833643460815e-06], ['Struct_type::finalize_methods(Gogo*', 2.598833643460815e-06], ['std::pair<Identical_structs::iterator,', 2.598833643460815e-06], ['Struct_type::identical_structs.insert(std::make_pair(this,', 2.598833643460815e-06], ['entered', 2.598833643460815e-06], ['fortunately,', 2.598833643460815e-06], ['ins.first->second->all_methods_;', 2.598833643460815e-06], ['Struct_type::method_function(const', 2.598833643460815e-06], ['Struct_type::interface_method_table(Interface_type*', 2.598833643460815e-06], ['std::pair<Struct_type*,', 2.598833643460815e-06], ['Struct_type::Struct_method_table_pair*>', 2.598833643460815e-06], ['val(this,', 2.598833643460815e-06], ['std::pair<Struct_type::Struct_method_tables::iterator,', 2.598833643460815e-06], ['Struct_type::struct_method_tables.insert(val);', 2.598833643460815e-06], ['Struct_method_table_pair*', 2.598833643460815e-06], ['Struct_method_table_pair();', 2.598833643460815e-06], ['smtp->first', 2.598833643460815e-06], ['smtp->second', 2.598833643460815e-06], ['&smtp->first,', 2.598833643460815e-06], ['&smtp->second);', 2.598833643460815e-06], ['type->fields();', 2.598833643460815e-06], ['bfields->resize(fields->size());', 2.598833643460815e-06], ['(*bfields)[i].name', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(p->field_name());', 2.598833643460815e-06], ['(*bfields)[i].btype', 2.598833643460815e-06], ['p->type()->get_backend_placeholder(gogo)', 2.598833643460815e-06], ['p->type()->get_backend(gogo));', 2.598833643460815e-06], ['(*bfields)[i].location', 2.598833643460815e-06], ['gogo->backend()->type_size((*bfields)[i].btype);', 2.598833643460815e-06], ['(lastsize', 2.598833643460815e-06], ['fields->size());', 2.598833643460815e-06], ['(saw_nonzero', 2.598833643460815e-06], ['nonzero-sized', 2.598833643460815e-06], ['manufacture', 2.598833643460815e-06], ['9401.', 2.598833643460815e-06], ['fields->size();', 2.598833643460815e-06], ['bfields->resize(n', 2.598833643460815e-06], ['(*bfields)[n].name', 2.598833643460815e-06], ['"_";', 2.598833643460815e-06], ['(*bfields)[n].btype', 2.598833643460815e-06], ['(*bfields)[n].location', 2.598833643460815e-06], ['(*bfields)[n-1].location;', 2.598833643460815e-06], ['type->set_has_padding();', 2.598833643460815e-06], ['Struct_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['Struct_type::finish_backend_fields(Gogo*', 2.598833643460815e-06], ['Struct_type::make_struct_type_descriptor_type()', 2.598833643460815e-06], ['"tag",', 2.598833643460815e-06], ['"offsetAnon",', 2.598833643460815e-06], ['nsf', 2.598833643460815e-06], ['Type::make_builtin_named_type("structField",', 2.598833643460815e-06], ['Type::make_array_type(nsf,', 2.598833643460815e-06], ['"fields",', 2.598833643460815e-06], ['Type::make_builtin_named_type("StructType",', 2.598833643460815e-06], ['Struct_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['methods--the', 2.598833643460815e-06], ['go_assert(methods', 2.598833643460815e-06], ['go_assert(ps->is_field_name("_type"));', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_STRUCT,', 2.598833643460815e-06], ['go_assert(ps->is_field_name("fields"));', 2.598833643460815e-06], ['elements->reserve(this->fields_->size());', 2.598833643460815e-06], ['ps->type()->array_type()->element_type();', 2.598833643460815e-06], ['element_type->struct_type()->fields();', 2.598833643460815e-06], ['fvals', 2.598833643460815e-06], ['fvals->reserve(5);', 2.598833643460815e-06], ['f->begin();', 2.598833643460815e-06], ['go_assert(q->is_field_name("name"));', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(pf->field_name());', 2.598833643460815e-06], ['go_assert(q->is_field_name("pkgPath"));', 2.598833643460815e-06], ['is_embedded_builtin', 2.598833643460815e-06], ['pf->is_embedded_builtin(gogo);', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(pf->field_name())', 2.598833643460815e-06], ['!is_embedded_builtin)', 2.598833643460815e-06], ['(is_embedded_builtin)', 2.598833643460815e-06], ['Gogo::hidden_name_pkgpath(pf->field_name());', 2.598833643460815e-06], ['go_assert(q->is_field_name("typ"));', 2.598833643460815e-06], ['fvals->push_back(Expression::make_type_descriptor(pf->type(),', 2.598833643460815e-06], ['go_assert(q->is_field_name("tag"));', 2.598833643460815e-06], ['(!pf->has_tag())', 2.598833643460815e-06], ['Expression::make_string(pf->tag(),', 2.598833643460815e-06], ['go_assert(q->is_field_name("offsetAnon"));', 2.598833643460815e-06], ['Expression::make_binary(OPERATOR_LSHIFT,', 2.598833643460815e-06], ['pf->is_anonymous()', 2.598833643460815e-06], ['Expression::make_integer_ul(av,', 2.598833643460815e-06], ['Expression::make_binary(OPERATOR_OR,', 2.598833643460815e-06], ['anon,', 2.598833643460815e-06], ['fvals->push_back(o);', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(element_type,', 2.598833643460815e-06], ['fvals,', 2.598833643460815e-06], ['elements->push_back(v);', 2.598833643460815e-06], ['vals->push_back(Expression::make_slice_composite_literal(ps->type(),', 2.598833643460815e-06], ['Struct_type::write_hash_function(Gogo*', 2.598833643460815e-06], ['Named_type*,', 2.598833643460815e-06], ['pf->type()->type_functions(gogo,', 2.598833643460815e-06], ['pf->type()->named_type(),', 2.598833643460815e-06], ['Struct_type::write_equal_function(Gogo*', 2.598833643460815e-06], ['Expression::make_dereference(f1,', 2.598833643460815e-06], ['Expression::make_field_reference(f1,', 2.598833643460815e-06], ['Expression::make_dereference(f2,', 2.598833643460815e-06], ['Expression::make_field_reference(f2,', 2.598833643460815e-06], ['Struct_type::do_reflection(Gogo*', 2.598833643460815e-06], ['ret->append("struct', 2.598833643460815e-06], ['this->fields_->begin())', 2.598833643460815e-06], ['ret->append(Gogo::unpack_hidden_name(p->field_name()));', 2.598833643460815e-06], ['p->type()->named_type()->append_reflection_type_name(gogo,', 2.598833643460815e-06], ['tag(p->tag());', 2.598833643460815e-06], ['tag.begin();', 2.598833643460815e-06], ['tag.end();', 2.598833643460815e-06], ['ret->append("\\\\x00");', 2.598833643460815e-06], ['ret->append("\\\\n");', 2.598833643460815e-06], ['ret->append("\\\\t");', 2.598833643460815e-06], ['ret->append("\\\\\\"");', 2.598833643460815e-06], ['ret->append("\\\\\\\\");', 2.598833643460815e-06], ['ret->push_back(*p);', 2.598833643460815e-06], ['ret->push_back(\'"\');', 2.598833643460815e-06], ['(!this->fields_->empty())', 2.598833643460815e-06], ['*POFFSET', 2.598833643460815e-06], ['Struct_type::backend_field_offset(Gogo*', 2.598833643460815e-06], ['poffset)', 2.598833643460815e-06], ['*poffset', 2.598833643460815e-06], ['gogo->backend()->type_field_offset(bt,', 2.598833643460815e-06], ['Struct_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("struct', 2.598833643460815e-06], ['go_assert(fields', 2.598833643460815e-06], ['exp->write_string("?', 2.598833643460815e-06], ['exp->write_string(p->field_name());', 2.598833643460815e-06], ['Expression::make_string(p->tag(),', 2.598833643460815e-06], ['expr->export_expression(&efb);', 2.598833643460815e-06], ['Struct_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("struct', 2.598833643460815e-06], ['(imp->match_c_string("?', 2.598833643460815e-06], ['imp->advance(2);', 2.598833643460815e-06], ['sf(Typed_identifier(name,', 2.598833643460815e-06], ['ftype,', 2.598833643460815e-06], ['sf.set_is_imported();', 2.598833643460815e-06], ['sexpr', 2.598833643460815e-06], ['expr->string_expression();', 2.598833643460815e-06], ['go_assert(sexpr', 2.598833643460815e-06], ['sf.set_tag(sexpr->val());', 2.598833643460815e-06], ['sexpr;', 2.598833643460815e-06], ['fields->push_back(sf);', 2.598833643460815e-06], ['Struct_type::can_write_to_c_header(', 2.598833643460815e-06], ['fields->empty())', 2.598833643460815e-06], ['sinks', 2.598833643460815e-06], ['(!this->can_write_type_to_c_header(p->type(),', 2.598833643460815e-06], ['declare))', 2.598833643460815e-06], ['(Gogo::message_name(p->field_name())', 2.598833643460815e-06], ['sinks++;', 2.598833643460815e-06], ['(sinks', 2.598833643460815e-06], ['Struct_type::can_write_type_to_c_header(', 2.598833643460815e-06], ['(t->points_to()->array_type()', 2.598833643460815e-06], ['!t->points_to()->is_slice_type())', 2.598833643460815e-06], ['(t->points_to()->named_type()', 2.598833643460815e-06], ['t->points_to()->struct_type()', 2.598833643460815e-06], ['declare->push_back(t->points_to()->named_type()->named_object());', 2.598833643460815e-06], ['this->can_write_type_to_c_header(t->array_type()->element_type(),', 2.598833643460815e-06], ['requires->push_back(no);', 2.598833643460815e-06], ['this->can_write_type_to_c_header(t->base(),', 2.598833643460815e-06], ['Struct_type::write_to_c_header(std::ostream&', 2.598833643460815e-06], ['os)', 2.598833643460815e-06], ['p->field_name(),', 2.598833643460815e-06], ['p->type());', 2.598833643460815e-06], ['Struct_type::write_field_to_c_header(std::ostream&', 2.598833643460815e-06], ['os,', 2.598833643460815e-06], ['"void";', 2.598833643460815e-06], ['"_Bool";', 2.598833643460815e-06], ['(it->is_unsigned())', 2.598833643460815e-06], ["'u';", 2.598833643460815e-06], ['it->bits()', 2.598833643460815e-06], ['"_t";', 2.598833643460815e-06], ['(t->float_type()->bits())', 2.598833643460815e-06], ['"float";', 2.598833643460815e-06], ['"double";', 2.598833643460815e-06], ['(t->complex_type()->bits())', 2.598833643460815e-06], ['"double', 2.598833643460815e-06], ['"String";', 2.598833643460815e-06], ['"FuncVal*";', 2.598833643460815e-06], ['(!this->can_write_type_to_c_header(t->points_to(),', 2.598833643460815e-06], ['&requires,', 2.598833643460815e-06], ['t->points_to());', 2.598833643460815e-06], ['"Map*";', 2.598833643460815e-06], ['"Chan*";', 2.598833643460815e-06], ['(t->interface_type()->is_empty())', 2.598833643460815e-06], ['"Eface";', 2.598833643460815e-06], ['"Iface";', 2.598833643460815e-06], ['t->struct_type()->write_to_c_header(os);', 2.598833643460815e-06], ['"\\t}";', 2.598833643460815e-06], ['"Slice";', 2.598833643460815e-06], ['*ele', 2.598833643460815e-06], ['array_types;', 2.598833643460815e-06], ['(ele->array_type()', 2.598833643460815e-06], ['!ele->is_slice_type())', 2.598833643460815e-06], ['array_types.push_back(ele);', 2.598833643460815e-06], ['ele->array_type()->element_type();', 2.598833643460815e-06], ['ele);', 2.598833643460815e-06], ['(!array_types.empty())', 2.598833643460815e-06], ['array_types.back();', 2.598833643460815e-06], ['array_types.pop_back();', 2.598833643460815e-06], ["'[';", 2.598833643460815e-06], ['(!ele->array_type()->length()->numeric_constant_value(&nc))', 2.598833643460815e-06], ["']';", 2.598833643460815e-06], ['Type::lookup_integer_type("uintptr"))', 2.598833643460815e-06], ['"uintptr_t";', 2.598833643460815e-06], ['t->base());', 2.598833643460815e-06], ['(print_name', 2.598833643460815e-06], ['!name.empty())', 2.598833643460815e-06], ['Type::make_struct_type(Struct_field_list*', 2.598833643460815e-06], ['Struct_type(fields,', 2.598833643460815e-06], ['Array_type.', 2.598833643460815e-06], ['*PLEN.', 2.598833643460815e-06], ['Array_type::int_length(int64_t*', 2.598833643460815e-06], ['plen)', 2.598833643460815e-06], ['nc.to_memory_size(plen);', 2.598833643460815e-06], ['Array_type::is_identical(const', 2.598833643460815e-06], ['(this->is_array_incomparable_', 2.598833643460815e-06], ['t->is_array_incomparable_)', 2.598833643460815e-06], ['this->length();', 2.598833643460815e-06], ['t->length();', 2.598833643460815e-06], ['Slices', 2.598833643460815e-06], ['l2)', 2.598833643460815e-06], ['lengths.', 2.598833643460815e-06], ["can't,", 2.598833643460815e-06], ['nc1,', 2.598833643460815e-06], ['nc2;', 2.598833643460815e-06], ['(l1->numeric_constant_value(&nc1)', 2.598833643460815e-06], ['l2->numeric_constant_value(&nc2))', 2.598833643460815e-06], ['v1;', 2.598833643460815e-06], ['(nc1.to_int(&v1))', 2.598833643460815e-06], ['v2;', 2.598833643460815e-06], ['(nc2.to_int(&v2))', 2.598833643460815e-06], ['mpz_cmp(v1,', 2.598833643460815e-06], ['mpz_clear(v2);', 2.598833643460815e-06], ['mpz_clear(v1);', 2.598833643460815e-06], ['Array_type::do_traverse(Traverse*', 2.598833643460815e-06], ['(Type::traverse(this->element_type_,', 2.598833643460815e-06], ['Expression::traverse(&this->length_,', 2.598833643460815e-06], ['Array_type::verify_length()', 2.598833643460815e-06], ['context(Type::lookup_integer_type("int"),', 2.598833643460815e-06], ['this->length_->determine_type(&context);', 2.598833643460815e-06], ['(!this->length_->is_constant())', 2.598833643460815e-06], ['"float64(10)".', 2.598833643460815e-06], ['#13485', 2.598833643460815e-06], ['#13486.', 2.598833643460815e-06], ['!this->length_->type()->is_error_type())', 2.598833643460815e-06], ['this->length_->type()->float_type()', 2.598833643460815e-06], ['numeric");', 2.598833643460815e-06], ['int_type->integer_type()->bits();', 2.598833643460815e-06], ['(sizeof(val)', 2.598833643460815e-06], ['(tbits', 2.598833643460815e-06], ['tbits)', 2.598833643460815e-06], ['Array_type::do_verify()', 2.598833643460815e-06], ['(this->element_type()->is_error_type())', 2.598833643460815e-06], ['(!this->verify_length())', 2.598833643460815e-06], ['this->length_', 2.598833643460815e-06], ['Expression::make_error(this->length_->location());', 2.598833643460815e-06], ['Array_type::do_has_pointer()', 2.598833643460815e-06], ['(!this->element_type_->has_pointer())', 2.598833643460815e-06], ['Array_type::do_compare_is_identity(Gogo*', 2.598833643460815e-06], ['[...],', 2.598833643460815e-06], ['(this->length_->is_nil_expression())', 2.598833643460815e-06], ['(!this->element_type_->compare_is_identity(gogo))', 2.598833643460815e-06], ['padding,', 2.598833643460815e-06], ['(!this->element_type_->backend_type_size(gogo,', 2.598833643460815e-06], ['!this->element_type_->backend_type_align(gogo,', 2.598833643460815e-06], ['((size', 2.598833643460815e-06], ['Array_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['Array_type::write_hash_function(Gogo*', 2.598833643460815e-06], ['this->element_type_->type_functions(gogo,', 2.598833643460815e-06], ['this->element_type_->named_type(),', 2.598833643460815e-06], ['Statement::make_assignment_operation(OPERATOR_PLUSEQ,', 2.598833643460815e-06], ['tref,', 2.598833643460815e-06], ['ele_size,', 2.598833643460815e-06], ['Array_type::write_equal_function(Gogo*', 2.598833643460815e-06], ['Expression::make_dereference(e1,', 2.598833643460815e-06], ['Expression::make_array_index(e1,', 2.598833643460815e-06], ['Expression::make_dereference(e2,', 2.598833643460815e-06], ['Expression::make_array_index(e2,', 2.598833643460815e-06], ['6g.', 2.598833643460815e-06], ['bfields->resize(3);', 2.598833643460815e-06], ['Type::make_pointer_type(type->element_type());', 2.598833643460815e-06], ['pbet', 2.598833643460815e-06], ['pet->get_backend_placeholder(gogo)', 2.598833643460815e-06], ['pet->get_backend(gogo));', 2.598833643460815e-06], ['Backend::Btyped_identifier*', 2.598833643460815e-06], ['&(*bfields)[0];', 2.598833643460815e-06], ['"__values";', 2.598833643460815e-06], ['pbet;', 2.598833643460815e-06], ['&(*bfields)[1];', 2.598833643460815e-06], ['"__count";', 2.598833643460815e-06], ['&(*bfields)[2];', 2.598833643460815e-06], ['"__capacity";', 2.598833643460815e-06], ['index--i.e.,', 2.598833643460815e-06], ['Array_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['this->get_backend_element(gogo,', 2.598833643460815e-06], ['this->get_backend_length(gogo);', 2.598833643460815e-06], ['Array_type::get_backend_element(Gogo*', 2.598833643460815e-06], ['use_placeholder)', 2.598833643460815e-06], ['(use_placeholder)', 2.598833643460815e-06], ['this->element_type_->get_backend_placeholder(gogo);', 2.598833643460815e-06], ['this->element_type_->get_backend(gogo);', 2.598833643460815e-06], ['Array_type::get_backend_length(Gogo*', 2.598833643460815e-06], ['(this->blength_', 2.598833643460815e-06], ['(this->length_->is_error_expression())', 2.598833643460815e-06], ['(this->length_->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.to_int(&val))', 2.598833643460815e-06], ['nc.type();', 2.598833643460815e-06], ['translation', 2.598833643460815e-06], ['general.', 2.598833643460815e-06], ['this->length_->get_backend(&context);', 2.598833643460815e-06], ['ibtype', 2.598833643460815e-06], ['gogo->backend()->convert_expression(ibtype,', 2.598833643460815e-06], ['this->blength_,', 2.598833643460815e-06], ['this->length_->location());', 2.598833643460815e-06], ['Array_type::finish_backend_element(Gogo*', 2.598833643460815e-06], ['et->get_backend(gogo);', 2.598833643460815e-06], ['Type::make_pointer_type(et);', 2.598833643460815e-06], ['pet->get_backend(gogo);', 2.598833643460815e-06], ['ARRAY.', 2.598833643460815e-06], ['Array_type::get_value_pointer(Gogo*,', 2.598833643460815e-06], ['is_lvalue)', 2.598833643460815e-06], ['(this->length()', 2.598833643460815e-06], ['Fixed', 2.598833643460815e-06], ['go_assert(array->type()->array_type()', 2.598833643460815e-06], ['array->type()->array_type()->element_type();', 2.598833643460815e-06], ['Expression::make_cast(Type::make_pointer_type(etype),', 2.598833643460815e-06], ['(is_lvalue)', 2.598833643460815e-06], ['array->temporary_reference_expression();', 2.598833643460815e-06], ['array->var_expression();', 2.598833643460815e-06], ['(tref', 2.598833643460815e-06], ['tref->copy()->temporary_reference_expression();', 2.598833643460815e-06], ['tref;', 2.598833643460815e-06], ['Var_expression(ve->named_object(),', 2.598833643460815e-06], ['ve->location());', 2.598833643460815e-06], ['ve;', 2.598833643460815e-06], ['Expression::SLICE_INFO_VALUE_POINTER,', 2.598833643460815e-06], ['Array_type::get_length(Gogo*,', 2.598833643460815e-06], ['Expression::SLICE_INFO_LENGTH,', 2.598833643460815e-06], ['Array_type::get_capacity(Gogo*,', 2.598833643460815e-06], ['Expression::SLICE_INFO_CAPACITY,', 2.598833643460815e-06], ['Array_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("[");', 2.598833643460815e-06], ['(!this->length_->numeric_constant_value(&nc)', 2.598833643460815e-06], ['!nc.to_int(&val))', 2.598833643460815e-06], ['exp->write_string("', 2.598833643460815e-06], ['Array_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("[");', 2.598833643460815e-06], ["']')", 2.598833643460815e-06], ['Array_type::make_array_type_descriptor_type()', 2.598833643460815e-06], ['"slice",', 2.598833643460815e-06], ['Type::make_builtin_named_type("ArrayType",', 2.598833643460815e-06], ['Array_type::make_slice_type_descriptor_type()', 2.598833643460815e-06], ['Type::make_builtin_named_type("SliceType",', 2.598833643460815e-06], ['array/slice', 2.598833643460815e-06], ['Array_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['this->array_type_descriptor(gogo,', 2.598833643460815e-06], ['this->slice_type_descriptor(gogo,', 2.598833643460815e-06], ['Array_type::array_type_descriptor(Gogo*', 2.598833643460815e-06], ['atdt', 2.598833643460815e-06], ['atdt->struct_type()->fields();', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_ARRAY,', 2.598833643460815e-06], ['go_assert(p->is_field_name("slice"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(slice_type,', 2.598833643460815e-06], ['go_assert(p->is_field_name("len"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_cast(p->type(),', 2.598833643460815e-06], ['this->length_,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(atdt,', 2.598833643460815e-06], ['Array_type::slice_type_descriptor(Gogo*', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_SLICE,', 2.598833643460815e-06], ['Array_type::do_reflection(Gogo*', 2.598833643460815e-06], ['Type::make_array_type(Type*', 2.598833643460815e-06], ['Array_type(element_type,', 2.598833643460815e-06], ['Map_type.', 2.598833643460815e-06], ['Map_type::zero_value;', 2.598833643460815e-06], ['Map_type::zero_value_size;', 2.598833643460815e-06], ['Map_type::zero_value_align;', 2.598833643460815e-06], ['maxZero', 2.598833643460815e-06], ['Map_type::fat_zero_value(Gogo*', 2.598833643460815e-06], ['Map_type::max_zero_size)', 2.598833643460815e-06], ['(Map_type::zero_value_size', 2.598833643460815e-06], ['Map_type::zero_value_size', 2.598833643460815e-06], ['(!this->val_type_->backend_type_align(gogo,', 2.598833643460815e-06], ['&valalign))', 2.598833643460815e-06], ['(Map_type::zero_value_align', 2.598833643460815e-06], ['valalign)', 2.598833643460815e-06], ['Map_type::zero_value_align', 2.598833643460815e-06], ['backend_zero_value.', 2.598833643460815e-06], ['gogo->map_zero_value_name();', 2.598833643460815e-06], ['Map_type::zero_value', 2.598833643460815e-06], ['Expression::make_var_reference(Map_type::zero_value,', 2.598833643460815e-06], ['Map_type::is_zero_value(Variable*', 2.598833643460815e-06], ['Map_type::zero_value->var_value()', 2.598833643460815e-06], ['Map_type::backend_zero_value(Gogo*', 2.598833643460815e-06], ['go_assert(Map_type::zero_value', 2.598833643460815e-06], ['buint8_type', 2.598833643460815e-06], ['Expression::make_integer_int64(Map_type::zero_value_size,', 2.598833643460815e-06], ['blength', 2.598833643460815e-06], ['e->get_backend(&context);', 2.598833643460815e-06], ['barray_type', 2.598833643460815e-06], ['gogo->backend()->array_type(buint8_type,', 2.598833643460815e-06], ['blength);', 2.598833643460815e-06], ['zname', 2.598833643460815e-06], ['Map_type::zero_value->name();', 2.598833643460815e-06], ['asm_name(go_selectively_encode_id(zname));', 2.598833643460815e-06], ['zvar', 2.598833643460815e-06], ['gogo->backend()->implicit_variable(zname,', 2.598833643460815e-06], ['Map_type::zero_value_align);', 2.598833643460815e-06], ['gogo->backend()->implicit_variable_set_init(zvar,', 2.598833643460815e-06], ['zname,', 2.598833643460815e-06], ['zvar;', 2.598833643460815e-06], ['Map_type::do_traverse(Traverse*', 2.598833643460815e-06], ['(Type::traverse(this->key_type_,', 2.598833643460815e-06], ['Type::traverse(this->val_type_,', 2.598833643460815e-06], ['Map_type::do_verify()', 2.598833643460815e-06], ['"map[void]void".', 2.598833643460815e-06], ['(!this->key_type_->is_comparable()', 2.598833643460815e-06], ['!this->key_type_->is_void_type())', 2.598833643460815e-06], ['(!this->key_type_->in_heap())', 2.598833643460815e-06], ['(!this->val_type_->in_heap())', 2.598833643460815e-06], ['Map_type::is_identical(const', 2.598833643460815e-06], ['(Type::are_identical(this->key_type(),', 2.598833643460815e-06], ['t->key_type(),', 2.598833643460815e-06], ['Type::are_identical(this->val_type(),', 2.598833643460815e-06], ['t->val_type(),', 2.598833643460815e-06], ['Map_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['(this->key_type_->hash_for_method(gogo,', 2.598833643460815e-06], ['this->val_type_->hash_for_method(gogo,', 2.598833643460815e-06], ['hmap', 2.598833643460815e-06], ['runtime/hashmap.go.', 2.598833643460815e-06], ['Map_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['(backend_map_type', 2.598833643460815e-06], ['bfields(9);', 2.598833643460815e-06], ['"count";', 2.598833643460815e-06], ['"flags";', 2.598833643460815e-06], ['bfields[2].name', 2.598833643460815e-06], ['"B";', 2.598833643460815e-06], ['bfields[2].btype', 2.598833643460815e-06], ['bfields[1].btype;', 2.598833643460815e-06], ['bfields[2].location', 2.598833643460815e-06], ['bfields[3].name', 2.598833643460815e-06], ['"noverflow";', 2.598833643460815e-06], ['bfields[3].btype', 2.598833643460815e-06], ['uint16_type->get_backend(gogo);', 2.598833643460815e-06], ['bfields[3].location', 2.598833643460815e-06], ['bfields[4].name', 2.598833643460815e-06], ['"hash0";', 2.598833643460815e-06], ['bfields[4].btype', 2.598833643460815e-06], ['uint32_type->get_backend(gogo);', 2.598833643460815e-06], ['bfields[4].location', 2.598833643460815e-06], ['bvt', 2.598833643460815e-06], ['bpvt', 2.598833643460815e-06], ['gogo->backend()->pointer_type(bvt);', 2.598833643460815e-06], ['bfields[5].name', 2.598833643460815e-06], ['"buckets";', 2.598833643460815e-06], ['bfields[5].btype', 2.598833643460815e-06], ['bfields[5].location', 2.598833643460815e-06], ['bfields[6].name', 2.598833643460815e-06], ['"oldbuckets";', 2.598833643460815e-06], ['bfields[6].btype', 2.598833643460815e-06], ['bfields[6].location', 2.598833643460815e-06], ['bfields[7].name', 2.598833643460815e-06], ['"nevacuate";', 2.598833643460815e-06], ['bfields[7].btype', 2.598833643460815e-06], ['uintptr_type->get_backend(gogo);', 2.598833643460815e-06], ['bfields[7].location', 2.598833643460815e-06], ['bfields[8].name', 2.598833643460815e-06], ['"extra";', 2.598833643460815e-06], ['bfields[8].btype', 2.598833643460815e-06], ['bfields[8].location', 2.598833643460815e-06], ['*bt', 2.598833643460815e-06], ['gogo->backend()->named_type("runtime.hmap",', 2.598833643460815e-06], ['backend_map_type', 2.598833643460815e-06], ['Map_type::make_map_type_descriptor_type()', 2.598833643460815e-06], ['Type::make_builtin_struct_type(8,', 2.598833643460815e-06], ['"keysize",', 2.598833643460815e-06], ['"valuesize",', 2.598833643460815e-06], ['"bucketsize",', 2.598833643460815e-06], ['uint32_type);', 2.598833643460815e-06], ['Type::make_builtin_named_type("MapType",', 2.598833643460815e-06], ['Map_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['mtdt', 2.598833643460815e-06], ['keysize;', 2.598833643460815e-06], ['&keysize))', 2.598833643460815e-06], ['&ptrsize))', 2.598833643460815e-06], ['(bucket_type', 2.598833643460815e-06], ['bucketsize;', 2.598833643460815e-06], ['(!bucket_type->backend_type_size(gogo,', 2.598833643460815e-06], ['&bucketsize))', 2.598833643460815e-06], ['mtdt->struct_type()->fields();', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_MAP,', 2.598833643460815e-06], ['go_assert(p->is_field_name("key"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(this->key_type_,', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(this->val_type_,', 2.598833643460815e-06], ['go_assert(p->is_field_name("bucket"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_type_descriptor(bucket_type,', 2.598833643460815e-06], ['go_assert(p->is_field_name("keysize"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_int64(keysize,', 2.598833643460815e-06], ['go_assert(p->is_field_name("valuesize"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_int64(valsize,', 2.598833643460815e-06], ['go_assert(p->is_field_name("bucketsize"));', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_int64(bucketsize,', 2.598833643460815e-06], ['go_assert(p->is_field_name("flags"));', 2.598833643460815e-06], ['(this->key_type_->is_reflexive())', 2.598833643460815e-06], ['(this->key_type_->needs_key_update())', 2.598833643460815e-06], ['(this->key_type_->hash_might_panic())', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_ul(flags,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(mtdt,', 2.598833643460815e-06], ['Map_type::bucket_type(Gogo*', 2.598833643460815e-06], ['(this->bucket_type_', 2.598833643460815e-06], ['this->bucket_type_;', 2.598833643460815e-06], ['this->key_type_;', 2.598833643460815e-06], ['Type::make_pointer_type(key_type);', 2.598833643460815e-06], ['this->val_type_;', 2.598833643460815e-06], ['Type::make_pointer_type(val_type);', 2.598833643460815e-06], ['bucket_size', 2.598833643460815e-06], ['Expression::make_integer_ul(Map_type::bucket_size,', 2.598833643460815e-06], ['topbits_type', 2.598833643460815e-06], ['topbits_type->set_is_array_incomparable();', 2.598833643460815e-06], ['keys_type', 2.598833643460815e-06], ['Type::make_array_type(key_type,', 2.598833643460815e-06], ['keys_type->set_is_array_incomparable();', 2.598833643460815e-06], ['values_type', 2.598833643460815e-06], ['Type::make_array_type(val_type,', 2.598833643460815e-06], ['values_type->set_is_array_incomparable();', 2.598833643460815e-06], ['buckets', 2.598833643460815e-06], ['hmap.overflow', 2.598833643460815e-06], ['overflow_type;', 2.598833643460815e-06], ['(!key_type->has_pointer()', 2.598833643460815e-06], ['!val_type->has_pointer())', 2.598833643460815e-06], ['cares', 2.598833643460815e-06], ['someone', 2.598833643460815e-06], ['debugger)', 2.598833643460815e-06], ['size-ptrSize', 2.598833643460815e-06], ['double-check', 2.598833643460815e-06], ['topbits_field_size,', 2.598833643460815e-06], ['topbits_field_align;', 2.598833643460815e-06], ['keys_field_size,', 2.598833643460815e-06], ['keys_field_align;', 2.598833643460815e-06], ['values_field_size,', 2.598833643460815e-06], ['values_field_align;', 2.598833643460815e-06], ['overflow_field_size,', 2.598833643460815e-06], ['overflow_field_align;', 2.598833643460815e-06], ['(!topbits_type->backend_type_size(gogo,', 2.598833643460815e-06], ['&topbits_field_size)', 2.598833643460815e-06], ['!topbits_type->backend_type_field_align(gogo,', 2.598833643460815e-06], ['&topbits_field_align)', 2.598833643460815e-06], ['!keys_type->backend_type_size(gogo,', 2.598833643460815e-06], ['&keys_field_size)', 2.598833643460815e-06], ['!keys_type->backend_type_field_align(gogo,', 2.598833643460815e-06], ['&keys_field_align)', 2.598833643460815e-06], ['!values_type->backend_type_size(gogo,', 2.598833643460815e-06], ['&values_field_size)', 2.598833643460815e-06], ['!values_type->backend_type_field_align(gogo,', 2.598833643460815e-06], ['&values_field_align)', 2.598833643460815e-06], ['!overflow_type->backend_type_size(gogo,', 2.598833643460815e-06], ['&overflow_field_size)', 2.598833643460815e-06], ['!overflow_type->backend_type_field_align(gogo,', 2.598833643460815e-06], ['&overflow_field_align))', 2.598833643460815e-06], ['std::max(std::max(topbits_field_align,', 2.598833643460815e-06], ['keys_field_align),', 2.598833643460815e-06], ['values_field_align);', 2.598833643460815e-06], ['(max_align', 2.598833643460815e-06], ['overflow_field_align)', 2.598833643460815e-06], ['make_builtin_struct_type(4,', 2.598833643460815e-06], ['topbits_field_size;', 2.598833643460815e-06], ['keys_field_align', 2.598833643460815e-06], ['static_cast<size_t>(keys_field_align', 2.598833643460815e-06], ['keys_field_size;', 2.598833643460815e-06], ['values_field_align', 2.598833643460815e-06], ['static_cast<size_t>(values_field_align', 2.598833643460815e-06], ['values_field_size;', 2.598833643460815e-06], ['((overflow_field_size', 2.598833643460815e-06], ['((ovoff', 2.598833643460815e-06], ['(ovoff', 2.598833643460815e-06], ['overflow_field_size);', 2.598833643460815e-06], ['pad_expr', 2.598833643460815e-06], ['Expression::make_integer_ul(pad,', 2.598833643460815e-06], ['pad_expr);', 2.598833643460815e-06], ['pad_type->set_is_array_incomparable();', 2.598833643460815e-06], ['make_builtin_struct_type(5,', 2.598833643460815e-06], ['ret->get_backend(gogo);', 2.598833643460815e-06], ['ret->field_count()', 2.598833643460815e-06], ['(!ret->backend_type_size(gogo,', 2.598833643460815e-06], ['&size))', 2.598833643460815e-06], ['ptr_size;', 2.598833643460815e-06], ['&ptr_size))', 2.598833643460815e-06], ['ptr_size', 2.598833643460815e-06], ['this->bucket_type_', 2.598833643460815e-06], ['hashmap', 2.598833643460815e-06], ['Map_type::hmap_type(Type*', 2.598833643460815e-06], ['bucket_type)', 2.598833643460815e-06], ['(this->hmap_type_', 2.598833643460815e-06], ['this->hmap_type_;', 2.598833643460815e-06], ['ptr_bucket_type', 2.598833643460815e-06], ['make_builtin_struct_type(9,', 2.598833643460815e-06], ['"noverflow",', 2.598833643460815e-06], ['"hash0",', 2.598833643460815e-06], ['"oldbuckets",', 2.598833643460815e-06], ['"nevacuate",', 2.598833643460815e-06], ['"extra",', 2.598833643460815e-06], ['void_ptr_type);', 2.598833643460815e-06], ['this->hmap_type_', 2.598833643460815e-06], ['Map_type::hiter_type(Gogo*', 2.598833643460815e-06], ['(this->hiter_type_', 2.598833643460815e-06], ['this->hiter_type_;', 2.598833643460815e-06], ['&keysize)', 2.598833643460815e-06], ['!this->val_type_->backend_type_size(gogo,', 2.598833643460815e-06], ['key_ptr_type', 2.598833643460815e-06], ['Type::make_pointer_type(this->key_type_);', 2.598833643460815e-06], ['Type::make_pointer_type(this->val_type_);', 2.598833643460815e-06], ['uint8_ptr_type', 2.598833643460815e-06], ['bucket_ptr_type', 2.598833643460815e-06], ['hmap_type', 2.598833643460815e-06], ['this->hmap_type(bucket_type);', 2.598833643460815e-06], ['hmap_ptr_type', 2.598833643460815e-06], ['Type::make_pointer_type(hmap_type);', 2.598833643460815e-06], ['make_builtin_struct_type(15,', 2.598833643460815e-06], ['key_ptr_type,', 2.598833643460815e-06], ['"val",', 2.598833643460815e-06], ['val_ptr_type,', 2.598833643460815e-06], ['"t",', 2.598833643460815e-06], ['uint8_ptr_type,', 2.598833643460815e-06], ['"h",', 2.598833643460815e-06], ['hmap_ptr_type,', 2.598833643460815e-06], ['"bptr",', 2.598833643460815e-06], ['"oldoverflow",', 2.598833643460815e-06], ['"startBucket",', 2.598833643460815e-06], ['"offset",', 2.598833643460815e-06], ['"wrapped",', 2.598833643460815e-06], ['"i",', 2.598833643460815e-06], ['"checkBucket",', 2.598833643460815e-06], ['this->hiter_type_', 2.598833643460815e-06], ['Map_type::do_reflection(Gogo*', 2.598833643460815e-06], ['this->append_reflection(this->key_type_,', 2.598833643460815e-06], ['ret->append("]");', 2.598833643460815e-06], ['this->append_reflection(this->val_type_,', 2.598833643460815e-06], ['Map_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("map', 2.598833643460815e-06], ['exp->write_type(this->key_type_);', 2.598833643460815e-06], ['exp->write_type(this->val_type_);', 2.598833643460815e-06], ['Map_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("map', 2.598833643460815e-06], ['Type::make_map_type(Type*', 2.598833643460815e-06], ['Map_type(key_type,', 2.598833643460815e-06], ['Channel_type.', 2.598833643460815e-06], ['Verify.', 2.598833643460815e-06], ['Channel_type::do_verify()', 2.598833643460815e-06], ['(!this->element_type_->in_heap())', 2.598833643460815e-06], ['Channel_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['Channel_type::is_identical(const', 2.598833643460815e-06], ['t->may_send_', 2.598833643460815e-06], ['this->may_receive_', 2.598833643460815e-06], ['t->may_receive_);', 2.598833643460815e-06], ['libgo/runtime/channel.h.', 2.598833643460815e-06], ['Channel_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['(backend_channel_type', 2.598833643460815e-06], ['gogo->backend()->named_type("__go_channel",', 2.598833643460815e-06], ['backend_channel_type', 2.598833643460815e-06], ['Channel_type::make_chan_type_descriptor_type()', 2.598833643460815e-06], ['"dir",', 2.598833643460815e-06], ['Type::make_builtin_named_type("ChanType",', 2.598833643460815e-06], ['Channel_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['ctdt', 2.598833643460815e-06], ['ctdt->struct_type()->fields();', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_CHAN,', 2.598833643460815e-06], ['go_assert(p->is_field_name("dir"));', 2.598833643460815e-06], ['libgo/runtime/go-type.h.', 2.598833643460815e-06], ['vals->push_back(Expression::make_integer_ul(val,', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(ctdt,', 2.598833643460815e-06], ['Channel_type::do_reflection(Gogo*', 2.598833643460815e-06], ['Channel_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("chan', 2.598833643460815e-06], ['!this->may_receive_)', 2.598833643460815e-06], ['exp->write_c_string("-<', 2.598833643460815e-06], ['(this->may_receive_', 2.598833643460815e-06], ['!this->may_send_)', 2.598833643460815e-06], ['exp->write_c_string("<-', 2.598833643460815e-06], ['Channel_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("chan', 2.598833643460815e-06], ['may_send;', 2.598833643460815e-06], ['may_receive;', 2.598833643460815e-06], ['(imp->match_c_string("-<', 2.598833643460815e-06], ['(imp->match_c_string("<-', 2.598833643460815e-06], ['Type::make_channel_type(may_send,', 2.598833643460815e-06], ['may_receive,', 2.598833643460815e-06], ['libgo/go/runtime/select.go.', 2.598833643460815e-06], ['Channel_type::select_case_type()', 2.598833643460815e-06], ['(scase_type', 2.598833643460815e-06], ['int64_type', 2.598833643460815e-06], ['"c",', 2.598833643460815e-06], ['"releasetime",', 2.598833643460815e-06], ['int64_type);', 2.598833643460815e-06], ['scase_type->set_is_struct_incomparable();', 2.598833643460815e-06], ['Type::make_channel_type(bool', 2.598833643460815e-06], ['send,', 2.598833643460815e-06], ['element_type)', 2.598833643460815e-06], ['Channel_type(send,', 2.598833643460815e-06], ['Interface_type.', 2.598833643460815e-06], ['Interface_type::methods()', 2.598833643460815e-06], ['Interface_type::method_count()', 2.598833643460815e-06], ['this->all_methods_->size();', 2.598833643460815e-06], ['Interface_type::do_traverse(Traverse*', 2.598833643460815e-06], ['(this->methods_are_finalized_', 2.598833643460815e-06], ['this->parse_methods_);', 2.598833643460815e-06], ['methods->traverse(traverse);', 2.598833643460815e-06], ['Interface_type::finalize_methods()', 2.598833643460815e-06], ['(this->methods_are_finalized_)', 2.598833643460815e-06], ['this->methods_are_finalized_', 2.598833643460815e-06], ['(this->parse_methods_', 2.598833643460815e-06], ['this->all_methods_->reserve(this->parse_methods_->size());', 2.598833643460815e-06], ['inherit;', 2.598833643460815e-06], ['this->parse_methods_->begin();', 2.598833643460815e-06], ['this->parse_methods_->end();', 2.598833643460815e-06], ['&*pm;', 2.598833643460815e-06], ['inherit.push_back(*p);', 2.598833643460815e-06], ['(this->find_method(p->name())', 2.598833643460815e-06], ['this->all_methods_->push_back(*p);', 2.598833643460815e-06], ['seen.reserve(inherit.size());', 2.598833643460815e-06], ['(!inherit.empty())', 2.598833643460815e-06], ['inherit.back().type();', 2.598833643460815e-06], ['tl', 2.598833643460815e-06], ['inherit.back().location();', 2.598833643460815e-06], ['inherit.pop_back();', 2.598833643460815e-06], ['t->interface_type();', 2.598833643460815e-06], ['(!t->is_error())', 2.598833643460815e-06], ['"interface', 2.598833643460815e-06], ['non-interface");', 2.598833643460815e-06], ['(!issued_recursive_error)', 2.598833643460815e-06], ['it->parse_methods_', 2.598833643460815e-06], ['std::vector<Named_type*>::const_iterator', 2.598833643460815e-06], ['seen.begin();', 2.598833643460815e-06], ['seen.end();', 2.598833643460815e-06], ['(*q', 2.598833643460815e-06], ['loop");', 2.598833643460815e-06], ['seen.push_back(nt);', 2.598833643460815e-06], ['it->parse_methods_;', 2.598833643460815e-06], ['(q->name().empty())', 2.598833643460815e-06], ['inherit.push_back(*q);', 2.598833643460815e-06], ['(this->find_method(q->name())', 2.598833643460815e-06], ['this->all_methods_->push_back(Typed_identifier(q->name(),', 2.598833643460815e-06], ['q->type(),', 2.598833643460815e-06], ['tl));', 2.598833643460815e-06], ['ambiguous",', 2.598833643460815e-06], ['Gogo::message_name(q->name()).c_str());', 2.598833643460815e-06], ['(!this->all_methods_->empty())', 2.598833643460815e-06], ['this->all_methods_->sort_by_name();', 2.598833643460815e-06], ['Interface_type::find_method(const', 2.598833643460815e-06], ['Interface_type::method_index(const', 2.598833643460815e-06], ['++ret)', 2.598833643460815e-06], ['Interface_type::is_unexported_method(Gogo*', 2.598833643460815e-06], ['method_name(p->name());', 2.598833643460815e-06], ['(Gogo::is_hidden_name(method_name)', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(method_name)', 2.598833643460815e-06], ['method_name)', 2.598833643460815e-06], ['Interface_type::is_identical(const', 2.598833643460815e-06], ['finalized,', 2.598833643460815e-06], ['(!this->methods_are_finalized_', 2.598833643460815e-06], ['!t->methods_are_finalized_)', 2.598833643460815e-06], ['Consult', 2.598833643460815e-06], ['this->parse_methods_', 2.598833643460815e-06], ['this->all_methods_);', 2.598833643460815e-06], ['t->parse_methods_', 2.598833643460815e-06], ['t->all_methods_);', 2.598833643460815e-06], ['tmethods;', 2.598833643460815e-06], ['(this->assume_identical(this,', 2.598833643460815e-06], ['t->assume_identical(t,', 2.598833643460815e-06], ['this))', 2.598833643460815e-06], ['Assume_identical*', 2.598833643460815e-06], ['hold_ai', 2.598833643460815e-06], ['Assume_identical', 2.598833643460815e-06], ['ai.t1', 2.598833643460815e-06], ['ai.t2', 2.598833643460815e-06], ['ai.next', 2.598833643460815e-06], ['&ai;', 2.598833643460815e-06], ['p2;', 2.598833643460815e-06], ['(p2', 2.598833643460815e-06], ['tmethods->begin();', 2.598833643460815e-06], ['++p2)', 2.598833643460815e-06], ['p2->name()', 2.598833643460815e-06], ['!Type::are_identical(p1->type(),', 2.598833643460815e-06], ['methods->end()', 2.598833643460815e-06], ['Interface_type::assume_identical(const', 2.598833643460815e-06], ['(Assume_identical*', 2.598833643460815e-06], ['p->next)', 2.598833643460815e-06], ['((p->t1', 2.598833643460815e-06], ['(p->t1', 2.598833643460815e-06], ['Interface_type::is_compatible_for_assign(const', 2.598833643460815e-06], ['t->methods_are_finalized_);', 2.598833643460815e-06], ['t->find_method(p->name());', 2.598833643460815e-06], ['_("need', 2.598833643460815e-06], ['Gogo::message_name(p->name()).c_str(),', 2.598833643460815e-06], ['(!Type::are_identical(p->type(),', 2.598833643460815e-06], ['m->type(),', 2.598833643460815e-06], ['Interface_type::do_hash_for_method(Gogo*,', 2.598833643460815e-06], ['hash,', 2.598833643460815e-06], ['{T}}', 2.598833643460815e-06], ['Interface_type::implements_interface(const', 2.598833643460815e-06], ['t->struct_type();', 2.598833643460815e-06], ['pt->named_type();', 2.598833643460815e-06], ['pt->struct_type();', 2.598833643460815e-06], ['!nt->has_any_methods()', 2.598833643460815e-06], ['!st->has_any_methods())', 2.598833643460815e-06], ['is_ambiguous', 2.598833643460815e-06], ['&is_ambiguous)', 2.598833643460815e-06], ['&is_ambiguous));', 2.598833643460815e-06], ['(is_ambiguous)', 2.598833643460815e-06], ['_("ambiguous', 2.598833643460815e-06], ['_("missing', 2.598833643460815e-06], ['*p_fn_type', 2.598833643460815e-06], ['m->type()->function_type();', 2.598833643460815e-06], ['go_assert(p_fn_type', 2.598833643460815e-06], ['(!p_fn_type->is_identical(m_fn_type,', 2.598833643460815e-06], ['(!is_pointer', 2.598833643460815e-06], ['!m->is_value_method())', 2.598833643460815e-06], ['receiver"),', 2.598833643460815e-06], ['(m->nointerface())', 2.598833643460815e-06], ['go:nointerface"),', 2.598833643460815e-06], ['Interface_type::get_backend_empty_interface_type(Gogo*', 2.598833643460815e-06], ['(empty_interface_type', 2.598833643460815e-06], ['bfields(2);', 2.598833643460815e-06], ['empty_interface_type', 2.598833643460815e-06], ['Interface_type::Bmethods_map', 2.598833643460815e-06], ['Interface_type::bmethods_map;', 2.598833643460815e-06], ['Interface_type::get_backend_methods(Gogo*', 2.598833643460815e-06], ['!this->bmethods_is_placeholder_)', 2.598833643460815e-06], ['!ins.first->second.is_placeholder)', 2.598833643460815e-06], ['mfields(this->all_methods_->size()', 2.598833643460815e-06], ['mfields[0].name', 2.598833643460815e-06], ['mfields[0].btype', 2.598833643460815e-06], ['mfields[0].location', 2.598833643460815e-06], ['mfields[i].name', 2.598833643460815e-06], ['mfields[i].btype', 2.598833643460815e-06], ['mft->get_backend_fntype(gogo);', 2.598833643460815e-06], ['mfields[i].location', 2.598833643460815e-06], ['check:', 2.598833643460815e-06], ['go_assert(Gogo::unpack_hidden_name(p->name())', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(last_name));', 2.598833643460815e-06], ['gogo->backend()->struct_type(mfields);', 2.598833643460815e-06], ['gogo->backend()->pointer_type(st);', 2.598833643460815e-06], ['ins.first->second.is_placeholder)', 2.598833643460815e-06], ['gogo->backend()->set_placeholder_pointer_type(ins.first->second.btype,', 2.598833643460815e-06], ['Interface_type::get_backend_methods_placeholder(Gogo*', 2.598833643460815e-06], ['ins.first->second.is_placeholder;', 2.598833643460815e-06], ['bfields->resize(2);', 2.598833643460815e-06], ['(*bfields)[0].name', 2.598833643460815e-06], ['"__methods";', 2.598833643460815e-06], ['(*bfields)[0].btype', 2.598833643460815e-06], ['type->get_backend_methods_placeholder(gogo)', 2.598833643460815e-06], ['type->get_backend_methods(gogo));', 2.598833643460815e-06], ['(*bfields)[0].location', 2.598833643460815e-06], ['(*bfields)[1].name', 2.598833643460815e-06], ['(*bfields)[1].btype', 2.598833643460815e-06], ['(*bfields)[1].location', 2.598833643460815e-06], ['Interface_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['(this->is_empty())', 2.598833643460815e-06], ['(this->interface_btype_', 2.598833643460815e-06], ['gogo->backend()->placeholder_struct_type("",', 2.598833643460815e-06], ['(!gogo->backend()->set_placeholder_struct_type(this->interface_btype_,', 2.598833643460815e-06], ['Interface_type::finish_backend_methods(Gogo*', 2.598833643460815e-06], ['(!this->is_empty())', 2.598833643460815e-06], ['this->get_backend_methods(gogo);', 2.598833643460815e-06], ['Interface_type::make_interface_type_descriptor_type()', 2.598833643460815e-06], ['sm', 2.598833643460815e-06], ['nsm', 2.598833643460815e-06], ['Type::make_builtin_named_type("imethod",', 2.598833643460815e-06], ['sm);', 2.598833643460815e-06], ['slice_nsm', 2.598833643460815e-06], ['Type::make_array_type(nsm,', 2.598833643460815e-06], ['slice_nsm);', 2.598833643460815e-06], ['Type::make_builtin_named_type("InterfaceType",', 2.598833643460815e-06], ['Interface_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['itdt', 2.598833643460815e-06], ['ifields', 2.598833643460815e-06], ['itdt->struct_type()->fields();', 2.598833643460815e-06], ['ivals->reserve(2);', 2.598833643460815e-06], ['pif', 2.598833643460815e-06], ['ifields->begin();', 2.598833643460815e-06], ['go_assert(pif->is_field_name("_type"));', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_INTERFACE;', 2.598833643460815e-06], ['ivals->push_back(this->type_descriptor_constructor(gogo,', 2.598833643460815e-06], ['rt,', 2.598833643460815e-06], ['go_assert(pif->is_field_name("methods"));', 2.598833643460815e-06], ['elemtype', 2.598833643460815e-06], ['pif->type()->array_type()->element_type();', 2.598833643460815e-06], ['methods->reserve(this->all_methods_->size());', 2.598833643460815e-06], ['mfields', 2.598833643460815e-06], ['elemtype->struct_type()->fields();', 2.598833643460815e-06], ['mvals', 2.598833643460815e-06], ['mvals->reserve(3);', 2.598833643460815e-06], ['pmf', 2.598833643460815e-06], ['mfields->begin();', 2.598833643460815e-06], ['go_assert(pmf->is_field_name("name"));', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(pm->name());', 2.598833643460815e-06], ['go_assert(pmf->is_field_name("pkgPath"));', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(pm->name()))', 2.598833643460815e-06], ['mvals->push_back(Expression::make_nil(bloc));', 2.598833643460815e-06], ['Gogo::hidden_name_pkgpath(pm->name());', 2.598833643460815e-06], ['go_assert(pmf->is_field_name("typ"));', 2.598833643460815e-06], ['mvals->push_back(Expression::make_type_descriptor(pm->type(),', 2.598833643460815e-06], ['go_assert(pmf', 2.598833643460815e-06], ['mfields->end());', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(elemtype,', 2.598833643460815e-06], ['mvals,', 2.598833643460815e-06], ['methods->push_back(e);', 2.598833643460815e-06], ['ivals->push_back(Expression::make_slice_composite_literal(pif->type(),', 2.598833643460815e-06], ['go_assert(pif', 2.598833643460815e-06], ['ifields->end());', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(itdt,', 2.598833643460815e-06], ['Interface_type::do_reflection(Gogo*', 2.598833643460815e-06], ['ret->append("interface', 2.598833643460815e-06], ['methods->begin())', 2.598833643460815e-06], ['ret->append(";', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(p->name()))', 2.598833643460815e-06], ['ret->append(p->name());', 2.598833643460815e-06], ['(gogo->pkgpath_from_option())', 2.598833643460815e-06], ['ret->append(p->name().substr(1));', 2.598833643460815e-06], ['backward', 2.598833643460815e-06], ['Gogo::hidden_name_pkgpath(p->name());', 2.598833643460815e-06], ["ret->append(pkgpath.substr(pkgpath.find('.')", 2.598833643460815e-06], ['ret->append(Gogo::unpack_hidden_name(p->name()));', 2.598833643460815e-06], ['p->type()->reflection(gogo);', 2.598833643460815e-06], ['go_assert(sub.compare(0,', 2.598833643460815e-06], ['"func")', 2.598833643460815e-06], ['sub.substr(4);', 2.598833643460815e-06], ['ret->append(sub);', 2.598833643460815e-06], ['ret->append("}");', 2.598833643460815e-06], ['Interface_type::do_export(Export*', 2.598833643460815e-06], ['exp->write_c_string("interface', 2.598833643460815e-06], ['(pm->name().empty())', 2.598833643460815e-06], ['exp->write_c_string("?', 2.598833643460815e-06], ['exp->write_type(pm->type());', 2.598833643460815e-06], ['exp->write_string(pm->name());', 2.598833643460815e-06], ['exp->write_name(pp->name());', 2.598833643460815e-06], ['exp->write_type(pp->type());', 2.598833643460815e-06], ['*pptype', 2.598833643460815e-06], ['pp->type();', 2.598833643460815e-06], ['exp->write_type(pptype->array_type()->element_type());', 2.598833643460815e-06], ['Interface_type::do_import(Import*', 2.598833643460815e-06], ['imp->require_c_string("interface', 2.598833643460815e-06], ['ret->package_', 2.598833643460815e-06], ['imp->package();', 2.598833643460815e-06], ['Type::make_interface_type(Typed_identifier_list*', 2.598833643460815e-06], ['Interface_type(methods,', 2.598833643460815e-06], ['Type::make_empty_interface_type(Location', 2.598833643460815e-06], ['Interface_type(NULL,', 2.598833643460815e-06], ['ret->finalize_methods();', 2.598833643460815e-06], ['Method.', 2.598833643460815e-06], ['Method::bind_method(Expression*', 2.598833643460815e-06], ['this->do_bind_method(expr,', 2.598833643460815e-06], ['this->stub_,', 2.598833643460815e-06], ['Method::named_object()', 2.598833643460815e-06], ['this->stub_;', 2.598833643460815e-06], ['this->do_named_object();', 2.598833643460815e-06], ['Named_method.', 2.598833643460815e-06], ['Named_method::do_type()', 2.598833643460815e-06], ['(this->named_object_->is_function())', 2.598833643460815e-06], ['this->named_object_->func_value()->type();', 2.598833643460815e-06], ['(this->named_object_->is_function_declaration())', 2.598833643460815e-06], ['this->named_object_->func_declaration_value()->type();', 2.598833643460815e-06], ['Named_method::do_receiver_location()', 2.598833643460815e-06], ['this->do_type()->receiver()->location();', 2.598833643460815e-06], ['Named_method::do_bind_method(Expression*', 2.598833643460815e-06], ['(this->depth()', 2.598833643460815e-06], ['!this->needs_stub_method())', 2.598833643460815e-06], ['this->do_type();', 2.598833643460815e-06], ['go_assert(ftype->is_method());', 2.598833643460815e-06], ['frtype', 2.598833643460815e-06], ['ftype->receiver()->type();', 2.598833643460815e-06], ['bme->set_first_argument_type(frtype);', 2.598833643460815e-06], ['bme;', 2.598833643460815e-06], ['Named_method::do_nointerface()', 2.598833643460815e-06], ['no->func_value()->nointerface();', 2.598833643460815e-06], ['no->func_declaration_value()->nointerface();', 2.598833643460815e-06], ['Interface_method.', 2.598833643460815e-06], ['Interface_method::do_bind_method(Expression*', 2.598833643460815e-06], ['Methods.', 2.598833643460815e-06], ['inserted,', 2.598833643460815e-06], ['Methods::insert(const', 2.598833643460815e-06], ['std::pair<Method_map::iterator,', 2.598833643460815e-06], ['this->methods_.insert(std::make_pair(name,', 2.598833643460815e-06], ['m));', 2.598833643460815e-06], ['old_method', 2.598833643460815e-06], ['old_method;', 2.598833643460815e-06], ['old_method->set_is_ambiguous();', 2.598833643460815e-06], ['Methods::count()', 2.598833643460815e-06], ['(Method_map::const_iterator', 2.598833643460815e-06], ['(!p->second->is_ambiguous())', 2.598833643460815e-06], ['Named_type.', 2.598833643460815e-06], ['Named_type::name()', 2.598833643460815e-06], ['Named_type::message_name()', 2.598833643460815e-06], ['this->named_object_->message_name();', 2.598833643460815e-06], ['Named_type::is_named_error_type()', 2.598833643460815e-06], ['this->type_->is_error_type();', 2.598833643460815e-06], ['comparable.', 2.598833643460815e-06], ['Named_type::named_type_is_comparable(std::string*', 2.598833643460815e-06], ['Type::are_compatible_for_comparison(true,', 2.598833643460815e-06], ['Named_type::add_method(const', 2.598833643460815e-06], ['this->local_methods_->add_function(name,', 2.598833643460815e-06], ['this->named_object_->package(),', 2.598833643460815e-06], ['Named_type::add_method_declaration(const', 2.598833643460815e-06], ['this->local_methods_->add_function_declaration(name,', 2.598833643460815e-06], ['Named_type::add_existing_method(Named_object*', 2.598833643460815e-06], ['this->local_methods_->add_named_object(no);', 2.598833643460815e-06], ['Named_type::find_local_method(const', 2.598833643460815e-06], ['this->local_methods_->lookup(name);', 2.598833643460815e-06], ['Named_type::local_methods()', 2.598833643460815e-06], ['Named_type::is_unexported_local_method(Gogo*', 2.598833643460815e-06], ['nt->is_unexported_local_method(gogo,', 2.598833643460815e-06], ['(Gogo::is_hidden_name(p->first)', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(p->first)', 2.598833643460815e-06], ['Named_type::finalize_methods(Gogo*', 2.598833643460815e-06], ['this->interface_type()', 2.598833643460815e-06], ['lm', 2.598833643460815e-06], ['lm->begin_declarations();', 2.598833643460815e-06], ['lm->end_declarations();', 2.598833643460815e-06], ['Named_type::has_any_methods()', 2.598833643460815e-06], ['this->type_->named_type()->has_any_methods();', 2.598833643460815e-06], ['this->type_->struct_type()->has_any_methods();', 2.598833643460815e-06], ['Named_type::methods()', 2.598833643460815e-06], ['this->type_->named_type()->methods();', 2.598833643460815e-06], ['this->type_->struct_type()->methods();', 2.598833643460815e-06], ['Named_type::method_function(const', 2.598833643460815e-06], ['this->type_->struct_type()->method_function(name,', 2.598833643460815e-06], ['Named_type::interface_method_table(Interface_type*', 2.598833643460815e-06], ['nt->interface_method_table(interface,', 2.598833643460815e-06], ['this->type_->struct_type()->interface_method_table(interface,', 2.598833643460815e-06], ['&this->interface_method_tables_,', 2.598833643460815e-06], ['&this->pointer_interface_method_tables_);', 2.598833643460815e-06], ['Find_type_use(Named_type*', 2.598833643460815e-06], ['FIND_TYPE', 2.598833643460815e-06], ['Find_type_use::type(Type*', 2.598833643460815e-06], ['this->find_type_', 2.598833643460815e-06], ['pointer:', 2.598833643460815e-06], ['type->is_slice_type()', 2.598833643460815e-06], ['ignored,', 2.598833643460815e-06], ['type->interface_type()->methods();', 2.598833643460815e-06], ['FIND_TYPE_', 2.598833643460815e-06], ['FIND_TYPE_.', 2.598833643460815e-06], ['this->find_type_->add_dependency(type->named_type());', 2.598833643460815e-06], ['type->base()->named_type())', 2.598833643460815e-06], ['alias.', 2.598833643460815e-06], ['Find_alias(Named_type*', 2.598833643460815e-06], ['Find_alias::type(Type*', 2.598833643460815e-06], ['`type', 2.598833643460815e-06], ['T2`,', 2.598833643460815e-06], ['find_type_', 2.598833643460815e-06], ['indirectly,', 2.598833643460815e-06], ['(!nt->is_alias())', 2.598833643460815e-06], ['(ift', 2.598833643460815e-06], ['ift->local_methods();', 2.598833643460815e-06], ['Named_type::do_verify()', 2.598833643460815e-06], ['(this->is_verified_)', 2.598833643460815e-06], ['this->is_verified_', 2.598833643460815e-06], ['overloads', 2.598833643460815e-06], ['itself:', 2.598833643460815e-06], ['Bindings', 2.598833643460815e-06], ['this->local_methods_->begin_declarations();', 2.598833643460815e-06], ['this->local_methods_->end_declarations();', 2.598833643460815e-06], ['Named_type::do_has_pointer()', 2.598833643460815e-06], ['this->type_->has_pointer();', 2.598833643460815e-06], ['Named_type::do_compare_is_identity(Gogo*', 2.598833643460815e-06], ['seen_', 2.598833643460815e-06], ['this->type_->compare_is_identity(gogo);', 2.598833643460815e-06], ['Named_type::do_is_reflexive()', 2.598833643460815e-06], ['this->type_->is_reflexive();', 2.598833643460815e-06], ['Named_type::do_needs_key_update()', 2.598833643460815e-06], ['this->type_->needs_key_update();', 2.598833643460815e-06], ['Named_type::do_hash_for_method(Gogo*', 2.598833643460815e-06], ['Aliases', 2.598833643460815e-06], ['Type::hash_for_method.', 2.598833643460815e-06], ['name(this->named_object()->name());', 2.598833643460815e-06], ['Gogo::hash_string(name,', 2.598833643460815e-06], ['Type_hash_identical.', 2.598833643460815e-06], ['!this->is_builtin())', 2.598833643460815e-06], ['this->named_object()->package();', 2.598833643460815e-06], ['Gogo::hash_string(gogo->pkgpath(),', 2.598833643460815e-06], ['Gogo::hash_string(package->pkgpath(),', 2.598833643460815e-06], ['dependencies,', 2.598833643460815e-06], ['Named_type::convert(Gogo*', 2.598833643460815e-06], ['(this->is_error_', 2.598833643460815e-06], ['this->is_converted_)', 2.598833643460815e-06], ['unsafe.Sizeof', 2.598833643460815e-06], ['verified', 2.598833643460815e-06], ['verified,', 2.598833643460815e-06], ['this->verify();', 2.598833643460815e-06], ['this->dependencies_.begin();', 2.598833643460815e-06], ['this->dependencies_.end();', 2.598833643460815e-06], ['base->struct_type(),', 2.598833643460815e-06], ['(!base->is_slice_type())', 2.598833643460815e-06], ['bet', 2.598833643460815e-06], ['base->array_type()->get_backend_element(gogo,', 2.598833643460815e-06], ['blen', 2.598833643460815e-06], ['base->array_type()->get_backend_length(gogo);', 2.598833643460815e-06], ['(!gogo->backend()->set_placeholder_array_type(bt,', 2.598833643460815e-06], ['bet,', 2.598833643460815e-06], ['blen))', 2.598833643460815e-06], ['this->is_converted_', 2.598833643460815e-06], ['Named_type::create_placeholder(Gogo*', 2.598833643460815e-06], ['(this->named_btype_', 2.598833643460815e-06], ['for_function', 2.598833643460815e-06], ['base->classification()', 2.598833643460815e-06], ['TYPE_FUNCTION;', 2.598833643460815e-06], ['gogo->backend()->placeholder_pointer_type(this->name(),', 2.598833643460815e-06], ['for_function);', 2.598833643460815e-06], ['gogo->backend()->placeholder_array_type(this->name(),', 2.598833643460815e-06], ['(base->interface_type()->is_empty())', 2.598833643460815e-06], ['(set_name)', 2.598833643460815e-06], ['base->array_type(),', 2.598833643460815e-06], ['(base->interface_type()', 2.598833643460815e-06], ['!base->interface_type()->is_empty())', 2.598833643460815e-06], ['base->interface_type(),', 2.598833643460815e-06], ['Named_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['NAMED_BTYPE_', 2.598833643460815e-06], ['(bt', 2.598833643460815e-06], ['relevant,', 2.598833643460815e-06], ['(!this->is_converted_)', 2.598833643460815e-06], ['bt1;', 2.598833643460815e-06], ['base->struct_type()->finish_backend_fields(gogo);', 2.598833643460815e-06], ['base->array_type()->finish_backend_element(gogo);', 2.598833643460815e-06], ['base->interface_type()->finish_backend_methods(gogo);', 2.598833643460815e-06], ['Named_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['this->is_alias_)', 2.598833643460815e-06], ['this->type_->type_descriptor(gogo,', 2.598833643460815e-06], ['strings.', 2.598833643460815e-06], ['Named_type::do_reflection(Gogo*', 2.598833643460815e-06], ['this->append_reflection_type_name(gogo,', 2.598833643460815e-06], ['Named_type::append_reflection_type_name(Gogo*', 2.598833643460815e-06], ['this->append_reflection(this->type_,', 2.598833643460815e-06], ['(!this->is_builtin())', 2.598833643460815e-06], ['canonicalization', 2.598833643460815e-06], ['tabs', 2.598833643460815e-06], ['this->named_object_->package();', 2.598833643460815e-06], ['package->pkgpath_symbol()', 2.598833643460815e-06], ['gogo->pkgpath_symbol());', 2.598833643460815e-06], ['rcvr_type', 2.598833643460815e-06], ['rcvr->type()->deref()->named_type();', 2.598833643460815e-06], ['ret->append(Gogo::unpack_hidden_name(rcvr_type->name()));', 2.598833643460815e-06], ['(this->in_function_index_', 2.598833643460815e-06], ['ret->append(Gogo::unpack_hidden_name(this->named_object_->name()));', 2.598833643460815e-06], ['Named_type::import_named_type(Import*', 2.598833643460815e-06], ['Named_type**', 2.598833643460815e-06], ['imp->require_c_string("type', 2.598833643460815e-06], ['go_assert(*ptype', 2.598833643460815e-06], ['Export::export_type', 2.598833643460815e-06], ['issued', 2.598833643460815e-06], ['newline,', 2.598833643460815e-06], ['Named_type::do_export(Export*', 2.598833643460815e-06], ['(*p)->export_named_object(exp);', 2.598833643460815e-06], ['p->second->export_named_object(exp);', 2.598833643460815e-06], ['Type::make_named_type(Named_object*', 2.598833643460815e-06], ['Named_type(named_object,', 2.598833643460815e-06], ['*ALL_METHODS', 2.598833643460815e-06], ['Type::finalize_methods(Gogo*', 2.598833643460815e-06], ['Methods**', 2.598833643460815e-06], ['all_methods)', 2.598833643460815e-06], ['Methods();', 2.598833643460815e-06], ['Type::add_methods_for_type(type,', 2.598833643460815e-06], ['*all_methods);', 2.598833643460815e-06], ['((*all_methods)->empty())', 2.598833643460815e-06], ['*all_methods;', 2.598833643460815e-06], ['Type::build_stub_methods(gogo,', 2.598833643460815e-06], ['*all_methods,', 2.598833643460815e-06], ['IS_EMBEDDED_POINTER', 2.598833643460815e-06], ['NEEDS_STUB_METHOD', 2.598833643460815e-06], ['TYPES_SEEN', 2.598833643460815e-06], ['Type::add_methods_for_type(const', 2.598833643460815e-06], ['Type::add_local_methods_for_type(nt,', 2.598833643460815e-06], ['Type::add_embedded_methods_for_type(type,', 2.598833643460815e-06], ['Type::add_interface_methods_for_type(type,', 2.598833643460815e-06], ['Type::add_local_methods_for_type(const', 2.598833643460815e-06], ['local_methods', 2.598833643460815e-06], ['(local_methods', 2.598833643460815e-06], ['local_methods->begin_declarations();', 2.598833643460815e-06], ['local_methods->end_declarations();', 2.598833643460815e-06], ['is_value_method', 2.598833643460815e-06], ['!Type::method_expects_pointer(no));', 2.598833643460815e-06], ['Named_method(no,', 2.598833643460815e-06], ['is_value_method,', 2.598833643460815e-06], ['(!methods->insert(no->name(),', 2.598833643460815e-06], ['Type::add_embedded_methods_for_type(const', 2.598833643460815e-06], ['pf->type();', 2.598833643460815e-06], ['(ftype->points_to()', 2.598833643460815e-06], ['ftype->points_to();', 2.598833643460815e-06], ['ftype->named_type();', 2.598833643460815e-06], ['sub_field_indexes', 2.598833643460815e-06], ['Method::Field_indexes();', 2.598833643460815e-06], ['sub_field_indexes->next', 2.598833643460815e-06], ['field_indexes;', 2.598833643460815e-06], ['sub_field_indexes->field_index', 2.598833643460815e-06], ['tmp_methods;', 2.598833643460815e-06], ['Type::add_methods_for_type(fnt,', 2.598833643460815e-06], ['sub_field_indexes,', 2.598833643460815e-06], ['is_pointer),', 2.598833643460815e-06], ['&tmp_methods);', 2.598833643460815e-06], ['tmp_methods.begin();', 2.598833643460815e-06], ['tmp_methods.end();', 2.598833643460815e-06], ['++fp)', 2.598833643460815e-06], ['(fp->field_name()', 2.598833643460815e-06], ['(!found', 2.598833643460815e-06], ['!methods->insert(p->first,', 2.598833643460815e-06], ['p->second))', 2.598833643460815e-06], ['add_methods_for_type.', 2.598833643460815e-06], ['Type::add_interface_methods_for_type(const', 2.598833643460815e-06], ['it->methods();', 2.598833643460815e-06], ['IT.', 2.598833643460815e-06], ['go_assert(!fntype->is_method());', 2.598833643460815e-06], ['fntype->copy_with_receiver(const_cast<Type*>(type));', 2.598833643460815e-06], ['Interface_method(pm->name(),', 2.598833643460815e-06], ['pm->location(),', 2.598833643460815e-06], ['(!methods->insert(pm->name(),', 2.598833643460815e-06], ['Type::build_stub_methods(Gogo*', 2.598833643460815e-06], ['(m->is_ambiguous()', 2.598833643460815e-06], ['!m->needs_stub_method())', 2.598833643460815e-06], ['m->type();', 2.598833643460815e-06], ['"$this%u",', 2.598833643460815e-06], ['const_cast<Type*>(type);', 2.598833643460815e-06], ['(!m->is_value_method())', 2.598833643460815e-06], ['Type::make_pointer_type(receiver_type);', 2.598833643460815e-06], ['receiver_location', 2.598833643460815e-06], ['m->receiver_location();', 2.598833643460815e-06], ['Typed_identifier(buf,', 2.598833643460815e-06], ['receiver_location);', 2.598833643460815e-06], ['stub_params;', 2.598833643460815e-06], ['(fnparams', 2.598833643460815e-06], ['fnparams->empty())', 2.598833643460815e-06], ['fnparams->begin();', 2.598833643460815e-06], ['fnparams->end();', 2.598833643460815e-06], ['pbuf[100];', 2.598833643460815e-06], ['"$p%u",', 2.598833643460815e-06], ['stub_params->push_back(Typed_identifier(pbuf,', 2.598833643460815e-06], ['pp->location()));', 2.598833643460815e-06], ['fnresults', 2.598833643460815e-06], ['stub_results;', 2.598833643460815e-06], ['(fnresults', 2.598833643460815e-06], ['fnresults->empty())', 2.598833643460815e-06], ['fnresults->begin();', 2.598833643460815e-06], ['fnresults->end();', 2.598833643460815e-06], ['stub_results->push_back(Typed_identifier("",', 2.598833643460815e-06], ['pr->type(),', 2.598833643460815e-06], ['pr->location()));', 2.598833643460815e-06], ['stub_type', 2.598833643460815e-06], ['stub_results,', 2.598833643460815e-06], ['stub_type->set_is_varargs();', 2.598833643460815e-06], ['type->named_type()->named_object()->package();', 2.598833643460815e-06], ['stub_name', 2.598833643460815e-06], ['gogo->stub_method_name(package,', 2.598833643460815e-06], ['stub;', 2.598833643460815e-06], ['Named_object::make_function_declaration(stub_name,', 2.598833643460815e-06], ['gogo->start_function(stub_name,', 2.598833643460815e-06], ['Type::build_one_stub_method(gogo,', 2.598833643460815e-06], ['fntype->is_varargs(),', 2.598833643460815e-06], ['gogo->finish_function(fntype->location());', 2.598833643460815e-06], ['stub->func_value()->set_is_unnamed_type_stub_method();', 2.598833643460815e-06], ['(m->nointerface()', 2.598833643460815e-06], ['stub->func_value()->set_nointerface();', 2.598833643460815e-06], ['m->set_stub_object(stub);', 2.598833643460815e-06], ['RECEIVER_NAME', 2.598833643460815e-06], ['PARAMS', 2.598833643460815e-06], ['Type::build_one_stub_method(Gogo*', 2.598833643460815e-06], ['receiver_name,', 2.598833643460815e-06], ['receiver_object', 2.598833643460815e-06], ['go_assert(receiver_object', 2.598833643460815e-06], ['Expression::make_var_reference(receiver_object,', 2.598833643460815e-06], ['method->field_indexes(),', 2.598833643460815e-06], ['params->empty())', 2.598833643460815e-06], ['go_assert(param', 2.598833643460815e-06], ['param_ref', 2.598833643460815e-06], ['Expression::make_var_reference(param,', 2.598833643460815e-06], ['arguments->push_back(param_ref);', 2.598833643460815e-06], ['method->bind_method(expr,', 2.598833643460815e-06], ['go_assert(func', 2.598833643460815e-06], ['gogo->add_statement(Statement::make_return_from_call(call,', 2.598833643460815e-06], ['Type::apply_field_indexes(Expression*', 2.598833643460815e-06], ['field_indexes->next,', 2.598833643460815e-06], ['expr->type()->deref()->struct_type();', 2.598833643460815e-06], ['(expr->type()->struct_type()', 2.598833643460815e-06], ['go_assert(expr->type()->points_to()', 2.598833643460815e-06], ['Expression::make_field_reference(expr,', 2.598833643460815e-06], ['NO', 2.598833643460815e-06], ['Type::method_expects_pointer(const', 2.598833643460815e-06], ['fntype->receiver()->type()->points_to()', 2.598833643460815e-06], ['METHODS,', 2.598833643460815e-06], ['IS_AMBIGUOUS', 2.598833643460815e-06], ['Type::method_function(const', 2.598833643460815e-06], ['Methods::const_iterator', 2.598833643460815e-06], ['methods->find(name);', 2.598833643460815e-06], ['(m->is_ambiguous())', 2.598833643460815e-06], ['Type::interface_method_table(Type*', 2.598833643460815e-06], ['*interface,', 2.598833643460815e-06], ['method_tables,', 2.598833643460815e-06], ['pointer_tables)', 2.598833643460815e-06], ['go_assert(!interface->is_empty());', 2.598833643460815e-06], ['method_tables', 2.598833643460815e-06], ['pointer_tables;', 2.598833643460815e-06], ['(*pimt', 2.598833643460815e-06], ['*pimt', 2.598833643460815e-06], ['Interface_method_tables(5);', 2.598833643460815e-06], ['Expression*>', 2.598833643460815e-06], ['val(interface,', 2.598833643460815e-06], ['std::pair<Interface_method_tables::iterator,', 2.598833643460815e-06], ['(*pimt)->insert(val);', 2.598833643460815e-06], ['Expression::make_interface_mtable_ref(interface,', 2.598833643460815e-06], ['ins.first->second,', 2.598833643460815e-06], ['Type::bind_field_or_method(Gogo*', 2.598833643460815e-06], ['pointed-to', 2.598833643460815e-06], ['type->points_to()->points_to()', 2.598833643460815e-06], ['type->points_to()->named_type();', 2.598833643460815e-06], ['type->points_to()->struct_type();', 2.598833643460815e-06], ['receiver_can_be_pointer', 2.598833643460815e-06], ['expr->is_addressable());', 2.598833643460815e-06], ['found_pointer_method', 2.598833643460815e-06], ['ambig1;', 2.598833643460815e-06], ['ambig2;', 2.598833643460815e-06], ['(Type::find_field_or_method(type,', 2.598833643460815e-06], ['&is_method,', 2.598833643460815e-06], ['&found_pointer_method,', 2.598833643460815e-06], ['&ambig1,', 2.598833643460815e-06], ['&ambig2))', 2.598833643460815e-06], ['(!is_method)', 2.598833643460815e-06], ['go_assert(st', 2.598833643460815e-06], ['go_assert(type->points_to()', 2.598833643460815e-06], ['st->field_reference(expr,', 2.598833643460815e-06], ['st->method_function(name,', 2.598833643460815e-06], ['"calling', 2.598833643460815e-06], ['dereference",', 2.598833643460815e-06], ['(!m->is_value_method()', 2.598833643460815e-06], ['m->bind_method(expr,', 2.598833643460815e-06], ['go_assert(ret', 2.598833643460815e-06], ['(Gogo::is_erroneous_name(name))', 2.598833643460815e-06], ['(!ambig1.empty())', 2.598833643460815e-06], ['ambig1.c_str(),', 2.598833643460815e-06], ['ambig2.c_str());', 2.598833643460815e-06], ['(found_pointer_method)', 2.598833643460815e-06], ['("reference', 2.598833643460815e-06], ['methods"),', 2.598833643460815e-06], ['is_unexported;', 2.598833643460815e-06], ["'z'", 2.598833643460815e-06], ['seen.clear();', 2.598833643460815e-06], ['Type::is_unexported_field_or_method(gogo,', 2.598833643460815e-06], ['unpacked,', 2.598833643460815e-06], ['&seen);', 2.598833643460815e-06], ['(is_unexported)', 2.598833643460815e-06], ['*IS_METHOD', 2.598833643460815e-06], ['RECEIVER_CAN_BE_POINTER', 2.598833643460815e-06], ['SEEN', 2.598833643460815e-06], ['*FOUND_POINTER_METHOD', 2.598833643460815e-06], ["couldn't", 2.598833643460815e-06], ['LEVEL', 2.598833643460815e-06], ['*AMBIG2.', 2.598833643460815e-06], ['all,', 2.598833643460815e-06], ['*AMBIG2', 2.598833643460815e-06], ['unchanged.', 2.598833643460815e-06], ['Type::find_field_or_method(const', 2.598833643460815e-06], ['is_method,', 2.598833643460815e-06], ['ambig1,', 2.598833643460815e-06], ['ambig2)', 2.598833643460815e-06], ['type->unalias()->named_type();', 2.598833643460815e-06], ['type->points_to()->unalias()->named_type();', 2.598833643460815e-06], ['!Type::method_expects_pointer(no))', 2.598833643460815e-06], ['*found_pointer_method', 2.598833643460815e-06], ['found_ambig1;', 2.598833643460815e-06], ['found_ambig2;', 2.598833643460815e-06], ['(pf->type()->deref()->is_error_type()', 2.598833643460815e-06], ['pf->type()->deref()->is_undefined())', 2.598833643460815e-06], ['go_assert(fnt', 2.598833643460815e-06], ['can_be_pointer', 2.598833643460815e-06], ['pf->type()->points_to()', 2.598833643460815e-06], ['subambig1;', 2.598833643460815e-06], ['subambig2;', 2.598833643460815e-06], ['subfound', 2.598833643460815e-06], ['Type::find_field_or_method(fnt,', 2.598833643460815e-06], ['can_be_pointer,', 2.598833643460815e-06], ['&sublevel,', 2.598833643460815e-06], ['&sub_is_method,', 2.598833643460815e-06], ['&subambig1,', 2.598833643460815e-06], ['&subambig2);', 2.598833643460815e-06], ['(!subfound)', 2.598833643460815e-06], ['(!subambig1.empty())', 2.598833643460815e-06], ['subambig1);', 2.598833643460815e-06], ['subambig2);', 2.598833643460815e-06], ['found_ambig1.clear();', 2.598833643460815e-06], ['found_ambig2.clear();', 2.598833643460815e-06], ['(sublevel', 2.598833643460815e-06], ['(found_ambig1.empty())', 2.598833643460815e-06], ['go_assert(found_parent', 2.598833643460815e-06], ['Gogo::message_name(found_parent->field_name());', 2.598833643460815e-06], ['Gogo::message_name(pf->field_name());', 2.598833643460815e-06], ['ambiguity,', 2.598833643460815e-06], ['(found_is_method', 2.598833643460815e-06], ['(!found_ambig1.empty())', 2.598833643460815e-06], ['go_assert(!found_ambig1.empty());', 2.598833643460815e-06], ['ambig1->assign(found_ambig1);', 2.598833643460815e-06], ['ambig2->assign(found_ambig2);', 2.598833643460815e-06], ['found_is_method;', 2.598833643460815e-06], ['Type::is_unexported_field_or_method(Gogo*', 2.598833643460815e-06], ['seen)', 2.598833643460815e-06], ['(nt->is_unexported_local_method(gogo,', 2.598833643460815e-06], ['it->is_unexported_method(gogo,', 2.598833643460815e-06], ['st->is_unexported_local_field(gogo,', 2.598833643460815e-06], ['(pf->is_anonymous()', 2.598833643460815e-06], ['!pf->type()->deref()->is_error_type()', 2.598833643460815e-06], ['!pf->type()->deref()->is_undefined())', 2.598833643460815e-06], ['(Type::is_unexported_field_or_method(gogo,', 2.598833643460815e-06], ['subtype,', 2.598833643460815e-06], ['seen))', 2.598833643460815e-06], ['Forward_declaration.', 2.598833643460815e-06], ['Forward_declaration_type::Forward_declaration_type(Named_object*', 2.598833643460815e-06], ['Type(TYPE_FORWARD),', 2.598833643460815e-06], ['named_object_(named_object->resolve()),', 2.598833643460815e-06], ['warned_(false)', 2.598833643460815e-06], ['go_assert(this->named_object_->is_unknown()', 2.598833643460815e-06], ['this->named_object_->is_type_declaration());', 2.598833643460815e-06], ['Forward_declaration_type::name()', 2.598833643460815e-06], ['this->named_object()->name();', 2.598833643460815e-06], ['Forward_declaration_type::warn()', 2.598833643460815e-06], ['(no->type_declaration_value()->using_type())', 2.598833643460815e-06], ['Forward_declaration_type::is_defined()', 2.598833643460815e-06], ['this->named_object()->is_type();', 2.598833643460815e-06], ['Forward_declaration_type::add_method(const', 2.598833643460815e-06], ['no->type_declaration_value()->add_method(name,', 2.598833643460815e-06], ['Forward_declaration_type::add_method_declaration(const', 2.598833643460815e-06], ['td->add_method_declaration(name,', 2.598833643460815e-06], ['Forward_declaration_type::add_existing_method(Named_object*', 2.598833643460815e-06], ['nom)', 2.598833643460815e-06], ['no->type_declaration_value()->add_existing_method(nom);', 2.598833643460815e-06], ['Forward_declaration_type::do_traverse(Traverse*', 2.598833643460815e-06], ['(this->is_defined()', 2.598833643460815e-06], ['Type::traverse(this->real_type(),', 2.598833643460815e-06], ['Forward_declaration_type::do_verify()', 2.598833643460815e-06], ['(!this->is_defined()', 2.598833643460815e-06], ['!this->is_nil_constant_as_type())', 2.598833643460815e-06], ['Forward_declaration_type::do_get_backend(Gogo*', 2.598833643460815e-06], ['this->real_type());', 2.598833643460815e-06], ['(this->warned_)', 2.598833643460815e-06], ['fine', 2.598833643460815e-06], ['this->named_object()->location());', 2.598833643460815e-06], ['forwarded', 2.598833643460815e-06], ['Forward_declaration_type::do_type_descriptor(Gogo*', 2.598833643460815e-06], ['(!this->is_defined())', 2.598833643460815e-06], ['Expression::make_error(ploc);', 2.598833643460815e-06], ['this->real_type();', 2.598833643460815e-06], ['Expression::make_error(this->named_object_->location());', 2.598833643460815e-06], ['Forward_declaration_type::do_reflection(Gogo*', 2.598833643460815e-06], ['this->append_reflection(this->real_type(),', 2.598833643460815e-06], ['package).', 2.598833643460815e-06], ['Forward_declaration_type::do_export(Export*)', 2.598833643460815e-06], ['go_assert(!this->is_defined());', 2.598833643460815e-06], ['Type::make_forward_declaration(Named_object*', 2.598833643460815e-06], ['Forward_declaration_type(named_object);', 2.598833643460815e-06], ['Typed_identifier_list.', 2.598833643460815e-06], ['Typed_identifier_list_sort', 2.598833643460815e-06], ['(Gogo::unpack_hidden_name(t1.name())', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(t2.name()));', 2.598833643460815e-06], ['Typed_identifier_list::sort_by_name()', 2.598833643460815e-06], ['std::sort(this->entries_.begin(),', 2.598833643460815e-06], ['this->entries_.end(),', 2.598833643460815e-06], ['Typed_identifier_list_sort());', 2.598833643460815e-06], ['Typed_identifier_list::traverse(Traverse*', 2.598833643460815e-06], ['Typed_identifier_list::copy()', 2.598833643460815e-06], ['ret->push_back(Typed_identifier(p->name(),', 2.598833643460815e-06], ['1997-2019', 2.598833643460815e-06], ['#This', 2.598833643460815e-06], ['#the', 2.598833643460815e-06], ['#Software', 2.598833643460815e-06], ['#version.', 2.598833643460815e-06], ['#ANY', 2.598833643460815e-06], ['#FITNESS', 2.598833643460815e-06], ['#for', 2.598833643460815e-06], ['#You', 2.598833643460815e-06], ['#along', 2.598833643460815e-06], ['#<http://www.gnu.org/licenses/>.', 2.598833643460815e-06], ['system-specific', 2.598833643460815e-06], ['script.', 2.598833643460815e-06], ['Putting', 2.598833643460815e-06], ['autoconf', 2.598833643460815e-06], ['switches,', 2.598833643460815e-06], ['../libgcc/config.host', 2.598833643460815e-06], ['${target},', 2.598833643460815e-06], ['with_*', 2.598833643460815e-06], ['Various', 2.598833643460815e-06], ['configure.', 2.598833643460815e-06], ['enable_threads', 2.598833643460815e-06], ['threads', 2.598833643460815e-06], ['default_use_cxa_atexit', 2.598833643460815e-06], ['$enable___cxa_atexit', 2.598833643460815e-06], ['enable___cxa_atexit', 2.598833643460815e-06], ['$default_use_cxa_atexit', 2.598833643460815e-06], ['default_gnu_indirect_function', 2.598833643460815e-06], ['$enable_gnu_indirect_function', 2.598833643460815e-06], ['enable_gnu_indirect_function', 2.598833643460815e-06], ['ifunc', 2.598833643460815e-06], ['assembler,', 2.598833643460815e-06], ['$default_gnu_indirect_function', 2.598833643460815e-06], ['gas_flag', 2.598833643460815e-06], ['gnu_ld_flag', 2.598833643460815e-06], ['script:', 2.598833643460815e-06], ['cpu_type', 2.598833643460815e-06], ['cpu,', 2.598833643460815e-06], ['tm_defines', 2.598833643460815e-06], ['compilations.', 2.598833643460815e-06], ['"$cpu_type/$cpu_type.h".', 2.598833643460815e-06], ['Usually', 2.598833643460815e-06], ['${cpu_type.h}/elf.h"', 2.598833643460815e-06], ['"${cpu_type}/${cpu_type.h}"', 2.598833643460815e-06], ['elfos.h,', 2.598833643460815e-06], ['specializing', 2.598833643460815e-06], ['${cpu_type.h}/elf.h', 2.598833643460815e-06], ['${cpu_type}/${cpu_type.h}.', 2.598833643460815e-06], ['automatically-generated', 2.598833643460815e-06], ['build-directory', 2.598833643460815e-06], ['"./".', 2.598833643460815e-06], ['$srcdir/config.', 2.598833643460815e-06], ['$out_file.', 2.598833643460815e-06], ['tm_d_file', 2.598833643460815e-06], ['out_file', 2.598833643460815e-06], ['"$cpu_type/$cpu_type.c".', 2.598833643460815e-06], ['common_out_file', 2.598833643460815e-06], ['driver.', 2.598833643460815e-06], ['md_file', 2.598833643460815e-06], ['machine-description', 2.598833643460815e-06], ['"$cpu_type/$cpu_type.md".', 2.598833643460815e-06], ['tmake_file', 2.598833643460815e-06], ['machine-description-specific', 2.598833643460815e-06], ['makefile-fragments,', 2.598833643460815e-06], ['"$cpu_type/t-$cpu_type".', 2.598833643460815e-06], ['extra_modes', 2.598833643460815e-06], ['modes,', 2.598833643460815e-06], ['"$cpu_type/$cpu_type-modes.def".', 2.598833643460815e-06], ['extra_objs', 2.598833643460815e-06], ['(cc1,', 2.598833643460815e-06], ['cc1obj,', 2.598833643460815e-06], ['cc1plus)', 2.598833643460815e-06], ['extra_gcc_objs', 2.598833643460815e-06], ['(gcc)', 2.598833643460815e-06], ['config/${cpu_type}.', 2.598833643460815e-06], ['user_headers_inc_next_pre', 2.598833643460815e-06], ['user_headers_inc_next_post', 2.598833643460815e-06], ['postfixed', 2.598833643460815e-06], ['use_gcc_tgmath', 2.598833643460815e-06], ['tgmath.h', 2.598833643460815e-06], ['use_gcc_stdint', 2.598833643460815e-06], ['"wrap",', 2.598833643460815e-06], ['install', 2.598833643460815e-06], ['stdint.h', 2.598833643460815e-06], ["system's", 2.598833643460815e-06], ['compilations;', 2.598833643460815e-06], ['"provide",', 2.598833643460815e-06], ['header;', 2.598833643460815e-06], ['"none",', 2.598833643460815e-06], ['extra_programs', 2.598833643460815e-06], ['executables', 2.598833643460815e-06], ['machine,', 2.598833643460815e-06], ['extra_options', 2.598833643460815e-06], ['.opt', 2.598833643460815e-06], ['c_target_objs', 2.598833643460815e-06], ['cxx_target_objs', 2.598833643460815e-06], ['d_target_objs', 2.598833643460815e-06], ['fortran_target_objs', 2.598833643460815e-06], ['fortran', 2.598833643460815e-06], ['target_gtfiles', 2.598833643460815e-06], ['xm_defines', 2.598833643460815e-06], ['use_collect2', 2.598833643460815e-06], ['target_cpu_default', 2.598833643460815e-06], ['gdb_needs_out_file_path', 2.598833643460815e-06], ['$out_file`.', 2.598833643460815e-06], ['thread_file', 2.598833643460815e-06], ['gas', 2.598833643460815e-06], ['as.', 2.598833643460815e-06], ['configargs.h,', 2.598833643460815e-06], ['cetera.', 2.598833643460815e-06], ['native_system_header_dir', 2.598833643460815e-06], ['Where', 2.598833643460815e-06], ['/usr/include.', 2.598833643460815e-06], ['--with-sysroot', 2.598833643460815e-06], ['--sysroot', 2.598833643460815e-06], ['sysroot.', 2.598833643460815e-06], ['target_type_format_char', 2.598833643460815e-06], ['.type', 2.598833643460815e-06], ['symbol_name,', 2.598833643460815e-06], ['${t_t_f_c}<property>', 2.598833643460815e-06], ['case-construct', 2.598833643460815e-06], ['gnu_ld', 2.598833643460815e-06], ['ld.', 2.598833643460815e-06], ['target_has_targetcm', 2.598833643460815e-06], ['targetcm.', 2.598833643460815e-06], ['target_has_targetm_common', 2.598833643460815e-06], ['targetm_common.', 2.598833643460815e-06], ['target_has_targetdm', 2.598833643460815e-06], ['targetdm.', 2.598833643460815e-06], ['out_file=', 2.598833643460815e-06], ['common_out_file=', 2.598833643460815e-06], ['tmake_file=', 2.598833643460815e-06], ['user_headers_inc_next_pre=', 2.598833643460815e-06], ['user_headers_inc_next_post=', 2.598833643460815e-06], ['use_gcc_tgmath=yes', 2.598833643460815e-06], ['use_gcc_stdint=none', 2.598833643460815e-06], ['extra_programs=', 2.598833643460815e-06], ['extra_objs=', 2.598833643460815e-06], ['extra_gcc_objs=', 2.598833643460815e-06], ['extra_options=', 2.598833643460815e-06], ['c_target_objs=', 2.598833643460815e-06], ['cxx_target_objs=', 2.598833643460815e-06], ['d_target_objs=', 2.598833643460815e-06], ['fortran_target_objs=', 2.598833643460815e-06], ['target_has_targetcm=no', 2.598833643460815e-06], ['target_has_targetdm=no', 2.598833643460815e-06], ['tm_defines=', 2.598833643460815e-06], ['xm_defines=', 2.598833643460815e-06], ['installation', 2.598833643460815e-06], ['use_collect2=', 2.598833643460815e-06], ['target_cpu_default=', 2.598833643460815e-06], ['$out_file`', 2.598833643460815e-06], ['gdb_needs_out_file_path=', 2.598833643460815e-06], ['thread_file=', 2.598833643460815e-06], ['Reinitialize', 2.598833643460815e-06], ['gas="$gas_flag"', 2.598833643460815e-06], ['gnu_ld="$gnu_ld_flag"', 2.598833643460815e-06], ['default_gnu_indirect_function=no', 2.598833643460815e-06], ['target_gtfiles=', 2.598833643460815e-06], ['need_64bit_isa=', 2.598833643460815e-06], ['native_system_header_dir=/usr/include', 2.598833643460815e-06], ["target_type_format_char='@'", 2.598833643460815e-06], ['build->host->target.', 2.598833643460815e-06], ['Please.', 2.598833643460815e-06], ['xm_file=', 2.598833643460815e-06], ['md_file=', 2.598833643460815e-06], ['Obsolete', 2.598833643460815e-06], ['configurations.', 2.598833643460815e-06], ['*-*-solaris2.10*', 2.598833643460815e-06], ['tile*-*-*', 2.598833643460815e-06], ['"x$enable_obsolete"', 2.598833643460815e-06], ['obsolete."', 2.598833643460815e-06], ['Specify', 2.598833643460815e-06], ['--enable-obsolete', 2.598833643460815e-06], ['anyway."', 2.598833643460815e-06], ['REMOVED', 2.598833643460815e-06], ['GCC,"', 2.598833643460815e-06], ['maintainer', 2.598833643460815e-06], ['forward."', 2.598833643460815e-06], ['fi;;', 2.598833643460815e-06], ['Unsupported', 2.598833643460815e-06], ['permissive', 2.598833643460815e-06], ['alphabetical', 2.598833643460815e-06], ['obsolete', 2.598833643460815e-06], ['arm*-*-*eabi*', 2.598833643460815e-06], ['arm*-wince-pe*', 2.598833643460815e-06], ['arm*-*-ecos-elf', 2.598833643460815e-06], ['arm*-*-elf', 2.598833643460815e-06], ['arm*-*-linux*', 2.598833643460815e-06], ['arm*-*-uclinux*', 2.598833643460815e-06], ['i[34567]86-go32-*', 2.598833643460815e-06], ['i[34567]86-*-go32*', 2.598833643460815e-06], ['m68k-*-uclinuxoldabi*', 2.598833643460815e-06], ['mips64orion*-*-rtems*', 2.598833643460815e-06], ['pdp11-*-bsd', 2.598833643460815e-06], ['powerpc*-*-linux*paired*', 2.598833643460815e-06], ['powerpc*-*-*spe*', 2.598833643460815e-06], ['sparc-hal-solaris2*', 2.598833643460815e-06], ['thumb-*-*', 2.598833643460815e-06], ['*-*-freebsd[12]', 2.598833643460815e-06], ['*-*-freebsd[1234].*', 2.598833643460815e-06], ['*-*-freebsd*aout*', 2.598833643460815e-06], ['*-*-linux*aout*', 2.598833643460815e-06], ['*-*-linux*coff*', 2.598833643460815e-06], ['*-*-linux*libc1*', 2.598833643460815e-06], ['*-*-linux*oldld*', 2.598833643460815e-06], ['*-*-rtemsaout*', 2.598833643460815e-06], ['*-*-rtemscoff*', 2.598833643460815e-06], ['*-*-solaris2', 2.598833643460815e-06], ['*-*-solaris2.[0-9]', 2.598833643460815e-06], ['*-*-solaris2.[0-9].*', 2.598833643460815e-06], ['*-*-sysv*', 2.598833643460815e-06], ['vax-*-vms*', 2.598833643460815e-06], ['cpu_type,', 2.598833643460815e-06], ['tm_file,', 2.598833643460815e-06], ['tm_p_file=', 2.598833643460815e-06], ['cpu_type=`echo', 2.598833643460815e-06], ["'s/-.*$//'`", 2.598833643460815e-06], ['cpu_is_64bit=', 2.598833643460815e-06], ['m32c*-*-*)', 2.598833643460815e-06], ['cpu_type=m32c', 2.598833643460815e-06], ['tmake_file=m32c/t-m32c', 2.598833643460815e-06], ['cpu_type=aarch64', 2.598833643460815e-06], ['extra_headers="arm_fp16.h', 2.598833643460815e-06], ['arm_acle.h"', 2.598833643460815e-06], ['c_target_objs="aarch64-c.o"', 2.598833643460815e-06], ['cxx_target_objs="aarch64-c.o"', 2.598833643460815e-06], ['d_target_objs="aarch64-d.o"', 2.598833643460815e-06], ['extra_objs="aarch64-builtins.o', 2.598833643460815e-06], ['aarch-common.o', 2.598833643460815e-06], ['cortex-a57-fma-steering.o', 2.598833643460815e-06], ['aarch64-speculation.o', 2.598833643460815e-06], ['falkor-tag-collision-avoidance.o', 2.598833643460815e-06], ['aarch64-bti-insert.o"', 2.598833643460815e-06], ['target_gtfiles="\\$(srcdir)/config/aarch64/aarch64-builtins.c"', 2.598833643460815e-06], ['cpu_type=alpha', 2.598833643460815e-06], ['amdgcn*)', 2.598833643460815e-06], ['cpu_type=gcn', 2.598833643460815e-06], ['cpu_type=mn10300', 2.598833643460815e-06], ['cpu_type=arc', 2.598833643460815e-06], ['c_target_objs="arc-c.o"', 2.598833643460815e-06], ['cxx_target_objs="arc-c.o"', 2.598833643460815e-06], ['arc/arc-tables.opt', 2.598833643460815e-06], ['extra_headers="arc-simd.h"', 2.598833643460815e-06], ['cpu_type=arm', 2.598833643460815e-06], ['extra_objs="arm-builtins.o', 2.598833643460815e-06], ['aarch-common.o"', 2.598833643460815e-06], ['extra_headers="mmintrin.h', 2.598833643460815e-06], ['arm_acle.h', 2.598833643460815e-06], ['arm_fp16.h', 2.598833643460815e-06], ['arm_cmse.h"', 2.598833643460815e-06], ["target_type_format_char='%'", 2.598833643460815e-06], ['c_target_objs="arm-c.o"', 2.598833643460815e-06], ['cxx_target_objs="arm-c.o"', 2.598833643460815e-06], ['d_target_objs="arm-d.o"', 2.598833643460815e-06], ['arm/arm-tables.opt"', 2.598833643460815e-06], ['target_gtfiles="\\$(srcdir)/config/arm/arm-builtins.c"', 2.598833643460815e-06], ['cpu_type=avr', 2.598833643460815e-06], ['c_target_objs="avr-c.o"', 2.598833643460815e-06], ['cxx_target_objs="avr-c.o"', 2.598833643460815e-06], ['cpu_type=bfin', 2.598833643460815e-06], ['crisv32-*)', 2.598833643460815e-06], ['cpu_type=cris', 2.598833643460815e-06], ['frv*)', 2.598833643460815e-06], ['cpu_type=frv', 2.598833643460815e-06], ['ft32*)', 2.598833643460815e-06], ['cpu_type=ft32', 2.598833643460815e-06], ['moxie*)', 2.598833643460815e-06], ['cpu_type=moxie', 2.598833643460815e-06], ['fido-*-*)', 2.598833643460815e-06], ['cpu_type=m68k', 2.598833643460815e-06], ['ia64-*-*)', 2.598833643460815e-06], ['extra_headers=ia64intrin.h', 2.598833643460815e-06], ['cpu_type=pa', 2.598833643460815e-06], ['lm32*)', 2.598833643460815e-06], ['m32r*-*-*)', 2.598833643460815e-06], ['cpu_type=m32r', 2.598833643460815e-06], ['m68k-*-*)', 2.598833643460815e-06], ['microblaze*-*-*)', 2.598833643460815e-06], ['cpu_type=microblaze', 2.598833643460815e-06], ['cpu_type=mips', 2.598833643460815e-06], ['d_target_objs="mips-d.o"', 2.598833643460815e-06], ['extra_headers="loongson.h', 2.598833643460815e-06], ['loongson-mmiintrin.h', 2.598833643460815e-06], ['msa.h"', 2.598833643460815e-06], ['extra_objs="frame-header-opt.o"', 2.598833643460815e-06], ['mips/mips-tables.opt"', 2.598833643460815e-06], ['nds32*)', 2.598833643460815e-06], ['cpu_type=nds32', 2.598833643460815e-06], ['extra_headers="nds32_intrinsic.h', 2.598833643460815e-06], ['nds32_isr.h', 2.598833643460815e-06], ['nds32_init.inc"', 2.598833643460815e-06], ['nds32/nds32-linux.opt"', 2.598833643460815e-06], ['nds32/nds32-elf.opt"', 2.598833643460815e-06], ['extra_objs="nds32-cost.o', 2.598833643460815e-06], ['nds32-intrinsic.o', 2.598833643460815e-06], ['nds32-isr.o', 2.598833643460815e-06], ['nds32-md-auxiliary.o', 2.598833643460815e-06], ['nds32-pipelines-auxiliary.o', 2.598833643460815e-06], ['nds32-predicates.o', 2.598833643460815e-06], ['nds32-memory-manipulation.o', 2.598833643460815e-06], ['nds32-fp-as-gp.o', 2.598833643460815e-06], ['nds32-relax-opt.o', 2.598833643460815e-06], ['nds32-utils.o"', 2.598833643460815e-06], ['cpu_type=nios2', 2.598833643460815e-06], ['nvptx-*-*)', 2.598833643460815e-06], ['cpu_type=nvptx', 2.598833643460815e-06], ['cpu_type=or1k', 2.598833643460815e-06], ['powerpc*-*-*)', 2.598833643460815e-06], ['cpu_type=rs6000', 2.598833643460815e-06], ['extra_headers="ppc-asm.h', 2.598833643460815e-06], ['altivec.h', 2.598833643460815e-06], ['htmxlintrin.h"', 2.598833643460815e-06], ['bmiintrin.h"', 2.598833643460815e-06], ['mm_malloc.h', 2.598833643460815e-06], ['emmintrin.h"', 2.598833643460815e-06], ['x86intrin.h"', 2.598833643460815e-06], ['smmintrin.h"', 2.598833643460815e-06], ['ppu_intrinsics.h', 2.598833643460815e-06], ['spu2vmx.h', 2.598833643460815e-06], ['si2vmx.h"', 2.598833643460815e-06], ['amo.h"', 2.598833643460815e-06], ['xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[3456789]|xpower6x|xrs64a|xcell|xa2|xe500mc64|xe5500|xe6500)', 2.598833643460815e-06], ['riscv*)', 2.598833643460815e-06], ['cpu_type=riscv', 2.598833643460815e-06], ['extra_objs="riscv-builtins.o', 2.598833643460815e-06], ['riscv-c.o"', 2.598833643460815e-06], ['d_target_objs="riscv-d.o"', 2.598833643460815e-06], ['rs6000*-*-*)', 2.598833643460815e-06], ['cpu_type=sparc', 2.598833643460815e-06], ['c_target_objs="sparc-c.o"', 2.598833643460815e-06], ['cxx_target_objs="sparc-c.o"', 2.598833643460815e-06], ['d_target_objs="sparc-d.o"', 2.598833643460815e-06], ['extra_headers="visintrin.h"', 2.598833643460815e-06], ['spu*-*-*)', 2.598833643460815e-06], ['cpu_type=spu', 2.598833643460815e-06], ['cpu_type=s390', 2.598833643460815e-06], ['d_target_objs="s390-d.o"', 2.598833643460815e-06], ['extra_headers="s390intrin.h', 2.598833643460815e-06], ['htmxlintrin.h', 2.598833643460815e-06], ['vecintrin.h"', 2.598833643460815e-06], ["'l';", 2.598833643460815e-06], ['"shle"', 2.598833643460815e-06], ['"shl".', 2.598833643460815e-06], ['sh[123456789lbe]*-*-*', 2.598833643460815e-06], ['cpu_type=sh', 2.598833643460815e-06], ['sh_treg_combine.o', 2.598833643460815e-06], ['sh-mem.o', 2.598833643460815e-06], ['sh_optimize_sett_clrt.o"', 2.598833643460815e-06], ['cpu_type=v850', 2.598833643460815e-06], ['cpu_type=c6x', 2.598833643460815e-06], ['extra_headers="c6x_intrinsics.h"', 2.598833643460815e-06], ['c6x/c6x-tables.opt"', 2.598833643460815e-06], ['xtensa*-*-*)', 2.598833643460815e-06], ['tilegx*-*-*)', 2.598833643460815e-06], ['cpu_type=tilegx', 2.598833643460815e-06], ['tilepro*-*-*)', 2.598833643460815e-06], ['cpu_type=tilepro', 2.598833643460815e-06], ['tm_file=${cpu_type}/${cpu_type}.h', 2.598833643460815e-06], ['tm_d_file=${cpu_type}/${cpu_type}.h', 2.598833643460815e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}-protos.h', 2.598833643460815e-06], ['tm_p_file=${cpu_type}/${cpu_type}-protos.h', 2.598833643460815e-06], ['tm_d_file="${tm_d_file}', 2.598833643460815e-06], ['${cpu_type}/${cpu_type}-protos.h"', 2.598833643460815e-06], ['extra_modes=', 2.598833643460815e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}-modes.def', 2.598833643460815e-06], ['extra_modes=${cpu_type}/${cpu_type}-modes.def', 2.598833643460815e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}.opt', 2.598833643460815e-06], ['${cpu_type}/${cpu_type}.opt"', 2.598833643460815e-06], ['xilp32;', 2.598833643460815e-06], ['"x$with_abi"', 2.598833643460815e-06], ['--with-abi."', 2.598833643460815e-06], ['xmx32;', 2.598833643460815e-06], ['m64)', 2.598833643460815e-06], ['tm_p_file="arm/arm-flags.h', 2.598833643460815e-06], ['${tm_p_file}', 2.598833643460815e-06], ['a.out', 2.598833643460815e-06], ['*-*-*aout*)', 2.598833643460815e-06], ['LIBC_GLIBC=1', 2.598833643460815e-06], ['LIBC_UCLIBC=2', 2.598833643460815e-06], ['LIBC_BIONIC=3', 2.598833643460815e-06], ['LIBC_MUSL=4"', 2.598833643460815e-06], ['x86_archs="athlon', 2.598833643460815e-06], ['athlon-4', 2.598833643460815e-06], ['athlon-fx', 2.598833643460815e-06], ['athlon-mp', 2.598833643460815e-06], ['athlon-tbird', 2.598833643460815e-06], ['athlon-xp', 2.598833643460815e-06], ['k6', 2.598833643460815e-06], ['k6-2', 2.598833643460815e-06], ['k6-3', 2.598833643460815e-06], ['geode', 2.598833643460815e-06], ['c3', 2.598833643460815e-06], ['c3-2', 2.598833643460815e-06], ['winchip-c6', 2.598833643460815e-06], ['winchip2', 2.598833643460815e-06], ['i486', 2.598833643460815e-06], ['i586', 2.598833643460815e-06], ['i686', 2.598833643460815e-06], ['pentium', 2.598833643460815e-06], ['pentium-m', 2.598833643460815e-06], ['pentium-mmx', 2.598833643460815e-06], ['pentium2', 2.598833643460815e-06], ['pentium3', 2.598833643460815e-06], ['pentium3m', 2.598833643460815e-06], ['pentium4', 2.598833643460815e-06], ['pentium4m', 2.598833643460815e-06], ['pentiumpro', 2.598833643460815e-06], ['prescott', 2.598833643460815e-06], ['lakemont"', 2.598833643460815e-06], ['x86_64_archs="amdfam10', 2.598833643460815e-06], ['athlon64', 2.598833643460815e-06], ['athlon64-sse3', 2.598833643460815e-06], ['barcelona', 2.598833643460815e-06], ['bdver1', 2.598833643460815e-06], ['bdver2', 2.598833643460815e-06], ['bdver3', 2.598833643460815e-06], ['bdver4', 2.598833643460815e-06], ['znver1', 2.598833643460815e-06], ['znver2', 2.598833643460815e-06], ['btver1', 2.598833643460815e-06], ['btver2', 2.598833643460815e-06], ['k8', 2.598833643460815e-06], ['k8-sse3', 2.598833643460815e-06], ['opteron', 2.598833643460815e-06], ['opteron-sse3', 2.598833643460815e-06], ['nocona', 2.598833643460815e-06], ['core2', 2.598833643460815e-06], ['corei7', 2.598833643460815e-06], ['corei7-avx', 2.598833643460815e-06], ['core-avx-i', 2.598833643460815e-06], ['core-avx2', 2.598833643460815e-06], ['slm', 2.598833643460815e-06], ['nehalem', 2.598833643460815e-06], ['westmere', 2.598833643460815e-06], ['sandybridge', 2.598833643460815e-06], ['ivybridge', 2.598833643460815e-06], ['haswell', 2.598833643460815e-06], ['broadwell', 2.598833643460815e-06], ['bonnell', 2.598833643460815e-06], ['silvermont', 2.598833643460815e-06], ['knl', 2.598833643460815e-06], ['knm', 2.598833643460815e-06], ['skylake-avx512', 2.598833643460815e-06], ['cannonlake', 2.598833643460815e-06], ['icelake-client', 2.598833643460815e-06], ['icelake-server', 2.598833643460815e-06], ['skylake', 2.598833643460815e-06], ['goldmont', 2.598833643460815e-06], ['goldmont-plus', 2.598833643460815e-06], ['tremont', 2.598833643460815e-06], ['cascadelake', 2.598833643460815e-06], ['native"', 2.598833643460815e-06], ['Additional', 2.598833643460815e-06], ['--with-cpu=.', 2.598833643460815e-06], ['x86_cpus="generic', 2.598833643460815e-06], ['intel"', 2.598833643460815e-06], ['widely', 2.598833643460815e-06], ['ported', 2.598833643460815e-06], ['systems.', 2.598833643460815e-06], ['*-*-darwin*)', 2.598833643460815e-06], ['tmake_file="t-darwin', 2.598833643460815e-06], ['${cpu_type}/t-darwin"', 2.598833643460815e-06], ['darwin.h"', 2.598833643460815e-06], ['*-*-darwin9*)', 2.598833643460815e-06], ['darwin9.h"', 2.598833643460815e-06], ['*-*-darwin[1][01]*)', 2.598833643460815e-06], ['darwin10.h"', 2.598833643460815e-06], ['*-*-darwin[1][2-9]*', 2.598833643460815e-06], ['*-*-darwin[2][0-9]*)', 2.598833643460815e-06], ['darwin10.h', 2.598833643460815e-06], ['darwin12.h"', 2.598833643460815e-06], ['${cpu_type}/darwin.h"', 2.598833643460815e-06], ['darwin-protos.h"', 2.598833643460815e-06], ['target_gtfiles="\\$(srcdir)/config/darwin.c"', 2.598833643460815e-06], ['darwin.opt"', 2.598833643460815e-06], ['fortran_target_objs="darwin-f.o"', 2.598833643460815e-06], ['darwin.o"', 2.598833643460815e-06], ['extra_gcc_objs="darwin-driver.o"', 2.598833643460815e-06], ['*-*-dragonfly*)', 2.598833643460815e-06], ['single)', 2.598833643460815e-06], ['non-posix', 2.598833643460815e-06], ['selections', 2.598833643460815e-06], ['DragonFly', 2.598833643460815e-06], ["BSD'", 2.598833643460815e-06], ['dragonfly.opt"', 2.598833643460815e-06], ['*-*-freebsd*)', 2.598833643460815e-06], ['FreeBSD.', 2.598833643460815e-06], ['refine', 2.598833643460815e-06], ['configuration.', 2.598833643460815e-06], ['Due', 2.598833643460815e-06], ['architectures,', 2.598833643460815e-06], ['fbsd_tm_file', 2.598833643460815e-06], ['dictate', 2.598833643460815e-06], ['freebsd<version_number>.h', 2.598833643460815e-06], ['[freebsd-<conf_option>.h', 2.598833643460815e-06], ['...]', 2.598833643460815e-06], ['tamper', 2.598833643460815e-06], ['pleases', 2.598833643460815e-06], ['core', 2.598833643460815e-06], ['fbsd_major=`echo', 2.598833643460815e-06], ["'s/.*freebsd//g'", 2.598833643460815e-06], ["'s/\\..*//g'`", 2.598833643460815e-06], ['"$fbsd_major"', 2.598833643460815e-06], ['"Specify', 2.598833643460815e-06], ['targeted', 2.598833643460815e-06], ['release"', 2.598833643460815e-06], ['"like', 2.598833643460815e-06], ['--target=amd64-unknown-freebsd10.1"', 2.598833643460815e-06], ['FBSD_MAJOR=${fbsd_major}"', 2.598833643460815e-06], ['freebsd-nthr.h"', 2.598833643460815e-06], ["FreeBSD'", 2.598833643460815e-06], ['freebsd-stdint.h"', 2.598833643460815e-06], ['freebsd.opt"', 2.598833643460815e-06], ['*-*-freebsd[345].*)', 2.598833643460815e-06], ['default_use_cxa_atexit=yes;;', 2.598833643460815e-06], ['*-*-fuchsia*)', 2.598833643460815e-06], ['*-*-gnu*', 2.598833643460815e-06], ['*-*-gnu*)', 2.598833643460815e-06], ['switch:', 2.598833643460815e-06], ['bionic.', 2.598833643460815e-06], ['bionic', 2.598833643460815e-06], ['GNU/Hurd', 2.598833643460815e-06], ['GNU/k*BSD.', 2.598833643460815e-06], ['*linux*)', 2.598833643460815e-06], ['linux-protos.h"', 2.598833643460815e-06], ['t-linux"', 2.598833643460815e-06], ['linux.o"', 2.598833643460815e-06], ['linux.opt"', 2.598833643460815e-06], ['DEFAULT_LIBC=LIBC_BIONIC"', 2.598833643460815e-06], ['*-*-*musl*)', 2.598833643460815e-06], ['DEFAULT_LIBC=LIBC_MUSL"', 2.598833643460815e-06], ['uClibc', 2.598833643460815e-06], ['Bionic', 2.598833643460815e-06], ['use_gcc_tgmath=no', 2.598833643460815e-06], ['Android', 2.598833643460815e-06], ['*android*', 2.598833643460815e-06], ['ANDROID_DEFAULT=1"', 2.598833643460815e-06], ['ANDROID_DEFAULT=0"', 2.598833643460815e-06], ['glibc-d.o"', 2.598833643460815e-06], ['t-glibc"', 2.598833643460815e-06], ['*-*-netbsd*)', 2.598833643460815e-06], ['netbsd-protos.h"', 2.598833643460815e-06], ['tmake_file="t-netbsd', 2.598833643460815e-06], ['netbsd.o"', 2.598833643460815e-06], ['netbsd-d.o"', 2.598833643460815e-06], ['nbsd_tm_file="netbsd.h', 2.598833643460815e-06], ['netbsd-stdint.h', 2.598833643460815e-06], ['netbsd-elf.h"', 2.598833643460815e-06], ['*-*-openbsd*)', 2.598833643460815e-06], ['tmake_file="t-openbsd"', 2.598833643460815e-06], ['*-*-openbsd4.[3-9]|*-*-openbsd[5-9]*)', 2.598833643460815e-06], ['*-*-phoenix*)', 2.598833643460815e-06], ['rtems)', 2.598833643460815e-06], ["thread_file='rtems'", 2.598833643460815e-06], ["RTEMS'", 2.598833643460815e-06], ['t-rtems"', 2.598833643460815e-06], ['rtems.opt"', 2.598833643460815e-06], ['*-*-uclinux*)', 2.598833643460815e-06], ['DEFAULT_LIBC=LIBC_UCLIBC', 2.598833643460815e-06], ['SINGLE_LIBC"', 2.598833643460815e-06], ['*-*-rdos*)', 2.598833643460815e-06], ['*-*-solaris2*)', 2.598833643460815e-06], ['i?86-*-solaris2*', 2.598833643460815e-06], ['sol2_tm_file_head="dbxelf.h', 2.598833643460815e-06], ['${cpu_type}/sysv4.h"', 2.598833643460815e-06], ['sol2_tm_file_tail="${cpu_type}/sol2.h', 2.598833643460815e-06], ['sol2.h"', 2.598833643460815e-06], ['sol2_tm_file="${sol2_tm_file_head}', 2.598833643460815e-06], ['*-*-solaris2.1[1-9]*)', 2.598833643460815e-06], ['11.4.', 2.598833643460815e-06], ['tm_file="usegld.h', 2.598833643460815e-06], ['tm_file="usegas.h', 2.598833643460815e-06], ['sol2-protos.h"', 2.598833643460815e-06], ['t-sol2', 2.598833643460815e-06], ['sol2-c.o"', 2.598833643460815e-06], ['sol2-c.o', 2.598833643460815e-06], ['sol2-cxx.o"', 2.598833643460815e-06], ['sol2-d.o"', 2.598833643460815e-06], ['sol2.o', 2.598833643460815e-06], ['sol2-stubs.o"', 2.598833643460815e-06], ['sol2.opt"', 2.598833643460815e-06], ['${enable_threads}:${have_pthread_h}:${have_thread_h}', 2.598833643460815e-06], ['"":yes:*', 2.598833643460815e-06], ['yes:yes:*', 2.598833643460815e-06], ['*-*-*vms*)', 2.598833643460815e-06], ['vms/vms.opt"', 2.598833643460815e-06], ['xmake_file=vms/x-vms', 2.598833643460815e-06], ['tmake_file="vms/t-vms', 2.598833643460815e-06], ['extra_objs="vms.o"', 2.598833643460815e-06], ['target_gtfiles="$target_gtfiles', 2.598833643460815e-06], ['\\$(srcdir)/config/vms/vms.c"', 2.598833643460815e-06], ['vms/vms-protos.h"', 2.598833643460815e-06], ['xm_file="vms/xm-vms.h"', 2.598833643460815e-06], ['c_target_objs="vms-c.o"', 2.598833643460815e-06], ['cxx_target_objs="vms-c.o"', 2.598833643460815e-06], ['fortran_target_objs="vms-f.o"', 2.598833643460815e-06], ['vms/vms-stdint.h"', 2.598833643460815e-06], ['extra_programs="ld\\$(exeext)', 2.598833643460815e-06], ['ar\\$(exeext)"', 2.598833643460815e-06], ['vms/t-vmsnative"', 2.598833643460815e-06], ['*-*-vxworks*)', 2.598833643460815e-06], ['tmake_file=t-vxworks', 2.598833643460815e-06], ['vxworks.opt"', 2.598833643460815e-06], ['vxworks.o"', 2.598833643460815e-06], ['vxworks-stdint.h"', 2.598833643460815e-06], ['vxworks)', 2.598833643460815e-06], ["thread_file='vxworks'", 2.598833643460815e-06], ["VxWorks';", 2.598833643460815e-06], ['*-*-vxworks7*)', 2.598833643460815e-06], ['TARGET_VXWORKS7=1"', 2.598833643460815e-06], ['*64-*-vxworks*)', 2.598833643460815e-06], ['TARGET_VXWORKS64=1"', 2.598833643460815e-06], ['*-*-elf|arc*-*-elf*)', 2.598833643460815e-06], ['aarch64*-*-elf', 2.598833643460815e-06], ['aarch64*-*-fuchsia*', 2.598833643460815e-06], ['aarch64*-*-rtems*)', 2.598833643460815e-06], ['aarch64/aarch64-elf-raw.h"', 2.598833643460815e-06], ['aarch64/t-aarch64"', 2.598833643460815e-06], ['aarch64-*-elf*)', 2.598833643460815e-06], ['aarch64-*-fuchsia*)', 2.598833643460815e-06], ['aarch64-*-rtems*)', 2.598833643460815e-06], ['aarch64/rtems.h"', 2.598833643460815e-06], ['aarch64*-*-freebsd*)', 2.598833643460815e-06], ['${fbsd_tm_file}"', 2.598833643460815e-06], ['aarch64/aarch64-freebsd.h"', 2.598833643460815e-06], ['aarch64/t-aarch64-freebsd"', 2.598833643460815e-06], ['aarch64*-*-linux*)', 2.598833643460815e-06], ['aarch64/aarch64-linux.h"', 2.598833643460815e-06], ['aarch64/t-aarch64-linux"', 2.598833643460815e-06], ['ILP32', 2.598833643460815e-06], ['mature.', 2.598833643460815e-06], ['aarch64_multilibs="lp64"', 2.598833643460815e-06], ['alpha*-*-linux*)', 2.598833643460815e-06], ['alpha/linux.h', 2.598833643460815e-06], ['alpha/linux-elf.h', 2.598833643460815e-06], ['alpha/t-linux', 2.598833643460815e-06], ['alpha*-*-netbsd*)', 2.598833643460815e-06], ['alpha/netbsd.h"', 2.598833643460815e-06], ['alpha*-*-openbsd*)', 2.598833643460815e-06], ['OBSD_HAS_DECLARE_FUNCTION_NAME', 2.598833643460815e-06], ['OBSD_HAS_DECLARE_FUNCTION_SIZE', 2.598833643460815e-06], ['OBSD_HAS_DECLARE_OBJECT"', 2.598833643460815e-06], ['alpha/alpha.h', 2.598833643460815e-06], ['alpha/openbsd.h', 2.598833643460815e-06], ['openbsd-libpthread.h"', 2.598833643460815e-06], ['openbsd.opt', 2.598833643460815e-06], ['x-alpha', 2.598833643460815e-06], ['dec-osf.', 2.598833643460815e-06], ['alpha*-dec-*vms*)', 2.598833643460815e-06], ['alpha/vms.h"', 2.598833643460815e-06], ['alpha/t-vms', 2.598833643460815e-06], ['arc*-*-elf*)', 2.598833643460815e-06], ['arc/elf.h', 2.598833643460815e-06], ['tmake_file="arc/t-multilib', 2.598833643460815e-06], ['arc*-*-linux*)', 2.598833643460815e-06], ['arc/linux.h', 2.598833643460815e-06], ['arc/t-multilib-linux', 2.598833643460815e-06], ['arm-wrs-vxworks|arm-wrs-vxworks7)', 2.598833643460815e-06], ['arm/vxworks.opt"', 2.598833643460815e-06], ['arm/t-vxworks"', 2.598833643460815e-06], ['*-vxworks7)', 2.598833643460815e-06], ['VxWorks7', 2.598833643460815e-06], ['adheres', 2.598833643460815e-06], ['Platform', 2.598833643460815e-06], ['tm_file="arm/bpabi.h', 2.598833643460815e-06], ['divmod', 2.598833643460815e-06], ['r0-r3.', 2.598833643460815e-06], ['need_64bit_hwint=yes', 2.598833643460815e-06], ['arm/vxworks.h"', 2.598833643460815e-06], ['target_cpu_cname="arm8"', 2.598833643460815e-06], ['arm*-*-freebsd*)', 2.598833643460815e-06], ['arm/elf.h"', 2.598833643460815e-06], ['arm*b-*-freebsd*)', 2.598833643460815e-06], ['arm/freebsd.h', 2.598833643460815e-06], ['armv6*-*-freebsd*)', 2.598833643460815e-06], ['target_cpu_cname="arm1176jzf-s"', 2.598833643460815e-06], ['armv7*-*-freebsd*)', 2.598833643460815e-06], ['target_cpu_cname="arm9"', 2.598833643460815e-06], ['arm*-*-netbsdelf*)', 2.598833643460815e-06], ['arm/netbsd-elf.h"', 2.598833643460815e-06], ['arm/t-arm"', 2.598833643460815e-06], ['target_cpu_cname="strongarm"', 2.598833643460815e-06], ['arm*-*-linux-*)', 2.598833643460815e-06], ['arm/linux-elf.h"', 2.598833643460815e-06], ['arm*b-*-linux*)', 2.598833643460815e-06], ['arm/t-linux-eabi"', 2.598833643460815e-06], ['arm/linux-eabi.h', 2.598833643460815e-06], ['Generation', 2.598833643460815e-06], ['ARMv5te.', 2.598833643460815e-06], ['"hard"', 2.598833643460815e-06], ['"softfp"', 2.598833643460815e-06], ['target_cpu_cname="arm10e"', 2.598833643460815e-06], ['arm-linux-androideabi.', 2.598833643460815e-06], ['*-androideabi)', 2.598833643460815e-06], ['arm/t-linux-androideabi"', 2.598833643460815e-06], ['arm*-*-uclinux*eabi*)', 2.598833643460815e-06], ['ucLinux', 2.598833643460815e-06], ['arm/uclinux-elf.h', 2.598833643460815e-06], ['arm/uclinux-eabi.h', 2.598833643460815e-06], ['arm*-*-phoenix*)', 2.598833643460815e-06], ['phoenix.h"', 2.598833643460815e-06], ['arm/t-phoenix"', 2.598833643460815e-06], ['arm*-*-eabi*', 2.598833643460815e-06], ['arm*-*-symbianelf*', 2.598833643460815e-06], ['arm*-*-rtems*', 2.598833643460815e-06], ['arm*eb-*-eabi*)', 2.598833643460815e-06], ['arm/t-arm-elf"', 2.598833643460815e-06], ['arm*-*-eabi*)', 2.598833643460815e-06], ['fuchsia.h', 2.598833643460815e-06], ['arm/fuchsia-elf.h', 2.598833643460815e-06], ['arm/t-fuchsia"', 2.598833643460815e-06], ['arm*-*-rtems*)', 2.598833643460815e-06], ['arm/rtems.h', 2.598833643460815e-06], ['arm/t-rtems"', 2.598833643460815e-06], ['arm*-*-symbianelf*)', 2.598833643460815e-06], ['arm/symbian.h"', 2.598833643460815e-06], ['t-bpabi', 2.598833643460815e-06], ['Symbian', 2.598833643460815e-06], ['arm/t-symbian"', 2.598833643460815e-06], ['avr/elf.h', 2.598833643460815e-06], ['avr/avr-arch.h', 2.598833643460815e-06], ['avr/avr.h', 2.598833643460815e-06], ['avr/specs.h', 2.598833643460815e-06], ['avr/avr-stdint.h"', 2.598833643460815e-06], ['x${with_avrlibc}', 2.598833643460815e-06], ['${cpu_type}/avrlibc.h"', 2.598833643460815e-06], ['WITH_AVRLIBC"', 2.598833643460815e-06], ['avr/t-avr', 2.598833643460815e-06], ['avr/t-multilib"', 2.598833643460815e-06], ['extra_gcc_objs="driver-avr.o', 2.598833643460815e-06], ['avr-devices.o"', 2.598833643460815e-06], ['extra_objs="avr-devices.o', 2.598833643460815e-06], ['avr-log.o"', 2.598833643460815e-06], ['bfin*-elf*)', 2.598833643460815e-06], ['tmake_file=bfin/t-bfin-elf', 2.598833643460815e-06], ['bfin*-uclinux*)', 2.598833643460815e-06], ['bfin/uclinux.h"', 2.598833643460815e-06], ['tmake_file=bfin/t-bfin-uclinux', 2.598833643460815e-06], ['bfin*-linux-uclibc*)', 2.598833643460815e-06], ['bfin/linux.h', 2.598833643460815e-06], ['./linux-sysroot-suffix.h"', 2.598833643460815e-06], ['bfin/t-bfin-linux"', 2.598833643460815e-06], ['bfin*-rtems*)', 2.598833643460815e-06], ['bfin/rtems.h', 2.598833643460815e-06], ['bfin/t-rtems"', 2.598833643460815e-06], ['cr16-*-elf)', 2.598833643460815e-06], ['cr16/t-cr16', 2.598833643460815e-06], ['crisv32-*-elf', 2.598833643460815e-06], ['crisv32-*-none)', 2.598833643460815e-06], ['tmake_file="cris/t-cris"', 2.598833643460815e-06], ['cris-*-elf', 2.598833643460815e-06], ['cris-*-none)', 2.598833643460815e-06], ['tmake_file="cris/t-cris', 2.598833643460815e-06], ['cris/t-elfmulti"', 2.598833643460815e-06], ['crisv32-*-linux*', 2.598833643460815e-06], ['cris-*-linux*)', 2.598833643460815e-06], ['cris/linux.h"', 2.598833643460815e-06], ['cris/t-cris', 2.598833643460815e-06], ['cris/t-linux"', 2.598833643460815e-06], ['cris/linux.opt"', 2.598833643460815e-06], ['cris-*-*)', 2.598833643460815e-06], ['target_cpu_default=10', 2.598833643460815e-06], ['crisv32-*-*)', 2.598833643460815e-06], ['x${with_float}', 2.598833643460815e-06], ['tm_file="csky/csky.h"', 2.598833643460815e-06], ['md_file="csky/csky.md"', 2.598833643460815e-06], ['out_file="csky/csky.c"', 2.598833643460815e-06], ['csky/csky-protos.h"', 2.598833643460815e-06], ['csky/csky_tables.opt"', 2.598833643460815e-06], ['x${enable_tpf_debug}', 2.598833643460815e-06], ['ENABLE_TPF_DEBUG"', 2.598833643460815e-06], ['csky-*-elf*)', 2.598833643460815e-06], ['csky/csky-elf.h"', 2.598833643460815e-06], ['tmake_file="csky/t-csky', 2.598833643460815e-06], ['csky/t-csky-elf"', 2.598833643460815e-06], ['csky-*-linux*)', 2.598833643460815e-06], ['csky/csky-linux-elf.h"', 2.598833643460815e-06], ['csky/t-csky', 2.598833643460815e-06], ['csky/t-csky-linux"', 2.598833643460815e-06], ['csky/t-sysroot-suffix"', 2.598833643460815e-06], ['csky-*-linux-gnu*)', 2.598833643460815e-06], ['csky-*-linux-uclibc*)', 2.598833643460815e-06], ['epiphany-*-elf', 2.598833643460815e-06], ['epiphany/t-epiphany"', 2.598833643460815e-06], ['epiphany/rtems.h', 2.598833643460815e-06], ['mode-switch-use.o', 2.598833643460815e-06], ['resolve-sw-modes.o"', 2.598833643460815e-06], ['EPIPHANY_STACK_OFFSET=${with_stack_offset:-8}"', 2.598833643460815e-06], ['extra_headers="epiphany_intrinsics.h"', 2.598833643460815e-06], ['fr30-*-elf)', 2.598833643460815e-06], ['frv-*-elf)', 2.598833643460815e-06], ['tmake_file=frv/t-frv', 2.598833643460815e-06], ['frv-*-*linux*)', 2.598833643460815e-06], ['frv/linux.h"', 2.598833643460815e-06], ['frv/t-frv', 2.598833643460815e-06], ['frv/t-linux"', 2.598833643460815e-06], ['ft32-*-elf)', 2.598833643460815e-06], ['ft32/t-ft32"', 2.598833643460815e-06], ['amdgcn-*-amdhsa)', 2.598833643460815e-06], ['gcn/gcn-hsa.h', 2.598833643460815e-06], ['gcn/gcn.h', 2.598833643460815e-06], ['tmake_file="gcn/t-gcn-hsa"', 2.598833643460815e-06], ['extra_modes=gcn/gcn-modes.def', 2.598833643460815e-06], ['gcn-tree.o"', 2.598833643460815e-06], ['extra_gcc_objs="driver-gcn.o"', 2.598833643460815e-06], ['"$host"', 2.598833643460815e-06], ['x86_64*-*-linux-gnu', 2.598833643460815e-06], ['"$ac_cv_search_dlopen"', 2.598833643460815e-06], ['gcn-run\\$(exeext)"', 2.598833643460815e-06], ['gcn/offload.h"', 2.598833643460815e-06], ['moxie-*-elf)', 2.598833643460815e-06], ['moxie-*-uclinux*)', 2.598833643460815e-06], ['moxie/uclinux.h"', 2.598833643460815e-06], ['moxie-*-rtems*)', 2.598833643460815e-06], ['tm_file="moxie/moxie.h', 2.598833643460815e-06], ['moxie/rtems.h', 2.598833643460815e-06], ['moxie-*-moxiebox*)', 2.598833643460815e-06], ['moxie/moxiebox.h', 2.598833643460815e-06], ['moxie/t-moxiebox"', 2.598833643460815e-06], ['h8300-*-elf*)', 2.598833643460815e-06], ['tmake_file="h8300/t-h8300"', 2.598833643460815e-06], ['h8300/elf.h"', 2.598833643460815e-06], ['h8300-*-linux*)', 2.598833643460815e-06], ['h8300/t-h8300', 2.598833643460815e-06], ['h8300/t-linux"', 2.598833643460815e-06], ['h8300/linux.h"', 2.598833643460815e-06], ['hppa*64*-*-linux*)', 2.598833643460815e-06], ['pa/pa64-linux.h"', 2.598833643460815e-06], ['hppa*-*-linux*)', 2.598833643460815e-06], ['target_cpu_default="MASK_PA_11|MASK_NO_SPACE_REGS|MASK_CALLER_COPIES"', 2.598833643460815e-06], ['pa/pa32-linux.h"', 2.598833643460815e-06], ['hppa*-*-openbsd*)', 2.598833643460815e-06], ['pa/pa-openbsd.h', 2.598833643460815e-06], ['pa/pa32-openbsd.h"', 2.598833643460815e-06], ['tmake_file="pa/t-pa"', 2.598833643460815e-06], ['hppa[12]*-*-hpux10*)', 2.598833643460815e-06], ['pa/pa-hpux10.h"', 2.598833643460815e-06], ['pa/pa-hpux10.opt"', 2.598833643460815e-06], ['*-*-hpux10.[1-9]*)', 2.598833643460815e-06], ['pa/pa-hpux1010.h"', 2.598833643460815e-06], ['pa/pa-hpux1010.opt"', 2.598833643460815e-06], ['x$have_pthread_h', 2.598833643460815e-06], ['dce)', 2.598833643460815e-06], ['hppa*64*-*-hpux11*)', 2.598833643460815e-06], ['pa/pa-hpux1111.h', 2.598833643460815e-06], ['pa/pa-hpux1131.h', 2.598833643460815e-06], ['pa/pa64-hpux.opt', 2.598833643460815e-06], ['hppa[12]*-*-hpux11*)', 2.598833643460815e-06], ['pa/pa-hpux1111.h"', 2.598833643460815e-06], ['pa/pa-hpux1131.h"', 2.598833643460815e-06], ['i[34567]86-*-darwin*)', 2.598833643460815e-06], ['Baseline', 2.598833643460815e-06], ['choice', 2.598833643460815e-06], ['i386/iamcu.h"', 2.598833643460815e-06], ['i[34567]86-*-elf*)', 2.598833643460815e-06], ['i386/i386elf.h"', 2.598833643460815e-06], ['x86_64-*-elf*)', 2.598833643460815e-06], ['x86_64-*-rtems*)', 2.598833643460815e-06], ['i[34567]86-*-rdos*)', 2.598833643460815e-06], ['i386/rdos.h"', 2.598833643460815e-06], ['x86_64-*-rdos*)', 2.598833643460815e-06], ['i386/rdos.h', 2.598833643460815e-06], ['i386/rdos64.h"', 2.598833643460815e-06], ['tmake_file="i386/t-i386elf', 2.598833643460815e-06], ['t-svr4"', 2.598833643460815e-06], ['i[34567]86-*-dragonfly*)', 2.598833643460815e-06], ['i[34567]86-*-freebsd*)', 2.598833643460815e-06], ['i386/freebsd.h"', 2.598833643460815e-06], ['i386/freebsd.h', 2.598833643460815e-06], ['i386/freebsd64.h"', 2.598833643460815e-06], ['i[34567]86-*-netbsdelf*)', 2.598833643460815e-06], ['i386/netbsd-elf.h"', 2.598833643460815e-06], ['x86_64-*-netbsd*)', 2.598833643460815e-06], ['i386/netbsd64.h"', 2.598833643460815e-06], ['i[34567]86-*-openbsd*)', 2.598833643460815e-06], ['x86_64-*-openbsd*)', 2.598833643460815e-06], ['i[34567]86-*-gnu*', 2.598833643460815e-06], ["80386's", 2.598833643460815e-06], ['GNU/*', 2.598833643460815e-06], ['i[34567]86-*-linux*)', 2.598833643460815e-06], ['linux-android.h"', 2.598833643460815e-06], ['i386/gnu-user64.h', 2.598833643460815e-06], ['i386/linux.h"', 2.598833643460815e-06], ['i[34567]86-*-kfreebsd*-gnu)', 2.598833643460815e-06], ['i386/kfreebsd-gnu.h"', 2.598833643460815e-06], ['kopensolaris-gnu.h', 2.598833643460815e-06], ['i386/kopensolaris-gnu.h"', 2.598833643460815e-06], ['gnu.h', 2.598833643460815e-06], ['i386/gnu.h"', 2.598833643460815e-06], ['x86_64-*-linux*', 2.598833643460815e-06], ['i386/gnu-user64.h"', 2.598833643460815e-06], ['i386/kfreebsd-gnu64.h"', 2.598833643460815e-06], ['x86_multilibs="mx32"', 2.598833643460815e-06], ['i[34567]86-pc-msdosdjgpp*)', 2.598833643460815e-06], ['xm_file=i386/xm-djgpp.h', 2.598833643460815e-06], ['tm_file="dbxcoff.h', 2.598833643460815e-06], ['i386/djgpp.h', 2.598833643460815e-06], ['i386/djgpp-stdint.h"', 2.598833643460815e-06], ['native_system_header_dir=/dev/env/DJDIR/include', 2.598833643460815e-06], ['i386/djgpp.opt"', 2.598833643460815e-06], ['i[34567]86-*-lynxos*)', 2.598833643460815e-06], ['i386/lynx.h', 2.598833643460815e-06], ['t-lynx"', 2.598833643460815e-06], ['i[34567]86-*-nto-qnx*)', 2.598833643460815e-06], ['i386/nto.h"', 2.598833643460815e-06], ['i386/nto.opt"', 2.598833643460815e-06], ['i[34567]86-*-rtems*)', 2.598833643460815e-06], ['i386/t-rtems"', 2.598833643460815e-06], ['pentium4,', 2.598833643460815e-06], ['config.guess', 2.598833643460815e-06], ['i386-pc-solaris2*.', 2.598833643460815e-06], ['with_arch_32=${with_arch_32:-pentium4}', 2.598833643460815e-06], ['with_tune_32=${with_tune_32:-generic}', 2.598833643460815e-06], ['${sol2_tm_file_head}', 2.598833643460815e-06], ['i386/t-sol2"', 2.598833643460815e-06], ['i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae|i[4567]86-wrs-vxworks7|x86_64-wrs-vxworks7)', 2.598833643460815e-06], ['vx-common.h"', 2.598833643460815e-06], ['i386/vxworks.h', 2.598833643460815e-06], ['i386/vxworksae.h"', 2.598833643460815e-06], ['i386/t-vxworks', 2.598833643460815e-06], ['i386/t-vxworksae"', 2.598833643460815e-06], ['i386/vxworks.h"', 2.598833643460815e-06], ['i386/t-vxworks"', 2.598833643460815e-06], ['i[34567]86-*-cygwin*)', 2.598833643460815e-06], ['i386/cygwin-w64.h', 2.598833643460815e-06], ['t-slibgcc', 2.598833643460815e-06], ['i386/t-cygwin-w64"', 2.598833643460815e-06], ['TARGET_CYGWIN64=1"', 2.598833643460815e-06], ['i386/cygming.h"', 2.598833643460815e-06], ['xm_file=i386/xm-mingw32.h', 2.598833643460815e-06], ['target_has_targetcm="yes"', 2.598833643460815e-06], ['x86_64-*-*', 2.598833643460815e-06], ['i386/mingw-pthread.h"', 2.598833643460815e-06], ['i386/mingw32.h"', 2.598833643460815e-06], ["mingw's", 2.598833643460815e-06], ['w64', 2.598833643460815e-06], ['user_headers_inc_next_post="${user_headers_inc_next_post}', 2.598833643460815e-06], ['float.h"', 2.598833643460815e-06], ['user_headers_inc_next_pre="${user_headers_inc_next_pre}', 2.598833643460815e-06], ['stddef.h', 2.598833643460815e-06], ['stdarg.h"', 2.598833643460815e-06], ['i386/mingw-w64.h"', 2.598833643460815e-06], ['i386/mingw-stdint.h"', 2.598833643460815e-06], ['t-winnt', 2.598833643460815e-06], ['x86_64-w64-*)', 2.598833643460815e-06], ['i386/t-mingw-w64"', 2.598833643460815e-06], ['i[34567]86-w64-*)', 2.598833643460815e-06], ['i386/t-mingw-w32"', 2.598833643460815e-06], ['native_system_header_dir=/mingw/include', 2.598833643460815e-06], ['i386/mingw.opt"', 2.598833643460815e-06], ['i386/mingw-w64.opt"', 2.598833643460815e-06], ['win32)', 2.598833643460815e-06], ["thread_file='win32'", 2.598833643460815e-06], ['*mingw32crt*)', 2.598833643460815e-06], ['i386/crtdll.h"', 2.598833643460815e-06], ['*mingw32msv*', 2.598833643460815e-06], ['*mingw*)', 2.598833643460815e-06], ['x86_64-*-fuchsia*)', 2.598833643460815e-06], ['i386/t-x86_64-elf"', 2.598833643460815e-06], ['ia64*-*-elf*)', 2.598833643460815e-06], ['ia64/elf.h"', 2.598833643460815e-06], ['tmake_file="ia64/t-ia64"', 2.598833643460815e-06], ['ia64*-*-freebsd*)', 2.598833643460815e-06], ['ia64/freebsd.h"', 2.598833643460815e-06], ['ia64/linux.h"', 2.598833643460815e-06], ['ia64/t-ia64', 2.598833643460815e-06], ['ia64/t-linux', 2.598833643460815e-06], ['t-libunwind"', 2.598833643460815e-06], ['ia64*-*-hpux*)', 2.598833643460815e-06], ['ia64/hpux.h"', 2.598833643460815e-06], ['tmake_file="ia64/t-ia64', 2.598833643460815e-06], ['ia64/t-hpux', 2.598833643460815e-06], ['target_cpu_default="MASK_GNU_AS"', 2.598833643460815e-06], ['c_target_objs="ia64-c.o"', 2.598833643460815e-06], ['cxx_target_objs="ia64-c.o"', 2.598833643460815e-06], ['ia64/ilp32.opt', 2.598833643460815e-06], ['*-*-hpux11.3*)', 2.598833643460815e-06], ['ia64/hpux-unix2003.h"', 2.598833643460815e-06], ['ia64-hp-*vms*)', 2.598833643460815e-06], ['ia64/vms.h"', 2.598833643460815e-06], ['ia64/vms.opt"', 2.598833643460815e-06], ['iq2000*-*-elf*)', 2.598833643460815e-06], ['iq2000/iq2000.h"', 2.598833643460815e-06], ['out_file=iq2000/iq2000.c', 2.598833643460815e-06], ['md_file=iq2000/iq2000.md', 2.598833643460815e-06], ['lm32-*-elf*)', 2.598833643460815e-06], ['lm32-*-rtems*)', 2.598833643460815e-06], ['lm32/rtems.h', 2.598833643460815e-06], ['lm32/t-rtems"', 2.598833643460815e-06], ['lm32-*-uclinux*)', 2.598833643460815e-06], ['lm32/uclinux-elf.h"', 2.598833643460815e-06], ['m32r-*-elf*)', 2.598833643460815e-06], ['m32rle-*-elf*)', 2.598833643460815e-06], ['m32r-*-linux*)', 2.598833643460815e-06], ['m32rle-*-linux*)', 2.598833643460815e-06], ['m68k-*-elf*', 2.598833643460815e-06], ['sense.', 2.598833643460815e-06], ['"fidoa")', 2.598833643460815e-06], ['with_cpu=fidoa', 2.598833643460815e-06], ['m68k/m68020-elf.h"', 2.598833643460815e-06], ['m68k/t-m68kelf"', 2.598833643460815e-06], ['fido.', 2.598833643460815e-06], ['m68k*-*-netbsdelf*)', 2.598833643460815e-06], ['m68k/netbsd-elf.h"', 2.598833643460815e-06], ['MOTOROLA=1', 2.598833643460815e-06], ['m68k*-*-openbsd*)', 2.598833643460815e-06], ['unconfuse', 2.598833643460815e-06], ['OBSD_OLD_GAS"', 2.598833643460815e-06], ['m68k/openbsd.h"', 2.598833643460815e-06], ['tmake_file="t-openbsd', 2.598833643460815e-06], ['m68k/t-openbsd"', 2.598833643460815e-06], ['fixed...', 2.598833643460815e-06], ['m68k-*-uclinux*)', 2.598833643460815e-06], ['m68k/ColdFire', 2.598833643460815e-06], ['uClinux', 2.598833643460815e-06], ['uClibc,', 2.598833643460815e-06], ['GNU/Linux-style', 2.598833643460815e-06], ['flat.h', 2.598833643460815e-06], ['m68k/uclinux.h', 2.598833643460815e-06], ['m68k/uclinux.opt"', 2.598833643460815e-06], ['m68k/t-uclinux', 2.598833643460815e-06], ['m68k-*-linux*)', 2.598833643460815e-06], ["m68k's", 2.598833643460815e-06], ['aka', 2.598833643460815e-06], ['6.', 2.598833643460815e-06], ['with_arch=${with_arch:-m68k}', 2.598833643460815e-06], ['m68k/ieee.opt"', 2.598833643460815e-06], ['m68k/t-linux', 2.598833643460815e-06], ['m68k-*-rtems*)', 2.598833643460815e-06], ['m68k/t-crtstuff', 2.598833643460815e-06], ['m68k/t-rtems', 2.598833643460815e-06], ['m68k/m68020-elf.h', 2.598833643460815e-06], ['m68k/rtemself.h', 2.598833643460815e-06], ['mcore-*-elf)', 2.598833643460815e-06], ['mcore/mcore-elf.h"', 2.598833643460815e-06], ['tmake_file=mcore/t-mcore', 2.598833643460815e-06], ['inhibit_libc=true', 2.598833643460815e-06], ['microblaze*-linux*)', 2.598833643460815e-06], ['microblaze/linux.h"', 2.598833643460815e-06], ['microblaze/t-microblaze-linux"', 2.598833643460815e-06], ['microblaze*-*-rtems*)', 2.598833643460815e-06], ['dbxelf.h"', 2.598833643460815e-06], ['microblaze/rtems.h', 2.598833643460815e-06], ['microblaze/t-rtems"', 2.598833643460815e-06], ['microblaze*-*-elf)', 2.598833643460815e-06], ['riscv*-*-linux*)', 2.598833643460815e-06], ['riscv/linux.h"', 2.598833643460815e-06], ['riscv/t-linux-multilib"', 2.598833643460815e-06], ['riscv/t-riscv', 2.598833643460815e-06], ['riscv/t-linux"', 2.598833643460815e-06], ['riscv*-*-elf*', 2.598833643460815e-06], ['riscv*-*-rtems*)', 2.598833643460815e-06], ['riscv/elf.h"', 2.598833643460815e-06], ['riscv/rtems.h"', 2.598833643460815e-06], ['riscv/t-rtems"', 2.598833643460815e-06], ['riscv/t-elf-multilib"', 2.598833643460815e-06], ['riscv*-*-freebsd*)', 2.598833643460815e-06], ['riscv/freebsd.h"', 2.598833643460815e-06], ['mips*-*-netbsd*)', 2.598833643460815e-06], ['NetBSD/mips,', 2.598833643460815e-06], ['target_cpu_default="MASK_ABICALLS"', 2.598833643460815e-06], ['mips/netbsd.h"', 2.598833643460815e-06], ['mips*-img-linux*)', 2.598833643460815e-06], ['mips/t-img-linux"', 2.598833643460815e-06], ['mips*-mti-linux*)', 2.598833643460815e-06], ['mips/t-mti-linux"', 2.598833643460815e-06], ['MIPS,', 2.598833643460815e-06], ['mips/linux-common.h"', 2.598833643460815e-06], ['default_mips_arch=mips32r6', 2.598833643460815e-06], ['default_mips_arch=mips32r2', 2.598833643460815e-06], ['default_mips_arch=mips32', 2.598833643460815e-06], ['mips64el-st-linux-gnu)', 2.598833643460815e-06], ['mips/st.h"', 2.598833643460815e-06], ['mips/t-st"', 2.598833643460815e-06], ['mips64octeon*-*-linux*)', 2.598833643460815e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"octeon\\\\\\""', 2.598833643460815e-06], ['target_cpu_default=MASK_SOFT_FLOAT_ABI', 2.598833643460815e-06], ['mipsisa64r6*-*-linux*)', 2.598833643460815e-06], ['default_mips_arch=mips64r6', 2.598833643460815e-06], ['mipsisa64r2*-*-linux*)', 2.598833643460815e-06], ['default_mips_arch=mips64r2', 2.598833643460815e-06], ['mips64*-*-linux*', 2.598833643460815e-06], ['mipsisa64*-*-linux*)', 2.598833643460815e-06], ['x$enable_mips_multilibs', 2.598833643460815e-06], ['mips/t-linux64"', 2.598833643460815e-06], ['mips*-mti-elf*)', 2.598833643460815e-06], ['tmake_file="mips/t-mti-elf"', 2.598833643460815e-06], ['mips*-img-elf*)', 2.598833643460815e-06], ['tmake_file="mips/t-img-elf"', 2.598833643460815e-06], ['mips*-sde-elf*)', 2.598833643460815e-06], ['mips/sde.h"', 2.598833643460815e-06], ['tmake_file="mips/t-sde"', 2.598833643460815e-06], ['mips/sde.opt"', 2.598833643460815e-06], ['"${with_newlib}"', 2.598833643460815e-06], ['libgloss.', 2.598833643460815e-06], ['MIPS', 2.598833643460815e-06], ['toolkit', 2.598833643460815e-06], ['mips/sdemtk.h"', 2.598833643460815e-06], ['mips/t-sdemtk"', 2.598833643460815e-06], ['mipssde)', 2.598833643460815e-06], ["thread_file='mipssde'", 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=37', 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=33', 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=32', 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=69', 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=65', 2.598833643460815e-06], ['tm_defines="MIPS_ISA_DEFAULT=64', 2.598833643460815e-06], ['mipsisa32-*-elf*', 2.598833643460815e-06], ['mipsisa32el-*-elf*', 2.598833643460815e-06], ['mipsisa32r2-*-elf*', 2.598833643460815e-06], ['mipsisa32r2el-*-elf*', 2.598833643460815e-06], ['mipsisa32r6-*-elf*', 2.598833643460815e-06], ['mipsisa32r6el-*-elf*', 2.598833643460815e-06], ['mipsisa64-*-elf*', 2.598833643460815e-06], ['mipsisa64el-*-elf*', 2.598833643460815e-06], ['mipsisa64r2-*-elf*', 2.598833643460815e-06], ['mipsisa64r2el-*-elf*', 2.598833643460815e-06], ['mipsisa64r6-*-elf*', 2.598833643460815e-06], ['mipsisa64r6el-*-elf*)', 2.598833643460815e-06], ['tmake_file="mips/t-isa3264"', 2.598833643460815e-06], ['mipsisa32*-*-elfoabi*)', 2.598833643460815e-06], ['mipsisa64*-*-elfoabi*)', 2.598833643460815e-06], ['mipsisa64sr71k-*-elf*)', 2.598833643460815e-06], ['tmake_file=mips/t-sr71k', 2.598833643460815e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"sr71000\\\\\\"', 2.598833643460815e-06], ['mipsisa64sb1-*-elf*', 2.598833643460815e-06], ['mipsisa64sb1el-*-elf*)', 2.598833643460815e-06], ['tmake_file="mips/t-elf', 2.598833643460815e-06], ['mips/t-sb1"', 2.598833643460815e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"sb1\\\\\\"', 2.598833643460815e-06], ['mips-*-elf*', 2.598833643460815e-06], ['mipsel-*-elf*', 2.598833643460815e-06], ['mipsr5900-*-elf*', 2.598833643460815e-06], ['mipsr5900el-*-elf*)', 2.598833643460815e-06], ['mips64r5900-*-elf*', 2.598833643460815e-06], ['mips64r5900el-*-elf*)', 2.598833643460815e-06], ['mips/n32-elf.h"', 2.598833643460815e-06], ['mips64-*-elf*', 2.598833643460815e-06], ['mips64el-*-elf*)', 2.598833643460815e-06], ['mips64vr-*-elf*', 2.598833643460815e-06], ['mips64vrel-*-elf*)', 2.598833643460815e-06], ['mips/vr.h', 2.598833643460815e-06], ['tmake_file=mips/t-vr', 2.598833643460815e-06], ['mips64orion-*-elf*', 2.598833643460815e-06], ['mips64orionel-*-elf*)', 2.598833643460815e-06], ['mips/elforion.h', 2.598833643460815e-06], ['mips*-*-rtems*)', 2.598833643460815e-06], ['mips/rtems.h', 2.598833643460815e-06], ['mips/t-elf', 2.598833643460815e-06], ['mips/t-rtems"', 2.598833643460815e-06], ['mips-wrs-vxworks)', 2.598833643460815e-06], ['mips/vxworks.h"', 2.598833643460815e-06], ['mips/t-vxworks"', 2.598833643460815e-06], ['mipstx39-*-elf*', 2.598833643460815e-06], ['mipstx39el-*-elf*)', 2.598833643460815e-06], ['mips/r3900.h', 2.598833643460815e-06], ['tmake_file="mips/t-r3900"', 2.598833643460815e-06], ['mmix-knuth-mmixware)', 2.598833643460815e-06], ['mn10300-*-*)', 2.598833643460815e-06], ['msp430*-*-*)', 2.598833643460815e-06], ['c_target_objs="msp430-c.o"', 2.598833643460815e-06], ['cxx_target_objs="msp430-c.o"', 2.598833643460815e-06], ['msp430/t-msp430"', 2.598833643460815e-06], ['extra_gcc_objs="driver-msp430.o"', 2.598833643460815e-06], ['tm_defines="${tm_defines}"', 2.598833643460815e-06], ['nds32le*-*-*)', 2.598833643460815e-06], ['nds32be-*-*)', 2.598833643460815e-06], ['target_cpu_default="${target_cpu_default}|MASK_BIG_ENDIAN"', 2.598833643460815e-06], ['nds32/elf.h', 2.598833643460815e-06], ['tmake_file="nds32/t-nds32', 2.598833643460815e-06], ['nds32/t-elf"', 2.598833643460815e-06], ['nds32/linux.h', 2.598833643460815e-06], ['nds32/t-nds32', 2.598833643460815e-06], ['nds32/t-linux"', 2.598833643460815e-06], ['--enable-default-relax', 2.598833643460815e-06], ['x${enable_default_relax}', 2.598833643460815e-06], ['TARGET_DEFAULT_RELAX=1"', 2.598833643460815e-06], ['--with-ext-dsp', 2.598833643460815e-06], ['x${with_ext_dsp}', 2.598833643460815e-06], ['TARGET_DEFAULT_EXT_DSP=1"', 2.598833643460815e-06], ['nios2/t-nios2"', 2.598833643460815e-06], ['nios2-*-linux*)', 2.598833643460815e-06], ['nios2/linux.h', 2.598833643460815e-06], ['nios2-*-elf*)', 2.598833643460815e-06], ['nios2/elf.h"', 2.598833643460815e-06], ['nios2/elf.opt"', 2.598833643460815e-06], ['nios2-*-rtems*)', 2.598833643460815e-06], ['nios2/rtems.h', 2.598833643460815e-06], ['t-rtems', 2.598833643460815e-06], ['nios2/t-rtems"', 2.598833643460815e-06], ['nvptx-*)', 2.598833643460815e-06], ['tmake_file="nvptx/t-nvptx"', 2.598833643460815e-06], ['nvptx/offload.h"', 2.598833643460815e-06], ['or1k/t-or1k"', 2.598833643460815e-06], ['--with-multilib-list=...', 2.598833643460815e-06], ['or1k_multilibs="${with_multilib_list}"', 2.598833643460815e-06], ['"$or1k_multilibs"', 2.598833643460815e-06], ['or1k_multilibs="mcmov,msoft-mul,msoft-div"', 2.598833643460815e-06], ['or1k_multilibs=`echo', 2.598833643460815e-06], ['$or1k_multilibs', 2.598833643460815e-06], ['or1k_multilib', 2.598833643460815e-06], ['${or1k_multilibs};', 2.598833643460815e-06], ['${or1k_multilib}', 2.598833643460815e-06], ['mcmov', 2.598833643460815e-06], ['msext', 2.598833643460815e-06], ['msfimm', 2.598833643460815e-06], ['mhard-div', 2.598833643460815e-06], ['mhard-mul', 2.598833643460815e-06], ['msoft-div', 2.598833643460815e-06], ['msoft-mul', 2.598833643460815e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${or1k_multilib}"', 2.598833643460815e-06], ['or1k*-*-linux*)', 2.598833643460815e-06], ['or1k/linux.h"', 2.598833643460815e-06], ['or1k*-*-elf*)', 2.598833643460815e-06], ['or1k/elf.h"', 2.598833643460815e-06], ['or1k/elf.opt"', 2.598833643460815e-06], ['or1k*-*-rtems*)', 2.598833643460815e-06], ['or1k/rtems.h', 2.598833643460815e-06], ['or1k/t-rtems"', 2.598833643460815e-06], ['pdp11-*-*)', 2.598833643460815e-06], ['contributed', 2.598833643460815e-06], ['#powerpc-*-openbsd*)', 2.598833643460815e-06], ['rs6000/t-fprules"', 2.598833643460815e-06], ['powerpc-*-darwin*)', 2.598833643460815e-06], ['rs6000/darwin.opt"', 2.598833643460815e-06], ['*-darwin1[0-9]*', 2.598833643460815e-06], ['*-darwin[8-9]*)', 2.598833643460815e-06], ['rs6000/t-darwin8"', 2.598833643460815e-06], ['rs6000/darwin8.h"', 2.598833643460815e-06], ['*-darwin7*)', 2.598833643460815e-06], ['rs6000/darwin7.h"', 2.598833643460815e-06], ['*-darwin[0-6]*)', 2.598833643460815e-06], ['powerpc64-*-darwin*)', 2.598833643460815e-06], ['${cpu_type}/darwin.opt"', 2.598833643460815e-06], ['${cpu_type}/darwin8.h', 2.598833643460815e-06], ['powerpc*-*-freebsd*)', 2.598833643460815e-06], ['${tmake_file}', 2.598833643460815e-06], ['rs6000/freebsd64.h"', 2.598833643460815e-06], ['rs6000/t-freebsd64"', 2.598833643460815e-06], ['rs6000/freebsd.h"', 2.598833643460815e-06], ['powerpc-*-netbsd*)', 2.598833643460815e-06], ['rs6000/netbsd.h"', 2.598833643460815e-06], ['rs6000/t-netbsd"', 2.598833643460815e-06], ['powerpc-*-eabisimaltivec*)', 2.598833643460815e-06], ['rs6000/eabisim.h', 2.598833643460815e-06], ['powerpc-*-eabisim*)', 2.598833643460815e-06], ['powerpc-*-elf*)', 2.598833643460815e-06], ['powerpc-*-eabialtivec*)', 2.598833643460815e-06], ['powerpc-*-eabi*)', 2.598833643460815e-06], ['powerpc-*-rtems*)', 2.598833643460815e-06], ['rs6000/rtems.h', 2.598833643460815e-06], ['rs6000/t-rtems', 2.598833643460815e-06], ['powerpc*-*-linux*)', 2.598833643460815e-06], ['rs6000-linux.o"', 2.598833643460815e-06], ['${target}:${with_cpu}', 2.598833643460815e-06], ['powerpc64*:', 2.598833643460815e-06], ['powerpc64*:native)', 2.598833643460815e-06], ['maybe_biarch=${cpu_is_64bit}', 2.598833643460815e-06], ['*powerpc64*)', 2.598833643460815e-06], ['all)', 2.598833643460815e-06], ['${target}:${enable_targets}:${maybe_biarch}', 2.598833643460815e-06], ['powerpc64-*', 2.598833643460815e-06], ['powerpc-*:*:yes', 2.598833643460815e-06], ['*:*powerpc64-*:yes', 2.598833643460815e-06], ['*:all:yes', 2.598833643460815e-06], ['powerpc64le*:*powerpcle*', 2.598833643460815e-06], ['powerpc64le*:*powerpc-*', 2.598833643460815e-06], ['powerpcle-*:*powerpc64le*:yes)', 2.598833643460815e-06], ['x$cpu_is_64bit', 2.598833643460815e-06], ['rs6000/default64.h"', 2.598833643460815e-06], ['rs6000/t-linux64"', 2.598833643460815e-06], ['rs6000/t-linux64le"', 2.598833643460815e-06], ['*powerpc64-*', 2.598833643460815e-06], ['*powerpc-*)', 2.598833643460815e-06], ['rs6000/t-linux64lebe"', 2.598833643460815e-06], ['*powerpc64le-*', 2.598833643460815e-06], ['*powerpcle-*)', 2.598833643460815e-06], ['rs6000/t-linux64bele"', 2.598833643460815e-06], ['rs6000/linux.h', 2.598833643460815e-06], ['powerpc*-*-linux*ppc476*)', 2.598833643460815e-06], ['rs6000/476.h"', 2.598833643460815e-06], ['rs6000/476.opt"', 2.598833643460815e-06], ['powerpc*-*-linux*altivec*)', 2.598833643460815e-06], ['rs6000/linuxaltivec.h"', 2.598833643460815e-06], ['*-linux*-musl*)', 2.598833643460815e-06], ['enable_secureplt=yes', 2.598833643460815e-06], ['x${enable_secureplt}', 2.598833643460815e-06], ['tm_file="rs6000/secureplt.h', 2.598833643460815e-06], ['powerpc-wrs-vxworks*)', 2.598833643460815e-06], ['rs6000/t-ppccomm', 2.598833643460815e-06], ['rs6000/t-vxworks"', 2.598833643460815e-06], ['extra_headers=ppc-asm.h', 2.598833643460815e-06], ['*-vxworksmils*)', 2.598833643460815e-06], ['rs6000/vxworksmils.h"', 2.598833643460815e-06], ['rs6000/t-vxworksmils"', 2.598833643460815e-06], ['rs6000/vxworksae.h"', 2.598833643460815e-06], ['rs6000/t-vxworksae"', 2.598833643460815e-06], ['*-vxworks*)', 2.598833643460815e-06], ['rs6000/vxworks.h"', 2.598833643460815e-06], ['powerpc-*-lynxos*)', 2.598833643460815e-06], ['rs6000/lynx.h', 2.598833643460815e-06], ['tmake_file="t-lynx', 2.598833643460815e-06], ['rs6000/t-lynx"', 2.598833643460815e-06], ['powerpcle-*-elf*)', 2.598833643460815e-06], ['powerpcle-*-eabisim*)', 2.598833643460815e-06], ['powerpcle-*-eabi*)', 2.598833643460815e-06], ['rs6000-ibm-aix6.*', 2.598833643460815e-06], ['powerpc-ibm-aix6.*)', 2.598833643460815e-06], ['rs6000/aix61.h', 2.598833643460815e-06], ['rs6000-ibm-aix7.1.*', 2.598833643460815e-06], ['powerpc-ibm-aix7.1.*)', 2.598833643460815e-06], ['rs6000/aix71.h', 2.598833643460815e-06], ['rs6000-ibm-aix[789].*', 2.598833643460815e-06], ['powerpc-ibm-aix[789].*)', 2.598833643460815e-06], ['rs6000/aix72.h', 2.598833643460815e-06], ['rl78-*-elf*)', 2.598833643460815e-06], ['c_target_objs="rl78-c.o"', 2.598833643460815e-06], ['cxx_target_objs="rl78-c.o"', 2.598833643460815e-06], ['rl78/t-rl78"', 2.598833643460815e-06], ['rx-*-elf*)', 2.598833643460815e-06], ['rx/t-rx"', 2.598833643460815e-06], ['s390-*-linux*)', 2.598833643460815e-06], ['tm_file="s390/s390.h', 2.598833643460815e-06], ['s390/t-linux64"', 2.598833643460815e-06], ['s390x-*-linux*)', 2.598833643460815e-06], ['tm_p_file="linux-protos.h', 2.598833643460815e-06], ['s390/s390-protos.h"', 2.598833643460815e-06], ['s390/t-linux64', 2.598833643460815e-06], ['s390x-ibm-tpf*)', 2.598833643460815e-06], ['s390/tpf.h"', 2.598833643460815e-06], ['tm_p_file=s390/s390-protos.h', 2.598833643460815e-06], ["thread_file='tpf'", 2.598833643460815e-06], ['s390/tpf.opt"', 2.598833643460815e-06], ['sh-*-elf*', 2.598833643460815e-06], ['sh[12346l]*-*-elf*', 2.598833643460815e-06], ['sh-*-linux*', 2.598833643460815e-06], ['sh[2346lbe]*-*-linux*', 2.598833643460815e-06], ['sh-*-netbsdelf*', 2.598833643460815e-06], ['shl*-*-netbsdelf*)', 2.598833643460815e-06], ['sh/t-elf"', 2.598833643460815e-06], ['sh[1234]*be-*-*', 2.598833643460815e-06], ['sh[1234]*eb-*-*)', 2.598833643460815e-06], ['shbe-*-*', 2.598833643460815e-06], ['sheb-*-*)', 2.598833643460815e-06], ['sh[1234]l*', 2.598833643460815e-06], ['sh[34]*-*-linux*)', 2.598833643460815e-06], ['shl*', 2.598833643460815e-06], ['sh*-*-linux*', 2.598833643460815e-06], ['sh-superh-elf)', 2.598833643460815e-06], ['with_endian=little,big', 2.598833643460815e-06], ['sh[1234]*-*-*)', 2.598833643460815e-06], ['TM_ENDIAN_CONFIG', 2.598833643460815e-06], ['multilibs.', 2.598833643460815e-06], ['word:', 2.598833643460815e-06], ['secondary', 2.598833643460815e-06], ['(optional).', 2.598833643460815e-06], ['big)', 2.598833643460815e-06], ['TM_ENDIAN_CONFIG=mb', 2.598833643460815e-06], ['little)', 2.598833643460815e-06], ['TM_ENDIAN_CONFIG=ml', 2.598833643460815e-06], ['big,little)', 2.598833643460815e-06], ['TM_ENDIAN_CONFIG="mb', 2.598833643460815e-06], ['ml"', 2.598833643460815e-06], ['little,big)', 2.598833643460815e-06], ['TM_ENDIAN_CONFIG="ml', 2.598833643460815e-06], ['mb"', 2.598833643460815e-06], ['little*)', 2.598833643460815e-06], ['tm_file="sh/little.h', 2.598833643460815e-06], ['sh/elf.h"', 2.598833643460815e-06], ['sh/t-linux"', 2.598833643460815e-06], ['x$enable_fdpic', 2.598833643460815e-06], ['FDPIC_DEFAULT=1"', 2.598833643460815e-06], ['sh/linux.h"', 2.598833643460815e-06], ['sh/netbsd-elf.h"', 2.598833643460815e-06], ['sh*-superh-elf)', 2.598833643460815e-06], ['with_libgloss=yes', 2.598833643460815e-06], ['sh/superh.h"', 2.598833643460815e-06], ['sh/superh.opt"', 2.598833643460815e-06], ['x$with_newlib', 2.598833643460815e-06], ['*-*-netbsd)', 2.598833643460815e-06], ['el/eb', 2.598833643460815e-06], ['suffixes', 2.598833643460815e-06], ['sh[23]e', 2.598833643460815e-06], ["'s/e[lb]-/-/'`", 2.598833643460815e-06], ['sh4a_single_only*)', 2.598833643460815e-06], ['sh_cpu_target=sh4a-single-only', 2.598833643460815e-06], ['sh4a_single*)', 2.598833643460815e-06], ['sh_cpu_target=sh4a-single', 2.598833643460815e-06], ['sh4a_nofpu*)', 2.598833643460815e-06], ['sh4al)', 2.598833643460815e-06], ['sh_cpu_target=sh4al', 2.598833643460815e-06], ['sh4a*)', 2.598833643460815e-06], ['sh_cpu_target=sh4a', 2.598833643460815e-06], ['sh4_single_only*)', 2.598833643460815e-06], ['sh_cpu_target=sh4-single-only', 2.598833643460815e-06], ['sh4_single*)', 2.598833643460815e-06], ['sh_cpu_target=sh4-single', 2.598833643460815e-06], ['sh4_nofpu*)', 2.598833643460815e-06], ['sh4*', 2.598833643460815e-06], ['sh_cpu_target=sh4', 2.598833643460815e-06], ['sh3e*)', 2.598833643460815e-06], ['sh_cpu_target=sh3e', 2.598833643460815e-06], ['sh*-*-netbsd*', 2.598833643460815e-06], ['sh2a_single_only*)', 2.598833643460815e-06], ['sh_cpu_target=sh2a-single-only', 2.598833643460815e-06], ['sh2a_single*)', 2.598833643460815e-06], ['sh_cpu_target=sh2a-single', 2.598833643460815e-06], ['sh2a_nofpu*)', 2.598833643460815e-06], ['sh_cpu_target=sh2a', 2.598833643460815e-06], ['sh2e*)', 2.598833643460815e-06], ['sh_cpu_target=sh2e', 2.598833643460815e-06], ['sh_cpu_target=sh1', 2.598833643460815e-06], ['${sh_cpu_target}', 2.598833643460815e-06], ['sh4a*', 2.598833643460815e-06], ['sh4*)', 2.598833643460815e-06], ['$target:', 2.598833643460815e-06], ['STRICT_NOFPU=1"', 2.598833643460815e-06], ['sh_cpu_default="`echo', 2.598833643460815e-06], ['$with_cpu|sed', 2.598833643460815e-06], ['s/^m/sh/|tr', 2.598833643460815e-06], ['A-Z_', 2.598833643460815e-06], ['a-z-`"', 2.598833643460815e-06], ['sh2a-single-only', 2.598833643460815e-06], ['sh2a-single', 2.598833643460815e-06], ['sh2a-nofpu', 2.598833643460815e-06], ['sh2a', 2.598833643460815e-06], ['sh4a-single-only', 2.598833643460815e-06], ['sh4a-single', 2.598833643460815e-06], ['sh4a-nofpu', 2.598833643460815e-06], ['sh4a', 2.598833643460815e-06], ['sh4-single-only', 2.598833643460815e-06], ['sh4-single', 2.598833643460815e-06], ['sh4-nofpu', 2.598833643460815e-06], ['sh4', 2.598833643460815e-06], ['sh4-300', 2.598833643460815e-06], ['sh3e', 2.598833643460815e-06], ['sh3', 2.598833643460815e-06], ['sh2e', 2.598833643460815e-06], ['sh2', 2.598833643460815e-06], ['sh_cpu_default=${sh_cpu_target}', 2.598833643460815e-06], ['"with_cpu=$with_cpu', 2.598833643460815e-06], ['supported";', 2.598833643460815e-06], ['sh_multilibs=${with_multilib_list}', 2.598833643460815e-06], ['"$sh_multilibs"', 2.598833643460815e-06], ['sh[1234]*)', 2.598833643460815e-06], ['sh_multilibs=${sh_cpu_target}', 2.598833643460815e-06], ['sh_multilibs=m4,m4-single,m4-single-only,m4-nofpu', 2.598833643460815e-06], ['sh_multilibs=m1,m2,m2a,m3e,m4', 2.598833643460815e-06], ['sh_multilibs=m3,m3e,m4', 2.598833643460815e-06], ['sh_multilibs=m1,m2,m2e,m4,m4-single,m4-single-only,m2a,m2a-single', 2.598833643460815e-06], ['sh_multilibs="`echo', 2.598833643460815e-06], ['$sh_multilibs|sed', 2.598833643460815e-06], ['s/m4/sh4-nofpu/', 2.598833643460815e-06], ['s/,m4-[^,]*//g', 2.598833643460815e-06], ['s/,m[23]e//', 2.598833643460815e-06], ['s/m2a,m2a-single/m2a-nofpu/', 2.598833643460815e-06], ['s/m5-..m....,//g`"', 2.598833643460815e-06], ['target_cpu_default=SELECT_`echo', 2.598833643460815e-06], ['${sh_cpu_default}|tr', 2.598833643460815e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_`', 2.598833643460815e-06], ["tm_defines=${tm_defines}'", 2.598833643460815e-06], ['SH_MULTILIB_CPU_DEFAULT=\\"\'`echo', 2.598833643460815e-06], ['$sh_cpu_default|sed', 2.598833643460815e-06], ['s/sh/m/`\'\\"\'', 2.598833643460815e-06], ['sh_multilibs=`echo', 2.598833643460815e-06], ['$sh_multilibs', 2.598833643460815e-06], ["/g'", 2.598833643460815e-06], ["'s/^[Ss][Hh]/m/'", 2.598833643460815e-06], ["'s/", 2.598833643460815e-06], ['[Ss][Hh]/', 2.598833643460815e-06], ["m/g'", 2.598833643460815e-06], ['abcdefghijklmnopqrstuvwxyz-`', 2.598833643460815e-06], ['sh_multilib', 2.598833643460815e-06], ['${sh_multilibs};', 2.598833643460815e-06], ['${sh_multilib}', 2.598833643460815e-06], ['m4-300', 2.598833643460815e-06], ['|\\', 2.598833643460815e-06], ['m4al', 2.598833643460815e-06], ['TM_MULTILIB_CONFIG', 2.598833643460815e-06], ['non-endian', 2.598833643460815e-06], ['MULTIILIB_OPTIONS', 2.598833643460815e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG}/${sh_multilib}"', 2.598833643460815e-06], ['\\!*)', 2.598833643460815e-06], ['TM_MULTILIB_EXCEPTIONS_CONFIG', 2.598833643460815e-06], ['MULTILIB_EXCEPTIONS', 2.598833643460815e-06], ['TM_MULTILIB_EXCEPTIONS_CONFIG="${TM_MULTILIB_EXCEPTIONS_CONFIG}', 2.598833643460815e-06], ['\'s/^!//\'`"', 2.598833643460815e-06], ['"with_multilib_list=${sh_multilib}', 2.598833643460815e-06], ["'s:^/::'`", 2.598833643460815e-06], ['x${enable_incomplete_targets}', 2.598833643460815e-06], ['SUPPORT_SH1=1', 2.598833643460815e-06], ['SUPPORT_SH2E=1', 2.598833643460815e-06], ['SUPPORT_SH4=1', 2.598833643460815e-06], ['SUPPORT_SH4_SINGLE=1', 2.598833643460815e-06], ['SUPPORT_SH2A=1', 2.598833643460815e-06], ['SUPPORT_SH2A_SINGLE=1"', 2.598833643460815e-06], ['t-sysroot-suffix"', 2.598833643460815e-06], ['sh-*-rtems*)', 2.598833643460815e-06], ['sh/t-rtems"', 2.598833643460815e-06], ['sh/rtemself.h', 2.598833643460815e-06], ['sh-wrs-vxworks)', 2.598833643460815e-06], ['sh/t-vxworks"', 2.598833643460815e-06], ['sh/vxworks.h"', 2.598833643460815e-06], ['sparc-*-elf*)', 2.598833643460815e-06], ['sparc/sp-elf.h"', 2.598833643460815e-06], ['sparc/t-elf"', 2.598833643460815e-06], ['sparc-*-rtems*)', 2.598833643460815e-06], ['sparc/sp-elf.h', 2.598833643460815e-06], ['sparc/t-rtems"', 2.598833643460815e-06], ['sparc-*-linux*)', 2.598833643460815e-06], ['sparc/linux64.h"', 2.598833643460815e-06], ['sparc/linux.h"', 2.598833643460815e-06], ['sparc/t-linux"', 2.598833643460815e-06], ['sparc-*-netbsdelf*)', 2.598833643460815e-06], ['sparc*-*-solaris2*)', 2.598833643460815e-06], ['${sol2_tm_file}', 2.598833643460815e-06], ['sparc64-*-*', 2.598833643460815e-06], ['sparcv9-*-*)', 2.598833643460815e-06], ['tm_file="sparc/default64.h', 2.598833643460815e-06], ['sparc/t-sol2"', 2.598833643460815e-06], ['sparc-wrs-vxworks)', 2.598833643460815e-06], ['sparc/vxworks.h"', 2.598833643460815e-06], ['sparc/t-vxworks"', 2.598833643460815e-06], ['sparc64-*-elf*)', 2.598833643460815e-06], ['sparc64-*-rtems*)', 2.598833643460815e-06], ['sparc/sp64-elf.h', 2.598833643460815e-06], ['sparc/t-rtems-64"', 2.598833643460815e-06], ['sparc64-*-linux*)', 2.598833643460815e-06], ['sparc/default64.h', 2.598833643460815e-06], ['sparc/linux64.h', 2.598833643460815e-06], ['sparc64-*-freebsd*|ultrasparc-*-freebsd*)', 2.598833643460815e-06], ['sparc/freebsd.h"', 2.598833643460815e-06], ['xultrasparc)', 2.598833643460815e-06], ['"$with_cpu', 2.598833643460815e-06], ['freebsd', 2.598833643460815e-06], ['target";', 2.598833643460815e-06], ['sparc64-*-netbsd*)', 2.598833643460815e-06], ['sparc/t-netbsd64"', 2.598833643460815e-06], ['sparc64-*-openbsd*)', 2.598833643460815e-06], ['tm_file="sparc/openbsd1-64.h', 2.598833643460815e-06], ['sparc/openbsd64.h"', 2.598833643460815e-06], ['spu-*-elf*)', 2.598833643460815e-06], ['spu/spu-elf.h', 2.598833643460815e-06], ['spu/spu.h', 2.598833643460815e-06], ['tmake_file="spu/t-spu-elf"', 2.598833643460815e-06], ['extra_headers="spu_intrinsics.h', 2.598833643460815e-06], ['spu_internals.h', 2.598833643460815e-06], ['vmx2spu.h', 2.598833643460815e-06], ['spu_mfcio.h', 2.598833643460815e-06], ['spu_cache.h"', 2.598833643460815e-06], ['extra_modes=spu/spu-modes.def', 2.598833643460815e-06], ['tic6x-*-elf)', 2.598833643460815e-06], ['c6x/elf.h"', 2.598833643460815e-06], ['tmake_file="c6x/t-c6x', 2.598833643460815e-06], ['c6x/t-c6x-elf"', 2.598833643460815e-06], ['tic6x-*-uclinux)', 2.598833643460815e-06], ['c6x/uclinux-elf.h"', 2.598833643460815e-06], ['tmake_file="t-sysroot-suffix', 2.598833643460815e-06], ['c6x/t-c6x', 2.598833643460815e-06], ['c6x/t-c6x-elf', 2.598833643460815e-06], ['c6x/t-c6x-uclinux"', 2.598833643460815e-06], ['tilegx*-*-linux*)', 2.598833643460815e-06], ['tilegx/linux.h', 2.598833643460815e-06], ['tilegx/t-tilegx"', 2.598833643460815e-06], ['tilegxbe-*)', 2.598833643460815e-06], ['tilepro*-*-linux*)', 2.598833643460815e-06], ['tilepro/linux.h', 2.598833643460815e-06], ['tilepro/t-tilepro"', 2.598833643460815e-06], ['v850-*-rtems*)', 2.598833643460815e-06], ['v850/rtems.h', 2.598833643460815e-06], ['v850/t-v850"', 2.598833643460815e-06], ['v850/t-rtems"', 2.598833643460815e-06], ['v850e3v5-*-*)', 2.598833643460815e-06], ['target_cpu_default="TARGET_CPU_v850e3v5"', 2.598833643460815e-06], ['v850e2v3-*-*)', 2.598833643460815e-06], ['target_cpu_default="TARGET_CPU_v850e2v3"', 2.598833643460815e-06], ['v850e2-*-*)', 2.598833643460815e-06], ['target_cpu_default="TARGET_CPU_v850e2"', 2.598833643460815e-06], ['v850e1-*-*', 2.598833643460815e-06], ['v850es-*-*)', 2.598833643460815e-06], ['target_cpu_default="TARGET_CPU_v850e1"', 2.598833643460815e-06], ['v850e-*-*)', 2.598833643460815e-06], ['target_cpu_default="TARGET_CPU_v850e"', 2.598833643460815e-06], ['v850-*-*)', 2.598833643460815e-06], ['vax-*-linux*)', 2.598833643460815e-06], ['vax/linux.h"', 2.598833643460815e-06], ['vax-*-netbsdelf*)', 2.598833643460815e-06], ['vax/netbsd-elf.h"', 2.598833643460815e-06], ['vax-*-openbsd*)', 2.598833643460815e-06], ['tm_file="vax/vax.h', 2.598833643460815e-06], ['vax/openbsd1.h', 2.598833643460815e-06], ['vax/openbsd.h"', 2.598833643460815e-06], ['visium-*-elf*)', 2.598833643460815e-06], ['visium/elf.h', 2.598833643460815e-06], ['tmake_file="visium/t-visium', 2.598833643460815e-06], ['visium/t-crtstuff"', 2.598833643460815e-06], ['xstormy16-*-elf)', 2.598833643460815e-06], ['historical', 2.598833643460815e-06], ["'x'.", 2.598833643460815e-06], ['tm_p_file=stormy16/stormy16-protos.h', 2.598833643460815e-06], ['tm_d_file="elfos.h', 2.598833643460815e-06], ['md_file=stormy16/stormy16.md', 2.598833643460815e-06], ['out_file=stormy16/stormy16.c', 2.598833643460815e-06], ['extra_options=stormy16/stormy16.opt', 2.598833643460815e-06], ['tmake_file="stormy16/t-stormy16"', 2.598833643460815e-06], ['xtensa*-*-elf*)', 2.598833643460815e-06], ['xtensa/elf.h"', 2.598833643460815e-06], ['xtensa/elf.opt"', 2.598833643460815e-06], ['xtensa*-*-linux*)', 2.598833643460815e-06], ['xtensa/linux.h"', 2.598833643460815e-06], ['xtensa*-*-uclinux*)', 2.598833643460815e-06], ['xtensa/uclinux.h"', 2.598833643460815e-06], ['xtensa/uclinux.opt"', 2.598833643460815e-06], ['tm_file="mn10300/mn10300.h', 2.598833643460815e-06], ['mn10300/linux.h"', 2.598833643460815e-06], ['m32c-*-rtems*)', 2.598833643460815e-06], ['m32c/rtems.h', 2.598833643460815e-06], ['m32c-*-elf*)', 2.598833643460815e-06], ['i386/t-pmm_malloc', 2.598833643460815e-06], ['i386/t-gmm_malloc', 2.598833643460815e-06], ['${cpu_type}/option-defaults.h"', 2.598833643460815e-06], ['non-glibc', 2.598833643460815e-06], ['*-linux-musl*)', 2.598833643460815e-06], ['t-musl"', 2.598833643460815e-06], ['*-linux-uclibc*)', 2.598833643460815e-06], ['t-uclibc"', 2.598833643460815e-06], ['existence', 2.598833643460815e-06], ['resolver', 2.598833643460815e-06], ['*-*-linux*android*|*-*-linux*uclibc*|*-*-linux*musl*)', 2.598833643460815e-06], ['aarch64*-*', 2.598833643460815e-06], ['arm*-*', 2.598833643460815e-06], ['i[34567]86-*', 2.598833643460815e-06], ['powerpc*-*', 2.598833643460815e-06], ['s390*-*', 2.598833643460815e-06], ['sparc*-*', 2.598833643460815e-06], ['default_gnu_indirect_function=yes', 2.598833643460815e-06], ['mkoffload', 2.598833643460815e-06], ['tool', 2.598833643460815e-06], ['*-intelmic-*', 2.598833643460815e-06], ['*-intelmicemul-*)', 2.598833643460815e-06], ['i386/t-intelmic"', 2.598833643460815e-06], ['i386/intelmic-offload.h"', 2.598833643460815e-06], ['"$target_has_targetcm"', 2.598833643460815e-06], ['c_target_objs="$c_target_objs', 2.598833643460815e-06], ['cxx_target_objs="$cxx_target_objs', 2.598833643460815e-06], ['"$common_out_file"', 2.598833643460815e-06], ['"$target_has_targetm_common"', 2.598833643460815e-06], ['common_out_file="$cpu_type/$cpu_type-common.c"', 2.598833643460815e-06], ['common_out_file="default-common.c"', 2.598833643460815e-06], ['"$target_has_targetdm"', 2.598833643460815e-06], ['d_target_objs="$d_target_objs', 2.598833643460815e-06], ['default-d.o"', 2.598833643460815e-06], ['"--with-cpu', 2.598833643460815e-06], ['${target_noncanonical}.', 2.598833643460815e-06], ['scheduler', 2.598833643460815e-06], ['arch=', 2.598833643460815e-06], ['cpu=', 2.598833643460815e-06], ['arch_without_sse2=no', 2.598833643460815e-06], ['arch_without_64bit=no', 2.598833643460815e-06], ['i386-*-freebsd*)', 2.598833643460815e-06], ['i386-*-netbsd*)', 2.598833643460815e-06], ['i386-*-*)', 2.598833643460815e-06], ['cpu=i386', 2.598833643460815e-06], ['i486-*-*)', 2.598833643460815e-06], ['cpu=i486', 2.598833643460815e-06], ['i586-*-*)', 2.598833643460815e-06], ['k6_2-*)', 2.598833643460815e-06], ['arch=k6-2', 2.598833643460815e-06], ['cpu=k6-2', 2.598833643460815e-06], ['k6_3-*)', 2.598833643460815e-06], ['arch=k6-3', 2.598833643460815e-06], ['cpu=k6-3', 2.598833643460815e-06], ['k6-*)', 2.598833643460815e-06], ['arch=k6', 2.598833643460815e-06], ['cpu=k6', 2.598833643460815e-06], ['pentium_mmx-*|winchip_c6-*|winchip2-*|c3-*)', 2.598833643460815e-06], ['arch=pentium-mmx', 2.598833643460815e-06], ['cpu=pentium-mmx', 2.598833643460815e-06], ['arch=pentium', 2.598833643460815e-06], ['cpu=pentium', 2.598833643460815e-06], ['i686-*-*', 2.598833643460815e-06], ['i786-*-*)', 2.598833643460815e-06], ['k8-*|opteron-*|athlon64-*|athlon_fx-*)', 2.598833643460815e-06], ['athlon_xp-*|athlon_mp-*|athlon_4-*)', 2.598833643460815e-06], ['arch=athlon-4', 2.598833643460815e-06], ['cpu=athlon-4', 2.598833643460815e-06], ['athlon_tbird-*|athlon-*)', 2.598833643460815e-06], ['arch=athlon', 2.598833643460815e-06], ['cpu=athlon', 2.598833643460815e-06], ['geode-*)', 2.598833643460815e-06], ['arch=geode', 2.598833643460815e-06], ['cpu=geode', 2.598833643460815e-06], ['pentium2-*)', 2.598833643460815e-06], ['arch=pentium2', 2.598833643460815e-06], ['cpu=pentium2', 2.598833643460815e-06], ['pentium3-*|pentium3m-*)', 2.598833643460815e-06], ['arch=pentium3', 2.598833643460815e-06], ['cpu=pentium3', 2.598833643460815e-06], ['pentium4-*|pentium4m-*)', 2.598833643460815e-06], ['arch=pentium4', 2.598833643460815e-06], ['cpu=pentium4', 2.598833643460815e-06], ['prescott-*)', 2.598833643460815e-06], ['arch=prescott', 2.598833643460815e-06], ['cpu=prescott', 2.598833643460815e-06], ['corei7_avx-*)', 2.598833643460815e-06], ['arch=corei7-avx', 2.598833643460815e-06], ['cpu=corei7-avx', 2.598833643460815e-06], ['pentium_m-*)', 2.598833643460815e-06], ['arch=pentium-m', 2.598833643460815e-06], ['cpu=pentium-m', 2.598833643460815e-06], ['pentiumpro-*)', 2.598833643460815e-06], ['cpu=pentiumpro', 2.598833643460815e-06], ['k8-*|opteron-*|athlon_64-*)', 2.598833643460815e-06], ['arch=x86-64', 2.598833643460815e-06], ['with_cpu.', 2.598833643460815e-06], ['with_cpu=lakemont', 2.598833643460815e-06], ['with_cpu=$cpu', 2.598833643460815e-06], ['alphaev6[78]*-*-*)', 2.598833643460815e-06], ['with_cpu=ev67', 2.598833643460815e-06], ['alphaev6*-*-*)', 2.598833643460815e-06], ['with_cpu=ev6', 2.598833643460815e-06], ['alphapca56*-*-*)', 2.598833643460815e-06], ['with_cpu=pca56', 2.598833643460815e-06], ['alphaev56*-*-*)', 2.598833643460815e-06], ['with_cpu=ev56', 2.598833643460815e-06], ['alphaev5*-*-*)', 2.598833643460815e-06], ['with_cpu=ev5', 2.598833643460815e-06], ['frv400-*-*linux*)', 2.598833643460815e-06], ['with_cpu=fr400', 2.598833643460815e-06], ['frv550-*-*linux*)', 2.598833643460815e-06], ['with_cpu=fr550', 2.598833643460815e-06], ['with_cpu=${default_cf_cpu}', 2.598833643460815e-06], ['"m68k")', 2.598833643460815e-06], ['with_cpu=m${default_m68k_cpu}', 2.598833643460815e-06], ['with_cpu=leon', 2.598833643460815e-06], ['with_cpu=leon3', 2.598833643460815e-06], ['*-leon[3-9]v7*)', 2.598833643460815e-06], ['with_cpu=leon3v7', 2.598833643460815e-06], ['with_cpu="`echo', 2.598833643460815e-06], ['\'s/-.*$//\'`"', 2.598833643460815e-06], ['with_cpu=gr5', 2.598833643460815e-06], ['--with-cpu-32', 2.598833643460815e-06], ['--with-cpu-64', 2.598833643460815e-06], ['with_cpu_32=$with_cpu', 2.598833643460815e-06], ['with_cpu_64=$with_cpu', 2.598833643460815e-06], ['with_cpu=', 2.598833643460815e-06], ['"--with-arch', 2.598833643460815e-06], ['$with_arch', 2.598833643460815e-06], ['with_arch.', 2.598833643460815e-06], ['with_arch=lakemont', 2.598833643460815e-06], ['--with-fpmath', 2.598833643460815e-06], ['SSE2,', 2.598833643460815e-06], ['Pentium', 2.598833643460815e-06], ['$arch_without_sse2', 2.598833643460815e-06], ['with_arch=pentium4', 2.598833643460815e-06], ['with_arch=r5900', 2.598833643460815e-06], ['mips*-*-vxworks)', 2.598833643460815e-06], ['with_arch=mips2', 2.598833643460815e-06], ['--with-arch-32', 2.598833643460815e-06], ['--with-arch-64', 2.598833643460815e-06], ['$arch_without_64bit', 2.598833643460815e-06], ['yes;', 2.598833643460815e-06], ['64bit.', 2.598833643460815e-06], ['with_arch_64=$with_arch', 2.598833643460815e-06], ['$arch_without_64bit$need_64bit_isa', 2.598833643460815e-06], ['yesyes;', 2.598833643460815e-06], ['ISA.', 2.598833643460815e-06], ['--with-float.', 2.598833643460815e-06], ['x$with_float', 2.598833643460815e-06], ['comply', 2.598833643460815e-06], ['754.', 2.598833643460815e-06], ['with_float=soft', 2.598833643460815e-06], ['--with-fpu.', 2.598833643460815e-06], ['x$with_fpu', 2.598833643460815e-06], ['FPU', 2.598833643460815e-06], ['with_fpu=single', 2.598833643460815e-06], ['--with-fpmath.', 2.598833643460815e-06], ['${with_fpmath}', 2.598833643460815e-06], ['avx)', 2.598833643460815e-06], ['i386/avxmath.h"', 2.598833643460815e-06], ['sse)', 2.598833643460815e-06], ['i386/ssemath.h"', 2.598833643460815e-06], ['--with-fpmath=$with_fpmath"', 2.598833643460815e-06], ['"--with-fpmath', 2.598833643460815e-06], ['$target."', 2.598833643460815e-06], ['--with-schedule.', 2.598833643460815e-06], ['x$with_schedule', 2.598833643460815e-06], ['hppa1*)', 2.598833643460815e-06], ['PA8000', 2.598833643460815e-06], ['scheduling', 2.598833643460815e-06], ['with_schedule=7100LC', 2.598833643460815e-06], ['--with-llsc.', 2.598833643460815e-06], ['x$with_llsc', 2.598833643460815e-06], ['emulates', 2.598833643460815e-06], ['LL', 2.598833643460815e-06], ['SC', 2.598833643460815e-06], ['with_llsc=yes', 2.598833643460815e-06], ['LL(D)', 2.598833643460815e-06], ['SC(D).', 2.598833643460815e-06], ['with_llsc=no', 2.598833643460815e-06], ['Validate', 2.598833643460815e-06], ['supported_defaults;', 2.598833643460815e-06], ['optional.', 2.598833643460815e-06], ['supported_defaults.', 2.598833643460815e-06], ['supported_defaults=', 2.598833643460815e-06], ['arch"', 2.598833643460815e-06], ['base_val=`echo', 2.598833643460815e-06], ["'s/[a-z0-9.-]\\+//'`", 2.598833643460815e-06], ['def=aarch64-arches.def', 2.598833643460815e-06], ['pattern=AARCH64_ARCH', 2.598833643460815e-06], ['def=aarch64-cores.def', 2.598833643460815e-06], ['pattern=AARCH64_CORE', 2.598833643460815e-06], ['ext_mask=AARCH64_CPU_DEFAULT_FLAGS', 2.598833643460815e-06], ['aarch64-cores.def', 2.598833643460815e-06], ['x"$base_val"', 2.598833643460815e-06], ['ext_mask=`grep', 2.598833643460815e-06], ["'s/)$//'", 2.598833643460815e-06], ["'s/^.*,//'`", 2.598833643460815e-06], ['x"$ext_val"', 2.598833643460815e-06], ["'s/\\+//'`", 2.598833643460815e-06], ['ext=`echo', 2.598833643460815e-06], ['base_ext=`echo', 2.598833643460815e-06], ["'s/^no//'`", 2.598833643460815e-06], ['x"$base_ext"', 2.598833643460815e-06], ['ext_canon=`grep', 2.598833643460815e-06], ['ext_on=`grep', 2.598833643460815e-06], ['ext_off=`grep', 2.598833643460815e-06], ['$base_ext', 2.598833643460815e-06], ['Adding', 2.598833643460815e-06], ['("$ext_on"', 2.598833643460815e-06], ['Removing', 2.598833643460815e-06], ['~("$ext_off"', 2.598833643460815e-06], ["'s/[a-z0-9]\\+//'`", 2.598833643460815e-06], ['ext_mask="(("$ext_mask")', 2.598833643460815e-06], ['6)"', 2.598833643460815e-06], ['x"$base_id"', 2.598833643460815e-06], ['target_cpu_cname="TARGET_CPU_$base_id', 2.598833643460815e-06], ['$ext_mask"', 2.598833643460815e-06], ['"$val"', 2.598833643460815e-06], ['ev4', 2.598833643460815e-06], ['ev45', 2.598833643460815e-06], ['21064', 2.598833643460815e-06], ['ev5', 2.598833643460815e-06], ['21164', 2.598833643460815e-06], ['ev56', 2.598833643460815e-06], ['21164a', 2.598833643460815e-06], ['pca56', 2.598833643460815e-06], ['21164PC', 2.598833643460815e-06], ['21164pc', 2.598833643460815e-06], ['ev6', 2.598833643460815e-06], ['21264', 2.598833643460815e-06], ['ev67', 2.598833643460815e-06], ['21264a)', 2.598833643460815e-06], ['x"$with_cpu"', 2.598833643460815e-06], ['"^ARC_CPU', 2.598833643460815e-06], ['($with_cpu,"', 2.598833643460815e-06], ['${srcdir}/config/arc/arc-cpus.def', 2.598833643460815e-06], ['Ok', 2.598833643460815e-06], ['float"', 2.598833643460815e-06], ['tls"', 2.598833643460815e-06], ['x"$val"', 2.598833643460815e-06], ['cpu=`awk', 2.598833643460815e-06], ['cmd="chk$which', 2.598833643460815e-06], ['$val"', 2.598833643460815e-06], ['"$cpu"', 2.598833643460815e-06], ['new_val=$cpu', 2.598833643460815e-06], ['"target_${which}_cname=$new_val"', 2.598833643460815e-06], ['"For', 2.598833643460815e-06], ['$new_val"', 2.598833643460815e-06], ['softfp)', 2.598833643460815e-06], ['--with-fpu', 2.598833643460815e-06], ['FPUs', 2.598833643460815e-06], ['x"$with_fpu"', 2.598833643460815e-06], ['fpu=`awk', 2.598833643460815e-06], ['cmd="chkfpu', 2.598833643460815e-06], ['$with_fpu"', 2.598833643460815e-06], ['"$fpu"', 2.598833643460815e-06], ['"error"]', 2.598833643460815e-06], ['apcs-gnu', 2.598833643460815e-06], ['atpcs', 2.598833643460815e-06], ['aapcs', 2.598833643460815e-06], ['iwmmxt', 2.598833643460815e-06], ['aapcs-linux', 2.598833643460815e-06], ['"$with_mode"', 2.598833643460815e-06], ['arm', 2.598833643460815e-06], ['thumb', 2.598833643460815e-06], ['--with-mode=$with_mode"', 2.598833643460815e-06], ['"$with_tls"', 2.598833643460815e-06], ['gnu2)', 2.598833643460815e-06], ['--with-tls=$with_tls"', 2.598833643460815e-06], ['\\"--with-arch\\"', 2.598833643460815e-06], ['"x$with_tune"', 2.598833643460815e-06], ['\\"--with-tune\\"', 2.598833643460815e-06], ['ml=', 2.598833643460815e-06], ['arm_multilibs=`echo', 2.598833643460815e-06], ['$with_multilib_list', 2.598833643460815e-06], ['"x${arm_multilibs}"', 2.598833643460815e-06], ['xdefault', 2.598833643460815e-06], ['arm_multilib', 2.598833643460815e-06], ['${arm_multilibs};', 2.598833643460815e-06], ['${arm_multilib}', 2.598833643460815e-06], ['aprofile|rmprofile)', 2.598833643460815e-06], ['tmake_profile_file="arm/t-multilib"', 2.598833643460815e-06], ['@*)', 2.598833643460815e-06], ['ml=`echo', 2.598833643460815e-06], ['"X$arm_multilib"', 2.598833643460815e-06], ["'1s,^X@,,'`", 2.598833643460815e-06], ['"${srcdir}/config/arm/${ml}";', 2.598833643460815e-06], ['arm/${ml}"', 2.598833643460815e-06], ['${ml}', 2.598833643460815e-06], ['${srcdir}/config/arm"', 2.598833643460815e-06], ['--with-multilib-list=${with_multilib_list}', 2.598833643460815e-06], ['"x${tmake_profile_file}"', 2.598833643460815e-06], ['arm/t-aprofile', 2.598833643460815e-06], ['arm/t-rmprofile', 2.598833643460815e-06], ['designed', 2.598833643460815e-06], ['with-cpu,', 2.598833643460815e-06], ['with-arch,', 2.598833643460815e-06], ['with-mode,', 2.598833643460815e-06], ['with-fpu', 2.598833643460815e-06], ['with-float', 2.598833643460815e-06], ['"x$with_float"', 2.598833643460815e-06], ['"x$with_fpu"', 2.598833643460815e-06], ['"x$with_mode"', 2.598833643460815e-06], ['--with-arch/cpu/fpu/float/mode', 2.598833643460815e-06], ['--with-multilib-list=${with_multilib_list}"', 2.598833643460815e-06], ['"x$ml"', 2.598833643460815e-06], ['profiles', 2.598833643460815e-06], ['ones"', 2.598833643460815e-06], ['float-abi', 2.598833643460815e-06], ['with_float="soft"', 2.598833643460815e-06], ['${tmake_profile_file}"', 2.598833643460815e-06], ['TM_MULTILIB_CONFIG="$with_multilib_list"', 2.598833643460815e-06], ['target_cpu_cname=${target_cpu_cname:-arm7tdmi}', 2.598833643460815e-06], ['with_cpu=${with_cpu:-$target_cpu_cname}', 2.598833643460815e-06], ['fr*-*-*linux*)', 2.598833643460815e-06], ['fr400)', 2.598833643460815e-06], ['fr550)', 2.598833643460815e-06], ['fido-*-*', 2.598833643460815e-06], ['"m68k"|', 2.598833643460815e-06], ['m68k_arch_family="$with_arch"', 2.598833643460815e-06], ['"m68000"', 2.598833643460815e-06], ['"m68010"', 2.598833643460815e-06], ['"m68020"', 2.598833643460815e-06], ['"m68030"', 2.598833643460815e-06], ['"m68040"', 2.598833643460815e-06], ['"m68060")', 2.598833643460815e-06], ['m68k_cpu_ident=$with_cpu', 2.598833643460815e-06], ['"m68020-40")', 2.598833643460815e-06], ['M68K_DEFAULT_TUNE=u68020_40"', 2.598833643460815e-06], ['"m68020-60")', 2.598833643460815e-06], ['M68K_DEFAULT_TUNE=u68020_60"', 2.598833643460815e-06], ['m68k_cpu_ident=`awk', 2.598833643460815e-06], ['arg="\\"$with_cpu\\""', 2.598833643460815e-06], ["'BEGIN", 2.598833643460815e-06], ['FS="[', 2.598833643460815e-06], ['\\t]*[,()][', 2.598833643460815e-06], ['\\t]*"', 2.598833643460815e-06], ['$1', 2.598833643460815e-06], ['"M68K_DEVICE"', 2.598833643460815e-06], ['$2', 2.598833643460815e-06], ['$3', 2.598833643460815e-06], ["}'", 2.598833643460815e-06], ['${srcdir}/config/m68k/m68k-devices.def`', 2.598833643460815e-06], ['x"$m68k_cpu_ident"', 2.598833643460815e-06], ['with_cpu="mcpu=$with_cpu"', 2.598833643460815e-06], ['amdgcn-*-*)', 2.598833643460815e-06], ['carrizo', 2.598833643460815e-06], ['fiji', 2.598833643460815e-06], ['gfx900', 2.598833643460815e-06], ['with_arch=fiji', 2.598833643460815e-06], ['schedule"', 2.598833643460815e-06], ['1.1', 2.598833643460815e-06], ['2.0)', 2.598833643460815e-06], ['"$with_schedule"', 2.598833643460815e-06], ['700', 2.598833643460815e-06], ['7100', 2.598833643460815e-06], ['7100LC', 2.598833643460815e-06], ['7200', 2.598833643460815e-06], ['7300', 2.598833643460815e-06], ['8000)', 2.598833643460815e-06], ['--with-schedule=$with_schedule."', 2.598833643460815e-06], ['*_32)', 2.598833643460815e-06], ['"CPU', 2.598833643460815e-06], ['--with-$which=$val', 2.598833643460815e-06], ['mode."', 2.598833643460815e-06], ['x${val}', 2.598833643460815e-06], ['--with-cpu=/--with-tune=', 2.598833643460815e-06], ['xcpu*|xtune*)', 2.598833643460815e-06], ['riscv*-*-*)', 2.598833643460815e-06], ['riscv_attribute"', 2.598833643460815e-06], ['riscv-*', 2.598833643460815e-06], ['riscv32*)', 2.598833643460815e-06], ['xlen=32', 2.598833643460815e-06], ['riscv64*)', 2.598833643460815e-06], ['xlen=64', 2.598833643460815e-06], ['RISC-V', 2.598833643460815e-06], ['${target}"', 2.598833643460815e-06], ['1>&2;', 2.598833643460815e-06], ['"${with_riscv_attribute}"', 2.598833643460815e-06], ['""|default)', 2.598833643460815e-06], ['riscv*-*-elf*)', 2.598833643460815e-06], ['"--with-riscv-attribute=${with_riscv_attribute}', 2.598833643460815e-06], ['yes,', 2.598833643460815e-06], ['default."', 2.598833643460815e-06], ['--with-arch,', 2.598833643460815e-06], ['--target,', 2.598833643460815e-06], ['--with-abi.', 2.598833643460815e-06], ['rv32e*', 2.598833643460815e-06], ['rv32i*', 2.598833643460815e-06], ['rv32g*', 2.598833643460815e-06], ['rv64i*', 2.598833643460815e-06], ['XLEN,', 2.598833643460815e-06], ['GC.', 2.598833643460815e-06], ['ilp32e)', 2.598833643460815e-06], ['with_arch="rv32e"', 2.598833643460815e-06], ['with_arch="rv32gc"', 2.598833643460815e-06], ['with_arch="rv64gc"', 2.598833643460815e-06], ['with_arch="rv${xlen}gc"', 2.598833643460815e-06], ['"--with-arch=${with_arch}', 2.598833643460815e-06], ['rv32e,', 2.598833643460815e-06], ['rv32i,', 2.598833643460815e-06], ['rv32g,', 2.598833643460815e-06], ['rv64i,', 2.598833643460815e-06], ['rv64g."', 2.598833643460815e-06], ['ISA,', 2.598833643460815e-06], ['preferring', 2.598833643460815e-06], ['soft-float', 2.598833643460815e-06], ['ilp32e', 2.598833643460815e-06], ['rv32*d*', 2.598833643460815e-06], ['rv32g*)', 2.598833643460815e-06], ['with_abi=ilp32d', 2.598833643460815e-06], ['rv32e*)', 2.598833643460815e-06], ['with_abi=ilp32e', 2.598833643460815e-06], ['rv32*)', 2.598833643460815e-06], ['with_abi=ilp32', 2.598833643460815e-06], ['rv64*d*', 2.598833643460815e-06], ['with_abi=lp64d', 2.598833643460815e-06], ['rv64*)', 2.598833643460815e-06], ['with_abi=lp64', 2.598833643460815e-06], ['"${with_abi},${with_arch}"', 2.598833643460815e-06], ['ilp32,rv32*', 2.598833643460815e-06], ['ilp32e,rv32e*', 2.598833643460815e-06], ['ilp32f,rv32*f*', 2.598833643460815e-06], ['ilp32f,rv32g*', 2.598833643460815e-06], ['ilp32d,rv32*d*', 2.598833643460815e-06], ['ilp32d,rv32g*', 2.598833643460815e-06], ['lp64,rv64*', 2.598833643460815e-06], ['lp64f,rv64*f*', 2.598833643460815e-06], ['lp64f,rv64g*', 2.598833643460815e-06], ['lp64d,rv64*d*', 2.598833643460815e-06], ['lp64d,rv64g*)', 2.598833643460815e-06], ['${with_arch}"', 2.598833643460815e-06], ['--with-multilib-list.', 2.598833643460815e-06], ['"x${with_multilib_list}"', 2.598833643460815e-06], ['xdefault;', 2.598833643460815e-06], ['riscv/withmultilib.h"', 2.598833643460815e-06], ['riscv/t-withmultilib"', 2.598833643460815e-06], ['${with_multilib_list}', 2.598833643460815e-06], ['lp64d', 2.598833643460815e-06], ['TM_MULTILIB_CONFIG="${with_arch},${with_multilib_list}"', 2.598833643460815e-06], ['multilib.', 2.598833643460815e-06], ['rv32gc)', 2.598833643460815e-06], ['TARGET_MLIB_ARCH=1"', 2.598833643460815e-06], ['rv64gc)', 2.598833643460815e-06], ['TARGET_MLIB_ARCH=2"', 2.598833643460815e-06], ['--with-multilib-list"', 2.598833643460815e-06], ['TARGET_MLIB_ABI=1"', 2.598833643460815e-06], ['ilp32f)', 2.598833643460815e-06], ['TARGET_MLIB_ABI=2"', 2.598833643460815e-06], ['TARGET_MLIB_ABI=3"', 2.598833643460815e-06], ['TARGET_MLIB_ABI=4"', 2.598833643460815e-06], ['lp64f)', 2.598833643460815e-06], ['TARGET_MLIB_ABI=5"', 2.598833643460815e-06], ['TARGET_MLIB_ABI=6"', 2.598833643460815e-06], ['--with-multilib"', 2.598833643460815e-06], ['${with_fpu}', 2.598833643460815e-06], ['--with-fpu=$with_fpu"', 2.598833643460815e-06], ['${with_nan}', 2.598833643460815e-06], ['2008', 2.598833643460815e-06], ['legacy)', 2.598833643460815e-06], ['--with-nan=$with_nan"', 2.598833643460815e-06], ['${with_fp_32}', 2.598833643460815e-06], ['--with-fp-32=$with_fp_32"', 2.598833643460815e-06], ['${with_odd_spreg_32}', 2.598833643460815e-06], ['with_odd_spreg_32="odd-spreg"', 2.598833643460815e-06], ['with_odd_spreg_32="no-odd-spreg"', 2.598833643460815e-06], ['odd-spreg-32', 2.598833643460815e-06], ['--with-odd-spreg-32=$with_odd_spreg_32"', 2.598833643460815e-06], ['o64', 2.598833643460815e-06], ['n32', 2.598833643460815e-06], ['${with_divide}', 2.598833643460815e-06], ['breaks', 2.598833643460815e-06], ['traps)', 2.598833643460815e-06], ['--with-divide=$with_divide"', 2.598833643460815e-06], ['${with_llsc}', 2.598833643460815e-06], ['with_llsc=llsc', 2.598833643460815e-06], ['with_llsc="no-llsc"', 2.598833643460815e-06], ['--with-llsc"', 2.598833643460815e-06], ['${with_mips_plt}', 2.598833643460815e-06], ['with_mips_plt=plt', 2.598833643460815e-06], ['with_mips_plt=no-plt', 2.598833643460815e-06], ['--with-mips-plt', 2.598833643460815e-06], ['$with_mips_plt"', 2.598833643460815e-06], ['${with_synci}', 2.598833643460815e-06], ['with_synci=synci', 2.598833643460815e-06], ['with_synci=no-synci', 2.598833643460815e-06], ['--with-synci"', 2.598833643460815e-06], ['${with_lxc1_sxc1}', 2.598833643460815e-06], ['with_lxc1_sxc1=lxc1-sxc1', 2.598833643460815e-06], ['with_lxc1_sxc1=no-lxc1-sxc1', 2.598833643460815e-06], ['--with-lxc1-sxc1"', 2.598833643460815e-06], ['${with_madd4}', 2.598833643460815e-06], ['with_madd4=madd4', 2.598833643460815e-06], ['with_madd4=no-madd4', 2.598833643460815e-06], ['madd4', 2.598833643460815e-06], ['--with-madd4"', 2.598833643460815e-06], ['nds32_lib', 2.598833643460815e-06], ['fpu_config"', 2.598833643460815e-06], ['v3m)', 2.598833643460815e-06], ['v3f)', 2.598833643460815e-06], ['TARGET_ARCH_DEFAULT=1"', 2.598833643460815e-06], ['TARGET_ARCH_DEFAULT=2"', 2.598833643460815e-06], ['--with-arch=$with_arch,', 2.598833643460815e-06], ['v3m', 2.598833643460815e-06], ['v3s"', 2.598833643460815e-06], ['"${with_cpu}"', 2.598833643460815e-06], ['with_cpu=n9', 2.598833643460815e-06], ['|n8', 2.598833643460815e-06], ['n15)', 2.598833643460815e-06], ['n8', 2.598833643460815e-06], ['n15"', 2.598833643460815e-06], ['--with-nds32-lib', 2.598833643460815e-06], ['"${with_nds32_lib}"', 2.598833643460815e-06], ['with_nds32_lib=ulibc', 2.598833643460815e-06], ['with_nds32_lib=glibc', 2.598833643460815e-06], ['with_nds32_lib=newlib', 2.598833643460815e-06], ['newlib)', 2.598833643460815e-06], ['mculib)', 2.598833643460815e-06], ['arch=v3f', 2.598833643460815e-06], ['arch=v3s', 2.598833643460815e-06], ['-fno-math-errno', 2.598833643460815e-06], ['TARGET_DEFAULT_NO_MATH_ERRNO=1"', 2.598833643460815e-06], ['uclibc)', 2.598833643460815e-06], ['--with-nds32-lib=$with_nds32_lib,', 2.598833643460815e-06], ['uclibc"', 2.598833643460815e-06], ['--with-float', 2.598833643460815e-06], ['"${with_float}"', 2.598833643460815e-06], ['--with-float=$with_float,', 2.598833643460815e-06], ['hard"', 2.598833643460815e-06], ['--with-config-fpu', 2.598833643460815e-06], ['"${with_config_fpu}"', 2.598833643460815e-06], ['--with-config-fpu=$with_config_fpu,', 2.598833643460815e-06], ['7"', 2.598833643460815e-06], ['nios2*-*-*)', 2.598833643460815e-06], ['r2)', 2.598833643460815e-06], ['advance_toolchain"', 2.598833643460815e-06], ['default32', 2.598833643460815e-06], ['default64)', 2.598833643460815e-06], ['tune)', 2.598833643460815e-06], ['"$val', 2.598833643460815e-06], ['--with-tune."', 2.598833643460815e-06], ['with_which="with_$which"', 2.598833643460815e-06], ['$with_which=', 2.598833643460815e-06], ['405cr)', 2.598833643460815e-06], ['CONFIG_PPC405CR"', 2.598833643460815e-06], ['"with_$which=405"', 2.598833643460815e-06], ['power[3456789]', 2.598833643460815e-06], ['power5+', 2.598833643460815e-06], ['power6x', 2.598833643460815e-06], ['powerpc', 2.598833643460815e-06], ['powerpc64', 2.598833643460815e-06], ['powerpc64le', 2.598833643460815e-06], ['rs64', 2.598833643460815e-06], ['401', 2.598833643460815e-06], ['403', 2.598833643460815e-06], ['405', 2.598833643460815e-06], ['405fp', 2.598833643460815e-06], ['440', 2.598833643460815e-06], ['440fp', 2.598833643460815e-06], ['464', 2.598833643460815e-06], ['464fp', 2.598833643460815e-06], ['476', 2.598833643460815e-06], ['476fp', 2.598833643460815e-06], ['505', 2.598833643460815e-06], ['601', 2.598833643460815e-06], ['602', 2.598833643460815e-06], ['603', 2.598833643460815e-06], ['603e', 2.598833643460815e-06], ['ec603e', 2.598833643460815e-06], ['604', 2.598833643460815e-06], ['604e', 2.598833643460815e-06], ['620', 2.598833643460815e-06], ['630', 2.598833643460815e-06], ['740', 2.598833643460815e-06], ['750', 2.598833643460815e-06], ['7400', 2.598833643460815e-06], ['7450', 2.598833643460815e-06], ['e300c[23]', 2.598833643460815e-06], ['854[08]', 2.598833643460815e-06], ['e500mc', 2.598833643460815e-06], ['e500mc64', 2.598833643460815e-06], ['e5500', 2.598833643460815e-06], ['e6500', 2.598833643460815e-06], ['titan', 2.598833643460815e-06], ['801', 2.598833643460815e-06], ['821', 2.598833643460815e-06], ['823', 2.598833643460815e-06], ['860', 2.598833643460815e-06], ['970', 2.598833643460815e-06], ['G4', 2.598833643460815e-06], ['G5', 2.598833643460815e-06], ['cell)', 2.598833643460815e-06], ['elfv1', 2.598833643460815e-06], ['elfv2', 2.598833643460815e-06], ['"x$with_advance_toolchain"', 2.598833643460815e-06], ['"/opt/$with_advance_toolchain/."', 2.598833643460815e-06], ['"/opt/$with_advance_toolchain/bin/."', 2.598833643460815e-06], ['"/opt/$with_advance_toolchain/include/.";', 2.598833643460815e-06], ['./advance-toolchain.h"', 2.598833643460815e-06], ['(at="/opt/$with_advance_toolchain"', 2.598833643460815e-06], ['"/*', 2.598833643460815e-06], ['Toolchain', 2.598833643460815e-06], ['$at', 2.598833643460815e-06], ['*/"', 2.598833643460815e-06], ['$at/lib"', 2.598833643460815e-06], ['$at/lib\\""', 2.598833643460815e-06], ['$at/lib64"', 2.598833643460815e-06], ['$at/lib64\\""', 2.598833643460815e-06], ['"\\"--enable-new-dtags\\""', 2.598833643460815e-06], ['DYNAMIC_LINKER_PREFIX"', 2.598833643460815e-06], ['DYNAMIC_LINKER_PREFIX', 2.598833643460815e-06], ['\\"$at\\""', 2.598833643460815e-06], ['MD_EXEC_PREFIX"', 2.598833643460815e-06], ['MD_EXEC_PREFIX', 2.598833643460815e-06], ['\\"$at/bin/\\""', 2.598833643460815e-06], ['MD_STARTFILE_PREFIX"', 2.598833643460815e-06], ['MD_STARTFILE_PREFIX', 2.598833643460815e-06], ['\\"$at/lib/\\"")', 2.598833643460815e-06], ['advance-toolchain.h', 2.598833643460815e-06], ['advance-toolchain', 2.598833643460815e-06], ['$with_advance_toolchain"', 2.598833643460815e-06], ['xieee;', 2.598833643460815e-06], ['TARGET_IEEEQUAD_DEFAULT=1"', 2.598833643460815e-06], ['xibm;', 2.598833643460815e-06], ['TARGET_IEEEQUAD_DEFAULT=0"', 2.598833643460815e-06], ['z900', 2.598833643460815e-06], ['z990', 2.598833643460815e-06], ['z9-109', 2.598833643460815e-06], ['z9-ec', 2.598833643460815e-06], ['z10', 2.598833643460815e-06], ['z196', 2.598833643460815e-06], ['zEC12', 2.598833643460815e-06], ['z13', 2.598833643460815e-06], ['z14', 2.598833643460815e-06], ['arch5', 2.598833643460815e-06], ['arch6', 2.598833643460815e-06], ['arch7', 2.598833643460815e-06], ['arch8', 2.598833643460815e-06], ['arch9', 2.598833643460815e-06], ['arch10', 2.598833643460815e-06], ['arch11', 2.598833643460815e-06], ['arch12)', 2.598833643460815e-06], ['${with_mode}', 2.598833643460815e-06], ['esa', 2.598833643460815e-06], ['zarch)', 2.598833643460815e-06], ['--with-mode=$with_mode."', 2.598833643460815e-06], ['"`echo', 2.598833643460815e-06], ['s/sh/m/`"', 2.598833643460815e-06], ['m4al)', 2.598833643460815e-06], ['"m1', 2.598833643460815e-06], ['m4-nofpu"', 2.598833643460815e-06], ['"m4a', 2.598833643460815e-06], ['m4al"', 2.598833643460815e-06], ['"m2a', 2.598833643460815e-06], ['m2a-nofpu"', 2.598833643460815e-06], ['sparc', 2.598833643460815e-06], ['sparcv9', 2.598833643460815e-06], ['sparc64', 2.598833643460815e-06], ['v7', 2.598833643460815e-06], ['cypress', 2.598833643460815e-06], ['v8', 2.598833643460815e-06], ['supersparc', 2.598833643460815e-06], ['hypersparc', 2.598833643460815e-06], ['leon', 2.598833643460815e-06], ['leon3', 2.598833643460815e-06], ['leon3v7', 2.598833643460815e-06], ['sparclite', 2.598833643460815e-06], ['f930', 2.598833643460815e-06], ['f934', 2.598833643460815e-06], ['sparclite86x', 2.598833643460815e-06], ['sparclet', 2.598833643460815e-06], ['tsc701', 2.598833643460815e-06], ['v9', 2.598833643460815e-06], ['ultrasparc', 2.598833643460815e-06], ['ultrasparc3', 2.598833643460815e-06], ['niagara', 2.598833643460815e-06], ['niagara2', 2.598833643460815e-06], ['niagara3', 2.598833643460815e-06], ['niagara4', 2.598833643460815e-06], ['niagara7', 2.598833643460815e-06], ['m8)', 2.598833643460815e-06], ['spu-*-*)', 2.598833643460815e-06], ['cell', 2.598833643460815e-06], ['celledp)', 2.598833643460815e-06], ['c62x', 2.598833643460815e-06], ['c64x', 2.598833643460815e-06], ['c64x+', 2.598833643460815e-06], ['c67x', 2.598833643460815e-06], ['c67x+', 2.598833643460815e-06], ['c674x)', 2.598833643460815e-06], ['--with-arch=$with_arch."', 2.598833643460815e-06], ['v850e', 2.598833643460815e-06], ['v850e1', 2.598833643460815e-06], ['v850e2', 2.598833643460815e-06], ['v850es', 2.598833643460815e-06], ['v850e2v3', 2.598833643460815e-06], ['v850e3v5)', 2.598833643460815e-06], ['gr5', 2.598833643460815e-06], ['gr6)', 2.598833643460815e-06], ['Targets', 2.598833643460815e-06], ['vxworks-dummy.h', 2.598833643460815e-06], ['TARGET_VXWORKS', 2.598833643460815e-06], ['markers', 2.598833643460815e-06], ['port,', 2.598833643460815e-06], ['vxworks*.h', 2.598833643460815e-06], ['64).', 2.598833643460815e-06], ['arm*-*-*', 2.598833643460815e-06], ['mips*-*-*', 2.598833643460815e-06], ['sh*-*-*', 2.598833643460815e-06], ['sparc*-*-*', 2.598833643460815e-06], ['tm_file="vxworks-dummy.h', 2.598833643460815e-06], ['miscellaneous', 2.598833643460815e-06], ['target_cpu_default2=', 2.598833643460815e-06], ['x"$target_cpu_cname"', 2.598833643460815e-06], ['target_cpu_default2=$target_cpu_cname', 2.598833643460815e-06], ['"Don\'t', 2.598833643460815e-06], ['target_cpu_default2="MASK_GAS"', 2.598833643460815e-06], ['fido*-*-*', 2.598833643460815e-06], ['target_cpu_default2=$m68k_cpu_ident', 2.598833643460815e-06], ['tmake_file="m68k/t-opts', 2.598833643460815e-06], ['x"$m68k_arch_family"', 2.598833643460815e-06], ['tmake_file="m68k/t-$m68k_arch_family', 2.598833643460815e-06], ['i[34567]86-*-darwin*', 2.598833643460815e-06], ['cet.o"', 2.598833643460815e-06], ['i386/t-linux', 2.598833643460815e-06], ['i386/t-cet"', 2.598833643460815e-06], ['i386/t-kfreebsd"', 2.598833643460815e-06], ['i386/t-gnu"', 2.598833643460815e-06], ['i[34567]86-*-msdosdjgpp*)', 2.598833643460815e-06], ['i386/t-djgpp"', 2.598833643460815e-06], ['i[34567]86-*-cygwin*', 2.598833643460815e-06], ['i[34567]86-*-dragonfly*', 2.598833643460815e-06], ['i[34567]86-*-freebsd*', 2.598833643460815e-06], ['target_cpu_default2="MASK_SPLIT_ADDRESSES"', 2.598833643460815e-06], ['mips*el-*-*)', 2.598833643460815e-06], ['tm_defines="TARGET_ENDIAN_DEFAULT=0', 2.598833643460815e-06], ['$tm_defines"', 2.598833643460815e-06], ['default_mips_arch=$with_arch', 2.598833643460815e-06], ['x$with_abi', 2.598833643460815e-06], ['default_mips_abi=$with_abi', 2.598833643460815e-06], ['${default_mips_arch}', 2.598833643460815e-06], ['mips1)', 2.598833643460815e-06], ['MIPS_ISA_DEFAULT=1"', 2.598833643460815e-06], ['mips2)', 2.598833643460815e-06], ['MIPS_ISA_DEFAULT=2"', 2.598833643460815e-06], ['mips3)', 2.598833643460815e-06], ['MIPS_ISA_DEFAULT=3"', 2.598833643460815e-06], ['mips4)', 2.598833643460815e-06], ['MIPS_ISA_DEFAULT=4"', 2.598833643460815e-06], ['mips32)', 2.598833643460815e-06], ['mips32r2)', 2.598833643460815e-06], ['mips32r6)', 2.598833643460815e-06], ['mips64)', 2.598833643460815e-06], ['mips64r2)', 2.598833643460815e-06], ['mips64r6)', 2.598833643460815e-06], ['${default_mips_abi}', 2.598833643460815e-06], ['o64)', 2.598833643460815e-06], ['n32)', 2.598833643460815e-06], ['MIPS_ABI_DEFAULT=ABI_64"', 2.598833643460815e-06], ['tmake_file="mips/t-mips', 2.598833643460815e-06], ['PowerPC', 2.598833643460815e-06], ['cosmetic.', 2.598833643460815e-06], ['out_file="${cpu_type}/${cpu_type}.c"', 2.598833643460815e-06], ['${cpu_type}-d.o"', 2.598833643460815e-06], ['tmake_file="${cpu_type}/t-${cpu_type}', 2.598833643460815e-06], ['${tmake_file}"', 2.598833643460815e-06], ['xsparc)', 2.598833643460815e-06], ['with_cpu=v7', 2.598833643460815e-06], ['xsparcv9', 2.598833643460815e-06], ['xsparc64)', 2.598833643460815e-06], ['x$with_tune', 2.598833643460815e-06], ['with_tune=leon', 2.598833643460815e-06], ['with_tune=leon3', 2.598833643460815e-06], ['SPARC', 2.598833643460815e-06], ['xv850e', 2.598833643460815e-06], ['xv850e1', 2.598833643460815e-06], ['xv850e2', 2.598833643460815e-06], ['xv850e2v3', 2.598833643460815e-06], ['xv850e3v5)', 2.598833643460815e-06], ['xv850es)', 2.598833643460815e-06], ['target_cpu_default2="TARGET_CPU_v850e1"', 2.598833643460815e-06], ['t=', 2.598833643460815e-06], ['all_defaults="abi', 2.598833643460815e-06], ['tls', 2.598833643460815e-06], ['$all_defaults', 2.598833643460815e-06], ['"val=\\$with_"`echo', 2.598833643460815e-06], ['s/-/_/g`', 2.598833643460815e-06], ['-n', 2.598833643460815e-06], ['"$val";', 2.598833643460815e-06], ['$supported_defaults', 2.598833643460815e-06], ['--with-$option."', 2.598833643460815e-06], ['"Valid', 2.598833643460815e-06], ['$supported_defaults"', 2.598833643460815e-06], ['t="{', 2.598833643460815e-06], ['t="${t},', 2.598833643460815e-06], ['NULL}', 2.598833643460815e-06], ['${t}', 2.598833643460815e-06], ['"$target_cpu_default2"', 2.598833643460815e-06], ['"$target_cpu_default"', 2.598833643460815e-06], ['target_cpu_default="(${target_cpu_default}|${target_cpu_default2})"', 2.598833643460815e-06], ['target_cpu_default=$target_cpu_default2', 2.598833643460815e-06], ['extra_programs="mkoffload\\$(exeext)"', 2.598833643460815e-06], ['"explow.h"', 2.598833643460815e-06], ['force_operand,', 2.598833643460815e-06], ['target)', 2.598833643460815e-06], ['force_operand', 2.598833643460815e-06], ['target);', 2.598833643460815e-06], ['target))', 2.598833643460815e-06], ['expand_block_move', 2.598833643460815e-06], ['(operands[2]));', 2.598833643460815e-06], ['word-aligned,', 2.598833643460815e-06], ['movua.l', 2.598833643460815e-06], ['sequence.', 2.598833643460815e-06], ['(TARGET_SH4A', 2.598833643460815e-06], ['(operands[0])', 2.598833643460815e-06], ['can_move_by_pieces', 2.598833643460815e-06], ['pseudos', 2.598833643460815e-06], ['word,', 2.598833643460815e-06], ['movua', 2.598833643460815e-06], ['pointless.', 2.598833643460815e-06], ['src_addr', 2.598833643460815e-06], ['set_mem_size', 2.598833643460815e-06], ['(gen_movua', 2.598833643460815e-06], ['(temp,', 2.598833643460815e-06], ['from));', 2.598833643460815e-06], ['(src_addr,', 2.598833643460815e-06], ['(to,', 2.598833643460815e-06], ['temp);', 2.598833643460815e-06], ['move_by_pieces', 2.598833643460815e-06], ['(adjust_address', 2.598833643460815e-06], ['copied,', 2.598833643460815e-06], ['align,', 2.598833643460815e-06], ['RETURN_BEGIN);', 2.598833643460815e-06], ['(TARGET_HARD_SH4)', 2.598833643460815e-06], ['"__movmemSI12_i4",', 2.598833643460815e-06], ['(gen_block_move_real_i4', 2.598833643460815e-06], ['"__movmem_i4_odd"', 2.598833643460815e-06], ['"__movmem_i4_even",', 2.598833643460815e-06], ['dwords', 2.598833643460815e-06], ['(dwords', 2.598833643460815e-06], ['(gen_block_lump_real_i4', 2.598833643460815e-06], ['entry[30];', 2.598833643460815e-06], ['(entry,', 2.598833643460815e-06], ['"__movmemSI%d",', 2.598833643460815e-06], ['entry,', 2.598833643460815e-06], ['(gen_block_move_real', 2.598833643460815e-06], ['final_switch,', 2.598833643460815e-06], ['while_loop;', 2.598833643460815e-06], ['"__movmem",', 2.598833643460815e-06], ['decremented', 2.598833643460815e-06], ['moved.', 2.598833643460815e-06], ['72', 2.598833643460815e-06], ['size(r6)', 2.598833643460815e-06], ['-2', 2.598833643460815e-06], ['part.', 2.598833643460815e-06], ['final_switch', 2.598833643460815e-06], ['while_loop', 2.598833643460815e-06], ['(while_loop', 2.598833643460815e-06], ['final_switch)));', 2.598833643460815e-06], ['(gen_block_lump_real', 2.598833643460815e-06], ['prob_unlikely', 2.598833643460815e-06], ['prob_likely', 2.598833643460815e-06], ['strcmp.', 2.598833643460815e-06], ['sh_expand_cmpstr', 2.598833643460815e-06], ['tmp3);', 2.598833643460815e-06], ['tmp3,', 2.598833643460815e-06], ['Fallthu,', 2.598833643460815e-06], ['words.', 2.598833643460815e-06], ['(TARGET_LITTLE_ENDIAN)', 2.598833643460815e-06], ['low_1', 2.598833643460815e-06], ['tmp1);', 2.598833643460815e-06], ['low_2', 2.598833643460815e-06], ['tmp2);', 2.598833643460815e-06], ['strncmp.', 2.598833643460815e-06], ['OPERANDS[4]', 2.598833643460815e-06], ['sh_expand_cmpnstr', 2.598833643460815e-06], ['(operands[3])', 2.598833643460815e-06], ['witers', 2.598833643460815e-06], ['(witers', 2.598833643460815e-06], ['tmp2,', 2.598833643460815e-06], ['sbytes', 2.598833643460815e-06], ['Reached', 2.598833643460815e-06], ['iterations.', 2.598833643460815e-06], ['(sbytes', 2.598833643460815e-06], ['Remaining', 2.598833643460815e-06], ['(sbytes--)', 2.598833643460815e-06], ['Restart', 2.598833643460815e-06], ['byte.', 2.598833643460815e-06], ['thru.', 2.598833643460815e-06], ['(bytes--)', 2.598833643460815e-06], ['strlen.', 2.598833643460815e-06], ['sh_expand_strlen', 2.598833643460815e-06], ['current_addr', 2.598833643460815e-06], ['start_addr', 2.598833643460815e-06], ['(-1));', 2.598833643460815e-06], ['current_addr);', 2.598833643460815e-06], ['unroll', 2.598833643460815e-06], ['start_addr,', 2.598833643460815e-06], ['(1)));', 2.598833643460815e-06], ['start_addr));', 2.598833643460815e-06], ['sh_expand_setmem', 2.598833643460815e-06], ['*L_loop_word', 2.598833643460815e-06], ['dest_addr', 2.598833643460815e-06], ['(operands[1]))', 2.598833643460815e-06], ['(L_loop_word);', 2.598833643460815e-06], ['(L_loop_word));', 2.598833643460815e-06], ['(count--)', 2.598833643460815e-06], ['brig2tree.cc', 2.598833643460815e-06], ['generic/gimple', 2.598833643460815e-06], ['<cassert>', 2.598833643460815e-06], ['brig_to_generic::s_fp16_type;', 2.598833643460815e-06], ['brig_to_generic::s_fp32_type;', 2.598833643460815e-06], ['brig_to_generic::s_fp64_type;', 2.598833643460815e-06], ['brig_to_generic::brig_to_generic', 2.598833643460815e-06], ['natively.', 2.598833643460815e-06], ['(handle', 2.598833643460815e-06], ['only),', 2.598833643460815e-06], ['row).', 2.598833643460815e-06], ['s_fp16_type', 2.598833643460815e-06], ['(REAL_TYPE);', 2.598833643460815e-06], ['(s_fp16_type,', 2.598833643460815e-06], ['(s_fp16_type);', 2.598833643460815e-06], ['s_fp32_type', 2.598833643460815e-06], ['(BRIG_TYPE_F32);', 2.598833643460815e-06], ['s_fp64_type', 2.598833643460815e-06], ['(BRIG_TYPE_F64);', 2.598833643460815e-06], ['(machine)query', 2.598833643460815e-06], ['m_default_float_rounding_mode', 2.598833643460815e-06], ['BRIG_ROUND_FLOAT_ZERO;', 2.598833643460815e-06], ['m_dump_file', 2.598833643460815e-06], ['dump_begin', 2.598833643460815e-06], ['&m_dump_flags);', 2.598833643460815e-06], ['Handler', 2.598833643460815e-06], ['are)', 2.598833643460815e-06], ['pairing', 2.598833643460815e-06], ['BrigCodeEntryHandler', 2.598833643460815e-06], ['Finds', 2.598833643460815e-06], ['brig_to_generic::find_brig_sections', 2.598833643460815e-06], ['m_brig;', 2.598833643460815e-06], ['mheader->sectionCount;', 2.598833643460815e-06], ['++sec)', 2.598833643460815e-06], ['mheader->sectionIndex))[sec];', 2.598833643460815e-06], ['*section_header', 2.598833643460815e-06], ['(&section_header->name),', 2.598833643460815e-06], ['section_header->nameLength);', 2.598833643460815e-06], ['BRIG_SECTION_INDEX_DATA', 2.598833643460815e-06], ['"hsa_data")', 2.598833643460815e-06], ['m_data_size', 2.598833643460815e-06], ['BRIG_SECTION_INDEX_CODE', 2.598833643460815e-06], ['"hsa_code")', 2.598833643460815e-06], ['m_code_size', 2.598833643460815e-06], ['BRIG_SECTION_INDEX_OPERAND', 2.598833643460815e-06], ['"hsa_operand")', 2.598833643460815e-06], ['m_operand_size', 2.598833643460815e-06], ['scope).', 2.598833643460815e-06], ['brig_to_generic::analyze', 2.598833643460815e-06], ['(strncmp', 2.598833643460815e-06], ['(mheader->identification,', 2.598833643460815e-06], ['"HSA', 2.598833643460815e-06], ['BRIG",', 2.598833643460815e-06], ['"Unrecognized', 2.598833643460815e-06], ['format.");', 2.598833643460815e-06], ['(mheader->brigMajor', 2.598833643460815e-06], ['mheader->brigMinor', 2.598833643460815e-06], ['"BRIG', 2.598833643460815e-06], ['reg_use_analyzer', 2.598833643460815e-06], ['grabbing', 2.598833643460815e-06], ['&func_handler}};', 2.598833643460815e-06], ['&skipped_handler;', 2.598833643460815e-06], ['bytes_processed', 2.598833643460815e-06], ['(bytes_processed', 2.598833643460815e-06], ['PHSA_ERROR_PREFIX_CORRUPTED_MODULE', 2.598833643460815e-06], ['"Element', 2.598833643460815e-06], ['bytes.");', 2.598833643460815e-06], ['bytes_processed;', 2.598833643460815e-06], ['m_module_group_variables.size', 2.598833643460815e-06], ['Parses', 2.598833643460815e-06], ['blob.', 2.598833643460815e-06], ['brig_to_generic::parse', 2.598833643460815e-06], ['inst_handler', 2.598833643460815e-06], ['brig_branch_inst_handler', 2.598833643460815e-06], ['branch_inst_handler', 2.598833643460815e-06], ['brig_cvt_inst_handler', 2.598833643460815e-06], ['cvt_inst_handler', 2.598833643460815e-06], ['brig_seg_inst_handler', 2.598833643460815e-06], ['seg_inst_handler', 2.598833643460815e-06], ['brig_copy_move_inst_handler', 2.598833643460815e-06], ['copy_move_inst_handler', 2.598833643460815e-06], ['brig_signal_inst_handler', 2.598833643460815e-06], ['signal_inst_handler', 2.598833643460815e-06], ['brig_atomic_inst_handler', 2.598833643460815e-06], ['atomic_inst_handler', 2.598833643460815e-06], ['brig_cmp_inst_handler', 2.598833643460815e-06], ['cmp_inst_handler', 2.598833643460815e-06], ['brig_mem_inst_handler', 2.598833643460815e-06], ['mem_inst_handler', 2.598833643460815e-06], ['brig_inst_mod_handler', 2.598833643460815e-06], ['inst_mod_handler', 2.598833643460815e-06], ['brig_directive_label_handler', 2.598833643460815e-06], ['label_handler', 2.598833643460815e-06], ['brig_directive_comment_handler', 2.598833643460815e-06], ['comment_handler', 2.598833643460815e-06], ['brig_directive_control_handler', 2.598833643460815e-06], ['control_handler', 2.598833643460815e-06], ['brig_directive_arg_block_handler', 2.598833643460815e-06], ['arg_block_handler', 2.598833643460815e-06], ['brig_lane_inst_handler', 2.598833643460815e-06], ['lane_inst_handler', 2.598833643460815e-06], ['brig_queue_inst_handler', 2.598833643460815e-06], ['queue_inst_handler', 2.598833643460815e-06], ['unimplemented_handler', 2.598833643460815e-06], ['fast', 2.598833643460815e-06], ['average.', 2.598833643460815e-06], ['&inst_handler},', 2.598833643460815e-06], ['&cmp_inst_handler},', 2.598833643460815e-06], ['&mem_inst_handler},', 2.598833643460815e-06], ['&inst_mod_handler},', 2.598833643460815e-06], ['&cvt_inst_handler},', 2.598833643460815e-06], ['&atomic_inst_handler},', 2.598833643460815e-06], ['&signal_inst_handler},', 2.598833643460815e-06], ['&branch_inst_handler},', 2.598833643460815e-06], ['&lane_inst_handler},', 2.598833643460815e-06], ['&queue_inst_handler},', 2.598833643460815e-06], ['fences', 2.598833643460815e-06], ['porting', 2.598833643460815e-06], ['{BRIG_KIND_INST_MEM_FENCE,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_LABEL,', 2.598833643460815e-06], ['&label_handler},', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_ARG_BLOCK_START,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_ARG_BLOCK_END,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_COMMENT,', 2.598833643460815e-06], ['&comment_handler},', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_SIGNATURE,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_INDIRECT_FUNCTION,', 2.598833643460815e-06], ['Skipping', 2.598833643460815e-06], ['conformance.', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_LOC,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_PRAGMA,', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_CONTROL,', 2.598833643460815e-06], ['&control_handler},', 2.598833643460815e-06], ['{BRIG_KIND_DIRECTIVE_EXTENSION,', 2.598833643460815e-06], ['BRIG_KIND_NONE', 2.598833643460815e-06], ['patching', 2.598833643460815e-06], ['finalization.', 2.598833643460815e-06], ['{BRIG_KIND_NONE,', 2.598833643460815e-06], ['&skipped_handler}};', 2.598833643460815e-06], ['&unimplemented_handler;', 2.598833643460815e-06], ['brig_to_generic::get_brig_data_entry', 2.598833643460815e-06], ['brig_to_generic::get_brig_operand_entry', 2.598833643460815e-06], ['brig_to_generic::get_brig_code_entry', 2.598833643460815e-06], ['brig_to_generic::append_global', 2.598833643460815e-06], ['(m_globals', 2.598833643460815e-06], ['tree_last', 2.598833643460815e-06], ['(last)', 2.598833643460815e-06], ['brig_to_generic::global_variable', 2.598833643460815e-06], ['m_global_variables.find', 2.598833643460815e-06], ['m_global_variables.end', 2.598833643460815e-06], ['DirectiveFunction', 2.598833643460815e-06], ['similar.', 2.598833643460815e-06], ['brig_to_generic::function_decl', 2.598833643460815e-06], ['m_function_index.find', 2.598833643460815e-06], ['m_function_index.end', 2.598833643460815e-06], ['brig_to_generic::add_function_decl', 2.598833643460815e-06], ['m_function_index[name]', 2.598833643460815e-06], ['(because', 2.598833643460815e-06], ['variable),', 2.598833643460815e-06], ['brig_to_generic::add_global_variable', 2.598833643460815e-06], ['m_global_variables[name]', 2.598833643460815e-06], ['host_def_var_name', 2.598833643460815e-06], ['host_def_var', 2.598833643460815e-06], ['global_variable', 2.598833643460815e-06], ['(host_def_var_name);', 2.598833643460815e-06], ['(host_def_var', 2.598833643460815e-06], ['(var_decl));', 2.598833643460815e-06], ['var_addr;', 2.598833643460815e-06], ['(host_def_var);', 2.598833643460815e-06], ['host-defined', 2.598833643460815e-06], ['brig_to_generic::add_host_def_var_ptr', 2.598833643460815e-06], ['ptr_var', 2.598833643460815e-06], ['(var_decl)));', 2.598833643460815e-06], ['m_global_variables[var_name]', 2.598833643460815e-06], ['ptr_var;', 2.598833643460815e-06], ['brig_to_generic::add_decl_call', 2.598833643460815e-06], ['m_decl_call.push_back', 2.598833643460815e-06], ['"mangled', 2.598833643460815e-06], ['name"', 2.598833643460815e-06], ['Program', 2.598833643460815e-06], ['dropping', 2.598833643460815e-06], ['&),', 2.598833643460815e-06], ['brig_to_generic::get_mangled_name', 2.598833643460815e-06], ['*func)', 2.598833643460815e-06], ['&.', 2.598833643460815e-06], ['get_string', 2.598833643460815e-06], ['(func->name).substr', 2.598833643460815e-06], ['(func->linkage', 2.598833643460815e-06], ['BRIG_LINKAGE_MODULE)', 2.598833643460815e-06], ['queried', 2.598833643460815e-06], ['binary.', 2.598833643460815e-06], ['"gccbrig."', 2.598833643460815e-06], ['m_module_name', 2.598833643460815e-06], ['brig_to_generic::get_string', 2.598833643460815e-06], ['*data_item', 2.598833643460815e-06], ['get_brig_data_entry', 2.598833643460815e-06], ['(entry_offset);', 2.598833643460815e-06], ['&data_item->bytes,', 2.598833643460815e-06], ['data_item->byteCount);', 2.598833643460815e-06], ['Adapted', 2.598833643460815e-06], ['c-semantics.c.', 2.598833643460815e-06], ['variably-sized', 2.598833643460815e-06], ['tcc_vl_exp);', 2.598833643460815e-06], ['TREE_CODE_LENGTH', 2.598833643460815e-06], ['!TYPE_P', 2.598833643460815e-06], ['(ret,', 2.598833643460815e-06], ['(p);', 2.598833643460815e-06], ['untyped,', 2.598833643460815e-06], ['sizes,', 2.598833643460815e-06], ['casting:', 2.598833643460815e-06], ['narrower', 2.598833643460815e-06], ['clipped', 2.598833643460815e-06], ['(source', 2.598833643460815e-06], ['(source,', 2.598833643460815e-06], ['(destination_type', 2.598833643460815e-06], ['(source_type);', 2.598833643460815e-06], ['(destination_type);', 2.598833643460815e-06], ['(src_size', 2.598833643460815e-06], ['dst_size)', 2.598833643460815e-06], ['resized', 2.598833643460815e-06], ['(get_scalar_unsigned_int_type', 2.598833643460815e-06], ['(destination_type),', 2.598833643460815e-06], ['(source));', 2.598833643460815e-06], ['((size_t)int_size_in_bytes', 2.598833643460815e-06], ['(resized))', 2.598833643460815e-06], ['dst_size);', 2.598833643460815e-06], ['(destination_type,', 2.598833643460815e-06], ['resized);', 2.598833643460815e-06], ['Reinterprets', 2.598833643460815e-06], ['orignal.', 2.598833643460815e-06], ['FUNC_DECL,', 2.598833643460815e-06], ['brig_to_generic::get_finished_function', 2.598833643460815e-06], ['identifier_to_locale', 2.598833643460815e-06], ['(func_decl)));', 2.598833643460815e-06], ['m_finished_functions.find', 2.598833643460815e-06], ['(func_name);', 2.598833643460815e-06], ['m_finished_functions.end', 2.598833643460815e-06], ['brig_to_generic::add_group_variable', 2.598833643460815e-06], ['function_scope)', 2.598833643460815e-06], ['feature.', 2.598833643460815e-06], ['populated', 2.598833643460815e-06], ["'analyze()'", 2.598833643460815e-06], ['prepass.', 2.598833643460815e-06], ['(!function_scope)', 2.598833643460815e-06], ['(!m_module_group_variables.has_variable', 2.598833643460815e-06], ['m_module_group_variables.add', 2.598833643460815e-06], ['(!m_cf->m_local_group_variables.has_variable', 2.598833643460815e-06], ['m_cf->m_local_group_variables.add', 2.598833643460815e-06], ['Finalizes', 2.598833643460815e-06], ['brig_to_generic::finish_function', 2.598833643460815e-06], ['fingerprint,', 2.598833643460815e-06], ['m_func_decl.', 2.598833643460815e-06], ['(!m_cf->m_is_kernel)', 2.598833643460815e-06], ['m_cf->m_current_bind_expr;', 2.598833643460815e-06], ['m_cf->finish', 2.598833643460815e-06], ['m_cf->emit_metadata', 2.598833643460815e-06], ['m_cf);', 2.598833643460815e-06], ['m_kernels.push_back', 2.598833643460815e-06], ['m_finished_functions[m_cf->m_name]', 2.598833643460815e-06], ['brig_to_generic::start_function', 2.598833643460815e-06], ['f)', 2.598833643460815e-06], ['(f));', 2.598833643460815e-06], ['brig_to_generic::append_private_variable', 2.598833643460815e-06], ['addresses.', 2.598833643460815e-06], ["work-item's", 2.598833643460815e-06], ['offset:', 2.598833643460815e-06], ['aligned.', 2.598833643460815e-06], ['per_var_padding', 2.598833643460815e-06], ['m_private_data_sizes[name]', 2.598833643460815e-06], ['m_private_offsets[name]', 2.598833643460815e-06], ['brig_to_generic::private_variable_segment_offset', 2.598833643460815e-06], ['m_private_offsets.find', 2.598833643460815e-06], ['m_private_offsets.end', 2.598833643460815e-06], ['brig_to_generic::has_private_variable', 2.598833643460815e-06], ['brig_to_generic::private_variable_size', 2.598833643460815e-06], ['brig_to_generic::private_segment_size', 2.598833643460815e-06], ['Cached', 2.598833643460815e-06], ['tree>', 2.598833643460815e-06], ['builtin_index;', 2.598833643460815e-06], ['builtin_index', 2.598833643460815e-06], ['builtin_cache_;', 2.598833643460815e-06], ['PDECL', 2.598833643460815e-06], ['RETTYPE', 2.598833643460815e-06], ['pdecl,', 2.598833643460815e-06], ['(rettype', 2.598833643460815e-06], ['*types', 2.598833643460815e-06], ['rettype);', 2.598833643460815e-06], ['types[i]', 2.598833643460815e-06], ['(types[i],', 2.598833643460815e-06], ['(types[i]', 2.598833643460815e-06], ['(pdecl);', 2.598833643460815e-06], ['fed', 2.598833643460815e-06], ['brig_to_generic::write_globals', 2.598833643460815e-06], ['m_decl_call.size();', 2.598833643460815e-06], ['m_decl_call.at(i);', 2.598833643460815e-06], ['get_callee_fndecl', 2.598833643460815e-06], ['*brig_function', 2.598833643460815e-06], ['get_finished_function', 2.598833643460815e-06], ['(func_decl);', 2.598833643460815e-06], ['(brig_function', 2.598833643460815e-06], ['(brig_function->m_func_decl)', 2.598833643460815e-06], ['(decl_call)', 2.598833643460815e-06], ['brig_function->m_func_decl;', 2.598833643460815e-06], ['m_finished_functions.begin(),', 2.598833643460815e-06], ['m_finished_functions.end();', 2.598833643460815e-06], ['*brig_f', 2.598833643460815e-06], ['(brig_f->m_is_kernel)', 2.598833643460815e-06], ['cgraph', 2.598833643460815e-06], ['(brig_f->m_func_decl);', 2.598833643460815e-06], ['(brig_f->m_func_decl,', 2.598833643460815e-06], ['processed,', 2.598833643460815e-06], ['m_kernels.size', 2.598833643460815e-06], ['m_kernels[i];', 2.598833643460815e-06], ['graphs', 2.598833643460815e-06], ['f->finish_kernel', 2.598833643460815e-06], ['(f->m_func_decl);', 2.598833643460815e-06], ['(f->m_func_decl,', 2.598833643460815e-06], ['f->m_descriptor.is_kernel', 2.598833643460815e-06], ['overly', 2.598833643460815e-06], ['pessimistic', 2.598833643460815e-06], ['f->m_descriptor.group_segment_size', 2.598833643460815e-06], ['m_total_group_segment_usage;', 2.598833643460815e-06], ['f->m_descriptor.private_segment_size', 2.598833643460815e-06], ['private_segment_size', 2.598833643460815e-06], ['specs.', 2.598833643460815e-06], ['f->m_next_kernarg_offset;', 2.598833643460815e-06], ['(f->m_descriptor.kernarg_segment_size', 2.598833643460815e-06], ['f->m_next_kernarg_offset', 2.598833643460815e-06], ['f->m_descriptor.kernarg_max_align', 2.598833643460815e-06], ['f->m_kernarg_max_align;', 2.598833643460815e-06], ['f->emit_launcher_and_metadata', 2.598833643460815e-06], ['(m_dump_file)', 2.598833643460815e-06], ['f->m_name.substr', 2.598833643460815e-06], ['kern_name.c_str());', 2.598833643460815e-06], ['launcher,', 2.598833643460815e-06], ['(launcher,', 2.598833643460815e-06], ['no_globals', 2.598833643460815e-06], ['list_length', 2.598833643460815e-06], ['*vec', 2.598833643460815e-06], ['tree[no_globals];', 2.598833643460815e-06], ['m_globals;', 2.598833643460815e-06], ['(global)', 2.598833643460815e-06], ['vec[i]', 2.598833643460815e-06], ['(global);', 2.598833643460815e-06], ['no_globals);', 2.598833643460815e-06], ['(original_type);', 2.598833643460815e-06], ['(build_nonstandard_integer_type', 2.598833643460815e-06], ['ecount);', 2.598833643460815e-06], ['("externally_visible",', 2.598833643460815e-06], ['("externally_visible"),', 2.598833643460815e-06], ['("inline",', 2.598833643460815e-06], ['("inline"),', 2.598833643460815e-06], ['*dump_file,', 2.598833643460815e-06], ['*f)', 2.598833643460815e-06], ['BRIG-specific', 2.598833643460815e-06], ['f->m_name.c_str', 2.598833643460815e-06], ['f->m_func_decl,', 2.598833643460815e-06], ['f->m_current_bind_expr,', 2.598833643460815e-06], ['Records', 2.598833643460815e-06], ['BRIG_REG', 2.598833643460815e-06], ['brig_to_generic::add_reg_used_as_type', 2.598833643460815e-06], ['&brig_reg,', 2.598833643460815e-06], ['m_fn_regs_use_index[m_cf->m_name][gccbrig_hsa_reg_id', 2.598833643460815e-06], ['(brig_reg)];', 2.598833643460815e-06], ['(info.m_type_refs_lookup.count', 2.598833643460815e-06], ['info.m_type_refs[info.m_type_refs_lookup[type]].second++;', 2.598833643460815e-06], ['info.m_type_refs.push_back', 2.598833643460815e-06], ['info.m_type_refs_lookup[type]', 2.598833643460815e-06], ['info.m_type_refs.size', 2.598833643460815e-06], ['decl.cc', 2.598833643460815e-06], ['"dmd/nspace.h"', 2.598833643460815e-06], ['(decl->isFuncDeclaration', 2.598833643460815e-06], ['mangleExact', 2.598833643460815e-06], ['((FuncDeclaration', 2.598833643460815e-06], ['*)decl);', 2.598833643460815e-06], ['SUFFIX,', 2.598833643460815e-06], ['*suffix)', 2.598833643460815e-06], ['*prefix', 2.598833643460815e-06], ['(prefix)', 2.598833643460815e-06], ['(suffix))', 2.598833643460815e-06], ['(buflen);', 2.598833643460815e-06], ['"_D%s%u%s%s",', 2.598833643460815e-06], ['namelen,', 2.598833643460815e-06], ['suffix);', 2.598833643460815e-06], ['"%s.%s",', 2.598833643460815e-06], ['gcc_attribute_p', 2.598833643460815e-06], ['()->md;', 2.598833643460815e-06], ['md->packages', 2.598833643460815e-06], ['md->packages->dim', 2.598833643460815e-06], ['"attribute"))', 2.598833643460815e-06], ['appened', 2.598833643460815e-06], ['global_declarations', 2.598833643460815e-06], ['d_pushdecl().', 2.598833643460815e-06], ['debug.', 2.598833643460815e-06], ['telling', 2.598833643460815e-06], ['IMPORTED_DECL', 2.598833643460815e-06], ['renamed', 2.598833643460815e-06], ['(d->isstatic)', 2.598833643460815e-06], ['import,', 2.598833643460815e-06], ['d->names.dim;', 2.598833643460815e-06], ['*aliasdecl', 2.598833643460815e-06], ['d->aliasdecls[i];', 2.598833643460815e-06], ['(aliasdecl);', 2.598833643460815e-06], ['*alias', 2.598833643460815e-06], ['d->aliases[i];', 2.598833643460815e-06], ['(alias', 2.598833643460815e-06], ['(alias->toChars', 2.598833643460815e-06], ['(d->mod);', 2.598833643460815e-06], ['(d->aliasId', 2.598833643460815e-06], ['(d->aliasId->toChars', 2.598833643460815e-06], ['d->objects->dim;', 2.598833643460815e-06], ['*o', 2.598833643460815e-06], ['(*d->objects)[i];', 2.598833643460815e-06], ['((o->dyncast', 2.598833643460815e-06], ['DYNCAST_EXPRESSION)', 2.598833643460815e-06], ['((Expression', 2.598833643460815e-06], ['o)->op', 2.598833643460815e-06], ['TOKdsymbol)', 2.598833643460815e-06], ['((DsymbolExp', 2.598833643460815e-06], ['o)->s->isDeclaration', 2.598833643460815e-06], ['(AttribDeclaration', 2.598833643460815e-06], ['*ds', 2.598833643460815e-06], ['d->include', 2.598833643460815e-06], ['(!ds)', 2.598833643460815e-06], ['ds->dim;', 2.598833643460815e-06], ['(*ds)[i];', 2.598833643460815e-06], ['Pragmas', 2.598833643460815e-06], ['vendor', 2.598833643460815e-06], ['(PragmaDeclaration', 2.598833643460815e-06], ['(!global.params.ignoreUnsupportedPragmas)', 2.598833643460815e-06], ['("lib")', 2.598833643460815e-06], ['("startaddress"))', 2.598833643460815e-06], ['OPT_Wunknown_pragmas,', 2.598833643460815e-06], ['"pragma(%s)', 2.598833643460815e-06], ['((AttribDeclaration', 2.598833643460815e-06], ['(Nspace', 2.598833643460815e-06], ['Templates', 2.598833643460815e-06], ["D's", 2.598833643460815e-06], ['programming.', 2.598833643460815e-06], ['voldemort', 2.598833643460815e-06], ['!fd->isAuto', 2.598833643460815e-06], ['fd->type->nextOf', 2.598833643460815e-06], ['ti->tempdecl', 2.598833643460815e-06], ['ti->accept', 2.598833643460815e-06], ['(!d->needsCodegen', 2.598833643460815e-06], ['mixin', 2.598833643460815e-06], ['(TemplateMixin', 2.598833643460815e-06], ['structs/unions', 2.598833643460815e-06], ['others,', 2.598833643460815e-06], ['ctors', 2.598833643460815e-06], ['xopEquals,', 2.598833643460815e-06], ['xopCmp', 2.598833643460815e-06], ['xopHash.', 2.598833643460815e-06], ['(d->xeq', 2.598833643460815e-06], ['d->xeq', 2.598833643460815e-06], ['d->xerreq)', 2.598833643460815e-06], ['d->xeq->accept', 2.598833643460815e-06], ['(d->xcmp', 2.598833643460815e-06], ['d->xcmp', 2.598833643460815e-06], ['d->xerrcmp)', 2.598833643460815e-06], ['d->xcmp->accept', 2.598833643460815e-06], ['(d->xhash)', 2.598833643460815e-06], ['d->xhash->accept', 2.598833643460815e-06], ['vtbl', 2.598833643460815e-06], ['finish_vtable', 2.598833643460815e-06], ['(!fd->fbody', 2.598833643460815e-06], ['d->isAbstract', 2.598833643460815e-06], ['hiding', 2.598833643460815e-06], ['(!d->isFuncHidden', 2.598833643460815e-06], ['fd->isFuture', 2.598833643460815e-06], ['view', 2.598833643460815e-06], ['overlaps', 2.598833643460815e-06], ['vtbl[],', 2.598833643460815e-06], ['*fd2', 2.598833643460815e-06], ['d->vtbl[j]->isFuncDeclaration', 2.598833643460815e-06], ['(!fd2->ident->equals', 2.598833643460815e-06], ['(fd->ident))', 2.598833643460815e-06], ['@__future,', 2.598833643460815e-06], ['(fd2->isFuture', 2.598833643460815e-06], ['(fd->leastAsSpecialized', 2.598833643460815e-06], ['(fd2)', 2.598833643460815e-06], ['fd2->leastAsSpecialized', 2.598833643460815e-06], ['(fd))', 2.598833643460815e-06], ['%<alias', 2.598833643460815e-06], ['%s.%s;%>', 2.598833643460815e-06], ['"overload', 2.598833643460815e-06], ['set.",', 2.598833643460815e-06], ['fd->parent->toChars', 2.598833643460815e-06], ['!has_errors;', 2.598833643460815e-06], ['(!this->finish_vtable', 2.598833643460815e-06], ['d->vtblsym', 2.598833643460815e-06], ['(d->vtblOffset', 2.598833643460815e-06], ['(d->csym));', 2.598833643460815e-06], ['(fd->fbody', 2.598833643460815e-06], ['!d->isAbstract()))', 2.598833643460815e-06], ['(fd)));', 2.598833643460815e-06], ['(d->vtblsym)', 2.598833643460815e-06], ['(d->vtblsym),', 2.598833643460815e-06], ['(InterfaceDeclaration', 2.598833643460815e-06], ['d->type->vtinfo->accept', 2.598833643460815e-06], ['(d->errors', 2.598833643460815e-06], ['d->type->ty', 2.598833643460815e-06], ['(tc->sym->members', 2.598833643460815e-06], ['!d->type->isZeroInit', 2.598833643460815e-06], ['(tc->sym->defaultval,', 2.598833643460815e-06], ['(d->aliassym)', 2.598833643460815e-06], ['()->accept', 2.598833643460815e-06], ['(!d->canTakeAddressOf', 2.598833643460815e-06], ['instantiations.', 2.598833643460815e-06], ['(!d->_init', 2.598833643460815e-06], ['d->_init->isVoidInitializer', 2.598833643460815e-06], ['(d->_init);', 2.598833643460815e-06], ['initially', 2.598833643460815e-06], ['enumerals', 2.598833643460815e-06], ['serves', 2.598833643460815e-06], ['(!d->type->isscalar', 2.598833643460815e-06], ['(d->isDataseg', 2.598833643460815e-06], ['!(d->storage_class', 2.598833643460815e-06], ['STCextern))', 2.598833643460815e-06], ['(d->type->size', 2.598833643460815e-06], ['(Type::tsize_t));', 2.598833643460815e-06], ['(!valid_constant_size_p', 2.598833643460815e-06], ['(size))', 2.598833643460815e-06], ['"size', 2.598833643460815e-06], ['large");', 2.598833643460815e-06], ['(d->_init', 2.598833643460815e-06], ['!d->_init->isVoidInitializer', 2.598833643460815e-06], ['(d->_init,', 2.598833643460815e-06], ['d->type);', 2.598833643460815e-06], ['d->type)->sym;', 2.598833643460815e-06], ['d->type->defaultInitLiteral', 2.598833643460815e-06], ['d->type->toBasetype', 2.598833643460815e-06], ['(!d->isDataseg', 2.598833643460815e-06], ['!d->isMember', 2.598833643460815e-06], ['isVarDeclaration()', 2.598833643460815e-06], ['DeclarationExp', 2.598833643460815e-06], ['(d->_init)', 2.598833643460815e-06], ['(!d->_init->isVoidInitializer', 2.598833643460815e-06], ['*vinit', 2.598833643460815e-06], ['d->_init->isExpInitializer', 2.598833643460815e-06], ['(vinit);', 2.598833643460815e-06], ['(ie);', 2.598833643460815e-06], ['needing', 2.598833643460815e-06], ['(d->needsScopeDtor', 2.598833643460815e-06], ['cleanup.', 2.598833643460815e-06], ['(d->edtor);', 2.598833643460815e-06], ['(d->size', 2.598833643460815e-06], ['(d->loc)', 2.598833643460815e-06], ['Zero-length', 2.598833643460815e-06], ['(OPT_Wuninitialized,', 2.598833643460815e-06], ['"uninitialized', 2.598833643460815e-06], ['\'%s\'",', 2.598833643460815e-06], ['"(no', 2.598833643460815e-06], ['name)");', 2.598833643460815e-06], ['(speculative_type_p', 2.598833643460815e-06], ['(d->tinfo))', 2.598833643460815e-06], ['(!global.params.useUnitTests', 2.598833643460815e-06], ['d->isUnitTestDeclaration', 2.598833643460815e-06], ['(tf->next', 2.598833643460815e-06], ['tf->next->ty', 2.598833643460815e-06], ['(d->semantic3Errors)', 2.598833643460815e-06], ['(d->isNested', 2.598833643460815e-06], ['*fdp', 2.598833643460815e-06], ['fdp->isNested', 2.598833643460815e-06], ['fdp', 2.598833643460815e-06], ['fdp->toParent2', 2.598833643460815e-06], ['compile,', 2.598833643460815e-06], ['(fdp->semantic3Errors)', 2.598833643460815e-06], ['PASSsemantic3)', 2.598833643460815e-06], ['d->functionSemantic3', 2.598833643460815e-06], ['(!d->fbody)', 2.598833643460815e-06], ['("function', 2.598833643460815e-06], ['d->toPrettyChars', 2.598833643460815e-06], ['PASSsemantic3done);', 2.598833643460815e-06], ['arguments...', 2.598833643460815e-06], ['parameter:', 2.598833643460815e-06], ['vthis,', 2.598833643460815e-06], ['(d->vthis)', 2.598833643460815e-06], ['(d->vthis->type', 2.598833643460815e-06], ['(frame_type);', 2.598833643460815e-06], ['parm_decl;', 2.598833643460815e-06], ['(d->v_arguments)', 2.598833643460815e-06], ['(d->v_arguments);', 2.598833643460815e-06], ['n_parameters', 2.598833643460815e-06], ['d->parameters', 2.598833643460815e-06], ['d->parameters->dim', 2.598833643460815e-06], ['n_parameters;', 2.598833643460815e-06], ['*param', 2.598833643460815e-06], ['(*d->parameters)[i];', 2.598833643460815e-06], ['param_list;', 2.598833643460815e-06], ['indirectly)', 2.598833643460815e-06], ['expession', 2.598833643460815e-06], ['(d->isThis', 2.598833643460815e-06], ['d->isThis', 2.598833643460815e-06], ['*pd', 2.598833643460815e-06], ['vthis_field', 2.598833643460815e-06], ['(this_tree),', 2.598833643460815e-06], ['vthis_field);', 2.598833643460815e-06], ['pd->isAggregateDeclaration', 2.598833643460815e-06], ['this_tree;', 2.598833643460815e-06], ['cfun->static_chain.', 2.598833643460815e-06], ['(d->vresult)', 2.598833643460815e-06], ['(d->vresult);', 2.598833643460815e-06], ['Implemented', 2.598833643460815e-06], ['RETURN_EXPRs', 2.598833643460815e-06], ['replacing', 2.598833643460815e-06], ['occurrences', 2.598833643460815e-06], ['(DECL_RESULT', 2.598833643460815e-06], ['(restype))', 2.598833643460815e-06], ['(restype,', 2.598833643460815e-06], ['(resdecl));', 2.598833643460815e-06], ['(d->nrvo_var)', 2.598833643460815e-06], ['(d->nrvo_var);', 2.598833643460815e-06], ['SET_DECL_LANG_NRVO', 2.598833643460815e-06], ['_argptr', 2.598833643460815e-06], ['(BUILT_IN_VA_START),', 2.598833643460815e-06], ['(BUILT_IN_VA_END),', 2.598833643460815e-06], ['cleanup));', 2.598833643460815e-06], ['DECL_SOURCE_FILE', 2.598833643460815e-06], ['(d->loc.filename)', 2.598833643460815e-06], ['("<no_file>",', 2.598833643460815e-06], ['immediately:', 2.598833643460815e-06], ['decl->isSymbolDeclaration', 2.598833643460815e-06], ['(sd)', 2.598833643460815e-06], ['(decl->isTypeInfoDeclaration', 2.598833643460815e-06], ['((TypeInfoDeclaration', 2.598833643460815e-06], ['*fad', 2.598833643460815e-06], ['decl->isFuncAliasDeclaration', 2.598833643460815e-06], ['(fad)', 2.598833643460815e-06], ['(fad->funcalias);', 2.598833643460815e-06], ['(decl->isField', 2.598833643460815e-06], ['decl->toParent', 2.598833643460815e-06], ['()->isAggregateDeclaration', 2.598833643460815e-06], ['Finishing', 2.598833643460815e-06], ['FIELD_DECL.', 2.598833643460815e-06], ['decl->isFuncDeclaration', 2.598833643460815e-06], ['about.', 2.598833643460815e-06], ['vd->isParameter', 2.598833643460815e-06], ['!vd->canTakeAddressOf', 2.598833643460815e-06], ['VAR_DECL;', 2.598833643460815e-06], ['(vd->alignment', 2.598833643460815e-06], ['vd->alignment', 2.598833643460815e-06], ['(vd->storage_class', 2.598833643460815e-06], ['STCextern)', 2.598833643460815e-06], ['(decl->isCodeseg', 2.598833643460815e-06], ['mangled_name;', 2.598833643460815e-06], ['(decl->mangleOverride)', 2.598833643460815e-06], ['(decl->mangleOverride);', 2.598833643460815e-06], ['targetm.mangle_decl_assembler_name', 2.598833643460815e-06], ['mangle.', 2.598833643460815e-06], ['(!DECL_EXTERNAL', 2.598833643460815e-06], ['(mangled_name))', 2.598833643460815e-06], ['*other', 2.598833643460815e-06], ['(mangled_name);', 2.598833643460815e-06], ['Non-templated', 2.598833643460815e-06], ['(!decl->isInstantiated', 2.598833643460815e-06], ['ScopeDsymbol::multiplyDefined', 2.598833643460815e-06], ['other);', 2.598833643460815e-06], ['(other);', 2.598833643460815e-06], ['invisible', 2.598833643460815e-06], ['(argtype,', 2.598833643460815e-06], ['(!DECL_BY_REFERENCE', 2.598833643460815e-06], ['argtype;', 2.598833643460815e-06], ['Manifest', 2.598833643460815e-06], ['(fd->isThis', 2.598833643460815e-06], ['fd->isMember2', 2.598833643460815e-06], ['(!ad->isStructDeclaration', 2.598833643460815e-06], ['(handle);', 2.598833643460815e-06], ['(handle,', 2.598833643460815e-06], ['vindex', 2.598833643460815e-06], ['fd->vtblIndex', 2.598833643460815e-06], ['DECL_VINDEX', 2.598833643460815e-06], ['(fd->vtblIndex);', 2.598833643460815e-06], ['fd->isCMain', 2.598833643460815e-06], ["'D", 2.598833643460815e-06], ['(fd->toPrettyChars', 2.598833643460815e-06], ["'void", 2.598833643460815e-06], ['(d_int_type,', 2.598833643460815e-06], ['(newfntype', 2.598833643460815e-06], ['newfntype;', 2.598833643460815e-06], ['(newfntype);', 2.598833643460815e-06], ['Miscellaneous', 2.598833643460815e-06], ['(fd->isMember2', 2.598833643460815e-06], ['grokmethod', 2.598833643460815e-06], ['cp/decl.c.', 2.598833643460815e-06], ["'naked'.", 2.598833643460815e-06], ['(fd->naked)', 2.598833643460815e-06], ['"naked");', 2.598833643460815e-06], ['DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT', 2.598833643460815e-06], ['(fd->isArrayOp)', 2.598833643460815e-06], ['contracts.', 2.598833643460815e-06], ['("ensure")', 2.598833643460815e-06], ['("require"))', 2.598833643460815e-06], ['DECL_FINAL_P', 2.598833643460815e-06], ['INTRINSIC_NONE;', 2.598833643460815e-06], ['unnest', 2.598833643460815e-06], ['cgraph,', 2.598833643460815e-06], ['(node->origin)', 2.598833643460815e-06], ['node->unnest', 2.598833643460815e-06], ['artificial.', 2.598833643460815e-06], ['STCtemp)', 2.598833643460815e-06], ['(TYPE_SHARED', 2.598833643460815e-06], ['volatile.', 2.598833643460815e-06], ['STCvolatile)', 2.598833643460815e-06], ['Protection', 2.598833643460815e-06], ['debugger.', 2.598833643460815e-06], ['PROTprivate)', 2.598833643460815e-06], ['TREE_PRIVATE', 2.598833643460815e-06], ['PROTprotected)', 2.598833643460815e-06], ['TREE_PROTECTED', 2.598833643460815e-06], ['Likewise,', 2.598833643460815e-06], ['STCdeprecated)', 2.598833643460815e-06], ['TREE_DEPRECATED', 2.598833643460815e-06], ['TARGET_DLLIMPORT_DECL_ATTRIBUTES', 2.598833643460815e-06], ['(decl->isImportedSymbol', 2.598833643460815e-06], ['"dllimport");', 2.598833643460815e-06], ['DECL_DLLIMPORT_P', 2.598833643460815e-06], ['(decl->isExport', 2.598833643460815e-06], ['"dllexport");', 2.598833643460815e-06], ['(decl->isDataseg', 2.598833643460815e-06], ['decl->isCodeseg', 2.598833643460815e-06], ['decl->isThreadlocal', 2.598833643460815e-06], ['!fd->isNested', 2.598833643460815e-06], ['(decl->isInstantiated', 2.598833643460815e-06], ['storage.', 2.598833643460815e-06], ['(decl->isThreadlocal', 2.598833643460815e-06], ['!DECL_ARTIFICIAL', 2.598833643460815e-06], ['(global.params.vtls)', 2.598833643460815e-06], ['"`%s`', 2.598833643460815e-06], ['local",', 2.598833643460815e-06], ['decl->toChars', 2.598833643460815e-06], ['meaning.', 2.598833643460815e-06], ['(decl->userAttribDecl)', 2.598833643460815e-06], ['*attrs', 2.598833643460815e-06], ['decl->userAttribDecl->getAttributes', 2.598833643460815e-06], ['(attrs),', 2.598833643460815e-06], ['(decl->csym),', 2.598833643460815e-06], ['%%', 2.598833643460815e-06], ['intelligent', 2.598833643460815e-06], ['VAR_DECL.', 2.598833643460815e-06], ['declared,', 2.598833643460815e-06], ['(IDENTIFIER_DECL_TREE', 2.598833643460815e-06], ['(ident))', 2.598833643460815e-06], ['(!var->isDataseg', 2.598833643460815e-06], ['!var->isMember', 2.598833643460815e-06], ['cfun->language->function;', 2.598833643460815e-06], ['(!TREE_STATIC', 2.598833643460815e-06], ['fd->vresult', 2.598833643460815e-06], ['fd->v_argptr)', 2.598833643460815e-06], ['Fixes', 2.598833643460815e-06], ['VAR_DECLs,', 2.598833643460815e-06], ['PARM_DECLs,', 2.598833643460815e-06], ['decls,', 2.598833643460815e-06], ['get_symbol_decl().', 2.598833643460815e-06], ['(DECL_LANG_NRVO', 2.598833643460815e-06], ['DECL_LANG_NRVO', 2.598833643460815e-06], ['vd->toParent2', 2.598833643460815e-06], ['parent);', 2.598833643460815e-06], ['(frame_ref),', 2.598833643460815e-06], ['undoes', 2.598833643460815e-06], ['getRightThis', 2.598833643460815e-06], ['(vd->parent', 2.598833643460815e-06], ['vd->isThisDeclaration', 2.598833643460815e-06], ['(!fd->isMember2', 2.598833643460815e-06], ['this->this', 2.598833643460815e-06], ['vfield);', 2.598833643460815e-06], ['(ff))', 2.598833643460815e-06], ['(ff)),', 2.598833643460815e-06], ['(fd->vthis->type),', 2.598833643460815e-06], ['outer->toParent2', 2.598833643460815e-06], ['Auto', 2.598833643460815e-06], ['sending', 2.598833643460815e-06], ['(DECL_THREAD_LOCAL_P', 2.598833643460815e-06], ['(flag_checking', 2.598833643460815e-06], ['Initializer', 2.598833643460815e-06], ['bigger', 2.598833643460815e-06], ['dtsize', 2.598833643460815e-06], ['(decl)));', 2.598833643460815e-06], ['(tsize', 2.598833643460815e-06], ['dtsize)', 2.598833643460815e-06], ['internal_error', 2.598833643460815e-06], ['("Mismatch', 2.598833643460815e-06], ['(%wd)', 2.598833643460815e-06], ['"its', 2.598833643460815e-06], ['(%wd).",', 2.598833643460815e-06], ['tsize,', 2.598833643460815e-06], ['dtsize);', 2.598833643460815e-06], ['.common,', 2.598833643460815e-06], ['(DECL_COMDAT', 2.598833643460815e-06], ['initializer_zerop', 2.598833643460815e-06], ['Thunk', 2.598833643460815e-06], ['g++.', 2.598833643460815e-06], ['thunk_labelno;', 2.598833643460815e-06], ['buf[256];', 2.598833643460815e-06], ['aliased.', 2.598833643460815e-06], ['targetm.asm_out.generate_internal_label', 2.598833643460815e-06], ['"LTHUNK",', 2.598833643460815e-06], ['thunk_labelno);', 2.598833643460815e-06], ['thunk_labelno++;', 2.598833643460815e-06], ['(alias);', 2.598833643460815e-06], ['(alias));', 2.598833643460815e-06], ['*aliasn;', 2.598833643460815e-06], ['aliasn', 2.598833643460815e-06], ['cgraph_node::create_same_body_alias', 2.598833643460815e-06], ['(aliasn', 2.598833643460815e-06], ['outputted.', 2.598833643460815e-06], ['fixed_offset', 2.598833643460815e-06], ['-THUNK_LANG_OFFSET', 2.598833643460815e-06], ['this_adjusting', 2.598833643460815e-06], ['(flag_syntax_only)', 2.598833643460815e-06], ['targetm_common.have_named_sections)', 2.598833643460815e-06], ['*symbol', 2.598833643460815e-06], ['(symbol', 2.598833643460815e-06], ['symbol->alias)', 2.598833643460815e-06], ['(symbol->analyzed)', 2.598833643460815e-06], ['(function)->ultimate_alias_target', 2.598833643460815e-06], ['()->decl;', 2.598833643460815e-06], ['(function)->alias_target;', 2.598833643460815e-06], ['DECL_SECTION_NAME', 2.598833643460815e-06], ['(thunk)->implicit_section', 2.598833643460815e-06], ['(fn)->implicit_section;', 2.598833643460815e-06], ['(a))', 2.598833643460815e-06], ['(a);', 2.598833643460815e-06], ['SET_DECL_RTL', 2.598833643460815e-06], ['*funcn,', 2.598833643460815e-06], ['*thunk_node;', 2.598833643460815e-06], ['funcn', 2.598833643460815e-06], ['thunk_node', 2.598833643460815e-06], ['funcn->create_thunk', 2.598833643460815e-06], ['this_adjusting,', 2.598833643460815e-06], ['fixed_offset,', 2.598833643460815e-06], ['alias);', 2.598833643460815e-06], ['(DECL_ONE_ONLY', 2.598833643460815e-06], ['thunk_node->add_to_same_comdat_group', 2.598833643460815e-06], ['assemble_mi_thunk', 2.598833643460815e-06], ['boundaries', 2.598833643460815e-06], ['gimple.', 2.598833643460815e-06], ['cgraph::expand_thunk', 2.598833643460815e-06], ['current_function_decl,', 2.598833643460815e-06], ['(!stdarg_p', 2.598833643460815e-06], ['(thunk)))', 2.598833643460815e-06], ['thunk_node->create_edge', 2.598833643460815e-06], ['(funcn,', 2.598833643460815e-06], ['thunk_node->count);', 2.598833643460815e-06], ['thunk_node->expand_thunk', 2.598833643460815e-06], ['Adjustor', 2.598833643460815e-06], ['make_thunk', 2.598833643460815e-06], ['(!DECL_ARGUMENTS', 2.598833643460815e-06], ['!DECL_RESULT', 2.598833643460815e-06], ['(decl->fbody)', 2.598833643460815e-06], ['compiled,', 2.598833643460815e-06], ['finish_thunk.', 2.598833643460815e-06], ['void_list_node)', 2.598833643460815e-06], ['(params,', 2.598833643460815e-06], ['cgraph_node::expand_thunk.', 2.598833643460815e-06], ['failed.', 2.598833643460815e-06], ['question.', 2.598833643460815e-06], ['(THUNK_LANG_OFFSET', 2.598833643460815e-06], ['THUNK_LANG_OFFSET', 2.598833643460815e-06], ['targetting.', 2.598833643460815e-06], ['target_name', 2.598833643460815e-06], ['identlen', 2.598833643460815e-06], ['IDENTIFIER_LENGTH', 2.598833643460815e-06], ['(target_name)', 2.598833643460815e-06], ['14;', 2.598833643460815e-06], ['identlen);', 2.598833643460815e-06], ['ident),', 2.598833643460815e-06], ['identlen,', 2.598833643460815e-06], ['"_DT%u%s",', 2.598833643460815e-06], ['(target_name));', 2.598833643460815e-06], ['(thunk));', 2.598833643460815e-06], ['current_function_decl.', 2.598833643460815e-06], ['intend', 2.598833643460815e-06], ['fd->isInstantiated', 2.598833643460815e-06], ['ti->needsCodegen', 2.598833643460815e-06], ['fd->parent)', 2.598833643460815e-06], ['(OPT_Wtemplates,', 2.598833643460815e-06], ['instantiated",', 2.598833643460815e-06], ['ti->kind', 2.598833643460815e-06], ['ti->toPrettyChars', 2.598833643460815e-06], ['(false));', 2.598833643460815e-06], ['fd->getModule', 2.598833643460815e-06], ['md->isRoot', 2.598833643460815e-06], ['push_function_context', 2.598833643460815e-06], ['allocate_struct_function', 2.598833643460815e-06], ['(fd->endloc.filename)', 2.598833643460815e-06], ['(fd->endloc);', 2.598833643460815e-06], ['ggc_cleared_alloc<language_function>', 2.598833643460815e-06], ["'null'", 2.598833643460815e-06], ['fd->parent;', 2.598833643460815e-06], ['p->parent)', 2.598833643460815e-06], ['cfun->language->module', 2.598833643460815e-06], ['p->isModule', 2.598833643460815e-06], ['(cfun->language->module)', 2.598833643460815e-06], ['(cfun->language->module', 2.598833643460815e-06], ['Begin', 2.598833643460815e-06], ['(level_function);', 2.598833643460815e-06], ['Restores', 2.598833643460815e-06], ['old_context)', 2.598833643460815e-06], ['(d_function_chain->stmt_list));', 2.598833643460815e-06], ['somewhere,', 2.598833643460815e-06], ['stmtlist', 2.598833643460815e-06], ['&stmtlist);', 2.598833643460815e-06], ['stmtlist;', 2.598833643460815e-06], ['(!STATEMENT_LIST_HEAD', 2.598833643460815e-06], ['(!errorcount', 2.598833643460815e-06], ['!global.errors)', 2.598833643460815e-06], ['ggc_free', 2.598833643460815e-06], ['(cfun->language);', 2.598833643460815e-06], ['set_cfun', 2.598833643460815e-06], ['pop_function_context', 2.598833643460815e-06], ['DECL,', 2.598833643460815e-06], ['mark_needed', 2.598833643460815e-06], ['varpool_node', 2.598833643460815e-06], ['varpool_node::get_create', 2.598833643460815e-06], ["BC's", 2.598833643460815e-06], ['vtbl[]', 2.598833643460815e-06], ['"~0u"', 2.598833643460815e-06], ['*bc)', 2.598833643460815e-06], ['cd->vtblInterfaces->dim', 2.598833643460815e-06], ['b->sym->vtbl.dim', 2.598833643460815e-06], ['vtbl[]s.', 2.598833643460815e-06], ['cd2;', 2.598833643460815e-06], ['cd2->vtblInterfaces->dim;', 2.598833643460815e-06], ['(*cd2->vtblInterfaces)[k];', 2.598833643460815e-06], ['(bs->fillVtbl', 2.598833643460815e-06], ['(bc', 2.598833643460815e-06], ['bs->sym->vtbl.dim', 2.598833643460815e-06], ['~0u;', 2.598833643460815e-06], ['frequently', 2.598833643460815e-06], ['rtti', 2.598833643460815e-06], ['comparisons),', 2.598833643460815e-06], ['accessible.', 2.598833643460815e-06], ['"__vtbl",', 2.598833643460815e-06], ['(Type::tvoidptr->sarrayOf', 2.598833643460815e-06], ['(decl->vtbl.dim));', 2.598833643460815e-06], ['decl->vtblsym', 2.598833643460815e-06], ['(decl->vtblsym,', 2.598833643460815e-06], ['TARGET_VTABLE_ENTRY_ALIGN);', 2.598833643460815e-06], ['build_class_instance.', 2.598833643460815e-06], ['unions.', 2.598833643460815e-06], ['(vfield', 2.598833643460815e-06], ['vfield;', 2.598833643460815e-06], ['offset))', 2.598833643460815e-06], ['build_new_class_expr.', 2.598833643460815e-06], ['exp->originalClass', 2.598833643460815e-06], ['(exp->value->stype));', 2.598833643460815e-06], ['vptr);', 2.598833643460815e-06], ['bottom.', 2.598833643460815e-06], ['re-order', 2.598833643460815e-06], ['(cd2', 2.598833643460815e-06], ['(cd2,', 2.598833643460815e-06], ['(csymoffset', 2.598833643460815e-06], ['(cd2));', 2.598833643460815e-06], ['(csymoffset));', 2.598833643460815e-06], ['(bc->offset));', 2.598833643460815e-06], ['csym);', 2.598833643460815e-06], ['owned', 2.598833643460815e-06], ['bcd->fields.dim;', 2.598833643460815e-06], ['*vfield', 2.598833643460815e-06], ['bcd->fields[i];', 2.598833643460815e-06], ['exp->findFieldIndexByName', 2.598833643460815e-06], ['(vfield);', 2.598833643460815e-06], ['(*exp->value->elements)[index];', 2.598833643460815e-06], ['(!value)', 2.598833643460815e-06], ['(bcd->fields[i]);', 2.598833643460815e-06], ['snippet.', 2.598833643460815e-06], ['C(1,', 2.598833643460815e-06], ['`C(1,', 2.598833643460815e-06], ["3)'", 2.598833643460815e-06], ['detail.', 2.598833643460815e-06], ['start-up', 2.598833643460815e-06], ['whichever', 2.598833643460815e-06], ["`gc_init()'.", 2.598833643460815e-06], ['infact', 2.598833643460815e-06], ['eventually.', 2.598833643460815e-06], ['(expr->value->stype);', 2.598833643460815e-06], ['expr->value->sym', 2.598833643460815e-06], ['"C");', 2.598833643460815e-06], ['(expr->value->sym);', 2.598833643460815e-06], ['(expr->value->sym,', 2.598833643460815e-06], ['struct/class', 2.598833643460815e-06], ["'new", 2.598833643460815e-06], ['(!sd)', 2.598833643460815e-06], ['Honor', 2.598833643460815e-06], ['user.', 2.598833643460815e-06], ['(decl->sinit,', 2.598833643460815e-06], ['*ne', 2.598833643460815e-06], ['NewExp::create', 2.598833643460815e-06], ['(cd->loc,', 2.598833643460815e-06], ['ne->type', 2.598833643460815e-06], ['cd->type;', 2.598833643460815e-06], ['ne->ctfeInterpret', 2.598833643460815e-06], ['TOKclassreference);', 2.598833643460815e-06], ['((ClassReferenceExp', 2.598833643460815e-06], ['(!sd->fill', 2.598833643460815e-06], ['sle->elements,', 2.598833643460815e-06], ['true))', 2.598833643460815e-06], ['sle->type', 2.598833643460815e-06], ['TypeInfo_Enum,', 2.598833643460815e-06], ['*ident_save', 2.598833643460815e-06], ['decl->ident;', 2.598833643460815e-06], ['(!decl->ident)', 2.598833643460815e-06], ['("__enum");', 2.598833643460815e-06], ['ident_save;', 2.598833643460815e-06], ['PREFIX.', 2.598833643460815e-06], ['*prefix)', 2.598833643460815e-06], ['"___s";', 2.598833643460815e-06], ['*label;', 2.598833643460815e-06], ['ASM_FORMAT_PRIVATE_NAME', 2.598833643460815e-06], ['(label,', 2.598833643460815e-06], ['DECL_UID', 2.598833643460815e-06], ['(label));', 2.598833643460815e-06], ['hashed', 2.598833643460815e-06], ['duplicates.', 2.598833643460815e-06], ['dsym->parent->isTemplateInstance', 2.598833643460815e-06], ['dsym->parent)->toChars', 2.598833643460815e-06], ['dsym->ident->toChars', 2.598833643460815e-06], ['(dsym->loc),', 2.598833643460815e-06], ['(dsym)));', 2.598833643460815e-06], ['TYPE_DECLs', 2.598833643460815e-06], ['TYPE_STUB_DECL.', 2.598833643460815e-06], ['SCOPE_FILE_SCOPE_P', 2.598833643460815e-06], ['ARTIFICIAL', 2.598833643460815e-06], ['IGNORED.', 2.598833643460815e-06], ['ignored)', 2.598833643460815e-06], ['artificial;', 2.598833643460815e-06], ['ignored;', 2.598833643460815e-06], ['placed.', 2.598833643460815e-06], ['comdat', 2.598833643460815e-06], ['group,', 2.598833643460815e-06], ['(DECL_COMDAT_GROUP', 2.598833643460815e-06], ['DECL_COMDAT_GROUP', 2.598833643460815e-06], ['"initialized', 2.598833643460815e-06], ['common"', 2.598833643460815e-06], ['(flag_weak)', 2.598833643460815e-06], ['statically;', 2.598833643460815e-06], ['part)', 2.598833643460815e-06], ['waste', 2.598833643460815e-06], ['Fallback,', 2.598833643460815e-06], ['(TREE_PUBLIC', 2.598833643460815e-06], ['"linkonce"', 2.598833643460815e-06], ['Weak', 2.598833643460815e-06], ['Necessary', 2.598833643460815e-06], ['fallback', 2.598833643460815e-06], ['(!flag_weak)', 2.598833643460815e-06], ['d-attribs.c', 2.598833643460815e-06], ['exclusions.', 2.598833643460815e-06], ['ATTR_EXCL(name,', 2.598833643460815e-06], ['exclusive', 2.598833643460815e-06], ['attr_noreturn_exclusions[]', 2.598833643460815e-06], ['attr_returns_twice_exclusions[]', 2.598833643460815e-06], ['attr_const_pure_exclusions[]', 2.598833643460815e-06], ['attr_inline_exclusions[]', 2.598833643460815e-06], ['attr_noinline_exclusions[]', 2.598833643460815e-06], ['ATTR_SPEC(name,', 2.598833643460815e-06], ['exclude)', 2.598833643460815e-06], ['machine-independent', 2.598833643460815e-06], ['(marking', 2.598833643460815e-06], ['built-ins)', 2.598833643460815e-06], ['d_langhook_common_attribute_table[]', 2.598833643460815e-06], ['handle_noreturn_attribute,', 2.598833643460815e-06], ['attr_noreturn_exclusions),', 2.598833643460815e-06], ['("leaf",', 2.598833643460815e-06], ['handle_leaf_attribute,', 2.598833643460815e-06], ['handle_const_attribute,', 2.598833643460815e-06], ['handle_malloc_attribute,', 2.598833643460815e-06], ['handle_returns_twice_attribute,', 2.598833643460815e-06], ['attr_returns_twice_exclusions),', 2.598833643460815e-06], ['handle_pure_attribute,', 2.598833643460815e-06], ['("nonnull",', 2.598833643460815e-06], ['handle_nonnull_attribute,', 2.598833643460815e-06], ['("nothrow",', 2.598833643460815e-06], ['handle_nothrow_attribute,', 2.598833643460815e-06], ['("transaction_pure",', 2.598833643460815e-06], ['handle_transaction_pure_attribute,', 2.598833643460815e-06], ['("no', 2.598833643460815e-06], ['vops",', 2.598833643460815e-06], ['handle_novops_attribute,', 2.598833643460815e-06], ['handle_type_generic_attribute,', 2.598833643460815e-06], ['("fn', 2.598833643460815e-06], ['spec",', 2.598833643460815e-06], ['handle_fnspec_attribute,', 2.598833643460815e-06], ['UDAs.', 2.598833643460815e-06], ['d_langhook_attribute_table[]', 2.598833643460815e-06], ['d_handle_noinline_attribute,', 2.598833643460815e-06], ['attr_noinline_exclusions),', 2.598833643460815e-06], ['d_handle_forceinline_attribute,', 2.598833643460815e-06], ['attr_inline_exclusions),', 2.598833643460815e-06], ['("flatten",', 2.598833643460815e-06], ['d_handle_flatten_attribute,', 2.598833643460815e-06], ['d_handle_target_attribute,', 2.598833643460815e-06], ['d_handle_noclone_attribute,', 2.598833643460815e-06], ['("section",', 2.598833643460815e-06], ['d_handle_section_attribute,', 2.598833643460815e-06], ['("alias",', 2.598833643460815e-06], ['d_handle_alias_attribute,', 2.598833643460815e-06], ['("weak",', 2.598833643460815e-06], ['d_handle_weak_attribute,', 2.598833643460815e-06], ['(TYPE_ATTRIBUTES', 2.598833643460815e-06], ['build_type_attribute_variant', 2.598833643460815e-06], ['build_decl_attribute_variant', 2.598833643460815e-06], ['uda_attribute_p', 2.598833643460815e-06], ['language,', 2.598833643460815e-06], ['internal.', 2.598833643460815e-06], ['d_langhook_attribute_table;', 2.598833643460815e-06], ['targetm.attribute_table;', 2.598833643460815e-06], ['[attribute/uda]', 2.598833643460815e-06], ['Attributes', 2.598833643460815e-06], ['(UDA)', 2.598833643460815e-06], ['queried,', 2.598833643460815e-06], ['extracted,', 2.598833643460815e-06], ['manipulated', 2.598833643460815e-06], ['UDAs', 2.598833643460815e-06], ['EATTRS', 2.598833643460815e-06], ["`gcc.attribute.Attribute'.", 2.598833643460815e-06], ['(Expressions', 2.598833643460815e-06], ['*eattrs)', 2.598833643460815e-06], ['(!eattrs)', 2.598833643460815e-06], ['expandTuples', 2.598833643460815e-06], ['(eattrs);', 2.598833643460815e-06], ['eattrs->dim;', 2.598833643460815e-06], ['*attr', 2.598833643460815e-06], ['(*eattrs)[i];', 2.598833643460815e-06], ['attr->type->toDsymbol', 2.598833643460815e-06], ['(!sym)', 2.598833643460815e-06], ['Attribute', 2.598833643460815e-06], ['(Dsymbol*)', 2.598833643460815e-06], ['sym->getModule', 2.598833643460815e-06], ['(!(strcmp', 2.598833643460815e-06], ['(mod->toChars', 2.598833643460815e-06], ['"attribute")', 2.598833643460815e-06], ['mod->parent', 2.598833643460815e-06], ['(mod->parent->toChars', 2.598833643460815e-06], ['!mod->parent->parent))', 2.598833643460815e-06], ['folded.', 2.598833643460815e-06], ['TOKcall)', 2.598833643460815e-06], ['attr->ctfeInterpret', 2.598833643460815e-06], ['`Attribute("attrib",', 2.598833643460815e-06], ['"value",', 2.598833643460815e-06], ["...)'", 2.598833643460815e-06], ['TOKstructliteral);', 2.598833643460815e-06], ['*elems', 2.598833643460815e-06], ['((StructLiteralExp*)', 2.598833643460815e-06], ['attr)->elements;', 2.598833643460815e-06], ['(*elems)[0];', 2.598833643460815e-06], ['(e0->op', 2.598833643460815e-06], ['e0->toChars', 2.598833643460815e-06], ['(StringExp*)', 2.598833643460815e-06], ['e0;', 2.598833643460815e-06], ['(se->sz', 2.598833643460815e-06], ['(se->len', 2.598833643460815e-06], ['*)(se->len', 2.598833643460815e-06], ['se->string', 2.598833643460815e-06], ['(!uda_attribute_p', 2.598833643460815e-06], ['(e0->loc),', 2.598833643460815e-06], ['OPT_Wattributes,', 2.598833643460815e-06], ['elems->dim;', 2.598833643460815e-06], ['(*elems)[j];', 2.598833643460815e-06], ['TOKstring', 2.598833643460815e-06], ['((StringExp', 2.598833643460815e-06], ['e)->sz', 2.598833643460815e-06], ['*)(s->len', 2.598833643460815e-06], ['s->string', 2.598833643460815e-06], ['(s->len,', 2.598833643460815e-06], ['(attribs,', 2.598833643460815e-06], ['list);', 2.598833643460815e-06], ['attribs;', 2.598833643460815e-06], ['"noreturn"', 2.598833643460815e-06], ['"leaf"', 2.598833643460815e-06], ['effect",', 2.598833643460815e-06], ['(type))));', 2.598833643460815e-06], ['"malloc"', 2.598833643460815e-06], ['(*node))));', 2.598833643460815e-06], ['DECL_IS_MALLOC', 2.598833643460815e-06], ['"pure"', 2.598833643460815e-06], ['vops"', 2.598833643460815e-06], ['nonnull', 2.598833643460815e-06], ['handling;', 2.598833643460815e-06], ['get_nonnull_operand', 2.598833643460815e-06], ['arg_num_expr,', 2.598833643460815e-06], ['*valp)', 2.598833643460815e-06], ['(!tree_fits_uhwi_p', 2.598833643460815e-06], ['(arg_num_expr))', 2.598833643460815e-06], ['*valp', 2.598833643460815e-06], ['(arg_num_expr);', 2.598833643460815e-06], ['"nonnull"', 2.598833643460815e-06], ['non-null.', 2.598833643460815e-06], ['type-generic', 2.598833643460815e-06], ['prototype.', 2.598833643460815e-06], ['(prototype_p', 2.598833643460815e-06], ['!TYPE_ATTRIBUTES', 2.598833643460815e-06], ['(type)));', 2.598833643460815e-06], ['argument;', 2.598833643460815e-06], ['arg_num', 2.598833643460815e-06], ['ck_num;', 2.598833643460815e-06], ['(!get_nonnull_operand', 2.598833643460815e-06], ['&arg_num))', 2.598833643460815e-06], ['(argument)', 2.598833643460815e-06], ['(ck_num', 2.598833643460815e-06], ['ck_num++)', 2.598833643460815e-06], ['(!argument', 2.598833643460815e-06], ['ck_num', 2.598833643460815e-06], ['arg_num)', 2.598833643460815e-06], ['(argument);', 2.598833643460815e-06], ['(argument))', 2.598833643460815e-06], ['"nothrow"', 2.598833643460815e-06], ['"type_generic"', 2.598833643460815e-06], ['(!prototype_p', 2.598833643460815e-06], ['stdarg_p', 2.598833643460815e-06], ['"transaction_pure"', 2.598833643460815e-06], ['"returns_twice"', 2.598833643460815e-06], ['DECL_IS_RETURNS_TWICE', 2.598833643460815e-06], ['"fn', 2.598833643460815e-06], ['spec"', 2.598833643460815e-06], ['STRING_CST', 2.598833643460815e-06], ['!TREE_CHAIN', 2.598833643460815e-06], ['(args));', 2.598833643460815e-06], ['"noinline"', 2.598833643460815e-06], ['"forceinline"', 2.598833643460815e-06], ['always_inline.', 2.598833643460815e-06], ['("always_inline",', 2.598833643460815e-06], ['("always_inline"),', 2.598833643460815e-06], ['DECL_DISREGARD_INLINE_LIMITS', 2.598833643460815e-06], ['"flatten"', 2.598833643460815e-06], ['"target"', 2.598833643460815e-06], ['targetm.target_option.valid_attribute_p', 2.598833643460815e-06], ['(*node,', 2.598833643460815e-06], ['flags))', 2.598833643460815e-06], ['"noclone"', 2.598833643460815e-06], ['noclone.', 2.598833643460815e-06], ['("noclone"),', 2.598833643460815e-06], ['"section"', 2.598833643460815e-06], ['(targetm_common.have_named_sections)', 2.598833643460815e-06], ['!TREE_STATIC', 2.598833643460815e-06], ['"local', 2.598833643460815e-06], ['(args)))', 2.598833643460815e-06], ['conflicts', 2.598833643460815e-06], ['!targetm.have_tls', 2.598833643460815e-06], ['targetm.emutls.tmpl_section', 2.598833643460815e-06], ['DECL_THREAD_LOCAL_P', 2.598833643460815e-06], ['overridden",', 2.598833643460815e-06], ['(args)));', 2.598833643460815e-06], ['%q+D",', 2.598833643460815e-06], ['(*node),', 2.598833643460815e-06], ['target");', 2.598833643460815e-06], ['"alias"', 2.598833643460815e-06], ['VAR_DECL)', 2.598833643460815e-06], ['((TREE_CODE', 2.598833643460815e-06], ['!DECL_EXTERNAL', 2.598833643460815e-06], ['tentative', 2.598833643460815e-06], ['non-tentative', 2.598833643460815e-06], ['overrides.', 2.598833643460815e-06], ['attribute",', 2.598833643460815e-06], ['(decl_function_context', 2.598833643460815e-06], ['global",', 2.598833643460815e-06], ['("attribute', 2.598833643460815e-06], ['(TREE_STRING_POINTER', 2.598833643460815e-06], ['"weak"', 2.598833643460815e-06], ['"inline', 2.598833643460815e-06], ['weak",', 2.598833643460815e-06], ['*n', 2.598833643460815e-06], ['n->refuse_visibility_changes)', 2.598833643460815e-06], ['declare_weak', 2.598833643460815e-06], ['"optabs.h"', 2.598833643460815e-06], ['movt', 2.598833643460815e-06], ['bt/s', 2.598833643460815e-06], ['simpler:', 2.598833643460815e-06], ['bf/s', 2.598833643460815e-06], ['redunant', 2.598833643460815e-06], ['compensation', 2.598833643460815e-06], ['compensate', 2.598833643460815e-06], ['[BB', 2.598833643460815e-06], ['179)))', 2.598833643460815e-06], ['factored', 2.598833643460815e-06], ['175))', 2.598833643460815e-06], ['177))', 2.598833643460815e-06], ['179))', 2.598833643460815e-06], ['200)))', 2.598833643460815e-06], ['combined,', 2.598833643460815e-06], ['5].', 2.598833643460815e-06], ['utilize', 2.598833643460815e-06], ["'nott'", 2.598833643460815e-06], ['following:', 2.598833643460815e-06], ['(comparisons)', 2.598833643460815e-06], ['(inverting', 2.598833643460815e-06], ['non-inverting)', 2.598833643460815e-06], ['(create', 2.598833643460815e-06], ['pseudo', 2.598833643460815e-06], ['regs).', 2.598833643460815e-06], ['reason,', 2.598833643460815e-06], ['extending', 2.598833643460815e-06], ['forward.', 2.598833643460815e-06], ["they're", 2.598833643460815e-06], ['Notice', 2.598833643460815e-06], ['set_rtx;', 2.598833643460815e-06], ['set_src', 2.598833643460815e-06], ['set_dst', 2.598833643460815e-06], ['(result.insn', 2.598833643460815e-06], ['(BARRIER_P', 2.598833643460815e-06], ['(!NONJUMP_INSN_P', 2.598833643460815e-06], ['result.insn))', 2.598833643460815e-06], ['result.insn);', 2.598833643460815e-06], ['(result.set_rtx', 2.598833643460815e-06], ['(result.set_rtx)', 2.598833643460815e-06], ['adjacent,', 2.598833643460815e-06], ['is_adjacent_bb', 2.598833643460815e-06], ['bb0[]', 2.598833643460815e-06], ['bb1[]', 2.598833643460815e-06], ['(bb0[i]->succs);', 2.598833643460815e-06], ['(ei)->dest', 2.598833643460815e-06], ['bb1[i])', 2.598833643460815e-06], ['trace_reg_uses.', 2.598833643460815e-06], ['int&', 2.598833643460815e-06], ['(visited_bb.begin', 2.598833643460815e-06], ['visited\\n",', 2.598833643460815e-06], ['visited_bb.push_back', 2.598833643460815e-06], ['start_insn', 2.598833643460815e-06], ['(end_insn', 2.598833643460815e-06], ['end_insn;', 2.598833643460815e-06], ['(reg_overlap_mentioned_p', 2.598833643460815e-06], ['find_reg_fusage', 2.598833643460815e-06], ['USE,', 2.598833643460815e-06], ['reg))))', 2.598833643460815e-06], ['dies', 2.598833643460815e-06], ['(abort_at_insn', 2.598833643460815e-06], ['abort_at_insn', 2.598833643460815e-06], ['succ_bb', 2.598833643460815e-06], ['(ei)->dest;', 2.598833643460815e-06], ['(succ_bb),', 2.598833643460815e-06], ['succ_bb,', 2.598833643460815e-06], ['Trace', 2.598833643460815e-06], ['counted.', 2.598833643460815e-06], ['("\\ntrace_reg_uses\\nreg', 2.598833643460815e-06], ['("\\nstart_insn', 2.598833643460815e-06], ['visited_bb;', 2.598833643460815e-06], ['visited_bb.reserve', 2.598833643460815e-06], ['start_insn,', 2.598833643460815e-06], ['(start_insn),', 2.598833643460815e-06], ['is_conditional_insn', 2.598833643460815e-06], ['(rtx_insn*', 2.598833643460815e-06], ['NONDEBUG_INSN_P', 2.598833643460815e-06], ['(i)))', 2.598833643460815e-06], ['(p)', 2.598833643460815e-06], ['IF_THEN_ELSE;', 2.598833643460815e-06], ['~sh_treg_combine', 2.598833643460815e-06], ['cstore_unknown', 2.598833643460815e-06], ['branch_if_true', 2.598833643460815e-06], ['branch_if_false', 2.598833643460815e-06], ['unknown_branch_condition', 2.598833643460815e-06], ['(usually', 2.598833643460815e-06], ['comparison)', 2.598833643460815e-06], ['cstore;', 2.598833643460815e-06], ['cstore_type;', 2.598833643460815e-06], ['std::vector<set_of_reg>', 2.598833643460815e-06], ['cstore_reg_reg_copies;', 2.598833643460815e-06], ['cstore_type', 2.598833643460815e-06], ['(cstore_unknown)', 2.598833643460815e-06], ['comparison_rtx', 2.598833643460815e-06], ['setcc.set_src', 2.598833643460815e-06], ['*cbranch_insn;', 2.598833643460815e-06], ['rtx*', 2.598833643460815e-06], ['condition_rtx_in_insn;', 2.598833643460815e-06], ['cbranch_type;', 2.598833643460815e-06], ['std::list<bb_entry>', 2.598833643460815e-06], ['bb_entries;', 2.598833643460815e-06], ['cbranch_insn', 2.598833643460815e-06], ['(insn),', 2.598833643460815e-06], ['cbranch_type', 2.598833643460815e-06], ['(unknown_branch_condition),', 2.598833643460815e-06], ['(cbranch_insn),', 2.598833643460815e-06], ['branch_condition_rtx', 2.598833643460815e-06], ['*condition_rtx_in_insn', 2.598833643460815e-06], ['branch_condition_rtx_ref', 2.598833643460815e-06], ['(condition_rtx_in_insn', 2.598833643460815e-06], ['*condition_rtx_in_insn;', 2.598833643460815e-06], ['can_invert_condition', 2.598833643460815e-06], ['(branch_condition_rtx', 2.598833643460815e-06], ['cbranch_insn);', 2.598833643460815e-06], ['m_split_insns;', 2.598833643460815e-06], ['Newly', 2.598833643460815e-06], ['std::vector<rtx>', 2.598833643460815e-06], ['m_touched_insns;', 2.598833643460815e-06], ['is_cmp_eq_zero', 2.598833643460815e-06], ['rtx.', 2.598833643460815e-06], ['negated', 2.598833643460815e-06], ['is_normal_ccreg', 2.598833643460815e-06], ['is_inverted_ccreg', 2.598833643460815e-06], ['ended', 2.598833643460815e-06], ['NULL_RTX.', 2.598833643460815e-06], ['set_found,', 2.598833643460815e-06], ['set_not_found,', 2.598833643460815e-06], ['other_set_found', 2.598833643460815e-06], ['can_remove_cstore', 2.598833643460815e-06], ['can_remove_comparison', 2.598833643460815e-06], ['can_combine_comparisons', 2.598833643460815e-06], ['can_extend_ccreg_usage', 2.598833643460815e-06], ['(test', 2.598833643460815e-06], ['src_reg', 2.598833643460815e-06], ['dst_reg.', 2.598833643460815e-06], ['inverts', 2.598833643460815e-06], ['*make_inv_ccreg_insn', 2.598833643460815e-06], ['try_invert_branch_condition', 2.598833643460815e-06], ['trace);', 2.598833643460815e-06], ['try_combine_comparisons', 2.598833643460815e-06], ['sh_treg_combine::default_pass_data', 2.598833643460815e-06], ['TODO_df_finish', 2.598833643460815e-06], ['TODO_df_verify', 2.598833643460815e-06], ['sh_treg_combine::sh_treg_combine', 2.598833643460815e-06], ['m_split_insns', 2.598833643460815e-06], ['(split_insns),', 2.598833643460815e-06], ['sh_treg_combine::~sh_treg_combine', 2.598833643460815e-06], ['sh_treg_combine::update_ccreg_mode', 2.598833643460815e-06], ['sh_treg_combine::is_cmp_eq_zero', 2.598833643460815e-06], ['const0_rtx;', 2.598833643460815e-06], ['sh_treg_combine::branch_condition_type_t', 2.598833643460815e-06], ['sh_treg_combine::branch_condition_type', 2.598833643460815e-06], ['branch_if_true;', 2.598833643460815e-06], ['branch_if_false;', 2.598833643460815e-06], ['sh_treg_combine::is_normal_ccreg', 2.598833643460815e-06], ['sh_treg_combine::is_inverted_ccreg', 2.598833643460815e-06], ['sh_treg_combine::record_return_t', 2.598833643460815e-06], ['sh_treg_combine::record_set_of_reg', 2.598833643460815e-06], ['new_entry)', 2.598833643460815e-06], ['new_entry.bb->index);', 2.598833643460815e-06], ['BB?\\n");', 2.598833643460815e-06], ['cstore_unknown;', 2.598833643460815e-06], ['new_entry.cstore', 2.598833643460815e-06], ['(cstore)\\n");', 2.598833643460815e-06], ['(new_entry.cstore.insn);', 2.598833643460815e-06], ['(is_normal_ccreg', 2.598833643460815e-06], ['("normal', 2.598833643460815e-06], ['("inverted', 2.598833643460815e-06], ['cstore_inverted;', 2.598833643460815e-06], ['new_entry.cstore_reg_reg_copies.push_back', 2.598833643460815e-06], ['(new_entry.cstore);', 2.598833643460815e-06], ['new_entry.cstore.set_src', 2.598833643460815e-06], ['new_entry.cstore.insn;', 2.598833643460815e-06], ['("reg-reg', 2.598833643460815e-06], ['tracing', 2.598833643460815e-06], ['(other_set_found,', 2.598833643460815e-06], ['(new_entry.cstore_type', 2.598833643460815e-06], ['cstore_unknown);', 2.598833643460815e-06], ['("tracing', 2.598833643460815e-06], ['new_entry.setcc', 2.598833643460815e-06], ['(new_entry.cstore.insn));', 2.598833643460815e-06], ['(new_entry.setcc.set_src', 2.598833643460815e-06], ['(new_entry.setcc.set_rtx)', 2.598833643460815e-06], ['ccreg,', 2.598833643460815e-06], ['insns,', 2.598833643460815e-06], ['clobbers.', 2.598833643460815e-06], ['(new_entry.setcc.insn);', 2.598833643460815e-06], ['set_found;', 2.598833643460815e-06], ['sh_treg_combine::can_remove_cstore', 2.598833643460815e-06], ['(e.cstore.insn)))', 2.598833643460815e-06], ['cstore_pat', 2.598833643460815e-06], ['(cstore_pat)', 2.598833643460815e-06], ['PARALLEL)', 2.598833643460815e-06], ['XVECLEN', 2.598833643460815e-06], ['XVECEXP', 2.598833643460815e-06], ['e.cstore.set_rtx', 2.598833643460815e-06], ['reg_referenced_p', 2.598833643460815e-06], ['x))', 2.598833643460815e-06], ['negc)', 2.598833643460815e-06], ['(modified_in_p', 2.598833643460815e-06], ['!(reg_dead_after_insn', 2.598833643460815e-06], ['e.cstore.insn)))', 2.598833643460815e-06], ['*prev_insn', 2.598833643460815e-06], ['e.cstore.insn;', 2.598833643460815e-06], ['e.cstore_reg_reg_copies.rbegin', 2.598833643460815e-06], ['e.cstore_reg_reg_copies.rend', 2.598833643460815e-06], ['die\\n");', 2.598833643460815e-06], ['prev_insn,', 2.598833643460815e-06], ['used\\n",', 2.598833643460815e-06], ['prev_insn', 2.598833643460815e-06], ['i->insn;', 2.598833643460815e-06], ['cbranch,', 2.598833643460815e-06], ['recent', 2.598833643460815e-06], ['e.cstore_reg_reg_copies.empty', 2.598833643460815e-06], ['e.cstore.set_dst', 2.598833643460815e-06], ['e.cstore_reg_reg_copies.front', 2.598833643460815e-06], ['().set_dst', 2.598833643460815e-06], ['"after', 2.598833643460815e-06], ['trace.setcc.insn\\n",', 2.598833643460815e-06], ['(cstore_dst));', 2.598833643460815e-06], ['dies.', 2.598833643460815e-06], ['(i.e.', 2.598833643460815e-06], ['copies)', 2.598833643460815e-06], ['trace.setcc.insn);', 2.598833643460815e-06], ['(cstore_dst_use_count', 2.598833643460815e-06], ['places\\n",', 2.598833643460815e-06], ['(cstore_dst),', 2.598833643460815e-06], ['sh_treg_combine::can_remove_comparison', 2.598833643460815e-06], ['cbranch_trace&/*', 2.598833643460815e-06], ['trace*/)', 2.598833643460815e-06], ['cstore,', 2.598833643460815e-06], ['e.setcc.insn,', 2.598833643460815e-06], ['(e.setcc.insn);', 2.598833643460815e-06], ['otherwise\\n");', 2.598833643460815e-06], ['!reg_unused_after_insn', 2.598833643460815e-06], ['afterwards\\n");', 2.598833643460815e-06], ['"shll".', 2.598833643460815e-06], ['(multiple_sets', 2.598833643460815e-06], ['(e.setcc.insn))', 2.598833643460815e-06], ['set\\n");', 2.598833643460815e-06], ['sh_treg_combine::make_not_reg_insn', 2.598833643460815e-06], ['src_reg,', 2.598833643460815e-06], ['const0_rtx)));', 2.598833643460815e-06], ['(dst_reg,', 2.598833643460815e-06], ['(gen_lowpart', 2.598833643460815e-06], ['(gen_highpart', 2.598833643460815e-06], ['sh_treg_combine::make_inv_ccreg_insn', 2.598833643460815e-06], ['(XOR,', 2.598833643460815e-06], ['(m_ccreg),', 2.598833643460815e-06], ['m_ccreg,', 2.598833643460815e-06], ['const1_rtx)));', 2.598833643460815e-06], ['sh_treg_combine::touched_insn', 2.598833643460815e-06], ['m_touched_insns.push_back', 2.598833643460815e-06], ['sh_treg_combine::can_combine_comparisons', 2.598833643460815e-06], ['x_op0', 2.598833643460815e-06], ['x_op1', 2.598833643460815e-06], ['y_op0', 2.598833643460815e-06], ['y_op1', 2.598833643460815e-06], ['!REG_P', 2.598833643460815e-06], ['(x_op1))', 2.598833643460815e-06], ['(y_op1)', 2.598833643460815e-06], ['(x_op1)', 2.598833643460815e-06], ['(y_op1);', 2.598833643460815e-06], ['(x_op1,', 2.598833643460815e-06], ['y_op1);', 2.598833643460815e-06], ['sh_treg_combine::can_extend_ccreg_usage', 2.598833643460815e-06], ['insins', 2.598833643460815e-06], ['setcc,', 2.598833643460815e-06], ["trace.cbranch_insn's", 2.598833643460815e-06], ['!is_adjacent_bb', 2.598833643460815e-06], ['(e.bb,', 2.598833643460815e-06], ['adjacent\\n",', 2.598833643460815e-06], ['e.bb->index,', 2.598833643460815e-06], ['(e.cstore.empty', 2.598833643460815e-06], ['e.cstore.insn', 2.598833643460815e-06], ['"and', 2.598833643460815e-06], ['trace.setcc.insn");', 2.598833643460815e-06], ['(e.bb))))', 2.598833643460815e-06], ['e.bb->index);', 2.598833643460815e-06], ['())),', 2.598833643460815e-06], ['sh_treg_combine::try_invert_branch_condition', 2.598833643460815e-06], ['("inverting', 2.598833643460815e-06], ['trace.branch_condition_rtx_ref', 2.598833643460815e-06], ['rev_cmp_code', 2.598833643460815e-06], ['trace.cbranch_insn);', 2.598833643460815e-06], ['(rev_cmp_code', 2.598833643460815e-06], ['UNKNOWN)', 2.598833643460815e-06], ['"reversed_comparison_code', 2.598833643460815e-06], ['UNKNOWN\\n");', 2.598833643460815e-06], ['validate_change', 2.598833643460815e-06], ['(trace.cbranch_insn,', 2.598833643460815e-06], ['&comp,', 2.598833643460815e-06], ['(rev_cmp_code,', 2.598833643460815e-06], ['(comp),', 2.598833643460815e-06], ['(verify_changes', 2.598833643460815e-06], ['(num_validated_changes', 2.598833643460815e-06], ['confirm_change_group', 2.598833643460815e-06], ['"verify_changed', 2.598833643460815e-06], ['failed\\n");', 2.598833643460815e-06], ['(trace.cbranch_insn);', 2.598833643460815e-06], ['sh_treg_combine::try_combine_comparisons', 2.598833643460815e-06], ['("\\ntry_combine_comparisons\\n");', 2.598833643460815e-06], ['pseudos.', 2.598833643460815e-06], ['(!can_create_pseudo_p', 2.598833643460815e-06], ['pseudos\\n");', 2.598833643460815e-06], ['ccset', 2.598833643460815e-06], ['i_empty_count', 2.598833643460815e-06], ['i->setcc.empty', 2.598833643460815e-06], ['pair\\n");', 2.598833643460815e-06], ['other_comp', 2.598833643460815e-06], ['i->comparison_rtx', 2.598833643460815e-06], ['(!COMPARISON_P', 2.598833643460815e-06], ['(other_comp))', 2.598833643460815e-06], ['("setcc', 2.598833643460815e-06], ['comparison:\\n");', 2.598833643460815e-06], ['(other_comp);', 2.598833643460815e-06], ['(comp_insn', 2.598833643460815e-06], ['other_comp;', 2.598833643460815e-06], ['i->setcc.insn;', 2.598833643460815e-06], ['(!can_combine_comparisons', 2.598833643460815e-06], ['other_comp))', 2.598833643460815e-06], ['!can_remove_comparison', 2.598833643460815e-06], ['prohibits', 2.598833643460815e-06], ['div0s', 2.598833643460815e-06], ['(lt:SI', 2.598833643460815e-06], ['(reg:SI)', 2.598833643460815e-06], ['(reg:SI)))', 2.598833643460815e-06], ['("comparison', 2.598833643460815e-06], ['0\\n");', 2.598833643460815e-06], ['"\\nis', 2.598833643460815e-06], ['reg\\n");', 2.598833643460815e-06], ['comp_op0', 2.598833643460815e-06], ['comp_op1', 2.598833643460815e-06], ['eliminated', 2.598833643460815e-06], ['inverted.', 2.598833643460815e-06], ['canonicalized.', 2.598833643460815e-06], ['though,', 2.598833643460815e-06], ['nott', 2.598833643460815e-06], ['(inv_cstore_count', 2.598833643460815e-06], ['(make_not_reg_insn', 2.598833643460815e-06], ['comp_op0)', 2.598833643460815e-06], ['"make_not_reg_insn', 2.598833643460815e-06], ['failed.\\n");', 2.598833643460815e-06], ['!is_cmp_eq_zero', 2.598833643460815e-06], ['0))\\n");', 2.598833643460815e-06], ['patterns,', 2.598833643460815e-06], ['SH,', 2.598833643460815e-06], ['FPSCR.', 2.598833643460815e-06], ['("installing', 2.598833643460815e-06], ['common_comp_pat', 2.598833643460815e-06], ['(comp_insn));', 2.598833643460815e-06], ['common_comp', 2.598833643460815e-06], ['const_cast<rtx>', 2.598833643460815e-06], ['(set_of', 2.598833643460815e-06], ['common_comp_pat));', 2.598833643460815e-06], ['(common_comp', 2.598833643460815e-06], ['comp_op0;', 2.598833643460815e-06], ['comp_op1;', 2.598833643460815e-06], ['(common_comp_pat);', 2.598833643460815e-06], ['common_comp_insn', 2.598833643460815e-06], ['(common_comp_pat,', 2.598833643460815e-06], ['trace.setcc.insn));', 2.598833643460815e-06], ['(comp_op0))', 2.598833643460815e-06], ['(comp_op0));', 2.598833643460815e-06], ['(comp_op1));', 2.598833643460815e-06], ['moves', 2.598833643460815e-06], ['i_comp_op0', 2.598833643460815e-06], ['i_comp_op1', 2.598833643460815e-06], ['i_comp_op0),', 2.598833643460815e-06], ['const_int', 2.598833643460815e-06], ['(comp_op1,', 2.598833643460815e-06], ['i_comp_op1),', 2.598833643460815e-06], ['(reg_dead_after_insn', 2.598833643460815e-06], ['(i_comp_op1,', 2.598833643460815e-06], ['(i_comp_op1));', 2.598833643460815e-06], ['i_comp_op0);', 2.598833643460815e-06], ['sh_treg_combine::try_eliminate_cstores', 2.598833643460815e-06], ['("\\ntry_eliminate_cstores\\n");', 2.598833643460815e-06], ['(!can_extend_ccreg_usage', 2.598833643460815e-06], ['modified_in_p', 2.598833643460815e-06], ['i->cstore.insn))', 2.598833643460815e-06], ['"cstore', 2.598833643460815e-06], ['(cstore_count', 2.598833643460815e-06], ['make_inv_ccreg_insn', 2.598833643460815e-06], ['(recog_memoized', 2.598833643460815e-06], ['("failed', 2.598833643460815e-06], ['"\\naborting\\n");', 2.598833643460815e-06], ['Eliminate', 2.598833643460815e-06], ['(make_inv_ccreg_insn', 2.598833643460815e-06], ['i->cstore.insn));', 2.598833643460815e-06], ['(can_remove_cstore', 2.598833643460815e-06], ['cbranch\\n");', 2.598833643460815e-06], ['sh_treg_combine::try_optimize_cbranch', 2.598833643460815e-06], ['("\\n\\n--------------------------------------\\n");', 2.598833643460815e-06], ['trace.cbranch_type', 2.598833643460815e-06], ['branch_if_true)', 2.598833643460815e-06], ['true\\n");', 2.598833643460815e-06], ['branch_if_false)', 2.598833643460815e-06], ['false\\n");', 2.598833643460815e-06], ['(reg', 2.598833643460815e-06], ['ccreg)', 2.598833643460815e-06], ['("could', 2.598833643460815e-06], ['BB\\n");', 2.598833643460815e-06], ['(!is_cmp_eq_zero', 2.598833643460815e-06], ['!is_inverted_ccreg', 2.598833643460815e-06], ['("unsupported', 2.598833643460815e-06], ['BB:', 2.598833643460815e-06], ['trace_reg', 2.598833643460815e-06], ['ccreg:\\n");', 2.598833643460815e-06], ['trace.setcc.insn,', 2.598833643460815e-06], ['trace.cbranch_insn))', 2.598833643460815e-06], ['("ccreg', 2.598833643460815e-06], ['(trace.setcc.insn)))', 2.598833643460815e-06], ['("\\nbecause', 2.598833643460815e-06], ['(try_invert_branch_condition', 2.598833643460815e-06], ['formed,', 2.598833643460815e-06], ['obtained.', 2.598833643460815e-06], ['("\\ntracing', 2.598833643460815e-06], ['(trace_reg);', 2.598833643460815e-06], ['(trace.setcc.insn),', 2.598833643460815e-06], ['other_set_found)', 2.598833643460815e-06], ['("other', 2.598833643460815e-06], ['set_not_found)', 2.598833643460815e-06], ['()->preds);', 2.598833643460815e-06], ['(e->src));', 2.598833643460815e-06], ['set_found)', 2.598833643460815e-06], ['("\\ncbranch', 2.598833643460815e-06], ['summary:\\n");', 2.598833643460815e-06], ['(!i->setcc.empty', 2.598833643460815e-06], ['(i->setcc.set_rtx);', 2.598833643460815e-06], ['(!i->cstore.empty', 2.598833643460815e-06], ['(i->cstore.set_rtx);', 2.598833643460815e-06], ['i->cstore_reg_reg_copies.rbegin', 2.598833643460815e-06], ['i->cstore_reg_reg_copies.rend', 2.598833643460815e-06], ['(j->set_rtx);', 2.598833643460815e-06], ['(trace.setcc.set_rtx);', 2.598833643460815e-06], ['(trace.cbranch_insn));', 2.598833643460815e-06], ['i->bb', 2.598833643460815e-06], ['aborting.\\n",', 2.598833643460815e-06], ['probabilities', 2.598833643460815e-06], ['("cstore', 2.598833643460815e-06], ['inv_cstore_count);', 2.598833643460815e-06], ['(try_combine_comparisons', 2.598833643460815e-06], ['dominating_cstore))', 2.598833643460815e-06], ['sh_treg_combine::gate', 2.598833643460815e-06], ['sh_treg_combine::execute', 2.598833643460815e-06], ['rtx_insn*', 2.598833643460815e-06], ['(bb)))', 2.598833643460815e-06], ['already,', 2.598833643460815e-06], ['ourselves', 2.598833643460815e-06], ['Multi-word', 2.598833643460815e-06], ['insns)', 2.598833643460815e-06], ['though.', 2.598833643460815e-06], ['(m_split_insns)', 2.598833643460815e-06], ['(std::vector<rtx>::const_iterator', 2.598833643460815e-06], ['m_touched_insns.begin', 2.598833643460815e-06], ['m_touched_insns.end', 2.598833643460815e-06], ['("trying', 2.598833643460815e-06], ['try_split', 2.598833643460815e-06], ['safe_as_a', 2.598833643460815e-06], ['<rtx_insn', 2.598833643460815e-06], ['m_touched_insns.clear', 2.598833643460815e-06], ['make_pass_sh_treg_combine', 2.598833643460815e-06], ['ast-dump.cc', 2.598833643460815e-06], ['activate', 2.598833643460815e-06], ['Go_dump', 2.598833643460815e-06], ['ast_dump_flag("ast");', 2.598833643460815e-06], ['headers.', 2.598833643460815e-06], ['Ast_dump_traverse_blocks_and_functions(Ast_dump_context*', 2.598833643460815e-06], ['Ast_dump_traverse_statements(Ast_dump_context*', 2.598833643460815e-06], ['Traverse(traverse_statements),', 2.598833643460815e-06], ['enclose', 2.598833643460815e-06], ['brackets.', 2.598833643460815e-06], ['Ast_dump_traverse_blocks_and_functions::block(Block', 2.598833643460815e-06], ['this->ast_dump_context_->indent();', 2.598833643460815e-06], ['statememts.', 2.598833643460815e-06], ['adts(this->ast_dump_context_);', 2.598833643460815e-06], ['block->traverse(&adts);', 2.598833643460815e-06], ['this->ast_dump_context_->unindent();', 2.598833643460815e-06], ['Ast_dump_traverse_statements::statement(Block*', 2.598833643460815e-06], ['statement->dump_statement(this->ast_dump_context_);', 2.598833643460815e-06], ['(statement->is_block_statement())', 2.598833643460815e-06], ['adtbf(this->ast_dump_context_);', 2.598833643460815e-06], ['statement->traverse(block,', 2.598833643460815e-06], ['&adtbf);', 2.598833643460815e-06], ['Ast_dump_traverse_blocks_and_functions::function(Named_object*', 2.598833643460815e-06], ['this->ast_dump_context_->dump_typed_identifier_list(', 2.598833643460815e-06], ['func->type()->parameters());', 2.598833643460815e-06], ['func->result_variables();', 2.598833643460815e-06], ['!res->empty())', 2.598833643460815e-06], ['res->begin())', 2.598833643460815e-06], ['(*it);', 2.598833643460815e-06], ['resvar', 2.598833643460815e-06], ['this->ast_dump_context_->dump_type(resvar->type());', 2.598833643460815e-06], ['this->ast_dump_context_->dump_type(func->type());', 2.598833643460815e-06], ['preinits', 2.598833643460815e-06], ['Ast_dump_traverse_blocks_and_functions::variable(Named_object*', 2.598833643460815e-06], ['(var->has_pre_init())', 2.598833643460815e-06], ['var->preinit()->traverse(this);', 2.598833643460815e-06], ['Ast_dump_context.', 2.598833643460815e-06], ['Ast_dump_context::Ast_dump_context(std::ostream*', 2.598833643460815e-06], ['*/,', 2.598833643460815e-06], ['dump_subblocks', 2.598833643460815e-06], ['indent_(0),', 2.598833643460815e-06], ['dump_subblocks_(dump_subblocks),', 2.598833643460815e-06], ['ostream_(out),', 2.598833643460815e-06], ['gogo_(NULL)', 2.598833643460815e-06], ['%basename%.dump.ast', 2.598833643460815e-06], ['kAstDumpFileExtension', 2.598833643460815e-06], ['Ast_dump_context::dump(Gogo*', 2.598833643460815e-06], ['dumpname(basename);', 2.598833643460815e-06], ['dumpname', 2.598833643460815e-06], ['out.open(dumpname.c_str());', 2.598833643460815e-06], ['%s:%m,', 2.598833643460815e-06], ['dumpname.c_str());', 2.598833643460815e-06], ['this->ostream_', 2.598833643460815e-06], ['&out;', 2.598833643460815e-06], ['gogo->traverse(&adtbf);', 2.598833643460815e-06], ['Ast_dump_context::dump_type(const', 2.598833643460815e-06], ['"(nil', 2.598833643460815e-06], ['type)";', 2.598833643460815e-06], ['printer', 2.598833643460815e-06], ['(this->gogo_', 2.598833643460815e-06], ['t->mangled_name(this->gogo_)', 2.598833643460815e-06], ['Ast_dump_context::dump_block(Block*', 2.598833643460815e-06], ['b->traverse(&adtbf);', 2.598833643460815e-06], ['Ast_dump_context::dump_expression(const', 2.598833643460815e-06], ['e->dump_expression(this);', 2.598833643460815e-06], ['Ast_dump_context::dump_expression_list(const', 2.598833643460815e-06], ['el,', 2.598833643460815e-06], ['as_pairs', 2.598833643460815e-06], ['(el', 2.598833643460815e-06], ['el->begin();', 2.598833643460815e-06], ['el->end();', 2.598833643460815e-06], ['el->begin())', 2.598833643460815e-06], ['(*it', 2.598833643460815e-06], ['"NULL";', 2.598833643460815e-06], ['(as_pairs)', 2.598833643460815e-06], ['++it;', 2.598833643460815e-06], ['Ast_dump_context::dump_typed_identifier(const', 2.598833643460815e-06], ['ti)', 2.598833643460815e-06], ['ti->name()', 2.598833643460815e-06], ['this->dump_type(ti->type());', 2.598833643460815e-06], ['Ast_dump_context::dump_typed_identifier_list(', 2.598833643460815e-06], ['ti_list)', 2.598833643460815e-06], ['(ti_list', 2.598833643460815e-06], ['ti_list->begin();', 2.598833643460815e-06], ['ti_list->end();', 2.598833643460815e-06], ['ti_list->begin())', 2.598833643460815e-06], ['this->dump_typed_identifier(&(*it));', 2.598833643460815e-06], ['Ast_dump_context::dump_temp_variable_name(const', 2.598833643460815e-06], ['go_assert(s->classification()', 2.598833643460815e-06], ['Statement::STATEMENT_TEMPORARY);', 2.598833643460815e-06], ['Ast_dump_context::dump_label_name(const', 2.598833643460815e-06], ['"label."', 2.598833643460815e-06], ['op_string(Operator', 2.598833643460815e-06], ['parsed,', 2.598833643460815e-06], ['"+";', 2.598833643460815e-06], ['"!";', 2.598833643460815e-06], ['"^";', 2.598833643460815e-06], ['"|";', 2.598833643460815e-06], ['"&";', 2.598833643460815e-06], ['"||";', 2.598833643460815e-06], ['"&&";', 2.598833643460815e-06], ['"/";', 2.598833643460815e-06], ['"<<";', 2.598833643460815e-06], ['"//";', 2.598833643460815e-06], ['"&^";', 2.598833643460815e-06], ['"+=";', 2.598833643460815e-06], ['"-=";', 2.598833643460815e-06], ['"|=";', 2.598833643460815e-06], ['"^=";', 2.598833643460815e-06], ['"*=";', 2.598833643460815e-06], ['"/=";', 2.598833643460815e-06], ['"%=";', 2.598833643460815e-06], ['"<<=";', 2.598833643460815e-06], ['">>=";', 2.598833643460815e-06], ['"&=";', 2.598833643460815e-06], ['"&^=";', 2.598833643460815e-06], ['"++";', 2.598833643460815e-06], ['"--";', 2.598833643460815e-06], ['":=";', 2.598833643460815e-06], ['";";', 2.598833643460815e-06], ['OPERATOR_ELLIPSIS:', 2.598833643460815e-06], ['"...";', 2.598833643460815e-06], ['Ast_dump_context::dump_operator(Operator', 2.598833643460815e-06], ['op_string(op);', 2.598833643460815e-06], ['indent.', 2.598833643460815e-06], ['Ast_dump_context::offset_', 2.598833643460815e-06], ['indenting', 2.598833643460815e-06], ['Ast_dump_context::print_indent()', 2.598833643460815e-06], ['this->indent_', 2.598833643460815e-06], ['this->offset_;', 2.598833643460815e-06], ['Gogo::dump_ast(const', 2.598833643460815e-06], ['(::ast_dump_flag.is_enabled())', 2.598833643460815e-06], ['adc;', 2.598833643460815e-06], ['adc.dump(this,', 2.598833643460815e-06], ['basename);', 2.598833643460815e-06], ['String_dump', 2.598833643460815e-06], ['Ast_dump_context::write_c_string(const', 2.598833643460815e-06], ['Ast_dump_context::write_string(const', 2.598833643460815e-06], ['stm,', 2.598833643460815e-06], ['stm->dump_statement(&adc);', 2.598833643460815e-06], ['expr->dump_expression(&adc);', 2.598833643460815e-06], ['debug_go_expression(const', 2.598833643460815e-06], ['Ast_dump_context::dump_to_stream(expr,', 2.598833643460815e-06], ['Linemap::location_to_string(expr->location());', 2.598833643460815e-06], ['debug_go_statement(const', 2.598833643460815e-06], ['"<null>\\n";', 2.598833643460815e-06], ['Linemap::location_to_string(stmt->location());', 2.598833643460815e-06], ['*ncstmt', 2.598833643460815e-06], ['const_cast<Statement*>(stmt);', 2.598833643460815e-06], ['Block_statement*', 2.598833643460815e-06], ['ncstmt->block_statement();', 2.598833643460815e-06], ['(bs', 2.598833643460815e-06], ['bs->block()', 2.598833643460815e-06], ['Ast_dump_context::dump_to_stream(stmt,', 2.598833643460815e-06], ['debug_go_statement_deep(const', 2.598833643460815e-06], ['statement->dump_statement(&adc);', 2.598833643460815e-06], ['debug_go_block(const', 2.598833643460815e-06], ['block->enclosing()', 2.598833643460815e-06], ['"):\\n";', 2.598833643460815e-06], ['std::vector<Statement*>*', 2.598833643460815e-06], ['block->statements();', 2.598833643460815e-06], ['(stmts', 2.598833643460815e-06], ['stmts->size();', 2.598833643460815e-06], ['debug_go_statement(stmts->at(i));', 2.598833643460815e-06], ['std:cerr.', 2.598833643460815e-06], ['debug_go_block_deep(const', 2.598833643460815e-06], ['ncblock', 2.598833643460815e-06], ['const_cast<Block*>(block);', 2.598833643460815e-06], ['adc.dump_block(ncblock);', 2.598833643460815e-06], ['Unordered_map(const', 2.598833643460815e-06], ['unsigned)', 2.598833643460815e-06], ['idx_map;', 2.598833643460815e-06], ['Type_dumper(const', 2.598833643460815e-06], ['top_(type),', 2.598833643460815e-06], ['ntypes_(0)', 2.598833643460815e-06], ['this->worklist_.push_back(type);', 2.598833643460815e-06], ['visit();', 2.598833643460815e-06], ['stringResult()', 2.598833643460815e-06], ['ss_.str();', 2.598833643460815e-06], ['emitpre(unsigned', 2.598833643460815e-06], ['typeref(const', 2.598833643460815e-06], ['visit_forward_declaration_type(const', 2.598833643460815e-06], ['fdt);', 2.598833643460815e-06], ['visit_function_type(const', 2.598833643460815e-06], ['visit_struct_type(const', 2.598833643460815e-06], ['visit_array_type(const', 2.598833643460815e-06], ['visit_map_type(const', 2.598833643460815e-06], ['visit_channel_type(const', 2.598833643460815e-06], ['visit_interface_type(const', 2.598833643460815e-06], ['visit_methods(const', 2.598833643460815e-06], ['*tag);', 2.598833643460815e-06], ['lookup(const', 2.598833643460815e-06], ['notag', 2.598833643460815e-06], ['0xffffffff;', 2.598833643460815e-06], ['top_;', 2.598833643460815e-06], ['idx_map', 2.598833643460815e-06], ['types_;', 2.598833643460815e-06], ['ntypes_;', 2.598833643460815e-06], ['std::list<const', 2.598833643460815e-06], ['ss_;', 2.598833643460815e-06], ['installing', 2.598833643460815e-06], ["'types_'.", 2.598833643460815e-06], ['<found,', 2.598833643460815e-06], ['N>', 2.598833643460815e-06], ["'found'", 2.598833643460815e-06], ['index/tag', 2.598833643460815e-06], ['Type_dumper::lookup(const', 2.598833643460815e-06], ['std::pair<const', 2.598833643460815e-06], ['std::make_pair(t,', 2.598833643460815e-06], ['this->ntypes_);', 2.598833643460815e-06], ['std::pair<idx_map::iterator,', 2.598833643460815e-06], ['this->types_.insert(entry);', 2.598833643460815e-06], ['this->ntypes_++;', 2.598833643460815e-06], ['this->top_)', 2.598833643460815e-06], ['this->worklist_.push_back(t);', 2.598833643460815e-06], ['std::make_pair(ins.second,', 2.598833643460815e-06], ['ins.first->second);', 2.598833643460815e-06], ['preamble', 2.598833643460815e-06], ['(via', 2.598833643460815e-06], ['"notag"', 2.598833643460815e-06], ['spaces.', 2.598833643460815e-06], ['Type_dumper::emitpre(unsigned', 2.598833643460815e-06], ['tbuf[50],', 2.598833643460815e-06], ['pbuf[50],', 2.598833643460815e-06], ['tbuf[0]', 2.598833643460815e-06], ['notag)', 2.598833643460815e-06], ['snprintf(tbuf,', 2.598833643460815e-06], ['"T%u",', 2.598833643460815e-06], ['tag);', 2.598833643460815e-06], ['pbuf[0]', 2.598833643460815e-06], ['"%p",', 2.598833643460815e-06], ['"%8s', 2.598833643460815e-06], ['%16s', 2.598833643460815e-06], ['pbuf);', 2.598833643460815e-06], ['simple/primitive', 2.598833643460815e-06], ['int64)', 2.598833643460815e-06], ['"pref"', 2.598833643460815e-06], ['"suf"', 2.598833643460815e-06], ['Type_dumper::typeref(const', 2.598833643460815e-06], ['pref,', 2.598833643460815e-06], ['suf)', 2.598833643460815e-06], ['(pref', 2.598833643460815e-06], ['pref;', 2.598833643460815e-06], ['underlying,', 2.598833643460815e-06], ['this->typeref("*",', 2.598833643460815e-06], ['t->points_to(),', 2.598833643460815e-06], ['"error_type";', 2.598833643460815e-06], ['(it->is_abstract())', 2.598833643460815e-06], ['"abstract_int";', 2.598833643460815e-06], ['(it->is_unsigned()', 2.598833643460815e-06], ['it->bits();', 2.598833643460815e-06], ['t->float_type();', 2.598833643460815e-06], ['(ft->is_abstract())', 2.598833643460815e-06], ['"abstract_float";', 2.598833643460815e-06], ['"float"', 2.598833643460815e-06], ['ft->bits();', 2.598833643460815e-06], ['t->complex_type();', 2.598833643460815e-06], ['(ct->is_abstract())', 2.598833643460815e-06], ['"abstract_complex";', 2.598833643460815e-06], ['"complex"', 2.598833643460815e-06], ['ct->bits();', 2.598833643460815e-06], ['"bool";', 2.598833643460815e-06], ['"string";', 2.598833643460815e-06], ['"nil_type";', 2.598833643460815e-06], ['"void_type";', 2.598833643460815e-06], ['"<???', 2.598833643460815e-06], ['">', 2.598833643460815e-06], ['(suf', 2.598833643460815e-06], ['suf;', 2.598833643460815e-06], ['Type_dumper::visit_forward_declaration_type(const', 2.598833643460815e-06], ['fdt)', 2.598833643460815e-06], ['"forward_declaration_type', 2.598833643460815e-06], ['(fdt->is_defined())', 2.598833643460815e-06], ['this->typeref("->', 2.598833643460815e-06], ['fdt->real_type(),', 2.598833643460815e-06], ['fdt->name()', 2.598833643460815e-06], ['"\'";', 2.598833643460815e-06], ['Type_dumper::visit_function_type(const', 2.598833643460815e-06], ['"function\\n";', 2.598833643460815e-06], ['ft->receiver();', 2.598833643460815e-06], ['this->typeref("receiver', 2.598833643460815e-06], ['rec->type(),', 2.598833643460815e-06], ['ft->results();', 2.598833643460815e-06], ['Type_dumper::visit_struct_type(const', 2.598833643460815e-06], ['st)', 2.598833643460815e-06], ['"struct\\n";', 2.598833643460815e-06], ['Type_dumper::visit_array_type(const', 2.598833643460815e-06], ['at)', 2.598833643460815e-06], ['(at->int_length(&len))', 2.598833643460815e-06], ['at->element_type(),', 2.598833643460815e-06], ['Type_dumper::visit_map_type(const', 2.598833643460815e-06], ['mt)', 2.598833643460815e-06], ['mt->val_type(),', 2.598833643460815e-06], ['Type_dumper::visit_methods(const', 2.598833643460815e-06], ['*tag)', 2.598833643460815e-06], ['\'"', 2.598833643460815e-06], ['p->name()', 2.598833643460815e-06], ['Type_dumper::visit_interface_type(const', 2.598833643460815e-06], ['it)', 2.598833643460815e-06], ['(it->methods_are_finalized()', 2.598833643460815e-06], ['it->methods()', 2.598833643460815e-06], ['it->local_methods());', 2.598833643460815e-06], ['"empty_interface\\n";', 2.598833643460815e-06], ['"interface";', 2.598833643460815e-06], ['it->methods_are_finalized())', 2.598833643460815e-06], ['[unfinalized]\\n";', 2.598833643460815e-06], ['"[parse_methods]");', 2.598833643460815e-06], ['visit_methods(it->methods(),', 2.598833643460815e-06], ['"[all_methods]");', 2.598833643460815e-06], ['Type_dumper::visit_channel_type(const', 2.598833643460815e-06], ['ct)', 2.598833643460815e-06], ['"channel', 2.598833643460815e-06], ['(ct->may_send())', 2.598833643460815e-06], ['send";', 2.598833643460815e-06], ['receive";', 2.598833643460815e-06], ['ct->element_type(),', 2.598833643460815e-06], ['Type_dumper::visit()', 2.598833643460815e-06], ['this->worklist_.empty())', 2.598833643460815e-06], ['this->worklist_.front();', 2.598833643460815e-06], ['this->worklist_.pop_front();', 2.598833643460815e-06], ['this->emitpre(tag,', 2.598833643460815e-06], ['switch(t->classification())', 2.598833643460815e-06], ['this->visit_forward_declaration_type(t->forward_declaration_type());', 2.598833643460815e-06], ['this->visit_function_type(t->function_type());', 2.598833643460815e-06], ['this->visit_struct_type(t->struct_type());', 2.598833643460815e-06], ['this->visit_array_type(t->array_type());', 2.598833643460815e-06], ['this->visit_map_type(t->map_type());', 2.598833643460815e-06], ['this->visit_channel_type(t->channel_type());', 2.598833643460815e-06], ['this->visit_interface_type(t->interface_type());', 2.598833643460815e-06], ['"<unknown/unrecognized', 2.598833643460815e-06], ['">\\n";', 2.598833643460815e-06], ['deep', 2.598833643460815e-06], ['opposed', 2.598833643460815e-06], ['shallow', 2.598833643460815e-06], ['dump;', 2.598833643460815e-06], ['debug_go_type(const', 2.598833643460815e-06], ['"<NULL', 2.598833643460815e-06], ['type>\\n";', 2.598833643460815e-06], ['dumper(type);', 2.598833643460815e-06], ['dumper.visit();', 2.598833643460815e-06], ['dumper.stringResult();', 2.598833643460815e-06], ['debug_go_type(Type*', 2.598833643460815e-06], ['debug_go_type(ctype);', 2.598833643460815e-06], ['Platform-independent', 2.598833643460815e-06], ['Alexander', 2.598833643460815e-06], ['Monakov.', 2.598833643460815e-06], ['cases:', 2.598833643460815e-06], ['signature-compatible', 2.598833643460815e-06], ['qsort,', 2.598833643460815e-06], ['relaxed', 2.598833643460815e-06], ['contract:', 2.598833643460815e-06], ['stable)', 2.598833643460815e-06], ['fast,', 2.598833643460815e-06], ['(0-5', 2.598833643460815e-06], ['trading', 2.598833643460815e-06], ['mispredictions.', 2.598833643460815e-06], ['GENERATOR_FILE', 2.598833643460815e-06], ['"bconfig.h"', 2.598833643460815e-06], ['likely(cond)', 2.598833643460815e-06], ['((cond),', 2.598833643460815e-06], ['((__noinline__))', 2.598833643460815e-06], ['qsort', 2.598833643460815e-06], ['read-mostly', 2.598833643460815e-06], ['(read-only', 2.598833643460815e-06], ['netsort)', 2.598833643460815e-06], ['*cmp;', 2.598833643460815e-06], ['*out;', 2.598833643460815e-06], ['nlim;', 2.598833643460815e-06], ['Permute,', 2.598833643460815e-06], ['in-place,', 2.598833643460815e-06], ['C->OUT', 2.598833643460815e-06], ['C->SIZE,', 2.598833643460815e-06], ['REORDER_23(TYPE,', 2.598833643460815e-06], ['2*STRIDE,', 2.598833643460815e-06], ['reorder23,', 2.598833643460815e-06], ['permute', 2.598833643460815e-06], ['*e2,', 2.598833643460815e-06], ['*e3,', 2.598833643460815e-06], ['*e4)', 2.598833643460815e-06], ['REORDER_45(TYPE,', 2.598833643460815e-06], ['t3;', 2.598833643460815e-06], ['(&t2,', 2.598833643460815e-06], ['(&t3,', 2.598833643460815e-06], ['4*STRIDE,', 2.598833643460815e-06], ['e4', 2.598833643460815e-06], ['&t2,', 2.598833643460815e-06], ['&t3,', 2.598833643460815e-06], ['(likely(c->size', 2.598833643460815e-06], ['Invoke', 2.598833643460815e-06], ['E0^E1', 2.598833643460815e-06], ['growth', 2.598833643460815e-06], ['confine', 2.598833643460815e-06], ['invocation', 2.598833643460815e-06], ['site,', 2.598833643460815e-06], ['assisting', 2.598833643460815e-06], ['prediction.', 2.598833643460815e-06], ['(intptr_t)e0', 2.598833643460815e-06], ['(intptr_t)e1;', 2.598833643460815e-06], ['(cmp', 2.598833643460815e-06], ['31);', 2.598833643460815e-06], ['C->OUT.', 2.598833643460815e-06], ['*c)', 2.598833643460815e-06], ['CMP(e0,', 2.598833643460815e-06], ['c->cmp);', 2.598833643460815e-06], ['*)((intptr_t)e0', 2.598833643460815e-06], ['*)((intptr_t)e1', 2.598833643460815e-06], ['*e1', 2.598833643460815e-06], ['*e2', 2.598833643460815e-06], ['*e3', 2.598833643460815e-06], ['*e4', 2.598833643460815e-06], ['(e3,', 2.598833643460815e-06], ['OUT,', 2.598833643460815e-06], ['TMP', 2.598833643460815e-06], ['*out,', 2.598833643460815e-06], ['*tmp)', 2.598833643460815e-06], ['c->nlim))', 2.598833643460815e-06], ['c->n', 2.598833643460815e-06], ['nr', 2.598833643460815e-06], ['*mid', 2.598833643460815e-06], ['*r', 2.598833643460815e-06], ['*l', 2.598833643460815e-06], ['outputting', 2.598833643460815e-06], ['(mid,', 2.598833643460815e-06], ['nr,', 2.598833643460815e-06], ['OUT', 2.598833643460815e-06], ['free.', 2.598833643460815e-06], ['mid);', 2.598833643460815e-06], ['halves', 2.598833643460815e-06], ['L,', 2.598833643460815e-06], ['[OUT,', 2.598833643460815e-06], ['END).', 2.598833643460815e-06], ['MERGE_ELTSIZE(SIZE)', 2.598833643460815e-06], ['c->cmp', 2.598833643460815e-06], ['31;', 2.598833643460815e-06], ['(intptr_t)r;', 2.598833643460815e-06], ['(lr', 2.598833643460815e-06], ['mr);', 2.598833643460815e-06], ['*)memcpy', 2.598833643460815e-06], ['*)lr,', 2.598833643460815e-06], ['SIZE);', 2.598833643460815e-06], ['~mr', 2.598833643460815e-06], ['(c->cmp(r,', 2.598833643460815e-06], ['c->size)', 2.598833643460815e-06], ['(size_t)', 2.598833643460815e-06], ['8))', 2.598833643460815e-06], ['4))', 2.598833643460815e-06], ['(c->size);', 2.598833643460815e-06], ['out);', 2.598833643460815e-06], ['(ssize_t)', 2.598833643460815e-06], ['(stable)', 2.598833643460815e-06], ['~size;', 2.598833643460815e-06], ['*)vbase;', 2.598833643460815e-06], ['{cmp,', 2.598833643460815e-06], ['nlim};', 2.598833643460815e-06], ['scratch[32];', 2.598833643460815e-06], ['xmalloc', 2.598833643460815e-06], ['(bufsz);', 2.598833643460815e-06], ['*)buf);', 2.598833643460815e-06], ['scratch)', 2.598833643460815e-06], ['qsort_chk', 2.598833643460815e-06], ['gcc_stablesort', 2.598833643460815e-06], ['~size,', 2.598833643460815e-06], ['d-frontend.cc', 2.598833643460815e-06], ['"dmd/compiler.h"', 2.598833643460815e-06], ['"dmd/scope.h"', 2.598833643460815e-06], ['Global::_init', 2.598833643460815e-06], ['this->mars_ext', 2.598833643460815e-06], ['"d";', 2.598833643460815e-06], ['this->hdr_ext', 2.598833643460815e-06], ['"di";', 2.598833643460815e-06], ['this->doc_ext', 2.598833643460815e-06], ['"html";', 2.598833643460815e-06], ['this->ddoc_ext', 2.598833643460815e-06], ['"ddoc";', 2.598833643460815e-06], ['this->json_ext', 2.598833643460815e-06], ['"json";', 2.598833643460815e-06], ['this->obj_ext', 2.598833643460815e-06], ['"o";', 2.598833643460815e-06], ['this->run_noext', 2.598833643460815e-06], ['this->version', 2.598833643460815e-06], ['"v"', 2.598833643460815e-06], ['"verstr.h"', 2.598833643460815e-06], ['this->stdmsg', 2.598833643460815e-06], ['stderr;', 2.598833643460815e-06], ['this->errorLimit', 2.598833643460815e-06], ['gagging.', 2.598833643460815e-06], ['Global::startGagging', 2.598833643460815e-06], ['this->gag++;', 2.598833643460815e-06], ['this->gaggedErrors;', 2.598833643460815e-06], ['gagging,', 2.598833643460815e-06], ['restoring', 2.598833643460815e-06], ['Global::endGagging', 2.598833643460815e-06], ['oldGagged)', 2.598833643460815e-06], ['anyErrs', 2.598833643460815e-06], ['this->gag--;', 2.598833643460815e-06], ['errors;', 2.598833643460815e-06], ['ungagged', 2.598833643460815e-06], ['this->errors', 2.598833643460815e-06], ['this->gaggedErrors', 2.598833643460815e-06], ['oldGagged;', 2.598833643460815e-06], ['anyErrs;', 2.598833643460815e-06], ['Global::increaseErrorCount', 2.598833643460815e-06], ['(gag)', 2.598833643460815e-06], ['this->gaggedErrors++;', 2.598833643460815e-06], ['this->errors++;', 2.598833643460815e-06], ['Loc::Loc', 2.598833643460815e-06], ['*filename,', 2.598833643460815e-06], ['linnum,', 2.598833643460815e-06], ['charnum)', 2.598833643460815e-06], ['this->linnum', 2.598833643460815e-06], ['linnum;', 2.598833643460815e-06], ['charnum;', 2.598833643460815e-06], ['this->filename', 2.598833643460815e-06], ['Loc::toChars', 2.598833643460815e-06], ['(this->filename)', 2.598833643460815e-06], ['this->filename);', 2.598833643460815e-06], ['(this->linnum)', 2.598833643460815e-06], ['this->linnum);', 2.598833643460815e-06], ['(this->charnum)', 2.598833643460815e-06], ['this->charnum);', 2.598833643460815e-06], ['Loc::equals', 2.598833643460815e-06], ['(this->linnum', 2.598833643460815e-06], ['loc.linnum', 2.598833643460815e-06], ['loc.charnum)', 2.598833643460815e-06], ['(!FileName::equals', 2.598833643460815e-06], ['(this->filename,', 2.598833643460815e-06], ['loc.filename))', 2.598833643460815e-06], ['Port', 2.598833643460815e-06], ['mini', 2.598833643460815e-06], ['compiler/system', 2.598833643460815e-06], ['things.', 2.598833643460815e-06], ['S1', 2.598833643460815e-06], ['S2', 2.598833643460815e-06], ['Port::memicmp', 2.598833643460815e-06], ['*s1,', 2.598833643460815e-06], ['*s2,', 2.598833643460815e-06], ['s1[i];', 2.598833643460815e-06], ['s2[i];', 2.598833643460815e-06], ['c2;', 2.598833643460815e-06], ['uppercase.', 2.598833643460815e-06], ['Port::strupr', 2.598833643460815e-06], ['(*s)', 2.598833643460815e-06], ['(*s);', 2.598833643460815e-06], ['s++;', 2.598833643460815e-06], ['Port::isFloat32LiteralOutOfRange', 2.598833643460815e-06], ['(float_type_node));', 2.598833643460815e-06], ['Port::isFloat64LiteralOutOfRange', 2.598833643460815e-06], ['(double_type_node));', 2.598833643460815e-06], ['Port::readwordLE', 2.598833643460815e-06], ['p[0];', 2.598833643460815e-06], ['Port::readwordBE', 2.598833643460815e-06], ['p[1];', 2.598833643460815e-06], ['Port::readlongLE', 2.598833643460815e-06], ['p[3]', 2.598833643460815e-06], ['p[0]);', 2.598833643460815e-06], ['Port::readlongBE', 2.598833643460815e-06], ['p[3]);', 2.598833643460815e-06], ['SZ-byte', 2.598833643460815e-06], ['BUFFER,', 2.598833643460815e-06], ['endian-ness.', 2.598833643460815e-06], ['Port::valcpy', 2.598833643460815e-06], ['sz)', 2.598833643460815e-06], ['(sz)', 2.598833643460815e-06], ['*(uint8_t', 2.598833643460815e-06], ['(uint8_t)', 2.598833643460815e-06], ['*(uint16_t', 2.598833643460815e-06], ['(uint16_t)', 2.598833643460815e-06], ['*(uint32_t', 2.598833643460815e-06], ['(uint32_t)', 2.598833643460815e-06], ['*(uint64_t', 2.598833643460815e-06], ['CTFloat', 2.598833643460815e-06], ['Compile-time', 2.598833643460815e-06], ['floating-pointer', 2.598833643460815e-06], ['CTFloat::fabs', 2.598833643460815e-06], ['ABS_EXPR,', 2.598833643460815e-06], ['^^', 2.598833643460815e-06], ['CTFloat::ldexp', 2.598833643460815e-06], ['Y.', 2.598833643460815e-06], ['CTFloat::isIdentical', 2.598833643460815e-06], ['rx', 2.598833643460815e-06], ['x.rv', 2.598833643460815e-06], ['ry', 2.598833643460815e-06], ['y.rv', 2.598833643460815e-06], ['(REAL_VALUE_ISNAN', 2.598833643460815e-06], ['(rx)', 2.598833643460815e-06], ['(ry))', 2.598833643460815e-06], ['real_identical', 2.598833643460815e-06], ['(&rx,', 2.598833643460815e-06], ['&ry);', 2.598833643460815e-06], ['CTFloat::isNaN', 2.598833643460815e-06], ['isNaN,', 2.598833643460815e-06], ['signalling.', 2.598833643460815e-06], ['CTFloat::isSNaN', 2.598833643460815e-06], ['REAL_VALUE_ISSIGNALING_NAN', 2.598833643460815e-06], ['+Inf.', 2.598833643460815e-06], ['CTFloat::isInfinity', 2.598833643460815e-06], ['CTFloat::parse', 2.598833643460815e-06], ['Target::RealProperties::infinity)', 2.598833643460815e-06], ['Format', 2.598833643460815e-06], ['hexadecimal,', 2.598833643460815e-06], ['requests', 2.598833643460815e-06], ['CTFloat::sprint', 2.598833643460815e-06], ['(fmt', 2.598833643460815e-06], ["'A')", 2.598833643460815e-06], ['Converting', 2.598833643460815e-06], ['hexadecimal', 2.598833643460815e-06], ['(fmt)', 2.598833643460815e-06], ['buffer[i]', 2.598833643460815e-06], ['(buffer[i]);', 2.598833643460815e-06], ['restricting', 2.598833643460815e-06], ['18.', 2.598833643460815e-06], ['CTFloat::hash', 2.598833643460815e-06], ['real_hash', 2.598833643460815e-06], ['response', 2.598833643460815e-06], ['main().', 2.598833643460815e-06], ['libdruntime,', 2.598833643460815e-06], ['_Dmain', 2.598833643460815e-06], ['_Dmain.', 2.598833643460815e-06], ['Compiler::genCmain', 2.598833643460815e-06], ['(Scope', 2.598833643460815e-06], ['(initialized)', 2.598833643460815e-06], ['__entrypoint.di,', 2.598833643460815e-06], ['unfound.', 2.598833643460815e-06], ['("__entrypoint"));', 2.598833643460815e-06], ['(global.endGagging', 2.598833643460815e-06], ['(m,', 2.598833643460815e-06], ['sc->_module);', 2.598833643460815e-06], ['Compiler::paintAsType', 2.598833643460815e-06], ['(UnionExp', 2.598833643460815e-06], ['*expr,', 2.598833643460815e-06], ['512-bit', 2.598833643460815e-06], ['buffer[64];', 2.598833643460815e-06], ['(expr->type->isintegral', 2.598833643460815e-06], ['(expr->toInteger', 2.598833643460815e-06], ['(expr->type));', 2.598833643460815e-06], ['(expr->type->isfloating', 2.598833643460815e-06], ['(expr->toReal', 2.598833643460815e-06], ['expr->type);', 2.598833643460815e-06], ['(expr->op', 2.598833643460815e-06], ['VECTOR_CST,', 2.598833643460815e-06], ['expr)->elements;', 2.598833643460815e-06], ['elements->dim);', 2.598833643460815e-06], ['elements->dim;', 2.598833643460815e-06], ['(*elements)[i];', 2.598833643460815e-06], ['(e->type->isintegral', 2.598833643460815e-06], ['(e->toInteger', 2.598833643460815e-06], ['(e->type));', 2.598833643460815e-06], ['(e->type->isfloating', 2.598833643460815e-06], ['(e->toReal', 2.598833643460815e-06], ['expr->type)->dim->toUInteger', 2.598833643460815e-06], ['expr->type->nextOf', 2.598833643460815e-06], ['(telem),', 2.598833643460815e-06], ['native_encode_expr', 2.598833643460815e-06], ['(buffer));', 2.598833643460815e-06], ['type)->dim->toUInteger', 2.598833643460815e-06], ['(elem),', 2.598833643460815e-06], ['TOKvector);', 2.598833643460815e-06], ['((VectorExp', 2.598833643460815e-06], ['e)->e1;', 2.598833643460815e-06], ['gcc.builtins:', 2.598833643460815e-06], ['core.stdc.*:', 2.598833643460815e-06], ['m->md;', 2.598833643460815e-06], ['(!md', 2.598833643460815e-06], ['!md->id', 2.598833643460815e-06], ['!md->packages)', 2.598833643460815e-06], ['md->id)', 2.598833643460815e-06], ['md->id', 2.598833643460815e-06], ['m->ident;', 2.598833643460815e-06], ['(id->toChars', 2.598833643460815e-06], ['"object"))', 2.598833643460815e-06], ['"builtins"))', 2.598833643460815e-06], ['"core")', 2.598833643460815e-06], ['((*md->packages)[1]->toChars', 2.598833643460815e-06], ['"stdc"))', 2.598833643460815e-06], ["caller's", 2.598833643460815e-06], ['retStyle', 2.598833643460815e-06], ['finished.', 2.598833643460815e-06], ['accurate', 2.598833643460815e-06], ['RETstack;', 2.598833643460815e-06], ['BUILTIN', 2.598833643460815e-06], ['isBuiltin', 2.598833643460815e-06], ['ARGUMENTS.', 2.598833643460815e-06], ['eval_builtin', 2.598833643460815e-06], ['BUILTINyes)', 2.598833643460815e-06], ['(fndecl_built_in_p', 2.598833643460815e-06], ['INTRINSIC_NONE);', 2.598833643460815e-06], ['getTypeInfoType', 2.598833643460815e-06], ['sc->_module->importedFrom', 2.598833643460815e-06], ['type->vtinfo->type;', 2.598833643460815e-06], ['inlineCopy', 2.598833643460815e-06], ['e->copy', 2.598833643460815e-06], ['Speculation', 2.598833643460815e-06], ['CVE', 2.598833643460815e-06], ['2017-5753)', 2.598833643460815e-06], ['AArch64.', 2.598833643460815e-06], ['"cfgbuild.h"', 2.598833643460815e-06], ['"print-rtl.h"', 2.598833643460815e-06], ['"insn-attr.h"', 2.598833643460815e-06], ['"insn-config.h"', 2.598833643460815e-06], ['re-organisation', 2.598833643460815e-06], ['aim', 2.598833643460815e-06], ['reserve', 2.598833643460815e-06], ['call-clobbered', 2.598833643460815e-06], ['(so', 2.598833643460815e-06], ['prologue)', 2.598833643460815e-06], ['subject', 2.598833643460815e-06], ['true).', 2.598833643460815e-06], ['predicted', 2.598833643460815e-06], ['diverges', 2.598833643460815e-06], ['architectural', 2.598833643460815e-06], ['behavior,', 2.598833643460815e-06], ['otherwise).', 2.598833643460815e-06], ['guarding', 2.598833643460815e-06], ['speculation.', 2.598833643460815e-06], ['ways,', 2.598833643460815e-06], ['trusted', 2.598833643460815e-06], ['speculating,', 2.598833643460815e-06], ['correctly,', 2.598833643460815e-06], ['unchanged,', 2.598833643460815e-06], ['clamped', 2.598833643460815e-06], ['scenarios', 2.598833643460815e-06], ['alternate', 2.598833643460815e-06], ['CSDB', 2.598833643460815e-06], ['speculation,', 2.598833643460815e-06], ['protecting', 2.598833643460815e-06], ['vulnerable', 2.598833643460815e-06], ['CSDB:', 2.598833643460815e-06], ['updated.', 2.598833643460815e-06], ['boundaries,', 2.598833643460815e-06], ['communicate', 2.598833643460815e-06], ['callee.', 2.598833643460815e-06], ['programs', 2.598833643460815e-06], ['boundary;', 2.598833643460815e-06], ['BL', 2.598833643460815e-06], ['<callee>', 2.598833643460815e-06], ['#0', 2.598833643460815e-06], ['CSETM', 2.598833643460815e-06], ['prologue', 2.598833643460815e-06], ['re-encode', 2.598833643460815e-06], ['hence', 2.598833643460815e-06], ['need:', 2.598833643460815e-06], ['ability', 2.598833643460815e-06], ['architecturally', 2.598833643460815e-06], ['Tracking', 2.598833643460815e-06], ['expensive,', 2.598833643460815e-06], ['employ', 2.598833643460815e-06], ['tricks', 2.598833643460815e-06], ['tracker)', 2.598833643460815e-06], ['tracker:', 2.598833643460815e-06], ['duration', 2.598833643460815e-06], ['tail-call.', 2.598833643460815e-06], ['Back-to-back', 2.598833643460815e-06], ['re-establish', 2.598833643460815e-06], ['Again,', 2.598833643460815e-06], ['period', 2.598833643460815e-06], ['reorganization', 2.598833643460815e-06], ['insertion', 2.598833643460815e-06], ['reorg', 2.598833643460815e-06], ['horrible.', 2.598833643460815e-06], ['incorreclty.', 2.598833643460815e-06], ['SPECULATION_SCRATCH_REGNUM);', 2.598833643460815e-06], ['sp));', 2.598833643460815e-06], ['(gen_anddi3', 2.598833643460815e-06], ['scratch,', 2.598833643460815e-06], ['tracker));', 2.598833643460815e-06], ['(sp,', 2.598833643460815e-06], ['scratch));', 2.598833643460815e-06], ['aarch64_gen_compare_reg', 2.598833643460815e-06], ['sp,', 2.598833643460815e-06], ['(gen_cstoredi_neg', 2.598833643460815e-06], ['(tracker,', 2.598833643460815e-06], ['gen_rtx_NE', 2.598833643460815e-06], ['(CCmode,', 2.598833643460815e-06], ['cc,', 2.598833643460815e-06], ['const0_rtx),', 2.598833643460815e-06], ['cc));', 2.598833643460815e-06], ['fixups_pending', 2.598833643460815e-06], ['"Basic', 2.598833643460815e-06], ['%d:\\n",', 2.598833643460815e-06], ['(control_flow_insn_p', 2.598833643460815e-06], ['condjump\\n");', 2.598833643460815e-06], ['SET_SRC', 2.598833643460815e-06], ['(pc_set', 2.598833643460815e-06], ['PC;', 2.598833643460815e-06], ['instructions).', 2.598833643460815e-06], ['!inverted))', 2.598833643460815e-06], ['PC);', 2.598833643460815e-06], ['(COMPARISON_P', 2.598833643460815e-06], ['CC_REGNUM', 2.598833643460815e-06], ['inv_cond_code', 2.598833643460815e-06], ['(inv_cond_code', 2.598833643460815e-06], ['UNKNOWN);', 2.598833643460815e-06], ['inv_cond', 2.598833643460815e-06], ['(inv_cond_code,', 2.598833643460815e-06], ['(inverted)', 2.598833643460815e-06], ['inv_cond);', 2.598833643460815e-06], ['(inv_cond),', 2.598833643460815e-06], ['(needs_tracking', 2.598833643460815e-06], ['need_second_pass)', 2.598833643460815e-06], ['(find_reg_note', 2.598833643460815e-06], ['REG_NON_LOCAL_GOTO,', 2.598833643460815e-06], ['NULL_RTX))', 2.598833643460815e-06], ['other\\n");', 2.598833643460815e-06], ['*call_insn', 2.598833643460815e-06], ['(bb->flags', 2.598833643460815e-06], ['BB_NON_LOCAL_GOTO_TARGET)', 2.598833643460815e-06], ['fixup', 2.598833643460815e-06], ['(LABEL_P', 2.598833643460815e-06], ['(NOTE_INSN_BASIC_BLOCK_P', 2.598833643460815e-06], ['restore', 2.598833643460815e-06], ['transfers', 2.598833643460815e-06], ['eliminate,', 2.598833643460815e-06], ['recog_memoized', 2.598833643460815e-06], ['(get_attr_speculation_barrier', 2.598833643460815e-06], ['SPECULATION_BARRIER_TRUE))', 2.598833643460815e-06], ['tailcall', 2.598833643460815e-06], ['NULL_RTX));', 2.598833643460815e-06], ['Tailcalls', 2.598833643460815e-06], ['returns,', 2.598833643460815e-06], ['tracking.', 2.598833643460815e-06], ['(tailcall', 2.598833643460815e-06], ['(need_second_pass', 2.598833643460815e-06], ['!needs_tracking))', 2.598833643460815e-06], ['sequences.', 2.598833643460815e-06], ['(!call_insn)', 2.598833643460815e-06], ['(aarch64_speculation_clobber_sp', 2.598833643460815e-06], ['Tail-calls', 2.598833643460815e-06], ['no-return', 2.598833643460815e-06], ['reestablishment', 2.598833643460815e-06], ['tracker.', 2.598833643460815e-06], ['tailcall)', 2.598833643460815e-06], ['placement', 2.598833643460815e-06], ['non-debug', 2.598833643460815e-06], ['builds.', 2.598833643460815e-06], ['call_insn;', 2.598833643460815e-06], ['DEBUG_INSN_P', 2.598833643460815e-06], ['(NEXT_INSN', 2.598833643460815e-06], ['find_fallthru_edge', 2.598833643460815e-06], ['exceptions,', 2.598833643460815e-06], ['commit', 2.598833643460815e-06], ['Sometimes,', 2.598833643460815e-06], ['eg', 2.598833643460815e-06], ['OMP,', 2.598833643460815e-06], ['(e)', 2.598833643460815e-06], ['INSN_P', 2.598833643460815e-06], ['(seq))', 2.598833643460815e-06], ['(seq);', 2.598833643460815e-06], ['*list', 2.598833643460815e-06], ['(list))', 2.598833643460815e-06], ['(list)', 2.598833643460815e-06], ['(call_insn);', 2.598833643460815e-06], ['(needs_tracking)', 2.598833643460815e-06], ['(need_second_pass)', 2.598833643460815e-06], ['((control_flow_insn_p', 2.598833643460815e-06], ['NULL_RTX))))', 2.598833643460815e-06], ['fixups_pending--;', 2.598833643460815e-06], ['(fixups_pending', 2.598833643460815e-06], ['single_succ_edge', 2.598833643460815e-06], ['(cfun)));', 2.598833643460815e-06], ['pass_data_aarch64_track_speculation', 2.598833643460815e-06], ['"speculation",', 2.598833643460815e-06], ['optinfo_flags.', 2.598833643460815e-06], ['TV_MACH_DEP,', 2.598833643460815e-06], ['tv_id.', 2.598833643460815e-06], ['properties_required.', 2.598833643460815e-06], ['properties_provided.', 2.598833643460815e-06], ['properties_destroyed.', 2.598833643460815e-06], ['todo_flags_start.', 2.598833643460815e-06], ['todo_flags_finish.', 2.598833643460815e-06], ['pass_track_speculation(gcc::context', 2.598833643460815e-06], ['rtl_opt_pass(pass_data_aarch64_track_speculation,', 2.598833643460815e-06], ['aarch64_track_speculation;', 2.598833643460815e-06], ['pass_track_speculation.', 2.598833643460815e-06], ['make_pass_track_speculation', 2.598833643460815e-06], ['Optimization', 2.598833643460815e-06], ['TEXT.', 2.598833643460815e-06], ['optinfo_item::optinfo_item', 2.598833643460815e-06], ['optinfo_item_kind', 2.598833643460815e-06], ['*text)', 2.598833643460815e-06], ['(kind),', 2.598833643460815e-06], ['m_location', 2.598833643460815e-06], ['(location),', 2.598833643460815e-06], ['m_text', 2.598833643460815e-06], ['(text)', 2.598833643460815e-06], ['optinfo_item::~optinfo_item', 2.598833643460815e-06], ['(m_text);', 2.598833643460815e-06], ['"success";', 2.598833643460815e-06], ['"failure";', 2.598833643460815e-06], ['"note";', 2.598833643460815e-06], ['"scope";', 2.598833643460815e-06], ['optinfo::~optinfo', 2.598833643460815e-06], ['Cleanup.', 2.598833643460815e-06], ['item;', 2.598833643460815e-06], ['ITEM', 2.598833643460815e-06], ['optinfo::add_item', 2.598833643460815e-06], ['(optinfo_item', 2.598833643460815e-06], ['*item)', 2.598833643460815e-06], ['m_items.safe_push', 2.598833643460815e-06], ['MSG_*', 2.598833643460815e-06], ['MSG_OPTIMIZED_LOCATIONS;', 2.598833643460815e-06], ['MSG_MISSED_OPTIMIZATION;', 2.598833643460815e-06], ['MSG_NOTE;', 2.598833643460815e-06], ['*and*', 2.598833643460815e-06], ['optinfo::emit_for_opt_problem', 2.598833643460815e-06], ['(get_kind', 2.598833643460815e-06], ['().dump_loc_immediate', 2.598833643460815e-06], ['(dump_kind,', 2.598833643460815e-06], ['get_user_location', 2.598833643460815e-06], ['().emit_item', 2.598833643460815e-06], ['(item,', 2.598833643460815e-06], ['dump_kind);', 2.598833643460815e-06], ['().emit_optinfo', 2.598833643460815e-06], ['DUMP_KIND.', 2.598833643460815e-06], ['optinfo::handle_dump_file_kind', 2.598833643460815e-06], ['dump_kind)', 2.598833643460815e-06], ['"scope"', 2.598833643460815e-06], ['(m_kind', 2.598833643460815e-06], ['OPTINFO_KIND_SCOPE);', 2.598833643460815e-06], ['MSG_OPTIMIZED_LOCATIONS)', 2.598833643460815e-06], ['OPTINFO_KIND_SUCCESS;', 2.598833643460815e-06], ['MSG_MISSED_OPTIMIZATION)', 2.598833643460815e-06], ['OPTINFO_KIND_FAILURE;', 2.598833643460815e-06], ['MSG_NOTE)', 2.598833643460815e-06], ['OPTINFO_KIND_NOTE;', 2.598833643460815e-06], ['preserved).', 2.598833643460815e-06], ['optinfo_wants_inlining_info_p', 2.598833643460815e-06], ['().optimization_records_enabled_p', 2.598833643460815e-06], ['lex.cc', 2.598833643460815e-06], ['lexer.', 2.598833643460815e-06], ['Manage', 2.598833643460815e-06], ['keystring;', 2.598833643460815e-06], ['keycode;', 2.598833643460815e-06], ['parsecode', 2.598833643460815e-06], ['KEYSTRING,', 2.598833643460815e-06], ['keyword_to_code(const', 2.598833643460815e-06], ['keyword_to_string(Keyword)', 2.598833643460815e-06], ['mapping_[];', 2.598833643460815e-06], ['count_;', 2.598833643460815e-06], ['Keywords::Mapping', 2.598833643460815e-06], ['Keywords::mapping_[]', 2.598833643460815e-06], ['"__asm__",', 2.598833643460815e-06], ['KEYWORD_ASM', 2.598833643460815e-06], ['KEYWORD_BREAK', 2.598833643460815e-06], ['"case",', 2.598833643460815e-06], ['KEYWORD_CASE', 2.598833643460815e-06], ['"chan",', 2.598833643460815e-06], ['KEYWORD_CHAN', 2.598833643460815e-06], ['"const",', 2.598833643460815e-06], ['KEYWORD_CONST', 2.598833643460815e-06], ['KEYWORD_CONTINUE', 2.598833643460815e-06], ['"default",', 2.598833643460815e-06], ['KEYWORD_DEFAULT', 2.598833643460815e-06], ['"defer",', 2.598833643460815e-06], ['KEYWORD_DEFER', 2.598833643460815e-06], ['"else",', 2.598833643460815e-06], ['KEYWORD_ELSE', 2.598833643460815e-06], ['"fallthrough",', 2.598833643460815e-06], ['KEYWORD_FALLTHROUGH', 2.598833643460815e-06], ['"for",', 2.598833643460815e-06], ['KEYWORD_FOR', 2.598833643460815e-06], ['"func",', 2.598833643460815e-06], ['KEYWORD_FUNC', 2.598833643460815e-06], ['"go",', 2.598833643460815e-06], ['KEYWORD_GO', 2.598833643460815e-06], ['"goto",', 2.598833643460815e-06], ['KEYWORD_GOTO', 2.598833643460815e-06], ['"if",', 2.598833643460815e-06], ['KEYWORD_IF', 2.598833643460815e-06], ['"import",', 2.598833643460815e-06], ['KEYWORD_IMPORT', 2.598833643460815e-06], ['"interface",', 2.598833643460815e-06], ['KEYWORD_INTERFACE', 2.598833643460815e-06], ['"map",', 2.598833643460815e-06], ['KEYWORD_MAP', 2.598833643460815e-06], ['"package",', 2.598833643460815e-06], ['KEYWORD_PACKAGE', 2.598833643460815e-06], ['"range",', 2.598833643460815e-06], ['KEYWORD_RANGE', 2.598833643460815e-06], ['"return",', 2.598833643460815e-06], ['KEYWORD_RETURN', 2.598833643460815e-06], ['"select",', 2.598833643460815e-06], ['KEYWORD_SELECT', 2.598833643460815e-06], ['"struct",', 2.598833643460815e-06], ['KEYWORD_STRUCT', 2.598833643460815e-06], ['"switch",', 2.598833643460815e-06], ['KEYWORD_SWITCH', 2.598833643460815e-06], ['"type",', 2.598833643460815e-06], ['KEYWORD_TYPE', 2.598833643460815e-06], ['"var",', 2.598833643460815e-06], ['KEYWORD_VAR', 2.598833643460815e-06], ['Keywords::count_', 2.598833643460815e-06], ['sizeof(Keywords::mapping_)', 2.598833643460815e-06], ['sizeof(Keywords::mapping_[0]);', 2.598833643460815e-06], ['str;', 2.598833643460815e-06], ['keyword_compare(const', 2.598833643460815e-06], ['keyv,', 2.598833643460815e-06], ['mapv)', 2.598833643460815e-06], ['Keywords_search_key*', 2.598833643460815e-06], ['Keywords_search_key*>(keyv);', 2.598833643460815e-06], ['Keywords::Mapping*', 2.598833643460815e-06], ['Keywords::Mapping*>(mapv);', 2.598833643460815e-06], ['(map->keystring', 2.598833643460815e-06], ['strncmp(key->str,', 2.598833643460815e-06], ['map->keystring,', 2.598833643460815e-06], ['key->len);', 2.598833643460815e-06], ['(map->keystring[key->len]', 2.598833643460815e-06], ['Keywords::keyword_to_code(const', 2.598833643460815e-06], ['key.str', 2.598833643460815e-06], ['keyword;', 2.598833643460815e-06], ['key.len', 2.598833643460815e-06], ['mapv', 2.598833643460815e-06], ['bsearch(&key,', 2.598833643460815e-06], ['this->mapping_,', 2.598833643460815e-06], ['this->count_,', 2.598833643460815e-06], ['sizeof(this->mapping_[0]),', 2.598833643460815e-06], ['keyword_compare);', 2.598833643460815e-06], ['(mapv', 2.598833643460815e-06], ['KEYWORD_INVALID;', 2.598833643460815e-06], ['static_cast<Mapping*>(mapv);', 2.598833643460815e-06], ['map->keycode;', 2.598833643460815e-06], ['Keywords::keyword_to_string(Keyword', 2.598833643460815e-06], ['this->count_);', 2.598833643460815e-06], ['&this->mapping_[code];', 2.598833643460815e-06], ['go_assert(map->keycode', 2.598833643460815e-06], ['map->keystring;', 2.598833643460815e-06], ['keywords;', 2.598833643460815e-06], ['Token.', 2.598833643460815e-06], ['Token::Token(Classification', 2.598833643460815e-06], ['Destroy', 2.598833643460815e-06], ['Token::~Token()', 2.598833643460815e-06], ['token--release', 2.598833643460815e-06], ['Token::clear()', 2.598833643460815e-06], ['TOKEN_INTEGER', 2.598833643460815e-06], ['TOKEN_CHARACTER)', 2.598833643460815e-06], ['mpz_clear(this->u_.integer_value);', 2.598833643460815e-06], ['TOKEN_FLOAT', 2.598833643460815e-06], ['TOKEN_IMAGINARY)', 2.598833643460815e-06], ['mpfr_clear(this->u_.float_value);', 2.598833643460815e-06], ['Token::Token(const', 2.598833643460815e-06], ['classification_(tok.classification_),', 2.598833643460815e-06], ['location_(tok.location_)', 2.598833643460815e-06], ['Token::operator=(const', 2.598833643460815e-06], ['tok.classification_;', 2.598833643460815e-06], ['this->location_', 2.598833643460815e-06], ['tok.location_;', 2.598833643460815e-06], ['(tok.classification_)', 2.598833643460815e-06], ['this->u_.identifier_value.name', 2.598833643460815e-06], ['tok.u_.identifier_value.name;', 2.598833643460815e-06], ['this->u_.identifier_value.is_exported', 2.598833643460815e-06], ['tok.u_.identifier_value.is_exported;', 2.598833643460815e-06], ['Token::print(FILE*', 2.598833643460815e-06], ['file)', 2.598833643460815e-06], ['"EOF");', 2.598833643460815e-06], ['"keyword', 2.598833643460815e-06], ['keywords.keyword_to_string(this->u_.keyword));', 2.598833643460815e-06], ['"identifier', 2.598833643460815e-06], ['"quoted', 2.598833643460815e-06], ['"character', 2.598833643460815e-06], ['"imaginary', 2.598833643460815e-06], ['"operator', 2.598833643460815e-06], ['(this->u_.op)', 2.598833643460815e-06], ['OPERATOR_INVALID:', 2.598833643460815e-06], ['"||");', 2.598833643460815e-06], ['"&&");', 2.598833643460815e-06], ['"==");', 2.598833643460815e-06], ['"!=");', 2.598833643460815e-06], ['"<");', 2.598833643460815e-06], ['"<=");', 2.598833643460815e-06], ['">");', 2.598833643460815e-06], ['">=");', 2.598833643460815e-06], ['"+");', 2.598833643460815e-06], ['"-");', 2.598833643460815e-06], ['"|");', 2.598833643460815e-06], ['"^");', 2.598833643460815e-06], ['"*");', 2.598833643460815e-06], ['"/");', 2.598833643460815e-06], ['"%%");', 2.598833643460815e-06], ['"<<");', 2.598833643460815e-06], ['">>");', 2.598833643460815e-06], ['"&");', 2.598833643460815e-06], ['"&^");', 2.598833643460815e-06], ['"!");', 2.598833643460815e-06], ['"<-");', 2.598833643460815e-06], ['OPERATOR_EQ:', 2.598833643460815e-06], ['"=");', 2.598833643460815e-06], ['"+=");', 2.598833643460815e-06], ['"-=");', 2.598833643460815e-06], ['"|=");', 2.598833643460815e-06], ['"^=");', 2.598833643460815e-06], ['"*=");', 2.598833643460815e-06], ['"/=");', 2.598833643460815e-06], ['"%%=");', 2.598833643460815e-06], ['"<<=");', 2.598833643460815e-06], ['">>=");', 2.598833643460815e-06], ['"&=");', 2.598833643460815e-06], ['"&^=");', 2.598833643460815e-06], ['"++");', 2.598833643460815e-06], ['"--");', 2.598833643460815e-06], ['":");', 2.598833643460815e-06], ['":=");', 2.598833643460815e-06], ['";");', 2.598833643460815e-06], ['".");', 2.598833643460815e-06], ['"(");', 2.598833643460815e-06], ['")");', 2.598833643460815e-06], ['"{");', 2.598833643460815e-06], ['"}");', 2.598833643460815e-06], ['"[");', 2.598833643460815e-06], ['"]");', 2.598833643460815e-06], ['Lex.', 2.598833643460815e-06], ['Lex::Lex(const', 2.598833643460815e-06], ['input_file_name,', 2.598833643460815e-06], ['input_file,', 2.598833643460815e-06], ['linemap)', 2.598833643460815e-06], ['input_file_name_(input_file_name),', 2.598833643460815e-06], ['input_file_(input_file),', 2.598833643460815e-06], ['linebuf_(NULL),', 2.598833643460815e-06], ['linebufsize_(120),', 2.598833643460815e-06], ['linesize_(0),', 2.598833643460815e-06], ['lineoff_(0),', 2.598833643460815e-06], ['lineno_(0),', 2.598833643460815e-06], ['add_semi_at_eol_(false),', 2.598833643460815e-06], ['extern_(),', 2.598833643460815e-06], ['linknames_(NULL)', 2.598833643460815e-06], ['char[this->linebufsize_];', 2.598833643460815e-06], ['this->linemap_->start_file(input_file_name,', 2.598833643460815e-06], ['Lex::~Lex()', 2.598833643460815e-06], ['Lex::get_line()', 2.598833643460815e-06], ['this->linebufsize_;', 2.598833643460815e-06], ['this->input_file_;', 2.598833643460815e-06], ['getc(file);', 2.598833643460815e-06], ['(ns', 2.598833643460815e-06], ['static_cast<ssize_t>(ns)', 2.598833643460815e-06], ['"out', 2.598833643460815e-06], ['memory");', 2.598833643460815e-06], ['nb', 2.598833643460815e-06], ['char[ns];', 2.598833643460815e-06], ['memcpy(nb,', 2.598833643460815e-06], ['nb;', 2.598833643460815e-06], ['++cur;', 2.598833643460815e-06], ['this->linebufsize_', 2.598833643460815e-06], ['cur;', 2.598833643460815e-06], ['line,', 2.598833643460815e-06], ['Lex::require_line()', 2.598833643460815e-06], ['(this->lineoff_', 2.598833643460815e-06], ['this->linesize_)', 2.598833643460815e-06], ['this->get_line();', 2.598833643460815e-06], ['++this->lineno_;', 2.598833643460815e-06], ['this->linesize_=', 2.598833643460815e-06], ['this->linemap_->start_line(this->lineno_,', 2.598833643460815e-06], ['this->linesize_);', 2.598833643460815e-06], ['Lex::location()', 2.598833643460815e-06], ['tokens.', 2.598833643460815e-06], ['Lex::earlier_location(int', 2.598833643460815e-06], ['chars)', 2.598833643460815e-06], ['Lex::next_token()', 2.598833643460815e-06], ['this->make_eof_token();', 2.598833643460815e-06], ['(!saw_cpp_comment)', 2.598833643460815e-06], ['(cc)', 2.598833643460815e-06], ['quickly.', 2.598833643460815e-06], ['this->skip_cpp_comment();', 2.598833643460815e-06], ['(p[-1]', 2.598833643460815e-06], ['found_newline', 2.598833643460815e-06], ['(!this->skip_c_comment(&found_newline))', 2.598833643460815e-06], ['Token::make_invalid_token(location);', 2.598833643460815e-06], ['(found_newline', 2.598833643460815e-06], ['this->make_operator(OPERATOR_DIVEQ,', 2.598833643460815e-06], ['this->make_operator(OPERATOR_DIV,', 2.598833643460815e-06], ['this->gather_character();', 2.598833643460815e-06], ['this->gather_string();', 2.598833643460815e-06], ["'`':", 2.598833643460815e-06], ['this->gather_raw_string();', 2.598833643460815e-06], ['this->three_character_operator(cc,', 2.598833643460815e-06], ['p[1],', 2.598833643460815e-06], ['p[2]);', 2.598833643460815e-06], ['this->two_character_operator(cc,', 2.598833643460815e-06], ['p[1]);', 2.598833643460815e-06], ['chars;', 2.598833643460815e-06], ['this->one_character_operator(cc);', 2.598833643460815e-06], ['this->make_operator(OPERATOR_ELLIPSIS,', 2.598833643460815e-06], ['this->make_operator(OPERATOR_DOT,', 2.598833643460815e-06], ['*pnext', 2.598833643460815e-06], ['(ci', 2.598833643460815e-06], ['0xfeff)', 2.598833643460815e-06], ['(Lex::is_unicode_letter(ci))', 2.598833643460815e-06], ['file",', 2.598833643460815e-06], ['Lex::fetch_char(const', 2.598833643460815e-06], ['0xe0)', 2.598833643460815e-06], ['0x1f)', 2.598833643460815e-06], ['0xf0)', 2.598833643460815e-06], ['0xf)', 2.598833643460815e-06], ['0xf8)', 2.598833643460815e-06], ['18)', 2.598833643460815e-06], ['((p[2]', 2.598833643460815e-06], ['issued.', 2.598833643460815e-06], ['Lex::advance_one_utf8_char(const', 2.598833643460815e-06], ['byte");', 2.598833643460815e-06], ['mark,', 2.598833643460815e-06], ['0xfeff', 2.598833643460815e-06], ['(this->lineno_', 2.598833643460815e-06], ['"Unicode', 2.598833643460815e-06], ['(UTF-8)', 2.598833643460815e-06], ['BOM', 2.598833643460815e-06], ['Lex::gather_identifier()', 2.598833643460815e-06], ['cc);', 2.598833643460815e-06], ['(!Lex::is_invalid_identifier(buf))', 2.598833643460815e-06], ['buf.push_back(cc);', 2.598833643460815e-06], ['(!Lex::is_unicode_letter(ci)', 2.598833643460815e-06], ['!Lex::is_unicode_digit(ci))', 2.598833643460815e-06], ['(is_invalid', 2.598833643460815e-06], ['!Lex::is_invalid_identifier(buf))', 2.598833643460815e-06], ['buf.append(p,', 2.598833643460815e-06], ['Token::make_identifier_token(buf,', 2.598833643460815e-06], ['keywords.keyword_to_code(pstart,', 2.598833643460815e-06], ['KEYWORD_INVALID)', 2.598833643460815e-06], ['Token::make_identifier_token(std::string(pstart,', 2.598833643460815e-06], ['pstart),', 2.598833643460815e-06], ['KEYWORD_FALLTHROUGH:', 2.598833643460815e-06], ['Token::make_keyword_token(code,', 2.598833643460815e-06], ['Lex::is_hex_digit(char', 2.598833643460815e-06], ["'F')", 2.598833643460815e-06], ["'f'));", 2.598833643460815e-06], ['Lex::hex_val', 2.598833643460815e-06], ['hex_value_lookup_table[256]', 2.598833643460815e-06], ['SOH', 2.598833643460815e-06], ['STX', 2.598833643460815e-06], ['ETX', 2.598833643460815e-06], ['EOT', 2.598833643460815e-06], ['ENQ', 2.598833643460815e-06], ['ACK', 2.598833643460815e-06], ['BEL', 2.598833643460815e-06], ['BS', 2.598833643460815e-06], ['HT', 2.598833643460815e-06], ['LF', 2.598833643460815e-06], ['VT', 2.598833643460815e-06], ['FF', 2.598833643460815e-06], ['CR', 2.598833643460815e-06], ['SO', 2.598833643460815e-06], ['SI', 2.598833643460815e-06], ['DLE', 2.598833643460815e-06], ['DC1', 2.598833643460815e-06], ['DC2', 2.598833643460815e-06], ['DC3', 2.598833643460815e-06], ['DC4', 2.598833643460815e-06], ['NAK', 2.598833643460815e-06], ['SYN', 2.598833643460815e-06], ['ETB', 2.598833643460815e-06], ['CAN', 2.598833643460815e-06], ['EM', 2.598833643460815e-06], ['SUB', 2.598833643460815e-06], ['ESC', 2.598833643460815e-06], ['FS', 2.598833643460815e-06], ['GS', 2.598833643460815e-06], ['RS', 2.598833643460815e-06], ['US', 2.598833643460815e-06], ['$', 2.598833643460815e-06], ['6', 2.598833643460815e-06], ['`', 2.598833643460815e-06], ['Lex::hex_val(char', 2.598833643460815e-06], ['hex_value_lookup_table[static_cast<unsigned', 2.598833643460815e-06], ['char>(c)];', 2.598833643460815e-06], ['P.', 2.598833643460815e-06], ['Lex::could_be_exponent(const', 2.598833643460815e-06], ["'e'", 2.598833643460815e-06], ["'E')", 2.598833643460815e-06], ["'9';", 2.598833643460815e-06], ['Lex::gather_number()', 2.598833643460815e-06], ["'X')", 2.598833643460815e-06], ['(!Lex::is_hex_digit(*p))', 2.598833643460815e-06], ['pend)))', 2.598833643460815e-06], ['(!dot)', 2.598833643460815e-06], ['(dot', 2.598833643460815e-06], ['Lex::could_be_exponent(p,', 2.598833643460815e-06], ['mpfr_init_set_str(val,', 2.598833643460815e-06], ['is_imaginary', 2.598833643460815e-06], ["'i';", 2.598833643460815e-06], ['Token::make_imaginary_token(val,', 2.598833643460815e-06], ['Token::make_float_token(val,', 2.598833643460815e-06], ['escaped.', 2.598833643460815e-06], ['*IS_CHARACTER', 2.598833643460815e-06], ["'\\u1234')", 2.598833643460815e-06], ["'\\001').", 2.598833643460815e-06], ['Lex::advance_one_char(const', 2.598833643460815e-06], ['is_single_quote,', 2.598833643460815e-06], ['is_character)', 2.598833643460815e-06], ['(is_single_quote', 2.598833643460815e-06], ["'\\''", 2.598833643460815e-06], ['!issued_error)', 2.598833643460815e-06], ["'7')", 2.598833643460815e-06], ['((Lex::octal_value(p[0])', 2.598833643460815e-06], ['(Lex::octal_value(p[1])', 2.598833643460815e-06], ['Lex::octal_value(p[2]));', 2.598833643460815e-06], ['255)', 2.598833643460815e-06], ['255;', 2.598833643460815e-06], ['(Lex::hex_val(p[1])', 2.598833643460815e-06], ['Lex::hex_val(p[2]);', 2.598833643460815e-06], ["'\\a';", 2.598833643460815e-06], ["'\\b';", 2.598833643460815e-06], ["'\\f';", 2.598833643460815e-06], ["'\\r';", 2.598833643460815e-06], ["'\\v';", 2.598833643460815e-06], ['(!is_single_quote)', 2.598833643460815e-06], ['(is_single_quote)', 2.598833643460815e-06], ['Lex::is_hex_digit(p[4]))', 2.598833643460815e-06], ['Lex::hex_val(p[4]));', 2.598833643460815e-06], ['Lex::is_hex_digit(p[4])', 2.598833643460815e-06], ['Lex::is_hex_digit(p[5])', 2.598833643460815e-06], ['Lex::is_hex_digit(p[6])', 2.598833643460815e-06], ['Lex::is_hex_digit(p[7])', 2.598833643460815e-06], ['Lex::is_hex_digit(p[8]))', 2.598833643460815e-06], ['28)', 2.598833643460815e-06], ['20)', 2.598833643460815e-06], ['(Lex::hex_val(p[4])', 2.598833643460815e-06], ['(Lex::hex_val(p[5])', 2.598833643460815e-06], ['(Lex::hex_val(p[6])', 2.598833643460815e-06], ['(Lex::hex_val(p[7])', 2.598833643460815e-06], ['Lex::hex_val(p[8]));', 2.598833643460815e-06], ['0x10ffff', 2.598833643460815e-06], ['0xe000))', 2.598833643460815e-06], ['9;', 2.598833643460815e-06], ['%<\\\\%>");', 2.598833643460815e-06], ['STR.', 2.598833643460815e-06], ['IS_CHARACTER', 2.598833643460815e-06], ['UTF-8,', 2.598833643460815e-06], ['Lex::append_char(unsigned', 2.598833643460815e-06], ['buf[4];', 2.598833643460815e-06], ['!is_character)', 2.598833643460815e-06], ['0x10ffff)', 2.598833643460815e-06], ['"replacement', 2.598833643460815e-06], ['character".', 2.598833643460815e-06], ['surrogate', 2.598833643460815e-06], ['pair",', 2.598833643460815e-06], ['18);', 2.598833643460815e-06], ['buf[3]', 2.598833643460815e-06], ['str->append(buf,', 2.598833643460815e-06], ['Lex::gather_character()', 2.598833643460815e-06], ['++this->lineoff_;', 2.598833643460815e-06], ["'\\'')", 2.598833643460815e-06], ['this->make_invalid_token();', 2.598833643460815e-06], ['mpz_init_set_ui(val,', 2.598833643460815e-06], ['Token::make_character_token(val,', 2.598833643460815e-06], ['Lex::gather_string()', 2.598833643460815e-06], ['Lex::gather_raw_string()', 2.598833643460815e-06], ['"Carriage', 2.598833643460815e-06], ["('\\r')", 2.598833643460815e-06], ['value."', 2.598833643460815e-06], ['C3', 2.598833643460815e-06], ['Lex::three_character_operator(char', 2.598833643460815e-06], ['c2,', 2.598833643460815e-06], ['c3)', 2.598833643460815e-06], ['(c3', 2.598833643460815e-06], ['OPERATOR_LSHIFTEQ;', 2.598833643460815e-06], ['OPERATOR_RSHIFTEQ;', 2.598833643460815e-06], ['OPERATOR_BITCLEAREQ;', 2.598833643460815e-06], ['Lex::two_character_operator(char', 2.598833643460815e-06], ["'|')", 2.598833643460815e-06], ['OPERATOR_OREQ;', 2.598833643460815e-06], ["'&')", 2.598833643460815e-06], ['OPERATOR_ANDEQ;', 2.598833643460815e-06], ['OPERATOR_XOREQ;', 2.598833643460815e-06], ['OPERATOR_CHANOP;', 2.598833643460815e-06], ['OPERATOR_MULTEQ;', 2.598833643460815e-06], ['OPERATOR_DIVEQ;', 2.598833643460815e-06], ['OPERATOR_MODEQ;', 2.598833643460815e-06], ['OPERATOR_PLUSPLUS;', 2.598833643460815e-06], ['OPERATOR_PLUSEQ;', 2.598833643460815e-06], ['OPERATOR_MINUSMINUS;', 2.598833643460815e-06], ['OPERATOR_COLONEQ;', 2.598833643460815e-06], ['Lex::one_character_operator(char', 2.598833643460815e-06], ['OPERATOR_EQ;', 2.598833643460815e-06], ['OPERATOR_COLON;', 2.598833643460815e-06], ['OPERATOR_SEMICOLON;', 2.598833643460815e-06], ['OPERATOR_DOT;', 2.598833643460815e-06], ['OPERATOR_COMMA;', 2.598833643460815e-06], ['OPERATOR_LPAREN;', 2.598833643460815e-06], ['OPERATOR_RPAREN;', 2.598833643460815e-06], ['OPERATOR_LCURLY;', 2.598833643460815e-06], ['OPERATOR_LSQUARE;', 2.598833643460815e-06], ['OPERATOR_RSQUARE;', 2.598833643460815e-06], ['Lex::skip_c_comment(bool*', 2.598833643460815e-06], ['found_newline)', 2.598833643460815e-06], ['comment");', 2.598833643460815e-06], ['*found_newline', 2.598833643460815e-06], ['C++-style', 2.598833643460815e-06], ['Lex::skip_cpp_comment()', 2.598833643460815e-06], ['EXTERN_', 2.598833643460815e-06], ['lineoff', 2.598833643460815e-06], ['lineoff;', 2.598833643460815e-06], ['(pcheck', 2.598833643460815e-06], ['this->advance_one_utf8_char(pcheck,', 2.598833643460815e-06], ['"//").', 2.598833643460815e-06], ['(pend[-1]', 2.598833643460815e-06], ["'\\n'))", 2.598833643460815e-06], ['--pend;', 2.598833643460815e-06], ['//line', 2.598833643460815e-06], ['FILE:LINENO', 2.598833643460815e-06], ['interpreted', 2.598833643460815e-06], ['"line', 2.598833643460815e-06], ['char*>(memchr(p,', 2.598833643460815e-06], ["':',", 2.598833643460815e-06], ['p));', 2.598833643460815e-06], ['(pcolon', 2.598833643460815e-06], ['strtol(pcolon', 2.598833643460815e-06], ['&plend,', 2.598833643460815e-06], ['filelen', 2.598833643460815e-06], ['char[filelen', 2.598833643460815e-06], ['memcpy(file,', 2.598833643460815e-06], ['filelen);', 2.598833643460815e-06], ['file[filelen]', 2.598833643460815e-06], ['this->linemap_->start_file(file,', 2.598833643460815e-06], ['this->lineno_', 2.598833643460815e-06], ['gccgo', 2.598833643460815e-06], ['extension,', 2.598833643460815e-06], ['this->extern_', 2.598833643460815e-06], ['"go:".', 2.598833643460815e-06], ['"go:",', 2.598833643460815e-06], ['verb', 2.598833643460815e-06], ['"go:linkname")', 2.598833643460815e-06], ['go_name;', 2.598833643460815e-06], ['ext_name;', 2.598833643460815e-06], ['pg', 2.598833643460815e-06], ['this->advance_one_utf8_char(ps,', 2.598833643460815e-06], ['Lex::is_unicode_uppercase(c);', 2.598833643460815e-06], ['go_name', 2.598833643460815e-06], ['std::string(pg,', 2.598833643460815e-06], ['pg);', 2.598833643460815e-06], ['ext_name', 2.598833643460815e-06], ['std::string(pc,', 2.598833643460815e-06], ['pc);', 2.598833643460815e-06], ['go_name.clear();', 2.598833643460815e-06], ['ext_name.clear();', 2.598833643460815e-06], ['(go_name.empty()', 2.598833643460815e-06], ['ext_name.empty())', 2.598833643460815e-06], ['"usage:', 2.598833643460815e-06], ['localname', 2.598833643460815e-06], ['linkname");', 2.598833643460815e-06], ['(this->linknames_', 2.598833643460815e-06], ['this->linknames_', 2.598833643460815e-06], ['Linknames();', 2.598833643460815e-06], ['(*this->linknames_)[go_name]', 2.598833643460815e-06], ['Linkname(ext_name,', 2.598833643460815e-06], ['"go:nointerface")', 2.598833643460815e-06], ['analysis:', 2.598833643460815e-06], ['"go:noescape")', 2.598833643460815e-06], ['GOPRAGMA_NOESCAPE;', 2.598833643460815e-06], ['"go:nosplit")', 2.598833643460815e-06], ['GOPRAGMA_NOSPLIT;', 2.598833643460815e-06], ['"go:noinline")', 2.598833643460815e-06], ['GOPRAGMA_NOINLINE;', 2.598833643460815e-06], ['"go:notinheap")', 2.598833643460815e-06], ['GOPRAGMA_NOTINHEAP;', 2.598833643460815e-06], ['"go:systemstack")', 2.598833643460815e-06], ['GOPRAGMA_SYSTEMSTACK;', 2.598833643460815e-06], ['"go:nowritebarrier")', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIER;', 2.598833643460815e-06], ['"go:nowritebarrierrec")', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIERREC;', 2.598833643460815e-06], ['"go:yeswritebarrierrec")', 2.598833643460815e-06], ['Disables', 2.598833643460815e-06], ['go:nowritebarrierrec', 2.598833643460815e-06], ['callees;', 2.598833643460815e-06], ['GOPRAGMA_YESWRITEBARRIERREC;', 2.598833643460815e-06], ['"go:cgo_unsafe_args")', 2.598833643460815e-06], ['GOPRAGMA_CGOUNSAFEARGS;', 2.598833643460815e-06], ['"go:uintptrescapes")', 2.598833643460815e-06], ['GOPRAGMA_UINTPTRESCAPES;', 2.598833643460815e-06], ['low;', 2.598833643460815e-06], ['high;', 2.598833643460815e-06], ['low,', 2.598833643460815e-06], ['high.', 2.598833643460815e-06], ['characters--Unicode', 2.598833643460815e-06], ['"Space",', 2.598833643460815e-06], ['locale', 2.598833643460815e-06], ['"next', 2.598833643460815e-06], ['line"', 2.598833643460815e-06], ['(0085),', 2.598833643460815e-06], ['(2028),', 2.598833643460815e-06], ['paragraph', 2.598833643460815e-06], ['(2029),', 2.598833643460815e-06], ['"zero-width', 2.598833643460815e-06], ['non-break', 2.598833643460815e-06], ['space"', 2.598833643460815e-06], ['(feff).', 2.598833643460815e-06], ['unicode_space[]', 2.598833643460815e-06], ['0x0009,', 2.598833643460815e-06], ['0x000d,', 2.598833643460815e-06], ['0x2000,', 2.598833643460815e-06], ['0x200a,', 2.598833643460815e-06], ['0x2028,', 2.598833643460815e-06], ['0x2029,', 2.598833643460815e-06], ['digits--Unicode', 2.598833643460815e-06], ['unicode_digits[]', 2.598833643460815e-06], ['0x0030,', 2.598833643460815e-06], ['0x0039,', 2.598833643460815e-06], ['0x0660,', 2.598833643460815e-06], ['0x0669,', 2.598833643460815e-06], ['0x06f0,', 2.598833643460815e-06], ['0x06f9,', 2.598833643460815e-06], ['0x07c0,', 2.598833643460815e-06], ['0x07c9,', 2.598833643460815e-06], ['0x0966,', 2.598833643460815e-06], ['0x096f,', 2.598833643460815e-06], ['0x09e6,', 2.598833643460815e-06], ['0x09ef,', 2.598833643460815e-06], ['0x0a66,', 2.598833643460815e-06], ['0x0a6f,', 2.598833643460815e-06], ['0x0ae6,', 2.598833643460815e-06], ['0x0aef,', 2.598833643460815e-06], ['0x0b66,', 2.598833643460815e-06], ['0x0b6f,', 2.598833643460815e-06], ['0x0be6,', 2.598833643460815e-06], ['0x0bef,', 2.598833643460815e-06], ['0x0c66,', 2.598833643460815e-06], ['0x0c6f,', 2.598833643460815e-06], ['0x0ce6,', 2.598833643460815e-06], ['0x0cef,', 2.598833643460815e-06], ['0x0d66,', 2.598833643460815e-06], ['0x0d6f,', 2.598833643460815e-06], ['0x0e50,', 2.598833643460815e-06], ['0x0e59,', 2.598833643460815e-06], ['0x0ed0,', 2.598833643460815e-06], ['0x0ed9,', 2.598833643460815e-06], ['0x0f20,', 2.598833643460815e-06], ['0x0f29,', 2.598833643460815e-06], ['0x1040,', 2.598833643460815e-06], ['0x1049,', 2.598833643460815e-06], ['0x17e0,', 2.598833643460815e-06], ['0x17e9,', 2.598833643460815e-06], ['0x1810,', 2.598833643460815e-06], ['0x1819,', 2.598833643460815e-06], ['0x1946,', 2.598833643460815e-06], ['0x194f,', 2.598833643460815e-06], ['0x19d0,', 2.598833643460815e-06], ['0x19d9,', 2.598833643460815e-06], ['0x1b50,', 2.598833643460815e-06], ['0x1b59,', 2.598833643460815e-06], ['0xff10,', 2.598833643460815e-06], ['0xff19,', 2.598833643460815e-06], ['0x104a0,', 2.598833643460815e-06], ['0x104a9,', 2.598833643460815e-06], ['0x1d7ce,', 2.598833643460815e-06], ['0x1d7ff,', 2.598833643460815e-06], ['unicode_letters[]', 2.598833643460815e-06], ['0x0061,', 2.598833643460815e-06], ['0x007a,', 2.598833643460815e-06], ['0x00aa,', 2.598833643460815e-06], ['0x00b5,', 2.598833643460815e-06], ['0x00ba,', 2.598833643460815e-06], ['0x00c1,', 2.598833643460815e-06], ['0x00f6,', 2.598833643460815e-06], ['0x00f8,', 2.598833643460815e-06], ['0x02c1,', 2.598833643460815e-06], ['0x02c6,', 2.598833643460815e-06], ['0x02d1,', 2.598833643460815e-06], ['0x02e0,', 2.598833643460815e-06], ['0x02e4,', 2.598833643460815e-06], ['0x02ec,', 2.598833643460815e-06], ['0x02ee,', 2.598833643460815e-06], ['0x0374,', 2.598833643460815e-06], ['0x0377,', 2.598833643460815e-06], ['0x037a,', 2.598833643460815e-06], ['0x037d,', 2.598833643460815e-06], ['0x03f5,', 2.598833643460815e-06], ['0x0481,', 2.598833643460815e-06], ['0x052f,', 2.598833643460815e-06], ['0x0559,', 2.598833643460815e-06], ['0x0561,', 2.598833643460815e-06], ['0x0562,', 2.598833643460815e-06], ['0x0587,', 2.598833643460815e-06], ['0x05d0,', 2.598833643460815e-06], ['0x05ea,', 2.598833643460815e-06], ['0x05f0,', 2.598833643460815e-06], ['0x05f2,', 2.598833643460815e-06], ['0x0620,', 2.598833643460815e-06], ['0x064a,', 2.598833643460815e-06], ['0x066e,', 2.598833643460815e-06], ['0x066f,', 2.598833643460815e-06], ['0x0671,', 2.598833643460815e-06], ['0x06d3,', 2.598833643460815e-06], ['0x06d5,', 2.598833643460815e-06], ['0x06e5,', 2.598833643460815e-06], ['0x06e6,', 2.598833643460815e-06], ['0x06ee,', 2.598833643460815e-06], ['0x06ef,', 2.598833643460815e-06], ['0x06fa,', 2.598833643460815e-06], ['0x06fb,', 2.598833643460815e-06], ['0x06fc,', 2.598833643460815e-06], ['0x06ff,', 2.598833643460815e-06], ['0x0710,', 2.598833643460815e-06], ['0x0712,', 2.598833643460815e-06], ['0x072f,', 2.598833643460815e-06], ['0x074d,', 2.598833643460815e-06], ['0x07a5,', 2.598833643460815e-06], ['0x07b1,', 2.598833643460815e-06], ['0x07ca,', 2.598833643460815e-06], ['25},', 2.598833643460815e-06], ['0x07cb,', 2.598833643460815e-06], ['0x07ea,', 2.598833643460815e-06], ['0x07f4,', 2.598833643460815e-06], ['0x07f5,', 2.598833643460815e-06], ['0x07fa,', 2.598833643460815e-06], ['0x0800,', 2.598833643460815e-06], ['0x0801,', 2.598833643460815e-06], ['0x0815,', 2.598833643460815e-06], ['0x081a,', 2.598833643460815e-06], ['0x0824,', 2.598833643460815e-06], ['10},', 2.598833643460815e-06], ['0x0828,', 2.598833643460815e-06], ['0x0840,', 2.598833643460815e-06], ['24},', 2.598833643460815e-06], ['0x0841,', 2.598833643460815e-06], ['0x0858,', 2.598833643460815e-06], ['0x08a0,', 2.598833643460815e-06], ['0x08b4,', 2.598833643460815e-06], ['0x0904,', 2.598833643460815e-06], ['0x0939,', 2.598833643460815e-06], ['0x093d,', 2.598833643460815e-06], ['0x0950,', 2.598833643460815e-06], ['0x0958,', 2.598833643460815e-06], ['0x0961,', 2.598833643460815e-06], ['0x0971,', 2.598833643460815e-06], ['0x0980,', 2.598833643460815e-06], ['0x0985,', 2.598833643460815e-06], ['0x098c,', 2.598833643460815e-06], ['0x098f,', 2.598833643460815e-06], ['0x0990,', 2.598833643460815e-06], ['0x0993,', 2.598833643460815e-06], ['0x09a8,', 2.598833643460815e-06], ['0x09aa,', 2.598833643460815e-06], ['0x09b0,', 2.598833643460815e-06], ['0x09b2,', 2.598833643460815e-06], ['0x09b6,', 2.598833643460815e-06], ['0x09b7,', 2.598833643460815e-06], ['0x09b9,', 2.598833643460815e-06], ['0x09bd,', 2.598833643460815e-06], ['0x09ce,', 2.598833643460815e-06], ['0x09dc,', 2.598833643460815e-06], ['0x09dd,', 2.598833643460815e-06], ['0x09df,', 2.598833643460815e-06], ['0x09e1,', 2.598833643460815e-06], ['0x09f0,', 2.598833643460815e-06], ['0x09f1,', 2.598833643460815e-06], ['0x0a05,', 2.598833643460815e-06], ['0x0a0a,', 2.598833643460815e-06], ['0x0a0f,', 2.598833643460815e-06], ['0x0a10,', 2.598833643460815e-06], ['0x0a13,', 2.598833643460815e-06], ['0x0a28,', 2.598833643460815e-06], ['0x0a2a,', 2.598833643460815e-06], ['0x0a30,', 2.598833643460815e-06], ['0x0a32,', 2.598833643460815e-06], ['0x0a33,', 2.598833643460815e-06], ['0x0a35,', 2.598833643460815e-06], ['0x0a36,', 2.598833643460815e-06], ['0x0a38,', 2.598833643460815e-06], ['0x0a39,', 2.598833643460815e-06], ['0x0a59,', 2.598833643460815e-06], ['0x0a5c,', 2.598833643460815e-06], ['0x0a5e,', 2.598833643460815e-06], ['0x0a72,', 2.598833643460815e-06], ['20},', 2.598833643460815e-06], ['0x0a73,', 2.598833643460815e-06], ['0x0a74,', 2.598833643460815e-06], ['0x0a85,', 2.598833643460815e-06], ['0x0a8d,', 2.598833643460815e-06], ['0x0a8f,', 2.598833643460815e-06], ['0x0a91,', 2.598833643460815e-06], ['0x0a93,', 2.598833643460815e-06], ['0x0aa8,', 2.598833643460815e-06], ['0x0aaa,', 2.598833643460815e-06], ['0x0ab0,', 2.598833643460815e-06], ['0x0ab2,', 2.598833643460815e-06], ['0x0ab3,', 2.598833643460815e-06], ['0x0ab5,', 2.598833643460815e-06], ['0x0ab9,', 2.598833643460815e-06], ['0x0abd,', 2.598833643460815e-06], ['0x0ad0,', 2.598833643460815e-06], ['0x0ae0,', 2.598833643460815e-06], ['0x0ae1,', 2.598833643460815e-06], ['0x0af9,', 2.598833643460815e-06], ['0x0b05,', 2.598833643460815e-06], ['12},', 2.598833643460815e-06], ['0x0b06,', 2.598833643460815e-06], ['0x0b0c,', 2.598833643460815e-06], ['0x0b0f,', 2.598833643460815e-06], ['0x0b10,', 2.598833643460815e-06], ['0x0b13,', 2.598833643460815e-06], ['0x0b28,', 2.598833643460815e-06], ['0x0b2a,', 2.598833643460815e-06], ['0x0b30,', 2.598833643460815e-06], ['0x0b32,', 2.598833643460815e-06], ['0x0b33,', 2.598833643460815e-06], ['0x0b35,', 2.598833643460815e-06], ['0x0b39,', 2.598833643460815e-06], ['0x0b3d,', 2.598833643460815e-06], ['0x0b5c,', 2.598833643460815e-06], ['31},', 2.598833643460815e-06], ['0x0b5d,', 2.598833643460815e-06], ['0x0b5f,', 2.598833643460815e-06], ['0x0b60,', 2.598833643460815e-06], ['0x0b61,', 2.598833643460815e-06], ['0x0b71,', 2.598833643460815e-06], ['0x0b83,', 2.598833643460815e-06], ['0x0b85,', 2.598833643460815e-06], ['0x0b8a,', 2.598833643460815e-06], ['0x0b8e,', 2.598833643460815e-06], ['0x0b90,', 2.598833643460815e-06], ['0x0b92,', 2.598833643460815e-06], ['0x0b95,', 2.598833643460815e-06], ['0x0b99,', 2.598833643460815e-06], ['0x0b9a,', 2.598833643460815e-06], ['0x0b9c,', 2.598833643460815e-06], ['0x0b9e,', 2.598833643460815e-06], ['0x0b9f,', 2.598833643460815e-06], ['0x0ba3,', 2.598833643460815e-06], ['0x0ba4,', 2.598833643460815e-06], ['0x0ba8,', 2.598833643460815e-06], ['0x0ba9,', 2.598833643460815e-06], ['0x0baa,', 2.598833643460815e-06], ['0x0bae,', 2.598833643460815e-06], ['0x0bb9,', 2.598833643460815e-06], ['0x0bd0,', 2.598833643460815e-06], ['0x0c05,', 2.598833643460815e-06], ['0x0c06,', 2.598833643460815e-06], ['0x0c0c,', 2.598833643460815e-06], ['0x0c0e,', 2.598833643460815e-06], ['0x0c10,', 2.598833643460815e-06], ['0x0c12,', 2.598833643460815e-06], ['0x0c28,', 2.598833643460815e-06], ['0x0c2a,', 2.598833643460815e-06], ['0x0c39,', 2.598833643460815e-06], ['0x0c3d,', 2.598833643460815e-06], ['0x0c58,', 2.598833643460815e-06], ['27},', 2.598833643460815e-06], ['0x0c59,', 2.598833643460815e-06], ['0x0c5a,', 2.598833643460815e-06], ['0x0c60,', 2.598833643460815e-06], ['0x0c61,', 2.598833643460815e-06], ['0x0c85,', 2.598833643460815e-06], ['0x0c8c,', 2.598833643460815e-06], ['0x0c8e,', 2.598833643460815e-06], ['0x0c90,', 2.598833643460815e-06], ['0x0c92,', 2.598833643460815e-06], ['0x0ca8,', 2.598833643460815e-06], ['0x0caa,', 2.598833643460815e-06], ['0x0cb3,', 2.598833643460815e-06], ['0x0cb5,', 2.598833643460815e-06], ['0x0cb9,', 2.598833643460815e-06], ['0x0cbd,', 2.598833643460815e-06], ['0x0cde,', 2.598833643460815e-06], ['33},', 2.598833643460815e-06], ['0x0ce0,', 2.598833643460815e-06], ['0x0ce1,', 2.598833643460815e-06], ['0x0cf1,', 2.598833643460815e-06], ['0x0cf2,', 2.598833643460815e-06], ['0x0d05,', 2.598833643460815e-06], ['0x0d0c,', 2.598833643460815e-06], ['0x0d0e,', 2.598833643460815e-06], ['0x0d10,', 2.598833643460815e-06], ['0x0d12,', 2.598833643460815e-06], ['0x0d3a,', 2.598833643460815e-06], ['0x0d3d,', 2.598833643460815e-06], ['0x0d5f,', 2.598833643460815e-06], ['0x0d60,', 2.598833643460815e-06], ['0x0d61,', 2.598833643460815e-06], ['0x0d7a,', 2.598833643460815e-06], ['0x0d7f,', 2.598833643460815e-06], ['0x0d85,', 2.598833643460815e-06], ['0x0d96,', 2.598833643460815e-06], ['0x0d9a,', 2.598833643460815e-06], ['0x0db1,', 2.598833643460815e-06], ['0x0db3,', 2.598833643460815e-06], ['0x0dbb,', 2.598833643460815e-06], ['0x0dbd,', 2.598833643460815e-06], ['0x0dc0,', 2.598833643460815e-06], ['0x0dc1,', 2.598833643460815e-06], ['0x0dc6,', 2.598833643460815e-06], ['0x0e01,', 2.598833643460815e-06], ['0x0e30,', 2.598833643460815e-06], ['0x0e32,', 2.598833643460815e-06], ['0x0e33,', 2.598833643460815e-06], ['0x0e40,', 2.598833643460815e-06], ['0x0e46,', 2.598833643460815e-06], ['0x0e81,', 2.598833643460815e-06], ['0x0e82,', 2.598833643460815e-06], ['0x0e84,', 2.598833643460815e-06], ['0x0e87,', 2.598833643460815e-06], ['0x0e88,', 2.598833643460815e-06], ['0x0e8a,', 2.598833643460815e-06], ['0x0e8d,', 2.598833643460815e-06], ['0x0e94,', 2.598833643460815e-06], ['0x0e95,', 2.598833643460815e-06], ['0x0e97,', 2.598833643460815e-06], ['0x0e99,', 2.598833643460815e-06], ['0x0e9f,', 2.598833643460815e-06], ['0x0ea1,', 2.598833643460815e-06], ['0x0ea3,', 2.598833643460815e-06], ['0x0ea5,', 2.598833643460815e-06], ['0x0ea7,', 2.598833643460815e-06], ['0x0eaa,', 2.598833643460815e-06], ['0x0eab,', 2.598833643460815e-06], ['0x0ead,', 2.598833643460815e-06], ['0x0eb0,', 2.598833643460815e-06], ['0x0eb2,', 2.598833643460815e-06], ['0x0eb3,', 2.598833643460815e-06], ['0x0ebd,', 2.598833643460815e-06], ['0x0ec0,', 2.598833643460815e-06], ['0x0ec1,', 2.598833643460815e-06], ['0x0ec4,', 2.598833643460815e-06], ['0x0ec6,', 2.598833643460815e-06], ['0x0edc,', 2.598833643460815e-06], ['22},', 2.598833643460815e-06], ['0x0edd,', 2.598833643460815e-06], ['0x0edf,', 2.598833643460815e-06], ['0x0f00,', 2.598833643460815e-06], ['0x0f40,', 2.598833643460815e-06], ['64},', 2.598833643460815e-06], ['0x0f41,', 2.598833643460815e-06], ['0x0f47,', 2.598833643460815e-06], ['0x0f49,', 2.598833643460815e-06], ['0x0f6c,', 2.598833643460815e-06], ['0x0f88,', 2.598833643460815e-06], ['0x0f8c,', 2.598833643460815e-06], ['0x1000,', 2.598833643460815e-06], ['0x102a,', 2.598833643460815e-06], ['0x103f,', 2.598833643460815e-06], ['0x1050,', 2.598833643460815e-06], ['0x1051,', 2.598833643460815e-06], ['0x1055,', 2.598833643460815e-06], ['0x105a,', 2.598833643460815e-06], ['0x105d,', 2.598833643460815e-06], ['0x1061,', 2.598833643460815e-06], ['0x1065,', 2.598833643460815e-06], ['0x1066,', 2.598833643460815e-06], ['0x106e,', 2.598833643460815e-06], ['0x106f,', 2.598833643460815e-06], ['0x1070,', 2.598833643460815e-06], ['0x1075,', 2.598833643460815e-06], ['0x1081,', 2.598833643460815e-06], ['0x108e,', 2.598833643460815e-06], ['0x10a1,', 2.598833643460815e-06], ['0x10d0,', 2.598833643460815e-06], ['0x10fa,', 2.598833643460815e-06], ['0x10fc,', 2.598833643460815e-06], ['0x1248,', 2.598833643460815e-06], ['0x124a,', 2.598833643460815e-06], ['0x124d,', 2.598833643460815e-06], ['0x1250,', 2.598833643460815e-06], ['0x1256,', 2.598833643460815e-06], ['0x1258,', 2.598833643460815e-06], ['0x125a,', 2.598833643460815e-06], ['0x125b,', 2.598833643460815e-06], ['0x125d,', 2.598833643460815e-06], ['0x1260,', 2.598833643460815e-06], ['0x1288,', 2.598833643460815e-06], ['0x128a,', 2.598833643460815e-06], ['0x128d,', 2.598833643460815e-06], ['0x1290,', 2.598833643460815e-06], ['0x12b0,', 2.598833643460815e-06], ['0x12b2,', 2.598833643460815e-06], ['0x12b5,', 2.598833643460815e-06], ['0x12b8,', 2.598833643460815e-06], ['0x12be,', 2.598833643460815e-06], ['0x12c0,', 2.598833643460815e-06], ['0x12c2,', 2.598833643460815e-06], ['0x12c3,', 2.598833643460815e-06], ['0x12c5,', 2.598833643460815e-06], ['0x12c8,', 2.598833643460815e-06], ['0x12d6,', 2.598833643460815e-06], ['0x12d8,', 2.598833643460815e-06], ['0x1310,', 2.598833643460815e-06], ['0x1312,', 2.598833643460815e-06], ['0x1315,', 2.598833643460815e-06], ['0x1318,', 2.598833643460815e-06], ['0x135a,', 2.598833643460815e-06], ['0x1380,', 2.598833643460815e-06], ['0x138f,', 2.598833643460815e-06], ['0x13a0,', 2.598833643460815e-06], ['0x13f5,', 2.598833643460815e-06], ['0x13f8,', 2.598833643460815e-06], ['0x13fd,', 2.598833643460815e-06], ['0x1401,', 2.598833643460815e-06], ['0x166c,', 2.598833643460815e-06], ['0x166f,', 2.598833643460815e-06], ['0x167f,', 2.598833643460815e-06], ['0x1681,', 2.598833643460815e-06], ['0x169a,', 2.598833643460815e-06], ['0x16a0,', 2.598833643460815e-06], ['0x16ea,', 2.598833643460815e-06], ['0x16f1,', 2.598833643460815e-06], ['0x16f8,', 2.598833643460815e-06], ['0x1700,', 2.598833643460815e-06], ['0x170c,', 2.598833643460815e-06], ['0x170e,', 2.598833643460815e-06], ['0x1711,', 2.598833643460815e-06], ['0x1720,', 2.598833643460815e-06], ['0x1731,', 2.598833643460815e-06], ['0x1740,', 2.598833643460815e-06], ['0x1751,', 2.598833643460815e-06], ['0x1760,', 2.598833643460815e-06], ['0x176c,', 2.598833643460815e-06], ['0x176e,', 2.598833643460815e-06], ['0x1770,', 2.598833643460815e-06], ['0x1780,', 2.598833643460815e-06], ['0x17b3,', 2.598833643460815e-06], ['0x17d7,', 2.598833643460815e-06], ['0x17dc,', 2.598833643460815e-06], ['0x1820,', 2.598833643460815e-06], ['0x1877,', 2.598833643460815e-06], ['0x1880,', 2.598833643460815e-06], ['0x18a8,', 2.598833643460815e-06], ['0x18aa,', 2.598833643460815e-06], ['0x18b0,', 2.598833643460815e-06], ['0x18b1,', 2.598833643460815e-06], ['0x18f5,', 2.598833643460815e-06], ['0x1900,', 2.598833643460815e-06], ['0x191e,', 2.598833643460815e-06], ['0x1950,', 2.598833643460815e-06], ['0x196d,', 2.598833643460815e-06], ['0x1970,', 2.598833643460815e-06], ['0x1974,', 2.598833643460815e-06], ['0x1980,', 2.598833643460815e-06], ['0x19ab,', 2.598833643460815e-06], ['0x19b0,', 2.598833643460815e-06], ['0x19c9,', 2.598833643460815e-06], ['0x1a00,', 2.598833643460815e-06], ['0x1a16,', 2.598833643460815e-06], ['0x1a20,', 2.598833643460815e-06], ['0x1a54,', 2.598833643460815e-06], ['0x1aa7,', 2.598833643460815e-06], ['0x1b05,', 2.598833643460815e-06], ['94},', 2.598833643460815e-06], ['0x1b06,', 2.598833643460815e-06], ['0x1b33,', 2.598833643460815e-06], ['0x1b45,', 2.598833643460815e-06], ['0x1b4b,', 2.598833643460815e-06], ['0x1b83,', 2.598833643460815e-06], ['0x1ba0,', 2.598833643460815e-06], ['0x1bae,', 2.598833643460815e-06], ['0x1baf,', 2.598833643460815e-06], ['0x1bba,', 2.598833643460815e-06], ['0x1be5,', 2.598833643460815e-06], ['0x1c00,', 2.598833643460815e-06], ['0x1c23,', 2.598833643460815e-06], ['0x1c4d,', 2.598833643460815e-06], ['0x1c4f,', 2.598833643460815e-06], ['0x1c5a,', 2.598833643460815e-06], ['0x1c7d,', 2.598833643460815e-06], ['0x1ce9,', 2.598833643460815e-06], ['0x1cec,', 2.598833643460815e-06], ['0x1cee,', 2.598833643460815e-06], ['0x1cf1,', 2.598833643460815e-06], ['0x1cf5,', 2.598833643460815e-06], ['0x1cf6,', 2.598833643460815e-06], ['0x1d00,', 2.598833643460815e-06], ['0x1dbf,', 2.598833643460815e-06], ['0x1f15,', 2.598833643460815e-06], ['0x1f20,', 2.598833643460815e-06], ['0x1f45,', 2.598833643460815e-06], ['0x1f50,', 2.598833643460815e-06], ['0x1f57,', 2.598833643460815e-06], ['0x1f60,', 2.598833643460815e-06], ['0x1f7d,', 2.598833643460815e-06], ['0x1f80,', 2.598833643460815e-06], ['0x1fb4,', 2.598833643460815e-06], ['0x1fb6,', 2.598833643460815e-06], ['0x1fbc,', 2.598833643460815e-06], ['0x1fbe,', 2.598833643460815e-06], ['0x1fc2,', 2.598833643460815e-06], ['0x1fc3,', 2.598833643460815e-06], ['0x1fc4,', 2.598833643460815e-06], ['0x1fc6,', 2.598833643460815e-06], ['0x1fcc,', 2.598833643460815e-06], ['0x1fd0,', 2.598833643460815e-06], ['0x1fd3,', 2.598833643460815e-06], ['0x1fd6,', 2.598833643460815e-06], ['0x1fe0,', 2.598833643460815e-06], ['0x1ff2,', 2.598833643460815e-06], ['0x1ff4,', 2.598833643460815e-06], ['0x1ff6,', 2.598833643460815e-06], ['0x1ffc,', 2.598833643460815e-06], ['0x2071,', 2.598833643460815e-06], ['0x207f,', 2.598833643460815e-06], ['14},', 2.598833643460815e-06], ['0x2090,', 2.598833643460815e-06], ['0x209c,', 2.598833643460815e-06], ['0x210a,', 2.598833643460815e-06], ['0x2113,', 2.598833643460815e-06], ['0x212f,', 2.598833643460815e-06], ['0x2139,', 2.598833643460815e-06], ['0x213c,', 2.598833643460815e-06], ['0x2149,', 2.598833643460815e-06], ['0x214e,', 2.598833643460815e-06], ['0x2184,', 2.598833643460815e-06], ['2684},', 2.598833643460815e-06], ['0x2c01,', 2.598833643460815e-06], ['0x2c30,', 2.598833643460815e-06], ['0x2c5e,', 2.598833643460815e-06], ['0x2ce4,', 2.598833643460815e-06], ['0x2cee,', 2.598833643460815e-06], ['0x2cf3,', 2.598833643460815e-06], ['0x2d00,', 2.598833643460815e-06], ['0x2d25,', 2.598833643460815e-06], ['0x2d27,', 2.598833643460815e-06], ['0x2d2d,', 2.598833643460815e-06], ['0x2d30,', 2.598833643460815e-06], ['0x2d67,', 2.598833643460815e-06], ['0x2d6f,', 2.598833643460815e-06], ['0x2d80,', 2.598833643460815e-06], ['0x2d81,', 2.598833643460815e-06], ['0x2d96,', 2.598833643460815e-06], ['0x2da0,', 2.598833643460815e-06], ['0x2da6,', 2.598833643460815e-06], ['0x2da8,', 2.598833643460815e-06], ['0x2dae,', 2.598833643460815e-06], ['0x2db0,', 2.598833643460815e-06], ['0x2db6,', 2.598833643460815e-06], ['0x2db8,', 2.598833643460815e-06], ['0x2dbe,', 2.598833643460815e-06], ['0x2dc0,', 2.598833643460815e-06], ['0x2dc6,', 2.598833643460815e-06], ['0x2dc8,', 2.598833643460815e-06], ['0x2dce,', 2.598833643460815e-06], ['0x2dd0,', 2.598833643460815e-06], ['0x2dd6,', 2.598833643460815e-06], ['0x2dd8,', 2.598833643460815e-06], ['0x2dde,', 2.598833643460815e-06], ['0x2e2f,', 2.598833643460815e-06], ['0x3005,', 2.598833643460815e-06], ['470},', 2.598833643460815e-06], ['0x3006,', 2.598833643460815e-06], ['0x3031,', 2.598833643460815e-06], ['43},', 2.598833643460815e-06], ['0x3032,', 2.598833643460815e-06], ['0x3035,', 2.598833643460815e-06], ['0x303b,', 2.598833643460815e-06], ['0x303c,', 2.598833643460815e-06], ['0x3041,', 2.598833643460815e-06], ['0x3096,', 2.598833643460815e-06], ['0x309d,', 2.598833643460815e-06], ['0x309f,', 2.598833643460815e-06], ['0x30a1,', 2.598833643460815e-06], ['0x30fa,', 2.598833643460815e-06], ['0x30fc,', 2.598833643460815e-06], ['0x30ff,', 2.598833643460815e-06], ['0x3105,', 2.598833643460815e-06], ['0x312d,', 2.598833643460815e-06], ['0x3131,', 2.598833643460815e-06], ['0x318e,', 2.598833643460815e-06], ['0x31a0,', 2.598833643460815e-06], ['0x31ba,', 2.598833643460815e-06], ['0x31f0,', 2.598833643460815e-06], ['0x31ff,', 2.598833643460815e-06], ['0x3400,', 2.598833643460815e-06], ['0x4db5,', 2.598833643460815e-06], ['0x4e00,', 2.598833643460815e-06], ['0x9fd5,', 2.598833643460815e-06], ['0xa000,', 2.598833643460815e-06], ['0xa48c,', 2.598833643460815e-06], ['0xa4d0,', 2.598833643460815e-06], ['0xa4fd,', 2.598833643460815e-06], ['0xa500,', 2.598833643460815e-06], ['0xa60c,', 2.598833643460815e-06], ['0xa610,', 2.598833643460815e-06], ['0xa61f,', 2.598833643460815e-06], ['0xa62a,', 2.598833643460815e-06], ['0xa62b,', 2.598833643460815e-06], ['0xa66e,', 2.598833643460815e-06], ['0xa67f,', 2.598833643460815e-06], ['0xa69d,', 2.598833643460815e-06], ['0xa6a0,', 2.598833643460815e-06], ['0xa6e5,', 2.598833643460815e-06], ['0xa717,', 2.598833643460815e-06], ['0xa71f,', 2.598833643460815e-06], ['0xa788,', 2.598833643460815e-06], ['0xa7b7,', 2.598833643460815e-06], ['0xa7f7,', 2.598833643460815e-06], ['0xa801,', 2.598833643460815e-06], ['0xa803,', 2.598833643460815e-06], ['0xa805,', 2.598833643460815e-06], ['0xa807,', 2.598833643460815e-06], ['0xa80a,', 2.598833643460815e-06], ['0xa80c,', 2.598833643460815e-06], ['0xa822,', 2.598833643460815e-06], ['0xa840,', 2.598833643460815e-06], ['0xa873,', 2.598833643460815e-06], ['0xa882,', 2.598833643460815e-06], ['0xa8b3,', 2.598833643460815e-06], ['0xa8f2,', 2.598833643460815e-06], ['0xa8f7,', 2.598833643460815e-06], ['0xa8fb,', 2.598833643460815e-06], ['0xa8fd,', 2.598833643460815e-06], ['0xa90a,', 2.598833643460815e-06], ['0xa925,', 2.598833643460815e-06], ['0xa930,', 2.598833643460815e-06], ['0xa946,', 2.598833643460815e-06], ['0xa960,', 2.598833643460815e-06], ['0xa97c,', 2.598833643460815e-06], ['0xa984,', 2.598833643460815e-06], ['0xa9b2,', 2.598833643460815e-06], ['0xa9cf,', 2.598833643460815e-06], ['0xa9e0,', 2.598833643460815e-06], ['0xa9e1,', 2.598833643460815e-06], ['0xa9e4,', 2.598833643460815e-06], ['0xa9e6,', 2.598833643460815e-06], ['0xa9ef,', 2.598833643460815e-06], ['0xa9fa,', 2.598833643460815e-06], ['0xa9fe,', 2.598833643460815e-06], ['0xaa00,', 2.598833643460815e-06], ['0xaa28,', 2.598833643460815e-06], ['0xaa40,', 2.598833643460815e-06], ['0xaa42,', 2.598833643460815e-06], ['0xaa44,', 2.598833643460815e-06], ['0xaa4b,', 2.598833643460815e-06], ['0xaa60,', 2.598833643460815e-06], ['0xaa76,', 2.598833643460815e-06], ['0xaa7a,', 2.598833643460815e-06], ['0xaa7e,', 2.598833643460815e-06], ['0xaa7f,', 2.598833643460815e-06], ['0xaaaf,', 2.598833643460815e-06], ['0xaab1,', 2.598833643460815e-06], ['0xaab5,', 2.598833643460815e-06], ['0xaab6,', 2.598833643460815e-06], ['0xaab9,', 2.598833643460815e-06], ['0xaaba,', 2.598833643460815e-06], ['0xaabd,', 2.598833643460815e-06], ['0xaac0,', 2.598833643460815e-06], ['0xaac2,', 2.598833643460815e-06], ['0xaadb,', 2.598833643460815e-06], ['0xaadd,', 2.598833643460815e-06], ['0xaae0,', 2.598833643460815e-06], ['0xaaea,', 2.598833643460815e-06], ['0xaaf2,', 2.598833643460815e-06], ['0xaaf4,', 2.598833643460815e-06], ['0xab01,', 2.598833643460815e-06], ['0xab06,', 2.598833643460815e-06], ['0xab09,', 2.598833643460815e-06], ['0xab0e,', 2.598833643460815e-06], ['0xab11,', 2.598833643460815e-06], ['0xab16,', 2.598833643460815e-06], ['0xab20,', 2.598833643460815e-06], ['0xab26,', 2.598833643460815e-06], ['0xab28,', 2.598833643460815e-06], ['0xab2e,', 2.598833643460815e-06], ['0xab30,', 2.598833643460815e-06], ['0xab5a,', 2.598833643460815e-06], ['0xab5c,', 2.598833643460815e-06], ['0xab65,', 2.598833643460815e-06], ['0xab70,', 2.598833643460815e-06], ['0xabe2,', 2.598833643460815e-06], ['0xac00,', 2.598833643460815e-06], ['0xd7a3,', 2.598833643460815e-06], ['0xd7b0,', 2.598833643460815e-06], ['0xd7c6,', 2.598833643460815e-06], ['0xd7cb,', 2.598833643460815e-06], ['0xd7fb,', 2.598833643460815e-06], ['0xf900,', 2.598833643460815e-06], ['0xfa6d,', 2.598833643460815e-06], ['0xfa70,', 2.598833643460815e-06], ['0xfad9,', 2.598833643460815e-06], ['0xfb00,', 2.598833643460815e-06], ['0xfb06,', 2.598833643460815e-06], ['0xfb13,', 2.598833643460815e-06], ['0xfb17,', 2.598833643460815e-06], ['0xfb1d,', 2.598833643460815e-06], ['0xfb1f,', 2.598833643460815e-06], ['0xfb20,', 2.598833643460815e-06], ['0xfb28,', 2.598833643460815e-06], ['0xfb2a,', 2.598833643460815e-06], ['0xfb36,', 2.598833643460815e-06], ['0xfb38,', 2.598833643460815e-06], ['0xfb3c,', 2.598833643460815e-06], ['0xfb3e,', 2.598833643460815e-06], ['0xfb40,', 2.598833643460815e-06], ['0xfb41,', 2.598833643460815e-06], ['0xfb43,', 2.598833643460815e-06], ['0xfb44,', 2.598833643460815e-06], ['0xfb46,', 2.598833643460815e-06], ['0xfb47,', 2.598833643460815e-06], ['0xfbb1,', 2.598833643460815e-06], ['0xfbd3,', 2.598833643460815e-06], ['0xfd3d,', 2.598833643460815e-06], ['0xfd50,', 2.598833643460815e-06], ['0xfd8f,', 2.598833643460815e-06], ['0xfd92,', 2.598833643460815e-06], ['0xfdc7,', 2.598833643460815e-06], ['0xfdf0,', 2.598833643460815e-06], ['0xfdfb,', 2.598833643460815e-06], ['0xfe70,', 2.598833643460815e-06], ['0xfe74,', 2.598833643460815e-06], ['0xfe76,', 2.598833643460815e-06], ['0xfefc,', 2.598833643460815e-06], ['0xff41,', 2.598833643460815e-06], ['0xff5a,', 2.598833643460815e-06], ['0xff66,', 2.598833643460815e-06], ['0xffbe,', 2.598833643460815e-06], ['0xffc2,', 2.598833643460815e-06], ['0xffc7,', 2.598833643460815e-06], ['0xffca,', 2.598833643460815e-06], ['0xffcf,', 2.598833643460815e-06], ['0xffd2,', 2.598833643460815e-06], ['0xffd7,', 2.598833643460815e-06], ['0xffda,', 2.598833643460815e-06], ['0xffdc,', 2.598833643460815e-06], ['0x10000,', 2.598833643460815e-06], ['0x1000b,', 2.598833643460815e-06], ['0x1000d,', 2.598833643460815e-06], ['0x10026,', 2.598833643460815e-06], ['0x10028,', 2.598833643460815e-06], ['0x1003a,', 2.598833643460815e-06], ['0x1003c,', 2.598833643460815e-06], ['0x1003d,', 2.598833643460815e-06], ['0x1003f,', 2.598833643460815e-06], ['0x1004d,', 2.598833643460815e-06], ['0x10050,', 2.598833643460815e-06], ['0x1005d,', 2.598833643460815e-06], ['0x10080,', 2.598833643460815e-06], ['0x100fa,', 2.598833643460815e-06], ['0x10280,', 2.598833643460815e-06], ['0x1029c,', 2.598833643460815e-06], ['0x102a0,', 2.598833643460815e-06], ['0x102d0,', 2.598833643460815e-06], ['0x10300,', 2.598833643460815e-06], ['0x1031f,', 2.598833643460815e-06], ['0x10330,', 2.598833643460815e-06], ['0x10340,', 2.598833643460815e-06], ['0x10342,', 2.598833643460815e-06], ['0x10349,', 2.598833643460815e-06], ['0x10350,', 2.598833643460815e-06], ['0x10375,', 2.598833643460815e-06], ['0x10380,', 2.598833643460815e-06], ['0x1039d,', 2.598833643460815e-06], ['0x103a0,', 2.598833643460815e-06], ['0x103c3,', 2.598833643460815e-06], ['0x103c8,', 2.598833643460815e-06], ['0x103cf,', 2.598833643460815e-06], ['0x1049d,', 2.598833643460815e-06], ['0x10500,', 2.598833643460815e-06], ['0x10527,', 2.598833643460815e-06], ['0x10530,', 2.598833643460815e-06], ['0x10563,', 2.598833643460815e-06], ['0x10600,', 2.598833643460815e-06], ['0x10736,', 2.598833643460815e-06], ['0x10740,', 2.598833643460815e-06], ['0x10755,', 2.598833643460815e-06], ['0x10760,', 2.598833643460815e-06], ['0x10767,', 2.598833643460815e-06], ['0x10800,', 2.598833643460815e-06], ['0x10805,', 2.598833643460815e-06], ['0x10808,', 2.598833643460815e-06], ['0x1080a,', 2.598833643460815e-06], ['0x1080b,', 2.598833643460815e-06], ['0x10835,', 2.598833643460815e-06], ['0x10837,', 2.598833643460815e-06], ['0x10838,', 2.598833643460815e-06], ['0x1083c,', 2.598833643460815e-06], ['0x1083f,', 2.598833643460815e-06], ['0x10840,', 2.598833643460815e-06], ['0x10855,', 2.598833643460815e-06], ['0x10860,', 2.598833643460815e-06], ['0x10876,', 2.598833643460815e-06], ['0x10880,', 2.598833643460815e-06], ['0x1089e,', 2.598833643460815e-06], ['0x108e0,', 2.598833643460815e-06], ['0x108f2,', 2.598833643460815e-06], ['0x108f4,', 2.598833643460815e-06], ['0x108f5,', 2.598833643460815e-06], ['0x10900,', 2.598833643460815e-06], ['0x10915,', 2.598833643460815e-06], ['0x10920,', 2.598833643460815e-06], ['0x10939,', 2.598833643460815e-06], ['0x10980,', 2.598833643460815e-06], ['0x109b7,', 2.598833643460815e-06], ['0x109be,', 2.598833643460815e-06], ['0x109bf,', 2.598833643460815e-06], ['0x10a00,', 2.598833643460815e-06], ['0x10a10,', 2.598833643460815e-06], ['0x10a11,', 2.598833643460815e-06], ['0x10a13,', 2.598833643460815e-06], ['0x10a15,', 2.598833643460815e-06], ['0x10a17,', 2.598833643460815e-06], ['0x10a19,', 2.598833643460815e-06], ['0x10a33,', 2.598833643460815e-06], ['0x10a60,', 2.598833643460815e-06], ['0x10a7c,', 2.598833643460815e-06], ['0x10a80,', 2.598833643460815e-06], ['0x10a9c,', 2.598833643460815e-06], ['0x10ac0,', 2.598833643460815e-06], ['0x10ac7,', 2.598833643460815e-06], ['0x10ac9,', 2.598833643460815e-06], ['0x10ae4,', 2.598833643460815e-06], ['0x10b00,', 2.598833643460815e-06], ['0x10b35,', 2.598833643460815e-06], ['0x10b40,', 2.598833643460815e-06], ['0x10b55,', 2.598833643460815e-06], ['0x10b60,', 2.598833643460815e-06], ['0x10b72,', 2.598833643460815e-06], ['0x10b80,', 2.598833643460815e-06], ['0x10b91,', 2.598833643460815e-06], ['0x10c00,', 2.598833643460815e-06], ['0x10c48,', 2.598833643460815e-06], ['0x10c80,', 2.598833643460815e-06], ['0x10cb2,', 2.598833643460815e-06], ['0x10cc0,', 2.598833643460815e-06], ['0x10cf2,', 2.598833643460815e-06], ['0x11003,', 2.598833643460815e-06], ['0x11037,', 2.598833643460815e-06], ['0x11083,', 2.598833643460815e-06], ['0x110af,', 2.598833643460815e-06], ['0x110d0,', 2.598833643460815e-06], ['0x110e8,', 2.598833643460815e-06], ['0x11103,', 2.598833643460815e-06], ['0x11126,', 2.598833643460815e-06], ['0x11150,', 2.598833643460815e-06], ['0x11172,', 2.598833643460815e-06], ['0x11176,', 2.598833643460815e-06], ['0x11183,', 2.598833643460815e-06], ['13},', 2.598833643460815e-06], ['0x11184,', 2.598833643460815e-06], ['0x111b2,', 2.598833643460815e-06], ['0x111c1,', 2.598833643460815e-06], ['0x111c4,', 2.598833643460815e-06], ['0x111da,', 2.598833643460815e-06], ['0x111dc,', 2.598833643460815e-06], ['0x11200,', 2.598833643460815e-06], ['0x11211,', 2.598833643460815e-06], ['0x11213,', 2.598833643460815e-06], ['0x1122b,', 2.598833643460815e-06], ['0x11280,', 2.598833643460815e-06], ['0x11286,', 2.598833643460815e-06], ['0x11288,', 2.598833643460815e-06], ['0x1128a,', 2.598833643460815e-06], ['0x1128b,', 2.598833643460815e-06], ['0x1128d,', 2.598833643460815e-06], ['0x1128f,', 2.598833643460815e-06], ['0x1129d,', 2.598833643460815e-06], ['0x1129f,', 2.598833643460815e-06], ['0x112a8,', 2.598833643460815e-06], ['0x112b0,', 2.598833643460815e-06], ['0x112de,', 2.598833643460815e-06], ['0x11305,', 2.598833643460815e-06], ['0x1130c,', 2.598833643460815e-06], ['0x1130f,', 2.598833643460815e-06], ['0x11310,', 2.598833643460815e-06], ['0x11313,', 2.598833643460815e-06], ['0x11328,', 2.598833643460815e-06], ['0x1132a,', 2.598833643460815e-06], ['0x11330,', 2.598833643460815e-06], ['0x11332,', 2.598833643460815e-06], ['0x11333,', 2.598833643460815e-06], ['0x11335,', 2.598833643460815e-06], ['0x11339,', 2.598833643460815e-06], ['0x1133d,', 2.598833643460815e-06], ['0x11350,', 2.598833643460815e-06], ['0x1135d,', 2.598833643460815e-06], ['0x11361,', 2.598833643460815e-06], ['0x11480,', 2.598833643460815e-06], ['0x114af,', 2.598833643460815e-06], ['0x114c4,', 2.598833643460815e-06], ['0x114c5,', 2.598833643460815e-06], ['0x114c7,', 2.598833643460815e-06], ['0x11580,', 2.598833643460815e-06], ['185},', 2.598833643460815e-06], ['0x11581,', 2.598833643460815e-06], ['0x115ae,', 2.598833643460815e-06], ['0x115d8,', 2.598833643460815e-06], ['0x115db,', 2.598833643460815e-06], ['0x11600,', 2.598833643460815e-06], ['0x1162f,', 2.598833643460815e-06], ['0x11644,', 2.598833643460815e-06], ['0x11680,', 2.598833643460815e-06], ['60},', 2.598833643460815e-06], ['0x11681,', 2.598833643460815e-06], ['0x116aa,', 2.598833643460815e-06], ['0x11700,', 2.598833643460815e-06], ['0x11719,', 2.598833643460815e-06], ['0x118df,', 2.598833643460815e-06], ['0x118ff,', 2.598833643460815e-06], ['0x11ac0,', 2.598833643460815e-06], ['449},', 2.598833643460815e-06], ['0x11ac1,', 2.598833643460815e-06], ['0x11af8,', 2.598833643460815e-06], ['0x12000,', 2.598833643460815e-06], ['0x12399,', 2.598833643460815e-06], ['0x12480,', 2.598833643460815e-06], ['0x12543,', 2.598833643460815e-06], ['0x13000,', 2.598833643460815e-06], ['0x1342e,', 2.598833643460815e-06], ['0x14400,', 2.598833643460815e-06], ['0x14646,', 2.598833643460815e-06], ['0x16800,', 2.598833643460815e-06], ['0x16a38,', 2.598833643460815e-06], ['0x16a40,', 2.598833643460815e-06], ['0x16a5e,', 2.598833643460815e-06], ['0x16ad0,', 2.598833643460815e-06], ['0x16aed,', 2.598833643460815e-06], ['0x16b00,', 2.598833643460815e-06], ['0x16b2f,', 2.598833643460815e-06], ['0x16b40,', 2.598833643460815e-06], ['0x16b43,', 2.598833643460815e-06], ['0x16b63,', 2.598833643460815e-06], ['0x16b77,', 2.598833643460815e-06], ['0x16b7d,', 2.598833643460815e-06], ['0x16b8f,', 2.598833643460815e-06], ['0x16f00,', 2.598833643460815e-06], ['0x16f44,', 2.598833643460815e-06], ['0x16f50,', 2.598833643460815e-06], ['0x16f93,', 2.598833643460815e-06], ['67},', 2.598833643460815e-06], ['0x16f94,', 2.598833643460815e-06], ['0x16f9f,', 2.598833643460815e-06], ['0x1b000,', 2.598833643460815e-06], ['0x1b001,', 2.598833643460815e-06], ['0x1bc00,', 2.598833643460815e-06], ['0x1bc6a,', 2.598833643460815e-06], ['0x1bc70,', 2.598833643460815e-06], ['0x1bc7c,', 2.598833643460815e-06], ['0x1bc80,', 2.598833643460815e-06], ['0x1bc88,', 2.598833643460815e-06], ['0x1bc90,', 2.598833643460815e-06], ['0x1bc99,', 2.598833643460815e-06], ['0x1d454,', 2.598833643460815e-06], ['0x1d456,', 2.598833643460815e-06], ['0x1d4a2,', 2.598833643460815e-06], ['0x1d4b9,', 2.598833643460815e-06], ['0x1d4bb,', 2.598833643460815e-06], ['0x1d4bd,', 2.598833643460815e-06], ['0x1d4be,', 2.598833643460815e-06], ['0x1d4c3,', 2.598833643460815e-06], ['0x1d4c5,', 2.598833643460815e-06], ['0x1d51e,', 2.598833643460815e-06], ['0x1d552,', 2.598833643460815e-06], ['0x1d6a5,', 2.598833643460815e-06], ['0x1d6c2,', 2.598833643460815e-06], ['0x1d6da,', 2.598833643460815e-06], ['0x1d6dc,', 2.598833643460815e-06], ['0x1d6fc,', 2.598833643460815e-06], ['0x1d714,', 2.598833643460815e-06], ['0x1d716,', 2.598833643460815e-06], ['0x1d736,', 2.598833643460815e-06], ['0x1d74e,', 2.598833643460815e-06], ['0x1d750,', 2.598833643460815e-06], ['0x1d770,', 2.598833643460815e-06], ['0x1d788,', 2.598833643460815e-06], ['0x1d78a,', 2.598833643460815e-06], ['0x1d7aa,', 2.598833643460815e-06], ['0x1d7c2,', 2.598833643460815e-06], ['0x1d7c4,', 2.598833643460815e-06], ['0x1d7cb,', 2.598833643460815e-06], ['0x1e800,', 2.598833643460815e-06], ['0x1e8c4,', 2.598833643460815e-06], ['0x1ee00,', 2.598833643460815e-06], ['0x1ee03,', 2.598833643460815e-06], ['0x1ee05,', 2.598833643460815e-06], ['0x1ee1f,', 2.598833643460815e-06], ['0x1ee21,', 2.598833643460815e-06], ['0x1ee22,', 2.598833643460815e-06], ['0x1ee24,', 2.598833643460815e-06], ['0x1ee27,', 2.598833643460815e-06], ['0x1ee29,', 2.598833643460815e-06], ['0x1ee32,', 2.598833643460815e-06], ['0x1ee34,', 2.598833643460815e-06], ['0x1ee37,', 2.598833643460815e-06], ['0x1ee39,', 2.598833643460815e-06], ['0x1ee3b,', 2.598833643460815e-06], ['0x1ee42,', 2.598833643460815e-06], ['0x1ee47,', 2.598833643460815e-06], ['0x1ee49,', 2.598833643460815e-06], ['0x1ee4d,', 2.598833643460815e-06], ['0x1ee4e,', 2.598833643460815e-06], ['0x1ee4f,', 2.598833643460815e-06], ['0x1ee51,', 2.598833643460815e-06], ['0x1ee52,', 2.598833643460815e-06], ['0x1ee54,', 2.598833643460815e-06], ['0x1ee57,', 2.598833643460815e-06], ['0x1ee59,', 2.598833643460815e-06], ['0x1ee61,', 2.598833643460815e-06], ['0x1ee62,', 2.598833643460815e-06], ['0x1ee64,', 2.598833643460815e-06], ['0x1ee67,', 2.598833643460815e-06], ['0x1ee6a,', 2.598833643460815e-06], ['0x1ee6c,', 2.598833643460815e-06], ['0x1ee72,', 2.598833643460815e-06], ['0x1ee74,', 2.598833643460815e-06], ['0x1ee77,', 2.598833643460815e-06], ['0x1ee79,', 2.598833643460815e-06], ['0x1ee7c,', 2.598833643460815e-06], ['0x1ee7e,', 2.598833643460815e-06], ['0x1ee80,', 2.598833643460815e-06], ['0x1ee81,', 2.598833643460815e-06], ['0x1ee89,', 2.598833643460815e-06], ['0x1ee8b,', 2.598833643460815e-06], ['0x1ee9b,', 2.598833643460815e-06], ['0x1eea1,', 2.598833643460815e-06], ['0x1eea3,', 2.598833643460815e-06], ['0x1eea5,', 2.598833643460815e-06], ['0x1eea9,', 2.598833643460815e-06], ['0x1eeab,', 2.598833643460815e-06], ['0x1eebb,', 2.598833643460815e-06], ['0x20000,', 2.598833643460815e-06], ['0x2a6d6,', 2.598833643460815e-06], ['0x2a700,', 2.598833643460815e-06], ['0x2b734,', 2.598833643460815e-06], ['0x2b740,', 2.598833643460815e-06], ['0x2b81d,', 2.598833643460815e-06], ['0x2b820,', 2.598833643460815e-06], ['0x2cea1,', 2.598833643460815e-06], ['0x2f800,', 2.598833643460815e-06], ['0x2fa1d,', 2.598833643460815e-06], ['unicode_uppercase_letters[]', 2.598833643460815e-06], ['0x00de,', 2.598833643460815e-06], ['0x0100,', 2.598833643460815e-06], ['0x0136,', 2.598833643460815e-06], ['0x0139,', 2.598833643460815e-06], ['0x0147,', 2.598833643460815e-06], ['0x014a,', 2.598833643460815e-06], ['0x0178,', 2.598833643460815e-06], ['0x0179,', 2.598833643460815e-06], ['0x017d,', 2.598833643460815e-06], ['0x0181,', 2.598833643460815e-06], ['0x0182,', 2.598833643460815e-06], ['0x0184,', 2.598833643460815e-06], ['0x0186,', 2.598833643460815e-06], ['0x0187,', 2.598833643460815e-06], ['0x0189,', 2.598833643460815e-06], ['0x018a,', 2.598833643460815e-06], ['0x018b,', 2.598833643460815e-06], ['0x018e,', 2.598833643460815e-06], ['0x0191,', 2.598833643460815e-06], ['0x0193,', 2.598833643460815e-06], ['0x0194,', 2.598833643460815e-06], ['0x0196,', 2.598833643460815e-06], ['0x0198,', 2.598833643460815e-06], ['0x019c,', 2.598833643460815e-06], ['0x019d,', 2.598833643460815e-06], ['0x019f,', 2.598833643460815e-06], ['0x01a0,', 2.598833643460815e-06], ['0x01a2,', 2.598833643460815e-06], ['0x01a6,', 2.598833643460815e-06], ['0x01a7,', 2.598833643460815e-06], ['0x01a9,', 2.598833643460815e-06], ['0x01ac,', 2.598833643460815e-06], ['0x01ae,', 2.598833643460815e-06], ['0x01af,', 2.598833643460815e-06], ['0x01b1,', 2.598833643460815e-06], ['0x01b2,', 2.598833643460815e-06], ['0x01b3,', 2.598833643460815e-06], ['0x01b5,', 2.598833643460815e-06], ['0x01b7,', 2.598833643460815e-06], ['0x01b8,', 2.598833643460815e-06], ['0x01bc,', 2.598833643460815e-06], ['0x01c4,', 2.598833643460815e-06], ['0x01cd,', 2.598833643460815e-06], ['0x01cf,', 2.598833643460815e-06], ['0x01db,', 2.598833643460815e-06], ['0x01de,', 2.598833643460815e-06], ['0x01ee,', 2.598833643460815e-06], ['0x01f1,', 2.598833643460815e-06], ['0x01f4,', 2.598833643460815e-06], ['0x01f6,', 2.598833643460815e-06], ['0x01f8,', 2.598833643460815e-06], ['0x01fa,', 2.598833643460815e-06], ['0x0232,', 2.598833643460815e-06], ['0x023a,', 2.598833643460815e-06], ['0x023b,', 2.598833643460815e-06], ['0x023d,', 2.598833643460815e-06], ['0x023e,', 2.598833643460815e-06], ['0x0241,', 2.598833643460815e-06], ['0x0243,', 2.598833643460815e-06], ['0x0244,', 2.598833643460815e-06], ['0x0246,', 2.598833643460815e-06], ['0x0248,', 2.598833643460815e-06], ['0x024e,', 2.598833643460815e-06], ['0x0372,', 2.598833643460815e-06], ['9},', 2.598833643460815e-06], ['0x0389,', 2.598833643460815e-06], ['0x0391,', 2.598833643460815e-06], ['0x0392,', 2.598833643460815e-06], ['0x03ab,', 2.598833643460815e-06], ['0x03cf,', 2.598833643460815e-06], ['0x03d2,', 2.598833643460815e-06], ['0x03d3,', 2.598833643460815e-06], ['0x03d4,', 2.598833643460815e-06], ['0x03d8,', 2.598833643460815e-06], ['0x03ee,', 2.598833643460815e-06], ['0x03f4,', 2.598833643460815e-06], ['0x03f9,', 2.598833643460815e-06], ['0x03fa,', 2.598833643460815e-06], ['0x03fd,', 2.598833643460815e-06], ['0x042f,', 2.598833643460815e-06], ['0x0460,', 2.598833643460815e-06], ['0x0480,', 2.598833643460815e-06], ['0x04c0,', 2.598833643460815e-06], ['0x04c1,', 2.598833643460815e-06], ['0x04cd,', 2.598833643460815e-06], ['0x04d0,', 2.598833643460815e-06], ['0x052e,', 2.598833643460815e-06], ['0x1e94,', 2.598833643460815e-06], ['0x1e9e,', 2.598833643460815e-06], ['0x1efe,', 2.598833643460815e-06], ['0x1f08,', 2.598833643460815e-06], ['0x1f0f,', 2.598833643460815e-06], ['0x1f28,', 2.598833643460815e-06], ['0x1f2f,', 2.598833643460815e-06], ['0x1f38,', 2.598833643460815e-06], ['0x1f3f,', 2.598833643460815e-06], ['0x1f68,', 2.598833643460815e-06], ['0x1f6f,', 2.598833643460815e-06], ['0x1fb8,', 2.598833643460815e-06], ['0x1fbb,', 2.598833643460815e-06], ['0x1fc8,', 2.598833643460815e-06], ['0x1fcb,', 2.598833643460815e-06], ['0x1fd8,', 2.598833643460815e-06], ['0x1fe8,', 2.598833643460815e-06], ['0x1ff8,', 2.598833643460815e-06], ['0x1ffb,', 2.598833643460815e-06], ['0x210b,', 2.598833643460815e-06], ['0x210d,', 2.598833643460815e-06], ['0x2110,', 2.598833643460815e-06], ['0x2112,', 2.598833643460815e-06], ['0x2130,', 2.598833643460815e-06], ['0x2133,', 2.598833643460815e-06], ['0x213e,', 2.598833643460815e-06], ['62},', 2.598833643460815e-06], ['0x2c62,', 2.598833643460815e-06], ['0x2c63,', 2.598833643460815e-06], ['0x2c64,', 2.598833643460815e-06], ['0x2c67,', 2.598833643460815e-06], ['0x2c6d,', 2.598833643460815e-06], ['0x2c6e,', 2.598833643460815e-06], ['0x2c70,', 2.598833643460815e-06], ['0x2c72,', 2.598833643460815e-06], ['0x2c75,', 2.598833643460815e-06], ['0x2c7e,', 2.598833643460815e-06], ['0x2c80,', 2.598833643460815e-06], ['0x2c82,', 2.598833643460815e-06], ['0x2ce2,', 2.598833643460815e-06], ['0x2ced,', 2.598833643460815e-06], ['31054},', 2.598833643460815e-06], ['0xa642,', 2.598833643460815e-06], ['0xa66c,', 2.598833643460815e-06], ['0xa680,', 2.598833643460815e-06], ['0xa69a,', 2.598833643460815e-06], ['0xa72e,', 2.598833643460815e-06], ['0xa732,', 2.598833643460815e-06], ['0xa76e,', 2.598833643460815e-06], ['0xa779,', 2.598833643460815e-06], ['0xa77d,', 2.598833643460815e-06], ['0xa77e,', 2.598833643460815e-06], ['0xa786,', 2.598833643460815e-06], ['0xa78d,', 2.598833643460815e-06], ['0xa790,', 2.598833643460815e-06], ['0xa792,', 2.598833643460815e-06], ['0xa796,', 2.598833643460815e-06], ['0xa7aa,', 2.598833643460815e-06], ['0xa7ab,', 2.598833643460815e-06], ['0xa7b1,', 2.598833643460815e-06], ['0x10427,', 2.598833643460815e-06], ['0x118bf,', 2.598833643460815e-06], ['0x1d419,', 2.598833643460815e-06], ['0x1d434,', 2.598833643460815e-06], ['0x1d44d,', 2.598833643460815e-06], ['0x1d468,', 2.598833643460815e-06], ['0x1d481,', 2.598833643460815e-06], ['0x1d4b5,', 2.598833643460815e-06], ['0x1d4d0,', 2.598833643460815e-06], ['0x1d4e9,', 2.598833643460815e-06], ['0x1d504,', 2.598833643460815e-06], ['0x1d538,', 2.598833643460815e-06], ['0x1d56c,', 2.598833643460815e-06], ['0x1d585,', 2.598833643460815e-06], ['0x1d5a0,', 2.598833643460815e-06], ['0x1d5b9,', 2.598833643460815e-06], ['0x1d5d4,', 2.598833643460815e-06], ['0x1d5ed,', 2.598833643460815e-06], ['0x1d608,', 2.598833643460815e-06], ['0x1d621,', 2.598833643460815e-06], ['0x1d63c,', 2.598833643460815e-06], ['0x1d655,', 2.598833643460815e-06], ['0x1d670,', 2.598833643460815e-06], ['0x1d689,', 2.598833643460815e-06], ['0x1d6e2,', 2.598833643460815e-06], ['0x1d71c,', 2.598833643460815e-06], ['0x1d756,', 2.598833643460815e-06], ['0x1d790,', 2.598833643460815e-06], ['RANGES.', 2.598833643460815e-06], ['Lex::is_in_unicode_range(unsigned', 2.598833643460815e-06], ['range_size)', 2.598833643460815e-06], ['0x100)', 2.598833643460815e-06], ['&ranges[i];', 2.598833643460815e-06], ['(lo', 2.598833643460815e-06], ['hi)', 2.598833643460815e-06], ['(hi', 2.598833643460815e-06], ['lo)', 2.598833643460815e-06], ['&ranges[mid];', 2.598833643460815e-06], ['mid;', 2.598833643460815e-06], ['Lex::is_unicode_space(unsigned', 2.598833643460815e-06], ['unicode_space,', 2.598833643460815e-06], ['ARRAY_SIZE(unicode_space));', 2.598833643460815e-06], ['digit--a', 2.598833643460815e-06], ['Lex::is_unicode_digit(unsigned', 2.598833643460815e-06], ['unicode_digits,', 2.598833643460815e-06], ['ARRAY_SIZE(unicode_digits));', 2.598833643460815e-06], ['letter--a', 2.598833643460815e-06], ['Lex::is_unicode_letter(unsigned', 2.598833643460815e-06], ['unicode_letters,', 2.598833643460815e-06], ['ARRAY_SIZE(unicode_letters));', 2.598833643460815e-06], ['letter.', 2.598833643460815e-06], ['Lex::is_unicode_uppercase(unsigned', 2.598833643460815e-06], ['unicode_uppercase_letters,', 2.598833643460815e-06], ['ARRAY_SIZE(unicode_uppercase_letters));', 2.598833643460815e-06], ['Lex::is_exported_mangled_name(const', 2.598833643460815e-06], ['name[0];', 2.598833643460815e-06], ['name.data();', 2.598833643460815e-06], ["'U'))", 2.598833643460815e-06], ['want;', 2.598833643460815e-06], ['(!Lex::is_hex_digit(c))', 2.598833643460815e-06], ['Lex::hex_val(c);', 2.598833643460815e-06], ['unmangled', 2.598833643460815e-06], ['utf-8', 2.598833643460815e-06], ['Lex::is_exported_name(const', 2.598833643460815e-06], ['uchar;', 2.598833643460815e-06], ['(Lex::fetch_char(name.c_str(),', 2.598833643460815e-06], ['&uchar)', 2.598833643460815e-06], ['Lex::is_unicode_letter(uchar)', 2.598833643460815e-06], ['Lex::is_unicode_uppercase(uchar);', 2.598833643460815e-06], ['gather_identifier.', 2.598833643460815e-06], ['Lex::is_invalid_identifier(const', 2.598833643460815e-06], ['name.find("$INVALID$")', 2.598833643460815e-06], ['toir.cc', 2.598833643460815e-06], ['"stmt.h"', 2.598833643460815e-06], ['pop_binding_label', 2.598833643460815e-06], ['*bl)', 2.598833643460815e-06], ['*obl', 2.598833643460815e-06], ['bl->level_chain;', 2.598833643460815e-06], ['(ent->level', 2.598833643460815e-06], ['bl)', 2.598833643460815e-06], ['ent->in_try_scope', 2.598833643460815e-06], ['ent->in_catch_scope', 2.598833643460815e-06], ['(ent->fwdrefs)', 2.598833643460815e-06], ['ref->level', 2.598833643460815e-06], ['pop_label', 2.598833643460815e-06], ['(!ent->bc_label)', 2.598833643460815e-06], ['"variables"', 2.598833643460815e-06], ['debugger', 2.598833643460815e-06], ['d_function_chain->labels->remove', 2.598833643460815e-06], ["'binding", 2.598833643460815e-06], ["level'", 2.598833643460815e-06], ['flow.', 2.598833643460815e-06], ['Primarily', 2.598833643460815e-06], ['*new_level', 2.598833643460815e-06], ['new_level->level_chain', 2.598833643460815e-06], ['new_level->kind', 2.598833643460815e-06], ['new_level;', 2.598833643460815e-06], ['level->level_chain;', 2.598833643460815e-06], ['level->names;', 2.598833643460815e-06], ['BLOCK_SUBBLOCKS', 2.598833643460815e-06], ['subblock,', 2.598833643460815e-06], ['superior.', 2.598833643460815e-06], ['BLOCK_CHAIN', 2.598833643460815e-06], ['(level->kind', 2.598833643460815e-06], ['level_function)', 2.598833643460815e-06], ['Dispose', 2.598833643460815e-06], ['(d_function_chain->labels)', 2.598833643460815e-06], ['d_function_chain->labels->traverse<tree,', 2.598833643460815e-06], ['&pop_label>', 2.598833643460815e-06], ['d_function_chain->labels)', 2.598833643460815e-06], ['language_function', 2.598833643460815e-06], ['d_function_chain;', 2.598833643460815e-06], ['f->labels->traverse<binding_level', 2.598833643460815e-06], ['&pop_binding_label>', 2.598833643460815e-06], ['current_binding_level->blocks', 2.598833643460815e-06], ['block_chainon', 2.598833643460815e-06], ['(current_binding_level->blocks,', 2.598833643460815e-06], ['(d_function_chain->stmt_list,', 2.598833643460815e-06], ['d_function_chain->stmt_list->pop', 2.598833643460815e-06], ['build_empty_stmt,', 2.598833643460815e-06], ['advantage', 2.598833643460815e-06], ['buildup', 2.598833643460815e-06], ['EMPTY_STMT_P', 2.598833643460815e-06], ['(tsi_one_before_end_p', 2.598833643460815e-06], ['tsi_delink', 2.598833643460815e-06], ['(&i);', 2.598833643460815e-06], ['free_stmt_list', 2.598833643460815e-06], ['IS_EMPTY_STMT', 2.598833643460815e-06], ['(!TREE_SIDE_EFFECTS', 2.598833643460815e-06], ['COMPOUND_EXPR)', 2.598833643460815e-06], ['(EXPR_P', 2.598833643460815e-06], ['!EXPR_HAS_LOCATION', 2.598833643460815e-06], ['d_function_chain->stmt_list->last', 2.598833643460815e-06], ['add_stmt(),', 2.598833643460815e-06], ['appends', 2.598833643460815e-06], ['current_binding_level.', 2.598833643460815e-06], ['*func_;', 2.598833643460815e-06], ['TREE_CHAIN.', 2.598833643460815e-06], ['continue_label_;', 2.598833643460815e-06], ['this->func_', 2.598833643460815e-06], ['S.', 2.598833643460815e-06], ['user-declared', 2.598833643460815e-06], ['contour', 2.598833643460815e-06], ['start_scope', 2.598833643460815e-06], ['(kind);', 2.598833643460815e-06], ['start_scope,', 2.598833643460815e-06], ['end_scope', 2.598833643460815e-06], ['end_scope,', 2.598833643460815e-06], ['finish_scope', 2.598833643460815e-06], ['(scope);', 2.598833643460815e-06], ['is_return_label', 2.598833643460815e-06], ['(Identifier', 2.598833643460815e-06], ['*ident)', 2.598833643460815e-06], ['(this->func_->returnLabel)', 2.598833643460815e-06], ['this->func_->returnLabel->ident', 2.598833643460815e-06], ['specifying', 2.598833643460815e-06], ['define_label', 2.598833643460815e-06], ['this->check_previous_goto', 2.598833643460815e-06], ['(ent->statement,', 2.598833643460815e-06], ['do_label', 2.598833643460815e-06], ['auto-vectorization', 2.598833643460815e-06], ['excemption', 2.598833643460815e-06], ['visitor,', 2.598833643460815e-06], ['regardless.', 2.598833643460815e-06], ['(TREE_USED', 2.598833643460815e-06], ['LABEL.', 2.598833643460815e-06], ['do_jump', 2.598833643460815e-06], ['(fold_build1', 2.598833643460815e-06], ['check_goto', 2.598833643460815e-06], ['*from,', 2.598833643460815e-06], ['*to)', 2.598833643460815e-06], ['*fwdref', 2.598833643460815e-06], ['ggc_alloc<d_label_use_entry>', 2.598833643460815e-06], ['fwdref->level', 2.598833643460815e-06], ['fwdref->statement', 2.598833643460815e-06], ['from;', 2.598833643460815e-06], ['fwdref->next', 2.598833643460815e-06], ['fwdref;', 2.598833643460815e-06], ['(ent->in_try_scope)', 2.598833643460815e-06], ['(ent->in_catch_scope)', 2.598833643460815e-06], ['FWDREF', 2.598833643460815e-06], ['labels.', 2.598833643460815e-06], ['check_previous_goto', 2.598833643460815e-06], ['*fwdref)', 2.598833643460815e-06], ['(binding_level', 2.598833643460815e-06], ['b->level_chain)', 2.598833643460815e-06], ['fwdref->level)', 2.598833643460815e-06], ['level_try', 2.598833643460815e-06], ['b->kind', 2.598833643460815e-06], ['(s->isLabelStatement', 2.598833643460815e-06], ['(fwdref->statement->loc);', 2.598833643460815e-06], ['(s->isCaseStatement', 2.598833643460815e-06], ['(s->isDefaultStatement', 2.598833643460815e-06], ['"default', 2.598833643460815e-06], ['lookup_label', 2.598833643460815e-06], ['("label', 2.598833643460815e-06], ['function",', 2.598833643460815e-06], ['"(unnamed)");', 2.598833643460815e-06], ['htab', 2.598833643460815e-06], ['(!d_function_chain->labels)', 2.598833643460815e-06], ['d_function_chain->labels', 2.598833643460815e-06], ['hash_map<Statement', 2.598833643460815e-06], ['d_label_entry>::create_ggc', 2.598833643460815e-06], ['(ident->toChars', 2.598833643460815e-06], ['ggc_cleared_alloc<d_label_entry>', 2.598833643460815e-06], ['ent->statement', 2.598833643460815e-06], ['d_function_chain->labels->put', 2.598833643460815e-06], ['*ent);', 2.598833643460815e-06], ['(!existed);', 2.598833643460815e-06], ['BC', 2.598833643460815e-06], ['which.', 2.598833643460815e-06], ['lookup_bc_label', 2.598833643460815e-06], ['bc_kind', 2.598833643460815e-06], ['(vec)', 2.598833643460815e-06], ['LABEL_DECL)', 2.598833643460815e-06], ['bc_break)', 2.598833643460815e-06], ['bc_continue)', 2.598833643460815e-06], ['ent->bc_label', 2.598833643460815e-06], ['push_break_label', 2.598833643460815e-06], ['bc_break);', 2.598833643460815e-06], ['pop_break_label', 2.598833643460815e-06], ['push_continue_label', 2.598833643460815e-06], ['bc_continue);', 2.598833643460815e-06], ['pop_continue_label', 2.598833643460815e-06], ["(exit/failure/success)'", 2.598833643460815e-06], ['try/catch/finally.', 2.598833643460815e-06], ['(OnScopeStatement', 2.598833643460815e-06], ['(IfStatement', 2.598833643460815e-06], ['(level_cond);', 2.598833643460815e-06], ["'if'", 2.598833643460815e-06], ['ifcond', 2.598833643460815e-06], ["'then'", 2.598833643460815e-06], ['(s->ifbody)', 2.598833643460815e-06], ['(s->ifbody);', 2.598833643460815e-06], ["'else", 2.598833643460815e-06], ['(s->elsebody)', 2.598833643460815e-06], ['(s->elsebody);', 2.598833643460815e-06], ['(ifcond,', 2.598833643460815e-06], ['elsebody);', 2.598833643460815e-06], ['if-then', 2.598833643460815e-06], ['`pragma', 2.598833643460815e-06], ['(PragmaStatement', 2.598833643460815e-06], ['`while', 2.598833643460815e-06], ['(WhileStatement', 2.598833643460815e-06], ['statments', 2.598833643460815e-06], ['(DoStatement', 2.598833643460815e-06], ["'while'", 2.598833643460815e-06], ['test,', 2.598833643460815e-06], ['(ForStatement', 2.598833643460815e-06], ['(s->_init)', 2.598833643460815e-06], ['(s->_init);', 2.598833643460815e-06], ['(s->condition)', 2.598833643460815e-06], ['(s->increment)', 2.598833643460815e-06], ['effects?', 2.598833643460815e-06], ['(s->increment));', 2.598833643460815e-06], ['(ForeachStatement', 2.598833643460815e-06], ['(...;', 2.598833643460815e-06], ["[x..y])'", 2.598833643460815e-06], ['(ForeachRangeStatement', 2.598833643460815e-06], ['(BreakStatement', 2.598833643460815e-06], ['eg:', 2.598833643460815e-06], ['label->statement->getRelatedLabeled', 2.598833643460815e-06], ['bc_break));', 2.598833643460815e-06], ['(ContinueStatement', 2.598833643460815e-06], ['(label->statement,', 2.598833643460815e-06], ['bc_continue));', 2.598833643460815e-06], ['(GotoStatement', 2.598833643460815e-06], ['(s->label->statement', 2.598833643460815e-06], ['(s->tf', 2.598833643460815e-06], ['s->label->statement->tf);', 2.598833643460815e-06], ['(s->label->statement,', 2.598833643460815e-06], ['s->label->ident);', 2.598833643460815e-06], ['s->label->statement);', 2.598833643460815e-06], ['labeled.', 2.598833643460815e-06], ['(LabelStatement', 2.598833643460815e-06], ['LabelDsymbol', 2.598833643460815e-06], ['*sym;', 2.598833643460815e-06], ['(s->ident))', 2.598833643460815e-06], ['this->func_->returnLabel;', 2.598833643460815e-06], ['(s->ident);', 2.598833643460815e-06], ['(sym->statement,', 2.598833643460815e-06], ['sym->ident);', 2.598833643460815e-06], ['this->func_->fensure', 2.598833643460815e-06], ['(this->func_->fensure);', 2.598833643460815e-06], ['(SwitchStatement', 2.598833643460815e-06], ['(level_switch);', 2.598833643460815e-06], ['(s->condition);', 2.598833643460815e-06], ['*condtype', 2.598833643460815e-06], ['s->condition->type->toBasetype', 2.598833643460815e-06], ['(s->condition->type->isString', 2.598833643460815e-06], ['condtype->nextOf', 2.598833643460815e-06], ['(etype->ty)', 2.598833643460815e-06], ['LIBCALL_SWITCH_STRING;', 2.598833643460815e-06], ['LIBCALL_SWITCH_USTRING;', 2.598833643460815e-06], ['LIBCALL_SWITCH_DSTRING;', 2.598833643460815e-06], ['::error', 2.598833643460815e-06], ['("switch', 2.598833643460815e-06], ['"some', 2.598833643460815e-06], ['Apparently', 2.598833643460815e-06], ['usable.', 2.598833643460815e-06], ['condtype->sarrayOf', 2.598833643460815e-06], ['(s->cases->dim);', 2.598833643460815e-06], ['s->cases->sort', 2.598833643460815e-06], ['cs->index', 2.598833643460815e-06], ['(cs->exp->op', 2.598833643460815e-06], ['s->error', 2.598833643460815e-06], ['("case', 2.598833643460815e-06], ['cs->exp->toChars', 2.598833643460815e-06], ['(cs->exp,', 2.598833643460815e-06], ['(condtype->arrayOf', 2.598833643460815e-06], ['(s->cases->dim),', 2.598833643460815e-06], ['(!condtype->isscalar', 2.598833643460815e-06], ['condtype->toChars', 2.598833643460815e-06], ['LABEL_DECLs', 2.598833643460815e-06], ['refered', 2.598833643460815e-06], ['(s->cases)', 2.598833643460815e-06], ['(cs);', 2.598833643460815e-06], ['(condition', 2.598833643460815e-06], ['case)', 2.598833643460815e-06], ['caselabel;', 2.598833643460815e-06], ['ifcase', 2.598833643460815e-06], ['(condtype),', 2.598833643460815e-06], ['(cs->exp));', 2.598833643460815e-06], ['caselabel);', 2.598833643460815e-06], ['(ifcase,', 2.598833643460815e-06], ['cs);', 2.598833643460815e-06], ['(s->sdefault)', 2.598833643460815e-06], ['defaultlabel', 2.598833643460815e-06], ['(s->sdefault);', 2.598833643460815e-06], ['(defaultlabel);', 2.598833643460815e-06], ['(defaultlabel)', 2.598833643460815e-06], ['s->sdefault);', 2.598833643460815e-06], ['Switch', 2.598833643460815e-06], ['casebody', 2.598833643460815e-06], ['switch_expr,', 2.598833643460815e-06], ['(casebody);', 2.598833643460815e-06], ['switchexpr', 2.598833643460815e-06], ['(condition),', 2.598833643460815e-06], ['casebody);', 2.598833643460815e-06], ['(switchexpr);', 2.598833643460815e-06], ['SWITCH_ALL_CASES_P', 2.598833643460815e-06], ['(switchexpr)', 2.598833643460815e-06], ['SWITCH_BREAK_LABEL_P', 2.598833643460815e-06], ["'break'", 2.598833643460815e-06], ['(CaseStatement', 2.598833643460815e-06], ['casevalue;', 2.598833643460815e-06], ['(s->exp->type->isscalar', 2.598833643460815e-06], ['(s->index,', 2.598833643460815e-06], ['(Type::tint32));', 2.598833643460815e-06], ['(casevalue,', 2.598833643460815e-06], ['(DefaultStatement', 2.598833643460815e-06], ["default'", 2.598833643460815e-06], ['DefaultStatement', 2.598833643460815e-06], ['(GotoDefaultStatement', 2.598833643460815e-06], ['(s->sw->sdefault);', 2.598833643460815e-06], ["case'", 2.598833643460815e-06], ['(GotoCaseStatement', 2.598833643460815e-06], ['(s->cs);', 2.598833643460815e-06], ['SwitchError', 2.598833643460815e-06], ['DefaultStatement,', 2.598833643460815e-06], ['(SwitchErrorStatement', 2.598833643460815e-06], ['(d_assert_call', 2.598833643460815e-06], ['(s->loc,', 2.598833643460815e-06], ['LIBCALL_SWITCH_ERROR));', 2.598833643460815e-06], ['exits', 2.598833643460815e-06], ['supplies', 2.598833643460815e-06], ['(ReturnStatement', 2.598833643460815e-06], ['(s->exp', 2.598833643460815e-06], ['(NULL_TREE));', 2.598833643460815e-06], ['*)this->func_->type;', 2.598833643460815e-06], ['this->func_->tintro', 2.598833643460815e-06], ['this->func_->tintro->nextOf', 2.598833643460815e-06], ['tf->nextOf', 2.598833643460815e-06], ['((this->func_->isMain', 2.598833643460815e-06], ['this->func_->isCMain', 2.598833643460815e-06], ['(this->func_->nrvo_can', 2.598833643460815e-06], ['this->func_->nrvo_var)', 2.598833643460815e-06], ['DECL_RESULT;', 2.598833643460815e-06], ['(this->func_));', 2.598833643460815e-06], ['(s->exp,', 2.598833643460815e-06], ['(ExpStatement', 2.598833643460815e-06], ['(s->exp)', 2.598833643460815e-06], ['(CompoundStatement', 2.598833643460815e-06], ["(Tuple!(...))'", 2.598833643460815e-06], ['`do', 2.598833643460815e-06], ["(0)',", 2.598833643460815e-06], ['(UnrolledLoopStatement', 2.598833643460815e-06], ['(ScopeStatement', 2.598833643460815e-06], ['(s->statement', 2.598833643460815e-06], ['(WithStatement', 2.598833643460815e-06], ['(level_with);', 2.598833643460815e-06], ['(s->wthis)', 2.598833643460815e-06], ['initialisation', 2.598833643460815e-06], ["'with'", 2.598833643460815e-06], ['s->wthis->_init->isExpInitializer', 2.598833643460815e-06], ['(ie', 2.598833643460815e-06], ['(s->wthis);', 2.598833643460815e-06], ['(ie->exp);', 2.598833643460815e-06], ["'throw", 2.598833643460815e-06], ["Object'.", 2.598833643460815e-06], ['Object.', 2.598833643460815e-06], ['Foreign', 2.598833643460815e-06], ['(ThrowStatement', 2.598833643460815e-06], ['()->isClassHandle', 2.598833643460815e-06], ['(!flag_exceptions)', 2.598833643460815e-06], ['(!warned)', 2.598833643460815e-06], ['"exception', 2.598833643460815e-06], ['-fexceptions', 2.598833643460815e-06], ['enable");', 2.598833643460815e-06], ['id->isCPPclass', 2.598833643460815e-06], ['classes");', 2.598833643460815e-06], ['(cd->com', 2.598833643460815e-06], ['id->com))', 2.598833643460815e-06], ['COM', 2.598833643460815e-06], ['objects");', 2.598833643460815e-06], ['(get_object_type', 2.598833643460815e-06], ['(build_libcall', 2.598833643460815e-06], ['(LIBCALL_THROW,', 2.598833643460815e-06], ['arg));', 2.598833643460815e-06], ['try-catch', 2.598833643460815e-06], ["(failure)'", 2.598833643460815e-06], ['(TryCatchStatement', 2.598833643460815e-06], ['(s->catches)', 2.598833643460815e-06], ['s->catches->dim;', 2.598833643460815e-06], ['*vcatch', 2.598833643460815e-06], ['(*s->catches)[i];', 2.598833643460815e-06], ['(level_catch);', 2.598833643460815e-06], ['(BUILT_IN_EH_POINTER);', 2.598833643460815e-06], ['catchtype', 2.598833643460815e-06], ['(vcatch->type);', 2.598833643460815e-06], ['(ehptr,', 2.598833643460815e-06], ['*tcatch', 2.598833643460815e-06], ['vcatch->type->toBasetype', 2.598833643460815e-06], ['tcatch->isClassHandle', 2.598833643460815e-06], ['LIBCALL_CXA_BEGIN_CATCH', 2.598833643460815e-06], ['LIBCALL_BEGIN_CATCH;', 2.598833643460815e-06], ['vcatch->type,', 2.598833643460815e-06], ['ehptr);', 2.598833643460815e-06], ['(vcatch->var)', 2.598833643460815e-06], ['__gdc_begin_catch()', 2.598833643460815e-06], ['uncaught', 2.598833643460815e-06], ['(vcatch->handler)', 2.598833643460815e-06], ['(vcatch->handler);', 2.598833643460815e-06], ['callback.', 2.598833643460815e-06], ['endcatch', 2.598833643460815e-06], ['(LIBCALL_CXA_END_CATCH,', 2.598833643460815e-06], ['catchbody,', 2.598833643460815e-06], ['endcatch);', 2.598833643460815e-06], ['(CATCH_EXPR,', 2.598833643460815e-06], ['catchtype,', 2.598833643460815e-06], ['catchbody));', 2.598833643460815e-06], ['TRY_CATCH_EXPR', 2.598833643460815e-06], ['push.', 2.598833643460815e-06], ['(catches)', 2.598833643460815e-06], ['(catches,', 2.598833643460815e-06], ['(TRY_CATCH_EXPR,', 2.598833643460815e-06], ['catches));', 2.598833643460815e-06], ['try-finally', 2.598833643460815e-06], ["(exit)'", 2.598833643460815e-06], ['(TryFinallyStatement', 2.598833643460815e-06], ['(level_finally);', 2.598833643460815e-06], ['(s->finalbody)', 2.598833643460815e-06], ['(s->finalbody);', 2.598833643460815e-06], ['finally));', 2.598833643460815e-06], ['`synchronized', 2.598833643460815e-06], ['monitor/critical', 2.598833643460815e-06], ['enter', 2.598833643460815e-06], ['wrapped', 2.598833643460815e-06], ['try/finally.', 2.598833643460815e-06], ['(SynchronizedStatement', 2.598833643460815e-06], ['Inline', 2.598833643460815e-06], ['Assembler', 2.598833643460815e-06], ['implemented,', 2.598833643460815e-06], ['leverage', 2.598833643460815e-06], ['GccAsmStatement', 2.598833643460815e-06], ['(AsmStatement', 2.598833643460815e-06], ['("D', 2.598833643460815e-06], ['GDC.");', 2.598833643460815e-06], ['INSN', 2.598833643460815e-06], ['OUTPUTS,', 2.598833643460815e-06], ['INPUTS,', 2.598833643460815e-06], ['CLOBBERS.', 2.598833643460815e-06], ['(GccAsmStatement', 2.598833643460815e-06], ['*insn', 2.598833643460815e-06], ['*)s->insn;', 2.598833643460815e-06], ['s->args->dim;', 2.598833643460815e-06], ['(*s->names)[i];', 2.598833643460815e-06], ['*sname', 2.598833643460815e-06], ['name->toChars', 2.598833643460815e-06], ['(sname),', 2.598833643460815e-06], ['sname)', 2.598833643460815e-06], ['*constr', 2.598833643460815e-06], ['*)(*s->constraints)[i];', 2.598833643460815e-06], ['*)(constr->len', 2.598833643460815e-06], ['constr->string', 2.598833643460815e-06], ['(constr->len,', 2.598833643460815e-06], ['*earg', 2.598833643460815e-06], ['(*s->args)[i];', 2.598833643460815e-06], ['(earg);', 2.598833643460815e-06], ['s->outputargs)', 2.598833643460815e-06], ['(outputs,', 2.598833643460815e-06], ['(inputs,', 2.598833643460815e-06], ['(s->clobbers)', 2.598833643460815e-06], ['s->clobbers->dim;', 2.598833643460815e-06], ['*clobber', 2.598833643460815e-06], ['*)(*s->clobbers)[i];', 2.598833643460815e-06], ['*)(clobber->len', 2.598833643460815e-06], ['clobber->string', 2.598833643460815e-06], ['(clobber->len,', 2.598833643460815e-06], ['(clobbers,', 2.598833643460815e-06], ['(s->labels)', 2.598833643460815e-06], ['s->labels->dim;', 2.598833643460815e-06], ['(*s->labels)[i];', 2.598833643460815e-06], ['GotoStatement', 2.598833643460815e-06], ['*gs', 2.598833643460815e-06], ['(*s->gotos)[i];', 2.598833643460815e-06], ['(gs->label->statement', 2.598833643460815e-06], ['(gs->tf', 2.598833643460815e-06], ['gs->label->statement->tf);', 2.598833643460815e-06], ['*sident', 2.598833643460815e-06], ['(sident),', 2.598833643460815e-06], ['sident);', 2.598833643460815e-06], ['(gs->label->statement,', 2.598833643460815e-06], ['gs->label->ident);', 2.598833643460815e-06], ['(labels,', 2.598833643460815e-06], ['validation', 2.598833643460815e-06], ['*insnstring', 2.598833643460815e-06], ['*)(insn->len', 2.598833643460815e-06], ['insn->string', 2.598833643460815e-06], ['(insn->len,', 2.598833643460815e-06], ['insnstring);', 2.598833643460815e-06], ['resolve_asm_operand_names', 2.598833643460815e-06], ['noutputs', 2.598833643460815e-06], ['s->outputargs;', 2.598833643460815e-06], ['ninputs', 2.598833643460815e-06], ['(s->args->dim', 2.598833643460815e-06], ['**oconstraints', 2.598833643460815e-06], ['allows_mem,', 2.598833643460815e-06], ['allows_reg,', 2.598833643460815e-06], ['is_inout;', 2.598833643460815e-06], ['outputs;', 2.598833643460815e-06], ['oconstraints[i]', 2.598833643460815e-06], ['constraint;', 2.598833643460815e-06], ['(parse_output_constraint', 2.598833643460815e-06], ['&allows_reg,', 2.598833643460815e-06], ['&is_inout))', 2.598833643460815e-06], ['(!allows_reg)', 2.598833643460815e-06], ['(parse_input_constraint', 2.598833643460815e-06], ['oconstraints,', 2.598833643460815e-06], ['&allows_reg))', 2.598833643460815e-06], ['(!allows_reg', 2.598833643460815e-06], ['allows_mem)', 2.598833643460815e-06], ['input;', 2.598833643460815e-06], ['build5', 2.598833643460815e-06], ['clobbers,', 2.598833643460815e-06], ['(s->loc));', 2.598833643460815e-06], ['syntax', 2.598833643460815e-06], ['ASM_EXPR.', 2.598833643460815e-06], ['(s->args', 2.598833643460815e-06], ['s->clobbers', 2.598833643460815e-06], ['ASM_INPUT_P', 2.598833643460815e-06], ['Asm', 2.598833643460815e-06], ["'pure'.", 2.598833643460815e-06], ['ASM_VOLATILE_P', 2.598833643460815e-06], ['!(s->stc', 2.598833643460815e-06], ['STCpure);', 2.598833643460815e-06], ['(ImportStatement', 2.598833643460815e-06], ['(s->imports', 2.598833643460815e-06], ['s->imports->dim;', 2.598833643460815e-06], ['(*s->imports)[i];', 2.598833643460815e-06], ['(fd->loc);', 2.598833643460815e-06], ['v.build_stmt', 2.598833643460815e-06], ['(fd->fbody);', 2.598833643460815e-06], ['gogo.cc', 2.598833643460815e-06], ['Gogo.', 2.598833643460815e-06], ['Gogo::Gogo(Backend*', 2.598833643460815e-06], ['linemap,', 2.598833643460815e-06], ['pointer_size)', 2.598833643460815e-06], ['backend_(backend),', 2.598833643460815e-06], ['functions_(),', 2.598833643460815e-06], ['globals_(new', 2.598833643460815e-06], ['file_block_names_(),', 2.598833643460815e-06], ['imports_(),', 2.598833643460815e-06], ['imported_unsafe_(false),', 2.598833643460815e-06], ['current_file_imported_unsafe_(false),', 2.598833643460815e-06], ['packages_(),', 2.598833643460815e-06], ['init_functions_(),', 2.598833643460815e-06], ['var_deps_(),', 2.598833643460815e-06], ['need_init_fn_(false),', 2.598833643460815e-06], ['init_fn_name_(),', 2.598833643460815e-06], ['imported_init_fns_(),', 2.598833643460815e-06], ['pkgpath_(),', 2.598833643460815e-06], ['pkgpath_symbol_(),', 2.598833643460815e-06], ['prefix_(),', 2.598833643460815e-06], ['pkgpath_set_(false),', 2.598833643460815e-06], ['pkgpath_from_option_(false),', 2.598833643460815e-06], ['prefix_from_option_(false),', 2.598833643460815e-06], ['relative_import_path_(),', 2.598833643460815e-06], ['c_header_(),', 2.598833643460815e-06], ['check_divide_by_zero_(true),', 2.598833643460815e-06], ['check_divide_overflow_(true),', 2.598833643460815e-06], ['compiling_runtime_(false),', 2.598833643460815e-06], ['debug_escape_level_(0),', 2.598833643460815e-06], ['nil_check_size_threshold_(4096),', 2.598833643460815e-06], ['verify_types_(),', 2.598833643460815e-06], ['interface_types_(),', 2.598833643460815e-06], ['specific_type_functions_(),', 2.598833643460815e-06], ['specific_type_functions_are_written_(false),', 2.598833643460815e-06], ['named_types_are_converted_(false),', 2.598833643460815e-06], ['analysis_sets_(),', 2.598833643460815e-06], ['gc_roots_(),', 2.598833643460815e-06], ['imported_inlinable_functions_(),', 2.598833643460815e-06], ['imported_inline_functions_()', 2.598833643460815e-06], ['Type::make_integer_type("uint8",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINT8);', 2.598833643460815e-06], ['this->add_named_type(uint8_type);', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("uint16",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINT16));', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("uint32",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINT32));', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("uint64",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINT64));', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("int8",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_INT8));', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("int16",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_INT16));', 2.598833643460815e-06], ['Type::make_integer_type("int32",', 2.598833643460815e-06], ['this->add_named_type(int32_type);', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("int64",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_INT64));', 2.598833643460815e-06], ['this->add_named_type(Type::make_float_type("float32",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_FLOAT32));', 2.598833643460815e-06], ['this->add_named_type(Type::make_float_type("float64",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_FLOAT64));', 2.598833643460815e-06], ['this->add_named_type(Type::make_complex_type("complex64",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_COMPLEX64));', 2.598833643460815e-06], ['this->add_named_type(Type::make_complex_type("complex128",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_COMPLEX128));', 2.598833643460815e-06], ['pointer_size;', 2.598833643460815e-06], ['(int_type_size', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("uint",', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINT));', 2.598833643460815e-06], ['Type::make_integer_type("int",', 2.598833643460815e-06], ['this->add_named_type(int_type);', 2.598833643460815e-06], ['this->add_named_type(Type::make_integer_type("uintptr",', 2.598833643460815e-06], ['pointer_size,', 2.598833643460815e-06], ['RUNTIME_TYPE_KIND_UINTPTR));', 2.598833643460815e-06], ['"byte"', 2.598833643460815e-06], ['"uint8".', 2.598833643460815e-06], ['uint8_type->integer_type()->set_is_byte();', 2.598833643460815e-06], ['Named_object::make_type("byte",', 2.598833643460815e-06], ['byte_type->type_value()->set_is_alias();', 2.598833643460815e-06], ['this->add_named_type(byte_type->type_value());', 2.598833643460815e-06], ['"rune"', 2.598833643460815e-06], ['"int32".', 2.598833643460815e-06], ['int32_type->integer_type()->set_is_rune();', 2.598833643460815e-06], ['Named_object::make_type("rune",', 2.598833643460815e-06], ['rune_type->type_value()->set_is_alias();', 2.598833643460815e-06], ['this->add_named_type(rune_type->type_value());', 2.598833643460815e-06], ['this->add_named_type(Type::make_named_bool_type());', 2.598833643460815e-06], ['this->add_named_type(Type::make_named_string_type());', 2.598833643460815e-06], ['Error()', 2.598833643460815e-06], ['}.', 2.598833643460815e-06], ['*methods', 2.598833643460815e-06], ['*results', 2.598833643460815e-06], ['Type::lookup_string_type(),', 2.598833643460815e-06], ['*method_type', 2.598833643460815e-06], ['methods->push_back(Typed_identifier("Error",', 2.598833643460815e-06], ['*error_iface', 2.598833643460815e-06], ['error_iface->finalize_methods();', 2.598833643460815e-06], ['*error_type', 2.598833643460815e-06], ['Named_object::make_type("error",', 2.598833643460815e-06], ['error_iface,', 2.598833643460815e-06], ['loc)->type_value();', 2.598833643460815e-06], ['this->add_named_type(error_type);', 2.598833643460815e-06], ['this->globals_->add_constant(Typed_identifier("true",', 2.598833643460815e-06], ['this->globals_->add_constant(Typed_identifier("false",', 2.598833643460815e-06], ['this->globals_->add_constant(Typed_identifier("nil",', 2.598833643460815e-06], ['abstract_int_type', 2.598833643460815e-06], ['this->globals_->add_constant(Typed_identifier("iota",', 2.598833643460815e-06], ['abstract_int_type,', 2.598833643460815e-06], ['Expression::make_iota(),', 2.598833643460815e-06], ['new_type->set_is_varargs();', 2.598833643460815e-06], ['new_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("new",', 2.598833643460815e-06], ['new_type,', 2.598833643460815e-06], ['make_type', 2.598833643460815e-06], ['make_type->set_is_varargs();', 2.598833643460815e-06], ['make_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("make",', 2.598833643460815e-06], ['make_type,', 2.598833643460815e-06], ['len_result', 2.598833643460815e-06], ['len_result->push_back(Typed_identifier("",', 2.598833643460815e-06], ['len_type', 2.598833643460815e-06], ['len_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("len",', 2.598833643460815e-06], ['len_type,', 2.598833643460815e-06], ['cap_result', 2.598833643460815e-06], ['cap_result->push_back(Typed_identifier("",', 2.598833643460815e-06], ['cap_type', 2.598833643460815e-06], ['cap_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("cap",', 2.598833643460815e-06], ['cap_type,', 2.598833643460815e-06], ['this->globals_->add_function_declaration("print",', 2.598833643460815e-06], ['this->globals_->add_function_declaration("println",', 2.598833643460815e-06], ['panic_parms', 2.598833643460815e-06], ['panic_parms->push_back(Typed_identifier("e",', 2.598833643460815e-06], ['*panic_type', 2.598833643460815e-06], ['panic_parms,', 2.598833643460815e-06], ['panic_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("panic",', 2.598833643460815e-06], ['panic_type,', 2.598833643460815e-06], ['recover_result', 2.598833643460815e-06], ['recover_result->push_back(Typed_identifier("",', 2.598833643460815e-06], ['recover_type', 2.598833643460815e-06], ['recover_result,', 2.598833643460815e-06], ['recover_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("recover",', 2.598833643460815e-06], ['recover_type,', 2.598833643460815e-06], ['close_type', 2.598833643460815e-06], ['close_type->set_is_varargs();', 2.598833643460815e-06], ['close_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("close",', 2.598833643460815e-06], ['close_type,', 2.598833643460815e-06], ['copy_result', 2.598833643460815e-06], ['copy_result->push_back(Typed_identifier("",', 2.598833643460815e-06], ['copy_type', 2.598833643460815e-06], ['copy_result,', 2.598833643460815e-06], ['copy_type->set_is_varargs();', 2.598833643460815e-06], ['copy_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("copy",', 2.598833643460815e-06], ['copy_type,', 2.598833643460815e-06], ['append_type', 2.598833643460815e-06], ['append_type->set_is_varargs();', 2.598833643460815e-06], ['append_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("append",', 2.598833643460815e-06], ['append_type,', 2.598833643460815e-06], ['complex_type->set_is_varargs();', 2.598833643460815e-06], ['complex_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("complex",', 2.598833643460815e-06], ['real_type->set_is_varargs();', 2.598833643460815e-06], ['real_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("real",', 2.598833643460815e-06], ['real_type,', 2.598833643460815e-06], ['imag_type', 2.598833643460815e-06], ['imag_type->set_is_varargs();', 2.598833643460815e-06], ['imag_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("imag",', 2.598833643460815e-06], ['imag_type,', 2.598833643460815e-06], ['delete_type', 2.598833643460815e-06], ['delete_type->set_is_varargs();', 2.598833643460815e-06], ['delete_type->set_is_builtin();', 2.598833643460815e-06], ['this->globals_->add_function_declaration("delete",', 2.598833643460815e-06], ['delete_type,', 2.598833643460815e-06], ['Gogo::pkgpath_for_symbol(const', 2.598833643460815e-06], ['go_encode_id(pkgpath);', 2.598833643460815e-06], ['Gogo::hash_string(const', 2.598833643460815e-06], ['h)', 2.598833643460815e-06], ['--len)', 2.598833643460815e-06], ['*p++;', 2.598833643460815e-06], ['h*=', 2.598833643460815e-06], ['16777619;', 2.598833643460815e-06], ['Gogo::pkgpath()', 2.598833643460815e-06], ['Gogo::set_pkgpath(const', 2.598833643460815e-06], ['go_assert(!this->pkgpath_set_);', 2.598833643460815e-06], ['this->pkgpath_from_option_', 2.598833643460815e-06], ['Gogo::pkgpath_symbol()', 2.598833643460815e-06], ['Gogo::set_prefix(const', 2.598833643460815e-06], ['go_assert(!this->prefix_from_option_);', 2.598833643460815e-06], ['this->prefix_from_option_', 2.598833643460815e-06], ['hidden,', 2.598833643460815e-06], ['rejected', 2.598833643460815e-06], ['go_encode_id', 2.598833643460815e-06], ['(avoid', 2.598833643460815e-06], ['..u,', 2.598833643460815e-06], ['..U,', 2.598833643460815e-06], ['..z).', 2.598833643460815e-06], ['Gogo::append_possibly_hidden_name(std::string', 2.598833643460815e-06], ['ideal.', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(name))', 2.598833643460815e-06], ['Gogo::hidden_name_pkgpath(name);', 2.598833643460815e-06], ['lastR', 2.598833643460815e-06], ['result->at(result->length()', 2.598833643460815e-06], ['pkgpath.at(0);', 2.598833643460815e-06], ['(lastR', 2.598833643460815e-06], ['(firstP', 2.598833643460815e-06], ['"_.";', 2.598833643460815e-06], ['n.append(pkgpath);', 2.598833643460815e-06], ['n.append(1,', 2.598833643460815e-06], ['n.append(Gogo::unpack_hidden_name(name));', 2.598833643460815e-06], ['Munge', 2.598833643460815e-06], ['Gogo::message_name(const', 2.598833643460815e-06], ['go_localize_identifier(Gogo::unpack_hidden_name(name).c_str());', 2.598833643460815e-06], ['Gogo::package_name()', 2.598833643460815e-06], ['Gogo::set_package_name(const', 2.598833643460815e-06], ['(this->package_->package_name()', 2.598833643460815e-06], ['Gogo::message_name(this->package_->package_name()).c_str());', 2.598833643460815e-06], ['compiling,', 2.598833643460815e-06], ['reflect.Type.PkgPath', 2.598833643460815e-06], ['(this->pkgpath_set_)', 2.598833643460815e-06], ['(!this->prefix_from_option_', 2.598833643460815e-06], ['"main")', 2.598833643460815e-06], ['Gogo::pkgpath_for_symbol(package_name);', 2.598833643460815e-06], ['(!this->prefix_from_option_)', 2.598833643460815e-06], ['(Gogo::pkgpath_for_symbol(this->prefix_)', 2.598833643460815e-06], ['this->register_package(this->pkgpath_,', 2.598833643460815e-06], ['this->pkgpath_symbol_,', 2.598833643460815e-06], ['this->package_->set_package_name(package_name,', 2.598833643460815e-06], ['uloc', 2.598833643460815e-06], ['this->declare_function(Gogo::pack_hidden_name("main",', 2.598833643460815e-06], ['Type::make_function_type', 2.598833643460815e-06], ['uloc),', 2.598833643460815e-06], ['uloc);', 2.598833643460815e-06], ['Gogo::is_main_package()', 2.598833643460815e-06], ['(this->package_name()', 2.598833643460815e-06], ['!this->pkgpath_from_option_', 2.598833643460815e-06], ['!this->prefix_from_option_);', 2.598833643460815e-06], ['Gogo::import_package(const', 2.598833643460815e-06], ['must_exist,', 2.598833643460815e-06], ['empty");', 2.598833643460815e-06], ['*pf', 2.598833643460815e-06], ['filename.data();', 2.598833643460815e-06], ['filename.length();', 2.598833643460815e-06], ['Lex::fetch_char(pf,', 2.598833643460815e-06], ['sequence");', 2.598833643460815e-06], ['NUL");', 2.598833643460815e-06], ['backslash;', 2.598833643460815e-06], ['slash");', 2.598833643460815e-06], ['(Lex::is_unicode_space(c))', 2.598833643460815e-06], ['strchr("!\\"#$%&\'()*,:;<=>?[]^`{|}",', 2.598833643460815e-06], ['\'%c\'",', 2.598833643460815e-06], ['(IS_ABSOLUTE_PATH(filename.c_str()))', 2.598833643460815e-06], ['path");', 2.598833643460815e-06], ['(local_name', 2.598833643460815e-06], ['init");', 2.598833643460815e-06], ['"unsafe")', 2.598833643460815e-06], ['this->import_unsafe(local_name,', 2.598833643460815e-06], ['Imports::const_iterator', 2.598833643460815e-06], ['this->imports_.find(filename);', 2.598833643460815e-06], ['this->imports_.end())', 2.598833643460815e-06], ['is_local_name_exported;', 2.598833643460815e-06], ['(ln.empty())', 2.598833643460815e-06], ['go_assert(!ln.empty());', 2.598833643460815e-06], ['Lex::is_exported_name(ln);', 2.598833643460815e-06], ['this->add_dot_import_object(p->second);', 2.598833643460815e-06], ['package->add_alias(dot_alias,', 2.598833643460815e-06], ['package->add_alias(ln,', 2.598833643460815e-06], ['this->pack_hidden_name(ln,', 2.598833643460815e-06], ['is_ln_exported);', 2.598833643460815e-06], ['this->package_->bindings()->add_package(ln,', 2.598833643460815e-06], ['Import::open_package(filename,', 2.598833643460815e-06], ['this->relative_import_path_);', 2.598833643460815e-06], ['(must_exist)', 2.598833643460815e-06], ['found",', 2.598833643460815e-06], ['Import*', 2.598833643460815e-06], ['imp', 2.598833643460815e-06], ['Import(stream,', 2.598833643460815e-06], ['imp->register_builtin_types(this);', 2.598833643460815e-06], ['imp->import(this,', 2.598833643460815e-06], ['is_local_name_exported);', 2.598833643460815e-06], ['(package->pkgpath()', 2.598833643460815e-06], ['this->pkgpath())', 2.598833643460815e-06], ['("imported', 2.598833643460815e-06], ['"being', 2.598833643460815e-06], ['option)"));', 2.598833643460815e-06], ['this->imports_.insert(std::make_pair(filename,', 2.598833643460815e-06], ['imp->clear_stream();', 2.598833643460815e-06], ['imp;', 2.598833643460815e-06], ['Gogo::lookup_init(const', 2.598833643460815e-06], ['tmp("",', 2.598833643460815e-06], ['Import_init_set::iterator', 2.598833643460815e-06], ['this->imported_init_fns_.find(&tmp);', 2.598833643460815e-06], ['this->imported_init_fns_.end())', 2.598833643460815e-06], ['*it', 2.598833643460815e-06], ['Gogo::add_import_init_fn(const', 2.598833643460815e-06], ['prio)', 2.598833643460815e-06], ['P2,', 2.598833643460815e-06], ['P2', 2.598833643460815e-06], ['(perhaps', 2.598833643460815e-06], ['indirectly),', 2.598833643460815e-06], ['priorities.', 2.598833643460815e-06], ['(ii->package_name()', 2.598833643460815e-06], ['Gogo::message_name(init_name).c_str());', 2.598833643460815e-06], ['"used', 2.598833643460815e-06], ['Gogo::message_name(ii->package_name()).c_str());', 2.598833643460815e-06], ['Gogo::message_name(package_name).c_str());', 2.598833643460815e-06], ['ii->set_priority(prio);', 2.598833643460815e-06], ['nii', 2.598833643460815e-06], ['Import_init(package_name,', 2.598833643460815e-06], ['prio);', 2.598833643460815e-06], ['this->imported_init_fns_.insert(nii);', 2.598833643460815e-06], ['Gogo::in_global_scope()', 2.598833643460815e-06], ['Gogo::update_init_priority(Import_init*', 2.598833643460815e-06], ['ii,', 2.598833643460815e-06], ['*>*', 2.598833643460815e-06], ['visited)', 2.598833643460815e-06], ['visited->insert(ii);', 2.598833643460815e-06], ['succ', 2.598833643460815e-06], ['(visited->find(succ)', 2.598833643460815e-06], ['visited->end())', 2.598833643460815e-06], ['update_init_priority(succ,', 2.598833643460815e-06], ['visited);', 2.598833643460815e-06], ['std::max(succ_prior,', 2.598833643460815e-06], ['succ->priority());', 2.598833643460815e-06], ['succ_prior)', 2.598833643460815e-06], ['ii->set_priority(succ_prior', 2.598833643460815e-06], ['Gogo::recompute_init_priorities()', 2.598833643460815e-06], ['std::set<Import_init', 2.598833643460815e-06], ['nonroots;', 2.598833643460815e-06], ['nonroots.insert(ii);', 2.598833643460815e-06], ['visited;', 2.598833643460815e-06], ['(nonroots.find(ii)', 2.598833643460815e-06], ['nonroots.end())', 2.598833643460815e-06], ['update_init_priority(ii,', 2.598833643460815e-06], ['&visited);', 2.598833643460815e-06], ['INIT_STMTS', 2.598833643460815e-06], ['Gogo::init_imports(std::vector<Bstatement*>&', 2.598833643460815e-06], ['*bfunction)', 2.598833643460815e-06], ['go_assert(this->is_main_package());', 2.598833643460815e-06], ['(this->imported_init_fns_.empty())', 2.598833643460815e-06], ['unknown_loc', 2.598833643460815e-06], ['func_type', 2.598833643460815e-06], ['func_type->get_backend_fntype(this);', 2.598833643460815e-06], ['Recompute', 2.598833643460815e-06], ['recompute_init_priorities();', 2.598833643460815e-06], ['((*p)->priority()', 2.598833643460815e-06], ['"internal', 2.598833643460815e-06], ['(*p)->package_name().c_str());', 2.598833643460815e-06], ['v.push_back(*p);', 2.598833643460815e-06], ['v.end(),', 2.598833643460815e-06], ['priority_compare);', 2.598833643460815e-06], ['Import_init*>::const_iterator', 2.598833643460815e-06], ['user_name', 2.598833643460815e-06], ['ii->package_name()', 2.598833643460815e-06], ['".init";', 2.598833643460815e-06], ['init_name(ii->init_name());', 2.598833643460815e-06], ['pfunc', 2.598833643460815e-06], ['this->backend()->function(fntype,', 2.598833643460815e-06], ['user_name,', 2.598833643460815e-06], ['pfunc_code', 2.598833643460815e-06], ['this->backend()->function_code_expression(pfunc,', 2.598833643460815e-06], ['pfunc_call', 2.598833643460815e-06], ['this->backend()->call_expression(bfunction,', 2.598833643460815e-06], ['pfunc_code,', 2.598833643460815e-06], ['init_stmts.push_back(this->backend()->expression_statement(bfunction,', 2.598833643460815e-06], ['pfunc_call));', 2.598833643460815e-06], ['gcRoot', 2.598833643460815e-06], ['Total', 2.598833643460815e-06], ['gcdata.', 2.598833643460815e-06], ['*byte', 2.598833643460815e-06], ['gcRootList', 2.598833643460815e-06], ['*gcRootList', 2.598833643460815e-06], ['[...]gcRoot', 2.598833643460815e-06], ['Gogo::register_gc_vars(const', 2.598833643460815e-06], ['std::vector<Named_object*>&', 2.598833643460815e-06], ['var_gc,', 2.598833643460815e-06], ['init_bfn)', 2.598833643460815e-06], ['(var_gc.empty()', 2.598833643460815e-06], ['this->gc_roots_.empty())', 2.598833643460815e-06], ['pvt', 2.598833643460815e-06], ['this->lookup_global("byte")->type_value();', 2.598833643460815e-06], ['pointer_byte_type', 2.598833643460815e-06], ['root_type', 2.598833643460815e-06], ['"decl",', 2.598833643460815e-06], ['pointer_byte_type);', 2.598833643460815e-06], ['builtin_loc', 2.598833643460815e-06], ['roots_len', 2.598833643460815e-06], ['var_gc.size()', 2.598833643460815e-06], ['this->gc_roots_.size();', 2.598833643460815e-06], ['Expression::make_integer_ul(roots_len,', 2.598833643460815e-06], ['root_array_type', 2.598833643460815e-06], ['Type::make_array_type(root_type,', 2.598833643460815e-06], ['root_array_type->set_is_array_incomparable();', 2.598833643460815e-06], ['root_list_type', 2.598833643460815e-06], ['"next",', 2.598833643460815e-06], ['"roots",', 2.598833643460815e-06], ['root_array_type);', 2.598833643460815e-06], ['roots_init', 2.598833643460815e-06], ['var_gc.begin();', 2.598833643460815e-06], ['var_gc.end();', 2.598833643460815e-06], ['no_loc', 2.598833643460815e-06], ['decl_addr->unary_expression()->set_does_not_escape();', 2.598833643460815e-06], ['Expression::make_cast(pvt,', 2.598833643460815e-06], ['decl_addr,', 2.598833643460815e-06], ['init->push_back(decl_addr);', 2.598833643460815e-06], ['Expression::make_ptrmask_symbol(decl->type());', 2.598833643460815e-06], ['this->gc_roots_.begin();', 2.598833643460815e-06], ['this->gc_roots_.end();', 2.598833643460815e-06], ['init->push_back(Expression::make_cast(pvt,', 2.598833643460815e-06], ['eloc));', 2.598833643460815e-06], ['expr->type()->points_to();', 2.598833643460815e-06], ['Expression::make_ptrmask_symbol(type);', 2.598833643460815e-06], ['eloc);', 2.598833643460815e-06], ['root_list_init', 2.598833643460815e-06], ['root_list_init->push_back(Expression::make_nil(builtin_loc));', 2.598833643460815e-06], ['root_list_init->push_back(Expression::make_integer_ul(roots_len,', 2.598833643460815e-06], ['builtin_loc));', 2.598833643460815e-06], ['roots_ctor', 2.598833643460815e-06], ['Expression::make_array_composite_literal(root_array_type,', 2.598833643460815e-06], ['roots_init,', 2.598833643460815e-06], ['root_list_init->push_back(roots_ctor);', 2.598833643460815e-06], ['root_list_ctor', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(root_list_type,', 2.598833643460815e-06], ['root_list_init,', 2.598833643460815e-06], ['root_addr', 2.598833643460815e-06], ['root_list_ctor,', 2.598833643460815e-06], ['root_addr->unary_expression()->set_is_gc_root();', 2.598833643460815e-06], ['register_roots', 2.598833643460815e-06], ['Runtime::make_call(Runtime::REGISTER_GC_ROOTS,', 2.598833643460815e-06], ['builtin_loc,', 2.598833643460815e-06], ['root_addr);', 2.598833643460815e-06], ['context(this,', 2.598833643460815e-06], ['register_roots->get_backend(&context);', 2.598833643460815e-06], ['init_stmts.push_back(this->backend()->expression_statement(init_bfn,', 2.598833643460815e-06], ['bcall));', 2.598833643460815e-06], ['Gogo::initialization_function_decl()', 2.598833643460815e-06], ['this->get_init_fn_name();', 2.598833643460815e-06], ['CODE_STMT', 2.598833643460815e-06], ['Gogo::create_initialization_function(Named_object*', 2.598833643460815e-06], ['initfn,', 2.598833643460815e-06], ['thought', 2.598833643460815e-06], ['go_assert(this->is_main_package()', 2.598833643460815e-06], ['this->need_init_fn_);', 2.598833643460815e-06], ['(initfn', 2.598833643460815e-06], ['initfn->func_value()->get_or_make_decl(this,', 2.598833643460815e-06], ['pkg_loc', 2.598833643460815e-06], ['this->backend()->block(fndecl,', 2.598833643460815e-06], ['pkg_loc,', 2.598833643460815e-06], ['pkg_loc);', 2.598833643460815e-06], ['(!this->backend()->function_set_body(fndecl,', 2.598833643460815e-06], ['initfn;', 2.598833643460815e-06], ['accumulate.', 2.598833643460815e-06], ['Unordered_set(Named_object*)', 2.598833643460815e-06], ['Vars;', 2.598833643460815e-06], ['Temporary_statement*.', 2.598833643460815e-06], ['Seen_objects;', 2.598833643460815e-06], ['Find_vars()', 2.598833643460815e-06], ['vars_(),', 2.598833643460815e-06], ['seen_objects_()', 2.598833643460815e-06], ['Vars::const_iterator', 2.598833643460815e-06], ['this->vars_.begin();', 2.598833643460815e-06], ['this->vars_.end();', 2.598833643460815e-06], ['Accumulated', 2.598833643460815e-06], ['Vars', 2.598833643460815e-06], ['vars_;', 2.598833643460815e-06], ['Objects', 2.598833643460815e-06], ['Seen_objects', 2.598833643460815e-06], ['seen_objects_;', 2.598833643460815e-06], ['Find_vars::expression(Expression**', 2.598833643460815e-06], ['e->var_expression();', 2.598833643460815e-06], ['(!v->is_variable()', 2.598833643460815e-06], ['v->package()', 2.598833643460815e-06], ['this->seen_objects_.insert(v);', 2.598833643460815e-06], ['(v->var_value()->is_global())', 2.598833643460815e-06], ['this->vars_.insert(v);', 2.598833643460815e-06], ['v->var_value()->init();', 2.598833643460815e-06], ['e->func_expression();', 2.598833643460815e-06], ['e->bound_method_expression();', 2.598833643460815e-06], ['fe->named_object()', 2.598833643460815e-06], ['(f->is_function()', 2.598833643460815e-06], ['f->package()', 2.598833643460815e-06], ['this->seen_objects_.insert(f);', 2.598833643460815e-06], ['(f->func_value()->block()->traverse(this)', 2.598833643460815e-06], ['(tre', 2.598833643460815e-06], ['tre->statement();', 2.598833643460815e-06], ['ts->init();', 2.598833643460815e-06], ['this->seen_objects_.insert(ts);', 2.598833643460815e-06], ['PREINIT,', 2.598833643460815e-06], ['DEP', 2.598833643460815e-06], ['VAR.', 2.598833643460815e-06], ['expression_requires(Expression*', 2.598833643460815e-06], ['dep,', 2.598833643460815e-06], ['(preinit', 2.598833643460815e-06], ['preinit->traverse(&find_vars);', 2.598833643460815e-06], ['Var_init()', 2.598833643460815e-06], ['var_(NULL),', 2.598833643460815e-06], ['init_(NULL),', 2.598833643460815e-06], ['Var_init(Named_object*', 2.598833643460815e-06], ['var_(var),', 2.598833643460815e-06], ['var()', 2.598833643460815e-06], ['this->var_;', 2.598833643460815e-06], ['add_ref(Named_object*', 2.598833643460815e-06], ['refs()', 2.598833643460815e-06], ['clear_refs();', 2.598833643460815e-06], ['dep_count()', 2.598833643460815e-06], ['this->dep_count_;', 2.598833643460815e-06], ['add_dependency()', 2.598833643460815e-06], ['++this->dep_count_;', 2.598833643460815e-06], ['Decrement', 2.598833643460815e-06], ['remove_dependency()', 2.598833643460815e-06], ['--this->dep_count_;', 2.598833643460815e-06], ['var_;', 2.598833643460815e-06], ['init_;', 2.598833643460815e-06], ['refs_;', 2.598833643460815e-06], ['dep_count_;', 2.598833643460815e-06], ['Var_init::add_ref(Named_object*', 2.598833643460815e-06], ['std::vector<Named_object*>;', 2.598833643460815e-06], ['this->refs_->push_back(var);', 2.598833643460815e-06], ['Var_init::clear_refs()', 2.598833643460815e-06], ['v1.var()->name()', 2.598833643460815e-06], ['v2.var()->name();', 2.598833643460815e-06], ['std::list<Var_init>', 2.598833643460815e-06], ['Var_inits;', 2.598833643460815e-06], ['rule', 2.598833643460815e-06], ['V2', 2.598833643460815e-06], ['V2.', 2.598833643460815e-06], ['sort_var_inits(Gogo*', 2.598833643460815e-06], ['Var_inits*', 2.598833643460815e-06], ['var_inits)', 2.598833643460815e-06], ['(var_inits->empty())', 2.598833643460815e-06], ['Var_init*>', 2.598833643460815e-06], ['var_to_init;', 2.598833643460815e-06], ['std::map<Var_init,', 2.598833643460815e-06], ['Init_deps;', 2.598833643460815e-06], ['Init_deps', 2.598833643460815e-06], ['init_deps;', 2.598833643460815e-06], ['var_to_init[var]', 2.598833643460815e-06], ['&*pvar;', 2.598833643460815e-06], ['(var->var_value()->has_pre_init())', 2.598833643460815e-06], ['var->var_value()->preinit()->traverse(&find_vars);', 2.598833643460815e-06], ['gogo->var_depends_on(var->var_value());', 2.598833643460815e-06], ['dinit', 2.598833643460815e-06], ['(dinit', 2.598833643460815e-06], ['Expression::traverse(&dinit,', 2.598833643460815e-06], ['pvar->add_ref(*p);', 2.598833643460815e-06], ['init_deps,', 2.598833643460815e-06], ['pvar->refs();', 2.598833643460815e-06], ['(refs', 2.598833643460815e-06], ['refs->begin();', 2.598833643460815e-06], ['refs->end();', 2.598833643460815e-06], ['++pdep)', 2.598833643460815e-06], ['*pdep;', 2.598833643460815e-06], ['dep)', 2.598833643460815e-06], ['preinitializer', 2.598833643460815e-06], ['(var->var_value()->init()', 2.598833643460815e-06], ['gogo->var_depends_on(var->var_value())', 2.598833643460815e-06], ['"depends', 2.598833643460815e-06], ['itself"),', 2.598833643460815e-06], ['Var_init*', 2.598833643460815e-06], ['dep_init', 2.598833643460815e-06], ['var_to_init[dep];', 2.598833643460815e-06], ['(dep_init', 2.598833643460815e-06], ['init_deps[*dep_init].insert(&(*pvar));', 2.598833643460815e-06], ['pvar->add_dependency();', 2.598833643460815e-06], ['deprefs', 2.598833643460815e-06], ['dep_init->refs();', 2.598833643460815e-06], ['(deprefs', 2.598833643460815e-06], ['deprefs->begin();', 2.598833643460815e-06], ['deprefs->end();', 2.598833643460815e-06], ['++pdepdep)', 2.598833643460815e-06], ['(*pdepdep', 2.598833643460815e-06], ['other"),', 2.598833643460815e-06], ['var->message_name().c_str(),', 2.598833643460815e-06], ['go_inform(dep->location(),', 2.598833643460815e-06], ['var_to_init.clear();', 2.598833643460815e-06], ['pvar->clear_refs();', 2.598833643460815e-06], ['(!init_deps.empty()', 2.598833643460815e-06], ['!init_loop)', 2.598833643460815e-06], ['VAR_INITS', 2.598833643460815e-06], ['ready;', 2.598833643460815e-06], ['(!var_inits->empty())', 2.598833643460815e-06], ['Var_inits::iterator', 2.598833643460815e-06], ['v1;;', 2.598833643460815e-06], ['(v1', 2.598833643460815e-06], ['++v1)', 2.598833643460815e-06], ['(v1->dep_count()', 2.598833643460815e-06], ['go_assert(v1', 2.598833643460815e-06], ['var_inits->end());', 2.598833643460815e-06], ['READY', 2.598833643460815e-06], ['V1.', 2.598833643460815e-06], ['ready.splice(ready.end(),', 2.598833643460815e-06], ['*var_inits,', 2.598833643460815e-06], ['v1);', 2.598833643460815e-06], ['Init_deps::iterator', 2.598833643460815e-06], ['init_deps.find(*v1);', 2.598833643460815e-06], ['init_deps.end())', 2.598833643460815e-06], ['p1->second;', 2.598833643460815e-06], ['(std::set<Var_init*>::iterator', 2.598833643460815e-06], ['resolved.begin();', 2.598833643460815e-06], ['resolved.end();', 2.598833643460815e-06], ['(*pv)->remove_dependency();', 2.598833643460815e-06], ['init_deps.erase(p1);', 2.598833643460815e-06], ['var_inits->swap(ready);', 2.598833643460815e-06], ['go_assert(init_deps.empty());', 2.598833643460815e-06], ['dependency;', 2.598833643460815e-06], ['PREINIT', 2.598833643460815e-06], ['VAR,', 2.598833643460815e-06], ['Gogo::check_self_dep(Named_object*', 2.598833643460815e-06], ['var->var_value()->preinit();', 2.598833643460815e-06], ['this->var_depends_on(var->var_value());', 2.598833643460815e-06], ['expression_requires(init,', 2.598833643460815e-06], ['Gogo::write_globals()', 2.598833643460815e-06], ['this->build_interface_method_tables();', 2.598833643460815e-06], ['no->func_declaration_value()->build_backend_descriptor(this);', 2.598833643460815e-06], ['Lists', 2.598833643460815e-06], ['std::vector<Btype*>', 2.598833643460815e-06], ['type_decls;', 2.598833643460815e-06], ['var_decls;', 2.598833643460815e-06], ['const_decls;', 2.598833643460815e-06], ['std::vector<Bfunction*>', 2.598833643460815e-06], ['func_decls;', 2.598833643460815e-06], ['Bfunction,', 2.598833643460815e-06], ['init_stmts;', 2.598833643460815e-06], ['var_init_stmts;', 2.598833643460815e-06], ['init_fndecl->func_value()->get_or_make_decl(this,', 2.598833643460815e-06], ['this->init_imports(init_stmts,', 2.598833643460815e-06], ['bindings->size_definitions();', 2.598833643460815e-06], ['var_gc;', 2.598833643460815e-06], ['var_gc.reserve(count_definitions);', 2.598833643460815e-06], ['go_assert(!no->is_type_declaration()', 2.598833643460815e-06], ['!no->is_function_declaration());', 2.598833643460815e-06], ['no->func_value()->is_sink())', 2.598833643460815e-06], ['no->const_value()->is_sink()))', 2.598833643460815e-06], ['ideal', 2.598833643460815e-06], ['non-integral', 2.598833643460815e-06], ['(no->is_const())', 2.598833643460815e-06], ['no->const_value()->expr()->type();', 2.598833643460815e-06], ['(type->is_abstract()', 2.598833643460815e-06], ['!type->is_numeric_type())', 2.598833643460815e-06], ['no->get_backend(this,', 2.598833643460815e-06], ['no->get_backend_variable(this,', 2.598833643460815e-06], ['var_decls.push_back(bvar);', 2.598833643460815e-06], ['(!var->has_pre_init())', 2.598833643460815e-06], ['global_var_set_init', 2.598833643460815e-06], ['zero-value', 2.598833643460815e-06], ['var->type();', 2.598833643460815e-06], ['init_cast', 2.598833643460815e-06], ['Expression::make_cast(var_type,', 2.598833643460815e-06], ['init_cast->is_static_initializer();', 2.598833643460815e-06], ['Non-constant', 2.598833643460815e-06], ['var_init_fn;', 2.598833643460815e-06], ['init_fndecl->func_value();', 2.598833643460815e-06], ['init_fndecl;', 2.598833643460815e-06], ['var_binit', 2.598833643460815e-06], ['var->get_init(this,', 2.598833643460815e-06], ['var_init_fn);', 2.598833643460815e-06], ['(var_binit', 2.598833643460815e-06], ['(expression_requires(var->init(),', 2.598833643460815e-06], ['this->var_depends_on(var),', 2.598833643460815e-06], ['no))', 2.598833643460815e-06], ['"upon', 2.598833643460815e-06], ['this->backend()->global_variable_set_init(bvar,', 2.598833643460815e-06], ['(is_sink)', 2.598833643460815e-06], ['var->location();', 2.598833643460815e-06], ['this->backend()->var_expression(bvar,', 2.598833643460815e-06], ['this->backend()->assignment_statement(init_bfn,', 2.598833643460815e-06], ['var_expr,', 2.598833643460815e-06], ['var_binit,', 2.598833643460815e-06], ['fndecl.', 2.598833643460815e-06], ['var->get_init_block(this,', 2.598833643460815e-06], ['init_fndecl,', 2.598833643460815e-06], ['(var_init_stmt', 2.598833643460815e-06], ['!var->has_pre_init())', 2.598833643460815e-06], ['var_init_stmts.push_back(var_init_stmt);', 2.598833643460815e-06], ['var_init_stmt));', 2.598833643460815e-06], ['(this->var_depends_on(var)', 2.598833643460815e-06], ['preinit.', 2.598833643460815e-06], ['sorting,', 2.598833643460815e-06], ['no->var_value()->type()->get_backend(this);', 2.598833643460815e-06], ['this->backend()->zero_expression(btype);', 2.598833643460815e-06], ['zero_stmt', 2.598833643460815e-06], ['zero_stmt));', 2.598833643460815e-06], ['(!is_sink', 2.598833643460815e-06], ['var->type()->has_pointer())', 2.598833643460815e-06], ['runtime.gcRoots', 2.598833643460815e-06], ['"gcRoots"', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(no->name())', 2.598833643460815e-06], ['"gcRootsIndex"))', 2.598833643460815e-06], ['var_gc.push_back(no);', 2.598833643460815e-06], ['this->imported_inline_functions_.begin();', 2.598833643460815e-06], ['this->imported_inline_functions_.end();', 2.598833643460815e-06], ['(*p)->get_backend(this,', 2.598833643460815e-06], ['this->register_gc_vars(var_gc,', 2.598833643460815e-06], ['registered.', 2.598833643460815e-06], ['init_stmts.push_back(this->backend()->statement_list(var_init_stmts));', 2.598833643460815e-06], ['sorting', 2.598833643460815e-06], ['workable', 2.598833643460815e-06], ['(!var_inits.empty())', 2.598833643460815e-06], ['sort_var_inits(this,', 2.598833643460815e-06], ['&var_inits);', 2.598833643460815e-06], ['(Var_inits::const_iterator', 2.598833643460815e-06], ['var_inits.begin();', 2.598833643460815e-06], ['var_inits.end();', 2.598833643460815e-06], ['init_stmts.push_back(p->init());', 2.598833643460815e-06], ['EMPTY_ARGS', 2.598833643460815e-06], ['this->init_functions_.begin();', 2.598833643460815e-06], ['this->init_functions_.end();', 2.598833643460815e-06], ['func_loc', 2.598833643460815e-06], ['(*p)->func_value();', 2.598833643460815e-06], ['func_code', 2.598833643460815e-06], ['this->backend()->function_code_expression(initfn,', 2.598833643460815e-06], ['this->backend()->call_expression(init_bfn,', 2.598833643460815e-06], ['ist', 2.598833643460815e-06], ['init_stmts.push_back(ist);', 2.598833643460815e-06], ['actions.', 2.598833643460815e-06], ['init_fncode', 2.598833643460815e-06], ['this->backend()->statement_list(init_stmts);', 2.598833643460815e-06], ['this->is_main_package())', 2.598833643460815e-06], ['this->create_initialization_function(init_fndecl,', 2.598833643460815e-06], ['init_fncode);', 2.598833643460815e-06], ['func_decls.push_back(init_fndecl->func_value()->get_decl());', 2.598833643460815e-06], ['go_assert(count_definitions', 2.598833643460815e-06], ['this->current_bindings()->size_definitions());', 2.598833643460815e-06], ['this->backend()->write_global_definitions(type_decls,', 2.598833643460815e-06], ['func_decls,', 2.598833643460815e-06], ['Gogo::current_block()', 2.598833643460815e-06], ['(this->functions_.empty())', 2.598833643460815e-06], ['PFUNCTION', 2.598833643460815e-06], ['Gogo::lookup(const', 2.598833643460815e-06], ['pfunction)', 2.598833643460815e-06], ['(Open_functions::const_reverse_iterator', 2.598833643460815e-06], ['this->functions_.rbegin();', 2.598833643460815e-06], ['this->functions_.rend();', 2.598833643460815e-06], ['p->blocks.back()->bindings()->lookup(name);', 2.598833643460815e-06], ['p->function;', 2.598833643460815e-06], ['(ret->package()', 2.598833643460815e-06], ['ret->package()->package_name();', 2.598833643460815e-06], ['ret->package()->note_usage(dot_alias);', 2.598833643460815e-06], ['did,', 2.598833643460815e-06], ['hide', 2.598833643460815e-06], ['define_global_names', 2.598833643460815e-06], ['connect', 2.598833643460815e-06], ['Gogo::lookup_in_block(const', 2.598833643460815e-06], ['this->functions_.back().blocks.back()->bindings()->lookup_local(name);', 2.598833643460815e-06], ['Gogo::lookup_global(const', 2.598833643460815e-06], ['this->globals_->lookup(name);', 2.598833643460815e-06], ['Gogo::add_imported_package(const', 2.598833643460815e-06], ['real_name,', 2.598833643460815e-06], ['alias_arg,', 2.598833643460815e-06], ['is_alias_exported,', 2.598833643460815e-06], ['padd_to_globals)', 2.598833643460815e-06], ['this->register_package(pkgpath,', 2.598833643460815e-06], ['ret->set_package_name(real_name,', 2.598833643460815e-06], ['ret->add_alias(dot_alias,', 2.598833643460815e-06], ['alias_arg;', 2.598833643460815e-06], ['(alias.empty())', 2.598833643460815e-06], ['is_alias_exported', 2.598833643460815e-06], ['Lex::is_exported_name(alias);', 2.598833643460815e-06], ['ret->add_alias(alias,', 2.598833643460815e-06], ['this->pack_hidden_name(alias,', 2.598833643460815e-06], ['is_alias_exported);', 2.598833643460815e-06], ['this->package_->bindings()->add_package(alias,', 2.598833643460815e-06], ['(!no->is_package())', 2.598833643460815e-06], ['Package', 2.598833643460815e-06], ['led', 2.598833643460815e-06], ['PKGPATH_SYMBOL', 2.598833643460815e-06], ['guess', 2.598833643460815e-06], ['Gogo::register_package(const', 2.598833643460815e-06], ['std::pair<Packages::iterator,', 2.598833643460815e-06], ['this->packages_.insert(std::make_pair(pkgpath,', 2.598833643460815e-06], ['package->pkgpath()', 2.598833643460815e-06], ['pkgpath);', 2.598833643460815e-06], ['(!pkgpath_symbol.empty())', 2.598833643460815e-06], ['package->set_pkgpath_symbol(pkgpath_symbol);', 2.598833643460815e-06], ['(Linemap::is_unknown_location(package->location()))', 2.598833643460815e-06], ['Package(pkgpath,', 2.598833643460815e-06], ['pkgpath.', 2.598833643460815e-06], ['Gogo::pkgpath_symbol_for_package(const', 2.598833643460815e-06], ['Packages::iterator', 2.598833643460815e-06], ['this->packages_.find(pkgpath);', 2.598833643460815e-06], ['this->packages_.end());', 2.598833643460815e-06], ['p->second->pkgpath_symbol();', 2.598833643460815e-06], ['Gogo::start_function(const', 2.598833643460815e-06], ['add_method_to_type,', 2.598833643460815e-06], ['at_top_level', 2.598833643460815e-06], ['(at_top_level', 2.598833643460815e-06], ['this->functions_.back().function);', 2.598833643460815e-06], ['Function(type,', 2.598833643460815e-06], ['(type->is_method())', 2.598833643460815e-06], ['this_param', 2.598833643460815e-06], ['receiver->name();', 2.598833643460815e-06], ['(rname.empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(rname))', 2.598833643460815e-06], ['"r.%u",', 2.598833643460815e-06], ['block->bindings()->add_variable(rname,', 2.598833643460815e-06], ['this_param);', 2.598833643460815e-06], ['type->is_varargs();', 2.598833643460815e-06], ['(pname.empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(pname))', 2.598833643460815e-06], ['"p.%u",', 2.598833643460815e-06], ['block->bindings()->add_variable(pname,', 2.598833643460815e-06], ['function->create_result_variables(this);', 2.598833643460815e-06], ['nested_name;', 2.598833643460815e-06], ['(Gogo::unpack_hidden_name(name)', 2.598833643460815e-06], ['!type->is_method())', 2.598833643460815e-06], ['((type->parameters()', 2.598833643460815e-06], ['!type->parameters()->empty())', 2.598833643460815e-06], ['(type->results()', 2.598833643460815e-06], ['!type->results()->empty()))', 2.598833643460815e-06], ['values");', 2.598833643460815e-06], ['this->init_function_name();', 2.598833643460815e-06], ['&name;', 2.598833643460815e-06], ['this->nested_function_name(enclosing);', 2.598833643460815e-06], ['(Gogo::is_sink_name(*pname))', 2.598833643460815e-06], ['sname(this->sink_function_name());', 2.598833643460815e-06], ['Named_object::make_function(sname,', 2.598833643460815e-06], ['ret->func_value()->set_is_sink();', 2.598833643460815e-06], ['this->package_->bindings()->add_named_object(ret);', 2.598833643460815e-06], ['(add_method_to_type)', 2.598833643460815e-06], ['rtype->forward_declaration_type()->add_existing_method(ret);', 2.598833643460815e-06], ['this->package_->bindings()->add_function(*pname,', 2.598833643460815e-06], ['(!ret->is_function()', 2.598833643460815e-06], ['ret->func_value()', 2.598833643460815e-06], ['rname(this->redefined_function_name());', 2.598833643460815e-06], ['this->package_->bindings()->add_function(rname,', 2.598833643460815e-06], ['(!add_method_to_type)', 2.598833643460815e-06], ['go_assert(at_top_level);', 2.598833643460815e-06], ['rtype->named_type()->add_method(name,', 2.598833643460815e-06], ['(!ret->is_function())', 2.598833643460815e-06], ['type_no', 2.598833643460815e-06], ['rtype->forward_declaration_type()->named_object();', 2.598833643460815e-06], ['(type_no->is_unknown())', 2.598833643460815e-06], ['alternative', 2.598833643460815e-06], ['confusing.', 2.598833643460815e-06], ['this->declare_package_type(type_no->name(),', 2.598833643460815e-06], ['type_no->location());', 2.598833643460815e-06], ['go_assert(declared', 2.598833643460815e-06], ['type_no->unknown_value()->real_named_object());', 2.598833643460815e-06], ['rtype->forward_declaration_type()->add_method(name,', 2.598833643460815e-06], ['"be', 2.598833643460815e-06], ['this->package_->bindings()->add_method(ret);', 2.598833643460815e-06], ['this->functions_.resize(this->functions_.size()', 2.598833643460815e-06], ['Open_function&', 2.598833643460815e-06], ['of(this->functions_.back());', 2.598833643460815e-06], ['of.function', 2.598833643460815e-06], ['of.blocks.push_back(block);', 2.598833643460815e-06], ['(is_init)', 2.598833643460815e-06], ['this->init_functions_.push_back(ret);', 2.598833643460815e-06], ['Gogo::finish_function(Location', 2.598833643460815e-06], ['this->finish_block(location);', 2.598833643460815e-06], ['go_assert(this->functions_.back().blocks.empty());', 2.598833643460815e-06], ['this->functions_.pop_back();', 2.598833643460815e-06], ['Gogo::current_function()', 2.598833643460815e-06], ['Gogo::start_block(Location', 2.598833643460815e-06], ['Block(this->current_block(),', 2.598833643460815e-06], ['this->functions_.back().blocks.push_back(block);', 2.598833643460815e-06], ['Gogo::finish_block(Location', 2.598833643460815e-06], ['this->functions_.back().blocks.pop_back();', 2.598833643460815e-06], ['block->set_end_location(location);', 2.598833643460815e-06], ['Gogo::add_erroneous_name(const', 2.598833643460815e-06], ['this->package_->bindings()->add_erroneous_name(name);', 2.598833643460815e-06], ['Gogo::add_unknown_name(const', 2.598833643460815e-06], ['this->package_->bindings()->add_unknown_name(name,', 2.598833643460815e-06], ['Gogo::declare_function(const', 2.598833643460815e-06], ['this->current_bindings()->add_function_declaration(name,', 2.598833643460815e-06], ['rtype->forward_declaration_type();', 2.598833643460815e-06], ['ftype->add_method_declaration(name,', 2.598833643460815e-06], ['type)");', 2.598833643460815e-06], ['Named_object::make_erroneous_name(name);', 2.598833643460815e-06], ['Gogo::add_label_definition(const', 2.598833643460815e-06], ['func->add_label_definition(this,', 2.598833643460815e-06], ['this->add_statement(Statement::make_label_statement(label,', 2.598833643460815e-06], ['Gogo::add_label_reference(const', 2.598833643460815e-06], ['func->add_label_reference(this,', 2.598833643460815e-06], ['issue_goto_errors);', 2.598833643460815e-06], ['Gogo::bindings_snapshot(Location', 2.598833643460815e-06], ['Bindings_snapshot(this->current_block(),', 2.598833643460815e-06], ['Gogo::add_statement(Statement*', 2.598833643460815e-06], ['Gogo::add_block(Block*', 2.598833643460815e-06], ['Gogo::add_constant(const', 2.598833643460815e-06], ['this->current_bindings()->add_constant(tid,', 2.598833643460815e-06], ['iota_value);', 2.598833643460815e-06], ['Gogo::add_type(const', 2.598833643460815e-06], ['this->current_bindings()->add_type(name,', 2.598833643460815e-06], ['no->is_type())', 2.598833643460815e-06], ['no->type_value()->set_in_function(f,', 2.598833643460815e-06], ['Gogo::add_named_type(Named_type*', 2.598833643460815e-06], ['go_assert(this->in_global_scope());', 2.598833643460815e-06], ['this->current_bindings()->add_named_type(type);', 2.598833643460815e-06], ['Gogo::declare_type(const', 2.598833643460815e-06], ['bindings->add_type_declaration(name,', 2.598833643460815e-06], ['no->type_declaration_value()->set_in_function(f,', 2.598833643460815e-06], ['Gogo::declare_package_type(const', 2.598833643460815e-06], ['this->package_->bindings()->add_type_declaration(name,', 2.598833643460815e-06], ['Gogo::declare_package_function(const', 2.598833643460815e-06], ['this->package_->bindings()->add_function_declaration(name,', 2.598833643460815e-06], ['Gogo::add_imported_inlinable_function(Named_object*', 2.598833643460815e-06], ['go_assert(no->is_function_declaration());', 2.598833643460815e-06], ['no->func_declaration_value();', 2.598833643460815e-06], ['(fd->is_on_inlinable_list())', 2.598833643460815e-06], ['this->imported_inlinable_functions_.push_back(no);', 2.598833643460815e-06], ['fd->set_is_on_inlinable_list();', 2.598833643460815e-06], ['Gogo::define_type(Named_object*', 2.598833643460815e-06], ['this->current_bindings()->define_type(no,', 2.598833643460815e-06], ['Gogo::add_variable(const', 2.598833643460815e-06], ['this->current_bindings()->add_variable(name,', 2.598833643460815e-06], ['variable);', 2.598833643460815e-06], ['DECL_EXPR', 2.598833643460815e-06], ['!no->var_value()->is_parameter()', 2.598833643460815e-06], ['!this->functions_.empty())', 2.598833643460815e-06], ['this->add_statement(Statement::make_variable_declaration(no));', 2.598833643460815e-06], ['sink--a', 2.598833643460815e-06], ['Gogo::add_sink()', 2.598833643460815e-06], ['Gogo::add_dot_import_object(Named_object*', 2.598833643460815e-06], ['this->package_->bindings()->lookup(no->name());', 2.598833643460815e-06], ['e->package()', 2.598833643460815e-06], ['(e->is_unknown())', 2.598833643460815e-06], ['e->resolve();', 2.598833643460815e-06], ['(e->package()', 2.598833643460815e-06], ['(e->is_type_declaration()', 2.598833643460815e-06], ['e->is_function_declaration()', 2.598833643460815e-06], ['e->is_unknown()))', 2.598833643460815e-06], ['this->add_file_block_name(no->name(),', 2.598833643460815e-06], ['no->location());', 2.598833643460815e-06], ['this->current_bindings()->add_named_object(no);', 2.598833643460815e-06], ['linkname.', 2.598833643460815e-06], ['Gogo::add_linkname(const', 2.598833643460815e-06], ['ext_name,', 2.598833643460815e-06], ['this->package_->bindings()->lookup(this->pack_hidden_name(go_name,', 2.598833643460815e-06], ['is_exported));', 2.598833643460815e-06], ['no->func_value()->set_asm_name(ext_name);', 2.598833643460815e-06], ['no->func_declaration_value()->set_asm_name(ext_name);', 2.598833643460815e-06], ['"//go:linkname', 2.598833643460815e-06], ['functions"),', 2.598833643460815e-06], ['Gogo::mark_locals_used()', 2.598833643460815e-06], ['(Open_functions::iterator', 2.598833643460815e-06], ['this->functions_.begin();', 2.598833643460815e-06], ['this->functions_.end();', 2.598833643460815e-06], ['(std::vector<Block*>::iterator', 2.598833643460815e-06], ['pf->blocks.begin();', 2.598833643460815e-06], ['pf->blocks.end();', 2.598833643460815e-06], ['(*pb)->bindings()->mark_locals_used();', 2.598833643460815e-06], ['Gogo::record_interface_type(Interface_type*', 2.598833643460815e-06], ['itype)', 2.598833643460815e-06], ['this->interface_types_.push_back(itype);', 2.598833643460815e-06], ['Gogo::define_global_names()', 2.598833643460815e-06], ['this->import_package("runtime",', 2.598833643460815e-06], ['this->globals_->begin_declarations();', 2.598833643460815e-06], ['this->globals_->end_declarations();', 2.598833643460815e-06], ['global_no', 2.598833643460815e-06], ['name(Gogo::pack_hidden_name(global_no->name(),', 2.598833643460815e-06], ['no->resolve();', 2.598833643460815e-06], ['(global_no->is_type())', 2.598833643460815e-06], ['(no->type_declaration_value()->has_methods())', 2.598833643460815e-06], ['no->type_declaration_value()->methods()->begin();', 2.598833643460815e-06], ['no->type_declaration_value()->methods()->end();', 2.598833643460815e-06], ['no->set_type_value(global_no->type_value());', 2.598833643460815e-06], ['errtype', 2.598833643460815e-06], ['Named_object::make_type("erroneous_type",', 2.598833643460815e-06], ['errtype,', 2.598833643460815e-06], ['no->set_type_value(err->type_value());', 2.598833643460815e-06], ['no->unknown_value()->set_real_named_object(global_no);', 2.598833643460815e-06], ['"fmt"', 2.598833643460815e-06], ['fmt.', 2.598833643460815e-06], ['this->package_->bindings()->begin_declarations();', 2.598833643460815e-06], ['this->package_->bindings()->end_declarations();', 2.598833643460815e-06], ['(p->second->is_unknown()', 2.598833643460815e-06], ['p->second->unknown_value()->real_named_object()', 2.598833643460815e-06], ['File_block_names::const_iterator', 2.598833643460815e-06], ['this->file_block_names_.find(p->second->name());', 2.598833643460815e-06], ['this->file_block_names_.end())', 2.598833643460815e-06], ['p->second->message_name();', 2.598833643460815e-06], ['go_inform(pf->second,', 2.598833643460815e-06], ['"init".', 2.598833643460815e-06], ['(!p->second->is_function()', 2.598833643460815e-06], ['func");', 2.598833643460815e-06], ['Gogo::clear_file_scope()', 2.598833643460815e-06], ['this->package_->bindings()->clear_file_scope(this);', 2.598833643460815e-06], ['quiet', 2.598833643460815e-06], ['saw_errors();', 2.598833643460815e-06], ['!quiet)', 2.598833643460815e-06], ['(Package::Aliases::const_iterator', 2.598833643460815e-06], ['package->aliases().begin();', 2.598833643460815e-06], ['package->aliases().end();', 2.598833643460815e-06], ['(!p1->second->used())', 2.598833643460815e-06], ['refined', 2.598833643460815e-06], ['(p1->first', 2.598833643460815e-06], ['p1->first[0]', 2.598833643460815e-06], ['Gogo::message_name(pkg_name).c_str(),', 2.598833643460815e-06], ['Gogo::message_name(p1->first).c_str());', 2.598833643460815e-06], ['Gogo::message_name(pkg_name).c_str());', 2.598833643460815e-06], ['package->clear_used();', 2.598833643460815e-06], ['Queue', 2.598833643460815e-06], ['writing.', 2.598833643460815e-06], ['write_specific_type_functions,', 2.598833643460815e-06], ['Gogo::queue_specific_type_function(Type*', 2.598833643460815e-06], ['go_assert(!this->specific_type_functions_are_written_);', 2.598833643460815e-06], ['go_assert(!this->in_global_scope());', 2.598833643460815e-06], ['Specific_type_function(type,', 2.598833643460815e-06], ['this->specific_type_functions_.push_back(tsf);', 2.598833643460815e-06], ['Specific_type_functions(Gogo*', 2.598833643460815e-06], ['Specific_type_functions::type(Type*', 2.598833643460815e-06], ['(rt->struct_type()', 2.598833643460815e-06], ['(is_defined_elsewhere', 2.598833643460815e-06], ['Gogo::is_hidden_name(p->field_name()))', 2.598833643460815e-06], ['Gogo::write_specific_type_functions()', 2.598833643460815e-06], ['stf(this);', 2.598833643460815e-06], ['this->traverse(&stf);', 2.598833643460815e-06], ['(!this->specific_type_functions_.empty())', 2.598833643460815e-06], ['this->specific_type_functions_.back();', 2.598833643460815e-06], ['this->specific_type_functions_.pop_back();', 2.598833643460815e-06], ['tsf->type->write_specific_type_functions(this,', 2.598833643460815e-06], ['tsf->name,', 2.598833643460815e-06], ['tsf->size,', 2.598833643460815e-06], ['tsf->hash_name,', 2.598833643460815e-06], ['tsf->hash_fntype,', 2.598833643460815e-06], ['tsf->equal_name,', 2.598833643460815e-06], ['tsf->equal_fntype);', 2.598833643460815e-06], ['tsf;', 2.598833643460815e-06], ['this->specific_type_functions_are_written_', 2.598833643460815e-06], ['Gogo::traverse(Traverse*', 2.598833643460815e-06], ['consistency.', 2.598833643460815e-06], ['(this->package_->bindings()->traverse(traverse,', 2.598833643460815e-06], ['this->package_)', 2.598833643460815e-06], ['(p->second->bindings()->traverse(traverse,', 2.598833643460815e-06], ['verify.', 2.598833643460815e-06], ['Gogo::add_type_to_verify(Type*', 2.598833643460815e-06], ['this->verify_types_.push_back(type);', 2.598833643460815e-06], ['Verify_types()', 2.598833643460815e-06], ['Traverse(traverse_types)', 2.598833643460815e-06], ['Verify_types::type(Type*', 2.598833643460815e-06], ['(!t->verify())', 2.598833643460815e-06], ['Gogo::verify_types()', 2.598833643460815e-06], ['this->verify_types_.clear();', 2.598833643460815e-06], ['Lower_parse_tree(Gogo*', 2.598833643460815e-06], ['iota_value_(-1),', 2.598833643460815e-06], ['iota_value_;', 2.598833643460815e-06], ['Lower_parse_tree::variable(Named_object*', 2.598833643460815e-06], ['lower_init_expression.', 2.598833643460815e-06], ['no->var_value()->lower_init_expression(this->gogo_,', 2.598833643460815e-06], ['TRAVERSE_SKIP_COMPONENTS', 2.598833643460815e-06], ['ourselves.', 2.598833643460815e-06], ['(no->var_value()->has_type())', 2.598833643460815e-06], ['(Type::traverse(type,', 2.598833643460815e-06], ['Lower_parse_tree::constant(Named_object*', 2.598833643460815e-06], ['no->const_value();', 2.598833643460815e-06], ['trouble', 2.598833643460815e-06], ["constant's", 2.598833643460815e-06], ['(nc->lowering())', 2.598833643460815e-06], ['nc->set_lowering();', 2.598833643460815e-06], ['go_assert(this->iota_value_', 2.598833643460815e-06], ['nc->iota_value();', 2.598833643460815e-06], ['nc->traverse_expression(this);', 2.598833643460815e-06], ['nc->clear_lowering();', 2.598833643460815e-06], ['fast.', 2.598833643460815e-06], ['Lower_parse_tree::function(Named_object*', 2.598833643460815e-06], ['no->func_value()->set_closure_type();', 2.598833643460815e-06], ['Lower_parse_tree::statement(Block*', 2.598833643460815e-06], ['s->lower(this->gogo_,', 2.598833643460815e-06], ['Lower_parse_tree::expression(Expression**', 2.598833643460815e-06], ['awkward,', 2.598833643460815e-06], ['postorder', 2.598833643460815e-06], ['e->lower(this->gogo_,', 2.598833643460815e-06], ['&this->inserter_,', 2.598833643460815e-06], ['this->iota_value_);', 2.598833643460815e-06], ['(enew->traverse_subexpressions(this)', 2.598833643460815e-06], ['Unknown_expression,', 2.598833643460815e-06], ['((*pexpr)->unknown_expression()', 2.598833643460815e-06], ['Type::traverse((*pexpr)->type(),', 2.598833643460815e-06], ['Gogo::lower_parse_tree()', 2.598833643460815e-06], ['this->traverse(&lower_parse_tree);', 2.598833643460815e-06], ['inlinables,', 2.598833643460815e-06], ['this->imported_inlinable_functions_.size();', 2.598833643460815e-06], ['this->imported_inlinable_functions_[i];', 2.598833643460815e-06], ['no->func_declaration_value()->import_function_body(this,', 2.598833643460815e-06], ['involve', 2.598833643460815e-06], ['Type::traverse(*p,', 2.598833643460815e-06], ['&lower_parse_tree);', 2.598833643460815e-06], ['Gogo::lower_block(Named_object*', 2.598833643460815e-06], ['block->traverse(&lower_parse_tree);', 2.598833643460815e-06], ['Gogo::lower_expression(Named_object*', 2.598833643460815e-06], ['lower_parse_tree.set_inserter(inserter);', 2.598833643460815e-06], ['lower_parse_tree.expression(pexpr);', 2.598833643460815e-06], ['Gogo::lower_constant(Named_object*', 2.598833643460815e-06], ['go_assert(no->is_const());', 2.598833643460815e-06], ['lower(this,', 2.598833643460815e-06], ['lower.constant(no,', 2.598833643460815e-06], ['Create_function_descriptors(Gogo*', 2.598833643460815e-06], ['Create_function_descriptors::function(Named_object*', 2.598833643460815e-06], ['!no->func_value()->is_method()', 2.598833643460815e-06], ['!Gogo::is_hidden_name(no->name())', 2.598833643460815e-06], ['!Gogo::is_thunk(no))', 2.598833643460815e-06], ['Create_function_descriptors::expression(Expression**', 2.598833643460815e-06], ['!no->func_value()->is_method())', 2.598833643460815e-06], ['!Linemap::is_predeclared_location(no->location()))', 2.598833643460815e-06], ['no->func_declaration_value()->descriptor(this->gogo_,', 2.598833643460815e-06], ['expr->bound_method_expression();', 2.598833643460815e-06], ['Bound_method_expression::create_thunk(this->gogo_,', 2.598833643460815e-06], ['bme->method(),', 2.598833643460815e-06], ['bme->function());', 2.598833643460815e-06], ['expr->interface_field_reference_expression();', 2.598833643460815e-06], ['(ifre', 2.598833643460815e-06], ['ifre->expr()->type()->interface_type();', 2.598833643460815e-06], ['Interface_field_reference_expression::create_thunk(this->gogo_,', 2.598833643460815e-06], ['ifre->name());', 2.598833643460815e-06], ['fn->bound_method_expression()', 2.598833643460815e-06], ['fn->interface_field_reference_expression()', 2.598833643460815e-06], ['(args->traverse(this)', 2.598833643460815e-06], ['Gogo::create_function_descriptors()', 2.598833643460815e-06], ['assembly.', 2.598833643460815e-06], ['fndecls;', 2.598833643460815e-06], ['b->begin_declarations();', 2.598833643460815e-06], ['b->end_declarations();', 2.598833643460815e-06], ['!Linemap::is_predeclared_location(no->location())', 2.598833643460815e-06], ['fndecls.push_back(no);', 2.598833643460815e-06], ['fndecls.begin();', 2.598833643460815e-06], ['fndecls.end();', 2.598833643460815e-06], ['(*p)->func_declaration_value()->descriptor(this,', 2.598833643460815e-06], ['fndecls.clear();', 2.598833643460815e-06], ['cfd(this);', 2.598833643460815e-06], ['this->traverse(&cfd);', 2.598833643460815e-06], ['Finalize_methods(Gogo*', 2.598833643460815e-06], ['Finalize_methods::type(Type*', 2.598833643460815e-06], ['t->interface_type()->finalize_methods();', 2.598833643460815e-06], ['(rt->classification()', 2.598833643460815e-06], ['cycle,', 2.598833643460815e-06], ['(pf->is_anonymous())', 2.598833643460815e-06], ['(Type::traverse(pf->type(),', 2.598833643460815e-06], ['(rt->struct_type()->traverse_field_types(this)', 2.598833643460815e-06], ['nt->has_any_methods())', 2.598833643460815e-06], ['nt->methods();', 2.598833643460815e-06], ['(Type::traverse(p->second->type(),', 2.598833643460815e-06], ['nt->local_methods()', 2.598833643460815e-06], ['p->second->func_declaration_value()->type();', 2.598833643460815e-06], ['(Type::traverse(mt,', 2.598833643460815e-06], ['inherit.', 2.598833643460815e-06], ['(t->struct_type()->traverse_field_types(this)', 2.598833643460815e-06], ['t->struct_type()->finalize_methods(this->gogo_);', 2.598833643460815e-06], ['Gogo::finalize_methods()', 2.598833643460815e-06], ['this->traverse(&finalize);', 2.598833643460815e-06], ['Gogo::finalize_methods_for_type(Type*', 2.598833643460815e-06], ['&finalize);', 2.598833643460815e-06], ['Gogo::determine_types()', 2.598833643460815e-06], ['((*p)->is_function())', 2.598833643460815e-06], ['(*p)->func_value()->determine_types();', 2.598833643460815e-06], ['(*p)->var_value()->determine_type();', 2.598833643460815e-06], ['(!this->need_init_fn_', 2.598833643460815e-06], ['(*p)->is_variable())', 2.598833643460815e-06], ['(!variable->is_global())', 2.598833643460815e-06], ['(variable->init()', 2.598833643460815e-06], ['(variable->type()->interface_type()', 2.598833643460815e-06], ['(variable->init()->is_constant())', 2.598833643460815e-06], ['(!variable->init()->is_composite_literal())', 2.598833643460815e-06], ['(variable->init()->is_nonconstant_composite_literal())', 2.598833643460815e-06], ['(variable->is_global()', 2.598833643460815e-06], ['variable->type()->has_pointer())', 2.598833643460815e-06], ['p->second->determine_types();', 2.598833643460815e-06], ['Check_types_traverse(Gogo*', 2.598833643460815e-06], ['Check_types_traverse::variable(Named_object*', 2.598833643460815e-06], ['(named_object->is_variable())', 2.598833643460815e-06], ['named_object->var_value();', 2.598833643460815e-06], ['var->type()->base();', 2.598833643460815e-06], ['!Type::are_assignable(var->type(),', 2.598833643460815e-06], ['init->type(),', 2.598833643460815e-06], ['initialization");', 2.598833643460815e-06], ['Expression::make_error(named_object->location());', 2.598833643460815e-06], ['init->func_expression()', 2.598833643460815e-06], ['init->func_expression()->named_object();', 2.598833643460815e-06], ['go_error_at(init->location(),', 2.598833643460815e-06], ['(!var->is_used()', 2.598833643460815e-06], ['!var->is_global()', 2.598833643460815e-06], ['!var->is_parameter()', 2.598833643460815e-06], ['!var->is_receiver()', 2.598833643460815e-06], ['!var->type()->is_error()', 2.598833643460815e-06], ['!init->is_error_expression())', 2.598833643460815e-06], ['!Lex::is_invalid_identifier(named_object->name()))', 2.598833643460815e-06], ['named_object->message_name().c_str());', 2.598833643460815e-06], ['Check_types_traverse::constant(Named_object*', 2.598833643460815e-06], ['named_object->const_value();', 2.598833643460815e-06], ['constant->type();', 2.598833643460815e-06], ['(ctype->integer_type()', 2.598833643460815e-06], ['ctype->float_type()', 2.598833643460815e-06], ['ctype->complex_type()', 2.598833643460815e-06], ['!ctype->is_boolean_type()', 2.598833643460815e-06], ['!ctype->is_string_type())', 2.598833643460815e-06], ['(ctype->is_nil_type())', 2.598833643460815e-06], ['"const', 2.598833643460815e-06], ['(!ctype->is_error())', 2.598833643460815e-06], ['(!constant->expr()->is_constant())', 2.598833643460815e-06], ['go_error_at(constant->expr()->location(),', 2.598833643460815e-06], ['"expression', 2.598833643460815e-06], ['(!Type::are_assignable(constant->type(),', 2.598833643460815e-06], ['constant->expr()->type(),', 2.598833643460815e-06], ['Check_types_traverse::function(Named_object*', 2.598833643460815e-06], ['no->func_value()->check_labels();', 2.598833643460815e-06], ['Check_types_traverse::statement(Block*,', 2.598833643460815e-06], ['s->check_types(this->gogo_);', 2.598833643460815e-06], ['Check_types_traverse::expression(Expression**', 2.598833643460815e-06], ['(*expr)->check_types(this->gogo_);', 2.598833643460815e-06], ['Gogo::check_types()', 2.598833643460815e-06], ['signature.', 2.598833643460815e-06], ['no->func_declaration_value()->check_types();', 2.598833643460815e-06], ['Gogo::check_types_in_block(Block*', 2.598833643460815e-06], ['block->traverse(&traverse);', 2.598833643460815e-06], ['std::vector<Expression**>', 2.598833643460815e-06], ['Expression_pointers;', 2.598833643460815e-06], ['Find_eval_ordering()', 2.598833643460815e-06], ['exprs_()', 2.598833643460815e-06], ['size()', 2.598833643460815e-06], ['this->exprs_.size();', 2.598833643460815e-06], ['Expression_pointers::const_iterator', 2.598833643460815e-06], ['this->exprs_.begin();', 2.598833643460815e-06], ['this->exprs_.end();', 2.598833643460815e-06], ['Expression_pointers', 2.598833643460815e-06], ['exprs_;', 2.598833643460815e-06], ['Find_eval_ordering::expression(Expression**', 2.598833643460815e-06], ['expression_pointer)', 2.598833643460815e-06], ['binexp', 2.598833643460815e-06], ['(*expression_pointer)->binary_expression();', 2.598833643460815e-06], ['(binexp', 2.598833643460815e-06], ['(binexp->op()', 2.598833643460815e-06], ['OPERATOR_ANDAND', 2.598833643460815e-06], ['binexp->op()', 2.598833643460815e-06], ['OPERATOR_OROR))', 2.598833643460815e-06], ['Shortcut', 2.598833643460815e-06], ['ordered,', 2.598833643460815e-06], ['conditionally.', 2.598833643460815e-06], ['remove_shortcuts.', 2.598833643460815e-06], ['((*expression_pointer)->traverse_subexpressions(this)', 2.598833643460815e-06], ['((*expression_pointer)->must_eval_in_order())', 2.598833643460815e-06], ['Order_eval(Gogo*', 2.598833643460815e-06], ['Order_eval::statement(Block*', 2.598833643460815e-06], ['(stmt->switch_statement()', 2.598833643460815e-06], ['stmt->variable_declaration_statement();', 2.598833643460815e-06], ['stmt->traverse_contents(&find_eval_ordering);', 2.598833643460815e-06], ['init->traverse_subexpressions.', 2.598833643460815e-06], ['os.Error', 2.598833643460815e-06], ['newvar,', 2.598833643460815e-06], ['call(arg())', 2.598833643460815e-06], ['newvar', 2.598833643460815e-06], ['call(arg()).', 2.598833643460815e-06], ['subexpressions,', 2.598833643460815e-06], ['err,', 2.598833643460815e-06], ['call()', 2.598833643460815e-06], ['newvar.', 2.598833643460815e-06], ['problem,', 2.598833643460815e-06], ['find_eval_ordering.size();', 2.598833643460815e-06], ['(stmt->classification())', 2.598833643460815e-06], ['side,', 2.598833643460815e-06], ['mishandle', 2.598833643460815e-06], ['m[0]', 2.598833643460815e-06], ['len(m)', 2.598833643460815e-06], ['Statement::STATEMENT_EXPRESSION:', 2.598833643460815e-06], ['counted', 2.598833643460815e-06], ['stmt->expression_statement()->expr();', 2.598833643460815e-06], ['expr->call_expression()->result_count()', 2.598833643460815e-06], ['is_thunk', 2.598833643460815e-06], ['stmt->thunk_statement()', 2.598833643460815e-06], ['stmt->expression_statement();', 2.598833643460815e-06], ['(is_thunk', 2.598833643460815e-06], ['find_eval_ordering.end())', 2.598833643460815e-06], ['Call_result_expressions,', 2.598833643460815e-06], ['hoisting', 2.598833643460815e-06], ['multi-return', 2.598833643460815e-06], ['(this->remember_expression(*pexpr))', 2.598833643460815e-06], ['(es', 2.598833643460815e-06], ['es->expr())', 2.598833643460815e-06], ['Order_eval::variable(Named_object*', 2.598833643460815e-06], ['(find_eval_ordering.size()', 2.598833643460815e-06], ['Gogo::order_evaluations()', 2.598833643460815e-06], ['order_eval(this);', 2.598833643460815e-06], ['this->traverse(&order_eval);', 2.598833643460815e-06], ['Find_shortcut()', 2.598833643460815e-06], ['found_(NULL)', 2.598833643460815e-06], ['Find_shortcut::expression(Expression**', 2.598833643460815e-06], ['expr->binary_expression();', 2.598833643460815e-06], ['(be', 2.598833643460815e-06], ['be->op();', 2.598833643460815e-06], ['go_assert(this->found_', 2.598833643460815e-06], ['Shortcuts(Gogo*', 2.598833643460815e-06], ['convert_shortcut(Block*', 2.598833643460815e-06], ['Shortcuts::statement(Block*', 2.598833643460815e-06], ['(s->switch_statement()', 2.598833643460815e-06], ['s->traverse_contents(&find_shortcut);', 2.598833643460815e-06], ['this->convert_shortcut(block,', 2.598833643460815e-06], ['Shortcuts::variable(Named_object*', 2.598833643460815e-06], ['this->convert_shortcut(NULL,', 2.598833643460815e-06], ['*PSHORTCUT', 2.598833643460815e-06], ['Shortcuts::convert_shortcut(Block*', 2.598833643460815e-06], ['pshortcut)', 2.598833643460815e-06], ['(*pshortcut)->binary_expression();', 2.598833643460815e-06], ['shortcut->left();', 2.598833643460815e-06], ['shortcut->right();', 2.598833643460815e-06], ['shortcut->location();', 2.598833643460815e-06], ['retblock', 2.598833643460815e-06], ['retblock->set_end_location(loc);', 2.598833643460815e-06], ['Statement::make_temporary(shortcut->type(),', 2.598833643460815e-06], ['retblock->add_statement(ts);', 2.598833643460815e-06], ['Block(retblock,', 2.598833643460815e-06], ['block->set_end_location(loc);', 2.598833643460815e-06], ['tmpref', 2.598833643460815e-06], ['Statement::make_assignment(tmpref,', 2.598833643460815e-06], ['block->add_statement(assign);', 2.598833643460815e-06], ['(shortcut->binary_expression()->op()', 2.598833643460815e-06], ['OPERATOR_OROR)', 2.598833643460815e-06], ['if_statement', 2.598833643460815e-06], ['retblock->add_statement(if_statement);', 2.598833643460815e-06], ['*pshortcut', 2.598833643460815e-06], ['shortcut;', 2.598833643460815e-06], ['Gogo::order_evaluations.', 2.598833643460815e-06], ['order_eval(this->gogo_);', 2.598833643460815e-06], ['retblock->traverse(&order_eval);', 2.598833643460815e-06], ['shortcuts(this->gogo_);', 2.598833643460815e-06], ['retblock->traverse(&shortcuts);', 2.598833643460815e-06], ['Statement::make_block_statement(retblock,', 2.598833643460815e-06], ['considerably', 2.598833643460815e-06], ['Gogo::remove_shortcuts()', 2.598833643460815e-06], ['shortcuts(this);', 2.598833643460815e-06], ['this->traverse(&shortcuts);', 2.598833643460815e-06], ['Flatten(Gogo*', 2.598833643460815e-06], ['Flatten::variable(Named_object*', 2.598833643460815e-06], ['flatten_init_expression.', 2.598833643460815e-06], ['no->var_value()->flatten_init_expression(this->gogo_,', 2.598833643460815e-06], ['(!no->var_value()->is_parameter()', 2.598833643460815e-06], ['!no->var_value()->is_receiver()', 2.598833643460815e-06], ['!no->var_value()->is_closure()', 2.598833643460815e-06], ['no->var_value()->is_non_escaping_address_taken()', 2.598833643460815e-06], ['!no->var_value()->is_in_heap()', 2.598833643460815e-06], ['no->var_value()->toplevel_decl()', 2.598833643460815e-06], ['top_block', 2.598833643460815e-06], ['function_->func_value()->block();', 2.598833643460815e-06], ['(top_block->bindings()->lookup_local(no->name())', 2.598833643460815e-06], ['top_block->add_statement_at_front(ts);', 2.598833643460815e-06], ['Flatten::function(Named_object*', 2.598833643460815e-06], ['Flatten::statement(Block*', 2.598833643460815e-06], ['s->flatten(this->gogo_,', 2.598833643460815e-06], ['Flatten::expression(Expression**', 2.598833643460815e-06], ['(e->traverse_subexpressions(this)', 2.598833643460815e-06], ['e->flatten(this->gogo_,', 2.598833643460815e-06], ['Gogo::flatten_block(Named_object*', 2.598833643460815e-06], ['block->traverse(&flatten);', 2.598833643460815e-06], ['Gogo::flatten_expression(Named_object*', 2.598833643460815e-06], ['flatten.set_inserter(inserter);', 2.598833643460815e-06], ['flatten.expression(pexpr);', 2.598833643460815e-06], ['Gogo::flatten()', 2.598833643460815e-06], ['this->traverse(&flatten);', 2.598833643460815e-06], ['Convert_recover(Named_object*', 2.598833643460815e-06], ['arg_(arg)', 2.598833643460815e-06], ['arg_;', 2.598833643460815e-06], ['Convert_recover::expression(Expression**', 2.598833643460815e-06], ['pp)', 2.598833643460815e-06], ['(*pp)->call_expression();', 2.598833643460815e-06], ['ce->is_recover_call())', 2.598833643460815e-06], ['ce->set_recover_arg(Expression::make_var_reference(this->arg_,', 2.598833643460815e-06], ['ce->location()));', 2.598833643460815e-06], ['build_recover_thunks.', 2.598833643460815e-06], ['Build_recover_thunks(Gogo*', 2.598833643460815e-06], ['can_recover_arg(Location);', 2.598833643460815e-06], ['Build_recover_thunks::function(Named_object*', 2.598833643460815e-06], ['orig_no)', 2.598833643460815e-06], ['orig_func', 2.598833643460815e-06], ['orig_no->func_value();', 2.598833643460815e-06], ['(!orig_func->calls_recover()', 2.598833643460815e-06], ['orig_func->is_recover_thunk()', 2.598833643460815e-06], ['orig_func->has_recover_thunk())', 2.598833643460815e-06], ['orig_func->location();', 2.598833643460815e-06], ['orig_func->type();', 2.598833643460815e-06], ['receiver_name;', 2.598833643460815e-06], ['orig_fntype->receiver();', 2.598833643460815e-06], ['"rt.%u",', 2.598833643460815e-06], ['new_params->push_back(Typed_identifier(receiver_name,', 2.598833643460815e-06], ['receiver->type(),', 2.598833643460815e-06], ['receiver->location()));', 2.598833643460815e-06], ['"pr.%u",', 2.598833643460815e-06], ['can_recover_name', 2.598833643460815e-06], ['new_params->push_back(Typed_identifier(can_recover_name,', 2.598833643460815e-06], ['orig_fntype->location()));', 2.598833643460815e-06], ['orig_fntype->results();', 2.598833643460815e-06], ['*new_fntype', 2.598833643460815e-06], ['orig_fntype->location());', 2.598833643460815e-06], ['(orig_fntype->is_varargs())', 2.598833643460815e-06], ['new_fntype->set_is_varargs();', 2.598833643460815e-06], ['orig_fntype->receiver()->type();', 2.598833643460815e-06], ['name(gogo->recover_thunk_name(orig_no->name(),', 2.598833643460815e-06], ['rtype));', 2.598833643460815e-06], ['*new_no', 2.598833643460815e-06], ['gogo->start_function(name,', 2.598833643460815e-06], ['*new_func', 2.598833643460815e-06], ['new_no->func_value();', 2.598833643460815e-06], ['(orig_func->enclosing()', 2.598833643460815e-06], ['new_func->set_enclosing(orig_func->enclosing());', 2.598833643460815e-06], ['bodies.', 2.598833643460815e-06], ['confusing,', 2.598833643460815e-06], ['NEW_NO', 2.598833643460815e-06], ['(orig_func->needs_closure())', 2.598833643460815e-06], ['creating,', 2.598833643460815e-06], ['NEW_CLOSURE_NO', 2.598833643460815e-06], ['words,', 2.598833643460815e-06], ['creating.', 2.598833643460815e-06], ['orig_closure_no', 2.598833643460815e-06], ['orig_func->closure_var();', 2.598833643460815e-06], ['orig_closure_var', 2.598833643460815e-06], ['orig_closure_no->var_value();', 2.598833643460815e-06], ['Variable(orig_closure_var->type(),', 2.598833643460815e-06], ['new_var->set_is_closure();', 2.598833643460815e-06], ['"closure.%u",', 2.598833643460815e-06], ['new_closure_no', 2.598833643460815e-06], ['new_func->set_closure_var(new_closure_no);', 2.598833643460815e-06], ['Expression::make_var_reference(new_closure_no,', 2.598833643460815e-06], ['Expression::make_func_reference(new_no,', 2.598833643460815e-06], ['(new_params', 2.598833643460815e-06], ['succed.', 2.598833643460815e-06], ['args->push_back(this->can_recover_arg(location));', 2.598833643460815e-06], ['new_func->swap_for_recover(orig_func);', 2.598833643460815e-06], ['orig_func->set_is_recover_thunk();', 2.598833643460815e-06], ['new_func->set_calls_recover();', 2.598833643460815e-06], ['new_func->set_has_recover_thunk();', 2.598833643460815e-06], ['orig_bindings', 2.598833643460815e-06], ['orig_func->block()->bindings();', 2.598833643460815e-06], ['new_bindings', 2.598833643460815e-06], ['new_func->block()->bindings();', 2.598833643460815e-06], ['accordingly', 2.598833643460815e-06], ['orig_rec_no', 2.598833643460815e-06], ['orig_bindings->lookup_local(receiver_name);', 2.598833643460815e-06], ['go_assert(orig_rec_no', 2.598833643460815e-06], ['orig_rec_no->is_variable()', 2.598833643460815e-06], ['!orig_rec_no->var_value()->is_receiver());', 2.598833643460815e-06], ['orig_rec_no->var_value()->set_is_receiver();', 2.598833643460815e-06], ['new_receiver_name(orig_fntype->receiver()->name());', 2.598833643460815e-06], ['(new_receiver_name.empty())', 2.598833643460815e-06], ['"r.NNN"', 2.598833643460815e-06], ['Gogo::start_function.', 2.598833643460815e-06], ['new_bindings->begin_definitions();', 2.598833643460815e-06], ['new_bindings->end_definitions();', 2.598833643460815e-06], ['pname((*p)->name());', 2.598833643460815e-06], ['(pname[0]', 2.598833643460815e-06], ["'r'", 2.598833643460815e-06], ['pname[1]', 2.598833643460815e-06], ['new_receiver_name', 2.598833643460815e-06], ['go_assert(!new_receiver_name.empty());', 2.598833643460815e-06], ['new_rec_no', 2.598833643460815e-06], ['new_bindings->lookup_local(new_receiver_name);', 2.598833643460815e-06], ['(new_rec_no', 2.598833643460815e-06], ['go_assert(new_rec_no->is_variable()', 2.598833643460815e-06], ['new_rec_no->var_value()->is_receiver());', 2.598833643460815e-06], ['new_rec_no->var_value()->set_is_not_receiver();', 2.598833643460815e-06], ['flipped', 2.598833643460815e-06], ['whereupon', 2.598833643460815e-06], ['orig_bindings->lookup_local(can_recover_name);', 2.598833643460815e-06], ['go_assert(can_recover_no', 2.598833643460815e-06], ['can_recover_no->is_variable()', 2.598833643460815e-06], ['can_recover_no->var_value()->is_parameter());', 2.598833643460815e-06], ['orig_bindings->remove_binding(can_recover_no);', 2.598833643460815e-06], ['can_recover_var', 2.598833643460815e-06], ['new_bindings->add_variable(can_recover_name,', 2.598833643460815e-06], ['can_recover_var);', 2.598833643460815e-06], ['convert_recover(can_recover_no);', 2.598833643460815e-06], ['new_func->traverse(&convert_recover);', 2.598833643460815e-06], ['new_func->update_result_variables();', 2.598833643460815e-06], ['orig_func->update_result_variables();', 2.598833643460815e-06], ['.can_recover', 2.598833643460815e-06], ['non-nil.', 2.598833643460815e-06], ['Build_recover_thunks::can_recover_arg(Location', 2.598833643460815e-06], ['(builtin_return_address', 2.598833643460815e-06], ['builtin_return_address', 2.598833643460815e-06], ['Gogo::declare_builtin_rf_address("__builtin_return_address",', 2.598833643460815e-06], ['can_recover;', 2.598833643460815e-06], ['(can_recover', 2.598833643460815e-06], ['param_types->push_back(Typed_identifier("a",', 2.598833643460815e-06], ['boolean_type', 2.598833643460815e-06], ['boolean_type,', 2.598833643460815e-06], ['Named_object::make_function_declaration("runtime_canrecover",', 2.598833643460815e-06], ['can_recover->func_declaration_value()->set_asm_name("runtime.canrecover");', 2.598833643460815e-06], ['Expression::make_func_reference(builtin_return_address,', 2.598833643460815e-06], ['args->push_back(zexpr);', 2.598833643460815e-06], ['args->push_back(call);', 2.598833643460815e-06], ['Expression::make_func_reference(can_recover,', 2.598833643460815e-06], ['cooperate', 2.598833643460815e-06], ['Gogo::build_recover_thunks()', 2.598833643460815e-06], ['build_recover_thunks(this);', 2.598833643460815e-06], ['this->traverse(&build_recover_thunks);', 2.598833643460815e-06], ['Gogo::declare_builtin_rf_address(const', 2.598833643460815e-06], ['hasarg)', 2.598833643460815e-06], ['(hasarg)', 2.598833643460815e-06], ['param_types->push_back(Typed_identifier("l",', 2.598833643460815e-06], ['return_types', 2.598833643460815e-06], ['return_types->push_back(Typed_identifier("",', 2.598833643460815e-06], ['return_types,', 2.598833643460815e-06], ['ret->func_declaration_value()->set_asm_name(name);', 2.598833643460815e-06], ['Gogo::runtime_error(int', 2.598833643460815e-06], ['code_expr', 2.598833643460815e-06], ['Expression::make_integer_ul(code,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::RUNTIME_ERROR,', 2.598833643460815e-06], ['code_expr);', 2.598833643460815e-06], ['Build_method_tables(Gogo*', 2.598833643460815e-06], ['interfaces)', 2.598833643460815e-06], ['interfaces_(interfaces)', 2.598833643460815e-06], ['interfaces_;', 2.598833643460815e-06], ['Normally', 2.598833643460815e-06], ['Gogo::build_interface_method_tables()', 2.598833643460815e-06], ['std::vector<Interface_type*>', 2.598833643460815e-06], ['hidden_interfaces;', 2.598833643460815e-06], ['hidden_interfaces.reserve(this->interface_types_.size());', 2.598833643460815e-06], ['this->interface_types_.begin();', 2.598833643460815e-06], ['this->interface_types_.end();', 2.598833643460815e-06], ['(*pi)->methods();', 2.598833643460815e-06], ['(Gogo::is_hidden_name(pm->name()))', 2.598833643460815e-06], ['hidden_interfaces.push_back(*pi);', 2.598833643460815e-06], ['(!hidden_interfaces.empty())', 2.598833643460815e-06], ['bmt(this,', 2.598833643460815e-06], ['hidden_interfaces);', 2.598833643460815e-06], ['this->traverse(&bmt);', 2.598833643460815e-06], ['this->interface_types_.clear();', 2.598833643460815e-06], ['implements,', 2.598833643460815e-06], ['Build_method_tables::type(Type*', 2.598833643460815e-06], ['context(this->gogo_,', 2.598833643460815e-06], ['this->interfaces_.begin();', 2.598833643460815e-06], ['this->interfaces_.end();', 2.598833643460815e-06], ['((*p)->implements_interface(Type::make_pointer_type(nt),', 2.598833643460815e-06], ['((*p)->implements_interface(Type::make_pointer_type(st),', 2.598833643460815e-06], ['Gogo::allocate_memory(Type*', 2.598833643460815e-06], ['Runtime::make_call(Runtime::NEW,', 2.598833643460815e-06], ['td);', 2.598833643460815e-06], ['Check_return_statements_traverse()', 2.598833643460815e-06], ['Traverse(traverse_functions)', 2.598833643460815e-06], ['Check_return_statements_traverse::function(Named_object*', 2.598833643460815e-06], ['func->type();', 2.598833643460815e-06], ['(func->block()->may_fall_through())', 2.598833643460815e-06], ['go_error_at(func->block()->end_location(),', 2.598833643460815e-06], ['function");', 2.598833643460815e-06], ['Gogo::check_return_statements()', 2.598833643460815e-06], ['*available', 2.598833643460815e-06], ['goes,', 2.598833643460815e-06], ['stops', 2.598833643460815e-06], ['Inline_within_budget(int*', 2.598833643460815e-06], ['available)', 2.598833643460815e-06], ['available_(available)', 2.598833643460815e-06], ['available_;', 2.598833643460815e-06], ['Inline_within_budget::statement(Block*,', 2.598833643460815e-06], ['s->inlining_cost();', 2.598833643460815e-06], ['Inline_within_budget::expression(Expression**', 2.598833643460815e-06], ['(*pexpr)->inlining_cost();', 2.598833643460815e-06], ['Mark_inline_candidates()', 2.598833643460815e-06], ['budget,', 2.598833643460815e-06], ['decrease', 2.598833643460815e-06], ['negative,', 2.598833643460815e-06], ['heuristic.', 2.598833643460815e-06], ['spirit,', 2.598833643460815e-06], ['budget_heuristic', 2.598833643460815e-06], ['80;', 2.598833643460815e-06], ['candidate.', 2.598833643460815e-06], ['Mark_inline_candidates::function(Named_object*', 2.598833643460815e-06], ['Mark_inline_candidates::type(Type*', 2.598833643460815e-06], ['Gogo::do_exports()', 2.598833643460815e-06], ['mic;', 2.598833643460815e-06], ['this->traverse(&mic);', 2.598833643460815e-06], ['streaming', 2.598833643460815e-06], ['Stream_to_section', 2.598833643460815e-06], ['stream(this->backend());', 2.598833643460815e-06], ['(this->pkgpath_from_option_)', 2.598833643460815e-06], ['(this->prefix_from_option_)', 2.598833643460815e-06], ['this->prefix_;', 2.598833643460815e-06], ['"main";', 2.598833643460815e-06], ['exp(&stream);', 2.598833643460815e-06], ['exp.register_builtin_types(this);', 2.598833643460815e-06], ['exp.export_globals(this->package_name(),', 2.598833643460815e-06], ['this->packages_,', 2.598833643460815e-06], ['this->imports_,', 2.598833643460815e-06], ['!this->is_main_package()', 2.598833643460815e-06], ['this->get_init_fn_name()', 2.598833643460815e-06], ['""),', 2.598833643460815e-06], ['this->imported_init_fns_,', 2.598833643460815e-06], ['this->package_->bindings());', 2.598833643460815e-06], ['(!this->c_header_.empty()', 2.598833643460815e-06], ['this->write_c_header();', 2.598833643460815e-06], ['Gogo::write_c_header()', 2.598833643460815e-06], ['out.open(this->c_header_.c_str());', 2.598833643460815e-06], ['std::list<Named_object*>', 2.598833643460815e-06], ['top->begin_definitions();', 2.598833643460815e-06], ['top->end_definitions();', 2.598833643460815e-06], ['letter,', 2.598833643460815e-06], ['mkrsysinfo.sh', 2.598833643460815e-06], ['_defer', 2.598833643460815e-06], ['_panic.', 2.598833643460815e-06], ['(name[1]', 2.598833643460815e-06], ['"_defer"', 2.598833643460815e-06], ['"_panic"))', 2.598833643460815e-06], ['(no->is_type()', 2.598833643460815e-06], ['no->type_value()->struct_type()', 2.598833643460815e-06], ['no->const_value()->type()->integer_type()', 2.598833643460815e-06], ['!no->const_value()->is_sink())', 2.598833643460815e-06], ['(no->const_value()->expr()->numeric_constant_value(&nc)', 2.598833643460815e-06], ['written;', 2.598833643460815e-06], ['types.pop_front();', 2.598833643460815e-06], ['(!no->type_value()->struct_type()->can_write_to_c_header(&requires,', 2.598833643460815e-06], ['requires.begin();', 2.598833643460815e-06], ['requires.end()', 2.598833643460815e-06], ['(std::list<Named_object*>::const_iterator', 2.598833643460815e-06], ['types.end()', 2.598833643460815e-06], ['++pt)', 2.598833643460815e-06], ['(*pr', 2.598833643460815e-06], ['*pt)', 2.598833643460815e-06], ['++loop;', 2.598833643460815e-06], ['10000)', 2.598833643460815e-06], ['declare.begin();', 2.598833643460815e-06], ['declare.end();', 2.598833643460815e-06], ['(*pd', 2.598833643460815e-06], ['drequires;', 2.598833643460815e-06], ['ddeclare;', 2.598833643460815e-06], ['(!(*pd)->type_value()->struct_type()->', 2.598833643460815e-06], ['can_write_to_c_header(&drequires,', 2.598833643460815e-06], ['&ddeclare))', 2.598833643460815e-06], ['written.begin();', 2.598833643460815e-06], ['written.end();', 2.598833643460815e-06], ['++pw)', 2.598833643460815e-06], ['(*pw', 2.598833643460815e-06], ['*pd)', 2.598833643460815e-06], ['(!done)', 2.598833643460815e-06], ['(*pd)->message_name()', 2.598833643460815e-06], ['written.push_back(*pd);', 2.598833643460815e-06], ['no->type_value()->struct_type()->write_to_c_header(out);', 2.598833643460815e-06], ['"};"', 2.598833643460815e-06], ['written.push_back(no);', 2.598833643460815e-06], ['Convert_named_types(Gogo*', 2.598833643460815e-06], ['Traverse(traverse_blocks),', 2.598833643460815e-06], ['block(Block*', 2.598833643460815e-06], ['Convert_named_types::block(Block*', 2.598833643460815e-06], ['this->gogo_->convert_named_types_in_bindings(block->bindings());', 2.598833643460815e-06], ['sequence,', 2.598833643460815e-06], ['Named_type::convert.', 2.598833643460815e-06], ['Gogo::convert_named_types()', 2.598833643460815e-06], ['this->convert_named_types_in_bindings(this->globals_);', 2.598833643460815e-06], ['this->convert_named_types_in_bindings(package->bindings());', 2.598833643460815e-06], ['cnt(this);', 2.598833643460815e-06], ['this->traverse(&cnt);', 2.598833643460815e-06], ['Expression::make_func_descriptor_type();', 2.598833643460815e-06], ['Type::convert_builtin_named_types(this);', 2.598833643460815e-06], ['Runtime::convert_types(this);', 2.598833643460815e-06], ['this->named_types_are_converted_', 2.598833643460815e-06], ['Type::finish_pointer_types(this);', 2.598833643460815e-06], ['Gogo::convert_named_types_in_bindings(Bindings*', 2.598833643460815e-06], ['((*p)->is_type())', 2.598833643460815e-06], ['(*p)->type_value()->convert(this);', 2.598833643460815e-06], ['Function.', 2.598833643460815e-06], ['Function::Function(Function_type*', 2.598833643460815e-06], ['results_(NULL),', 2.598833643460815e-06], ['closure_var_(NULL),', 2.598833643460815e-06], ['block_(block),', 2.598833643460815e-06], ['labels_(),', 2.598833643460815e-06], ['local_type_count_(0),', 2.598833643460815e-06], ['descriptor_(NULL),', 2.598833643460815e-06], ['fndecl_(NULL),', 2.598833643460815e-06], ['defer_stack_(NULL),', 2.598833643460815e-06], ['nested_functions_(0),', 2.598833643460815e-06], ['is_sink_(false),', 2.598833643460815e-06], ['results_are_named_(false),', 2.598833643460815e-06], ['is_unnamed_type_stub_method_(false),', 2.598833643460815e-06], ['calls_recover_(false),', 2.598833643460815e-06], ['is_recover_thunk_(false),', 2.598833643460815e-06], ['has_recover_thunk_(false),', 2.598833643460815e-06], ['calls_defer_retaddr_(false),', 2.598833643460815e-06], ['is_type_specific_function_(false),', 2.598833643460815e-06], ['export_for_inlining_(false),', 2.598833643460815e-06], ['is_inline_only_(false)', 2.598833643460815e-06], ['Function::create_result_variables(Gogo*', 2.598833643460815e-06], ['(!results->front().name().empty())', 2.598833643460815e-06], ['this->results_are_named_', 2.598833643460815e-06], ['this->results_', 2.598833643460815e-06], ['Results();', 2.598833643460815e-06], ['this->results_->reserve(results->size());', 2.598833643460815e-06], ['(name.empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(name))', 2.598833643460815e-06], ['result_counter;', 2.598833643460815e-06], ['"$ret%d",', 2.598833643460815e-06], ['result_counter);', 2.598833643460815e-06], ['++result_counter;', 2.598833643460815e-06], ['Result_variable(p->type(),', 2.598833643460815e-06], ['dummy_result_count;', 2.598833643460815e-06], ['"$dret%d",', 2.598833643460815e-06], ['dummy_result_count);', 2.598833643460815e-06], ['++dummy_result_count;', 2.598833643460815e-06], ['cloning', 2.598833643460815e-06], ['Function::update_result_variables()', 2.598833643460815e-06], ['(Results::iterator', 2.598833643460815e-06], ['(*p)->result_var_value()->set_function(this);', 2.598833643460815e-06], ['Function::nointerface()', 2.598833643460815e-06], ['Function::set_nointerface()', 2.598833643460815e-06], ['Function::closure_var()', 2.598833643460815e-06], ['go_assert(this->descriptor_', 2.598833643460815e-06], ['this->type_->location();', 2.598833643460815e-06], ['struct_type->set_is_struct_incomparable();', 2.598833643460815e-06], ['Variable(Type::make_pointer_type(struct_type),', 2.598833643460815e-06], ['var->set_is_closure();', 2.598833643460815e-06], ['this->closure_var_', 2.598833643460815e-06], ['Named_object::make_variable("$closure",', 2.598833643460815e-06], ['Function::set_closure_type()', 2.598833643460815e-06], ['closure->var_value()->type()->deref()->struct_type();', 2.598833643460815e-06], ['st->push_field(Struct_field(Typed_identifier(".f",', 2.598833643460815e-06], ['this->location_)));', 2.598833643460815e-06], ['(Closure_fields::const_iterator', 2.598833643460815e-06], ['this->closure_fields_.begin();', 2.598833643460815e-06], ['this->closure_fields_.end();', 2.598833643460815e-06], ['no->result_var_value()->type();', 2.598833643460815e-06], ['Type::make_pointer_type(var_type);', 2.598833643460815e-06], ['st->push_field(Struct_field(Typed_identifier(n,', 2.598833643460815e-06], ['field_type,', 2.598833643460815e-06], ['p->second)));', 2.598833643460815e-06], ['Function::is_method()', 2.598833643460815e-06], ['this->type_->is_method();', 2.598833643460815e-06], ['Function::add_label_definition(Gogo*', 2.598833643460815e-06], ['(label_name', 2.598833643460815e-06], ['Label::create_dummy_label();', 2.598833643460815e-06], ['(label->is_defined())', 2.598833643460815e-06], ['go_inform(label->location(),', 2.598833643460815e-06], ['label->define(location,', 2.598833643460815e-06], ['gogo->bindings_snapshot(location));', 2.598833643460815e-06], ["goto's", 2.598833643460815e-06], ['std::vector<Bindings_snapshot*>&', 2.598833643460815e-06], ['refs(label->refs());', 2.598833643460815e-06], ['(std::vector<Bindings_snapshot*>::const_iterator', 2.598833643460815e-06], ['refs.begin();', 2.598833643460815e-06], ['refs.end();', 2.598833643460815e-06], ['(*p)->check_goto_to(gogo->current_block());', 2.598833643460815e-06], ['label->clear_refs();', 2.598833643460815e-06], ['Function::add_label_reference(Gogo*', 2.598833643460815e-06], ['(issue_goto_errors)', 2.598833643460815e-06], ['snapshot', 2.598833643460815e-06], ['label->snapshot();', 2.598833643460815e-06], ['(snapshot', 2.598833643460815e-06], ['snapshot->check_goto_from(gogo->current_block(),', 2.598833643460815e-06], ['label->add_snapshot_ref(gogo->bindings_snapshot(location));', 2.598833643460815e-06], ['Function::check_labels()', 2.598833643460815e-06], ['(Labels::const_iterator', 2.598833643460815e-06], ['this->labels_.begin();', 2.598833643460815e-06], ['this->labels_.end();', 2.598833643460815e-06], ['(!label->is_used())', 2.598833643460815e-06], ['go_error_at(label->location(),', 2.598833643460815e-06], ['Gogo::message_name(label->name()).c_str());', 2.598833643460815e-06], ['Function::swap_for_recover(Function', 2.598833643460815e-06], ['*x)', 2.598833643460815e-06], ['go_assert(this->enclosing_', 2.598833643460815e-06], ['x->enclosing_);', 2.598833643460815e-06], ['std::swap(this->results_,', 2.598833643460815e-06], ['x->results_);', 2.598833643460815e-06], ['std::swap(this->closure_var_,', 2.598833643460815e-06], ['x->closure_var_);', 2.598833643460815e-06], ['std::swap(this->block_,', 2.598833643460815e-06], ['x->block_);', 2.598833643460815e-06], ['go_assert(this->location_', 2.598833643460815e-06], ['x->location_);', 2.598833643460815e-06], ['x->fndecl_', 2.598833643460815e-06], ['go_assert(this->defer_stack_', 2.598833643460815e-06], ['x->defer_stack_', 2.598833643460815e-06], ['Function::traverse(Traverse*', 2.598833643460815e-06], ['(this->block_->traverse(traverse)', 2.598833643460815e-06], ['Function::determine_types()', 2.598833643460815e-06], ['this->block_->determine_types();', 2.598833643460815e-06], ['Function::descriptor(Gogo*,', 2.598833643460815e-06], ['go_assert(this->closure_var_', 2.598833643460815e-06], ['returning,', 2.598833643460815e-06], ['function-specific', 2.598833643460815e-06], ['Function::defer_stack(Location', 2.598833643460815e-06], ['Statement::make_temporary(t,', 2.598833643460815e-06], ['this->defer_stack_->set_is_address_taken();', 2.598833643460815e-06], ['Function::export_func(Export*', 2.598833643460815e-06], ['(this->export_for_inlining())', 2.598833643460815e-06], ['Function::export_func_with_type(exp,', 2.598833643460815e-06], ['this->is_method()', 2.598833643460815e-06], ['this->nointerface(),', 2.598833643460815e-06], ['Function::export_func_with_type(Export*', 2.598833643460815e-06], ['result_vars,', 2.598833643460815e-06], ['exp->write_c_string("func', 2.598833643460815e-06], ['go_assert(fntype->is_method());', 2.598833643460815e-06], ['exp->write_c_string("/*nointerface*/', 2.598833643460815e-06], ['exp->write_name(receiver->name());', 2.598833643460815e-06], ['exp->write_escape(receiver->note());', 2.598833643460815e-06], ['exp->write_type(receiver->type());', 2.598833643460815e-06], ['exp->write_c_string(")', 2.598833643460815e-06], ['exp->write_escape(p->note());', 2.598833643460815e-06], ['result_decls', 2.598833643460815e-06], ['(result_decls', 2.598833643460815e-06], ['(result_decls->size()', 2.598833643460815e-06], ['result_decls->begin()->name().empty()', 2.598833643460815e-06], ['exp->write_type(result_decls->begin()->type());', 2.598833643460815e-06], ['Results::const_iterator', 2.598833643460815e-06], ['pr;', 2.598833643460815e-06], ['result_vars->begin();', 2.598833643460815e-06], ['result_decls->begin();', 2.598833643460815e-06], ['result_decls->end();', 2.598833643460815e-06], ['pr->name,', 2.598833643460815e-06], ['result_vars', 2.598833643460815e-06], ['exp->write_name(pd->name());', 2.598833643460815e-06], ['exp->write_name((*pr)->name());', 2.598833643460815e-06], ['exp->write_escape(pd->note());', 2.598833643460815e-06], ['exp->write_type(pd->type());', 2.598833643460815e-06], ['go_assert(pr', 2.598833643460815e-06], ['result_vars->end());', 2.598833643460815e-06], ['indent++;', 2.598833643460815e-06], ['efb.indent();', 2.598833643460815e-06], ['efb.write_c_string("//', 2.598833643460815e-06], ['efb.write_string(Linemap::location_to_file(block->start_location()));', 2.598833643460815e-06], ["efb.write_char(':');", 2.598833643460815e-06], ['efb.write_c_string(buf);', 2.598833643460815e-06], ["efb.write_char('\\n');", 2.598833643460815e-06], ['block->export_block(&efb);', 2.598833643460815e-06], ['body(efb.body());', 2.598833643460815e-06], ['<inl:%lu>\\n",', 2.598833643460815e-06], ['long>(body.length()));', 2.598833643460815e-06], ['exp->write_string(body);', 2.598833643460815e-06], ['Function::import_func(Import*', 2.598833643460815e-06], ['Typed_identifier**', 2.598833643460815e-06], ['preceiver,', 2.598833643460815e-06], ['pparameters,', 2.598833643460815e-06], ['presults,', 2.598833643460815e-06], ['imp->require_c_string("func', 2.598833643460815e-06], ['(imp->match_c_string("/*"))', 2.598833643460815e-06], ['imp->require_c_string("/*nointerface*/', 2.598833643460815e-06], ['nointerface.', 2.598833643460815e-06], ['go_assert(imp->peek_char()', 2.598833643460815e-06], ["'(');", 2.598833643460815e-06], ['(*preceiver)->set_note(escape_note);', 2.598833643460815e-06], ['imp->require_c_string(")', 2.598833643460815e-06], ['(*is_varargs)', 2.598833643460815e-06], ['t.set_note(escape_note);', 2.598833643460815e-06], ['parameters->push_back(t);', 2.598833643460815e-06], ['go_assert(!*is_varargs);', 2.598833643460815e-06], ['*pparameters', 2.598833643460815e-06], ['imp->match_c_string("', 2.598833643460815e-06], ['<inl"))', 2.598833643460815e-06], ['t.set_note(note);', 2.598833643460815e-06], ['results->push_back(t);', 2.598833643460815e-06], ['(!imp->match_c_string("', 2.598833643460815e-06], ['<inl:"))', 2.598833643460815e-06], ['body->clear();', 2.598833643460815e-06], ['<inl:");', 2.598833643460815e-06], ['lenstr;', 2.598833643460815e-06], ['lenstr', 2.598833643460815e-06], ['imp->require_c_string(">\\n");', 2.598833643460815e-06], ['strtol(lenstr.c_str(),', 2.598833643460815e-06], ['(llen', 2.598833643460815e-06], ['lenstr.c_str());', 2.598833643460815e-06], ['*body', 2.598833643460815e-06], ['imp->read(static_cast<size_t>(llen));', 2.598833643460815e-06], ['Function::get_or_make_decl(Gogo*', 2.598833643460815e-06], ['Gogo::is_thunk(no))', 2.598833643460815e-06], ['!this->type_->is_method())', 2.598833643460815e-06], ['(no->name()', 2.598833643460815e-06], ['gogo->get_init_fn_name())', 2.598833643460815e-06], ['gogo->is_main_package())', 2.598833643460815e-06], ['pulled', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(no->name())', 2.598833643460815e-06], ['this->type_->is_method())', 2.598833643460815e-06], ['(!this->is_unnamed_type_stub_method_)', 2.598833643460815e-06], ['(this->type_->is_method())', 2.598833643460815e-06], ['this->type_->receiver()->type();', 2.598833643460815e-06], ['this->asm_name_;', 2.598833643460815e-06], ['(is_init_fn)', 2.598833643460815e-06], ['Gogo::init_imports.', 2.598833643460815e-06], ['recovered,', 2.598833643460815e-06], ['!(this->calls_recover_', 2.598833643460815e-06], ['this->is_recover_thunk_);', 2.598833643460815e-06], ['__go_set_defer_retaddr,', 2.598833643460815e-06], ['uninlinable.', 2.598833643460815e-06], ['(this->calls_defer_retaddr_)', 2.598833643460815e-06], ['//go:noinline', 2.598833643460815e-06], ['GOPRAGMA_NOINLINE)', 2.598833643460815e-06], ['(is_inlinable)', 2.598833643460815e-06], ['Backend::function_is_inlinable;', 2.598833643460815e-06], ['this->is_recover_thunk_;', 2.598833643460815e-06], ['//go:nosplit', 2.598833643460815e-06], ['GOPRAGMA_NOSPLIT)', 2.598833643460815e-06], ['(disable_split_stack)', 2.598833643460815e-06], ['Backend::function_no_split_stack;', 2.598833643460815e-06], ['(this->in_unique_section_', 2.598833643460815e-06], ['(this->is_method()', 2.598833643460815e-06], ['this->nointerface()))', 2.598833643460815e-06], ['Backend::function_in_unique_section;', 2.598833643460815e-06], ['(this->is_inline_only_)', 2.598833643460815e-06], ['Backend::function_only_inline;', 2.598833643460815e-06], ['this->type_->get_backend_fntype(gogo);', 2.598833643460815e-06], ['Function_declaration::get_or_make_decl(Gogo*', 2.598833643460815e-06], ['asm', 2.598833643460815e-06], ['builtin_decl', 2.598833643460815e-06], ['gogo->backend()->lookup_builtin(this->asm_name_);', 2.598833643460815e-06], ['(builtin_decl', 2.598833643460815e-06], ['builtin_decl;', 2.598833643460815e-06], ['(this->asm_name_', 2.598833643460815e-06], ['"runtime.gopanic"', 2.598833643460815e-06], ['this->asm_name_', 2.598833643460815e-06], ['"__go_runtime_error")', 2.598833643460815e-06], ['Backend::function_does_not_return;', 2.598833643460815e-06], ['(this->asm_name_.empty())', 2.598833643460815e-06], ['(this->fntype_->is_method())', 2.598833643460815e-06], ['this->fntype_->receiver()->type();', 2.598833643460815e-06], ['(go_id_needs_encoding(no->get_id(gogo)))', 2.598833643460815e-06], ['go_encode_id(no->get_id(gogo));', 2.598833643460815e-06], ['this->fntype_->get_backend_fntype(gogo);', 2.598833643460815e-06], ['Function_declaration::build_backend_descriptor(Gogo*', 2.598833643460815e-06], ['Function_declaration::check_types()', 2.598833643460815e-06], ['Type::base', 2.598833643460815e-06], ['fntype->receiver()->type()->base();', 2.598833643460815e-06], ['p->type()->base();', 2.598833643460815e-06], ['Function::get_decl()', 2.598833643460815e-06], ['Function::build(Gogo*', 2.598833643460815e-06], ['named_function)', 2.598833643460815e-06], ['param_vars;', 2.598833643460815e-06], ['std::vector<Statement*>', 2.598833643460815e-06], ['var_decls_stmts;', 2.598833643460815e-06], ['this->block_->bindings()->begin_definitions();', 2.598833643460815e-06], ['this->block_->bindings()->end_definitions();', 2.598833643460815e-06], ['((*p)->is_variable()', 2.598833643460815e-06], ['(*p)->var_value()->is_parameter())', 2.598833643460815e-06], ['((*p)->var_value()->is_receiver()', 2.598833643460815e-06], ['(*p)->var_value()->type()->points_to()', 2.598833643460815e-06], ['".pointer";', 2.598833643460815e-06], ['(*p)->var_value()->type();', 2.598833643460815e-06], ['Variable(Type::make_pointer_type(var_type),', 2.598833643460815e-06], ['Expression::make_dereference(parm_ref,', 2.598833643460815e-06], ['Expression::NIL_CHECK_NEEDED,', 2.598833643460815e-06], ['Expression::make_heap_expression(parm_ref,', 2.598833643460815e-06], ['var_inits.push_back(parm_ref->get_backend(&context));', 2.598833643460815e-06], ['parm_name', 2.598833643460815e-06], ['".param";', 2.598833643460815e-06], ['Variable((*p)->var_value()->type(),', 2.598833643460815e-06], ['Named_object::make_variable(parm_name,', 2.598833643460815e-06], ['Expression::make_heap_expression(var_ref,', 2.598833643460815e-06], ['var_inits.push_back(var_ref->get_backend(&context));', 2.598833643460815e-06], ['param_vars.push_back(parm_bvar);', 2.598833643460815e-06], ['((*p)->is_result_variable())', 2.598833643460815e-06], ['(*p)->result_var_value()->type();', 2.598833643460815e-06], ['(!(*p)->result_var_value()->is_in_heap())', 2.598833643460815e-06], ['Expression::make_allocation(type,', 2.598833643460815e-06], ['loc)->get_backend(&context);', 2.598833643460815e-06], ['var_inits.push_back(init);', 2.598833643460815e-06], ['(*p)->is_variable()', 2.598833643460815e-06], ['(*p)->var_value()->is_non_escaping_address_taken()', 2.598833643460815e-06], ['!(*p)->var_value()->is_in_heap())', 2.598833643460815e-06], ['address-taken', 2.598833643460815e-06], ['var_decls_stmts.push_back(ts);', 2.598833643460815e-06], ['(!gogo->backend()->function_set_parameters(this->fndecl_,', 2.598833643460815e-06], ['param_vars))', 2.598833643460815e-06], ['creation.', 2.598833643460815e-06], ['go_assert(this->closure_var_->var_value()->is_closure());', 2.598833643460815e-06], ['this->closure_var_->get_backend_variable(gogo,', 2.598833643460815e-06], ['var_decls_bstmt_list;', 2.598833643460815e-06], ['(!vars.empty()', 2.598833643460815e-06], ['gogo->backend()->block(this->fndecl_,', 2.598833643460815e-06], ['this->block_->start_location(),', 2.598833643460815e-06], ['this->block_->end_location());', 2.598833643460815e-06], ['dcontext(gogo,', 2.598833643460815e-06], ['this->defer_stack_->get_backend(&dcontext);', 2.598833643460815e-06], ['var_decls_bstmt_list.push_back(defer_init);', 2.598833643460815e-06], ['(std::vector<Statement*>::iterator', 2.598833643460815e-06], ['var_decls_stmts.begin();', 2.598833643460815e-06], ['var_decls_stmts.end();', 2.598833643460815e-06], ['bstmt', 2.598833643460815e-06], ['(*p)->get_backend(&dcontext);', 2.598833643460815e-06], ['var_decls_bstmt_list.push_back(bstmt);', 2.598833643460815e-06], ['code_block', 2.598833643460815e-06], ['this->block_->get_backend(&context);', 2.598833643460815e-06], ['go_assert(vars.size()', 2.598833643460815e-06], ['var_inits.size());', 2.598833643460815e-06], ['vars.size();', 2.598833643460815e-06], ['gogo->backend()->init_statement(this->fndecl_,', 2.598833643460815e-06], ['vars[i],', 2.598833643460815e-06], ['var_inits[i]);', 2.598833643460815e-06], ['init.push_back(init_stmt);', 2.598833643460815e-06], ['var_init', 2.598833643460815e-06], ['gogo->backend()->statement_list(init);', 2.598833643460815e-06], ['gogo->backend()->block_statement(code_block);', 2.598833643460815e-06], ['gogo->backend()->compound_statement(var_init,', 2.598833643460815e-06], ['stack,', 2.598833643460815e-06], ['fini', 2.598833643460815e-06], ['(defer_init', 2.598833643460815e-06], ['Clean', 2.598833643460815e-06], ['this->build_defer_wrapper(gogo,', 2.598833643460815e-06], ['&except,', 2.598833643460815e-06], ['&fini);', 2.598833643460815e-06], ['gogo->backend()->exception_handler_statement(code_stmt,', 2.598833643460815e-06], ['fini,', 2.598833643460815e-06], ['Stick', 2.598833643460815e-06], ['(var_decls', 2.598833643460815e-06], ['var_decls_bstmt_list.push_back(code_stmt);', 2.598833643460815e-06], ['gogo->backend()->block_add_statements(var_decls,', 2.598833643460815e-06], ['var_decls_bstmt_list);', 2.598833643460815e-06], ['gogo->backend()->block_statement(var_decls);', 2.598833643460815e-06], ['(!gogo->backend()->function_set_body(this->fndecl_,', 2.598833643460815e-06], ['*EXCEPT', 2.598833643460815e-06], ['*FINI', 2.598833643460815e-06], ['Function::build_defer_wrapper(Gogo*', 2.598833643460815e-06], ['fini)', 2.598833643460815e-06], ['this->block_->end_location();', 2.598833643460815e-06], ['Its', 2.598833643460815e-06], ['unwinding', 2.598833643460815e-06], ['libgo/runtime/go-unwind.c.', 2.598833643460815e-06], ['stmts;', 2.598833643460815e-06], ['defer));', 2.598833643460815e-06], ['(ret_bstmt', 2.598833643460815e-06], ['stmts.push_back(ret_bstmt);', 2.598833643460815e-06], ['go_assert(*except', 2.598833643460815e-06], ['*except', 2.598833643460815e-06], ['Runtime::make_call(Runtime::DEFERRETURN,', 2.598833643460815e-06], ['undefer', 2.598833643460815e-06], ['function_defer', 2.598833643460815e-06], ['gogo->backend()->function_defer_statement(this->fndecl_,', 2.598833643460815e-06], ['std::vector<Bstatement*>(1,', 2.598833643460815e-06], ['function_defer);', 2.598833643460815e-06], ['(this->type_->results()', 2.598833643460815e-06], ['!this->type_->results()->empty()', 2.598833643460815e-06], ['!this->type_->results()->front().name().empty())', 2.598833643460815e-06], ['named,', 2.598833643460815e-06], ['defer_stack', 2.598833643460815e-06], ['Expression::make_nil(end_loc)->get_backend(&context);', 2.598833643460815e-06], ['gogo->backend()->compound_expression(ret_bstmt,', 2.598833643460815e-06], ['ref->get_backend(&context);', 2.598833643460815e-06], ['gogo->backend()->conditional_expression(this->fndecl_,', 2.598833643460815e-06], ['ret));', 2.598833643460815e-06], ['go_assert(*fini', 2.598833643460815e-06], ['*fini', 2.598833643460815e-06], ['Function::return_value(Gogo*', 2.598833643460815e-06], ['go_assert(this->results_', 2.598833643460815e-06], ['results->size())', 2.598833643460815e-06], ['gogo->backend()->error_statement();', 2.598833643460815e-06], ['vals(results->size());', 2.598833643460815e-06], ['(*this->results_)[i];', 2.598833643460815e-06], ['no->get_backend_variable(gogo,', 2.598833643460815e-06], ['(no->result_var_value()->is_in_heap())', 2.598833643460815e-06], ['no->result_var_value()->type()->get_backend(gogo);', 2.598833643460815e-06], ['gogo->backend()->indirect_expression(bt,', 2.598833643460815e-06], ['vals[i]', 2.598833643460815e-06], ['gogo->backend()->return_statement(this->fndecl_,', 2.598833643460815e-06], ['Block::Block(Block*', 2.598833643460815e-06], ['statements_(),', 2.598833643460815e-06], ['Bindings(enclosing', 2.598833643460815e-06], ['enclosing->bindings())),', 2.598833643460815e-06], ['start_location_(location),', 2.598833643460815e-06], ['end_location_(Linemap::unknown_location())', 2.598833643460815e-06], ['Block::add_statement(Statement*', 2.598833643460815e-06], ['this->statements_.push_back(statement);', 2.598833643460815e-06], ['slow', 2.598833643460815e-06], ['Block::add_statement_at_front(Statement*', 2.598833643460815e-06], ['this->statements_.insert(this->statements_.begin(),', 2.598833643460815e-06], ['statement);', 2.598833643460815e-06], ['Block::replace_statement(size_t', 2.598833643460815e-06], ['this->statements_[index]', 2.598833643460815e-06], ['Block::insert_statement_before(size_t', 2.598833643460815e-06], ['Block::insert_statement_after(size_t', 2.598833643460815e-06], ['Block::traverse(Traverse*', 2.598833643460815e-06], ['Traverse::traverse_blocks)', 2.598833643460815e-06], ['traverse->block(this);', 2.598833643460815e-06], ['((*pb)->classification())', 2.598833643460815e-06], ['traverse->constant(*pb,', 2.598833643460815e-06], ['(*pb)->const_value()->type();', 2.598833643460815e-06], ['(*pb)->const_value()->traverse_expression(traverse);', 2.598833643460815e-06], ['traverse->variable(*pb);', 2.598833643460815e-06], ['((*pb)->is_result_variable()', 2.598833643460815e-06], ['(*pb)->var_value()->has_type())', 2.598833643460815e-06], ['((*pb)->is_variable()', 2.598833643460815e-06], ['(*pb)->var_value()->type()', 2.598833643460815e-06], ['(*pb)->result_var_value()->type());', 2.598833643460815e-06], ['(*pb)->is_variable())', 2.598833643460815e-06], ['(*pb)->var_value()->traverse_expression(traverse,', 2.598833643460815e-06], ['Type::traverse((*pb)->type_value(),', 2.598833643460815e-06], ['here--if', 2.598833643460815e-06], ['Inserting', 2.598833643460815e-06], ['pointer;', 2.598833643460815e-06], ['this->statements_.size();', 2.598833643460815e-06], ['(this->statements_[i]->traverse(this,', 2.598833643460815e-06], ['&i,', 2.598833643460815e-06], ['Block::determine_types()', 2.598833643460815e-06], ['((*pb)->is_variable())', 2.598833643460815e-06], ['(*pb)->var_value()->determine_type();', 2.598833643460815e-06], ['((*pb)->is_const())', 2.598833643460815e-06], ['(*pb)->const_value()->determine_type();', 2.598833643460815e-06], ['++ps)', 2.598833643460815e-06], ['(*ps)->determine_types();', 2.598833643460815e-06], ['Block::may_fall_through()', 2.598833643460815e-06], ['(this->statements_.empty())', 2.598833643460815e-06], ['this->statements_.back()->may_fall_through();', 2.598833643460815e-06], ['Block::export_block(Export_function_body*', 2.598833643460815e-06], ['(Block::iterator', 2.598833643460815e-06], ['(*p)->export_statement(efb);', 2.598833643460815e-06], ['((*p)->is_block_statement())', 2.598833643460815e-06], ['Block_statement::do_export_statement.', 2.598833643460815e-06], ['(*p)->block_statement()->block()->end_location();', 2.598833643460815e-06], ['SET,', 2.598833643460815e-06], ['Block::import_block(Block*', 2.598833643460815e-06], ['*ifb,', 2.598833643460815e-06], ['ifb->location();', 2.598833643460815e-06], ['body(ifb->body());', 2.598833643460815e-06], ['ifb->indent();', 2.598833643460815e-06], ['insufficient', 2.598833643460815e-06], ['i]', 2.598833643460815e-06], ['newline",', 2.598833643460815e-06], ['body.find("', 2.598833643460815e-06], ['//",', 2.598833643460815e-06], ['(lineno_pos', 2.598833643460815e-06], ['nl)', 2.598833643460815e-06], ['nl;', 2.598833643460815e-06], ['body[i];', 2.598833643460815e-06], ['ifb->gogo()->linemap()->start_line(lineno,', 2.598833643460815e-06], ['ifb->gogo()->linemap()->get_location(0);', 2.598833643460815e-06], ['(at_end)', 2.598833643460815e-06], ['Statement::import_statement(ifb,', 2.598833643460815e-06], ['sloc);', 2.598833643460815e-06], ['set->add_statement(s);', 2.598833643460815e-06], ['set->set_end_location(sloc);', 2.598833643460815e-06], ['Block::get_backend(Translate_context*', 2.598833643460815e-06], ['vars.reserve(this->bindings_->size_definitions());', 2.598833643460815e-06], ['((*pv)->is_variable()', 2.598833643460815e-06], ['!(*pv)->var_value()->is_parameter())', 2.598833643460815e-06], ['vars.push_back((*pv)->get_backend_variable(gogo,', 2.598833643460815e-06], ['context->backend()->block(bfunction,', 2.598833643460815e-06], ['this->start_location_,', 2.598833643460815e-06], ['this->end_location_);', 2.598833643460815e-06], ['bstatements;', 2.598833643460815e-06], ['bstatements.reserve(this->statements_.size());', 2.598833643460815e-06], ['bstatements.push_back((*p)->get_backend(&subcontext));', 2.598833643460815e-06], ['context->backend()->block_add_statements(ret,', 2.598833643460815e-06], ['bstatements);', 2.598833643460815e-06], ['Bindings_snapshot.', 2.598833643460815e-06], ['Bindings_snapshot::Bindings_snapshot(const', 2.598833643460815e-06], ['block_(b),', 2.598833643460815e-06], ['counts_(),', 2.598833643460815e-06], ['this->counts_.push_back(b->bindings()->size_definitions());', 2.598833643460815e-06], ['b->enclosing();', 2.598833643460815e-06], ['Bindings_snapshot::check_goto_from(const', 2.598833643460815e-06], ['(!this->check_goto_block(loc,', 2.598833643460815e-06], ['this->check_goto_defs(loc,', 2.598833643460815e-06], ['this->block_->bindings()->size_definitions(),', 2.598833643460815e-06], ['this->counts_[0]);', 2.598833643460815e-06], ['Bindings_snapshot::check_goto_to(const', 2.598833643460815e-06], ['(!this->check_goto_block(this->location_,', 2.598833643460815e-06], ['this->check_goto_defs(this->location_,', 2.598833643460815e-06], ['this->counts_[index],', 2.598833643460815e-06], ['b->bindings()->size_definitions());', 2.598833643460815e-06], ['BTO.', 2.598833643460815e-06], ['*PINDEX', 2.598833643460815e-06], ['Bindings_snapshot::check_goto_block(Location', 2.598833643460815e-06], ['bfrom,', 2.598833643460815e-06], ['bto,', 2.598833643460815e-06], ['pindex)', 2.598833643460815e-06], ['bfrom;', 2.598833643460815e-06], ['bto;', 2.598833643460815e-06], ['pb->enclosing(),', 2.598833643460815e-06], ['(pb', 2.598833643460815e-06], ['go_inform(bto->start_location(),', 2.598833643460815e-06], ['here");', 2.598833643460815e-06], ['ending', 2.598833643460815e-06], ['BLOCK,', 2.598833643460815e-06], ['CFROM', 2.598833643460815e-06], ['CTO', 2.598833643460815e-06], ['Bindings_snapshot::check_goto_defs(Location', 2.598833643460815e-06], ['cfrom,', 2.598833643460815e-06], ['(cfrom', 2.598833643460815e-06], ['Bindings::const_definitions_iterator', 2.598833643460815e-06], ['block->bindings()->begin_definitions();', 2.598833643460815e-06], ['cfrom;', 2.598833643460815e-06], ['block->bindings()->end_definitions();', 2.598833643460815e-06], ['(*p)->message_name();', 2.598833643460815e-06], ['go_inform((*p)->location(),', 2.598833643460815e-06], ['Function_declaration.', 2.598833643460815e-06], ['Function_declaration::is_method()', 2.598833643460815e-06], ['this->fntype_->is_method();', 2.598833643460815e-06], ['Function_declaration::nointerface()', 2.598833643460815e-06], ['Function_declaration::set_nointerface()', 2.598833643460815e-06], ['Redeclare', 2.598833643460815e-06], ['Function_declaration::import_function_body(Gogo*', 2.598833643460815e-06], ['go_assert(no->func_declaration_value()', 2.598833643460815e-06], ['body(this->imported_body_);', 2.598833643460815e-06], ['go_assert(!body.empty());', 2.598833643460815e-06], ['"//FILE:LINE"', 2.598833643460815e-06], ['(this->is_method())', 2.598833643460815e-06], ['(body.at(i)', 2.598833643460815e-06], ['(body.substr(i,', 2.598833643460815e-06], ['"//")', 2.598833643460815e-06], ['comment",', 2.598833643460815e-06], ["body.find(':',", 2.598833643460815e-06], ['colon)', 2.598833643460815e-06], ['body.substr(i', 2.598833643460815e-06], ['linestr', 2.598833643460815e-06], ['body.substr(colon', 2.598833643460815e-06], ['linenol', 2.598833643460815e-06], ['strtol(linestr.c_str(),', 2.598833643460815e-06], ['int>(linenol);', 2.598833643460815e-06], ['alc', 2.598833643460815e-06], ['char[file.length()', 2.598833643460815e-06], ['memcpy(alc,', 2.598833643460815e-06], ['file.data(),', 2.598833643460815e-06], ['file.length());', 2.598833643460815e-06], ['alc[file.length()]', 2.598833643460815e-06], ['gogo->linemap()->start_file(alc,', 2.598833643460815e-06], ['gogo->linemap()->start_line(lineno,', 2.598833643460815e-06], ['gogo->linemap()->get_location(0);', 2.598833643460815e-06], ['this->fntype_;', 2.598833643460815e-06], ['fn->set_is_inline_only();', 2.598833643460815e-06], ['(this->nointerface())', 2.598833643460815e-06], ['fn->set_nointerface();', 2.598833643460815e-06], ['recv_param', 2.598833643460815e-06], ['outer->bindings()->add_variable(receiver->name(),', 2.598833643460815e-06], ['recv_param);', 2.598833643460815e-06], ['outer->bindings()->add_variable(p->name(),', 2.598833643460815e-06], ['fn->create_result_variables(gogo);', 2.598833643460815e-06], ['(!fntype->is_method())', 2.598833643460815e-06], ['package->bindings()->add_function(no->name(),', 2.598833643460815e-06], ['fntype->receiver()->type()->deref()->named_type();', 2.598833643460815e-06], ['go_assert(rtype', 2.598833643460815e-06], ['rtype->add_method(no->name(),', 2.598833643460815e-06], ['ifb(gogo,', 2.598833643460815e-06], ['this->imp_,', 2.598833643460815e-06], ['(!Block::import_block(outer,', 2.598833643460815e-06], ['&ifb,', 2.598833643460815e-06], ['start_loc))', 2.598833643460815e-06], ['gogo->add_imported_inline_function(no);', 2.598833643460815e-06], ['Function_declaration::descriptor(Gogo*,', 2.598833643460815e-06], ['go_assert(!this->fntype_->is_method());', 2.598833643460815e-06], ['Variable::Variable(Type*', 2.598833643460815e-06], ['is_global,', 2.598833643460815e-06], ['is_parameter,', 2.598833643460815e-06], ['is_receiver,', 2.598833643460815e-06], ['preinit_(NULL),', 2.598833643460815e-06], ['backend_(NULL),', 2.598833643460815e-06], ['is_global_(is_global),', 2.598833643460815e-06], ['is_parameter_(is_parameter),', 2.598833643460815e-06], ['is_closure_(false),', 2.598833643460815e-06], ['is_receiver_(is_receiver),', 2.598833643460815e-06], ['is_varargs_parameter_(false),', 2.598833643460815e-06], ['is_used_(false),', 2.598833643460815e-06], ['is_address_taken_(false),', 2.598833643460815e-06], ['is_non_escaping_address_taken_(false),', 2.598833643460815e-06], ['init_is_lowered_(false),', 2.598833643460815e-06], ['init_is_flattened_(false),', 2.598833643460815e-06], ['type_from_init_tuple_(false),', 2.598833643460815e-06], ['type_from_range_index_(false),', 2.598833643460815e-06], ['type_from_range_value_(false),', 2.598833643460815e-06], ['type_from_chan_element_(false),', 2.598833643460815e-06], ['is_type_switch_var_(false),', 2.598833643460815e-06], ['determined_type_(false),', 2.598833643460815e-06], ['toplevel_decl_(NULL)', 2.598833643460815e-06], ['go_assert(!is_parameter', 2.598833643460815e-06], ['Variable::traverse_expression(Traverse*', 2.598833643460815e-06], ['traverse_mask)', 2.598833643460815e-06], ['(this->preinit_->traverse(traverse)', 2.598833643460815e-06], ['Variable::lower_init_expression(Gogo*', 2.598833643460815e-06], ['dep->var_value()->lower_init_expression(gogo,', 2.598833643460815e-06], ['!this->init_is_lowered_)', 2.598833643460815e-06], ['this->init_is_lowered_', 2.598833643460815e-06], ['Variable::flatten_init_expression(Gogo*', 2.598833643460815e-06], ['dep->var_value()->flatten_init_expression(gogo,', 2.598833643460815e-06], ['!this->init_is_flattened_)', 2.598833643460815e-06], ['this->init_is_flattened_', 2.598833643460815e-06], ['Variable::preinit_block(Gogo*', 2.598833643460815e-06], ['this->preinit_', 2.598833643460815e-06], ['preinitialization', 2.598833643460815e-06], ['gogo->set_need_init_fn();', 2.598833643460815e-06], ['this->preinit_;', 2.598833643460815e-06], ['Variable::add_preinit_statement(Gogo*', 2.598833643460815e-06], ['this->preinit_block(gogo);', 2.598833643460815e-06], ['b->set_end_location(s->location());', 2.598833643460815e-06], ['Variable::has_type()', 2.598833643460815e-06], ["initializer's", 2.598833643460815e-06], ['determine_type.', 2.598833643460815e-06], ['Variable::type_from_tuple(Expression*', 2.598833643460815e-06], ['(expr->map_index_expression()', 2.598833643460815e-06], ['expr->map_index_expression()->get_map_type();', 2.598833643460815e-06], ['(expr->receive_expression()', 2.598833643460815e-06], ['expr->receive_expression()->channel();', 2.598833643460815e-06], ['channel->type();', 2.598833643460815e-06], ['(channel_type->channel_type()', 2.598833643460815e-06], ['channel_type->channel_type()->element_type();', 2.598833643460815e-06], ['GET_INDEX_TYPE.', 2.598833643460815e-06], ['Variable::type_from_range(Expression*', 2.598833643460815e-06], ['get_index_type,', 2.598833643460815e-06], ['t->points_to()->array_type()', 2.598833643460815e-06], ['!t->points_to()->is_slice_type()))', 2.598833643460815e-06], ['t->deref()->array_type()->element_type();', 2.598833643460815e-06], ['(t->is_string_type())', 2.598833643460815e-06], ['t->map_type()->key_type();', 2.598833643460815e-06], ['t->map_type()->val_type();', 2.598833643460815e-06], ["channel's", 2.598833643460815e-06], ['Variable::type_from_chan_element(Expression*', 2.598833643460815e-06], ['Variable::determine_type', 2.598833643460815e-06], ['determination,', 2.598833643460815e-06], ['unnecessary.', 2.598833643460815e-06], ['determine_type,', 2.598833643460815e-06], ['go_assert(init', 2.598833643460815e-06], ['init->type();', 2.598833643460815e-06], ['Variable::determine_type()', 2.598833643460815e-06], ['(this->determined_type_)', 2.598833643460815e-06], ['this->determined_type_', 2.598833643460815e-06], ['this->preinit_->determine_types();', 2.598833643460815e-06], ['guard,', 2.598833643460815e-06], ['!this->type_->is_abstract());', 2.598833643460815e-06], ['(type->is_nil_type())', 2.598833643460815e-06], ['(type->is_call_multiple_result_type())', 2.598833643460815e-06], ['"single', 2.598833643460815e-06], ['heap--it', 2.598833643460815e-06], ['Variable::get_init(Gogo*', 2.598833643460815e-06], ['go_assert(!this->is_parameter_);', 2.598833643460815e-06], ['(this->is_global_', 2.598833643460815e-06], ['this->is_in_heap())', 2.598833643460815e-06], ['init->get_backend(&context);', 2.598833643460815e-06], ['Variable::get_init_block(Gogo*', 2.598833643460815e-06], ['this->preinit_->get_backend(&context);', 2.598833643460815e-06], ['init_bexpr', 2.598833643460815e-06], ['this->init_->get_backend(&context);', 2.598833643460815e-06], ['init_bexpr);', 2.598833643460815e-06], ['val_expr->get_backend(&context);', 2.598833643460815e-06], ['gogo->backend()->var_expression(var_decl,', 2.598833643460815e-06], ['gogo->backend()->block_statement(bblock);', 2.598833643460815e-06], ['(decl_init', 2.598833643460815e-06], ['gogo->backend()->compound_statement(block_stmt,', 2.598833643460815e-06], ['decl_init);', 2.598833643460815e-06], ['block_stmt;', 2.598833643460815e-06], ['Variable::export_var(Export*', 2.598833643460815e-06], ['exp->write_c_string("var', 2.598833643460815e-06], ['exp->write_type(this->type());', 2.598833643460815e-06], ['Variable::import_var(Import*', 2.598833643460815e-06], ['imp->require_c_string("var', 2.598833643460815e-06], ['Variable::get_backend_variable(Gogo*', 2.598833643460815e-06], ['(type->is_undefined()', 2.598833643460815e-06], ['(!this->is_global_', 2.598833643460815e-06], ['this->is_parameter_;', 2.598833643460815e-06], ['(this->is_receiver_', 2.598833643460815e-06], ['(Map_type::is_zero_value(this))', 2.598833643460815e-06], ['Map_type::backend_zero_value(gogo);', 2.598833643460815e-06], ['var_name(package', 2.598833643460815e-06], ["var_name.push_back('.');", 2.598833643460815e-06], ['var_name.append(n);', 2.598833643460815e-06], ['asm_name(gogo->global_var_asm_name(name,', 2.598833643460815e-06], ['Gogo::is_hidden_name(name);', 2.598833643460815e-06], ['Hack', 2.598833643460815e-06], ['runtime.writeBarrier.', 2.598833643460815e-06], ['"runtime.writeBarrier")', 2.598833643460815e-06], ['backend->global_variable(var_name,', 2.598833643460815e-06], ['this->in_unique_section_,', 2.598833643460815e-06], ['(this->is_closure())', 2.598833643460815e-06], ['backend->static_chain_variable(bfunction,', 2.598833643460815e-06], ['(is_parameter)', 2.598833643460815e-06], ['backend->parameter_variable(bfunction,', 2.598833643460815e-06], ['(this->toplevel_decl_', 2.598833643460815e-06], ['this->toplevel_decl_->temporary_statement()', 2.598833643460815e-06], ['->get_backend_variable(&context);', 2.598833643460815e-06], ['bvar_decl,', 2.598833643460815e-06], ['Result_variable.', 2.598833643460815e-06], ['Result_variable::get_backend_variable(Gogo*', 2.598833643460815e-06], ['Named_constant.', 2.598833643460815e-06], ['Named_constant::set_type(Type*', 2.598833643460815e-06], ['t->is_error_type());', 2.598833643460815e-06], ['Named_constant::traverse_expression(Traverse*', 2.598833643460815e-06], ['Named_constant::determine_type()', 2.598833643460815e-06], ['context(NULL,', 2.598833643460815e-06], ['Indicate', 2.598833643460815e-06], ['Named_constant::set_error()', 2.598833643460815e-06], ['Named_constant::export_const(Export*', 2.598833643460815e-06], ['exp->write_c_string("const', 2.598833643460815e-06], ['exp->write_c_string("=', 2.598833643460815e-06], ['efb.set_type_context(this->type_);', 2.598833643460815e-06], ['this->expr()->export_expression(&efb);', 2.598833643460815e-06], ['Named_constant::import_const(Import*', 2.598833643460815e-06], ['imp->require_c_string("const', 2.598833643460815e-06], ['imp->require_c_string("=', 2.598833643460815e-06], ['Named_constant::get_backend(Gogo*', 2.598833643460815e-06], ['const_no)', 2.598833643460815e-06], ['(this->bconst_', 2.598833643460815e-06], ['const_ref', 2.598833643460815e-06], ['Expression::make_const_reference(const_no,', 2.598833643460815e-06], ['const_ref->get_backend(&subcontext);', 2.598833643460815e-06], ['type->is_numeric_type())', 2.598833643460815e-06], ['const_no->get_id(gogo);', 2.598833643460815e-06], ['gogo->backend()->named_constant_expression(btype,', 2.598833643460815e-06], ['const_decl,', 2.598833643460815e-06], ['this->bconst_', 2.598833643460815e-06], ['const_decl;', 2.598833643460815e-06], ['this->bconst_;', 2.598833643460815e-06], ['Type_declaration::add_method(const', 2.598833643460815e-06], ['Type_declaration::add_method_declaration(const', 2.598833643460815e-06], ['Type_declaration::has_methods()', 2.598833643460815e-06], ['!this->methods_.empty();', 2.598833643460815e-06], ['Type_declaration::define_methods(Named_type*', 2.598833643460815e-06], ['(this->methods_.empty())', 2.598833643460815e-06], ['td->methods_.insert(td->methods_.end(),', 2.598833643460815e-06], ['this->methods_.begin(),', 2.598833643460815e-06], ['this->methods_.end());', 2.598833643460815e-06], ['this->methods_.clear();', 2.598833643460815e-06], ['(!(*p)->func_value()->is_sink())', 2.598833643460815e-06], ['nt->add_existing_method(*p);', 2.598833643460815e-06], ['Type_declaration::using_type()', 2.598833643460815e-06], ['!this->issued_warning_;', 2.598833643460815e-06], ['this->issued_warning_', 2.598833643460815e-06], ['Unknown_name.', 2.598833643460815e-06], ['Unknown_name::set_real_named_object(Named_object*', 2.598833643460815e-06], ['go_assert(this->real_named_object_', 2.598833643460815e-06], ['go_assert(!no->is_unknown());', 2.598833643460815e-06], ['this->real_named_object_', 2.598833643460815e-06], ['Named_object.', 2.598833643460815e-06], ['Named_object::Named_object(const', 2.598833643460815e-06], ['Classification', 2.598833643460815e-06], ['package_(package),', 2.598833643460815e-06], ['is_redefinition_(false)', 2.598833643460815e-06], ['go_assert(classification', 2.598833643460815e-06], ['Named_object::make_unknown_name(const', 2.598833643460815e-06], ['Unknown_name(location);', 2.598833643460815e-06], ['named_object->u_.unknown_value', 2.598833643460815e-06], ['Named_object::make_constant(const', 2.598833643460815e-06], ['Named_object(tid.name(),', 2.598833643460815e-06], ['NAMED_OBJECT_CONST);', 2.598833643460815e-06], ['named_constant', 2.598833643460815e-06], ['Named_constant(tid.type(),', 2.598833643460815e-06], ['iota_value,', 2.598833643460815e-06], ['named_object->u_.const_value', 2.598833643460815e-06], ['named_constant;', 2.598833643460815e-06], ['Named_object::make_type(const', 2.598833643460815e-06], ['NAMED_OBJECT_TYPE);', 2.598833643460815e-06], ['Type::make_named_type(named_object,', 2.598833643460815e-06], ['named_object->u_.type_value', 2.598833643460815e-06], ['Named_object::make_type_declaration(const', 2.598833643460815e-06], ['type_declaration', 2.598833643460815e-06], ['Type_declaration(location);', 2.598833643460815e-06], ['named_object->u_.type_declaration', 2.598833643460815e-06], ['type_declaration;', 2.598833643460815e-06], ['Named_object::make_variable(const', 2.598833643460815e-06], ['NAMED_OBJECT_VAR);', 2.598833643460815e-06], ['named_object->u_.var_value', 2.598833643460815e-06], ['Named_object::make_result_variable(const', 2.598833643460815e-06], ['NAMED_OBJECT_RESULT_VAR);', 2.598833643460815e-06], ['named_object->u_.result_var_value', 2.598833643460815e-06], ['Named_object::make_sink()', 2.598833643460815e-06], ['Named_object("_",', 2.598833643460815e-06], ['Named_object::make_function(const', 2.598833643460815e-06], ['NAMED_OBJECT_FUNC);', 2.598833643460815e-06], ['named_object->u_.func_value', 2.598833643460815e-06], ['Named_object::make_function_declaration(const', 2.598833643460815e-06], ['Function_declaration', 2.598833643460815e-06], ['*func_decl', 2.598833643460815e-06], ['Function_declaration(fntype,', 2.598833643460815e-06], ['named_object->u_.func_declaration_value', 2.598833643460815e-06], ['Named_object::make_package(const', 2.598833643460815e-06], ['Named_object(alias,', 2.598833643460815e-06], ['NAMED_OBJECT_PACKAGE);', 2.598833643460815e-06], ['named_object->u_.package_value', 2.598833643460815e-06], ['Named_object::message_name()', 2.598833643460815e-06], ['(this->package_->has_package_name())', 2.598833643460815e-06], ['this->package_->pkgpath();', 2.598833643460815e-06], ['Gogo::message_name(ret);', 2.598833643460815e-06], ['Named_object::set_type_value(Named_type*', 2.598833643460815e-06], ['this->u_.type_declaration;', 2.598833643460815e-06], ['td->define_methods(named_type);', 2.598833643460815e-06], ['td->in_function(&index);', 2.598833643460815e-06], ['named_type->set_in_function(in_function,', 2.598833643460815e-06], ['td;', 2.598833643460815e-06], ['NAMED_OBJECT_TYPE;', 2.598833643460815e-06], ['this->u_.type_value', 2.598833643460815e-06], ['Named_object::set_function_value(Function*', 2.598833643460815e-06], ['(this->func_declaration_value()->has_descriptor())', 2.598833643460815e-06], ['this->func_declaration_value()->descriptor(NULL,', 2.598833643460815e-06], ['function->set_descriptor(descriptor);', 2.598833643460815e-06], ['NAMED_OBJECT_FUNC;', 2.598833643460815e-06], ['this->u_.func_value', 2.598833643460815e-06], ['Named_object::declare_as_type()', 2.598833643460815e-06], ['unk', 2.598833643460815e-06], ['this->u_.unknown_value;', 2.598833643460815e-06], ['NAMED_OBJECT_TYPE_DECLARATION;', 2.598833643460815e-06], ['this->u_.type_declaration', 2.598833643460815e-06], ['Type_declaration(unk->location());', 2.598833643460815e-06], ['unk;', 2.598833643460815e-06], ['Named_object::location()', 2.598833643460815e-06], ['this->unknown_value()->location();', 2.598833643460815e-06], ['this->const_value()->location();', 2.598833643460815e-06], ['this->type_value()->location();', 2.598833643460815e-06], ['this->type_declaration_value()->location();', 2.598833643460815e-06], ['this->var_value()->location();', 2.598833643460815e-06], ['this->result_var_value()->location();', 2.598833643460815e-06], ['this->func_value()->location();', 2.598833643460815e-06], ['this->func_declaration_value()->location();', 2.598833643460815e-06], ['NAMED_OBJECT_PACKAGE:', 2.598833643460815e-06], ['this->package_value()->location();', 2.598833643460815e-06], ['Named_object::export_named_object(Export*', 2.598833643460815e-06], ['this->const_value()->export_const(exp,', 2.598833643460815e-06], ['export::write_types.', 2.598833643460815e-06], ['go_error_at(this->type_declaration_value()->location(),', 2.598833643460815e-06], ['this->func_declaration_value()->export_func(exp,', 2.598833643460815e-06], ['this->var_value()->export_var(exp,', 2.598833643460815e-06], ['this->func_value()->export_func(exp,', 2.598833643460815e-06], ['Named_object::get_backend_variable(Gogo*', 2.598833643460815e-06], ['NAMED_OBJECT_VAR)', 2.598833643460815e-06], ['this->var_value()->get_backend_variable(gogo,', 2.598833643460815e-06], ['this->package_,', 2.598833643460815e-06], ['NAMED_OBJECT_RESULT_VAR)', 2.598833643460815e-06], ['this->result_var_value()->get_backend_variable(gogo,', 2.598833643460815e-06], ['Named_object::get_id(Gogo*', 2.598833643460815e-06], ['go_assert(!this->is_variable()', 2.598833643460815e-06], ['!this->is_result_variable()', 2.598833643460815e-06], ['!this->is_type());', 2.598833643460815e-06], ['(this->is_function_declaration()', 2.598833643460815e-06], ['!this->func_declaration_value()->asm_name().empty())', 2.598833643460815e-06], ['this->func_declaration_value()->asm_name();', 2.598833643460815e-06], ['misleading', 2.598833643460815e-06], ['Fixing', 2.598833643460815e-06], ['Function::get_or_make_decl', 2.598833643460815e-06], ['(this->is_function())', 2.598833643460815e-06], ['this->func_value()->type();', 2.598833643460815e-06], ['(this->is_function_declaration())', 2.598833643460815e-06], ['this->func_declaration_value()->type();', 2.598833643460815e-06], ["decl_name.push_back('.');", 2.598833643460815e-06], ['decl_name.append(fntype->receiver()->type()->mangled_name(gogo));', 2.598833643460815e-06], ['Named_object::get_backend(Gogo*', 2.598833643460815e-06], ['func_decls)', 2.598833643460815e-06], ['crash.', 2.598833643460815e-06], ['(this->is_redefinition_)', 2.598833643460815e-06], ['const_decls.push_back(this->u_.const_value->get_backend(gogo,', 2.598833643460815e-06], ['this->u_.type_value;', 2.598833643460815e-06], ['(!Gogo::is_erroneous_name(this->name_)', 2.598833643460815e-06], ['!named_type->is_alias())', 2.598833643460815e-06], ['type_decls.push_back(named_type->get_backend(gogo));', 2.598833643460815e-06], ['Simply', 2.598833643460815e-06], ['type_descriptor', 2.598833643460815e-06], ['named_type->', 2.598833643460815e-06], ['type_descriptor_pointer(gogo,', 2.598833643460815e-06], ['named_type->gc_symbol_pointer(gogo);', 2.598833643460815e-06], ['Type::make_pointer_type(named_type);', 2.598833643460815e-06], ['pn->type_descriptor_pointer(gogo,', 2.598833643460815e-06], ['pn->gc_symbol_pointer(gogo);', 2.598833643460815e-06], ['this->u_.func_value;', 2.598833643460815e-06], ['func_decls.push_back(func->get_or_make_decl(gogo,', 2.598833643460815e-06], ['(func->block()', 2.598833643460815e-06], ['func->build(gogo,', 2.598833643460815e-06], ['Bindings.', 2.598833643460815e-06], ['Bindings::Bindings(Bindings*', 2.598833643460815e-06], ['named_objects_(),', 2.598833643460815e-06], ['bindings_()', 2.598833643460815e-06], ['Bindings::clear_file_scope(Gogo*', 2.598833643460815e-06], ['this->bindings_.begin();', 2.598833643460815e-06], ['keep;', 2.598833643460815e-06], ['(p->second->package()', 2.598833643460815e-06], ['(p->second->is_package())', 2.598833643460815e-06], ['(p->second->is_function()', 2.598833643460815e-06], ['!p->second->func_value()->type()->is_method()', 2.598833643460815e-06], ['(keep)', 2.598833643460815e-06], ['gogo->add_file_block_name(p->second->name(),', 2.598833643460815e-06], ['p->second->location());', 2.598833643460815e-06], ['this->bindings_.erase(p);', 2.598833643460815e-06], ['Bindings::lookup(const', 2.598833643460815e-06], ['p->second->resolve();', 2.598833643460815e-06], ['this->enclosing_->lookup(name);', 2.598833643460815e-06], ['locally.', 2.598833643460815e-06], ['Bindings::lookup_local(const', 2.598833643460815e-06], ['Bindings::remove_binding(Named_object*', 2.598833643460815e-06], ['this->bindings_.find(no->name());', 2.598833643460815e-06], ['go_assert(pb', 2.598833643460815e-06], ['this->bindings_.end());', 2.598833643460815e-06], ['this->bindings_.erase(pb);', 2.598833643460815e-06], ['++pn)', 2.598833643460815e-06], ['(*pn', 2.598833643460815e-06], ['this->named_objects_.erase(pn);', 2.598833643460815e-06], ['Bindings::add_method(Named_object*', 2.598833643460815e-06], ['method)', 2.598833643460815e-06], ['this->named_objects_.push_back(method);', 2.598833643460815e-06], ['Contour.', 2.598833643460815e-06], ['Bindings::add_named_object_to_contour(Contour*', 2.598833643460815e-06], ['contour,', 2.598833643460815e-06], ['named_object->resolve());', 2.598833643460815e-06], ['name(named_object->name());', 2.598833643460815e-06], ['go_assert(!Gogo::is_sink_name(name));', 2.598833643460815e-06], ['std::pair<Contour::iterator,', 2.598833643460815e-06], ['contour->insert(std::make_pair(name,', 2.598833643460815e-06], ['named_object));', 2.598833643460815e-06], ['ins.first->second->package()', 2.598833643460815e-06], ['named_object->package()', 2.598833643460815e-06], ['(ins.first->second->classification()', 2.598833643460815e-06], ['named_object->classification()))', 2.598833643460815e-06], ['this->new_definition(ins.first->second,', 2.598833643460815e-06], ['named_object);', 2.598833643460815e-06], ['genericize', 2.598833643460815e-06], ['(!named_object->is_type_declaration()', 2.598833643460815e-06], ['!named_object->is_function_declaration()', 2.598833643460815e-06], ['!named_object->is_unknown())', 2.598833643460815e-06], ['this->named_objects_.push_back(named_object);', 2.598833643460815e-06], ['OLD_OBJECT,', 2.598833643460815e-06], ['NEW_OBJECT', 2.598833643460815e-06], ['Bindings::new_definition(Named_object*', 2.598833643460815e-06], ['old_object,', 2.598833643460815e-06], ['new_object)', 2.598833643460815e-06], ['(new_object->is_erroneous()', 2.598833643460815e-06], ['!old_object->is_erroneous())', 2.598833643460815e-06], ['(old_object->classification())', 2.598833643460815e-06], ['Named_object::NAMED_OBJECT_UNINITIALIZED:', 2.598833643460815e-06], ['old_object->unknown_value()->real_named_object();', 2.598833643460815e-06], ['this->new_definition(real,', 2.598833643460815e-06], ['new_object);', 2.598833643460815e-06], ['go_assert(!new_object->is_unknown());', 2.598833643460815e-06], ['old_object->unknown_value()->set_real_named_object(new_object);', 2.598833643460815e-06], ['(!new_object->is_type_declaration()', 2.598833643460815e-06], ['!new_object->is_function_declaration())', 2.598833643460815e-06], ['this->named_objects_.push_back(new_object);', 2.598833643460815e-06], ['(new_object->is_type())', 2.598833643460815e-06], ['old_object->set_type_value(new_object->type_value());', 2.598833643460815e-06], ['new_object->type_value()->set_named_object(old_object);', 2.598833643460815e-06], ['((new_object->is_variable()', 2.598833643460815e-06], ['new_object->var_value()->is_parameter())', 2.598833643460815e-06], ['new_object->is_result_variable())', 2.598833643460815e-06], ['(new_object->is_function()', 2.598833643460815e-06], ['((Linemap::is_predeclared_location(old_object->location())', 2.598833643460815e-06], ['Linemap::is_predeclared_location(new_object->location()))', 2.598833643460815e-06], ['(Gogo::unpack_hidden_name(old_object->name())', 2.598833643460815e-06], ['Linemap::is_unknown_location(old_object->location()))', 2.598833643460815e-06], ['(new_object->package()', 2.598833643460815e-06], ['old_object->func_declaration_value()->has_imported_body()', 2.598833643460815e-06], ['new_object->func_value()->is_inline_only())))', 2.598833643460815e-06], ['old_type', 2.598833643460815e-06], ['old_object->func_declaration_value()->type();', 2.598833643460815e-06], ['new_object->func_value()->type();', 2.598833643460815e-06], ['(old_type->is_valid_redeclaration(new_type,', 2.598833643460815e-06], ['old_object->func_declaration_value();', 2.598833643460815e-06], ['go_assert(fd->asm_name().empty());', 2.598833643460815e-06], ['old_object->set_function_value(new_object->func_value());', 2.598833643460815e-06], ['old_object->message_name();', 2.598833643460815e-06], ['old_object->set_is_redefinition();', 2.598833643460815e-06], ['new_object->set_is_redefinition();', 2.598833643460815e-06], ['(!Linemap::is_unknown_location(old_object->location())', 2.598833643460815e-06], ['!Linemap::is_predeclared_location(old_object->location()))', 2.598833643460815e-06], ['go_inform(old_object->location(),', 2.598833643460815e-06], ['Bindings::add_named_type(Named_type*', 2.598833643460815e-06], ['this->add_named_object(named_type->named_object());', 2.598833643460815e-06], ['Bindings::add_function(const', 2.598833643460815e-06], ['this->add_named_object(Named_object::make_function(name,', 2.598833643460815e-06], ['Bindings::add_function_declaration(const', 2.598833643460815e-06], ['this->add_named_object(no);', 2.598833643460815e-06], ['Bindings::define_type(Named_object*', 2.598833643460815e-06], ['no->set_type_value(type);', 2.598833643460815e-06], ['this->named_objects_.push_back(no);', 2.598833643460815e-06], ['Bindings::mark_locals_used()', 2.598833643460815e-06], ['(*p)->var_value()->set_is_used();', 2.598833643460815e-06], ['Bindings::traverse(Traverse*', 2.598833643460815e-06], ['is_global)', 2.598833643460815e-06], ['this->named_objects_.size();', 2.598833643460815e-06], ['this->named_objects_[i];', 2.598833643460815e-06], ['(p->classification())', 2.598833643460815e-06], ['traverse->constant(p,', 2.598833643460815e-06], ['is_global);', 2.598833643460815e-06], ['p->const_value()->type();', 2.598833643460815e-06], ['p->const_value()->traverse_expression(traverse);', 2.598833643460815e-06], ['traverse->variable(p);', 2.598833643460815e-06], ['(p->is_result_variable()', 2.598833643460815e-06], ['p->var_value()->has_type())', 2.598833643460815e-06], ['(p->is_variable()', 2.598833643460815e-06], ['p->var_value()->type()', 2.598833643460815e-06], ['p->result_var_value()->type());', 2.598833643460815e-06], ['p->is_variable())', 2.598833643460815e-06], ['p->var_value()->traverse_expression(traverse,', 2.598833643460815e-06], ['Traverse::traverse_functions)', 2.598833643460815e-06], ['traverse->function(p);', 2.598833643460815e-06], ['Traverse::traverse_functions', 2.598833643460815e-06], ['p->func_value()->traverse(traverse);', 2.598833643460815e-06], ['Gogo::traverse.', 2.598833643460815e-06], ['go_assert(is_global);', 2.598833643460815e-06], ['Type::traverse(p->type_value(),', 2.598833643460815e-06], ['(Type::traverse(p->second->func_declaration_value()->type(),', 2.598833643460815e-06], ['(p->second->is_type_declaration())', 2.598833643460815e-06], ['p->second->type_declaration_value()->methods();', 2.598833643460815e-06], ['pm++)', 2.598833643460815e-06], ['*pm;', 2.598833643460815e-06], ['*t;', 2.598833643460815e-06], ['(Type::traverse(t,', 2.598833643460815e-06], ['Traverse::traverse_func_declarations)', 2.598833643460815e-06], ['(traverse->function_declaration(p->second)', 2.598833643460815e-06], ['Label.', 2.598833643460815e-06], ['Label::clear_refs()', 2.598833643460815e-06], ['(std::vector<Bindings_snapshot*>::iterator', 2.598833643460815e-06], ['this->refs_.begin();', 2.598833643460815e-06], ['this->refs_.end();', 2.598833643460815e-06], ['this->refs_.clear();', 2.598833643460815e-06], ['Label::get_backend_label(Translate_context*', 2.598833643460815e-06], ['Label::get_addr(Translate_context*', 2.598833643460815e-06], ['this->get_backend_label(context);', 2.598833643460815e-06], ['context->backend()->label_address(label,', 2.598833643460815e-06], ['Label::create_dummy_label()', 2.598833643460815e-06], ['(dummy_label', 2.598833643460815e-06], ['dummy_label', 2.598833643460815e-06], ['Label("_");', 2.598833643460815e-06], ['dummy_label->set_is_used();', 2.598833643460815e-06], ['Unnamed_label.', 2.598833643460815e-06], ['Unnamed_label::get_blabel(Translate_context*', 2.598833643460815e-06], ['Unnamed_label::get_definition(Translate_context*', 2.598833643460815e-06], ['Unnamed_label::get_goto(Translate_context*', 2.598833643460815e-06], ['Package.', 2.598833643460815e-06], ['Package::Package(const', 2.598833643460815e-06], ['pkgpath_(pkgpath),', 2.598833643460815e-06], ['pkgpath_symbol_(pkgpath_symbol),', 2.598833643460815e-06], ['package_name_(),', 2.598833643460815e-06], ['Package::set_package_name(const', 2.598833643460815e-06], ['go_assert(!package_name.empty());', 2.598833643460815e-06], ['(this->package_name_.empty())', 2.598833643460815e-06], ['this->package_name_', 2.598833643460815e-06], ['(this->package_name_', 2.598833643460815e-06], ['("saw', 2.598833643460815e-06], ['this->pkgpath_.c_str(),', 2.598833643460815e-06], ['this->package_name_.c_str(),', 2.598833643460815e-06], ['package_name.c_str());', 2.598833643460815e-06], ['Package::pkgpath_symbol()', 2.598833643460815e-06], ['Package::set_pkgpath_symbol(const', 2.598833643460815e-06], ['pkgpath_symbol)', 2.598833643460815e-06], ['go_assert(!pkgpath_symbol.empty());', 2.598833643460815e-06], ['go_assert(this->pkgpath_symbol_', 2.598833643460815e-06], ['pkgpath_symbol);', 2.598833643460815e-06], ['ALIAS.', 2.598833643460815e-06], ['Package::note_usage(const', 2.598833643460815e-06], ['alias)', 2.598833643460815e-06], ['this->aliases_.end());', 2.598833643460815e-06], ['p->second->note_usage();', 2.598833643460815e-06], ['Forget', 2.598833643460815e-06], ['forgetting', 2.598833643460815e-06], ['unused,', 2.598833643460815e-06], ['Package::forget_usage(Expression*', 2.598833643460815e-06], ['usage)', 2.598833643460815e-06], ['std::set<Expression*>::iterator', 2.598833643460815e-06], ['this->fake_uses_.find(usage);', 2.598833643460815e-06], ['this->fake_uses_.end());', 2.598833643460815e-06], ['this->fake_uses_.erase(p);', 2.598833643460815e-06], ['Gogo::message_name(this->package_name()).c_str());', 2.598833643460815e-06], ['fake,', 2.598833643460815e-06], ['Package::clear_used()', 2.598833643460815e-06], ['this->package_name();', 2.598833643460815e-06], ['this->aliases_.find(dot_alias);', 2.598833643460815e-06], ['this->aliases_.end()', 2.598833643460815e-06], ['p->second->used()', 2.598833643460815e-06], ['this->fake_uses_.size())', 2.598833643460815e-06], ['this->fake_uses_.clear();', 2.598833643460815e-06], ['this->aliases_.clear();', 2.598833643460815e-06], ['Package_alias*', 2.598833643460815e-06], ['Package::add_alias(const', 2.598833643460815e-06], ['this->aliases_.end())', 2.598833643460815e-06], ['std::pair<Aliases::iterator,', 2.598833643460815e-06], ['this->aliases_.insert(std::make_pair(alias,', 2.598833643460815e-06], ['Package_alias(location)));', 2.598833643460815e-06], ['ret.first;', 2.598833643460815e-06], ['Everything', 2.598833643460815e-06], ['(variables,', 2.598833643460815e-06], ['declarations)', 2.598833643460815e-06], ['Constants', 2.598833643460815e-06], ['Package::determine_types()', 2.598833643460815e-06], ['this->bindings_;', 2.598833643460815e-06], ['Traverse.', 2.598833643460815e-06], ['Traverse::~Traverse()', 2.598833643460815e-06], ['this->types_seen_;', 2.598833643460815e-06], ['this->expressions_seen_;', 2.598833643460815e-06], ['Traverse::remember_type(const', 2.598833643460815e-06], ['go_assert((this->traverse_mask()', 2.598833643460815e-06], ['(this->traverse_mask()', 2.598833643460815e-06], ['traverse_expressions)', 2.598833643460815e-06], ['inheritance,', 2.598833643460815e-06], ['interface{I}', 2.598833643460815e-06], ['[uintptr(unsafe.Sizeof(&x))]byte', 2.598833643460815e-06], ['Type::TYPE_NAMED', 2.598833643460815e-06], ['this->types_seen_', 2.598833643460815e-06], ['Types_seen();', 2.598833643460815e-06], ['this->types_seen_->insert(type);', 2.598833643460815e-06], ['NB:', 2.598833643460815e-06], ['expressions/types', 2.598833643460815e-06], ['walks', 2.598833643460815e-06], ['Traverse::remember_expression(const', 2.598833643460815e-06], ['expression)', 2.598833643460815e-06], ['this->expressions_seen_', 2.598833643460815e-06], ['Expressions_seen();', 2.598833643460815e-06], ['std::pair<Expressions_seen::iterator,', 2.598833643460815e-06], ['this->expressions_seen_->insert(expression);', 2.598833643460815e-06], ['called:', 2.598833643460815e-06], ['Traverse::variable(Named_object*)', 2.598833643460815e-06], ['Traverse::constant(Named_object*,', 2.598833643460815e-06], ['Traverse::function(Named_object*)', 2.598833643460815e-06], ['Traverse::block(Block*)', 2.598833643460815e-06], ['Traverse::statement(Block*,', 2.598833643460815e-06], ['Traverse::expression(Expression**)', 2.598833643460815e-06], ['Traverse::type(Type*)', 2.598833643460815e-06], ['Traverse::function_declaration(Named_object*)', 2.598833643460815e-06], ['Statement_inserter.', 2.598833643460815e-06], ['Statement_inserter::insert(Statement*', 2.598833643460815e-06], ['(this->statements_added_', 2.598833643460815e-06], ['this->statements_added_->insert(s);', 2.598833643460815e-06], ['go_assert(this->pindex_', 2.598833643460815e-06], ['this->block_->insert_statement_before(*this->pindex_,', 2.598833643460815e-06], ['++*this->pindex_;', 2.598833643460815e-06], ['this->var_->add_preinit_statement(this->gogo_,', 2.598833643460815e-06], ['d-longdouble.cc', 2.598833643460815e-06], ['"longdouble.h"', 2.598833643460815e-06], ['0.5.', 2.598833643460815e-06], ['CTFloat::zero;', 2.598833643460815e-06], ['CTFloat::one;', 2.598833643460815e-06], ['CTFloat::minusone;', 2.598833643460815e-06], ['CTFloat::half;', 2.598833643460815e-06], ['Truncate', 2.598833643460815e-06], ['longdouble::normalize', 2.598833643460815e-06], ['(real_value&', 2.598833643460815e-06], ['&d);', 2.598833643460815e-06], ['(int32_t', 2.598833643460815e-06], ['longdouble::to_int', 2.598833643460815e-06], ['longdouble::to_uint', 2.598833643460815e-06], ['dconst0', 2.598833643460815e-06], ['dconst1;', 2.598833643460815e-06], ['longdouble::to_bool', 2.598833643460815e-06], ['rvc_zero;', 2.598833643460815e-06], ['longdouble::add', 2.598833643460815e-06], ['PLUS_EXPR,', 2.598833643460815e-06], ['longdouble::sub', 2.598833643460815e-06], ['longdouble::mul', 2.598833643460815e-06], ['longdouble::div', 2.598833643460815e-06], ['longdouble::mod', 2.598833643460815e-06], ['rvc_zero', 2.598833643460815e-06], ['rvc_zero)', 2.598833643460815e-06], ['(REAL_VALUE_ISINF', 2.598833643460815e-06], ['NaN?', 2.598833643460815e-06], ['FIX_TRUNC_EXPR,', 2.598833643460815e-06], ['&q);', 2.598833643460815e-06], ['longdouble::neg', 2.598833643460815e-06], ['longdouble::cmp', 2.598833643460815e-06], ['longdouble::equals', 2.598833643460815e-06], ['brig-queue-inst-handler.cc', 2.598833643460815e-06], ['brig_queue_inst_handler::brig_queue_inst_handler', 2.598833643460815e-06], ['brig_queue_inst_handler::operator', 2.598833643460815e-06], ['BRIG_OPCODE_LDQUEUEREADINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_LDQUEUEWRITEINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_LDQUEUEREADINDEX);', 2.598833643460815e-06], ['BRIG_OPCODE_STQUEUEREADINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_STQUEUEWRITEINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_STQUEUEREADINDEX);', 2.598833643460815e-06], ['BRIG_OPCODE_ADDQUEUEWRITEINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_ADDQUEUEWRITEINDEX);', 2.598833643460815e-06], ['BRIG_OPCODE_CASQUEUEWRITEINDEX)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_CASQUEUEWRITEINDEX);', 2.598833643460815e-06], ['unsafe.cc', 2.598833643460815e-06], ['driven', 2.598833643460815e-06], ['Gogo::import_unsafe(const', 2.598833643460815e-06], ['this->add_imported_package("unsafe",', 2.598833643460815e-06], ['this->imports_.insert(std::make_pair("unsafe",', 2.598833643460815e-06], ['package->bindings()->lookup("Pointer");', 2.598833643460815e-06], ['bindings->add_type("Pointer",', 2.598833643460815e-06], ['go_assert(no->type_value()->is_unsafe_pointer_type());', 2.598833643460815e-06], ['no->type_value()->set_is_visible();', 2.598833643460815e-06], ['pointer_type', 2.598833643460815e-06], ['this->add_named_type(pointer_type);', 2.598833643460815e-06], ['Sizeof.', 2.598833643460815e-06], ['bindings->add_function_declaration("Sizeof",', 2.598833643460815e-06], ['Offsetof.', 2.598833643460815e-06], ['bindings->add_function_declaration("Offsetof",', 2.598833643460815e-06], ['Alignof.', 2.598833643460815e-06], ['bindings->add_function_declaration("Alignof",', 2.598833643460815e-06], ['(!this->imported_unsafe_)', 2.598833643460815e-06], ['go_imported_unsafe();', 2.598833643460815e-06], ['this->imported_unsafe_', 2.598833643460815e-06], ['"wide-int-range.h"', 2.598833643460815e-06], ['Wrapper', 2.598833643460815e-06], ['undefined),', 2.598833643460815e-06], ['VAL1', 2.598833643460815e-06], ['VAL2.', 2.598833643460815e-06], ['*RES.', 2.598833643460815e-06], ['indeterminate.', 2.598833643460815e-06], ['wide_int_binop_overflow', 2.598833643460815e-06], ['&res,', 2.598833643460815e-06], ['(!wide_int_binop', 2.598833643460815e-06], ['(res,', 2.598833643460815e-06], ['w0,', 2.598833643460815e-06], ['&overflow))', 2.598833643460815e-06], ['overflowed', 2.598833643460815e-06], ['multiplication,', 2.598833643460815e-06], ['w0.sign_mask', 2.598833643460815e-06], ['w1.sign_mask', 2.598833643460815e-06], ['TRUNC_DIV_EXPR:', 2.598833643460815e-06], ['FLOOR_DIV_EXPR:', 2.598833643460815e-06], ['CEIL_DIV_EXPR:', 2.598833643460815e-06], ['EXACT_DIV_EXPR:', 2.598833643460815e-06], ['ROUND_DIV_EXPR:', 2.598833643460815e-06], ['+INF.', 2.598833643460815e-06], ['!overflow;', 2.598833643460815e-06], ['unset,', 2.598833643460815e-06], ['wide_int_range_set_zero_nonzero_bits', 2.598833643460815e-06], ['(signop', 2.598833643460815e-06], ['&may_be_nonzero,', 2.598833643460815e-06], ['&must_be_nonzero)', 2.598833643460815e-06], ['lb;', 2.598833643460815e-06], ['may_be_nonzero;', 2.598833643460815e-06], ['(ub,', 2.598833643460815e-06], ['xor_mask', 2.598833643460815e-06], ['(xor_mask', 2.598833643460815e-06], ['(wi::floor_log2', 2.598833643460815e-06], ['(xor_mask),', 2.598833643460815e-06], ['may_be_nonzero.get_precision', 2.598833643460815e-06], ['(must_be_nonzero,', 2.598833643460815e-06], ['(w0/w1,', 2.598833643460815e-06], ['w2/w3)', 2.598833643460815e-06], ['MIN/MAX', 2.598833643460815e-06], ['&w2,', 2.598833643460815e-06], ['&w3,', 2.598833643460815e-06], ['w0,w1', 2.598833643460815e-06], ['w2,w3.', 2.598833643460815e-06], ['w1);', 2.598833643460815e-06], ['w3);', 2.598833643460815e-06], ['w2,', 2.598833643460815e-06], ['(w1,', 2.598833643460815e-06], ['(VR0', 2.598833643460815e-06], ['VR1)', 2.598833643460815e-06], ['SIGN.', 2.598833643460815e-06], ['OVERFLOW_UNDEFINED', 2.598833643460815e-06], ['product.', 2.598833643460815e-06], ['cp4;', 2.598833643460815e-06], ['bailing', 2.598833643460815e-06], ['(cp1,', 2.598833643460815e-06], ['cp3', 2.598833643460815e-06], ['(cp3,', 2.598833643460815e-06], ['cp2', 2.598833643460815e-06], ['(cp2,', 2.598833643460815e-06], ['cp4', 2.598833643460815e-06], ['cp2;', 2.598833643460815e-06], ['(cp4,', 2.598833643460815e-06], ['cp4,', 2.598833643460815e-06], ['TYPE_OVERFLOW_WRAPS:', 2.598833643460815e-06], ['[MIN0,', 2.598833643460815e-06], ['MAX0]', 2.598833643460815e-06], ['[MIN1,', 2.598833643460815e-06], ['MAX1]', 2.598833643460815e-06], ['fancy', 2.598833643460815e-06], ['drop', 2.598833643460815e-06], ['[-3,-1]*[-3,-1].', 2.598833643460815e-06], ['&min0_,', 2.598833643460815e-06], ['&max0_,', 2.598833643460815e-06], ['&min1_,', 2.598833643460815e-06], ['&max1_)', 2.598833643460815e-06], ['Therefore,', 2.598833643460815e-06], ['PREC2.', 2.598833643460815e-06], ['everthing', 2.598833643460815e-06], ['were.', 2.598833643460815e-06], ['(min0_,', 2.598833643460815e-06], ['(max0_,', 2.598833643460815e-06], ['(min1_,', 2.598833643460815e-06], ['(max1_,', 2.598833643460815e-06], ['<widest2_int>', 2.598833643460815e-06], ['Canonicalize', 2.598833643460815e-06], ['intervals.', 2.598833643460815e-06], ['max0))', 2.598833643460815e-06], ['max1))', 2.598833643460815e-06], ['prod1', 2.598833643460815e-06], ['prod3.', 2.598833643460815e-06], ['min0min1', 2.598833643460815e-06], ['max0max1', 2.598833643460815e-06], ['min0max1', 2.598833643460815e-06], ['max0min1', 2.598833643460815e-06], ['(prod1', 2.598833643460815e-06], ['prod2)', 2.598833643460815e-06], ['(prod1,', 2.598833643460815e-06], ['prod2);', 2.598833643460815e-06], ['prod1)', 2.598833643460815e-06], ['prod1);', 2.598833643460815e-06], ['(prod2', 2.598833643460815e-06], ['min.', 2.598833643460815e-06], ['prod0;', 2.598833643460815e-06], ['(wi::geu_p', 2.598833643460815e-06], ['sizem1))', 2.598833643460815e-06], ['covers', 2.598833643460815e-06], ['res_lb', 2.598833643460815e-06], ['res_ub', 2.598833643460815e-06], ['(prod3,', 2.598833643460815e-06], ['.CODE.', 2.598833643460815e-06], ['!TYPE_OVERFLOW_UNDEFINED,', 2.598833643460815e-06], ['Multiplications,', 2.598833643460815e-06], ['divisions', 2.598833643460815e-06], ['variations', 2.598833643460815e-06], ['compare_values', 2.598833643460815e-06], ['convoluted.', 2.598833643460815e-06], ['(MIN0', 2.598833643460815e-06], ['MIN1,', 2.598833643460815e-06], ['MIN0', 2.598833643460815e-06], ['MAX1,', 2.598833643460815e-06], ['MIN1', 2.598833643460815e-06], ['MAX1)', 2.598833643460815e-06], ['!overflow_undefined)', 2.598833643460815e-06], ['vr1_ub);', 2.598833643460815e-06], ['wide_int_range_lshift', 2.598833643460815e-06], ['multiplies.', 2.598833643460815e-06], ['vr1_ub.to_uhwi', 2.598833643460815e-06], ['(shift,', 2.598833643460815e-06], ['/*overflow_undefined=*/false);', 2.598833643460815e-06], ['vr1_ub.to_shwi', 2.598833643460815e-06], ['HOST_BITS_PER_WIDE_INT,', 2.598833643460815e-06], ['llshift', 2.598833643460815e-06], ['vr1.max', 2.598833643460815e-06], ['vr1', 2.598833643460815e-06], ['LSHIFT_EXPR', 2.598833643460815e-06], ['if-clause.', 2.598833643460815e-06], ['(bound_shift,', 2.598833643460815e-06], ['~(bound', 2.598833643460815e-06], ['low_bound,', 2.598833643460815e-06], ['high_bound;', 2.598833643460815e-06], ['low_bound))', 2.598833643460815e-06], ['[5,', 2.598833643460815e-06], ['6]', 2.598833643460815e-06], ['[10,', 2.598833643460815e-06], ['24].', 2.598833643460815e-06], ['(high_bound,', 2.598833643460815e-06], ['[0xffffff00,', 2.598833643460815e-06], ['0xffffffff]', 2.598833643460815e-06], ['[0xfffffc00,', 2.598833643460815e-06], ['0xfffffffe].', 2.598833643460815e-06], ['[-1,', 2.598833643460815e-06], ['[-4,', 2.598833643460815e-06], ['4].', 2.598833643460815e-06], ['high_bound)', 2.598833643460815e-06], ['wi::lts_p', 2.598833643460815e-06], ['(low_bound,', 2.598833643460815e-06], ['monotomically.', 2.598833643460815e-06], ['(in_bounds)', 2.598833643460815e-06], ['LSHIFT_EXPR,', 2.598833643460815e-06], ['Basically,', 2.598833643460815e-06], ['optimize:', 2.598833643460815e-06], ['[LB', 2.598833643460815e-06], ['UB', 2.598833643460815e-06], ['Z]', 2.598833643460815e-06], ['folding', 2.598833643460815e-06], ['wide_int_range_can_optimize_bit_op', 2.598833643460815e-06], ['not)', 2.598833643460815e-06], ['n))', 2.598833643460815e-06], ['(y', 2.598833643460815e-06], ['n)).', 2.598833643460815e-06], ['~w;', 2.598833643460815e-06], ['(w);', 2.598833643460815e-06], ['~(w', 2.598833643460815e-06], ['(w)', 2.598833643460815e-06], ['new_mask', 2.598833643460815e-06], ['((new_mask', 2.598833643460815e-06], ['lb)', 2.598833643460815e-06], ['(new_mask', 2.598833643460815e-06], ['wide_int_range_optimize_bit_op.', 2.598833643460815e-06], ['ranges.', 2.598833643460815e-06], ['wide_int_range_get_mask_and_bounds', 2.598833643460815e-06], ['&mask,', 2.598833643460815e-06], ['&lower_bound,', 2.598833643460815e-06], ['&upper_bound,', 2.598833643460815e-06], ['vr0_max))', 2.598833643460815e-06], ['vr1_max;', 2.598833643460815e-06], ['(BIT_AND_EXPR', 2.598833643460815e-06], ['wide_int_range_optimize_bit_op', 2.598833643460815e-06], ['BIT_IOR_EXPR);', 2.598833643460815e-06], ['(!wide_int_range_get_mask_and_bounds', 2.598833643460815e-06], ['(mask,', 2.598833643460815e-06], ['(wide_int_range_can_optimize_bit_op', 2.598833643460815e-06], ['ovf;', 2.598833643460815e-06], ['(res_ub,', 2.598833643460815e-06], ['XOR', 2.598833643460815e-06], ['wide_int_range_bit_xor', 2.598833643460815e-06], ['result_zero_bits', 2.598833643460815e-06], ['((must_be_nonzero0', 2.598833643460815e-06], ['must_be_nonzero1)', 2.598833643460815e-06], ['~(may_be_nonzero0', 2.598833643460815e-06], ['may_be_nonzero1));', 2.598833643460815e-06], ['result_one_bits', 2.598833643460815e-06], ['(wi::bit_and_not', 2.598833643460815e-06], ['(must_be_nonzero0,', 2.598833643460815e-06], ['may_be_nonzero1)', 2.598833643460815e-06], ['(must_be_nonzero1,', 2.598833643460815e-06], ['may_be_nonzero0));', 2.598833643460815e-06], ['~result_zero_bits;', 2.598833643460815e-06], ['result_one_bits;', 2.598833643460815e-06], ['IOR', 2.598833643460815e-06], ['wide_int_range_bit_ior', 2.598833643460815e-06], ['BIT_IOR_EXPR,', 2.598833643460815e-06], ['minima.', 2.598833643460815e-06], ['wide_int_range_bit_and', 2.598833643460815e-06], ['BIT_AND_EXPR,', 2.598833643460815e-06], ['maxima.', 2.598833643460815e-06], ['PR68217:', 2.598833643460815e-06], ['sign-bit-CST', 2.598833643460815e-06], ['0]', 2.598833643460815e-06], ['INF].', 2.598833643460815e-06], ['sign_bit', 2.598833643460815e-06], ['((wi::eq_p', 2.598833643460815e-06], ['vr0_max)', 2.598833643460815e-06], ['sign_bit))', 2.598833643460815e-06], ['vr1_max)', 2.598833643460815e-06], ['sign_bit))))', 2.598833643460815e-06], ['TRUNC_MOD_EXPR', 2.598833643460815e-06], ['wide_int_range_trunc_mod', 2.598833643460815e-06], ['(A', 2.598833643460815e-06], ['B)', 2.598833643460815e-06], ['(B)', 2.598833643460815e-06], ['vr1_max', 2.598833643460815e-06], ['-wmax;', 2.598833643460815e-06], ['(tmp))', 2.598833643460815e-06], ['wide_int_range_abs', 2.598833643460815e-06], ['-TYPE_MIN_VALUE', 2.598833643460815e-06], ['flag_wrapv', 2.598833643460815e-06], ['min_value', 2.598833643460815e-06], ['max_value', 2.598833643460815e-06], ['(!overflow_undefined', 2.598833643460815e-06], ['wi::eq_p', 2.598833643460815e-06], ['flip', 2.598833643460815e-06], ['(wi::le_p', 2.598833643460815e-06], ['reversed,', 2.598833643460815e-06], ['(MIN', 2.598833643460815e-06], ['MAX),', 2.598833643460815e-06], ['around.', 2.598833643460815e-06], ['positive.', 2.598833643460815e-06], ['ABSU_EXPR', 2.598833643460815e-06], ['wide_int_range_absu', 2.598833643460815e-06], ['max))', 2.598833643460815e-06], ['[VR0_MIN,', 2.598833643460815e-06], ['VR0_MAX]', 2.598833643460815e-06], ['INNER_SIGN', 2.598833643460815e-06], ['INNER_PREC,', 2.598833643460815e-06], ['MAX]', 2.598833643460815e-06], ['OUTER_SIGN', 2.598833643460815e-06], ['OUTER_PREC.', 2.598833643460815e-06], ['Caller', 2.598833643460815e-06], ['responsible', 2.598833643460815e-06], ['canonicalizing', 2.598833643460815e-06], ['wide_int_range_convert', 2.598833643460815e-06], ['inner_sign,', 2.598833643460815e-06], ['inner_prec,', 2.598833643460815e-06], ['outer_sign,', 2.598833643460815e-06], ['truncating', 2.598833643460815e-06], ['canonicalize', 2.598833643460815e-06], ['represent.', 2.598833643460815e-06], ['(outer_prec', 2.598833643460815e-06], ['inner_prec', 2.598833643460815e-06], ['wi::rshift', 2.598833643460815e-06], ['(wi::sub', 2.598833643460815e-06], ['vr0_min),', 2.598833643460815e-06], ['wi::uhwi', 2.598833643460815e-06], ['inner_prec),', 2.598833643460815e-06], ['inner_sign)', 2.598833643460815e-06], ['(!wi::eq_p', 2.598833643460815e-06], ['outer_sign))', 2.598833643460815e-06], ['!wi::eq_p', 2.598833643460815e-06], ['(max,', 2.598833643460815e-06], ['outer_sign)));', 2.598833643460815e-06], ['[WMIN,', 2.598833643460815e-06], ['WMAX]', 2.598833643460815e-06], ['[EXTRA_MIN,', 2.598833643460815e-06], ['EXTRA_MAX].', 2.598833643460815e-06], ['EXTRA_RANGE_P', 2.598833643460815e-06], ['return,', 2.598833643460815e-06], ['EXTRA_MIN/EXTRA_MAX', 2.598833643460815e-06], ['wide_int_range_div', 2.598833643460815e-06], ['&dividend_min,', 2.598833643460815e-06], ['&dividend_max,', 2.598833643460815e-06], ['&divisor_min,', 2.598833643460815e-06], ['&divisor_max,', 2.598833643460815e-06], ['overflow_undefined,', 2.598833643460815e-06], ['&extra_range_p,', 2.598833643460815e-06], ['&extra_min,', 2.598833643460815e-06], ['&extra_max)', 2.598833643460815e-06], ['division.', 2.598833643460815e-06], ['(!wide_int_range_includes_zero_p', 2.598833643460815e-06], ['flag_non_call_exceptions,', 2.598833643460815e-06], ['(cfun->can_throw_non_call_exceptions)', 2.598833643460815e-06], ['definitely', 2.598833643460815e-06], ['(wide_int_range_zero_p', 2.598833643460815e-06], ['parts,', 2.598833643460815e-06], ['-1]', 2.598833643460815e-06], ['UB],', 2.598833643460815e-06], ['(divisor_max,', 2.598833643460815e-06], ['(extra_range_p', 2.598833643460815e-06], ['extra_min', 2.598833643460815e-06], ['wmin,', 2.598833643460815e-06], ['extra_max', 2.598833643460815e-06], ['wi::one', 2.598833643460815e-06], ['d-lang.cc', 2.598833643460815e-06], ['Language-dependent', 2.598833643460815e-06], ['"dmd/doc.h"', 2.598833643460815e-06], ['"dmd/json.h"', 2.598833643460815e-06], ['"dmd/mars.h"', 2.598833643460815e-06], ['"langhooks-def.h"', 2.598833643460815e-06], ['"id.h"', 2.598833643460815e-06], ['type/decl', 2.598833643460815e-06], ['d_global_trees[DTI_MAX];', 2.598833643460815e-06], ['Options', 2.598833643460815e-06], ['d_option_data', 2.598833643460815e-06], ['*fonly;', 2.598833643460815e-06], ['-fonly=<arg>', 2.598833643460815e-06], ['*multilib;', 2.598833643460815e-06], ['-imultilib', 2.598833643460815e-06], ['*prefix;', 2.598833643460815e-06], ['-iprefix', 2.598833643460815e-06], ['deps;', 2.598833643460815e-06], ['-M', 2.598833643460815e-06], ['deps_skip_system;', 2.598833643460815e-06], ['-MM', 2.598833643460815e-06], ['*deps_filename;', 2.598833643460815e-06], ['-M[M]D', 2.598833643460815e-06], ['*deps_filename_user;', 2.598833643460815e-06], ['*deps_target;', 2.598833643460815e-06], ['-M[QT]', 2.598833643460815e-06], ['deps_phony;', 2.598833643460815e-06], ['-MP', 2.598833643460815e-06], ['stdinc;', 2.598833643460815e-06], ['-nostdinc', 2.598833643460815e-06], ['d_option;', 2.598833643460815e-06], ['builtin_modules;', 2.598833643460815e-06], ['*entrypoint_module', 2.598833643460815e-06], ['*entrypoint_root_module', 2.598833643460815e-06], ['*current_binding_level;', 2.598833643460815e-06], ['*global_binding_level;', 2.598833643460815e-06], ['*global_declarations;', 2.598833643460815e-06], ['GCC-style', 2.598833643460815e-06], ['command-line', 2.598833643460815e-06], ['QUOTED', 2.598833643460815e-06], ['quoted.', 2.598833643460815e-06], ['*target,', 2.598833643460815e-06], ['quoted)', 2.598833643460815e-06], ['(!d_option.deps_target)', 2.598833643460815e-06], ["('", 2.598833643460815e-06], ['d_option.deps_target->reserve', 2.598833643460815e-06], ['(target));', 2.598833643460815e-06], ['(!quoted)', 2.598833643460815e-06], ['d_option.deps_target->writestring', 2.598833643460815e-06], ['Quote', 2.598833643460815e-06], ['Make.', 2.598833643460815e-06], ['target;', 2.598833643460815e-06], ['q--)', 2.598833643460815e-06], ["'$':", 2.598833643460815e-06], ["('$');", 2.598833643460815e-06], ["'#':", 2.598833643460815e-06], ['MODULE', 2.598833643460815e-06], ['COLMAX', 2.598833643460815e-06], ['columns', 2.598833643460815e-06], ['word-wrap', 2.598833643460815e-06], ['(0', 2.598833643460815e-06], ['wrap).', 2.598833643460815e-06], ['*module,', 2.598833643460815e-06], ['colmax', 2.598833643460815e-06], ['72)', 2.598833643460815e-06], ['hash_set', 2.598833643460815e-06], ['dependencies;', 2.598833643460815e-06], ['modlist;', 2.598833643460815e-06], ['phonylist;', 2.598833643460815e-06], ['*str;', 2.598833643460815e-06], ['(d_option.deps_target)', 2.598833643460815e-06], ['d_option.deps_target->offset;', 2.598833643460815e-06], ['d_option.deps_target->extractString', 2.598833643460815e-06], ['module->objfile->name->str;', 2.598833643460815e-06], ['(":");', 2.598833643460815e-06], ['(modlist.dim', 2.598833643460815e-06], ['*depmod', 2.598833643460815e-06], ['modlist.pop', 2.598833643460815e-06], ['depmod->srcfile->name->str;', 2.598833643460815e-06], ['(dependencies.add', 2.598833643460815e-06], ['(str))', 2.598833643460815e-06], ['(colmax', 2.598833643460815e-06], ['colmax)', 2.598833643460815e-06], ['\\\\\\n', 2.598833643460815e-06], ['(d_option.deps_phony', 2.598833643460815e-06], ['!depmod->isRoot', 2.598833643460815e-06], ['phonylist.push', 2.598833643460815e-06], ['(depmod);', 2.598833643460815e-06], ['depmod->aimports.dim;', 2.598833643460815e-06], ['depmod->aimports[i];', 2.598833643460815e-06], ['((m->ident', 2.598833643460815e-06], ['("__entrypoint")', 2.598833643460815e-06], ['m->ident', 2.598833643460815e-06], ['("__main"))', 2.598833643460815e-06], ['modules,', 2.598833643460815e-06], ['core.*,', 2.598833643460815e-06], ['std.*,', 2.598833643460815e-06], ['gcc.*', 2.598833643460815e-06], ['(d_option.deps_skip_system)', 2.598833643460815e-06], ['(m->ident', 2.598833643460815e-06], ['("object")', 2.598833643460815e-06], ['m->md->packages)', 2.598833643460815e-06], ['(*m->md->packages)[0];', 2.598833643460815e-06], ['("core")', 2.598833643460815e-06], ['("std")', 2.598833643460815e-06], ['("gcc"))', 2.598833643460815e-06], ['phonylist.dim;', 2.598833643460815e-06], ['phonylist[i];', 2.598833643460815e-06], ['(m->srcfile->name->str);', 2.598833643460815e-06], ['(":\\n");', 2.598833643460815e-06], ['lang_hooks.init_options', 2.598833643460815e-06], ['*decoded_options)', 2.598833643460815e-06], ['global._init', 2.598833643460815e-06], ['global.vendor', 2.598833643460815e-06], ['lang_hooks.name;', 2.598833643460815e-06], ['global.params.argv0', 2.598833643460815e-06], ['(decoded_options[0].arg);', 2.598833643460815e-06], ['global.params.link', 2.598833643460815e-06], ['BOUNDSCHECKdefault;', 2.598833643460815e-06], ['C++14.', 2.598833643460815e-06], ['global.params.cplusplus', 2.598833643460815e-06], ['CppStdRevisionCpp14;', 2.598833643460815e-06], ['global.params.linkswitches', 2.598833643460815e-06], ['global.params.libfiles', 2.598833643460815e-06], ['global.params.objfiles', 2.598833643460815e-06], ['global.params.ddocfiles', 2.598833643460815e-06], ['global.params.imppath', 2.598833643460815e-06], ['global.params.fileImppath', 2.598833643460815e-06], ['global.params.modFileAliasStrings', 2.598833643460815e-06], ['GDC-specific', 2.598833643460815e-06], ['lang_hooks.init_options_struct', 2.598833643460815e-06], ['OPTS.', 2.598833643460815e-06], ['(gcc_options', 2.598833643460815e-06], ['*opts)', 2.598833643460815e-06], ['opts->x_flag_exceptions', 2.598833643460815e-06], ['opts->x_flag_complex_method', 2.598833643460815e-06], ["'errno'", 2.598833643460815e-06], ['opts->x_flag_errno_math', 2.598833643460815e-06], ['opts->frontend_set_flag_errno_math', 2.598833643460815e-06], ['sync', 2.598833643460815e-06], ['-fbounds-check', 2.598833643460815e-06], ['opts->x_flag_bounds_check', 2.598833643460815e-06], ['global.params.useArrayBounds;', 2.598833643460815e-06], ['precisely', 2.598833643460815e-06], ['opts->x_flag_wrapv', 2.598833643460815e-06], ['lang_hooks.lang_mask', 2.598833643460815e-06], ['CL_D;', 2.598833643460815e-06], ['lang_hooks.init', 2.598833643460815e-06], ['Type::_init', 2.598833643460815e-06], ['Id::initialize', 2.598833643460815e-06], ['Module::_init', 2.598833643460815e-06], ['Expression::_init', 2.598833643460815e-06], ['Objc::_init', 2.598833643460815e-06], ['init.', 2.598833643460815e-06], ['global_binding_level', 2.598833643460815e-06], ['global_binding_level;', 2.598833643460815e-06], ['(C', 2.598833643460815e-06], ['(signed_char', 2.598833643460815e-06], ['build_common_tree_nodes', 2.598833643460815e-06], ['(flag_exceptions)', 2.598833643460815e-06], ['using_eh_for_cleanups', 2.598833643460815e-06], ['(!supports_one_only', 2.598833643460815e-06], ['flag_weak', 2.598833643460815e-06], ['main,', 2.598833643460815e-06], ['main_identifier_node', 2.598833643460815e-06], ['("main");', 2.598833643460815e-06], ['library-configured', 2.598833643460815e-06], ['(d_option.prefix,', 2.598833643460815e-06], ['d_option.multilib,', 2.598833643460815e-06], ['d_option.stdinc);', 2.598833643460815e-06], ['lang_hooks.init_ts', 2.598833643460815e-06], ['(FLOAT_MOD_EXPR);', 2.598833643460815e-06], ['(UNSIGNED_RSHIFT_EXPR);', 2.598833643460815e-06], ['lang_hooks.handle_option', 2.598833643460815e-06], ['*arg,', 2.598833643460815e-06], ['cl_option_handlers', 2.598833643460815e-06], ['*handlers', 2.598833643460815e-06], ['opt_code', 2.598833643460815e-06], ['(opt_code)', 2.598833643460815e-06], ['scode;', 2.598833643460815e-06], ['OPT_fall_instantiations:', 2.598833643460815e-06], ['OPT_fassert:', 2.598833643460815e-06], ['OPT_fbounds_check:', 2.598833643460815e-06], ['OPT_fbounds_check_:', 2.598833643460815e-06], ['OPT_fdebug:', 2.598833643460815e-06], ['global.params.debuglevel', 2.598833643460815e-06], ['OPT_fdebug_:', 2.598833643460815e-06], ['DebugCondition::setGlobalLevel', 2.598833643460815e-06], ['DebugCondition::addGlobalIdent', 2.598833643460815e-06], ['-fdebug', 2.598833643460815e-06], ['OPT_fdoc:', 2.598833643460815e-06], ['OPT_fdoc_dir_:', 2.598833643460815e-06], ['global.params.docdir', 2.598833643460815e-06], ['OPT_fdoc_file_:', 2.598833643460815e-06], ['global.params.docname', 2.598833643460815e-06], ['OPT_fdoc_inc_:', 2.598833643460815e-06], ['global.params.ddocfiles->push', 2.598833643460815e-06], ['OPT_fdump_d_original:', 2.598833643460815e-06], ['global.params.vcg_ast', 2.598833643460815e-06], ['OPT_fignore_unknown_pragmas:', 2.598833643460815e-06], ['global.params.ignoreUnsupportedPragmas', 2.598833643460815e-06], ['OPT_finvariants:', 2.598833643460815e-06], ['OPT_fmain:', 2.598833643460815e-06], ['global.params.addMain', 2.598833643460815e-06], ['OPT_fmodule_file_:', 2.598833643460815e-06], ['global.params.modFileAliasStrings->push', 2.598833643460815e-06], ['(!strchr', 2.598833643460815e-06], ["'='))", 2.598833643460815e-06], ['-fmodule-file', 2.598833643460815e-06], ['OPT_fmoduleinfo:', 2.598833643460815e-06], ['!value;', 2.598833643460815e-06], ['OPT_fpostconditions:', 2.598833643460815e-06], ['OPT_fpreconditions:', 2.598833643460815e-06], ['OPT_frelease:', 2.598833643460815e-06], ['OPT_fswitch_errors:', 2.598833643460815e-06], ['OPT_ftransition_all:', 2.598833643460815e-06], ['OPT_ftransition_checkimports:', 2.598833643460815e-06], ['global.params.check10378', 2.598833643460815e-06], ['OPT_ftransition_complex:', 2.598833643460815e-06], ['OPT_ftransition_dip1000:', 2.598833643460815e-06], ['global.params.vsafe', 2.598833643460815e-06], ['OPT_ftransition_dip25:', 2.598833643460815e-06], ['OPT_ftransition_field:', 2.598833643460815e-06], ['OPT_ftransition_import:', 2.598833643460815e-06], ['global.params.bug10378', 2.598833643460815e-06], ['OPT_ftransition_nogc:', 2.598833643460815e-06], ['global.params.vgc', 2.598833643460815e-06], ['OPT_ftransition_tls:', 2.598833643460815e-06], ['OPT_funittest:', 2.598833643460815e-06], ['global.params.useUnitTests', 2.598833643460815e-06], ['OPT_fversion_:', 2.598833643460815e-06], ['VersionCondition::setGlobalLevel', 2.598833643460815e-06], ['VersionCondition::addGlobalIdent', 2.598833643460815e-06], ['-fversion', 2.598833643460815e-06], ['OPT_H:', 2.598833643460815e-06], ['OPT_Hd:', 2.598833643460815e-06], ['global.params.hdrdir', 2.598833643460815e-06], ['OPT_Hf:', 2.598833643460815e-06], ['global.params.hdrname', 2.598833643460815e-06], ['OPT_imultilib:', 2.598833643460815e-06], ['OPT_iprefix:', 2.598833643460815e-06], ['OPT_I:', 2.598833643460815e-06], ['global.params.imppath->push', 2.598833643460815e-06], ['OPT_J:', 2.598833643460815e-06], ['global.params.fileImppath->push', 2.598833643460815e-06], ['OPT_MMD:', 2.598833643460815e-06], ['OPT_MD:', 2.598833643460815e-06], ['OPT_MF:', 2.598833643460815e-06], ['wins.', 2.598833643460815e-06], ['OPT_MP:', 2.598833643460815e-06], ['OPT_MQ:', 2.598833643460815e-06], ['OPT_MT:', 2.598833643460815e-06], ['OPT_nostdinc:', 2.598833643460815e-06], ['global.params.verbose', 2.598833643460815e-06], ['OPT_Wall:', 2.598833643460815e-06], ['DIAGNOSTICinform;', 2.598833643460815e-06], ['OPT_Wdeprecated:', 2.598833643460815e-06], ['OPT_Werror:', 2.598833643460815e-06], ['OPT_Wspeculative:', 2.598833643460815e-06], ['global.params.showGaggedErrors', 2.598833643460815e-06], ['OPT_Xf:', 2.598833643460815e-06], ['global.params.jsonfilename', 2.598833643460815e-06], ['OPT_X:', 2.598833643460815e-06], ['global.params.doJsonGeneration', 2.598833643460815e-06], ['D_handle_option_auto', 2.598833643460815e-06], ['(&global_options,', 2.598833643460815e-06], ['&global_options_set,', 2.598833643460815e-06], ['handlers,', 2.598833643460815e-06], ['global_dc);', 2.598833643460815e-06], ['lang_hooks.post_options', 2.598833643460815e-06], ['on/off', 2.598833643460815e-06], ['**', 2.598833643460815e-06], ['*fn;', 2.598833643460815e-06], ['(!filename', 2.598833643460815e-06], ['*fn', 2.598833643460815e-06], ['Release', 2.598833643460815e-06], ['BOUNDSCHECKdefault)', 2.598833643460815e-06], ['BOUNDSCHECKon;', 2.598833643460815e-06], ['flag_bounds_check', 2.598833643460815e-06], ['!global.params.release;', 2.598833643460815e-06], ['(global.params.release)', 2.598833643460815e-06], ['(!global_options_set.x_flag_invariants)', 2.598833643460815e-06], ['(!global_options_set.x_flag_preconditions)', 2.598833643460815e-06], ['(!global_options_set.x_flag_postconditions)', 2.598833643460815e-06], ['(!global_options_set.x_flag_assert)', 2.598833643460815e-06], ['(!global_options_set.x_flag_switch_errors)', 2.598833643460815e-06], ['partitioning', 2.598833643460815e-06], ['requested,', 2.598833643460815e-06], ['chaining,', 2.598833643460815e-06], ['LSDA', 2.598833643460815e-06], ['(!global_options_set.x_flag_reorder_blocks_and_partition)', 2.598833643460815e-06], ['global_options.x_flag_reorder_blocks_and_partition', 2.598833643460815e-06], ['-fmax-errors', 2.598833643460815e-06], ["frontend's", 2.598833643460815e-06], ['machinery.', 2.598833643460815e-06], ['(global_options_set.x_flag_max_errors)', 2.598833643460815e-06], ['global.errorLimit', 2.598833643460815e-06], ['(flag_excess_precision_cmdline', 2.598833643460815e-06], ['EXCESS_PRECISION_DEFAULT)', 2.598833643460815e-06], ['flag_excess_precision_cmdline', 2.598833643460815e-06], ['EXCESS_PRECISION_STANDARD;', 2.598833643460815e-06], ['global.params.symdebug', 2.598833643460815e-06], ['write_symbols', 2.598833643460815e-06], ['NO_DEBUG;', 2.598833643460815e-06], ['flag_inline_functions;', 2.598833643460815e-06], ['global.params.showColumns', 2.598833643460815e-06], ['flag_show_column;', 2.598833643460815e-06], ['(global.params.useInline)', 2.598833643460815e-06], ['!flag_syntax_only;', 2.598833643460815e-06], ['Has', 2.598833643460815e-06], ['global.params.pic', 2.598833643460815e-06], ['flag_pic', 2.598833643460815e-06], ['(warn_return_type', 2.598833643460815e-06], ['warn_return_type', 2.598833643460815e-06], ['(op);', 2.598833643460815e-06], ['Non-empty', 2.598833643460815e-06], ['construcors', 2.598833643460815e-06], ['(CONSTRUCTOR_NELTS', 2.598833643460815e-06], ['TREE_CLOBBER_P', 2.598833643460815e-06], ['(CALL_EXPR_RETURN_SLOT_OPT', 2.598833643460815e-06], ['(!is_gimple_lvalue', 2.598833643460815e-06], ['!INDIRECT_REF_P', 2.598833643460815e-06], ['lang_hooks.gimplify_expr', 2.598833643460815e-06], ['EXPR_P.', 2.598833643460815e-06], ['*expr_p,', 2.598833643460815e-06], ['*pre_p,', 2.598833643460815e-06], ['*post_p', 2.598833643460815e-06], ['gimplify_status', 2.598833643460815e-06], ['GS_UNHANDLED;', 2.598833643460815e-06], ['op1;', 2.598833643460815e-06], ['INIT_EXPR:', 2.598833643460815e-06], ['!error_operand_p', 2.598833643460815e-06], ['(op1)))', 2.598833643460815e-06], ['!useless_type_conversion_p', 2.598833643460815e-06], ['(op1),', 2.598833643460815e-06], ['(op0)))', 2.598833643460815e-06], ['(empty_modify_p', 2.598833643460815e-06], ['op1))', 2.598833643460815e-06], ['gimplify_expr', 2.598833643460815e-06], ['(&TREE_OPERAND', 2.598833643460815e-06], ['post_p,', 2.598833643460815e-06], ['is_gimple_lvalue,', 2.598833643460815e-06], ['fb_lvalue);', 2.598833643460815e-06], ['gimplify_and_add', 2.598833643460815e-06], ['Constructors', 2.598833643460815e-06], ['lvalues,', 2.598833643460815e-06], ['(CALL_EXPR_ARGS_ORDERED', 2.598833643460815e-06], ['(*expr_p))', 2.598833643460815e-06], ['Strictly', 2.598833643460815e-06], ['call_expr_nargs', 2.598833643460815e-06], ['EXPR_LOC_OR_LOC', 2.598833643460815e-06], ['(CALL_EXPR_ARG', 2.598833643460815e-06], ['i)))', 2.598833643460815e-06], ['(!has_side_effects)', 2.598833643460815e-06], ['gimplify_call_expr.', 2.598833643460815e-06], ['gimplify_arg', 2.598833643460815e-06], ['(gimplify_arg', 2.598833643460815e-06], ['(&new_arg,', 2.598833643460815e-06], ['GS_ERROR;', 2.598833643460815e-06], ['altered', 2.598833643460815e-06], ['(new_arg', 2.598833643460815e-06], ['!really_constant_p', 2.598833643460815e-06], ['(new_arg))', 2.598833643460815e-06], ['get_formal_tmp_var', 2.598833643460815e-06], ['(new_arg,', 2.598833643460815e-06], ['new_arg;', 2.598833643460815e-06], ['UNSIGNED_RSHIFT_EXPR:', 2.598833643460815e-06], ['(op0));', 2.598833643460815e-06], ['(*expr_p),', 2.598833643460815e-06], ['op0),', 2.598833643460815e-06], ['op1));', 2.598833643460815e-06], ['FLOAT_MOD_EXPR:', 2.598833643460815e-06], ['scanned', 2.598833643460815e-06], ['d_maybe_set_builtin()', 2.598833643460815e-06], ['builtin_modules.push', 2.598833643460815e-06], ['entrypoint', 2.598833643460815e-06], ['ENTRY', 2.598833643460815e-06], ['ROOT', 2.598833643460815e-06], ['*entry,', 2.598833643460815e-06], ['*root)', 2.598833643460815e-06], ['entrypoint_module', 2.598833643460815e-06], ['entrypoint_root_module', 2.598833643460815e-06], ['root;', 2.598833643460815e-06], ['lang_hooks.parse_file', 2.598833643460815e-06], ['("binary', 2.598833643460815e-06], ['global.params.argv0);', 2.598833643460815e-06], ['("version', 2.598833643460815e-06], ['global.version);', 2.598833643460815e-06], ['(global.params.versionids)', 2.598833643460815e-06], ['("predefs', 2.598833643460815e-06], ['global.params.versionids->dim;', 2.598833643460815e-06], ['(*global.params.versionids)[i];', 2.598833643460815e-06], ['debug_hooks->start_source_file', 2.598833643460815e-06], ['main_input_filename);', 2.598833643460815e-06], ["Module's", 2.598833643460815e-06], ['sources', 2.598833643460815e-06], ['modules;', 2.598833643460815e-06], ['modules.reserve', 2.598833643460815e-06], ['(num_in_fnames);', 2.598833643460815e-06], ['(d_option.fonly,', 2.598833643460815e-06], ['main_input_filename)', 2.598833643460815e-06], ['("-fonly=', 2.598833643460815e-06], ['num_in_fnames;', 2.598833643460815e-06], ['stdin,', 2.598833643460815e-06], ['("__stdin"),', 2.598833643460815e-06], ['stdin', 2.598833643460815e-06], ['getc', 2.598833643460815e-06], ['(stdin))', 2.598833643460815e-06], ['(!obstack_object_size', 2.598833643460815e-06], ['(&buffer))', 2.598833643460815e-06], ["`.d'", 2.598833643460815e-06], ['m->srcfile', 2.598833643460815e-06], ['("<stdin>");', 2.598833643460815e-06], ['m->srcfile->len', 2.598833643460815e-06], ['obstack_object_size', 2.598833643460815e-06], ['m->srcfile->buffer', 2.598833643460815e-06], ['obstack_finish', 2.598833643460815e-06], ['m->srcfile->ref', 2.598833643460815e-06], ['*basename', 2.598833643460815e-06], ['FileName::name', 2.598833643460815e-06], ['(in_fnames[i]);', 2.598833643460815e-06], ['FileName::removeExt', 2.598833643460815e-06], ['(basename);', 2.598833643460815e-06], ['FileName::free', 2.598833643460815e-06], ['m->read', 2.598833643460815e-06], ['("parse', 2.598833643460815e-06], ['(!Module::rootModule)', 2.598833643460815e-06], ['Module::rootModule', 2.598833643460815e-06], ['m->parse', 2.598833643460815e-06], ['(m->isDocFile)', 2.598833643460815e-06], ['modules.remove', 2.598833643460815e-06], ['i--;', 2.598833643460815e-06], ['(global.params.addMain)', 2.598833643460815e-06], ['("__main"));', 2.598833643460815e-06], ['global.endGagging', 2.598833643460815e-06], ['(global.params.doHdrGeneration)', 2.598833643460815e-06], ['independent', 2.598833643460815e-06], ['("import', 2.598833643460815e-06], ['genhdrfile', 2.598833643460815e-06], ['unconditional', 2.598833643460815e-06], ['resolving.', 2.598833643460815e-06], ['("importall', 2.598833643460815e-06], ['("semantic', 2.598833643460815e-06], ['Module::dprogress', 2.598833643460815e-06], ['Module::runDeferredSemantic', 2.598833643460815e-06], ['(Module::deferred.dim)', 2.598833643460815e-06], ['Module::deferred.dim;', 2.598833643460815e-06], ['Module::deferred[i];', 2.598833643460815e-06], ['(sd->loc),', 2.598833643460815e-06], ['("semantic2', 2.598833643460815e-06], ['Module::runDeferredSemantic2', 2.598833643460815e-06], ['("semantic3', 2.598833643460815e-06], ['semantic3', 2.598833643460815e-06], ['occurred.', 2.598833643460815e-06], ['global.warnings)', 2.598833643460815e-06], ['(Module::rootModule)', 2.598833643460815e-06], ['deterministic.', 2.598833643460815e-06], ['(Module::rootModule,', 2.598833643460815e-06], ['first_global_object_name', 2.598833643460815e-06], ['(d_option.deps)', 2.598833643460815e-06], ['(modules[i],', 2.598833643460815e-06], ['overrides', 2.598833643460815e-06], ['-M[M]D.', 2.598833643460815e-06], ['(d_option.deps_filename_user)', 2.598833643460815e-06], ['d_option.deps_filename_user;', 2.598833643460815e-06], ['(d_option.deps_filename)', 2.598833643460815e-06], ['*fdeps', 2.598833643460815e-06], ['(d_option.deps_filename);', 2.598833643460815e-06], ['fdeps->setbuffer', 2.598833643460815e-06], ['fdeps->ref', 2.598833643460815e-06], ['fdeps);', 2.598833643460815e-06], ['(global.params.doJsonGeneration)', 2.598833643460815e-06], ['json_generate', 2.598833643460815e-06], ['&modules);', 2.598833643460815e-06], ['global.params.jsonfilename;', 2.598833643460815e-06], ["'\\0'))", 2.598833643460815e-06], ['*nameext', 2.598833643460815e-06], ['FileName::defaultExt', 2.598833643460815e-06], ['global.json_ext);', 2.598833643460815e-06], ['*fjson', 2.598833643460815e-06], ['(nameext);', 2.598833643460815e-06], ['fjson->setbuffer', 2.598833643460815e-06], ['fjson->ref', 2.598833643460815e-06], ['fjson);', 2.598833643460815e-06], ['Ddoc', 2.598833643460815e-06], ['(global.params.doDocComments', 2.598833643460815e-06], ['!global.errors', 2.598833643460815e-06], ['!errorcount)', 2.598833643460815e-06], ['-fdump-d-original.', 2.598833643460815e-06], ['(global.params.vcg_ast)', 2.598833643460815e-06], ['buf.doindent', 2.598833643460815e-06], ['moduleToBuffer', 2.598833643460815e-06], ['("code', 2.598833643460815e-06], ['((entrypoint_module', 2.598833643460815e-06], ['entrypoint_root_module))', 2.598833643460815e-06], ['(entrypoint_module);', 2.598833643460815e-06], ['debug_hooks->end_source_file', 2.598833643460815e-06], ['had_errors:', 2.598833643460815e-06], ['status.', 2.598833643460815e-06], ['errorcount', 2.598833643460815e-06], ['global.warnings);', 2.598833643460815e-06], ['(vec_safe_address', 2.598833643460815e-06], ['(global_declarations),', 2.598833643460815e-06], ['(global_declarations));', 2.598833643460815e-06], ['QImode)', 2.598833643460815e-06], ['HImode)', 2.598833643460815e-06], ['(float_type_node))', 2.598833643460815e-06], ['(double_type_node))', 2.598833643460815e-06], ['(long_double_type_node))', 2.598833643460815e-06], ['(char8_type_node)))', 2.598833643460815e-06], ['(char8_type_node);', 2.598833643460815e-06], ['(d_int_type)))', 2.598833643460815e-06], ['(d_int_type);', 2.598833643460815e-06], ['(COMPLEX_MODE_P', 2.598833643460815e-06], ['inner_mode;', 2.598833643460815e-06], ['inner_type;', 2.598833643460815e-06], ['(complex_float_type_node))', 2.598833643460815e-06], ['(complex_double_type_node))', 2.598833643460815e-06], ['(complex_long_double_type_node))', 2.598833643460815e-06], ['(inner_type);', 2.598833643460815e-06], ['(VECTOR_MODE_P', 2.598833643460815e-06], ['build_vector_type_for_mode', 2.598833643460815e-06], ['UNSIGNEDP.', 2.598833643460815e-06], ['unsignedp,', 2.598833643460815e-06], ['signed_or_unsigned_type_for', 2.598833643460815e-06], ['(unsignedp,', 2.598833643460815e-06], ['lang_hooks.types.type_promotes_to', 2.598833643460815e-06], ['lang_hooks.decls.global_bindings_p', 2.598833643460815e-06], ['(current_binding_level', 2.598833643460815e-06], ['global_binding_level);', 2.598833643460815e-06], ['global_context,', 2.598833643460815e-06], ['be.', 2.598833643460815e-06], ['(!global_context)', 2.598833643460815e-06], ['global_context', 2.598833643460815e-06], ['build_translation_unit_decl', 2.598833643460815e-06], ['(NULL_TREE);', 2.598833643460815e-06], ['debug_hooks->register_main_translation_unit', 2.598833643460815e-06], ['(global_context);', 2.598833643460815e-06], ['lang_hooks.decls.pushdecl', 2.598833643460815e-06], ['belonging', 2.598833643460815e-06], ['(!DECL_CONTEXT', 2.598833643460815e-06], ['(TREE_STATIC', 2.598833643460815e-06], ['(global_declarations,', 2.598833643460815e-06], ['current_binding_level->names', 2.598833643460815e-06], ['lang_hooks.decls.getdecls', 2.598833643460815e-06], ['(current_binding_level)', 2.598833643460815e-06], ['lang_hooks.get_alias_set', 2.598833643460815e-06], ['alias_set_type', 2.598833643460815e-06], ['solid', 2.598833643460815e-06], ['backed', 2.598833643460815e-06], ['specification.', 2.598833643460815e-06], ['adhere', 2.598833643460815e-06], ['build_vconvert.', 2.598833643460815e-06], ['lang_hooks.types_compatible_p', 2.598833643460815e-06], ['Compares', 2.598833643460815e-06], ['equivalence', 2.598833643460815e-06], ['language.', 2.598833643460815e-06], ['sure,', 2.598833643460815e-06], ['handing', 2.598833643460815e-06], ['ASTs', 2.598833643460815e-06], ['*tx', 2.598833643460815e-06], ['*ty', 2.598833643460815e-06], ['(y);', 2.598833643460815e-06], ['(tx', 2.598833643460815e-06], ['ty', 2.598833643460815e-06], ['(tx,', 2.598833643460815e-06], ['ty))', 2.598833643460815e-06], ['between.', 2.598833643460815e-06], ['(tx->implicitConvTo', 2.598833643460815e-06], ['(ty)', 2.598833643460815e-06], ['ty->implicitConvTo', 2.598833643460815e-06], ['(tx))', 2.598833643460815e-06], ['Fallback', 2.598833643460815e-06], ['E.g:', 2.598833643460815e-06], ['VIEW_CONVERT', 2.598833643460815e-06], ['lang_hooks.finish_incomplete_decl', 2.598833643460815e-06], ['zero-length', 2.598833643460815e-06], ['assembler_variable', 2.598833643460815e-06], ['aliased', 2.598833643460815e-06], ['(DECL_SIZE', 2.598833643460815e-06], ['DECL_SIZE_UNIT', 2.598833643460815e-06], ['lang_hooks.types.classify_record', 2.598833643460815e-06], ['classify_record', 2.598833643460815e-06], ['(tc->sym->isInterfaceDeclaration', 2.598833643460815e-06], ['!tc->sym->isCPPinterface', 2.598833643460815e-06], ['RECORD_IS_INTERFACE;', 2.598833643460815e-06], ['RECORD_IS_CLASS;', 2.598833643460815e-06], ['RECORD_IS_STRUCT;', 2.598833643460815e-06], ['lang_hooks.tree_size', 2.598833643460815e-06], ['tcc_constant', 2.598833643460815e-06], ['tcc_exceptional', 2.598833643460815e-06], ['(tree_frame_info);', 2.598833643460815e-06], ['lang_hooks.print_xnode', 2.598833643460815e-06], ['indent)', 2.598833643460815e-06], ['print_node', 2.598833643460815e-06], ['(file,', 2.598833643460815e-06], ['"frame_type",', 2.598833643460815e-06], ['NODE,', 2.598833643460815e-06], ['TS_D_GENERIC', 2.598833643460815e-06], ['language-independent', 2.598833643460815e-06], ['d_tree_node_structure_enum', 2.598833643460815e-06], ['d_tree_node_structure', 2.598833643460815e-06], ['(lang_tree_node', 2.598833643460815e-06], ['(&t->generic))', 2.598833643460815e-06], ['IDENTIFIER_NODE:', 2.598833643460815e-06], ['TS_D_IDENTIFIER;', 2.598833643460815e-06], ['TS_D_FRAMEINFO;', 2.598833643460815e-06], ['TS_D_GENERIC;', 2.598833643460815e-06], ['*lt', 2.598833643460815e-06], ['lang_type>', 2.598833643460815e-06], ['lt->type', 2.598833643460815e-06], ['re-used.', 2.598833643460815e-06], ['(ld', 2.598833643460815e-06], ['(ld->decl', 2.598833643460815e-06], ['ld->decl', 2.598833643460815e-06], ['ggc_alloc<struct', 2.598833643460815e-06], ['(ld,', 2.598833643460815e-06], ['lang_decl));', 2.598833643460815e-06], ['(node)', 2.598833643460815e-06], ['d_keep_list);', 2.598833643460815e-06], ['lang_hooks.eh_personality', 2.598833643460815e-06], ['GDC', 2.598833643460815e-06], ['(!d_eh_personality_decl)', 2.598833643460815e-06], ['d_eh_personality_decl', 2.598833643460815e-06], ['build_personality_function', 2.598833643460815e-06], ['("gdc");', 2.598833643460815e-06], ['lang_hooks.eh_runtime_type', 2.598833643460815e-06], ['Definitions', 2.598833643460815e-06], ['language-specific', 2.598833643460815e-06], ['hooks.', 2.598833643460815e-06], ['"GNU', 2.598833643460815e-06], ['D"', 2.598833643460815e-06], ['d_langhook_common_attribute_table', 2.598833643460815e-06], ['d_langhook_attribute_table', 2.598833643460815e-06], ['LANG_HOOKS_INITIALIZER;', 2.598833643460815e-06], ['"gt-d-d-lang.h"', 2.598833643460815e-06], ['"gtype-d.h"', 2.598833643460815e-06], ['d-spec.c', 2.598833643460815e-06], ['Specific', 2.598833643460815e-06], ['"opt-suggestions.h"', 2.598833643460815e-06], ['"gcc.h"', 2.598833643460815e-06], ['DSOURCE', 2.598833643460815e-06], ['(1<<1)', 2.598833643460815e-06], ["`-lstdc++'.", 2.598833643460815e-06], ['WITHLIBCXX', 2.598833643460815e-06], ['(1<<2)', 2.598833643460815e-06], ['SKIPOPT', 2.598833643460815e-06], ['(1<<3)', 2.598833643460815e-06], ['"stdc++"', 2.598833643460815e-06], ['"gphobos"', 2.598833643460815e-06], ['"gdruntime"', 2.598833643460815e-06], ['libgphobos.', 2.598833643460815e-06], ['PHOBOS_LINK,', 2.598833643460815e-06], ['PHOBOS_STATIC,', 2.598833643460815e-06], ['dynamically.', 2.598833643460815e-06], ['PHOBOS_DYNAMIC,', 2.598833643460815e-06], ['PHOBOS_DEFAULT;', 2.598833643460815e-06], ['libgphobos.spec', 2.598833643460815e-06], ['lang_specific_driver', 2.598833643460815e-06], ['(cl_decoded_option', 2.598833643460815e-06], ['**in_decoded_options,', 2.598833643460815e-06], ['*in_decoded_options_count,', 2.598833643460815e-06], ['*in_added_libraries)', 2.598833643460815e-06], ["`-p'", 2.598833643460815e-06], ["`-pg'", 2.598833643460815e-06], ["`-g'.", 2.598833643460815e-06], ['-debuglib.', 2.598833643460815e-06], ['*new_decoded_options;', 2.598833643460815e-06], ['"-lstdc++"', 2.598833643460815e-06], ['*saw_libcxx', 2.598833643460815e-06], ['STD', 2.598833643460815e-06], ['-static.', 2.598833643460815e-06], ['command-line.', 2.598833643460815e-06], ['*defaultlib', 2.598833643460815e-06], ['*debuglib', 2.598833643460815e-06], ['"-fonly"', 2.598833643460815e-06], ['*only_source_option', 2.598833643460815e-06], ['-c', 2.598833643460815e-06], ['-E,', 2.598833643460815e-06], ['-fsyntax-only,', 2.598833643460815e-06], ['-S', 2.598833643460815e-06], ['.d.', 2.598833643460815e-06], ['*first_d_file', 2.598833643460815e-06], ['*in_decoded_options_count;', 2.598833643460815e-06], ['*decoded_options', 2.598833643460815e-06], ['*in_decoded_options;', 2.598833643460815e-06], ['added_libraries', 2.598833643460815e-06], ['*in_added_libraries;', 2.598833643460815e-06], ['DSOURCE,', 2.598833643460815e-06], ['MATHLIB,', 2.598833643460815e-06], ['WITHTHREAD,', 2.598833643460815e-06], ['WITHLIBC', 2.598833643460815e-06], ['WITHLIBCXX.', 2.598833643460815e-06], ['XCNEWVEC', 2.598833643460815e-06], ['argc);', 2.598833643460815e-06], ['argc;', 2.598833643460815e-06], ['decoded_options[i].arg;', 2.598833643460815e-06], ['(decoded_options[i].opt_index)', 2.598833643460815e-06], ['OPT_dstartfiles:', 2.598833643460815e-06], ['OPT_nostdlib:', 2.598833643460815e-06], ['OPT_nodefaultlibs:', 2.598833643460815e-06], ['OPT_nophoboslib:', 2.598833643460815e-06], ['OPT_defaultlib_:', 2.598833643460815e-06], ['(defaultlib', 2.598833643460815e-06], ['defaultlib));', 2.598833643460815e-06], ['defaultlib', 2.598833643460815e-06], ['defaultlib),', 2.598833643460815e-06], ['OPT_debuglib_:', 2.598833643460815e-06], ['(debuglib', 2.598833643460815e-06], ['debuglib));', 2.598833643460815e-06], ['debuglib', 2.598833643460815e-06], ['debuglib),', 2.598833643460815e-06], ['OPT_l:', 2.598833643460815e-06], ['((strcmp', 2.598833643460815e-06], ['LIBSTDCXX)', 2.598833643460815e-06], ['LIBSTDCXX_PROFILE)', 2.598833643460815e-06], ['WITHLIBCXX;', 2.598833643460815e-06], ['Unrecognized', 2.598833643460815e-06], ['-ltango)', 2.598833643460815e-06], ['OPT_pg:', 2.598833643460815e-06], ['OPT_p:', 2.598833643460815e-06], ['saw_profile_flag++;', 2.598833643460815e-06], ['OPT_g:', 2.598833643460815e-06], ["`-v',", 2.598833643460815e-06], ['(argc', 2.598833643460815e-06], ['OPT_x:', 2.598833643460815e-06], ['"d")', 2.598833643460815e-06], ['OPT_Xlinker:', 2.598833643460815e-06], ['OPT_Wl_:', 2.598833643460815e-06], ['Arguments', 2.598833643460815e-06], ['something,', 2.598833643460815e-06], ['OPT_c:', 2.598833643460815e-06], ['OPT_E:', 2.598833643460815e-06], ['OPT_fsyntax_only:', 2.598833643460815e-06], ['specify', 2.598833643460815e-06], ['libaries', 2.598833643460815e-06], ['link,', 2.598833643460815e-06], ['OPT_S:', 2.598833643460815e-06], ['OPT_o:', 2.598833643460815e-06], ['OPT_static:', 2.598833643460815e-06], ['OPT_static_libgcc:', 2.598833643460815e-06], ['OPT_static_libphobos:', 2.598833643460815e-06], ['OPT_shared_libphobos:', 2.598833643460815e-06], ['PHOBOS_DYNAMIC;', 2.598833643460815e-06], ['decoded_options[i].orig_option_with_args_text;', 2.598833643460815e-06], ['".d",', 2.598833643460815e-06], ['OPT_SPECIAL_input_file:', 2.598833643460815e-06], ['(arg[0]', 2.598833643460815e-06], ['arg[1]', 2.598833643460815e-06], ['first_d_file', 2.598833643460815e-06], ['DSOURCE;', 2.598833643460815e-06], ['libstdc++', 2.598833643460815e-06], ['".cc")', 2.598833643460815e-06], ['".cpp")', 2.598833643460815e-06], ['".c++")', 2.598833643460815e-06], ['libgcc.', 2.598833643460815e-06], ['needstdcxx', 2.598833643460815e-06], ["`-lstdcxx'", 2.598833643460815e-06], ['`-Bstatic', 2.598833643460815e-06], ['-lphobos', 2.598833643460815e-06], ['-ldruntime', 2.598833643460815e-06], ["-Bdynamic'", 2.598833643460815e-06], ['only_source', 2.598833643460815e-06], ["`-o'.", 2.598833643460815e-06], ['new_decoded_options', 2.598833643460815e-06], ['(cl_decoded_option,', 2.598833643460815e-06], ['num_args);', 2.598833643460815e-06], ['0th', 2.598833643460815e-06], ['i.e.,', 2.598833643460815e-06], ['decoded_options[i++];', 2.598833643460815e-06], ['argc)', 2.598833643460815e-06], ['SKIPOPT)', 2.598833643460815e-06], ['new_decoded_options[j]', 2.598833643460815e-06], ['decoded_options[i];', 2.598833643460815e-06], ['(!saw_libcxx', 2.598833643460815e-06], ['WITHLIBCXX))', 2.598833643460815e-06], ['saw_libcxx', 2.598833643460815e-06], ['&decoded_options[i];', 2.598833643460815e-06], ['DSOURCE)', 2.598833643460815e-06], ['i++;', 2.598833643460815e-06], ['*only_source_arg', 2.598833643460815e-06], ['(OPT_fonly_,', 2.598833643460815e-06], ['only_source_arg,', 2.598833643460815e-06], ['generate_option_input_file', 2.598833643460815e-06], ['(only_source_arg,', 2.598833643460815e-06], ['.d', 2.598833643460815e-06], ['!saw_opt_o)', 2.598833643460815e-06], ['(saw_opt_c', 2.598833643460815e-06], ['saw_opt_S)', 2.598833643460815e-06], ['lbasename', 2.598833643460815e-06], ['(first_d_file);', 2.598833643460815e-06], ['(base)', 2.598833643460815e-06], ['baselen);', 2.598833643460815e-06], ['out[baselen]', 2.598833643460815e-06], ['(saw_opt_S)', 2.598833643460815e-06], ["'o';", 2.598833643460815e-06], ['.out', 2.598833643460815e-06], ['TARGET_EXECUTABLE_SUFFIX', 2.598833643460815e-06], ['(TARGET_EXECUTABLE_SUFFIX[0]', 2.598833643460815e-06], ['"a"', 2.598833643460815e-06], ['TARGET_EXECUTABLE_SUFFIX;', 2.598833643460815e-06], ['"a.out";', 2.598833643460815e-06], ["`-lgphobos'", 2.598833643460815e-06], ['PHOBOS_DYNAMIC)', 2.598833643460815e-06], ['LIBPHOBOS,', 2.598833643460815e-06], ['LIBDRUNTIME,', 2.598833643460815e-06], ['(saw_debug_flag', 2.598833643460815e-06], ['debuglib)', 2.598833643460815e-06], ['debuglib,', 2.598833643460815e-06], ['(defaultlib)', 2.598833643460815e-06], ['defaultlib,', 2.598833643460815e-06], ['(saw_libcxx)', 2.598833643460815e-06], ['*saw_libcxx;', 2.598833643460815e-06], ['(need_stdcxx)', 2.598833643460815e-06], ['(saw_profile_flag', 2.598833643460815e-06], ['LIBSTDCXX),', 2.598833643460815e-06], ['(shared_libgcc', 2.598833643460815e-06], ['(OPT_shared_libgcc,', 2.598833643460815e-06], ['*in_decoded_options_count', 2.598833643460815e-06], ['*in_decoded_options', 2.598833643460815e-06], ['new_decoded_options;', 2.598833643460815e-06], ['*in_added_libraries', 2.598833643460815e-06], ['added_libraries;', 2.598833643460815e-06], ['((phobos_library', 2.598833643460815e-06], ['need_spec)', 2.598833643460815e-06], ['do_spec', 2.598833643460815e-06], ['("%:include(libgphobos.spec)");', 2.598833643460815e-06], ['lang_specific_extra_outfiles', 2.598833643460815e-06], ['brig-function.cc', 2.598833643460815e-06], ['"brig-function.h"', 2.598833643460815e-06], ['brig_function::builtin_map', 2.598833643460815e-06], ['brig_function::s_custom_builtins;', 2.598833643460815e-06], ['brig_function::brig_function', 2.598833643460815e-06], ['*exec,', 2.598833643460815e-06], ['*parent)', 2.598833643460815e-06], ['m_brig_def', 2.598833643460815e-06], ['(exec),', 2.598833643460815e-06], ['m_is_finished', 2.598833643460815e-06], ['(""),', 2.598833643460815e-06], ['m_current_bind_expr', 2.598833643460815e-06], ['m_func_decl', 2.598833643460815e-06], ['m_context_arg', 2.598833643460815e-06], ['m_group_base_arg', 2.598833643460815e-06], ['m_private_base_arg', 2.598833643460815e-06], ['m_ret_value', 2.598833643460815e-06], ['m_ret_value_brig_var', 2.598833643460815e-06], ['m_has_allocas', 2.598833643460815e-06], ['m_generating_arg_block', 2.598833643460815e-06], ['m_parent', 2.598833643460815e-06], ['(m_regs,', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT', 2.598833643460815e-06], ['(BrigOperandRegister', 2.598833643460815e-06], ['*));', 2.598833643460815e-06], ['(&m_descriptor,', 2.598833643460815e-06], ['(phsa_descriptor));', 2.598833643460815e-06], ['(s_custom_builtins.size', 2.598833643460815e-06], ['DEF_HSAIL_BUILTIN(ENUM,', 2.598833643460815e-06], ['HSAIL_OPCODE,', 2.598833643460815e-06], ['s_custom_builtins[std::make_pair', 2.598833643460815e-06], ['(HSAIL_OPCODE,', 2.598833643460815e-06], ['HSAIL_TYPE)]', 2.598833643460815e-06], ['brig_function::~brig_function', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT;', 2.598833643460815e-06], ['(m_regs[i]', 2.598833643460815e-06], ['m_regs[i];', 2.598833643460815e-06], ['m_regs[i]', 2.598833643460815e-06], ['brig_function::label', 2.598833643460815e-06], ['m_label_index.find', 2.598833643460815e-06], ['m_label_index.end', 2.598833643460815e-06], ['label_decl', 2.598833643460815e-06], ['m_label_index[name]', 2.598833643460815e-06], ['brig_function::add_arg_variable', 2.598833643460815e-06], ['treeDecl)', 2.598833643460815e-06], ['m_arg_variables[brigVar]', 2.598833643460815e-06], ['treeDecl;', 2.598833643460815e-06], ['brig_function::arg_variable', 2.598833643460815e-06], ['variable_index::const_iterator', 2.598833643460815e-06], ['m_arg_variables.find', 2.598833643460815e-06], ['m_arg_variables.end', 2.598833643460815e-06], ['brig_function::append_kernel_arg', 2.598833643460815e-06], ['*var,', 2.598833643460815e-06], ['(m_is_kernel);', 2.598833643460815e-06], ['m_kernarg_offsets[var]', 2.598833643460815e-06], ['m_next_kernarg_offset;', 2.598833643460815e-06], ['m_kernarg_max_align;', 2.598833643460815e-06], ['brig_function::kernel_arg_offset', 2.598833643460815e-06], ['m_kernarg_offsets.find', 2.598833643460815e-06], ['m_kernarg_offsets.end', 2.598833643460815e-06], ['brig_function::add_id_variables', 2.598833643460815e-06], ['ids.', 2.598833643460815e-06], ['m_kernel_entry', 2.598833643460815e-06], ['dim_char', 2.598833643460815e-06], ['16b', 2.598833643460815e-06], ['32b).', 2.598833643460815e-06], ['m_local_id_vars[i]', 2.598833643460815e-06], ['("__local_")', 2.598833643460815e-06], ['workitemid_call', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_WORKITEMID),', 2.598833643460815e-06], ['id_init', 2.598833643460815e-06], ['m_local_id_vars[i],', 2.598833643460815e-06], ['workitemid_call));', 2.598833643460815e-06], ['(id_init);', 2.598833643460815e-06], ['m_cur_wg_size_vars[i]', 2.598833643460815e-06], ['("__cur_wg_size_")', 2.598833643460815e-06], ['cwgz_call;', 2.598833643460815e-06], ['(BRIG_OPCODE_CURRENTWORKGROUPSIZE,', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_CURRENTWORKGROUPSIZE),', 2.598833643460815e-06], ['limit_init', 2.598833643460815e-06], ['m_cur_wg_size_vars[i],', 2.598833643460815e-06], ['cwgz_call));', 2.598833643460815e-06], ['(limit_init);', 2.598833643460815e-06], ['m_wg_id_vars[i]', 2.598833643460815e-06], ['("__workgroupid_")', 2.598833643460815e-06], ['wgid_call;', 2.598833643460815e-06], ['(BRIG_OPCODE_WORKGROUPID,', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_WORKGROUPID),', 2.598833643460815e-06], ['wgid_init', 2.598833643460815e-06], ['(m_wg_id_vars[i]),', 2.598833643460815e-06], ['m_wg_id_vars[i],', 2.598833643460815e-06], ['wgid_call);', 2.598833643460815e-06], ['(wgid_init);', 2.598833643460815e-06], ['m_wg_size_vars[i]', 2.598833643460815e-06], ['("__workgroupsize_")', 2.598833643460815e-06], ['wgsize_call;', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_WORKGROUPSIZE),', 2.598833643460815e-06], ['wgsize_init', 2.598833643460815e-06], ['(m_wg_size_vars[i]),', 2.598833643460815e-06], ['m_wg_size_vars[i],', 2.598833643460815e-06], ['wgsize_call);', 2.598833643460815e-06], ['(wgsize_init);', 2.598833643460815e-06], ['m_grid_size_vars[i]', 2.598833643460815e-06], ['("__gridsize_")', 2.598833643460815e-06], ['gridsize_call', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_GRIDSIZE),', 2.598833643460815e-06], ['gridsize_init', 2.598833643460815e-06], ['(m_grid_size_vars[i]),', 2.598833643460815e-06], ['m_grid_size_vars[i],', 2.598833643460815e-06], ['gridsize_call);', 2.598833643460815e-06], ['(gridsize_init);', 2.598833643460815e-06], ['m_abs_id_base_vars[i]', 2.598833643460815e-06], ['("__abs_id_base_")', 2.598833643460815e-06], ['m_abs_id_vars[i]', 2.598833643460815e-06], ['("__abs_id_")', 2.598833643460815e-06], ['abs_id_base', 2.598833643460815e-06], ['m_wg_id_vars[i]),', 2.598833643460815e-06], ['m_wg_size_vars[i]));', 2.598833643460815e-06], ['abs_id', 2.598833643460815e-06], ['abs_id_base,', 2.598833643460815e-06], ['m_local_id_vars[i]));', 2.598833643460815e-06], ['abs_id_base_init', 2.598833643460815e-06], ['(m_abs_id_base_vars[i]),', 2.598833643460815e-06], ['m_abs_id_base_vars[i],', 2.598833643460815e-06], ['abs_id_base);', 2.598833643460815e-06], ['(abs_id_base_init);', 2.598833643460815e-06], ['abs_id_init', 2.598833643460815e-06], ['(m_abs_id_vars[i]),', 2.598833643460815e-06], ['m_abs_id_vars[i],', 2.598833643460815e-06], ['abs_id);', 2.598833643460815e-06], ['(abs_id_init);', 2.598833643460815e-06], ['brig_function::add_local_variable', 2.598833643460815e-06], ['(m_func_decl);', 2.598833643460815e-06], ['(scalar,', 2.598833643460815e-06], ['etc.)', 2.598833643460815e-06], ['unoptimizable)', 2.598833643460815e-06], ['(seems', 2.598833643460815e-06], ['BB).', 2.598833643460815e-06], ['brig_function::get_tree_type_for_hsa_reg', 2.598833643460815e-06], ['(reg_size,', 2.598833643460815e-06], ['(m_parent->m_fn_regs_use_index.count', 2.598833643460815e-06], ['(m_name)', 2.598833643460815e-06], ['&index', 2.598833643460815e-06], ['m_parent->m_fn_regs_use_index[m_name];', 2.598833643460815e-06], ['reg_id', 2.598833643460815e-06], ['(index.count', 2.598833643460815e-06], ['(reg_id)', 2.598833643460815e-06], ['index.find', 2.598833643460815e-06], ['(reg_id)->second;', 2.598833643460815e-06], ['it_end', 2.598833643460815e-06], ['it_end;', 2.598833643460815e-06], ['type_bit_size', 2.598833643460815e-06], ['(it->first)', 2.598833643460815e-06], ['(type_bit_size', 2.598833643460815e-06], ['reg_size)', 2.598833643460815e-06], ['(it->second', 2.598833643460815e-06], ['max_refs_as_type_count)', 2.598833643460815e-06], ['DECL_VAR', 2.598833643460815e-06], ['generated,', 2.598833643460815e-06], ['brig_function::get_m_var_declfor_reg', 2.598833643460815e-06], ['reg_decl_index_entry', 2.598833643460815e-06], ['*regEntry', 2.598833643460815e-06], ['m_regs[offset];', 2.598833643460815e-06], ['(regEntry', 2.598833643460815e-06], ['(reg_size', 2.598833643460815e-06], ['get_tree_type_for_hsa_reg', 2.598833643460815e-06], ['qualifier', 2.598833643460815e-06], ['nonconst_type', 2.598833643460815e-06], ['regEntry', 2.598833643460815e-06], ['reg_decl_index_entry;', 2.598833643460815e-06], ['regEntry->m_var_decl', 2.598833643460815e-06], ['(gccbrig_reg_name', 2.598833643460815e-06], ['(reg),', 2.598833643460815e-06], ['nonconst_type);', 2.598833643460815e-06], ['m_regs[offset]', 2.598833643460815e-06], ['regEntry;', 2.598833643460815e-06], ['regEntry->m_var_decl;', 2.598833643460815e-06], ['do..while', 2.598833643460815e-06], ['DIM.', 2.598833643460815e-06], ['HEADER_ENTRY', 2.598833643460815e-06], ['starts.', 2.598833643460815e-06], ['BRANCH_AFTER', 2.598833643460815e-06], ['appended.', 2.598833643460815e-06], ['brig_function::add_wi_loop', 2.598833643460815e-06], ['dim,', 2.598833643460815e-06], ['*header_entry,', 2.598833643460815e-06], ['*branch_after)', 2.598833643460815e-06], ['ivar', 2.598833643460815e-06], ['m_local_id_vars[dim];', 2.598833643460815e-06], ['abs_id_base_var', 2.598833643460815e-06], ['m_abs_id_base_vars[dim];', 2.598833643460815e-06], ['abs_id_var', 2.598833643460815e-06], ['ivar_max', 2.598833643460815e-06], ['*header_entry;', 2.598833643460815e-06], ['"register', 2.598833643460815e-06], ['variables"', 2.598833643460815e-06], ['ivar_init', 2.598833643460815e-06], ['ivar_init,', 2.598833643460815e-06], ['abs_id_var_init', 2.598833643460815e-06], ['abs_id_base_var));', 2.598833643460815e-06], ['abs_id_var_init,', 2.598833643460815e-06], ['loop_body_label', 2.598833643460815e-06], ['("__wi_loop_")', 2.598833643460815e-06], ['dim));', 2.598833643460815e-06], ['loop_body_label_stmt', 2.598833643460815e-06], ['loop_body_label_stmt,', 2.598833643460815e-06], ['(m_has_unexpanded_dp_builtins)', 2.598833643460815e-06], ['(!flag_assume_phsa)', 2.598833643460815e-06], ['id_set_builtin', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_SETWORKITEMID);', 2.598833643460815e-06], ['wi-loop', 2.598833643460815e-06], ['id_set_call', 2.598833643460815e-06], ['(id_set_builtin,', 2.598833643460815e-06], ['dim),', 2.598833643460815e-06], ['ivar),', 2.598833643460815e-06], ['id_set_call,', 2.598833643460815e-06], ['ivar));', 2.598833643460815e-06], ['incr', 2.598833643460815e-06], ['incr,', 2.598833643460815e-06], ['...and', 2.598833643460815e-06], ['abs_id_incr', 2.598833643460815e-06], ['(abs_id_var)));', 2.598833643460815e-06], ['abs_id_incr,', 2.598833643460815e-06], ['goto.', 2.598833643460815e-06], ['ivar_max);', 2.598833643460815e-06], ['if_stmt,', 2.598833643460815e-06], ['analyzes', 2.598833643460815e-06], ['brig_function::analyze_calls', 2.598833643460815e-06], ['(m_calls_analyzed)', 2.598833643460815e-06], ['stuck', 2.598833643460815e-06], ['graphs.', 2.598833643460815e-06], ['m_called_functions.size', 2.598833643460815e-06], ['m_called_functions[i];', 2.598833643460815e-06], ['*called_f', 2.598833643460815e-06], ['m_parent->get_finished_function', 2.598833643460815e-06], ['(called_f', 2.598833643460815e-06], ['Unfinished', 2.598833643460815e-06], ['(only', 2.598833643460815e-06], ['BRIGs)', 2.598833643460815e-06], ['CG', 2.598833643460815e-06], ['safety.', 2.598833643460815e-06], ['called_f->analyze_calls', 2.598833643460815e-06], ['reanalyze', 2.598833643460815e-06], ['called_f->m_has_barriers;', 2.598833643460815e-06], ['opposite,', 2.598833643460815e-06], ['called_f->m_has_unexpanded_dp_builtins;', 2.598833643460815e-06], ['Tries', 2.598833643460815e-06], ['successful.', 2.598833643460815e-06], ['brig_function::convert_to_wg_function', 2.598833643460815e-06], ['(!m_calls_analyzed)', 2.598833643460815e-06], ['analyze_calls', 2.598833643460815e-06], ['(m_has_barriers', 2.598833643460815e-06], ['m_has_function_calls_with_barriers)', 2.598833643460815e-06], ['function_exit', 2.598833643460815e-06], ['add_wi_loop', 2.598833643460815e-06], ['&m_kernel_entry,', 2.598833643460815e-06], ['&function_exit);', 2.598833643460815e-06], ['utilized', 2.598833643460815e-06], ['brig_function::emit_metadata', 2.598833643460815e-06], ['stmt_list)', 2.598833643460815e-06], ['disgusting,', 2.598833643460815e-06], ['life', 2.598833643460815e-06], [';)', 2.598833643460815e-06], ['m_name;', 2.598833643460815e-06], ['".pushsection', 2.598833643460815e-06], ['PHSA_DESC_SECTION_PREFIX', 2.598833643460815e-06], ['"\\t.p2align', 2.598833643460815e-06], ['"\\t.byte', 2.598833643460815e-06], ['(phsa_descriptor);', 2.598833643460815e-06], ['"0x"', 2.598833643460815e-06], ['std::setw', 2.598833643460815e-06], ['std::setfill', 2.598833643460815e-06], ["('0')", 2.598833643460815e-06], ['std::hex', 2.598833643460815e-06], ['*((unsigned', 2.598833643460815e-06], ['&m_descriptor', 2.598833643460815e-06], ['(phsa_descriptor))', 2.598833643460815e-06], ['".popsection"', 2.598833643460815e-06], ['metadata_asm', 2.598833643460815e-06], ['(strstr.str', 2.598833643460815e-06], ['().size', 2.598833643460815e-06], ['().c_str', 2.598833643460815e-06], ['(metadata_asm,', 2.598833643460815e-06], ['metadata_asm;', 2.598833643460815e-06], ['device-side', 2.598833643460815e-06], ['C:', 2.598833643460815e-06], ['__hsail_launch_kernel', 2.598833643460815e-06], ['successful', 2.598833643460815e-06], ['__hsail_launch_wg_function', 2.598833643460815e-06], ['user/host', 2.598833643460815e-06], ['outside.', 2.598833643460815e-06], ['_KernelName.', 2.598833643460815e-06], ['brig_function::emit_launcher_and_metadata', 2.598833643460815e-06], ['(kern_name.c_str', 2.598833643460815e-06], ['kern_name.size', 2.598833643460815e-06], ['restrict_void_ptr;', 2.598833643460815e-06], ['group_base_addr_arg', 2.598833643460815e-06], ['group_base_addr_arg);', 2.598833643460815e-06], ['(launcher))', 2.598833643460815e-06], ['(launcher));', 2.598833643460815e-06], ['kernel_func_ptr', 2.598833643460815e-06], ['m_func_decl);', 2.598833643460815e-06], ['phsail_launch_kernel_call;', 2.598833643460815e-06], ['group_local_offset_temp', 2.598833643460815e-06], ['"group_local_offset");', 2.598833643460815e-06], ['group_local_offset_temp,', 2.598833643460815e-06], ['m_parent->m_module_group_variables.size()));', 2.598833643460815e-06], ['(m_is_wg_function)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_LAUNCH_WG_FUNC),', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_LAUNCH_KERNEL),', 2.598833643460815e-06], ['(phsail_launch_kernel_call,', 2.598833643460815e-06], ['emit_metadata', 2.598833643460815e-06], ['(stmt_list);', 2.598833643460815e-06], ['brig_function::append_statement', 2.598833643460815e-06], ['"alloca', 2.598833643460815e-06], ['frame"', 2.598833643460815e-06], ['injecting', 2.598833643460815e-06], ['brig_function::create_alloca_frame', 2.598833643460815e-06], ['m_kernel_entry;', 2.598833643460815e-06], ['push_frame_builtin', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_PUSH_FRAME);', 2.598833643460815e-06], ['push_frame_call', 2.598833643460815e-06], ['(push_frame_builtin,', 2.598833643460815e-06], ['push_frame_call,', 2.598833643460815e-06], ['pop_frame_builtin', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_POP_FRAME);', 2.598833643460815e-06], ['pop_frame_call', 2.598833643460815e-06], ['(pop_frame_builtin,', 2.598833643460815e-06], ['pop_frame_call,', 2.598833643460815e-06], ['TSI_SAME_STMT);', 2.598833643460815e-06], ['tsi_next', 2.598833643460815e-06], ['(&entry);', 2.598833643460815e-06], ['(!tsi_end_p', 2.598833643460815e-06], ['(entry));', 2.598833643460815e-06], ['Finishes', 2.598833643460815e-06], ['appeneded', 2.598833643460815e-06], ['brig_function::finish', 2.598833643460815e-06], ['brig_function::finish_kernel', 2.598833643460815e-06], ['Kernel', 2.598833643460815e-06], ['(build_stmt', 2.598833643460815e-06], ['m_exit_label));', 2.598833643460815e-06], ['convert_to_wg_function', 2.598833643460815e-06], ['brig_function::append_return_stmt', 2.598833643460815e-06], ['(m_current_bind_expr', 2.598833643460815e-06], ['(m_current_bind_expr);', 2.598833643460815e-06], ['(STATEMENT_LIST_TAIL', 2.598833643460815e-06], ['last_stmt', 2.598833643460815e-06], ['(tsi_last', 2.598833643460815e-06], ['(stmts));', 2.598833643460815e-06], ['(last_stmt)', 2.598833643460815e-06], ['(m_ret_value', 2.598833643460815e-06], ['(m_ret_value),', 2.598833643460815e-06], ['m_ret_value,', 2.598833643460815e-06], ['m_ret_temp);', 2.598833643460815e-06], ['(result_assign),', 2.598833643460815e-06], ['result_assign);', 2.598833643460815e-06], ['(return_expr,', 2.598833643460815e-06], ['return_stmt', 2.598833643460815e-06], ['(return_stmt,', 2.598833643460815e-06], ['brig_function::has_function_scope_var', 2.598833643460815e-06], ['BrigBase*', 2.598833643460815e-06], ['m_function_scope_vars.find', 2.598833643460815e-06], ['m_function_scope_vars.end', 2.598833643460815e-06], ['brig_function::group_variable_segment_offset', 2.598833643460815e-06], ['(m_local_group_variables.has_variable', 2.598833643460815e-06], ['m_local_group_variables.segment_offset', 2.598833643460815e-06], ['(m_parent->m_module_group_variables.has_variable', 2.598833643460815e-06], ['m_parent->m_module_group_variables.segment_offset', 2.598833643460815e-06], ['opcode/type,', 2.598833643460815e-06], ['brig_function::expand_or_call_builtin', 2.598833643460815e-06], ['(can_expand_builtin', 2.598833643460815e-06], ['get_builtin_for_hsa_opcode', 2.598833643460815e-06], ['(built_in)))', 2.598833643460815e-06], ['BRIG_OPCODE_LERP', 2.598833643460815e-06], ['BRIG_OPCODE_PACKCVT', 2.598833643460815e-06], ['BRIG_OPCODE_SADHI)', 2.598833643460815e-06], ['(operand0_elements.size', 2.598833643460815e-06], ['(operand0_elements.at', 2.598833643460815e-06], ['(operand1_elements.size', 2.598833643460815e-06], ['(operand1_elements.at', 2.598833643460815e-06], ['(expand_or_call_builtin', 2.598833643460815e-06], ['operand_types;', 2.598833643460815e-06], ['(built_in));', 2.598833643460815e-06], ['operands[i]));', 2.598833643460815e-06], ['(m_context_arg);', 2.598833643460815e-06], ['(ptr_type_node);', 2.598833643460815e-06], ['call_operands.size', 2.598833643460815e-06], ['call_operands.resize', 2.598833643460815e-06], ['operand_types.resize', 2.598833643460815e-06], ['(operand_types.at', 2.598833643460815e-06], ['(built_in);', 2.598833643460815e-06], ['operand_count,', 2.598833643460815e-06], ['&call_operands[0]);', 2.598833643460815e-06], ['mechanism', 2.598833643460815e-06], ['beneficial', 2.598833643460815e-06], ['identification', 2.598833643460815e-06], ['unanalyzable', 2.598833643460815e-06], ['box', 2.598833643460815e-06], ['vectorizable', 2.598833643460815e-06], ['multi', 2.598833643460815e-06], ['work-groups.', 2.598833643460815e-06], ['identifies', 2.598833643460815e-06], ['brig_function::expand_builtin', 2.598833643460815e-06], ['BRIG_OPCODE_WORKITEMFLATABSID)', 2.598833643460815e-06], ['id0);', 2.598833643460815e-06], ['id1);', 2.598833643460815e-06], ['uint32_2);', 2.598833643460815e-06], ['id2);', 2.598833643460815e-06], ['m_grid_size_vars[0]);', 2.598833643460815e-06], ['m_grid_size_vars[1]);', 2.598833643460815e-06], ['id2,', 2.598833643460815e-06], ['id2_x_max0_x_max1,', 2.598833643460815e-06], ['max1);', 2.598833643460815e-06], ['id1_x_max0', 2.598833643460815e-06], ['id1,', 2.598833643460815e-06], ['id0,', 2.598833643460815e-06], ['id1_x_max0);', 2.598833643460815e-06], ['id2_x_max0_x_max1);', 2.598833643460815e-06], ['("workitemflatabsid",', 2.598833643460815e-06], ['BRIG_OPCODE_WORKITEMABSID)', 2.598833643460815e-06], ['BRIG_OPCODE_WORKITEMFLATID)', 2.598833643460815e-06], ['wg_size_x', 2.598833643460815e-06], ['wg_size_y', 2.598833643460815e-06], ['uint32_2)),', 2.598833643460815e-06], ['z_x_wgsx_wgsy,', 2.598833643460815e-06], ['wg_size_y);', 2.598833643460815e-06], ['y_x_wgsx', 2.598833643460815e-06], ['uint32_1)),', 2.598833643460815e-06], ['y_x_wgsx,', 2.598833643460815e-06], ['z_x_wgsx_wgsy);', 2.598833643460815e-06], ['uint32_0)),', 2.598833643460815e-06], ['("workitemflatid",', 2.598833643460815e-06], ['BRIG_OPCODE_WORKGROUPSIZE)', 2.598833643460815e-06], ['PHSA_CONTEXT_WG_SIZES', 2.598833643460815e-06], ['("wgsize_x");', 2.598833643460815e-06], ['phsa', 2.598833643460815e-06], ['temps', 2.598833643460815e-06], ['LICM', 2.598833643460815e-06], ['m_wg_size_vars[dim];', 2.598833643460815e-06], ['BRIG_OPCODE_WORKITEMID)', 2.598833643460815e-06], ['m_local_id_vars', 2.598833643460815e-06], ['PHSA_CONTEXT_OFFS_WI_IDS', 2.598833643460815e-06], ['("wiid_x");', 2.598833643460815e-06], ['BRIG_OPCODE_WORKGROUPID)', 2.598833643460815e-06], ['PHSA_CONTEXT_OFFS_WG_IDS', 2.598833643460815e-06], ['("wgid_x");', 2.598833643460815e-06], ['m_wg_id_vars', 2.598833643460815e-06], ['BRIG_OPCODE_CURRENTWORKGROUPSIZE)', 2.598833643460815e-06], ['PHSA_CONTEXT_CURRENT_WG_SIZES', 2.598833643460815e-06], ['("curwgsize_x");', 2.598833643460815e-06], ['brig_function::can_expand_builtin', 2.598833643460815e-06], ['flag_assume_phsa;', 2.598833643460815e-06], ['m_is_kernel;', 2.598833643460815e-06], ['brig_function::get_builtin_for_hsa_opcode', 2.598833643460815e-06], ['BrigOpcode16_t', 2.598833643460815e-06], ['BUILT_IN_FLOOR);', 2.598833643460815e-06], ['BUILT_IN_CEIL);', 2.598833643460815e-06], ['BUILT_IN_SQRT);', 2.598833643460815e-06], ['BUILT_IN_RINT);', 2.598833643460815e-06], ['BUILT_IN_TRUNC);', 2.598833643460815e-06], ['BUILT_IN_SIN);', 2.598833643460815e-06], ['BUILT_IN_LOG2);', 2.598833643460815e-06], ['BUILT_IN_EXP2);', 2.598833643460815e-06], ['BUILT_IN_FMA);', 2.598833643460815e-06], ['BUILT_IN_COS);', 2.598833643460815e-06], ['Popcount', 2.598833643460815e-06], ['u32).', 2.598833643460815e-06], ['b64', 2.598833643460815e-06], ['b32', 2.598833643460815e-06], ['(BUILT_IN_POPCOUNTL);', 2.598833643460815e-06], ['BRIG_OPCODE_BORROW:', 2.598833643460815e-06], ['Borrow', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_BORROW_U32);', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_BORROW_U64);', 2.598833643460815e-06], ['BRIG_OPCODE_CARRY:', 2.598833643460815e-06], ['Carry', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_CARRY_U32);', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_CARRY_U64);', 2.598833643460815e-06], ["'case'", 2.598833643460815e-06], ['brig_inner_type));', 2.598833643460815e-06], ['BRIG_TYPE_F32));', 2.598833643460815e-06], ['mathfn', 2.598833643460815e-06], ['builtin?', 2.598833643460815e-06], ['vec_builtin', 2.598833643460815e-06], ['targetm.vectorize.builtin_vectorized_function', 2.598833643460815e-06], ['(builtin_mathfn_code', 2.598833643460815e-06], ['(vec_builtin', 2.598833643460815e-06], ['vec_builtin;', 2.598833643460815e-06], ['references)', 2.598833643460815e-06], ['ELEMENTS.', 2.598833643460815e-06], ['brig_function::unpack', 2.598833643460815e-06], ['(value)))', 2.598833643460815e-06], ['("unpack_input",', 2.598833643460815e-06], ['bitsize_int(i', 2.598833643460815e-06], ['element_size));', 2.598833643460815e-06], ['(element);', 2.598833643460815e-06], ['Pack', 2.598833643460815e-06], ['brig_function::pack', 2.598833643460815e-06], ['elements.size', 2.598833643460815e-06], ['(element_count', 2.598833643460815e-06], ['(elements.at', 2.598833643460815e-06], ['elements.at', 2.598833643460815e-06], ['brig_function::needs_workitem_context_data', 2.598833643460815e-06], ['BRIG_OPCODE_CURRENTWORKITEMFLATID:', 2.598833643460815e-06], ['BRIG_OPCODE_GRIDGROUPS:', 2.598833643460815e-06], ['BRIG_OPCODE_GRIDSIZE:', 2.598833643460815e-06], ['BRIG_OPCODE_DIM:', 2.598833643460815e-06], ['BRIG_OPCODE_PACKETID:', 2.598833643460815e-06], ['BRIG_OPCODE_PACKETCOMPLETIONSIG:', 2.598833643460815e-06], ['BRIG_OPCODE_BARRIER:', 2.598833643460815e-06], ['BRIG_OPCODE_WAVEBARRIER:', 2.598833643460815e-06], ['BRIG_OPCODE_CUID:', 2.598833643460815e-06], ['BRIG_OPCODE_MAXCUID:', 2.598833643460815e-06], ['BRIG_OPCODE_GROUPBASEPTR:', 2.598833643460815e-06], ['BRIG_OPCODE_KERNARGBASEPTR:', 2.598833643460815e-06], ['BRIG_OPCODE_ALLOCA:', 2.598833643460815e-06], ['accompanying', 2.598833643460815e-06], ['brig_function::add_temp_var', 2.598833643460815e-06], ['name.c_str', 2.598833643460815e-06], ['(temp_var),', 2.598833643460815e-06], ['temp_var,', 2.598833643460815e-06], ['temp_var;', 2.598833643460815e-06], ['(BRIG_OPCODE)', 2.598833643460815e-06], ['(BRIG_TYPE).', 2.598833643460815e-06], ['nodes)', 2.598833643460815e-06], ['BRIG_OPCODE_NOP:', 2.598833643460815e-06], ['NOP_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_ADD:', 2.598833643460815e-06], ['BRIG_OPCODE_CMOV:', 2.598833643460815e-06], ['COND_EXPR;', 2.598833643460815e-06], ['VEC_COND_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_SUB:', 2.598833643460815e-06], ['BRIG_OPCODE_MUL:', 2.598833643460815e-06], ['BRIG_OPCODE_MUL24:', 2.598833643460815e-06], ['BRIG_OPCODE_MULHI:', 2.598833643460815e-06], ['BRIG_OPCODE_MUL24HI:', 2.598833643460815e-06], ['MULT_HIGHPART_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_DIV:', 2.598833643460815e-06], ['BRIG_OPCODE_NEG:', 2.598833643460815e-06], ['BRIG_OPCODE_MIN:', 2.598833643460815e-06], ['MIN_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_MAX:', 2.598833643460815e-06], ['MAX_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_ABS:', 2.598833643460815e-06], ['ABS_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_SHL:', 2.598833643460815e-06], ['BRIG_OPCODE_SHR:', 2.598833643460815e-06], ['BRIG_OPCODE_OR:', 2.598833643460815e-06], ['BRIG_OPCODE_XOR:', 2.598833643460815e-06], ['BRIG_OPCODE_AND:', 2.598833643460815e-06], ['BRIG_OPCODE_NOT:', 2.598833643460815e-06], ['BRIG_OPCODE_RET:', 2.598833643460815e-06], ['RETURN_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_MOV:', 2.598833643460815e-06], ['BRIG_OPCODE_LDF:', 2.598833643460815e-06], ['BRIG_OPCODE_LD:', 2.598833643460815e-06], ['MEM_REF;', 2.598833643460815e-06], ['GOTO_EXPR;', 2.598833643460815e-06], ['BRIG_OPCODE_REM:', 2.598833643460815e-06], ['BRIG_OPCODE_NRCP:', 2.598833643460815e-06], ['BRIG_OPCODE_NRSQRT:', 2.598833643460815e-06], ['1/f', 2.598833643460815e-06], ['(x).', 2.598833643460815e-06], ['available,', 2.598833643460815e-06], ['BRIG_OPCODE_CLASS:', 2.598833643460815e-06], ['(s_custom_builtins.find', 2.598833643460815e-06], ['brig_inner_type))', 2.598833643460815e-06], ['BRIG_TYPE_F32))', 2.598833643460815e-06], ['Emulate', 2.598833643460815e-06], ['Inform', 2.598833643460815e-06], ['REG_VAR.', 2.598833643460815e-06], ['brig_function::add_reg_var_update', 2.598833643460815e-06], ['reg_var,', 2.598833643460815e-06], ['m_abs_id_vars[0]', 2.598833643460815e-06], ['m_abs_id_vars[1]', 2.598833643460815e-06], ['m_abs_id_vars[2]', 2.598833643460815e-06], ['m_local_id_vars[0]', 2.598833643460815e-06], ['m_local_id_vars[1]', 2.598833643460815e-06], ['m_local_id_vars[2])', 2.598833643460815e-06], ['m_id_val_defs', 2.598833643460815e-06], ['[reg_var]', 2.598833643460815e-06], ['Possible', 2.598833643460815e-06], ['m_id_val_defs.erase', 2.598833643460815e-06], ['brig_function::is_id_val', 2.598833643460815e-06], ['m_id_val_defs.end();', 2.598833643460815e-06], ['brig_function::id_val', 2.598833643460815e-06], ['Informs', 2.598833643460815e-06], ['brig_function::start_new_bb', 2.598833643460815e-06], ['m_id_val_defs.clear', 2.598833643460815e-06], ['wb.cc', 2.598833643460815e-06], ['cleanups.', 2.598833643460815e-06], ['Mark_address_taken(Gogo*', 2.598833643460815e-06], ['find_makeslice_call(Expression*);', 2.598833643460815e-06], ['Mark_address_taken::function(Named_object*', 2.598833643460815e-06], ['Mark_address_taken::statement(Block*', 2.598833643460815e-06], ['append(s,', 2.598833643460815e-06], ['!as->lhs()->is_sink_expression())', 2.598833643460815e-06], ['rce', 2.598833643460815e-06], ['as->rhs()->call_expression();', 2.598833643460815e-06], ['(rce', 2.598833643460815e-06], ['rce->builtin_call_expression()', 2.598833643460815e-06], ['(rce->builtin_call_expression()->code()', 2.598833643460815e-06], ['Expression::is_same_variable(as->lhs(),', 2.598833643460815e-06], ['rce->args()->front()))', 2.598833643460815e-06], ['rce->builtin_call_expression()->flatten_append(this->gogo_,', 2.598833643460815e-06], ['as->lhs(),', 2.598833643460815e-06], ['go_assert(a', 2.598833643460815e-06], ['s->location());', 2.598833643460815e-06], ['Statement::make_statement(e,', 2.598833643460815e-06], ['dummy);', 2.598833643460815e-06], ["Slice_value_expression's", 2.598833643460815e-06], ['valmem', 2.598833643460815e-06], ['makeslice.', 2.598833643460815e-06], ['Mark_address_taken::find_makeslice_call(Expression*', 2.598833643460815e-06], ['Unsafe_type_conversion_expression*', 2.598833643460815e-06], ['utce', 2.598833643460815e-06], ['expr->unsafe_conversion_expression();', 2.598833643460815e-06], ['(utce', 2.598833643460815e-06], ['utce->expr();', 2.598833643460815e-06], ['fe->runtime_code()', 2.598833643460815e-06], ['Runtime::MAKESLICE)', 2.598833643460815e-06], ['MAKESLICE64', 2.598833643460815e-06], ['bcause', 2.598833643460815e-06], ['Mark_address_taken::expression(Expression**', 2.598833643460815e-06], ['expr->unary_expression();', 2.598833643460815e-06], ['ue->check_operand_address_taken(this->gogo_);', 2.598833643460815e-06], ['(n->child()', 2.598833643460815e-06], ['(n->child()->encoding()', 2.598833643460815e-06], ['aie->array()->address_taken(escapes);', 2.598833643460815e-06], ['(expr->allocation_expression()', 2.598833643460815e-06], ['expr->allocation_expression()->set_allocate_on_stack();', 2.598833643460815e-06], ['(expr->heap_expression()', 2.598833643460815e-06], ['expr->heap_expression()->set_allocate_on_stack();', 2.598833643460815e-06], ['(expr->slice_literal()', 2.598833643460815e-06], ['expr->slice_literal()->set_storage_does_not_escape();', 2.598833643460815e-06], ['non-escaping', 2.598833643460815e-06], ['makeslice', 2.598833643460815e-06], ['Slice_value_expression*', 2.598833643460815e-06], ['sve', 2.598833643460815e-06], ['expr->slice_value_expression();', 2.598833643460815e-06], ['(sve', 2.598833643460815e-06], ['this->find_makeslice_call(sve->valmem());', 2.598833643460815e-06], ['Node::make_node(call)->encoding()', 2.598833643460815e-06], ['call->args()->at(1);', 2.598833643460815e-06], ['elmt_type', 2.598833643460815e-06], ['expr->type()->array_type()->element_type();', 2.598833643460815e-06], ['len_expr', 2.598833643460815e-06], ['Expression::make_integer_ul(vcap,', 2.598833643460815e-06], ['cap_arg->type(),', 2.598833643460815e-06], ['Type::make_array_type(elmt_type,', 2.598833643460815e-06], ['len_expr);', 2.598833643460815e-06], ['Expression::make_allocation(array_type,', 2.598833643460815e-06], ['Type::make_pointer_type(elmt_type);', 2.598833643460815e-06], ['Expression::make_unsafe_cast(ptr_type,', 2.598833643460815e-06], ['alloc,', 2.598833643460815e-06], ['Expression::make_slice_value(expr->type(),', 2.598833643460815e-06], ['slice;', 2.598833643460815e-06], ['Check_escape(Gogo*', 2.598833643460815e-06], ['Traverse(traverse_expressions', 2.598833643460815e-06], ['Check_escape::variable(Named_object*', 2.598833643460815e-06], ['no->var_value()->is_in_heap())', 2.598833643460815e-06], ['no->result_var_value()->is_in_heap()))', 2.598833643460815e-06], ['Check_escape::expression(Expression**', 2.598833643460815e-06], ['(n->encoding()', 2.598833643460815e-06], ['"heap-allocated', 2.598833643460815e-06], ['runtime");', 2.598833643460815e-06], ['writebarrierrec', 2.598833643460815e-06], ['//go:nowritebarrierrec.', 2.598833643460815e-06], ['Collect_writebarrierrec_functions(std::vector<Named_object*>*', 2.598833643460815e-06], ['Collect_writebarrierrec_functions::function(Named_object*', 2.598833643460815e-06], ['(no->func_value()->pragmas()', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIERREC)', 2.598833643460815e-06], ['go_assert((no->func_value()->pragmas()', 2.598833643460815e-06], ['Collect_callees(std::vector<Named_object*>*', 2.598833643460815e-06], ['Collect_callees::expression(Expression**', 2.598833643460815e-06], ['runtime.systemstack', 2.598833643460815e-06], ['special,', 2.598833643460815e-06], ['runtime:', 2.598833643460815e-06], ['"systemstack")', 2.598833643460815e-06], ['(ce->args()->size()', 2.598833643460815e-06], ['ce->args()->front()->func_expression();', 2.598833643460815e-06], ['annotations.', 2.598833643460815e-06], ['recursively,', 2.598833643460815e-06], ['Except', 2.598833643460815e-06], ['//go:yeswritebarrierrec', 2.598833643460815e-06], ['annotation', 2.598833643460815e-06], ['//go:nowritebarrier,', 2.598833643460815e-06], ['Gogo::propagate_writebarrierrec()', 2.598833643460815e-06], ['cwf(&worklist);', 2.598833643460815e-06], ['this->traverse(&cwf);', 2.598833643460815e-06], ['cc(&worklist);', 2.598833643460815e-06], ['(!worklist.empty())', 2.598833643460815e-06], ['worklist.back();', 2.598833643460815e-06], ['worklist.pop_back();', 2.598833643460815e-06], ['no->func_value()->pragmas();', 2.598833643460815e-06], ['GOPRAGMA_YESWRITEBARRIERREC)', 2.598833643460815e-06], ['callees.', 2.598833643460815e-06], ['no->func_value()->set_pragmas(pragmas', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIER', 2.598833643460815e-06], ['GOPRAGMA_MARK);', 2.598833643460815e-06], ['no->func_value()->traverse(&cc);', 2.598833643460815e-06], ['concurrent', 2.598833643460815e-06], ['enables', 2.598833643460815e-06], ['runtime.writeBarrier.enabled.', 2.598833643460815e-06], ['Essentially,', 2.598833643460815e-06], ['rate', 2.598833643460815e-06], ['runtime.writeBarrier.enabled', 2.598833643460815e-06], ['typedmemmove(typeof(A),', 2.598833643460815e-06], ['&A,', 2.598833643460815e-06], ['&B)', 2.598833643460815e-06], ['runtime.writeBarrier.Enabled', 2.598833643460815e-06], ['*uint32,', 2.598833643460815e-06], ['*runtime.writeBarrier', 2.598833643460815e-06], ['(pointers,', 2.598833643460815e-06], ['maps,', 2.598833643460815e-06], ['chans,', 2.598833643460815e-06], ['funcs),', 2.598833643460815e-06], ['typedmemmove', 2.598833643460815e-06], ['gcWriteBarrier(&A,', 2.598833643460815e-06], ['B).', 2.598833643460815e-06], ['concerned,', 2.598833643460815e-06], ['goroutine', 2.598833643460815e-06], ['preempted,', 2.598833643460815e-06], ['gcWriteBarrier', 2.598833643460815e-06], ['moves.', 2.598833643460815e-06], ['Write_barriers(Gogo*', 2.598833643460815e-06], ['traverse_variables', 2.598833643460815e-06], ['function_(NULL),', 2.598833643460815e-06], ['statements_added_()', 2.598833643460815e-06], ['Statement_inserter::Statements', 2.598833643460815e-06], ['statements_added_;', 2.598833643460815e-06], ['Write_barriers::function(Named_object*', 2.598833643460815e-06], ['this->function_->traverse(this);', 2.598833643460815e-06], ['variable:', 2.598833643460815e-06], ['rarely', 2.598833643460815e-06], ['background', 2.598833643460815e-06], ['runtime.GC.', 2.598833643460815e-06], ['Write_barriers::variable(Named_object*', 2.598833643460815e-06], ['(!var->is_global())', 2.598833643460815e-06], ['Expression::make_cast(var->type(),', 2.598833643460815e-06], ['(!var->has_pre_init()', 2.598833643460815e-06], ['init->is_static_initializer())', 2.598833643460815e-06], ['pre_init', 2.598833643460815e-06], ['change,', 2.598833643460815e-06], ['(since', 2.598833643460815e-06], ['it).', 2.598833643460815e-06], ['self-dependency', 2.598833643460815e-06], ['this->gogo_->check_self_dep(no);', 2.598833643460815e-06], ['inserter(this->gogo_,', 2.598833643460815e-06], ['this->gogo_->assign_with_write_barrier(NULL,', 2.598833643460815e-06], ['this->statements_added_.insert(s);', 2.598833643460815e-06], ['Write_barriers::statement(Block*', 2.598833643460815e-06], ['(this->statements_added_.find(s)', 2.598833643460815e-06], ['this->statements_added_.end())', 2.598833643460815e-06], ['vds->var();', 2.598833643460815e-06], ['inserter(block,', 2.598833643460815e-06], ['inserter.insert(s);', 2.598833643460815e-06], ['(as->omit_write_barrier())', 2.598833643460815e-06], ['as->lhs();', 2.598833643460815e-06], ['as->rhs();', 2.598833643460815e-06], ['(!this->gogo_->assign_needs_write_barrier(lhs))', 2.598833643460815e-06], ['as->location();', 2.598833643460815e-06], ['Gogo::add_write_barriers()', 2.598833643460815e-06], ['mat(this);', 2.598833643460815e-06], ['this->traverse(&mat);', 2.598833643460815e-06], ['this->propagate_writebarrierrec();', 2.598833643460815e-06], ['chk(this);', 2.598833643460815e-06], ['this->traverse(&chk);', 2.598833643460815e-06], ['wb(this);', 2.598833643460815e-06], ['this->traverse(&wb);', 2.598833643460815e-06], ['Gogo::write_barrier_variable()', 2.598833643460815e-06], ['(write_barrier_var', 2.598833643460815e-06], ['Type::make_array_type(this->lookup_global("byte")->type_value(),', 2.598833643460815e-06], ['uint64_type', 2.598833643460815e-06], ['wb_type', 2.598833643460815e-06], ['"enabled",', 2.598833643460815e-06], ['"needed",', 2.598833643460815e-06], ['"cgo",', 2.598833643460815e-06], ['"alignme",', 2.598833643460815e-06], ['uint64_type);', 2.598833643460815e-06], ['Variable(wb_type,', 2.598833643460815e-06], ['this->add_imported_package("runtime",', 2.598833643460815e-06], ['write_barrier_var', 2.598833643460815e-06], ['Named_object::make_variable("writeBarrier",', 2.598833643460815e-06], ['Gogo::assign_needs_write_barrier(Expression*', 2.598833643460815e-06], ['lhs)', 2.598833643460815e-06], ['(!lhs->type()->has_pointer())', 2.598833643460815e-06], ['(!lhs->type()->in_heap())', 2.598833643460815e-06], ['(lhs->type()->points_to()', 2.598833643460815e-06], ['!lhs->type()->points_to()->in_heap())', 2.598833643460815e-06], ['lhs->field_reference_expression();', 2.598833643460815e-06], ['fre->expr();', 2.598833643460815e-06], ['lhs->array_index_expression();', 2.598833643460815e-06], ['(lhs->temporary_reference_expression()', 2.598833643460815e-06], ['(lhs->is_sink_expression())', 2.598833643460815e-06], ['lhs->var_expression();', 2.598833643460815e-06], ['!var->is_in_heap())', 2.598833643460815e-06], ['rvar', 2.598833643460815e-06], ['(!rvar->is_in_heap())', 2.598833643460815e-06], ['lhs->type()->struct_type();', 2.598833643460815e-06], ['(!ft->has_pointer())', 2.598833643460815e-06], ['(!ft->in_heap())', 2.598833643460815e-06], ['(ft->points_to()', 2.598833643460815e-06], ['!ft->points_to()->in_heap())', 2.598833643460815e-06], ['(!in_heap)', 2.598833643460815e-06], ['Gogo::assign_with_write_barrier(Function*', 2.598833643460815e-06], ['(function->pragmas()', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIER)', 2.598833643460815e-06], ['"write', 2.598833643460815e-06], ['prohibited");', 2.598833643460815e-06], ['lhs->type();', 2.598833643460815e-06], ['go_assert(type->has_pointer());', 2.598833643460815e-06], ['addr;', 2.598833643460815e-06], ['(lhs->unary_expression()', 2.598833643460815e-06], ['lhs->unary_expression()->op()', 2.598833643460815e-06], ['lhs->unary_expression()->operand();', 2.598833643460815e-06], ['addr->unary_expression()->set_does_not_escape();', 2.598833643460815e-06], ['lhs_temp', 2.598833643460815e-06], ['inserter->insert(lhs_temp);', 2.598833643460815e-06], ['(!Type::are_identical(type,', 2.598833643460815e-06], ['rhs->type()->interface_type()', 2.598833643460815e-06], ['!rhs->is_variable())', 2.598833643460815e-06], ['Expression::convert_for_assignment(this,', 2.598833643460815e-06], ['(!rhs->is_variable()', 2.598833643460815e-06], ['!rhs->is_constant())', 2.598833643460815e-06], ['inserter->insert(rhs_temp);', 2.598833643460815e-06], ['Expression::make_dereference(lhs,', 2.598833643460815e-06], ['Statement::make_assignment(indir,', 2.598833643460815e-06], ['(rhs_temp', 2.598833643460815e-06], ['Runtime::make_call(Runtime::GCWRITEBARRIER,', 2.598833643460815e-06], ['rhs->unary_expression()->set_does_not_escape();', 2.598833643460815e-06], ['this->check_write_barrier(enclosing,', 2.598833643460815e-06], ['Gogo::check_write_barrier(Block*', 2.598833643460815e-06], ['without,', 2.598833643460815e-06], ['with)', 2.598833643460815e-06], ['without->location();', 2.598833643460815e-06], ['wb', 2.598833643460815e-06], ['this->write_barrier_variable();', 2.598833643460815e-06], ['pretend', 2.598833643460815e-06], ['writeBarrier', 2.598833643460815e-06], ['uint32,', 2.598833643460815e-06], ['toolchain', 2.598833643460815e-06], ['does.', 2.598833643460815e-06], ['puint32_type', 2.598833643460815e-06], ['Type::make_pointer_type(uint32_type);', 2.598833643460815e-06], ['Expression::make_var_reference(wb,', 2.598833643460815e-06], ['Expression::make_cast(puint32_type,', 2.598833643460815e-06], ['ref->type(),', 2.598833643460815e-06], ['then_block->add_statement(without);', 2.598833643460815e-06], ['else_block->add_statement(with);', 2.598833643460815e-06], ['brig-comment-handler.cc', 2.598833643460815e-06], ['brig_directive_comment_handler::operator', 2.598833643460815e-06], ['*brig_comment', 2.598833643460815e-06], ['cmnt', 2.598833643460815e-06], ['(brig_comment->name);', 2.598833643460815e-06], ['"brig:', 2.598833643460815e-06], ['Comment:', 2.598833643460815e-06], ['\'%s\'\\n",', 2.598833643460815e-06], ['cmnt.c_str());', 2.598833643460815e-06], ['brig-inst-mod-handler.cc', 2.598833643460815e-06], ['moded', 2.598833643460815e-06], ['brig_inst_mod_handler::generate', 2.598833643460815e-06], ['brig_inst_mod_handler::modifier', 2.598833643460815e-06], ['brig_inst_mod_handler::round', 2.598833643460815e-06], ['inject', 2.598833643460815e-06], ['motions', 2.598833643460815e-06], ['brig_inst_mod_handler::operator', 2.598833643460815e-06], ['intrinsics.cc', 2.598833643460815e-06], ['located.', 2.598833643460815e-06], ['*module;', 2.598833643460815e-06], ['decoration', 2.598833643460815e-06], ['*deco;', 2.598833643460815e-06], ['ctfeonly;', 2.598833643460815e-06], ['intrinsic_decls[]', 2.598833643460815e-06], ['DEF_D_INTRINSIC(CODE,', 2.598833643460815e-06], ['CTFE)', 2.598833643460815e-06], ['INTRINSIC_', 2.598833643460815e-06], ['"intrinsics.def"', 2.598833643460815e-06], ['DEF_D_INTRINSIC', 2.598833643460815e-06], ['maybe_expand_intrinsic.', 2.598833643460815e-06], ['(!decl->ident', 2.598833643460815e-06], ['bitop', 2.598833643460815e-06], ['BUILTINno;', 2.598833643460815e-06], ['recognised', 2.598833643460815e-06], ['!m->md)', 2.598833643460815e-06], ['decl->isInstantiated', 2.598833643460815e-06], ['TemplateDeclaration', 2.598833643460815e-06], ['ti->tempdecl->isTemplateDeclaration', 2.598833643460815e-06], ['*tname', 2.598833643460815e-06], ['decl->ident->toChars', 2.598833643460815e-06], ['*tmodule', 2.598833643460815e-06], ['m->md->toChars', 2.598833643460815e-06], ['*tdeco', 2.598833643460815e-06], ['(td', 2.598833643460815e-06], ['decl->type->deco', 2.598833643460815e-06], ['INTRINSIC_LAST;', 2.598833643460815e-06], ['(!intrinsic_decls[i].name)', 2.598833643460815e-06], ['(intrinsic_decls[i].name,', 2.598833643460815e-06], ['tname)', 2.598833643460815e-06], ['(intrinsic_decls[i].module,', 2.598833643460815e-06], ['tmodule)', 2.598833643460815e-06], ['Instantiated', 2.598833643460815e-06], ['deco,', 2.598833643460815e-06], ['(tdeco', 2.598833643460815e-06], ['(!td', 2.598833643460815e-06], ['!td->onemember)', 2.598833643460815e-06], ['td->onemember->isFuncDeclaration', 2.598833643460815e-06], ['(fd->type,', 2.598833643460815e-06], ['tdeco', 2.598833643460815e-06], ['Matching', 2.598833643460815e-06], ['deco', 2.598833643460815e-06], ['strict,', 2.598833643460815e-06], ['(intrinsic_decls[i].deco,', 2.598833643460815e-06], ['tdeco)', 2.598833643460815e-06], ['intrinsic_decls[i].code;', 2.598833643460815e-06], ['(!decl->fbody)', 2.598833643460815e-06], ['DECL_BUILT_IN_CLASS', 2.598833643460815e-06], ['BUILT_IN_FRONTEND;', 2.598833643460815e-06], ['(built_in_function)', 2.598833643460815e-06], ['CTFE,', 2.598833643460815e-06], ['`int', 2.598833643460815e-06], ['pow(int,', 2.598833643460815e-06], ["int)'.", 2.598833643460815e-06], ['(mathfn_built_in', 2.598833643460815e-06], ['BUILT_IN_POW)', 2.598833643460815e-06], ['CTFE-only.', 2.598833643460815e-06], ['(intrinsic_decls[i].ctfeonly)', 2.598833643460815e-06], ['DECL_BUILT_IN_CTFE', 2.598833643460815e-06], ["`...'", 2.598833643460815e-06], ['callexp,', 2.598833643460815e-06], ['*argarray', 2.598833643460815e-06], ['argarray[i]', 2.598833643460815e-06], ['(code),', 2.598833643460815e-06], ['argarray);', 2.598833643460815e-06], ['bsf().', 2.598833643460815e-06], ['__builtin_ctz(arg).', 2.598833643460815e-06], ['__builtin_ctz*', 2.598833643460815e-06], ['BUILT_IN_CTZ', 2.598833643460815e-06], ['BUILT_IN_CTZL', 2.598833643460815e-06], ['BUILT_IN_CTZLL', 2.598833643460815e-06], ['bsr().', 2.598833643460815e-06], ['significant,', 2.598833643460815e-06], ['__builtin_clz(arg).', 2.598833643460815e-06], ['__builtin_clz*', 2.598833643460815e-06], ['BUILT_IN_CLZ', 2.598833643460815e-06], ['BUILT_IN_CLZL', 2.598833643460815e-06], ['BUILT_IN_CLZLL', 2.598833643460815e-06], ['type),', 2.598833643460815e-06], ['bt(),', 2.598833643460815e-06], ['btc(),', 2.598833643460815e-06], ['btr(),', 2.598833643460815e-06], ['bts().', 2.598833643460815e-06], ['(size_t*', 2.598833643460815e-06], ['Variants', 2.598833643460815e-06], ["`bt'", 2.598833643460815e-06], ["`btc'", 2.598833643460815e-06], ['compliments', 2.598833643460815e-06], ["`bts'", 2.598833643460815e-06], ["`btr'", 2.598833643460815e-06], ['resets', 2.598833643460815e-06], ['(ptr));', 2.598833643460815e-06], ['sizeof(*ptr)', 2.598833643460815e-06], ['bitsize]', 2.598833643460815e-06], ['(TRUNC_DIV_EXPR,', 2.598833643460815e-06], ['bitsize));', 2.598833643460815e-06], ['(bitnum', 2.598833643460815e-06], ['(TRUNC_MOD_EXPR,', 2.598833643460815e-06], ['integer_minus_one_node,', 2.598833643460815e-06], ['bt().', 2.598833643460815e-06], ['INTRINSIC_BT)', 2.598833643460815e-06], ['INTRINSIC_BTC)', 2.598833643460815e-06], ['BIT_XOR_EXPR', 2.598833643460815e-06], ['INTRINSIC_BTS)', 2.598833643460815e-06], ['ERROR_MARK;', 2.598833643460815e-06], ['op=', 2.598833643460815e-06], ['(bitnum),', 2.598833643460815e-06], ['bitnum));', 2.598833643460815e-06], ['temporary,', 2.598833643460815e-06], ['(callexp));', 2.598833643460815e-06], ['tmp));', 2.598833643460815e-06], ['bswap().', 2.598833643460815e-06], ['swaps', 2.598833643460815e-06], ['end-to-end.', 2.598833643460815e-06], ['__builtin_bswap*', 2.598833643460815e-06], ['BUILT_IN_BSWAP32', 2.598833643460815e-06], ['BUILT_IN_BSWAP64', 2.598833643460815e-06], ['popcnt().', 2.598833643460815e-06], ['__builtin_popcount*', 2.598833643460815e-06], ['BUILT_IN_POPCOUNT', 2.598833643460815e-06], ['BUILT_IN_POPCOUNTL', 2.598833643460815e-06], ['BUILT_IN_POPCOUNTLL', 2.598833643460815e-06], ['sqrt(),', 2.598833643460815e-06], ['sqrtf(),', 2.598833643460815e-06], ['sqrtl().', 2.598833643460815e-06], ['__builtin_sqrt*', 2.598833643460815e-06], ['INTRINSIC_SQRT)', 2.598833643460815e-06], ['BUILT_IN_SQRT', 2.598833643460815e-06], ['INTRINSIC_SQRTF)', 2.598833643460815e-06], ['BUILT_IN_SQRTF', 2.598833643460815e-06], ['INTRINSIC_SQRTL)', 2.598833643460815e-06], ['BUILT_IN_SQRTL', 2.598833643460815e-06], ['copysign().', 2.598833643460815e-06], ['FROM.', 2.598833643460815e-06], ['(from),', 2.598833643460815e-06], ['to);', 2.598833643460815e-06], ['__builtin_copysign*', 2.598833643460815e-06], ['pow().', 2.598833643460815e-06], ['raised', 2.598833643460815e-06], ['EXPONENT.', 2.598833643460815e-06], ['exptype', 2.598833643460815e-06], ['(exponent);', 2.598833643460815e-06], ['__builtin_pow*', 2.598833643460815e-06], ['BUILT_IN_POW', 2.598833643460815e-06], ['BUILT_IN_POWI', 2.598833643460815e-06], ['(base),', 2.598833643460815e-06], ['va_arg().', 2.598833643460815e-06], ['(ref', 2.598833643460815e-06], ['(va_list', 2.598833643460815e-06], ['retrieves', 2.598833643460815e-06], ['parmn,', 2.598833643460815e-06], ['(call_expr_nargs', 2.598833643460815e-06], ['(callexp)', 2.598833643460815e-06], ['(VA_ARG_EXPR,', 2.598833643460815e-06], ['(parmn', 2.598833643460815e-06], ['va_start(),', 2.598833643460815e-06], ['va_start(T)', 2.598833643460815e-06], ['however,', 2.598833643460815e-06], ['inout', 2.598833643460815e-06], ['casting,', 2.598833643460815e-06], ['too?', 2.598833643460815e-06], ['(ap)', 2.598833643460815e-06], ['nobody', 2.598833643460815e-06], ['BUILT_IN_VA_START,', 2.598833643460815e-06], ['adds(),', 2.598833643460815e-06], ['addu(),', 2.598833643460815e-06], ['subs(),', 2.598833643460815e-06], ['subu(),', 2.598833643460815e-06], ['negs(),', 2.598833643460815e-06], ['muls(),', 2.598833643460815e-06], ['mulu().', 2.598833643460815e-06], ['sticky,', 2.598833643460815e-06], ['negs()', 2.598833643460815e-06], ['SUB_OVERFLOW', 2.598833643460815e-06], ['y).', 2.598833643460815e-06], ['*_OVERFLOW', 2.598833643460815e-06], ['generate?', 2.598833643460815e-06], ['internal_fn', 2.598833643460815e-06], ['icode', 2.598833643460815e-06], ['INTRINSIC_ADDS)', 2.598833643460815e-06], ['IFN_ADD_OVERFLOW', 2.598833643460815e-06], ['INTRINSIC_SUBS)', 2.598833643460815e-06], ['INTRINSIC_MULS)', 2.598833643460815e-06], ['IFN_MUL_OVERFLOW', 2.598833643460815e-06], ['IFN_LAST;', 2.598833643460815e-06], ['(icode', 2.598833643460815e-06], ['IFN_LAST);', 2.598833643460815e-06], ['build_call_expr_internal_loc', 2.598833643460815e-06], ['icode,', 2.598833643460815e-06], ['y);', 2.598833643460815e-06], ['(overflow,', 2.598833643460815e-06], ['volatileLoad().', 2.598833643460815e-06], ['volatileStore().', 2.598833643460815e-06], ['(*(volatile', 2.598833643460815e-06], ['CALLEXP', 2.598833643460815e-06], ['builtins,', 2.598833643460815e-06], ['CTFE-only', 2.598833643460815e-06], ['(DECL_BUILT_IN_CTFE', 2.598833643460815e-06], ['!doing_semantic_analysis_p)', 2.598833643460815e-06], ['(intrinsic)', 2.598833643460815e-06], ['INTRINSIC_NONE:', 2.598833643460815e-06], ['INTRINSIC_BSF:', 2.598833643460815e-06], ['INTRINSIC_BSR:', 2.598833643460815e-06], ['INTRINSIC_BT:', 2.598833643460815e-06], ['INTRINSIC_BTC:', 2.598833643460815e-06], ['INTRINSIC_BTR:', 2.598833643460815e-06], ['INTRINSIC_BTS:', 2.598833643460815e-06], ['INTRINSIC_BSWAP:', 2.598833643460815e-06], ['INTRINSIC_POPCNT:', 2.598833643460815e-06], ['INTRINSIC_COS:', 2.598833643460815e-06], ['BUILT_IN_COSL,', 2.598833643460815e-06], ['INTRINSIC_SIN:', 2.598833643460815e-06], ['BUILT_IN_SINL,', 2.598833643460815e-06], ['INTRINSIC_RNDTOL:', 2.598833643460815e-06], ['llroundl', 2.598833643460815e-06], ['stands', 2.598833643460815e-06], ['rndtol.', 2.598833643460815e-06], ['BUILT_IN_LLROUNDL,', 2.598833643460815e-06], ['INTRINSIC_SQRT:', 2.598833643460815e-06], ['INTRINSIC_SQRTF:', 2.598833643460815e-06], ['INTRINSIC_SQRTL:', 2.598833643460815e-06], ['INTRINSIC_LDEXP:', 2.598833643460815e-06], ['BUILT_IN_LDEXPL,', 2.598833643460815e-06], ['INTRINSIC_FABS:', 2.598833643460815e-06], ['BUILT_IN_FABSL,', 2.598833643460815e-06], ['INTRINSIC_RINT:', 2.598833643460815e-06], ['BUILT_IN_RINTL,', 2.598833643460815e-06], ['INTRINSIC_TAN:', 2.598833643460815e-06], ['BUILT_IN_TANL,', 2.598833643460815e-06], ['INTRINSIC_ISNAN:', 2.598833643460815e-06], ['BUILT_IN_ISNAN,', 2.598833643460815e-06], ['INTRINSIC_ISINFINITY:', 2.598833643460815e-06], ['BUILT_IN_ISINF,', 2.598833643460815e-06], ['INTRINSIC_ISFINITE:', 2.598833643460815e-06], ['BUILT_IN_ISFINITE,', 2.598833643460815e-06], ['INTRINSIC_EXP:', 2.598833643460815e-06], ['BUILT_IN_EXPL,', 2.598833643460815e-06], ['INTRINSIC_EXPM1:', 2.598833643460815e-06], ['BUILT_IN_EXPM1L,', 2.598833643460815e-06], ['INTRINSIC_EXP2:', 2.598833643460815e-06], ['BUILT_IN_EXP2L,', 2.598833643460815e-06], ['INTRINSIC_LOG:', 2.598833643460815e-06], ['BUILT_IN_LOGL,', 2.598833643460815e-06], ['INTRINSIC_LOG2:', 2.598833643460815e-06], ['BUILT_IN_LOG2L,', 2.598833643460815e-06], ['INTRINSIC_LOG10:', 2.598833643460815e-06], ['BUILT_IN_LOG10L,', 2.598833643460815e-06], ['INTRINSIC_ROUND:', 2.598833643460815e-06], ['BUILT_IN_ROUNDL,', 2.598833643460815e-06], ['INTRINSIC_FLOORF:', 2.598833643460815e-06], ['INTRINSIC_FLOOR:', 2.598833643460815e-06], ['INTRINSIC_FLOORL:', 2.598833643460815e-06], ['INTRINSIC_FLOOR)', 2.598833643460815e-06], ['BUILT_IN_FLOOR', 2.598833643460815e-06], ['INTRINSIC_FLOORF)', 2.598833643460815e-06], ['BUILT_IN_FLOORF', 2.598833643460815e-06], ['BUILT_IN_FLOORL;', 2.598833643460815e-06], ['INTRINSIC_CEILF:', 2.598833643460815e-06], ['INTRINSIC_CEIL:', 2.598833643460815e-06], ['INTRINSIC_CEILL:', 2.598833643460815e-06], ['INTRINSIC_CEIL)', 2.598833643460815e-06], ['BUILT_IN_CEIL', 2.598833643460815e-06], ['INTRINSIC_CEILF)', 2.598833643460815e-06], ['BUILT_IN_CEILF', 2.598833643460815e-06], ['BUILT_IN_CEILL;', 2.598833643460815e-06], ['INTRINSIC_TRUNC:', 2.598833643460815e-06], ['BUILT_IN_TRUNCL,', 2.598833643460815e-06], ['INTRINSIC_FMIN:', 2.598833643460815e-06], ['BUILT_IN_FMINL,', 2.598833643460815e-06], ['INTRINSIC_FMAX:', 2.598833643460815e-06], ['BUILT_IN_FMAXL,', 2.598833643460815e-06], ['INTRINSIC_COPYSIGN:', 2.598833643460815e-06], ['INTRINSIC_FMA:', 2.598833643460815e-06], ['BUILT_IN_FMAL,', 2.598833643460815e-06], ['Shared', 2.598833643460815e-06], ['allocators.', 2.598833643460815e-06], ['"memory-block.h"', 2.598833643460815e-06], ['"obstack.h"', 2.598833643460815e-06], ['singleton-like', 2.598833643460815e-06], ['memory_block_pool', 2.598833643460815e-06], ['memory_block_pool::instance;', 2.598833643460815e-06], ['memory_block_pool::memory_block_pool', 2.598833643460815e-06], ['OS.', 2.598833643460815e-06], ['memory_block_pool::clear_free_list', 2.598833643460815e-06], ['(m_blocks)', 2.598833643460815e-06], ['block_list', 2.598833643460815e-06], ['m_blocks->m_next;', 2.598833643460815e-06], ['(m_blocks);', 2.598833643460815e-06], ['obstack.', 2.598833643460815e-06], ['pool.', 2.598833643460815e-06], ['mempool_obstack_chunk_alloc', 2.598833643460815e-06], ['memory_block_pool::allocate', 2.598833643460815e-06], ['mempool_obstack_chunk_free', 2.598833643460815e-06], ['*chunk)', 2.598833643460815e-06], ['(reinterpret_cast<_obstack_chunk', 2.598833643460815e-06], ['(chunk)->limit', 2.598833643460815e-06], ['reinterpret_cast<char', 2.598833643460815e-06], ['(chunk));', 2.598833643460815e-06], ['memory_block_pool::release', 2.598833643460815e-06], ['brig-arg-block-handler.cc', 2.598833643460815e-06], ['start/end', 2.598833643460815e-06], ['brig_directive_arg_block_handler::operator', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_ARG_BLOCK_START)', 2.598833643460815e-06], ['Initiate', 2.598833643460815e-06], ['site.', 2.598833643460815e-06], ['BIND_EXPR_BLOCK', 2.598833643460815e-06], ['block_id', 2.598833643460815e-06], ['BLOCK_NUMBER', 2.598833643460815e-06], ['block_id++;', 2.598833643460815e-06], ['m_parentblock', 2.598833643460815e-06], ['m_parentblock;', 2.598833643460815e-06], ['(BLOCK_SUBBLOCKS', 2.598833643460815e-06], ['(m_parentblock),', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_ARG_BLOCK_END)', 2.598833643460815e-06], ['new_bind_expr', 2.598833643460815e-06], ['(new_bind_expr);', 2.598833643460815e-06], ['escape.cc', 2.598833643460815e-06], ['(based', 2.598833643460815e-06], ['algorithm).', 2.598833643460815e-06], ['<limits>', 2.598833643460815e-06], ['<stack>', 2.598833643460815e-06], ['"escape.h"', 2.598833643460815e-06], ['Node::type()', 2.598833643460815e-06], ['this->object()->is_variable())', 2.598833643460815e-06], ['this->object()->var_value()->type();', 2.598833643460815e-06], ['this->object()->is_function())', 2.598833643460815e-06], ['this->object()->func_value()->type();', 2.598833643460815e-06], ['this->expr()->type();', 2.598833643460815e-06], ['(this->child()->type()->deref()->is_void_type())', 2.598833643460815e-06], ['pointer-ness.', 2.598833643460815e-06], ['this->child()->type();', 2.598833643460815e-06], ['(this->child()->type()->is_slice_type())', 2.598833643460815e-06], ['"indirect"', 2.598833643460815e-06], ['element).', 2.598833643460815e-06], ['this->child()->type()->array_type()->element_type();', 2.598833643460815e-06], ['(this->child()->type()->is_string_type())', 2.598833643460815e-06], ['this->child()->type()->deref();', 2.598833643460815e-06], ['this->statement()->temporary_statement()', 2.598833643460815e-06], ['this->statement()->temporary_statement()->type();', 2.598833643460815e-06], ['Node::location()', 2.598833643460815e-06], ['this->object()->location();', 2.598833643460815e-06], ['this->expr()->location();', 2.598833643460815e-06], ['this->statement()->location();', 2.598833643460815e-06], ['this->child()->location();', 2.598833643460815e-06], ['Node::definition_location()', 2.598833643460815e-06], ['this->expr()->var_expression();', 2.598833643460815e-06], ['Enclosed_var_expression*', 2.598833643460815e-06], ['eve', 2.598833643460815e-06], ['this->expr()->enclosed_var_expression();', 2.598833643460815e-06], ['(eve', 2.598833643460815e-06], ['eve->variable();', 2.598833643460815e-06], ['cmd/gc', 2.598833643460815e-06], ['prefixes', 2.598833643460815e-06], ['variable/expressions.', 2.598833643460815e-06], ['strip_packed_prefix(Gogo*', 2.598833643460815e-06], ['packed_prefix', 2.598833643460815e-06], ['fmt.find(packed_prefix);', 2.598833643460815e-06], ['fmt.find(packed_prefix))', 2.598833643460815e-06], ['fmt.erase(pos,', 2.598833643460815e-06], ['packed_prefix.length());', 2.598833643460815e-06], ['Nconv', 2.598833643460815e-06], ['Node::ast_format(Gogo*', 2.598833643460815e-06], ['(this->is_sink())', 2.598833643460815e-06], ['".sink";', 2.598833643460815e-06], ['is_call', 2.598833643460815e-06], ['e->call_expression()', 2.598833643460815e-06], ['e->call_expression()->fn();', 2.598833643460815e-06], ['e->func_expression();;', 2.598833643460815e-06], ['is_closure', 2.598833643460815e-06], ['(is_closure)', 2.598833643460815e-06], ['"(func', 2.598833643460815e-06], ['literal)()";', 2.598833643460815e-06], ['Ast_dump_context::dump_to_stream(this->expr(),', 2.598833643460815e-06], ['this->statement();', 2.598833643460815e-06], ['Goto_unnamed_statement*', 2.598833643460815e-06], ['s->goto_unnamed_statement();', 2.598833643460815e-06], ['(unnamed', 2.598833643460815e-06], ['unnamed->unnamed_label()->derived_from();', 2.598833643460815e-06], ['(derived', 2.598833643460815e-06], ['(derived->classification())', 2.598833643460815e-06], ['Statement::STATEMENT_FOR:', 2.598833643460815e-06], ['Statement::STATEMENT_FOR_RANGE:', 2.598833643460815e-06], ['loop";', 2.598833643460815e-06], ['"switch";', 2.598833643460815e-06], ['switch";', 2.598833643460815e-06], ['s->temporary_statement();', 2.598833643460815e-06], ['(tmp', 2.598833643460815e-06], ["Temporary's", 2.598833643460815e-06], ['convenient.', 2.598833643460815e-06], ['(tmp->init()', 2.598833643460815e-06], ['Ast_dump_context::dump_to_stream(tmp->init(),', 2.598833643460815e-06], [']";', 2.598833643460815e-06], ['Ast_dump_context::dump_to_stream(s,', 2.598833643460815e-06], ['"*("', 2.598833643460815e-06], ['this->child()->ast_format(gogo)', 2.598833643460815e-06], ['ss.str());', 2.598833643460815e-06], ['trim', 2.598833643460815e-06], ['s.substr(0,', 2.598833643460815e-06], ["s.find_last_not_of('", 2.598833643460815e-06], ['Jconv', 2.598833643460815e-06], ['Node::details()', 2.598833643460815e-06], ['details;', 2.598833643460815e-06], ['(!this->is_sink())', 2.598833643460815e-06], ['l("', 2.598833643460815e-06], ['Linemap::location_to_line(this->location())', 2.598833643460815e-06], ['e->var_expression()', 2.598833643460815e-06], ['(node_object)', 2.598833643460815e-06], ['depth.', 2.598833643460815e-06], ['(node_object->is_variable())', 2.598833643460815e-06], ['node_object->var_value();', 2.598833643460815e-06], ['var->is_varargs_parameter();', 2.598833643460815e-06], ['var->is_in_heap();', 2.598833643460815e-06], ['var->init()', 2.598833643460815e-06], ['"PEXTERN";', 2.598833643460815e-06], ['(var->is_parameter())', 2.598833643460815e-06], ['"PPARAM";', 2.598833643460815e-06], ['(var->is_closure())', 2.598833643460815e-06], ['"PAUTO";', 2.598833643460815e-06], ['(node_object->is_result_variable())', 2.598833643460815e-06], ['"PPARAMOUT";', 2.598833643460815e-06], ['(node_object->is_function()', 2.598833643460815e-06], ['node_object->is_function_declaration())', 2.598833643460815e-06], ['"PFUNC";', 2.598833643460815e-06], ['e->enclosed_var_expression()', 2.598833643460815e-06], ['e->enclosed_var_expression()->variable();', 2.598833643460815e-06], ['(enclosed->is_variable())', 2.598833643460815e-06], ['enclosed->var_value();', 2.598833643460815e-06], ['enclosed->result_var_value();', 2.598833643460815e-06], ['(!class_name.empty())', 2.598833643460815e-06], ['class("', 2.598833643460815e-06], ['",heap";', 2.598833643460815e-06], ['((this->encoding()', 2.598833643460815e-06], ['Node::ESCAPE_UNKNOWN:', 2.598833643460815e-06], ['esc(h)";', 2.598833643460815e-06], ['esc(no)";', 2.598833643460815e-06], ['Node::ESCAPE_NEVER:', 2.598833643460815e-06], ['esc(N)";', 2.598833643460815e-06], ['esc("', 2.598833643460815e-06], ['this->encoding()', 2.598833643460815e-06], ['ld("', 2.598833643460815e-06], ['isddd(1)";', 2.598833643460815e-06], ['addrtaken";', 2.598833643460815e-06], ['(is_assigned)', 2.598833643460815e-06], ['assigned";', 2.598833643460815e-06], ['details.str();', 2.598833643460815e-06], ['Node::op_format()', 2.598833643460815e-06], ['adc(&op,', 2.598833643460815e-06], ['adc.dump_operator(e->unary_expression()->op());', 2.598833643460815e-06], ['adc.dump_operator(e->binary_expression()->op());', 2.598833643460815e-06], ['(e->func_expression()->is_runtime_function())', 2.598833643460815e-06], ['(e->func_expression()->runtime_code())', 2.598833643460815e-06], ['Runtime::GOPANIC:', 2.598833643460815e-06], ['"panic";', 2.598833643460815e-06], ['Runtime::GROWSLICE:', 2.598833643460815e-06], ['"append";', 2.598833643460815e-06], ['Runtime::SLICECOPY:', 2.598833643460815e-06], ['Runtime::SLICESTRINGCOPY:', 2.598833643460815e-06], ['Runtime::TYPEDSLICECOPY:', 2.598833643460815e-06], ['"copy";', 2.598833643460815e-06], ['"make";', 2.598833643460815e-06], ['Runtime::DEFERPROC:', 2.598833643460815e-06], ['Runtime::GORECOVER:', 2.598833643460815e-06], ['"recover";', 2.598833643460815e-06], ['Runtime::CLOSE:', 2.598833643460815e-06], ['"close";', 2.598833643460815e-06], ['"new";', 2.598833643460815e-06], ['Expression::EXPRESSION_RECEIVE:', 2.598833643460815e-06], ['(this->statement()->classification())', 2.598833643460815e-06], ['Statement::STATEMENT_RETURN:', 2.598833643460815e-06], ['"return";', 2.598833643460815e-06], ['op.str();', 2.598833643460815e-06], ['state,', 2.598833643460815e-06], ['Node::state(Escape_context*', 2.598833643460815e-06], ['var_no', 2.598833643460815e-06], ['Node::make_node(var_no);', 2.598833643460815e-06], ['var_node->state(context,', 2.598833643460815e-06], ['Node::Escape_state;', 2.598833643460815e-06], ['context->current_function();', 2.598833643460815e-06], ['this->state_->fn', 2.598833643460815e-06], ['go_assert(this->state_', 2.598833643460815e-06], ['Node::~Node()', 2.598833643460815e-06], ['excluded', 2.598833643460815e-06], ['Node::encoding()', 2.598833643460815e-06], ['Node::make_node(no)->encoding();', 2.598833643460815e-06], ['this->encoding_;', 2.598833643460815e-06], ['Node::set_encoding(int', 2.598833643460815e-06], ['enc)', 2.598833643460815e-06], ['(this->expr()->var_expression()', 2.598833643460815e-06], ['Node::make_node(no)->set_encoding(enc);', 2.598833643460815e-06], ['(this->expr()->func_expression()', 2.598833643460815e-06], ['(heap', 2.598833643460815e-06], ['expression).', 2.598833643460815e-06], ['this->expr()->func_expression()->closure();', 2.598833643460815e-06], ['(closure', 2.598833643460815e-06], ['Node::make_node(closure)->set_encoding(enc);', 2.598833643460815e-06], ['Node::is_big(Escape_context*', 2.598833643460815e-06], ['t->is_call_multiple_result_type()', 2.598833643460815e-06], ['t->is_sink_type()', 2.598833643460815e-06], ['t->is_void_type()', 2.598833643460815e-06], ['t->is_abstract())', 2.598833643460815e-06], ['t->backend_type_size(context->gogo(),', 2.598833643460815e-06], ['1024', 2.598833643460815e-06], ['1024);', 2.598833643460815e-06], ['(this->expr()->allocation_expression()', 2.598833643460815e-06], ['t->deref()->backend_type_size(context->gogo(),', 2.598833643460815e-06], ['(this->expr()->call_expression()', 2.598833643460815e-06], ['this->expr()->call_expression();', 2.598833643460815e-06], ['fn->is_runtime_function()', 2.598833643460815e-06], ['(fn->runtime_code()', 2.598833643460815e-06], ['Runtime::MAKESLICE', 2.598833643460815e-06], ['fn->runtime_code()', 2.598833643460815e-06], ['Runtime::MAKESLICE64))', 2.598833643460815e-06], ['(tre->statement()', 2.598833643460815e-06], ['tre->statement()->init()', 2.598833643460815e-06], ['tre->statement()->init();', 2.598833643460815e-06], ['(e->numeric_constant_value(&nc)', 2.598833643460815e-06], ['big;', 2.598833643460815e-06], ['Node::is_sink()', 2.598833643460815e-06], ['this->object()->is_sink())', 2.598833643460815e-06], ['this->expr()->is_sink_expression())', 2.598833643460815e-06], ['Node::objects;', 2.598833643460815e-06], ['std::map<Expression*,', 2.598833643460815e-06], ['Node::expressions;', 2.598833643460815e-06], ['std::map<Statement*,', 2.598833643460815e-06], ['Node::statements;', 2.598833643460815e-06], ['Node::indirects;', 2.598833643460815e-06], ['Node::make_node(Named_object*', 2.598833643460815e-06], ['(Node::objects.find(no)', 2.598833643460815e-06], ['Node::objects.end())', 2.598833643460815e-06], ['Node::objects[no];', 2.598833643460815e-06], ['Node(no);', 2.598833643460815e-06], ['val(no,', 2.598833643460815e-06], ['Node::objects.insert(val);', 2.598833643460815e-06], ['Node::make_node(Expression*', 2.598833643460815e-06], ['(Node::expressions.find(e)', 2.598833643460815e-06], ['Node::expressions.end())', 2.598833643460815e-06], ['Node::expressions[e];', 2.598833643460815e-06], ['Node(e);', 2.598833643460815e-06], ['std::pair<Expression*,', 2.598833643460815e-06], ['val(e,', 2.598833643460815e-06], ['Node::expressions.insert(val);', 2.598833643460815e-06], ['Node::make_node(Statement*', 2.598833643460815e-06], ['(Node::statements.find(s)', 2.598833643460815e-06], ['Node::statements.end())', 2.598833643460815e-06], ['Node::statements[s];', 2.598833643460815e-06], ['Node(s);', 2.598833643460815e-06], ['std::pair<Statement*,', 2.598833643460815e-06], ['val(s,', 2.598833643460815e-06], ['Node::statements.insert(val);', 2.598833643460815e-06], ['child.', 2.598833643460815e-06], ['Node::make_indirect_node(Node*', 2.598833643460815e-06], ['child)', 2.598833643460815e-06], ['Node(child);', 2.598833643460815e-06], ['Node::indirects.push_back(n);', 2.598833643460815e-06], ['exisiting', 2.598833643460815e-06], ['Node::max_encoding(int', 2.598833643460815e-06], ['((e', 2.598833643460815e-06], ['~ESCAPE_MASK)', 2.598833643460815e-06], ['Node::note_inout_flows(int', 2.598833643460815e-06], ['Level', 2.598833643460815e-06], ['level)', 2.598833643460815e-06], ['Flow+level', 2.598833643460815e-06], ['00', 2.598833643460815e-06], ['flow,', 2.598833643460815e-06], ['level+1', 2.598833643460815e-06], ['maxEncodedLevel.', 2.598833643460815e-06], ['Esc', 2.598833643460815e-06], ['6x2bits', 2.598833643460815e-06], ['4x3bits', 2.598833643460815e-06], ['3x4bits', 2.598833643460815e-06], ['Node::max_encoding(e|ESCAPE_CONTENT_ESCAPES,', 2.598833643460815e-06], ['ESCAPE_MAX_ENCODED_LEVEL)', 2.598833643460815e-06], ['Level::From(ESCAPE_MAX_ENCODED_LEVEL);', 2.598833643460815e-06], ['ESCAPE_BITS_PER_OUTPUT_IN_TAG', 2.598833643460815e-06], ['(old', 2.598833643460815e-06], ['(encoded', 2.598833643460815e-06], ['old))', 2.598833643460815e-06], ['encoded;', 2.598833643460815e-06], ['encoded_flow', 2.598833643460815e-06], ['(((encoded_flow', 2.598833643460815e-06], ['ESCAPE_BITS_MASK_FOR_TAG)', 2.598833643460815e-06], ['old)', 2.598833643460815e-06], ['Failed', 2.598833643460815e-06], ['encode.', 2.598833643460815e-06], ['~(ESCAPE_BITS_MASK_FOR_TAG', 2.598833643460815e-06], ['shift))', 2.598833643460815e-06], ['encoded_flow;', 2.598833643460815e-06], ['Escape_context.', 2.598833643460815e-06], ['Escape_context::Escape_context(Gogo*', 2.598833643460815e-06], ['recursive)', 2.598833643460815e-06], ['current_function_(NULL),', 2.598833643460815e-06], ['recursive_(recursive),', 2.598833643460815e-06], ['sink_(Node::make_node(Named_object::make_sink())),', 2.598833643460815e-06], ['loop_depth_(0),', 2.598833643460815e-06], ['flood_id_(0),', 2.598833643460815e-06], ['pdepth_(0)', 2.598833643460815e-06], ['lives', 2.598833643460815e-06], ['this->sink_->state(this,', 2.598833643460815e-06], ['debug_function_name(Named_object*', 2.598833643460815e-06], ['"<S>";', 2.598833643460815e-06], ['(fn->func_value()->is_method())', 2.598833643460815e-06], ['"T.m"', 2.598833643460815e-06], ['"(*T).m"', 2.598833643460815e-06], ['fn->func_value()->type()->receiver()->type();', 2.598833643460815e-06], ['(rt->classification())', 2.598833643460815e-06], ['rt->named_type()->name()', 2.598833643460815e-06], ['rt->points_to()->named_type();', 2.598833643460815e-06], ['"(*"', 2.598833643460815e-06], ['")."', 2.598833643460815e-06], ['Escape_context::current_function_name()', 2.598833643460815e-06], ['debug_function_name(this->current_function_);', 2.598833643460815e-06], ['FNTYPE.', 2.598833643460815e-06], ['Escape_context::init_retvals(Node*', 2.598833643460815e-06], ['fntype->results()', 2.598833643460815e-06], ['state->retvals.clear();', 2.598833643460815e-06], ['fntype->results()->begin();', 2.598833643460815e-06], ['fntype->results()->end();', 2.598833643460815e-06], ['".out%d",', 2.598833643460815e-06], ['dummy_var', 2.598833643460815e-06], ['dummy_var->set_is_used();', 2.598833643460815e-06], ['dummy_no', 2.598833643460815e-06], ['dummy_var);', 2.598833643460815e-06], ['dummy_node', 2.598833643460815e-06], ['Node::make_node(dummy_no);', 2.598833643460815e-06], ['dummy_node_state', 2.598833643460815e-06], ['dummy_node->state(this,', 2.598833643460815e-06], ['dummy_node_state->loop_depth', 2.598833643460815e-06], ['state->retvals.push_back(dummy_node);', 2.598833643460815e-06], ['Escape_context::add_dereference(Node*', 2.598833643460815e-06], ['n->expr();', 2.598833643460815e-06], ['e->type()->points_to()', 2.598833643460815e-06], ['!e->type()->points_to()->is_void_type())', 2.598833643460815e-06], ['deref_expr', 2.598833643460815e-06], ['Node::make_node(deref_expr);', 2.598833643460815e-06], ['OIND', 2.598833643460815e-06], ['flavor.', 2.598833643460815e-06], ['Node::make_indirect_node(n);', 2.598833643460815e-06], ['ind->state(this,', 2.598833643460815e-06], ['NULL)->loop_depth;', 2.598833643460815e-06], ['Escape_context::track(Node*', 2.598833643460815e-06], ['this->noesc_.push_back(n);', 2.598833643460815e-06], ['Escape_note::make_tag(int', 2.598833643460815e-06], ['encoding)', 2.598833643460815e-06], ['"esc:0x%x",', 2.598833643460815e-06], ['encoding);', 2.598833643460815e-06], ['Escape_note::parse_tag(std::string*', 2.598833643460815e-06], ['tag->substr(0,', 2.598833643460815e-06], ['"esc:")', 2.598833643460815e-06], ['(int)strtol(tag->substr(4).c_str(),', 2.598833643460815e-06], ['(encoding', 2.598833643460815e-06], ['encoding;', 2.598833643460815e-06], ['-fgo-optimize-alloc', 2.598833643460815e-06], ['activates', 2.598833643460815e-06], ['Go_optimize', 2.598833643460815e-06], ['optimize_allocation_flag("allocs",', 2.598833643460815e-06], ['escape_hash_match(std::string', 2.598833643460815e-06], ['suffix,', 2.598833643460815e-06], ['(suffix.empty())', 2.598833643460815e-06], ['(suffix.at(0)', 2.598833643460815e-06], ['!escape_hash_match(suffix.substr(1),', 2.598833643460815e-06], ['name.c_str();', 2.598833643460815e-06], ['sha1_helper', 2.598833643460815e-06], ['sha1_helper->process_bytes(p,', 2.598833643460815e-06], ['strlen(p));', 2.598833643460815e-06], ['sha1_helper->finish();', 2.598833643460815e-06], ['sha1_helper;', 2.598833643460815e-06], ['suffix.size()', 2.598833643460815e-06], ['s.size()', 2.598833643460815e-06], ['s.at(i);', 2.598833643460815e-06], ['k++,', 2.598833643460815e-06], ['j--,', 2.598833643460815e-06], ['c>>=1)', 2.598833643460815e-06], ['suffix.at(j)', 2.598833643460815e-06], ['((c&1)', 2.598833643460815e-06], ['Gogo::analyze_escape()', 2.598833643460815e-06], ['(!optimize_allocation_flag.is_enabled()', 2.598833643460815e-06], ['!this->compiling_runtime())', 2.598833643460815e-06], ['this->discover_analysis_sets();', 2.598833643460815e-06], ['this->debug_escape_hash()', 2.598833643460815e-06], ['(std::vector<Analysis_set>::iterator', 2.598833643460815e-06], ['this->analysis_sets_.begin();', 2.598833643460815e-06], ['this->analysis_sets_.end();', 2.598833643460815e-06], ['escape_hash_match(this->debug_escape_hash(),', 2.598833643460815e-06], ['(*fn)->message_name());', 2.598833643460815e-06], ['(!match)', 2.598833643460815e-06], ['Escape', 2.598833643460815e-06], ['(*fn)->func_value()->type();', 2.598833643460815e-06], ['disables', 2.598833643460815e-06], ['triggers', 2.598833643460815e-06], ['Escape_context(this,', 2.598833643460815e-06], ['p->second);', 2.598833643460815e-06], ['(std::vector<Named_object*>::reverse_iterator', 2.598833643460815e-06], ['stack.rbegin();', 2.598833643460815e-06], ['stack.rend();', 2.598833643460815e-06], ['context->set_current_function(*fn);', 2.598833643460815e-06], ['this->assign_connectivity(context,', 2.598833643460815e-06], ['std::set<Node*>', 2.598833643460815e-06], ['dsts', 2.598833643460815e-06], ['context->dsts();', 2.598833643460815e-06], ['Unordered_map(Node*,', 2.598833643460815e-06], ['escapes;', 2.598833643460815e-06], ['(;;)', 2.598833643460815e-06], ['Reflood', 2.598833643460815e-06], ["roots'", 2.598833643460815e-06], ['states', 2.598833643460815e-06], ['increase.', 2.598833643460815e-06], ['rare.', 2.598833643460815e-06], ['((*n)->object()', 2.598833643460815e-06], ['((*n)->expr()', 2.598833643460815e-06], ['((*n)->expr()->var_expression()', 2.598833643460815e-06], ['(*n)->expr()->enclosed_var_expression()', 2.598833643460815e-06], ['(*n)->expr()->func_expression()', 2.598833643460815e-06], ['(escapes[*n]', 2.598833643460815e-06], ['(*n)->encoding())', 2.598833643460815e-06], ['"Reflooding', 2.598833643460815e-06], ['debug_function_name((*n)->state(context,', 2.598833643460815e-06], ['NULL)->fn).c_str(),', 2.598833643460815e-06], ['(done)', 2.598833643460815e-06], ['this->tag_function(context,', 2.598833643460815e-06], ['noesc', 2.598833643460815e-06], ['context->non_escaping_nodes();', 2.598833643460815e-06], ['noesc.begin();', 2.598833643460815e-06], ['noesc.end();', 2.598833643460815e-06], ['(*n)->state(context,', 2.598833643460815e-06], ['((*n)->encoding()', 2.598833643460815e-06], ['escape",', 2.598833643460815e-06], ['strip_packed_prefix(this,', 2.598833643460815e-06], ['debug_function_name(state->fn)).c_str(),', 2.598833643460815e-06], ['Escape_analysis_discover(Gogo*', 2.598833643460815e-06], ['traverse_func_declarations),', 2.598833643460815e-06], ['component_ids_()', 2.598833643460815e-06], ['function_declaration(Named_object*);', 2.598833643460815e-06], ['visit(Named_object*);', 2.598833643460815e-06], ['visit_code(Named_object*,', 2.598833643460815e-06], ['Unordered_map(Named_object*,', 2.598833643460815e-06], ['Component_ids;', 2.598833643460815e-06], ['discovery.', 2.598833643460815e-06], ['Component_ids', 2.598833643460815e-06], ['component_ids_;', 2.598833643460815e-06], ['of.', 2.598833643460815e-06], ['std::stack<Named_object*>', 2.598833643460815e-06], ['stack_;', 2.598833643460815e-06], ['Escape_analysis_discover::id', 2.598833643460815e-06], ['Escape_analysis_discover::function(Named_object*', 2.598833643460815e-06], ['Escape_analysis_discover::function_declaration(Named_object*', 2.598833643460815e-06], ['component,', 2.598833643460815e-06], ['Finding', 2.598833643460815e-06], ['Sedgewick,', 2.598833643460815e-06], ['Algorithms,', 2.598833643460815e-06], ['Edition,', 2.598833643460815e-06], ['p.', 2.598833643460815e-06], ['482,', 2.598833643460815e-06], ['adaptations.', 2.598833643460815e-06], ['(fn->func_value()->enclosing()', 2.598833643460815e-06], ['Refusing', 2.598833643460815e-06], ['appears.', 2.598833643460815e-06], ['Second,', 2.598833643460815e-06], ['(min)', 2.598833643460815e-06], ['n+1,', 2.598833643460815e-06], ['component:', 2.598833643460815e-06], ['closures.', 2.598833643460815e-06], ['n+1', 2.598833643460815e-06], ['precise', 2.598833643460815e-06], ['Escape_analysis_discover::visit(Named_object*', 2.598833643460815e-06], ['Component_ids::const_iterator', 2.598833643460815e-06], ['this->component_ids_.find(fn);', 2.598833643460815e-06], ['this->component_ids_.end())', 2.598833643460815e-06], ['visited.', 2.598833643460815e-06], ['this->stack_.push(fn);', 2.598833643460815e-06], ['this->visit_code(fn,', 2.598833643460815e-06], ['((min', 2.598833643460815e-06], ['((fn->is_function()', 2.598833643460815e-06], ['fn->func_value()->enclosing()', 2.598833643460815e-06], ['fn->is_function_declaration()))', 2.598833643460815e-06], ['!this->stack_.empty();', 2.598833643460815e-06], ['this->stack_.pop())', 2.598833643460815e-06], ['this->stack_.top();', 2.598833643460815e-06], ['this->stack_.pop();', 2.598833643460815e-06], ['group.push_back(n);', 2.598833643460815e-06], ['this->component_ids_[n]', 2.598833643460815e-06], ['group.push_back(fn);', 2.598833643460815e-06], ['std::reverse(group.begin(),', 2.598833643460815e-06], ['group.end());', 2.598833643460815e-06], ['this->gogo_->add_analysis_set(group,', 2.598833643460815e-06], ['recursive);', 2.598833643460815e-06], ['Escape_discover_expr(Escape_analysis_discover*', 2.598833643460815e-06], ['ead,', 2.598833643460815e-06], ['ead_(ead),', 2.598833643460815e-06], ['min_(min)', 2.598833643460815e-06], ['min()', 2.598833643460815e-06], ['this->min_;', 2.598833643460815e-06], ['expression(Expression**', 2.598833643460815e-06], ['pexpr);', 2.598833643460815e-06], ['Escape_analysis_discover*', 2.598833643460815e-06], ['ead_;', 2.598833643460815e-06], ['min_;', 2.598833643460815e-06], ['Escape_discover_expr::expression(Expression**', 2.598833643460815e-06], ['e->call_expression()->fn()->func_expression()', 2.598833643460815e-06], ['Method', 2.598833643460815e-06], ['e->call_expression()->fn()->func_expression()->named_object();', 2.598833643460815e-06], ['Closure.', 2.598833643460815e-06], ['e->func_expression()->named_object();', 2.598833643460815e-06], ['this->min_', 2.598833643460815e-06], ['std::min(this->min_,', 2.598833643460815e-06], ['this->ead_->visit(fn));', 2.598833643460815e-06], ['Escape_analysis_discover::visit_code(Named_object*', 2.598833643460815e-06], ['ede(this,', 2.598833643460815e-06], ['fn->func_value()->traverse(&ede);', 2.598833643460815e-06], ['ede.min();', 2.598833643460815e-06], ['analyze.', 2.598833643460815e-06], ['Gogo::discover_analysis_sets()', 2.598833643460815e-06], ['ead(this);', 2.598833643460815e-06], ['this->traverse(&ead);', 2.598833643460815e-06], ['Escape_analysis_loop()', 2.598833643460815e-06], ['Traverse(traverse_statements)', 2.598833643460815e-06], ['Escape_analysis_loop::statement(Block*,', 2.598833643460815e-06], ['(s->label_statement()', 2.598833643460815e-06], ['s->label_statement()->label()->set_nonlooping();', 2.598833643460815e-06], ['(s->goto_statement()', 2.598833643460815e-06], ['(s->goto_statement()->label()->nonlooping())', 2.598833643460815e-06], ['s->goto_statement()->label()->set_looping();', 2.598833643460815e-06], ['interesting', 2.598833643460815e-06], ["context's", 2.598833643460815e-06], ['Escape_analysis_assign(Escape_context*', 2.598833643460815e-06], ['context_(context),', 2.598833643460815e-06], ['fn_(fn)', 2.598833643460815e-06], ['call(Call_expression*', 2.598833643460815e-06], ['assign(Node*', 2.598833643460815e-06], ['assign_deref(Node*', 2.598833643460815e-06], ['assign_from_note(std::string*', 2.598833643460815e-06], ['flows(Node*', 2.598833643460815e-06], ['fn_;', 2.598833643460815e-06], ['is_self_assignment(Expression*', 2.598833643460815e-06], ['lue', 2.598833643460815e-06], ['(lhs->field_reference_expression()', 2.598833643460815e-06], ['lhs->field_reference_expression()->expr()->unary_expression()', 2.598833643460815e-06], ['lhs->unary_expression());', 2.598833643460815e-06], ['(lue', 2.598833643460815e-06], ['lue->op()', 2.598833643460815e-06], ['lue->operand()->var_expression()', 2.598833643460815e-06], ['raie', 2.598833643460815e-06], ['rhs->array_index_expression();', 2.598833643460815e-06], ['rsie', 2.598833643460815e-06], ['rhs->string_index_expression();', 2.598833643460815e-06], ['rarray', 2.598833643460815e-06], ['(raie', 2.598833643460815e-06], ['raie->end()', 2.598833643460815e-06], ['raie->array()->type()->is_slice_type()', 2.598833643460815e-06], ['raie->array()', 2.598833643460815e-06], ['(rsie', 2.598833643460815e-06], ['rsie->type()->is_string_type()', 2.598833643460815e-06], ['rsie->string()', 2.598833643460815e-06], ['rue', 2.598833643460815e-06], ['rarray->field_reference_expression()', 2.598833643460815e-06], ['rarray->field_reference_expression()->expr()->unary_expression()', 2.598833643460815e-06], ['rarray->unary_expression()', 2.598833643460815e-06], ['(rue', 2.598833643460815e-06], ['rue->op()', 2.598833643460815e-06], ['rue->operand()->var_expression()', 2.598833643460815e-06], ['lve->named_object()', 2.598833643460815e-06], ['rve->named_object();', 2.598833643460815e-06], ['Escape_analysis_assign::statement(Block*,', 2.598833643460815e-06], ['enter/exit', 2.598833643460815e-06], ['is_for_statement', 2.598833643460815e-06], ['(s->is_block_statement()', 2.598833643460815e-06], ['s->block_statement()->is_lowered_for_statement());', 2.598833643460815e-06], ['this->context_->decrease_loop_depth();', 2.598833643460815e-06], ['s->unnamed_label_statement()', 2.598833643460815e-06], ['s->expression_statement()', 2.598833643460815e-06], ['!s->is_block_statement())', 2.598833643460815e-06], ['s->variable_declaration_statement()->var();', 2.598833643460815e-06], ['Node::make_node(var);', 2.598833643460815e-06], ['var_node->state(this->context_,', 2.598833643460815e-06], ['this->context_->loop_depth();', 2.598833643460815e-06], ['var->var_value()->init()', 2.598833643460815e-06], ['init_node', 2.598833643460815e-06], ['Node::make_node(var->var_value()->init());', 2.598833643460815e-06], ['this->assign(var_node,', 2.598833643460815e-06], ['init_node);', 2.598833643460815e-06], ['Statement::STATEMENT_TEMPORARY:', 2.598833643460815e-06], ['s->temporary_statement()->init();', 2.598833643460815e-06], ['Node::make_node(init);', 2.598833643460815e-06], ['(s->temporary_statement()->value_escapes())', 2.598833643460815e-06], ['this->assign(Node::make_node(s),', 2.598833643460815e-06], ['Statement::STATEMENT_LABEL:', 2.598833643460815e-06], ['Label_statement*', 2.598833643460815e-06], ['label_stmt', 2.598833643460815e-06], ['s->label_statement();', 2.598833643460815e-06], ['(label_stmt->label()->looping())', 2.598833643460815e-06], ['label_type', 2.598833643460815e-06], ['(label_stmt->label()->looping()', 2.598833643460815e-06], ['"looping"', 2.598833643460815e-06], ['"nonlooping");', 2.598833643460815e-06], ['label",', 2.598833643460815e-06], ['label_stmt->label()->name().c_str(),', 2.598833643460815e-06], ['label_type.c_str());', 2.598833643460815e-06], ['assn->lhs();', 2.598833643460815e-06], ['assn->rhs();', 2.598833643460815e-06], ['lhs_node', 2.598833643460815e-06], ['Node::make_node(lhs);', 2.598833643460815e-06], ['rhs_node', 2.598833643460815e-06], ['Node::make_node(rhs);', 2.598833643460815e-06], ['Filter', 2.598833643460815e-06], ['(is_self_assignment(lhs,', 2.598833643460815e-06], ['self-assignment', 2.598833643460815e-06], ['lhs_node->ast_format(gogo).c_str());', 2.598833643460815e-06], ['this->assign(lhs_node,', 2.598833643460815e-06], ['rhs_node);', 2.598833643460815e-06], ['Statement::STATEMENT_SEND:', 2.598833643460815e-06], ['sent_node', 2.598833643460815e-06], ['Node::make_node(s->send_statement()->val());', 2.598833643460815e-06], ['sent_node);', 2.598833643460815e-06], ['(this->context_->loop_depth()', 2.598833643460815e-06], ['Statement::STATEMENT_GO:', 2.598833643460815e-06], ['f(x)', 2.598833643460815e-06], ['f(x).', 2.598833643460815e-06], ['s->thunk_statement();', 2.598833643460815e-06], ['(thunk->call()->call_expression()', 2.598833643460815e-06], ['thunk->call()->call_expression();', 2.598833643460815e-06], ['func_node', 2.598833643460815e-06], ['func_node);', 2.598833643460815e-06], ['moved-to-heap', 2.598833643460815e-06], ['move_to_heap(Gogo*', 2.598833643460815e-06], ['expr->var_expression()->named_object();', 2.598833643460815e-06], ['expr->enclosed_var_expression()->variable();', 2.598833643460815e-06], ['!no->var_value()->is_global())', 2.598833643460815e-06], ['go_inform(n->definition_location(),', 2.598833643460815e-06], ['"moved', 2.598833643460815e-06], ['heap:', 2.598833643460815e-06], ['Escape_analysis_assign::expression(Expression**', 2.598833643460815e-06], ['Big', 2.598833643460815e-06], ['n->is_big(this->context_))', 2.598833643460815e-06], ['stack",', 2.598833643460815e-06], ['*pexpr);', 2.598833643460815e-06], ['n->set_encoding(Node::ESCAPE_HEAP);', 2.598833643460815e-06], ['(*pexpr)->address_taken(true);', 2.598833643460815e-06], ['((*pexpr)->func_expression()', 2.598833643460815e-06], ['(*pexpr)->traverse_subexpressions(this);', 2.598833643460815e-06], ['(bce->code())', 2.598833643460815e-06], ['Builtin_call_expression::BUILTIN_PANIC:', 2.598833643460815e-06], ['panic_arg', 2.598833643460815e-06], ['panic_arg);', 2.598833643460815e-06], ['Builtin_call_expression::BUILTIN_APPEND:', 2.598833643460815e-06], ['leak.', 2.598833643460815e-06], ['(call->is_varargs())', 2.598833643460815e-06], ['slice2...)', 2.598833643460815e-06], ['slice2', 2.598833643460815e-06], ['appended);', 2.598833643460815e-06], ['"special', 2.598833643460815e-06], ['treatment', 2.598833643460815e-06], ['slice2...)");', 2.598833643460815e-06], ['call->args()->begin()', 2.598833643460815e-06], ['Node::make_node(*pa);', 2.598833643460815e-06], ['Builtin_call_expression::BUILTIN_COPY:', 2.598833643460815e-06], ['content.', 2.598833643460815e-06], ['Runtime::MAPASSIGN:', 2.598833643460815e-06], ['key_node', 2.598833643460815e-06], ['key_node);', 2.598833643460815e-06], ['Runtime::IFACEE2T2:', 2.598833643460815e-06], ['Runtime::IFACEI2T2:', 2.598833643460815e-06], ['non-interface,', 2.598833643460815e-06], ['IFACEI2T2(type,', 2.598833643460815e-06], ['(void*)&tmp_x)', 2.598833643460815e-06], ['tmp_x.', 2.598833643460815e-06], ['IFACEX2Y2', 2.598833643460815e-06], ['Those', 2.598833643460815e-06], ['::assign.', 2.598833643460815e-06], ['src_node', 2.598833643460815e-06], ['Node::make_node(call->args()->at(1));', 2.598833643460815e-06], ['dst_node;', 2.598833643460815e-06], ['tmp_x', 2.598833643460815e-06], ['statement.cc,', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::lower_to_object_type.', 2.598833643460815e-06], ['(arg2->conversion_expression()', 2.598833643460815e-06], ['arg2->conversion_expression()->expr()->unary_expression()', 2.598833643460815e-06], ['arg2->unary_expression());', 2.598833643460815e-06], ['ue->op()', 2.598833643460815e-06], ['(!ue->operand()->type()->has_pointer())', 2.598833643460815e-06], ['non-pointer.', 2.598833643460815e-06], ['Node::make_node(ue->operand());', 2.598833643460815e-06], ['this->context_->add_dereference(Node::make_node(arg2));', 2.598833643460815e-06], ['this->assign(dst_node,', 2.598833643460815e-06], ['src_node);', 2.598833643460815e-06], ['this->call(call);', 2.598833643460815e-06], ['Runtime::NEW.', 2.598833643460815e-06], ['(*pexpr)->conversion_expression();', 2.598833643460815e-06], ['tce_node', 2.598833643460815e-06], ['Node::make_node(tce);', 2.598833643460815e-06], ['Node::make_node(tce->expr());', 2.598833643460815e-06], ['this->context_->track(tce_node);', 2.598833643460815e-06], ['this->assign(tce_node,', 2.598833643460815e-06], ['converted);', 2.598833643460815e-06], ['this->context_->track(array_node);', 2.598833643460815e-06], ['(*pexpr)->slice_literal()->vals()', 2.598833643460815e-06], ['(*pexpr)->array_literal()->vals());', 2.598833643460815e-06], ['(*pexpr)->struct_literal()->vals();', 2.598833643460815e-06], ['slice_node', 2.598833643460815e-06], ['ptr_node', 2.598833643460815e-06], ['Node::make_node((*pexpr)->slice_value_expression()->valmem());', 2.598833643460815e-06], ['this->assign(slice_node,', 2.598833643460815e-06], ['ptr_node);', 2.598833643460815e-06], ['pointer_node', 2.598833643460815e-06], ['lit_node', 2.598833643460815e-06], ['Node::make_node((*pexpr)->heap_expression()->expr());', 2.598833643460815e-06], ['this->context_->track(pointer_node);', 2.598833643460815e-06], ['this->assign(pointer_node,', 2.598833643460815e-06], ['lit_node);', 2.598833643460815e-06], ['bound_node', 2.598833643460815e-06], ['this->context_->track(bound_node);', 2.598833643460815e-06], ['(*pexpr)->bound_method_expression()->first_argument();', 2.598833643460815e-06], ['obj_node', 2.598833643460815e-06], ['Node::make_node(obj);', 2.598833643460815e-06], ['obj_node);', 2.598833643460815e-06], ['Map_construction_expression*', 2.598833643460815e-06], ['mce', 2.598833643460815e-06], ['(*pexpr)->map_literal();', 2.598833643460815e-06], ['map_node', 2.598833643460815e-06], ['Node::make_node(mce);', 2.598833643460815e-06], ['this->context_->track(map_node);', 2.598833643460815e-06], ['(mce->vals()', 2.598833643460815e-06], ['mce->vals()->begin();', 2.598833643460815e-06], ['mce->vals()->end();', 2.598833643460815e-06], ['(*pexpr)->func_expression();', 2.598833643460815e-06], ['closure_node', 2.598833643460815e-06], ['Node::make_node(fe);', 2.598833643460815e-06], ['this->context_->track(closure_node);', 2.598833643460815e-06], ['&struct{f', 2.598833643460815e-06], ['[]*Variable}{...}.', 2.598833643460815e-06], ['Link', 2.598833643460815e-06], ['enclosed.', 2.598833643460815e-06], ['Heap_expression*', 2.598833643460815e-06], ['he', 2.598833643460815e-06], ['fe->closure()->heap_expression();', 2.598833643460815e-06], ['he->expr()->struct_literal();', 2.598833643460815e-06], ['sce->vals()->begin();', 2.598833643460815e-06], ['sce->vals()->end();', 2.598833643460815e-06], ['this->context_->track(enclosed_node);', 2.598833643460815e-06], ['this->assign(closure_node,', 2.598833643460815e-06], ['enclosed_node);', 2.598833643460815e-06], ['(*pexpr)->unary_expression()->operand();', 2.598833643460815e-06], ['(operand->var_expression()', 2.598833643460815e-06], ['operand->var_expression()->named_object();', 2.598833643460815e-06], ['(operand->enclosed_var_expression()', 2.598833643460815e-06], ['operand->enclosed_var_expression()->variable();', 2.598833643460815e-06], ['((var->is_variable()', 2.598833643460815e-06], ['var->var_value()->is_parameter())', 2.598833643460815e-06], ['var->is_result_variable()))', 2.598833643460815e-06], ['(*pexpr)->unary_expression()->op()', 2.598833643460815e-06], ['*x,', 2.598833643460815e-06], ['expr_state', 2.598833643460815e-06], ['operand_node', 2.598833643460815e-06], ['Node::make_node(operand);', 2.598833643460815e-06], ['operand_state', 2.598833643460815e-06], ['operand_node->state(this->context_,', 2.598833643460815e-06], ['(operand_state->loop_depth', 2.598833643460815e-06], ['expr_state->loop_depth', 2.598833643460815e-06], ['operand_state->loop_depth;', 2.598833643460815e-06], ['(*pexpr)->array_index_expression();', 2.598833643460815e-06], ['elem_state', 2.598833643460815e-06], ['array_state', 2.598833643460815e-06], ['array_node->state(this->context_,', 2.598833643460815e-06], ['elem_state->loop_depth', 2.598833643460815e-06], ['aie->array(),', 2.598833643460815e-06], ['aie->location());', 2.598833643460815e-06], ['addr_node', 2.598833643460815e-06], ['Node::make_node(addr);', 2.598833643460815e-06], ['n->set_child(addr_node);', 2.598833643460815e-06], ['this->context_->track(addr_node);', 2.598833643460815e-06], ['addr_node->state(this->context_,', 2.598833643460815e-06], ['Node::make_node((*pexpr)->field_reference_expression()->expr());', 2.598833643460815e-06], ['field_state', 2.598833643460815e-06], ['struct_state', 2.598833643460815e-06], ['struct_node->state(this->context_,', 2.598833643460815e-06], ['field_state->loop_depth', 2.598833643460815e-06], ['struct_state->loop_depth;', 2.598833643460815e-06], ['Escape_analysis_assign::call(Call_expression*', 2.598833643460815e-06], ['call->get_function_type();', 2.598833643460815e-06], ['fntype->receiver()->type()->interface_type()', 2.598833643460815e-06], ['(fn->named_object()->is_function()', 2.598833643460815e-06], ['fn->named_object()->func_value()->enclosing()', 2.598833643460815e-06], ['arg_nodes;', 2.598833643460815e-06], ['(call->fn()->interface_field_reference_expression()', 2.598833643460815e-06], ['call->fn()->interface_field_reference_expression();', 2.598833643460815e-06], ['field_node', 2.598833643460815e-06], ['Node::make_node(ifre->expr());', 2.598833643460815e-06], ['arg_nodes.push_back(field_node);', 2.598833643460815e-06], ['arg_nodes.push_back(Node::make_node(*p));', 2.598833643460815e-06], ['(indirect)', 2.598833643460815e-06], ['theSink.', 2.598833643460815e-06], ['#14409.', 2.598833643460815e-06], ['fn_node', 2.598833643460815e-06], ['NULL)->retvals;', 2.598833643460815e-06], ['this->assign_deref(*p,', 2.598833643460815e-06], ['fn_node);', 2.598833643460815e-06], ['untagged', 2.598833643460815e-06], ['fn->named_object()->is_function()', 2.598833643460815e-06], ['!fntype->is_tagged())', 2.598833643460815e-06], ['group",', 2.598833643460815e-06], ['fn->named_object()->func_value();', 2.598833643460815e-06], ['f->block()->bindings();', 2.598833643460815e-06], ['f->result_variables();', 2.598833643460815e-06], ['result_node', 2.598833643460815e-06], ['Node::make_node(*p1);', 2.598833643460815e-06], ['state->retvals.push_back(result_node);', 2.598833643460815e-06], ['rcvr_name', 2.598833643460815e-06], ['fntype->receiver()->name();', 2.598833643460815e-06], ['(rcvr_name.empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(rcvr_name)', 2.598833643460815e-06], ['!fntype->receiver()->type()->has_pointer())', 2.598833643460815e-06], ['callee_bindings->lookup_local(fntype->receiver()->name());', 2.598833643460815e-06], ['this->assign_deref(rcvr_node,', 2.598833643460815e-06], ['this->assign(rcvr_node,', 2.598833643460815e-06], ['(p1->name().empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(p1->name()))', 2.598833643460815e-06], ['callee_bindings->lookup_local(p1->name());', 2.598833643460815e-06], ['(*p)->expr();', 2.598833643460815e-06], ['(arg->var_expression()', 2.598833643460815e-06], ['arg->var_expression()->named_object()', 2.598833643460815e-06], ['param_no)', 2.598833643460815e-06], ['this->assign(param_node,', 2.598833643460815e-06], ['recursive",', 2.598833643460815e-06], ['(!call_state->retvals.empty())', 2.598833643460815e-06], ['"esc', 2.598833643460815e-06], ['decorated', 2.598833643460815e-06], ['Receiver.', 2.598833643460815e-06], ['arg_nodes.end())', 2.598833643460815e-06], ['fntype->receiver()->note();', 2.598833643460815e-06], ['this->context_->add_dereference(*p));', 2.598833643460815e-06], ['(!Type::are_identical(fntype->receiver()->type(),', 2.598833643460815e-06], ['til->end()', 2.598833643460815e-06], ['++pn,', 2.598833643460815e-06], ['(!Type::are_identical(pn->type(),', 2.598833643460815e-06], ['pn->type();', 2.598833643460815e-06], ['t->has_pointer())', 2.598833643460815e-06], ['pn->note();', 2.598833643460815e-06], ['!call->is_deferred()', 2.598833643460815e-06], ['!call->is_concurrent())', 2.598833643460815e-06], ['non-escaping?', 2.598833643460815e-06], ['limiting', 2.598833643460815e-06], ['somehow', 2.598833643460815e-06], ['examined', 2.598833643460815e-06], ['[DST]*f(x)', 2.598833643460815e-06], ['[SRC]y,', 2.598833643460815e-06], ['Escape_analysis_assign::assign(Node*', 2.598833643460815e-06], ['go_inform(dst->location(),', 2.598833643460815e-06], ['escassign:', 2.598833643460815e-06], ['%s(%s)[%s]', 2.598833643460815e-06], ['%s(%s)[%s]",', 2.598833643460815e-06], ['dst->details().c_str(),', 2.598833643460815e-06], ['dst->op_format().c_str(),', 2.598833643460815e-06], ['src->op_format().c_str());', 2.598833643460815e-06], ['(dst->is_indirect())', 2.598833643460815e-06], ['this->context_->sink()', 2.598833643460815e-06], ['dst->expr();', 2.598833643460815e-06], ['var->var_value()->is_global())', 2.598833643460815e-06], ['strct', 2.598833643460815e-06], ['(strct->heap_expression()', 2.598833643460815e-06], ['DST.x', 2.598833643460815e-06], ['Node::make_node(strct);', 2.598833643460815e-06], ['(!are->array()->type()->is_slice_type())', 2.598833643460815e-06], ['DST[i]', 2.598833643460815e-06], ['Node::make_node(are->array());', 2.598833643460815e-06], ['(e->unary_expression()->op()', 2.598833643460815e-06], ['Expression::EXPRESSION_MAP_INDEX:', 2.598833643460815e-06], ["map's", 2.598833643460815e-06], ['e->map_index_expression()->index();', 2.598833643460815e-06], ['index_node', 2.598833643460815e-06], ['Node::make_node(index);', 2.598833643460815e-06], ['index_node);', 2.598833643460815e-06], ['dst->expr()->temporary_reference_expression()->statement();', 2.598833643460815e-06], ['(t->value_escapes())', 2.598833643460815e-06], ['Node::make_node(t);', 2.598833643460815e-06], ['here:', 2.598833643460815e-06], ['unmodified.', 2.598833643460815e-06], ['(src->object()', 2.598833643460815e-06], ['Expression::EXPRESSION_ENCLOSED_VAR_REFERENCE:', 2.598833643460815e-06], ['&T{...}.', 2.598833643460815e-06], ['[...]T{...}.', 2.598833643460815e-06], ['map[T]V{...}.', 2.598833643460815e-06], ['T{...}.', 2.598833643460815e-06], ['slice{ptr,', 2.598833643460815e-06], ['cap}', 2.598833643460815e-06], ['new(T).', 2.598833643460815e-06], ['x.M.', 2.598833643460815e-06], ['str1', 2.598833643460815e-06], ['str2', 2.598833643460815e-06], ['Expression::EXPRESSION_UNSAFE_CONVERSION:', 2.598833643460815e-06], ['e->unsafe_conversion_expression()->expr();', 2.598833643460815e-06], ['underlying_node);', 2.598833643460815e-06], ['leaked', 2.598833643460815e-06], ['append.', 2.598833643460815e-06], ['make(...).', 2.598833643460815e-06], ['fe->named_object()->is_function()', 2.598833643460815e-06], ['fe->named_object()->func_value()->is_method()', 2.598833643460815e-06], ['(call->is_deferred()', 2.598833643460815e-06], ['call->is_concurrent()))', 2.598833643460815e-06], ['RECEIVER.', 2.598833643460815e-06], ['rcvr_node);', 2.598833643460815e-06], ['Node::make_node(e);', 2.598833643460815e-06], ['call_state->retvals;', 2.598833643460815e-06], ['Expression::EXPRESSION_CALL_RESULT:', 2.598833643460815e-06], ['Call_result_expression*', 2.598833643460815e-06], ['cre', 2.598833643460815e-06], ['e->call_result_expression();', 2.598833643460815e-06], ['cre->call()->call_expression();', 2.598833643460815e-06], ['Runtime::IFACEE2E2:', 2.598833643460815e-06], ['Runtime::IFACEI2E2:', 2.598833643460815e-06], ['Runtime::IFACEE2I2:', 2.598833643460815e-06], ['Runtime::IFACEI2I2:', 2.598833643460815e-06], ['Runtime::IFACEE2T2P:', 2.598833643460815e-06], ['Runtime::IFACEI2T2P:', 2.598833643460815e-06], ['IFACEI2E2(v),', 2.598833643460815e-06], ['IFACEI2I2(type,', 2.598833643460815e-06], ['IFACEX2T2', 2.598833643460815e-06], ['signature,', 2.598833643460815e-06], ['::expression.', 2.598833643460815e-06], ['(cre->index()', 2.598833643460815e-06], ['ret_node', 2.598833643460815e-06], ['call_node->state(context_,', 2.598833643460815e-06], ['NULL)->retvals[cre->index()];', 2.598833643460815e-06], ['ret_node);', 2.598833643460815e-06], ['(e->func_expression()->closure()', 2.598833643460815e-06], ['tce->expr();', 2.598833643460815e-06], ['Node::make_node(underlying));', 2.598833643460815e-06], ['(!e->type()->has_pointer())', 2.598833643460815e-06], ['Expression::EXPRESSION_TYPE_GUARD:', 2.598833643460815e-06], ['Expression::EXPRESSION_STRING_INDEX:', 2.598833643460815e-06], ['(left->unary_expression()', 2.598833643460815e-06], ['left->unary_expression()->op()', 2.598833643460815e-06], ['(*x).f', 2.598833643460815e-06], ['(aie->array()->type()->is_slice_type())', 2.598833643460815e-06], ['go_assert(src->child()', 2.598833643460815e-06], ['src->child());', 2.598833643460815e-06], ['(!aie->array()->type()->is_slice_type())', 2.598833643460815e-06], ['array_node);', 2.598833643460815e-06], ['sie', 2.598833643460815e-06], ['e->string_index_expression();', 2.598833643460815e-06], ['(e->type()->is_string_type())', 2.598833643460815e-06], ['sie->string();', 2.598833643460815e-06], ['go_assert(left', 2.598833643460815e-06], ['Conversions,', 2.598833643460815e-06], ['access,', 2.598833643460815e-06], ['preserve', 2.598833643460815e-06], ['left_node', 2.598833643460815e-06], ['Node::make_node(left);', 2.598833643460815e-06], ['left_node);', 2.598833643460815e-06], ['(e->binary_expression()->op())', 2.598833643460815e-06], ['Node::make_node(e->binary_expression()->left());', 2.598833643460815e-06], ['left);', 2.598833643460815e-06], ['Node::make_node(e->binary_expression()->right());', 2.598833643460815e-06], ['(e->unary_expression()->op())', 2.598833643460815e-06], ['op_node', 2.598833643460815e-06], ['Node::make_node(e->unary_expression()->operand());', 2.598833643460815e-06], ['op_node);', 2.598833643460815e-06], ['*x', 2.598833643460815e-06], ['Node::make_node(temp));', 2.598833643460815e-06], ['src.', 2.598833643460815e-06], ['(src->statement()', 2.598833643460815e-06], ['src->statement()->temporary_statement()', 2.598833643460815e-06], ['Escape_analysis_assign::assign_deref(Node*', 2.598833643460815e-06], ['indirections', 2.598833643460815e-06], ['Escape_analysis_assign::assign_from_note(std::string*', 2.598833643460815e-06], ['Escape_note::parse_tag(note);', 2.598833643460815e-06], ['how.', 2.598833643460815e-06], ['(this->context_->gogo()->debug_escape_level()', 2.598833643460815e-06], ['"assignfromtag::', 2.598833643460815e-06], ['src=%s', 2.598833643460815e-06], ['em=%s",', 2.598833643460815e-06], ['src->ast_format(context_->gogo()).c_str(),', 2.598833643460815e-06], ['Escape_note::make_tag(enc).c_str());', 2.598833643460815e-06], ['Node::ESCAPE_UNKNOWN)', 2.598833643460815e-06], ['Lost', 2.598833643460815e-06], ['(reached', 2.598833643460815e-06], ['indirection)', 2.598833643460815e-06], ['((enc', 2.598833643460815e-06], ['ESCAPE_CONTENT_ESCAPES)', 2.598833643460815e-06], ['save_enc', 2.598833643460815e-06], ['lowest-level', 2.598833643460815e-06], ['purposes).', 2.598833643460815e-06], ['Two-bit', 2.598833643460815e-06], ['example.', 2.598833643460815e-06], ['options)', 2.598833643460815e-06], ['01', 2.598833643460815e-06], ['0-level', 2.598833643460815e-06], ['1-level,', 2.598833643460815e-06], ['escapes),', 2.598833643460815e-06], ['11', 2.598833643460815e-06], ['2-level,', 2.598833643460815e-06], ['escapes).', 2.598833643460815e-06], ['this->context_->add_dereference(n);', 2.598833643460815e-06], ['this->assign(*p,', 2.598833643460815e-06], ['ESCAPE_BITS_PER_OUTPUT_IN_TAG;', 2.598833643460815e-06], ['ESCAPE_HEAP,', 2.598833643460815e-06], ['save_enc;', 2.598833643460815e-06], ['Escape_analysis_assign::flows(Node*', 2.598833643460815e-06], ['capturing', 2.598833643460815e-06], ['(src->type()', 2.598833643460815e-06], ['!src->type()->has_pointer())', 2.598833643460815e-06], ['(dst->is_sink()', 2.598833643460815e-06], ['this->context_->sink())', 2.598833643460815e-06], ['(dst', 2.598833643460815e-06], ['dst_state->flows.find(src)', 2.598833643460815e-06], ['dst_state->flows.end())', 2.598833643460815e-06], ['"flows::', 2.598833643460815e-06], ['(dst_state->flows.empty())', 2.598833643460815e-06], ['this->context_->add_dst(dst);', 2.598833643460815e-06], ['dst_state->flows.insert(src);', 2.598833643460815e-06], ['Gogo::assign_connectivity(Escape_context*', 2.598833643460815e-06], ['save_depth', 2.598833643460815e-06], ['context->loop_depth();', 2.598833643460815e-06], ['context->set_loop_depth(1);', 2.598833643460815e-06], ['ea(context,', 2.598833643460815e-06], ['fn->func_value()->result_variables();', 2.598833643460815e-06], ['res_node', 2.598833643460815e-06], ['res_state', 2.598833643460815e-06], ['res_node->state(context,', 2.598833643460815e-06], ['res_state->fn', 2.598833643460815e-06], ['res_state->loop_depth', 2.598833643460815e-06], ['recursive,', 2.598833643460815e-06], ['(context->recursive())', 2.598833643460815e-06], ['ea.flows(context->sink(),', 2.598833643460815e-06], ['res_node);', 2.598833643460815e-06], ['fntype->parameters()->copy()', 2.598833643460815e-06], ['Typed_identifier_list);', 2.598833643460815e-06], ['params->push_back(*fntype->receiver());', 2.598833643460815e-06], ['callee_bindings->lookup_local(p->name());', 2.598833643460815e-06], ['param_state', 2.598833643460815e-06], ['param_node->state(context,', 2.598833643460815e-06], ['param_state->fn', 2.598833643460815e-06], ['param_state->loop_depth', 2.598833643460815e-06], ['(!p->type()->has_pointer())', 2.598833643460815e-06], ['function?', 2.598833643460815e-06], ['param_node->set_encoding(Node::ESCAPE_HEAP);', 2.598833643460815e-06], ['param_node->set_encoding(Node::ESCAPE_NONE);', 2.598833643460815e-06], ['context->track(param_node);', 2.598833643460815e-06], ['el;', 2.598833643460815e-06], ['fn->func_value()->traverse(&el);', 2.598833643460815e-06], ['fn->func_value()->traverse(&ea);', 2.598833643460815e-06], ['context->set_loop_depth(save_depth);', 2.598833643460815e-06], ['Escape_analysis_flood(Escape_context*', 2.598833643460815e-06], ['upstream.', 2.598833643460815e-06], ['flood(Level,', 2.598833643460815e-06], ['flooded.', 2.598833643460815e-06], ['Whenever', 2.598833643460815e-06], ['dereference,', 2.598833643460815e-06], ['/value/', 2.598833643460815e-06], ["flood's", 2.598833643460815e-06], ['gc/esc.go:escwalkBody.', 2.598833643460815e-06], ['Escape_analysis_flood::flood(Level', 2.598833643460815e-06], ['(src_state->flood_id', 2.598833643460815e-06], ['this->context_->flood_id())', 2.598833643460815e-06], ['Esclevels', 2.598833643460815e-06], ['"min"', 2.598833643460815e-06], ['convergence.', 2.598833643460815e-06], ['level.min(src_state->level);', 2.598833643460815e-06], ['src_state->level)', 2.598833643460815e-06], ['extraloopdepth,', 2.598833643460815e-06], ['extraloopdepth', 2.598833643460815e-06], ['improvement', 2.598833643460815e-06], ["what's", 2.598833643460815e-06], ['seen?', 2.598833643460815e-06], ['(src_state->max_extra_loop_depth', 2.598833643460815e-06], ['src_state->loop_depth', 2.598833643460815e-06], ['extra_loop_depth;', 2.598833643460815e-06], ['src_state->flood_id', 2.598833643460815e-06], ['this->context_->flood_id();', 2.598833643460815e-06], ['src_state->level', 2.598833643460815e-06], ['level;', 2.598833643460815e-06], ['mod_loop_depth', 2.598833643460815e-06], ['std::max(extra_loop_depth,', 2.598833643460815e-06], ['src_state->loop_depth);', 2.598833643460815e-06], ['"escwalk:', 2.598833643460815e-06], ['level:{%d', 2.598833643460815e-06], ['%d}', 2.598833643460815e-06], ['depth:%d', 2.598833643460815e-06], ['"op=%s', 2.598833643460815e-06], ['%s(%s)', 2.598833643460815e-06], ['"scope:%s[%d]', 2.598833643460815e-06], ['"extraloopdepth=%d",', 2.598833643460815e-06], ['this->context_->pdepth(),', 2.598833643460815e-06], ['src->op_format().c_str(),', 2.598833643460815e-06], ['debug_function_name(src_state->fn).c_str(),', 2.598833643460815e-06], ['src_state->loop_depth,', 2.598833643460815e-06], ['this->context_->increase_pdepth();', 2.598833643460815e-06], ['Input', 2.598833643460815e-06], ['parameter?', 2.598833643460815e-06], ['src->expr()->var_expression()', 2.598833643460815e-06], ['src->expr()->var_expression()->named_object();', 2.598833643460815e-06], ['src->object();', 2.598833643460815e-06], ['src_is_param', 2.598833643460815e-06], ['(src_no', 2.598833643460815e-06], ['src_no->is_variable()', 2.598833643460815e-06], ['src_no->var_value()->is_parameter());', 2.598833643460815e-06], ['dst->expr()->var_expression()', 2.598833643460815e-06], ['dst->expr()->var_expression()->named_object();', 2.598833643460815e-06], ['dst->object();', 2.598833643460815e-06], ['dst_no->is_result_variable();', 2.598833643460815e-06], ['src_state->fn', 2.598833643460815e-06], ['dst_state->fn', 2.598833643460815e-06], ['handles:', 2.598833643460815e-06], ['&in', 2.598833643460815e-06], ['&tmp', 2.598833643460815e-06], ['*in', 2.598833643460815e-06], ['level=%d",', 2.598833643460815e-06], ['level.value());', 2.598833643460815e-06], ['%d}",', 2.598833643460815e-06], ['level.suffix_value());', 2.598833643460815e-06], ['((src->encoding()', 2.598833643460815e-06], ['Node::ESCAPE_RETURN', 2.598833643460815e-06], ['ESCAPE_CONTENT_ESCAPES);', 2.598833643460815e-06], ['Node::note_inout_flows(src->encoding(),', 2.598833643460815e-06], ['dst_no->result_var_value()->index(),', 2.598833643460815e-06], ['level);', 2.598833643460815e-06], ['gc/esc.go:escwalkBody,', 2.598833643460815e-06], ['flooding', 2.598833643460815e-06], ['Inlined', 2.598833643460815e-06], ['convenience.', 2.598833643460815e-06], ['ESCAPE_CONTENT_ESCAPES.', 2.598833643460815e-06], ['pointer-to-struct', 2.598833643460815e-06], ['Node::ESCAPE_HEAP', 2.598833643460815e-06], ['"mark', 2.598833643460815e-06], ['depth).', 2.598833643460815e-06], ['(dst->encoding()', 2.598833643460815e-06], ['Node::ESCAPE_HEAP);', 2.598833643460815e-06], ['src->encoding();', 2.598833643460815e-06], ['int(Node::ESCAPE_HEAP))', 2.598833643460815e-06], ['(level.suffix_value()', 2.598833643460815e-06], ['(e->enclosed_var_expression()', 2.598833643460815e-06], ['Node::make_node(e->enclosed_var_expression()->variable());', 2.598833643460815e-06], ['enclosed_node,', 2.598833643460815e-06], ['(e->heap_expression()', 2.598833643460815e-06], ['OPERATOR_AND))', 2.598833643460815e-06], ['(e->heap_expression())', 2.598833643460815e-06], ['e->heap_expression()->expr();', 2.598833643460815e-06], ['leaks,', 2.598833643460815e-06], ['underyling', 2.598833643460815e-06], ['underlying->address_taken(src_leaks);', 2.598833643460815e-06], ['(osrcesc', 2.598833643460815e-06], ['underlying);', 2.598833643460815e-06], ['%d},', 2.598833643460815e-06], ['"dst.eld=%d,', 2.598833643460815e-06], ['src.eld=%d",', 2.598833643460815e-06], ['dst_state->loop_depth,', 2.598833643460815e-06], ['(e->slice_literal()', 2.598833643460815e-06], ['e->slice_literal();', 2.598833643460815e-06], ['(slice->vals()', 2.598833643460815e-06], ['slice->vals()->begin();', 2.598833643460815e-06], ['slice->vals()->end();', 2.598833643460815e-06], ['Node::make_node(*p),', 2.598833643460815e-06], ['appendee.', 2.598833643460815e-06], ['call->args()->front();', 2.598833643460815e-06], ['Node::make_node(appendee),', 2.598833643460815e-06], ['(src_state->retvals.size()', 2.598833643460815e-06], ['.outN', 2.598833643460815e-06], ['#10466.', 2.598833643460815e-06], ['go_assert(src_state->retvals.size()', 2.598833643460815e-06], ['escwalk', 2.598833643460815e-06], ['src:', 2.598833643460815e-06], ['src_state->retvals[0]->ast_format(gogo).c_str());', 2.598833643460815e-06], ['src_state->retvals[0];', 2.598833643460815e-06], ['(e->allocation_expression()', 2.598833643460815e-06], ['Runtime::NEW', 2.598833643460815e-06], ['((e->map_literal()', 2.598833643460815e-06], ['e->string_concat_expression()', 2.598833643460815e-06], ['e->bound_method_expression()', 2.598833643460815e-06], ['(e->conversion_expression()', 2.598833643460815e-06], ['!e->array_index_expression()->array()->type()->is_slice_type())', 2.598833643460815e-06], ['Flow', 2.598833643460815e-06], ['e->type_guard_expression()', 2.598833643460815e-06], ['e->array_index_expression()->end()', 2.598833643460815e-06], ['e->type()->is_string_type()))', 2.598833643460815e-06], ['e->string_index_expression()->string();', 2.598833643460815e-06], ['e->array_index_expression()', 2.598833643460815e-06], ['e->map_index_expression()', 2.598833643460815e-06], ['OPERATOR_MULT))', 2.598833643460815e-06], ['underlying->unary_expression()->operand();', 2.598833643460815e-06], ['(e->map_index_expression()', 2.598833643460815e-06], ['e->map_index_expression()->map();', 2.598833643460815e-06], ['Node::make_node(t),', 2.598833643460815e-06], ['this->context_->decrease_pdepth();', 2.598833643460815e-06], ['modeled', 2.598833643460815e-06], ['Analysis_set.', 2.598833643460815e-06], ['gc/esc.go:escflood.', 2.598833643460815e-06], ['Gogo::propagate_escape(Escape_context*', 2.598833643460815e-06], ['dst)', 2.598833643460815e-06], ['(dst->object()', 2.598833643460815e-06], ['(dst->expr()->var_expression()', 2.598833643460815e-06], ['dst->expr()->enclosed_var_expression()', 2.598833643460815e-06], ['dst->expr()->func_expression()', 2.598833643460815e-06], ['dst->state(context,', 2.598833643460815e-06], ['"escflood:%d:', 2.598833643460815e-06], ['scope:%s[%d]",', 2.598833643460815e-06], ['context->flood_id(),', 2.598833643460815e-06], ['debug_function_name(state->fn).c_str(),', 2.598833643460815e-06], ['state->loop_depth);', 2.598833643460815e-06], ['eaf(context);', 2.598833643460815e-06], ['state->flows.begin();', 2.598833643460815e-06], ['state->flows.end();', 2.598833643460815e-06], ['context->increase_flood_id();', 2.598833643460815e-06], ['eaf.flood(Level::From(0),', 2.598833643460815e-06], ['Escape_analysis_tag(Escape_context*', 2.598833643460815e-06], ['tag(Named_object*', 2.598833643460815e-06], ['Escape_analysis_tag::tag(Named_object*', 2.598833643460815e-06], ['fdcl', 2.598833643460815e-06], ['fn->func_declaration_value();', 2.598833643460815e-06], ['((fdcl->pragmas()', 2.598833643460815e-06], ['GOPRAGMA_NOESCAPE)', 2.598833643460815e-06], ['fdcl->type();', 2.598833643460815e-06], ['(fntype->receiver()->name().empty()', 2.598833643460815e-06], ['Gogo::is_sink_name(fntype->receiver()->name()))', 2.598833643460815e-06], ['Unnamed', 2.598833643460815e-06], ['fntype->add_receiver_note(Node::ESCAPE_NONE);', 2.598833643460815e-06], ['bindings->lookup(fntype->receiver()->name());', 2.598833643460815e-06], ['((rcvr_node->encoding()', 2.598833643460815e-06], ['(fntype->receiver()->type()->has_pointer())', 2.598833643460815e-06], ['fntype->add_receiver_note(rcvr_node->encoding());', 2.598833643460815e-06], ['bindings->lookup(p->name());', 2.598833643460815e-06], ['((param_node->encoding()', 2.598833643460815e-06], ['param_node->encoding());', 2.598833643460815e-06], ['Gogo::tag_function(Escape_context*', 2.598833643460815e-06], ['eat(context);', 2.598833643460815e-06], ['eat.tag(fn);', 2.598833643460815e-06], ['Gogo::reclaim_escape_nodes()', 2.598833643460815e-06], ['Node::reclaim_nodes();', 2.598833643460815e-06], ['Node::reclaim_nodes()', 2.598833643460815e-06], ['(std::map<Named_object*,', 2.598833643460815e-06], ['Node::objects.begin();', 2.598833643460815e-06], ['Node::objects.end();', 2.598833643460815e-06], ['Node::objects.clear();', 2.598833643460815e-06], ['(std::map<Expression*,', 2.598833643460815e-06], ['Node::expressions.begin();', 2.598833643460815e-06], ['Node::expressions.end();', 2.598833643460815e-06], ['Node::expressions.clear();', 2.598833643460815e-06], ['(std::map<Statement*,', 2.598833643460815e-06], ['Node::statements.begin();', 2.598833643460815e-06], ['Node::statements.end();', 2.598833643460815e-06], ['Node::statements.clear();', 2.598833643460815e-06], ['Node::indirects.begin();', 2.598833643460815e-06], ['Node::indirects.end();', 2.598833643460815e-06], ['Node::indirects.clear();', 2.598833643460815e-06], ["BB's", 2.598833643460815e-06], ['clrt.', 2.598833643460815e-06], ['hit,', 2.598833643460815e-06], ['Insns', 2.598833643460815e-06], ['(simple', 2.598833643460815e-06], ['etc)', 2.598833643460815e-06], ['recorded.', 2.598833643460815e-06], ['Conditional', 2.598833643460815e-06], ['leads', 2.598833643460815e-06], ['eliminated.', 2.598833643460815e-06], ['~sh_optimize_sett_clrt', 2.598833643460815e-06], ['(function*);', 2.598833643460815e-06], ['fun);', 2.598833643460815e-06], ['discovered.', 2.598833643460815e-06], ['NULL_RTX,', 2.598833643460815e-06], ['clobbered).', 2.598833643460815e-06], ['STORE_FLAG_VALUE.', 2.598833643460815e-06], ['jumping/falling', 2.598833643460815e-06], ['sh_cbranch_ccreg_value', 2.598833643460815e-06], ['values);', 2.598833643460815e-06], ['REG_DEAD', 2.598833643460815e-06], ['REG_UNUSED', 2.598833643460815e-06], ['sh_optimize_sett_clrt::default_pass_data', 2.598833643460815e-06], ['sh_optimize_sett_clrt::sh_optimize_sett_clrt', 2.598833643460815e-06], ['sh_optimize_sett_clrt::~sh_optimize_sett_clrt', 2.598833643460815e-06], ['sh_optimize_sett_clrt::gate', 2.598833643460815e-06], ['(function*)', 2.598833643460815e-06], ['sh_optimize_sett_clrt::execute', 2.598833643460815e-06], ['(!df_regs_ever_live_p', 2.598833643460815e-06], ['(ccr0))', 2.598833643460815e-06], ['"ccreg', 2.598833643460815e-06], ['live\\n\\n");', 2.598833643460815e-06], ['find_known_ccreg_values.', 2.598833643460815e-06], ['std::vector<ccreg_value>', 2.598833643460815e-06], ['ccreg_values;', 2.598833643460815e-06], ['ccreg_values.reserve', 2.598833643460815e-06], ['visited_bbs;', 2.598833643460815e-06], ['visited_bbs.reserve', 2.598833643460815e-06], ['FOR_EACH_BB_REVERSE_FN', 2.598833643460815e-06], ['*next_i,', 2.598833643460815e-06], ['next_i)', 2.598833643460815e-06], ['next_i', 2.598833643460815e-06], ['!NONDEBUG_INSN_P', 2.598833643460815e-06], ['setcc_val', 2.598833643460815e-06], ['(setcc_val', 2.598833643460815e-06], ['("\\n\\nfound', 2.598833643460815e-06], ['%d]:', 2.598833643460815e-06], ['\\n",', 2.598833643460815e-06], ['ccreg_values.clear', 2.598833643460815e-06], ['visited_bbs.clear', 2.598833643460815e-06], ['(PREV_INSN', 2.598833643460815e-06], ['ccreg_values,', 2.598833643460815e-06], ['visited_bbs);', 2.598833643460815e-06], ['collected:', 2.598833643460815e-06], ['int)ccreg_values.size', 2.598833643460815e-06], ['(ok', 2.598833643460815e-06], ['(ccreg_values)', 2.598833643460815e-06], ['(ccreg_values.front', 2.598833643460815e-06], ['().value,', 2.598833643460815e-06], ['setcc_val))', 2.598833643460815e-06], ['("all', 2.598833643460815e-06], ['(setcc_val);', 2.598833643460815e-06], ['(ccreg_values);', 2.598833643460815e-06], ['sh_optimize_sett_clrt::update_ccreg_mode', 2.598833643460815e-06], ['sh_optimize_sett_clrt::const_setcc_value', 2.598833643460815e-06], ['(pat)', 2.598833643460815e-06], ['STORE_FLAG_VALUE))', 2.598833643460815e-06], ['::sh_cbranch_ccreg_value', 2.598833643460815e-06], ['pc_set_rtx', 2.598833643460815e-06], ['(pc_set_rtx', 2.598833643460815e-06], ['(pc_set_rtx,', 2.598833643460815e-06], ['!branch_if;', 2.598833643460815e-06], ['::find_last_ccreg_values', 2.598833643460815e-06], ['CFGs', 2.598833643460815e-06], ['unnecessarily', 2.598833643460815e-06], ['re-visit', 2.598833643460815e-06], ['visited,', 2.598833643460815e-06], ['container', 2.598833643460815e-06], ['re-visits.', 2.598833643460815e-06], ['("looking', 2.598833643460815e-06], ['(!prev_visited_bb.empty', 2.598833643460815e-06], ['("(prev', 2.598833643460815e-06], ['%d])",', 2.598833643460815e-06], ['(set_rtx)', 2.598833643460815e-06], ['("\\nccreg', 2.598833643460815e-06], ['value:', 2.598833643460815e-06], ['!prev_visited_bb.empty', 2.598833643460815e-06], ['branching/falling', 2.598833643460815e-06], ['successor', 2.598833643460815e-06], ['came', 2.598833643460815e-06], ['(sh_cbranch_ccreg_value', 2.598833643460815e-06], ['walked', 2.598833643460815e-06], ['(prev_visited_bb.rbegin', 2.598833643460815e-06], ['prev_visited_bb.push_back', 2.598833643460815e-06], ['(bb->preds);', 2.598833643460815e-06], ['(ei)->flags', 2.598833643460815e-06], ['EDGE_COMPLEX)', 2.598833643460815e-06], ['"aborting', 2.598833643460815e-06], ['edge\\n");', 2.598833643460815e-06], ['pred_bb', 2.598833643460815e-06], ['(ei)->src;', 2.598833643460815e-06], ['(!find_last_ccreg_values', 2.598833643460815e-06], ['(pred_bb),', 2.598833643460815e-06], ['pred_bb,', 2.598833643460815e-06], ['prev_visited_bb))', 2.598833643460815e-06], ['prev_visited_bb.pop_back', 2.598833643460815e-06], ['("loop', 2.598833643460815e-06], ['detected', 2.598833643460815e-06], ['bb->index,', 2.598833643460815e-06], ['pred_bb_count);', 2.598833643460815e-06], ['(pred_bb_count', 2.598833643460815e-06], ['::all_ccreg_values_equal', 2.598833643460815e-06], ['(values.empty', 2.598833643460815e-06], ['last_value', 2.598833643460815e-06], ['values.front', 2.598833643460815e-06], ['().value;', 2.598833643460815e-06], ['(last_value', 2.598833643460815e-06], ['(std::vector<ccreg_value>::const_iterator', 2.598833643460815e-06], ['(i->value', 2.598833643460815e-06], ['!rtx_equal_p', 2.598833643460815e-06], ['(last_value,', 2.598833643460815e-06], ['i->value))', 2.598833643460815e-06], ['::remove_ccreg_dead_unused_notes', 2.598833643460815e-06], ['(std::vector<ccreg_value>::iterator', 2.598833643460815e-06], ['(i->insn', 2.598833643460815e-06], ['make_pass_sh_optimize_sett_clrt', 2.598833643460815e-06], ['brig-control-handler.cc', 2.598833643460815e-06], ['brig_directive_control_handler::operator', 2.598833643460815e-06], ['(inst->operands);', 2.598833643460815e-06], ['(inst->control', 2.598833643460815e-06], ['BRIG_CONTROL_REQUIREDGRIDSIZE', 2.598833643460815e-06], ['inst->control', 2.598833643460815e-06], ['BRIG_CONTROL_MAXFLATGRIDSIZE)', 2.598833643460815e-06], ['uint64_type_node', 2.598833643460815e-06], ['(build_tree_operand', 2.598833643460815e-06], ['(*(const', 2.598833643460815e-06], ['BrigInstBase*)inst,', 2.598833643460815e-06], ['operand_type));', 2.598833643460815e-06], ['(inst->control)', 2.598833643460815e-06], ['BRIG_CONTROL_MAXDYNAMICGROUPSIZE:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.max_dynamic_group_size', 2.598833643460815e-06], ['BRIG_CONTROL_MAXFLATGRIDSIZE:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.max_flat_grid_size', 2.598833643460815e-06], ['BRIG_CONTROL_MAXFLATWORKGROUPSIZE:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.max_flat_workgroup_size', 2.598833643460815e-06], ['BRIG_CONTROL_REQUIREDDIM:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_dim', 2.598833643460815e-06], ['BRIG_CONTROL_REQUIREDGRIDSIZE:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[0]', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[1]', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[2]', 2.598833643460815e-06], ['BRIG_CONTROL_REQUIREDWORKGROUPSIZE:', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[0]', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[1]', 2.598833643460815e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[2]', 2.598833643460815e-06], ['BRIG_CONTROL_REQUIRENOPARTIALWORKGROUPS:', 2.598833643460815e-06], ['Performance', 2.598833643460815e-06], ['BRIG_CONTROL_ENABLEBREAKEXCEPTIONS:', 2.598833643460815e-06], ['BRIG_CONTROL_ENABLEDETECTEXCEPTIONS:', 2.598833643460815e-06], ['Unimplemented.', 2.598833643460815e-06], ['("Unsupported', 2.598833643460815e-06], ['%x.\\n",', 2.598833643460815e-06], ['inst->control);', 2.598833643460815e-06], ['brig-variable-handler.cc', 2.598833643460815e-06], ['brig_directive_variable_handler::build_variable', 2.598833643460815e-06], ['var_decltype)', 2.598833643460815e-06], ['BRIG_SEGMENT_KERNARG', 2.598833643460815e-06], ['(brigVar->modifier', 2.598833643460815e-06], ['BRIG_VARIABLE_CONST))', 2.598833643460815e-06], ['(brigVar->segment);', 2.598833643460815e-06], ['var_decltype,', 2.598833643460815e-06], ['alignments.', 2.598833643460815e-06], ['(is_definition)', 2.598833643460815e-06], ['(brigVar->init', 2.598833643460815e-06], ['BRIG_SEGMENT_GLOBAL);', 2.598833643460815e-06], ['*cst_operand_data', 2.598833643460815e-06], ['(brigVar->init);', 2.598833643460815e-06], ['(cst_operand_data->kind', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CONSTANT_BYTES)', 2.598833643460815e-06], ['cst_operand_data,', 2.598833643460815e-06], ['("variable', 2.598833643460815e-06], ['%x', 2.598833643460815e-06], ['cst_operand_data->kind);', 2.598833643460815e-06], ['(initializer', 2.598833643460815e-06], ['initializer;', 2.598833643460815e-06], ['brig_directive_variable_handler::operator', 2.598833643460815e-06], ['var_size;', 2.598833643460815e-06], ['(var_type))', 2.598833643460815e-06], ['function_scope', 2.598833643460815e-06], ['(function_scope)', 2.598833643460815e-06], ['Non-kernel', 2.598833643460815e-06], ["'analyze'", 2.598833643460815e-06], ['function_scope);', 2.598833643460815e-06], ['analyze,', 2.598833643460815e-06], ['(module', 2.598833643460815e-06], ['scope)', 2.598833643460815e-06], ['m_parent.m_cf->append_kernel_arg', 2.598833643460815e-06], ['accessed.', 2.598833643460815e-06], ['(!m_parent.has_private_variable', 2.598833643460815e-06], ['m_parent.append_private_variable', 2.598833643460815e-06], ['(gccbrig_might_be_host_defined_var_p', 2.598833643460815e-06], ['(brigVar))', 2.598833643460815e-06], ['m_parent.add_host_def_var_ptr', 2.598833643460815e-06], ['Runtime', 2.598833643460815e-06], ['API.', 2.598833643460815e-06], ['m_parent.add_global_variable', 2.598833643460815e-06], ['(m_parent.m_cf->m_generating_arg_block)', 2.598833643460815e-06], ['brig-function-handler.cc.', 2.598833643460815e-06], ['brig_directive_variable_handler::get_brig_var_alignment', 2.598833643460815e-06], ['brigVar->align', 2.598833643460815e-06], ['BRIG_ALIGNMENT_NONE', 2.598833643460815e-06], ['(brigVar->align', 2.598833643460815e-06], ['natural_alignment;', 2.598833643460815e-06], ['defined_alignment;', 2.598833643460815e-06], ['brig_code_entry_handler::brig_code_entry_handler', 2.598833643460815e-06], ['brig_entry_handler', 2.598833643460815e-06], ['piece', 2.598833643460815e-06], ['REF', 2.598833643460815e-06], ['brig_code_entry_handler::build_code_ref', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_LABEL)', 2.598833643460815e-06], ['(label_str);', 2.598833643460815e-06], ['(m_parent.get_mangled_name', 2.598833643460815e-06], ['(func));', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_FBARRIER)', 2.598833643460815e-06], ['BrigDirectiveFbarrier*)&ref;', 2.598833643460815e-06], ['local_offset,', 2.598833643460815e-06], ['local_offset;', 2.598833643460815e-06], ['OPERAND.', 2.598833643460815e-06], ['BrigBase.', 2.598833643460815e-06], ['IS_INPUT', 2.598833643460815e-06], ['brig_code_entry_handler::build_tree_operand', 2.598833643460815e-06], ['&operand,', 2.598833643460815e-06], ['is_input)', 2.598833643460815e-06], ['(operand.kind)', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST:', 2.598833643460815e-06], ['unpack/pack', 2.598833643460815e-06], ['fp16-fp32', 2.598833643460815e-06], ['().', 2.598833643460815e-06], ['(is_input', 2.598833643460815e-06], ['(element)', 2.598833643460815e-06], ['operand_type)', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CODE_LIST:', 2.598833643460815e-06], ['case_index', 2.598833643460815e-06], ['(case_index', 2.598833643460815e-06], ['case_index)', 2.598833643460815e-06], ['case_index++;', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_REGISTER:', 2.598833643460815e-06], ['*brig_reg', 2.598833643460815e-06], ['(brig_reg);', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CONSTANT_BYTES:', 2.598833643460815e-06], ['*brigConst', 2.598833643460815e-06], ['(brigConst,', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_WAVESIZE:', 2.598833643460815e-06], ['(operand_type))', 2.598833643460815e-06], ['gccbrig_get_target_wavesize', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CODE_REF:', 2.598833643460815e-06], ['*brig_code_ref', 2.598833643460815e-06], ['(brig_code_ref->ref);', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_ADDRESS:', 2.598833643460815e-06], ['ADDR_OPERAND.', 2.598833643460815e-06], ['brig_code_entry_handler::build_address_operand', 2.598833643460815e-06], ['&addr_operand)', 2.598833643460815e-06], ['BrigSegment8_t', 2.598833643460815e-06], ['BRIG_SEGMENT_GLOBAL;', 2.598833643460815e-06], ['BrigInstAddr', 2.598833643460815e-06], ['BRIG_KIND_INST_ATOMIC)', 2.598833643460815e-06], ['(addr_operand.symbol', 2.598833643460815e-06], ['*arg_symbol', 2.598833643460815e-06], ['(addr_operand.symbol);', 2.598833643460815e-06], ['__args', 2.598833643460815e-06], ['m_parent.m_cf->kernel_arg_offset', 2.598833643460815e-06], ['const_offset,', 2.598833643460815e-06], ['m_parent.private_variable_segment_offset', 2.598833643460815e-06], ["item's", 2.598833643460815e-06], ['copy:', 2.598833643460815e-06], ['single-wi-offset', 2.598833643460815e-06], ['wiflatid', 2.598833643460815e-06], ['varsize', 2.598833643460815e-06], ['segment,', 2.598833643460815e-06], ['helping', 2.598833643460815e-06], ['achieve', 2.598833643460815e-06], ['autovectorization', 2.598833643460815e-06], ['loads/stores', 2.598833643460815e-06], ['uint32_0),', 2.598833643460815e-06], ['uint32_1));', 2.598833643460815e-06], ['uint32_2),', 2.598833643460815e-06], ['var_region', 2.598833643460815e-06], ['offset),', 2.598833643460815e-06], ['m_parent.private_variable_size', 2.598833643460815e-06], ['(var_name)),', 2.598833643460815e-06], ['(BRIG_OPCODE_WORKITEMFLATID,', 2.598833643460815e-06], ['var_region,', 2.598833643460815e-06], ['mem-related', 2.598833643460815e-06], ['(private', 2.598833643460815e-06], ['group)', 2.598833643460815e-06], ['group_var_offset.', 2.598833643460815e-06], ['("priv_var_offset",', 2.598833643460815e-06], ['arg_var_decl;', 2.598833643460815e-06], ['(m_parent.m_cf->m_ret_value_brig_var', 2.598833643460815e-06], ['arg_symbol)', 2.598833643460815e-06], ['m_parent.m_cf->m_ret_temp;', 2.598833643460815e-06], ['(arg_var_decl', 2.598833643460815e-06], ['(arg_symbol->type', 2.598833643460815e-06], ['segment),', 2.598833643460815e-06], ['(arg_var_decl)))', 2.598833643460815e-06], ['site),', 2.598833643460815e-06], ['(arg_var_decl)),', 2.598833643460815e-06], ['arg_var_decl,', 2.598833643460815e-06], ['global_var_decl', 2.598833643460815e-06], ['(yet),', 2.598833643460815e-06], ['host_ptr_name', 2.598833643460815e-06], ['host_defined_ptr', 2.598833643460815e-06], ['(host_ptr_name);', 2.598833643460815e-06], ['(host_defined_ptr', 2.598833643460815e-06], ['host_defined_ptr;', 2.598833643460815e-06], ['global_var_decl);', 2.598833643460815e-06], ['lda_*', 2.598833643460815e-06], ['segments', 2.598833643460815e-06], ['now).', 2.598833643460815e-06], ['m_parent.m_cf->m_group_base_arg;', 2.598833643460815e-06], ['m_parent.m_cf->m_private_base_arg,', 2.598833643460815e-06], ['symbol_base);', 2.598833643460815e-06], ['m_parent.m_cf->m_private_base_arg;', 2.598833643460815e-06], ['(addr_operand.reg', 2.598833643460815e-06], ['*mem_base_reg', 2.598833643460815e-06], ['(addr_operand.reg);', 2.598833643460815e-06], ['base_reg_var', 2.598833643460815e-06], ['(mem_base_reg);', 2.598833643460815e-06], ['as_uint', 2.598833643460815e-06], ['(base_reg_var);', 2.598833643460815e-06], ['as_uint);', 2.598833643460815e-06], ['target/data', 2.598833643460815e-06], ['(ptype', 2.598833643460815e-06], ['addressing', 2.598833643460815e-06], ['[+', 2.598833643460815e-06], ['offset].', 2.598833643460815e-06], ['symbol_base),', 2.598833643460815e-06], ['var_offset;', 2.598833643460815e-06], ['symbol_base;', 2.598833643460815e-06], ['(const_offset', 2.598833643460815e-06], ['module-scope', 2.598833643460815e-06], ['const_offset.', 2.598833643460815e-06], ['Group', 2.598833643460815e-06], ['const_offset;', 2.598833643460815e-06], ['const_offset));', 2.598833643460815e-06], ['Thus,', 2.598833643460815e-06], ['offs', 2.598833643460815e-06], ['(addr_operand.offset);', 2.598833643460815e-06], ['(offs', 2.598833643460815e-06], ['32bits', 2.598833643460815e-06], ['See:', 2.598833643460815e-06], ['http://www.hsafoundation.com/html_spec111/HSA_Library.htm', 2.598833643460815e-06], ['#PRM/Topics/02_ProgModel/small_and_large_machine_models.htm', 2.598833643460815e-06], ['#table_machine_model_data_sizes', 2.598833643460815e-06], ['BRIG_SEGMENT_KERNARG;', 2.598833643460815e-06], ['const_offset_2', 2.598833643460815e-06], ['offs)', 2.598833643460815e-06], ['(long_integer_type_node,', 2.598833643460815e-06], ['offs));', 2.598833643460815e-06], ['const_offset_2;', 2.598833643460815e-06], ['Addr', 2.598833643460815e-06], ['addr),', 2.598833643460815e-06], ['const_offset_2));', 2.598833643460815e-06], ['OPERAND_INDEX', 2.598833643460815e-06], ['OPERAND_TYPE.', 2.598833643460815e-06], ['brig_code_entry_handler::build_tree_operand_from_brig', 2.598833643460815e-06], ['operand_index)', 2.598833643460815e-06], ['&operand_entries->bytes)[operand_index];', 2.598833643460815e-06], ['inputp', 2.598833643460815e-06], ['!gccbrig_hsa_opcode_op_output_p', 2.598833643460815e-06], ['operand_index);', 2.598833643460815e-06], ['inputp);', 2.598833643460815e-06], ['NEXT_DATA.', 2.598833643460815e-06], ['brig_code_entry_handler::build_tree_cst_element', 2.598833643460815e-06], ['*next_data)', 2.598833643460815e-06], ['uint16_t', 2.598833643460815e-06], ['ieee_single_format.decode', 2.598833643460815e-06], ['(&ieee_single_format,', 2.598833643460815e-06], ['data[2];', 2.598833643460815e-06], ['data[0]', 2.598833643460815e-06], ['data[1]', 2.598833643460815e-06], ['(next_data', 2.598833643460815e-06], ['ieee_double_format.decode', 2.598833643460815e-06], ['(&ieee_double_format,', 2.598833643460815e-06], ['(BRIG_CONST).', 2.598833643460815e-06], ['BRIG_CONST.', 2.598833643460815e-06], ['brig_code_entry_handler::get_tree_cst_for_hsa_operand', 2.598833643460815e-06], ['*brig_const,', 2.598833643460815e-06], ['(brig_const->bytes);', 2.598833643460815e-06], ['(brig_const->type);', 2.598833643460815e-06], ['scalar_element_type', 2.598833643460815e-06], ['brig_const->type', 2.598833643460815e-06], ['*next_data', 2.598833643460815e-06], ['(scalar_element_type)', 2.598833643460815e-06], ['(tree_element_type))', 2.598833643460815e-06], ['sole', 2.598833643460815e-06], ['vectors),', 2.598833643460815e-06], ['(tree_element_type);', 2.598833643460815e-06], ['element_count)', 2.598833643460815e-06], ['(scalar_element_size', 2.598833643460815e-06], ['*vec_els', 2.598833643460815e-06], ['(vec_els,', 2.598833643460815e-06], ['vec_els);', 2.598833643460815e-06], ['scalar_element_size)', 2.598833643460815e-06], ['scalar_element_size);', 2.598833643460815e-06], ['BRIG_TYPE.', 2.598833643460815e-06], ['aritmethics', 2.598833643460815e-06], ['contrast', 2.598833643460815e-06], ['type).', 2.598833643460815e-06], ['brig_code_entry_handler::get_tree_expr_type_for_hsa_type', 2.598833643460815e-06], ['m_parent.s_fp32_type;', 2.598833643460815e-06], ['(m_parent.s_fp32_type,', 2.598833643460815e-06], ['SOURCE_TYPE.', 2.598833643460815e-06], ['brig_code_entry_handler::get_comparison_result_type', 2.598833643460815e-06], ['(source_type))', 2.598833643460815e-06], ['(build_nonstandard_boolean_type', 2.598833643460815e-06], ['BITS_PER_UNIT),', 2.598833643460815e-06], ['(BRIG_TYPE_B1);', 2.598833643460815e-06], ['brig_code_entry_handler::build_f2h_conversion', 2.598833643460815e-06], ['float_to_half', 2.598833643460815e-06], ['brig_code_entry_handler::build_h2f_conversion', 2.598833643460815e-06], ['"normalizes"', 2.598833643460815e-06], ['execution;', 2.598833643460815e-06], ['flush', 2.598833643460815e-06], ['applicable).', 2.598833643460815e-06], ['brig_code_entry_handler::build_operands', 2.598833643460815e-06], ['brig_code_entry_handler::analyze_operands', 2.598833643460815e-06], ['tandem.', 2.598833643460815e-06], ['Performs', 2.598833643460815e-06], ['ANALYZE', 2.598833643460815e-06], ['brig_to_generic::m_fn_regs_use_index.', 2.598833643460815e-06], ['brig_code_entry_handler::', 2.598833643460815e-06], ['analyze)', 2.598833643460815e-06], ['dest_type;', 2.598833643460815e-06], ['*cmp_inst', 2.598833643460815e-06], ['(cmp_inst->sourceType);', 2.598833643460815e-06], ['(cmp_inst->sourceType', 2.598833643460815e-06], ['BRIG_KIND_INST_SOURCE_TYPE)', 2.598833643460815e-06], ['*src_type_inst', 2.598833643460815e-06], ['(src_type_inst->sourceType);', 2.598833643460815e-06], ['(src_type_inst->sourceType', 2.598833643460815e-06], ['BRIG_KIND_INST_SEG_CVT)', 2.598833643460815e-06], ['*seg_cvt_inst', 2.598833643460815e-06], ['(seg_cvt_inst->sourceType);', 2.598833643460815e-06], ['load/stores', 2.598833643460815e-06], ['BRIG_KIND_INST_CVT)', 2.598833643460815e-06], ['Halfs', 2.598833643460815e-06], ['"storage', 2.598833643460815e-06], ['format"', 2.598833643460815e-06], ['u16,', 2.598833643460815e-06], ['are...', 2.598833643460815e-06], ['(brig_inst.operands);', 2.598833643460815e-06], ['(brig_inst.opcode,', 2.598833643460815e-06], ['is_fp16_arith;', 2.598833643460815e-06], ['((brig_inst.opcode', 2.598833643460815e-06], ['BRIG_OPCODE_SHL', 2.598833643460815e-06], ['brig_inst.opcode', 2.598833643460815e-06], ['BRIG_OPCODE_SHR)', 2.598833643460815e-06], ['scalar.', 2.598833643460815e-06], ['ints', 2.598833643460815e-06], ['extensions/negative', 2.598833643460815e-06], ['masks,', 2.598833643460815e-06], ['shuffles', 2.598833643460815e-06], ['"raw', 2.598833643460815e-06], ['operation".', 2.598833643460815e-06], ['(dest_type));', 2.598833643460815e-06], ['BRIG_OPCODE_CLASS', 2.598833643460815e-06], ['BRIG_OPCODE_ACTIVELANEPERMUTE', 2.598833643460815e-06], ['half_storage_type;', 2.598833643460815e-06], ['(analyze)', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_REGISTER)', 2.598833643460815e-06], ['&brig_reg', 2.598833643460815e-06], ['*operand_data;', 2.598833643460815e-06], ['m_parent.add_reg_used_as_type', 2.598833643460815e-06], ['(brig_reg,', 2.598833643460815e-06], ['!is_output);', 2.598833643460815e-06], ['Cast/convert', 2.598833643460815e-06], ['(!is_output)', 2.598833643460815e-06], ['operand));', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_ADDRESS', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST)', 2.598833643460815e-06], ['vectors)', 2.598833643460815e-06], ['CMOV', 2.598833643460815e-06], ['likes', 2.598833643460815e-06], ["'operand", 2.598833643460815e-06], ["0'.", 2.598833643460815e-06], ['cmp_res_type', 2.598833643460815e-06], ['cmp_res_type,', 2.598833643460815e-06], ['(ftz)', 2.598833643460815e-06], ['(is_fp16_arith)', 2.598833643460815e-06], ['"register"', 2.598833643460815e-06], ['OUTPUT', 2.598833643460815e-06], ['variable/register,', 2.598833643460815e-06], ['INST_EXPR', 2.598833643460815e-06], ['Required', 2.598833643460815e-06], ['brig_code_entry_handler::build_output_assignment', 2.598833643460815e-06], ['inst_expr)', 2.598833643460815e-06], ['result/input', 2.598833643460815e-06], ['(can', 2.598833643460815e-06], ['get_m_var_declfor_reg', 2.598833643460815e-06], ['brig-function.cc).', 2.598833643460815e-06], ['output_type', 2.598833643460815e-06], ['is_fp16', 2.598833643460815e-06], ['brig_inst.base.kind', 2.598833643460815e-06], ['BRIG_KIND_INST_MEM', 2.598833643460815e-06], ['m_parent.m_cf->add_reg_var_update', 2.598833643460815e-06], ['(output,', 2.598833643460815e-06], ['(inst_expr)', 2.598833643460815e-06], ['(inst_expr,', 2.598833643460815e-06], ['(ftz', 2.598833643460815e-06], ['(VECTOR_FLOAT_TYPE_P', 2.598833643460815e-06], ['is_fp16))', 2.598833643460815e-06], ['("before_ftz",', 2.598833643460815e-06], ['("before_f2h",', 2.598833643460815e-06], ['f2h_output', 2.598833643460815e-06], ['f2h_output);', 2.598833643460815e-06], ['conv);', 2.598833643460815e-06], ['(output_type)', 2.598833643460815e-06], ['(output)', 2.598833643460815e-06], ['Expand/unpack', 2.598833643460815e-06], ['FOR_EACH_CONSTRUCTOR_VALUE', 2.598833643460815e-06], ['(CONSTRUCTOR_ELTS', 2.598833643460815e-06], ['element)', 2.598833643460815e-06], ['element_ref', 2.598833643460815e-06], ['(element_type),', 2.598833643460815e-06], ['element_ref);', 2.598833643460815e-06], ['last_assign;', 2.598833643460815e-06], ['bitcast', 2.598833643460815e-06], ['Mainly', 2.598833643460815e-06], ['differing', 2.598833643460815e-06], ['bitwidths.', 2.598833643460815e-06], ['(input_type);', 2.598833643460815e-06], ['dst_width', 2.598833643460815e-06], ['(output_type);', 2.598833643460815e-06], ['inst_expr.', 2.598833643460815e-06], ['dst_width)', 2.598833643460815e-06], ['unsigned_p', 2.598833643460815e-06], ['resized_type', 2.598833643460815e-06], ['(dst_width', 2.598833643460815e-06], ['unsigned_p);', 2.598833643460815e-06], ['(resized_type,', 2.598833643460815e-06], ['(STMT)', 2.598833643460815e-06], ['brig_code_entry_handler::append_statement', 2.598833643460815e-06], ['element(s)', 2.598833643460815e-06], ['OPERAND,', 2.598833643460815e-06], ['tree_element_unary_visitor::operator', 2.598833643460815e-06], ['(operand)))', 2.598833643460815e-06], ['pair(s)', 2.598833643460815e-06], ['OPERAND0', 2.598833643460815e-06], ['OPERAND1,', 2.598833643460815e-06], ['tree_element_binary_visitor::operator', 2.598833643460815e-06], ['(operand0)))', 2.598833643460815e-06], ['(operand1)));', 2.598833643460815e-06], ['(operand0)));', 2.598833643460815e-06], ['element0', 2.598833643460815e-06], ['element1', 2.598833643460815e-06], ['operand1,', 2.598833643460815e-06], ['element0,', 2.598833643460815e-06], ['element1);', 2.598833643460815e-06], ['flushes', 2.598833643460815e-06], ['flush_to_zero::visit_element', 2.598833643460815e-06], ['(m_fp16)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_FTZ_F32_F16)', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_FTZ_F32);', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_FTZ_F64),', 2.598833643460815e-06], ['float_to_half::visit_element', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_F32_TO_F16);', 2.598833643460815e-06], ['casted_operand', 2.598833643460815e-06], ['casted_operand);', 2.598833643460815e-06], ['"fp16out");', 2.598833643460815e-06], ['half_to_float::visit_element', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_F16_TO_F32);', 2.598833643460815e-06], ['truncated_source', 2.598833643460815e-06], ['truncated_source);', 2.598833643460815e-06], ['const_fp32_type', 2.598833643460815e-06], ['(const_fp32_type,', 2.598833643460815e-06], ['"fp32out");', 2.598833643460815e-06], ['casted_result', 2.598833643460815e-06], ['casted_result);', 2.598833643460815e-06], ['Treats', 2.598833643460815e-06], ['SRC_TYPE', 2.598833643460815e-06], ['DEST_TYPE.', 2.598833643460815e-06], ['brig_code_entry_handler::extend_int', 2.598833643460815e-06], ['src_type)', 2.598833643460815e-06], ["destination's", 2.598833643460815e-06], ['ext', 2.598833643460815e-06], ['clip', 2.598833643460815e-06], ['clipped_input', 2.598833643460815e-06], ['(unsigned_type_for', 2.598833643460815e-06], ['(signed_type_for', 2.598833643460815e-06], ['width.', 2.598833643460815e-06], ['register:', 2.598833643460815e-06], ['D.1541', 2.598833643460815e-06], ['char)', 2.598833643460815e-06], ['short)', 2.598833643460815e-06], ['D.1541;', 2.598833643460815e-06], ['brig_code_entry_handler::int_constant_value', 2.598833643460815e-06], ['brig_directive_function_handler::operator', 2.598833643460815e-06], ['(!m_parent.m_analyzing)', 2.598833643460815e-06], ['m_parent.finish_function', 2.598833643460815e-06], ['*exec', 2.598833643460815e-06], ['(exec->name).c_str());', 2.598833643460815e-06], ['inargs', 2.598833643460815e-06], ['outargs', 2.598833643460815e-06], ['exec->inArgCount,', 2.598833643460815e-06], ['exec->outArgCount,', 2.598833643460815e-06], ['exec->name);', 2.598833643460815e-06], ['exec->modifier', 2.598833643460815e-06], ['BRIG_EXECUTABLE_DEFINITION;', 2.598833643460815e-06], ['is_kernel', 2.598833643460815e-06], ['base->kind', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_KERNEL;', 2.598833643460815e-06], ['(is_kernel', 2.598833643460815e-06], ['!is_definition)', 2.598833643460815e-06], ['(exec);', 2.598833643460815e-06], ['("_")', 2.598833643460815e-06], ['(exec,', 2.598833643460815e-06], ['&m_parent);', 2.598833643460815e-06], ['m_parent.m_cf->m_name', 2.598833643460815e-06], ['m_parent.m_cf->m_is_kernel', 2.598833643460815e-06], ['is_kernel;', 2.598833643460815e-06], ['(func_name)', 2.598833643460815e-06], ['registers.', 2.598833643460815e-06], ['restrict_const_char_ptr', 2.598833643460815e-06], ['restrict_const_void_ptr', 2.598833643460815e-06], ['phsail-finalizer', 2.598833643460815e-06], ['hsa', 2.598833643460815e-06], ['work-group.', 2.598833643460815e-06], ['restrict_const_char_ptr,', 2.598833643460815e-06], ['name_identifier);', 2.598833643460815e-06], ['typelist', 2.598833643460815e-06], ['(typelist);', 2.598833643460815e-06], ['(BRIG_SEGMENT_KERNARG);', 2.598833643460815e-06], ['arg_arg', 2.598833643460815e-06], ['("__args"),', 2.598833643460815e-06], ['restrict_const_char_ptr);', 2.598833643460815e-06], ['arg_arg;', 2.598833643460815e-06], ['restrict_const_char_ptr;', 2.598833643460815e-06], ['Aggressive', 2.598833643460815e-06], ['offlined', 2.598833643460815e-06], ['enchance', 2.598833643460815e-06], ['SIMD', 2.598833643460815e-06], ['GPUs', 2.598833643460815e-06], ['units.', 2.598833643460815e-06], ['("flatten"),', 2.598833643460815e-06], ['fingerprint', 2.598833643460815e-06], ['fit.', 2.598833643460815e-06], ['m_parent.m_cf->m_arg_variables.clear', 2.598833643460815e-06], ['arg_handler', 2.598833643460815e-06], ['*args;', 2.598833643460815e-06], ['(exec->outArgCount', 2.598833643460815e-06], ['*retval', 2.598833643460815e-06], ['base->byteCount);', 2.598833643460815e-06], ['(retval->kind', 2.598833643460815e-06], ['(arg_decls', 2.598833643460815e-06], ['arg_var;', 2.598833643460815e-06], ['RESULT_DECL);', 2.598833643460815e-06], ['m_parent.m_cf->m_ret_value', 2.598833643460815e-06], ['(ret_value);', 2.598833643460815e-06], ['m_parent.m_cf->m_ret_value_brig_var', 2.598833643460815e-06], ['brigVar;', 2.598833643460815e-06], ['retval->byteCount;', 2.598833643460815e-06], ['(exec->inArgCount', 2.598833643460815e-06], ['exec->firstInArg;', 2.598833643460815e-06], ['exec->inArgCount;', 2.598833643460815e-06], ['(arg_offset);', 2.598833643460815e-06], ['(brigVar->base.kind', 2.598833643460815e-06], ['brig_directive_variable_handler.', 2.598833643460815e-06], ['brigVar->base.byteCount;', 2.598833643460815e-06], ['build_function_type_vec', 2.598833643460815e-06], ['(ret_type,', 2.598833643460815e-06], ['arg_decls;', 2.598833643460815e-06], ['__context', 2.598833643460815e-06], ['WI-specific', 2.598833643460815e-06], ['context_arg_type', 2.598833643460815e-06], ['restrict_const_void_ptr;', 2.598833643460815e-06], ['context_arg_type);', 2.598833643460815e-06], ['context_arg);', 2.598833643460815e-06], ['context_arg_type;', 2.598833643460815e-06], ['m_parent.m_cf->m_context_arg', 2.598833643460815e-06], ['group_base_arg', 2.598833643460815e-06], ['group_base_arg);', 2.598833643460815e-06], ['m_parent.m_cf->m_group_base_arg', 2.598833643460815e-06], ['group_base_arg;', 2.598833643460815e-06], ['(non-kernel)', 2.598833643460815e-06], ['group_base_ptr.', 2.598833643460815e-06], ['substracted', 2.598833643460815e-06], ['("__group_local_offset"),', 2.598833643460815e-06], ['m_parent.m_cf->m_group_local_offset_arg', 2.598833643460815e-06], ['group_local_offset_arg;', 2.598833643460815e-06], ['private_base_arg', 2.598833643460815e-06], ['("__private_base_addr"),', 2.598833643460815e-06], ['private_base_arg);', 2.598833643460815e-06], ['m_parent.m_cf->m_private_base_arg', 2.598833643460815e-06], ['private_base_arg;', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_KERNEL)', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_SIGNATURE)', 2.598833643460815e-06], ['BRIG_KIND_DIRECTIVE_INDIRECT_FUNCTION)', 2.598833643460815e-06], ['initial_block', 2.598833643460815e-06], ['initial_block;', 2.598833643460815e-06], ['(fndecl))', 2.598833643460815e-06], ['m_parent.add_function_decl', 2.598833643460815e-06], ['(func_name,', 2.598833643460815e-06], ['m_parent.append_global', 2.598833643460815e-06], ['(!is_definition)', 2.598833643460815e-06], ['m_parent.start_function', 2.598833643460815e-06], ['trunk.', 2.598833643460815e-06], ['m_parent.m_cf->m_ret_temp', 2.598833643460815e-06], ['m_parent.m_cf->add_local_variable', 2.598833643460815e-06], ['("_retvalue_temp",', 2.598833643460815e-06], ['(ret_value));', 2.598833643460815e-06], ['(temp_var)', 2.598833643460815e-06], ['m_parent.m_cf->add_id_variables', 2.598833643460815e-06], ['m_parent.m_cf->m_entry_label_stmt', 2.598833643460815e-06], ['("__kernel_entry"));', 2.598833643460815e-06], ['(m_parent.m_cf->m_entry_label_stmt);', 2.598833643460815e-06], ['m_parent.m_cf->m_kernel_entry', 2.598833643460815e-06], ['gotos', 2.598833643460815e-06], ['m_parent.m_cf->m_exit_label', 2.598833643460815e-06], ['("__kernel_exit");', 2.598833643460815e-06], ['generator', 2.598833643460815e-06], ['tile.', 2.598833643460815e-06], ['(walt@tilera.com)', 2.598833643460815e-06], ['efficiently.', 2.598833643460815e-06], ['c++', 2.598833643460815e-06], ['-DTILEPRO,', 2.598833643460815e-06], ['TILEPro;', 2.598833643460815e-06], ['TILE-Gx.', 2.598833643460815e-06], ['Running', 2.598833643460815e-06], ['r2,r1,r1', 2.598833643460815e-06], ['r3,r2,r2', 2.598833643460815e-06], ['25.', 2.598833643460815e-06], ['cheapest', 2.598833643460815e-06], ['"Cheapest"', 2.598833643460815e-06], ['theoretical', 2.598833643460815e-06], ['"prefer"', 2.598833643460815e-06], ['infinitesimally', 2.598833643460815e-06], ['canonical).', 2.598833643460815e-06], ['binary-search', 2.598833643460815e-06], ['pruned', 2.598833643460815e-06], ['criteria', 2.598833643460815e-06], ['reasonable.', 2.598833643460815e-06], ['__STDC_LIMIT_MACROS', 2.598833643460815e-06], ['<stdint.h>', 2.598833643460815e-06], ['<map>', 2.598833643460815e-06], ['"tilepro"', 2.598833643460815e-06], ['"tilegx"', 2.598833643460815e-06], ['Longest', 2.598833643460815e-06], ['stupid', 2.598833643460815e-06], ['grows', 2.598833643460815e-06], ['DAG', 2.598833643460815e-06], ['mix.', 2.598833643460815e-06], ['MAX_SUBEXPRS', 2.598833643460815e-06], ['MAX_INSTRUCTIONS)', 2.598833643460815e-06], ['MIN(x,', 2.598833643460815e-06], ['MAX(x,', 2.598833643460815e-06], ['unary.', 2.598833643460815e-06], ['(*unary_op_func)', 2.598833643460815e-06], ['(MUL_TYPE);', 2.598833643460815e-06], ['(*binary_op_func)', 2.598833643460815e-06], ['(MUL_TYPE,', 2.598833643460815e-06], ['MUL_TYPE);', 2.598833643460815e-06], ["'add", 2.598833643460815e-06], ["registers'", 2.598833643460815e-06], ["'left-shift", 2.598833643460815e-06], ["7'.", 2.598833643460815e-06], ["'unary'", 2.598833643460815e-06], ['rhs_if_unary,', 2.598833643460815e-06], ['(rhs_if_unary)', 2.598833643460815e-06], ['is_unary', 2.598833643460815e-06], ['CODE_FOR_addsi3.', 2.598833643460815e-06], ['*m_pattern;', 2.598833643460815e-06], ['*m_name;', 2.598833643460815e-06], ['compressed', 2.598833643460815e-06], ['decoded', 2.598833643460815e-06], ['machine-generated', 2.598833643460815e-06], ['multiply_insn_seq_decode_opcode', 2.598833643460815e-06], ['m_top_index;', 2.598833643460815e-06], ['m_unary_func;', 2.598833643460815e-06], ['Binary', 2.598833643460815e-06], ['m_binary_func;', 2.598833643460815e-06], ['Higher', 2.598833643460815e-06], ['worse.', 2.598833643460815e-06], ['m_cost;', 2.598833643460815e-06], ['unary;', 2.598833643460815e-06], ['m_rhs_if_unary;', 2.598833643460815e-06], ['m_op', 2.598833643460815e-06], ['m_lhs', 2.598833643460815e-06], ['m_rhs', 2.598833643460815e-06], ['m_produced_val', 2.598833643460815e-06], ['m_critical_path_length', 2.598833643460815e-06], ['*m_op;', 2.598833643460815e-06], ['m_lhs;', 2.598833643460815e-06], [',this', 2.598833643460815e-06], ['ops,', 2.598833643460815e-06], ['count).', 2.598833643460815e-06], ['m_rhs;', 2.598833643460815e-06], ['((x', 2.598833643460815e-06], ['x),', 2.598833643460815e-06], ['33.', 2.598833643460815e-06], ['m_produced_val;', 2.598833643460815e-06], ['root,', 2.598833643460815e-06], ['m_critical_path_length;', 2.598833643460815e-06], ['s1a', 2.598833643460815e-06], ['s3a', 2.598833643460815e-06], ['SHIFT(count)', 2.598833643460815e-06], ['shift##count(MUL_TYPE', 2.598833643460815e-06], ['(5);', 2.598833643460815e-06], ['(6);', 2.598833643460815e-06], ['(9);', 2.598833643460815e-06], ['(10);', 2.598833643460815e-06], ['(11);', 2.598833643460815e-06], ['(12);', 2.598833643460815e-06], ['(14);', 2.598833643460815e-06], ['(15);', 2.598833643460815e-06], ['(17);', 2.598833643460815e-06], ['(18);', 2.598833643460815e-06], ['(19);', 2.598833643460815e-06], ['(20);', 2.598833643460815e-06], ['(21);', 2.598833643460815e-06], ['(22);', 2.598833643460815e-06], ['(23);', 2.598833643460815e-06], ['(24);', 2.598833643460815e-06], ['(25);', 2.598833643460815e-06], ['(26);', 2.598833643460815e-06], ['(27);', 2.598833643460815e-06], ['(28);', 2.598833643460815e-06], ['(29);', 2.598833643460815e-06], ['(30);', 2.598833643460815e-06], ['(31);', 2.598833643460815e-06], ['(33);', 2.598833643460815e-06], ['(34);', 2.598833643460815e-06], ['(35);', 2.598833643460815e-06], ['(36);', 2.598833643460815e-06], ['(37);', 2.598833643460815e-06], ['(38);', 2.598833643460815e-06], ['(39);', 2.598833643460815e-06], ['(40);', 2.598833643460815e-06], ['(41);', 2.598833643460815e-06], ['(43);', 2.598833643460815e-06], ['(44);', 2.598833643460815e-06], ['(45);', 2.598833643460815e-06], ['(46);', 2.598833643460815e-06], ['(47);', 2.598833643460815e-06], ['(48);', 2.598833643460815e-06], ['(49);', 2.598833643460815e-06], ['(50);', 2.598833643460815e-06], ['(51);', 2.598833643460815e-06], ['(52);', 2.598833643460815e-06], ['(53);', 2.598833643460815e-06], ['(54);', 2.598833643460815e-06], ['(55);', 2.598833643460815e-06], ['(56);', 2.598833643460815e-06], ['(57);', 2.598833643460815e-06], ['(58);', 2.598833643460815e-06], ['(59);', 2.598833643460815e-06], ['(60);', 2.598833643460815e-06], ['(61);', 2.598833643460815e-06], ['(62);', 2.598833643460815e-06], ['(63);', 2.598833643460815e-06], ['("CODE_FOR_addsi3",', 2.598833643460815e-06], ['("CODE_FOR_subsi3",', 2.598833643460815e-06], ['("CODE_FOR_insn_s1a",', 2.598833643460815e-06], ['"s1a",', 2.598833643460815e-06], ['("CODE_FOR_insn_s2a",', 2.598833643460815e-06], ['"s2a",', 2.598833643460815e-06], ['("CODE_FOR_insn_s3a",', 2.598833643460815e-06], ['"s3a",', 2.598833643460815e-06], ['1031)', 2.598833643460815e-06], ['("CODE_FOR_adddi3",', 2.598833643460815e-06], ['1070),', 2.598833643460815e-06], ['("CODE_FOR_subdi3",', 2.598833643460815e-06], ['1071),', 2.598833643460815e-06], ['("CODE_FOR_insn_shl1add",', 2.598833643460815e-06], ['"shl1add",', 2.598833643460815e-06], ['1072),', 2.598833643460815e-06], ['("CODE_FOR_insn_shl2add",', 2.598833643460815e-06], ['"shl2add",', 2.598833643460815e-06], ['1073),', 2.598833643460815e-06], ['("CODE_FOR_insn_shl3add",', 2.598833643460815e-06], ['"shl3add",', 2.598833643460815e-06], ['1074),', 2.598833643460815e-06], ['1031),', 2.598833643460815e-06], ['shift32,', 2.598833643460815e-06], ['1032),', 2.598833643460815e-06], ['shift33,', 2.598833643460815e-06], ['1033),', 2.598833643460815e-06], ['shift34,', 2.598833643460815e-06], ['34,', 2.598833643460815e-06], ['1034),', 2.598833643460815e-06], ['shift35,', 2.598833643460815e-06], ['35,', 2.598833643460815e-06], ['1035),', 2.598833643460815e-06], ['shift36,', 2.598833643460815e-06], ['36,', 2.598833643460815e-06], ['1036),', 2.598833643460815e-06], ['shift37,', 2.598833643460815e-06], ['37,', 2.598833643460815e-06], ['1037),', 2.598833643460815e-06], ['shift38,', 2.598833643460815e-06], ['38,', 2.598833643460815e-06], ['1038),', 2.598833643460815e-06], ['shift39,', 2.598833643460815e-06], ['39,', 2.598833643460815e-06], ['1039),', 2.598833643460815e-06], ['shift40,', 2.598833643460815e-06], ['40,', 2.598833643460815e-06], ['shift41,', 2.598833643460815e-06], ['41,', 2.598833643460815e-06], ['shift42,', 2.598833643460815e-06], ['42,', 2.598833643460815e-06], ['shift43,', 2.598833643460815e-06], ['43,', 2.598833643460815e-06], ['shift44,', 2.598833643460815e-06], ['44,', 2.598833643460815e-06], ['shift45,', 2.598833643460815e-06], ['45,', 2.598833643460815e-06], ['1045),', 2.598833643460815e-06], ['shift46,', 2.598833643460815e-06], ['46,', 2.598833643460815e-06], ['1046),', 2.598833643460815e-06], ['shift47,', 2.598833643460815e-06], ['47,', 2.598833643460815e-06], ['1047),', 2.598833643460815e-06], ['shift48,', 2.598833643460815e-06], ['48,', 2.598833643460815e-06], ['1048),', 2.598833643460815e-06], ['shift49,', 2.598833643460815e-06], ['49,', 2.598833643460815e-06], ['1049),', 2.598833643460815e-06], ['shift50,', 2.598833643460815e-06], ['50,', 2.598833643460815e-06], ['1050),', 2.598833643460815e-06], ['shift51,', 2.598833643460815e-06], ['51,', 2.598833643460815e-06], ['1051),', 2.598833643460815e-06], ['shift52,', 2.598833643460815e-06], ['52,', 2.598833643460815e-06], ['1052),', 2.598833643460815e-06], ['shift53,', 2.598833643460815e-06], ['53,', 2.598833643460815e-06], ['1053),', 2.598833643460815e-06], ['shift54,', 2.598833643460815e-06], ['54,', 2.598833643460815e-06], ['1054),', 2.598833643460815e-06], ['shift55,', 2.598833643460815e-06], ['55,', 2.598833643460815e-06], ['1055),', 2.598833643460815e-06], ['shift56,', 2.598833643460815e-06], ['56,', 2.598833643460815e-06], ['1056),', 2.598833643460815e-06], ['shift57,', 2.598833643460815e-06], ['57,', 2.598833643460815e-06], ['1057),', 2.598833643460815e-06], ['shift58,', 2.598833643460815e-06], ['58,', 2.598833643460815e-06], ['1058),', 2.598833643460815e-06], ['shift59,', 2.598833643460815e-06], ['59,', 2.598833643460815e-06], ['1059),', 2.598833643460815e-06], ['shift60,', 2.598833643460815e-06], ['60,', 2.598833643460815e-06], ['1060),', 2.598833643460815e-06], ['shift61,', 2.598833643460815e-06], ['61,', 2.598833643460815e-06], ['1061),', 2.598833643460815e-06], ['shift62,', 2.598833643460815e-06], ['62,', 2.598833643460815e-06], ['1062),', 2.598833643460815e-06], ['shift63,', 2.598833643460815e-06], ['1063)', 2.598833643460815e-06], ['m_num_vals', 2.598833643460815e-06], ['m_exprs[0].m_produced_val', 2.598833643460815e-06], ['m_exprs[1].m_produced_val', 2.598833643460815e-06], ['copy_technique_from', 2.598833643460815e-06], ['cost.', 2.598833643460815e-06], ['m_exprs[MAX_SUBEXPRS];', 2.598833643460815e-06], ['m_exprs[j].m_op->m_cost;', 2.598833643460815e-06], ['m_exprs[m_num_vals', 2.598833643460815e-06], ['1].m_critical_path_length', 2.598833643460815e-06], ['1000000;', 2.598833643460815e-06], ['std::map<MUL_TYPE,', 2.598833643460815e-06], ['ExpressionTreeMap;', 2.598833643460815e-06], ['&best_solution)', 2.598833643460815e-06], ['s.m_num_vals;', 2.598833643460815e-06], ['(num_vals', 2.598833643460815e-06], ['MAX_SUBEXPRS)', 2.598833643460815e-06], ['Grow', 2.598833643460815e-06], ['prev_op', 2.598833643460815e-06], ['s.m_exprs[num_vals', 2.598833643460815e-06], ['1].m_op;', 2.598833643460815e-06], ['prev_top_index', 2.598833643460815e-06], ['(prev_op', 2.598833643460815e-06], ['prev_op->m_top_index', 2.598833643460815e-06], ['f++)', 2.598833643460815e-06], ['&ops[f];', 2.598833643460815e-06], ['sub)', 2.598833643460815e-06], ['trick', 2.598833643460815e-06], ['j_end', 2.598833643460815e-06], ['j_end;', 2.598833643460815e-06], ['uses_prev_value', 2.598833643460815e-06], ['(!op->is_unary', 2.598833643460815e-06], ['(!uses_prev_value)', 2.598833643460815e-06], ['efficiency,', 2.598833643460815e-06], ['prune', 2.598833643460815e-06], ['orderings.', 2.598833643460815e-06], ['preceding', 2.598833643460815e-06], ["instruction's,", 2.598833643460815e-06], ['non-canonical', 2.598833643460815e-06], ['pursue', 2.598833643460815e-06], ['(op->m_top_index', 2.598833643460815e-06], ['prev_top_index)', 2.598833643460815e-06], ['(op->is_unary', 2.598833643460815e-06], ['op->m_unary_func', 2.598833643460815e-06], ['(s.m_exprs[i].m_produced_val);', 2.598833643460815e-06], ['(s.m_exprs[i].m_produced_val,', 2.598833643460815e-06], ['s.m_exprs[j].m_produced_val);', 2.598833643460815e-06], ['s.m_exprs[j].m_produced_val)', 2.598833643460815e-06], ['(duplicate)', 2.598833643460815e-06], ['&s.m_exprs[num_vals];', 2.598833643460815e-06], ['e->m_op', 2.598833643460815e-06], ['e->m_lhs', 2.598833643460815e-06], ['e->m_rhs', 2.598833643460815e-06], ['op->m_rhs_if_unary', 2.598833643460815e-06], ['e->m_produced_val', 2.598833643460815e-06], ['e->m_critical_path_length', 2.598833643460815e-06], ['(s.m_exprs[i].m_critical_path_length,', 2.598833643460815e-06], ['s.m_exprs[j].m_critical_path_length);', 2.598833643460815e-06], ['(best_solution.find', 2.598833643460815e-06], ['(n));', 2.598833643460815e-06], ['(best', 2.598833643460815e-06], ['(*best).second->cost', 2.598833643460815e-06], ['s.cost', 2.598833643460815e-06], ['best_solution[n]', 2.598833643460815e-06], ['Recurse', 2.598833643460815e-06], ['more.', 2.598833643460815e-06], ['compact', 2.598833643460815e-06], ['compactified', 2.598833643460815e-06], ['"end', 2.598833643460815e-06], ['array".', 2.598833643460815e-06], ['%s_multiply_insn_seq_decode_opcode[]', 2.598833643460815e-06], ['{\\n"', 2.598833643460815e-06], ['&ops[i];', 2.598833643460815e-06], ['*old', 2.598833643460815e-06], ['&ops[j];', 2.598833643460815e-06], ['(old->m_pattern,', 2.598833643460815e-06], ['op->m_pattern)', 2.598833643460815e-06], ['old->m_top_index;', 2.598833643460815e-06], ['(",\\n', 2.598833643460815e-06], ['op->m_pattern);', 2.598833643460815e-06], ['next_index++;', 2.598833643460815e-06], ['op->m_top_index', 2.598833643460815e-06], ['multiply_constants_used[]', 2.598833643460815e-06], ['-11796480,', 2.598833643460815e-06], ['-27439,', 2.598833643460815e-06], ['-25148,', 2.598833643460815e-06], ['-22820,', 2.598833643460815e-06], ['-21709,', 2.598833643460815e-06], ['-20995,', 2.598833643460815e-06], ['-20284,', 2.598833643460815e-06], ['-20239,', 2.598833643460815e-06], ['-19595,', 2.598833643460815e-06], ['-19447,', 2.598833643460815e-06], ['-19183,', 2.598833643460815e-06], ['-19165,', 2.598833643460815e-06], ['-18730,', 2.598833643460815e-06], ['-17828,', 2.598833643460815e-06], ['-17799,', 2.598833643460815e-06], ['-17237,', 2.598833643460815e-06], ['-17036,', 2.598833643460815e-06], ['-16549,', 2.598833643460815e-06], ['-16423,', 2.598833643460815e-06], ['-16294,', 2.598833643460815e-06], ['-16244,', 2.598833643460815e-06], ['-16069,', 2.598833643460815e-06], ['-15137,', 2.598833643460815e-06], ['-15083,', 2.598833643460815e-06], ['-15038,', 2.598833643460815e-06], ['-14924,', 2.598833643460815e-06], ['-14905,', 2.598833643460815e-06], ['-14752,', 2.598833643460815e-06], ['-14731,', 2.598833643460815e-06], ['-14529,', 2.598833643460815e-06], ['-14273,', 2.598833643460815e-06], ['-14090,', 2.598833643460815e-06], ['-14084,', 2.598833643460815e-06], ['-14043,', 2.598833643460815e-06], ['-13850,', 2.598833643460815e-06], ['-13802,', 2.598833643460815e-06], ['-13631,', 2.598833643460815e-06], ['-13455,', 2.598833643460815e-06], ['-13275,', 2.598833643460815e-06], ['-12879,', 2.598833643460815e-06], ['-12700,', 2.598833643460815e-06], ['-12534,', 2.598833643460815e-06], ['-12399,', 2.598833643460815e-06], ['-12131,', 2.598833643460815e-06], ['-12112,', 2.598833643460815e-06], ['-12054,', 2.598833643460815e-06], ['-12019,', 2.598833643460815e-06], ['-11759,', 2.598833643460815e-06], ['-11585,', 2.598833643460815e-06], ['-11467,', 2.598833643460815e-06], ['-11395,', 2.598833643460815e-06], ['-11295,', 2.598833643460815e-06], ['-11248,', 2.598833643460815e-06], ['-11148,', 2.598833643460815e-06], ['-11116,', 2.598833643460815e-06], ['-11086,', 2.598833643460815e-06], ['-11059,', 2.598833643460815e-06], ['-11018,', 2.598833643460815e-06], ['-10811,', 2.598833643460815e-06], ['-10538,', 2.598833643460815e-06], ['-10258,', 2.598833643460815e-06], ['-10217,', 2.598833643460815e-06], ['-10033,', 2.598833643460815e-06], ['-9766,', 2.598833643460815e-06], ['-9754,', 2.598833643460815e-06], ['-9534,', 2.598833643460815e-06], ['-9527,', 2.598833643460815e-06], ['-9467,', 2.598833643460815e-06], ['-9262,', 2.598833643460815e-06], ['-9232,', 2.598833643460815e-06], ['-9222,', 2.598833643460815e-06], ['-9198,', 2.598833643460815e-06], ['-9191,', 2.598833643460815e-06], ['-9113,', 2.598833643460815e-06], ['-8825,', 2.598833643460815e-06], ['-8756,', 2.598833643460815e-06], ['-8697,', 2.598833643460815e-06], ['-8693,', 2.598833643460815e-06], ['-8565,', 2.598833643460815e-06], ['-8342,', 2.598833643460815e-06], ['-8208,', 2.598833643460815e-06], ['-8200,', 2.598833643460815e-06], ['-8170,', 2.598833643460815e-06], ['-8102,', 2.598833643460815e-06], ['-7770,', 2.598833643460815e-06], ['-7678,', 2.598833643460815e-06], ['-7562,', 2.598833643460815e-06], ['-7376,', 2.598833643460815e-06], ['-7373,', 2.598833643460815e-06], ['-7221,', 2.598833643460815e-06], ['-7121,', 2.598833643460815e-06], ['-6835,', 2.598833643460815e-06], ['-6810,', 2.598833643460815e-06], ['-6626,', 2.598833643460815e-06], ['-6581,', 2.598833643460815e-06], ['-6461,', 2.598833643460815e-06], ['-6278,', 2.598833643460815e-06], ['-6263,', 2.598833643460815e-06], ['-6163,', 2.598833643460815e-06], ['-6029,', 2.598833643460815e-06], ['-5816,', 2.598833643460815e-06], ['-5540,', 2.598833643460815e-06], ['-5461,', 2.598833643460815e-06], ['-5384,', 2.598833643460815e-06], ['-5329,', 2.598833643460815e-06], ['-4985,', 2.598833643460815e-06], ['-4926,', 2.598833643460815e-06], ['-4815,', 2.598833643460815e-06], ['-4788,', 2.598833643460815e-06], ['-4758,', 2.598833643460815e-06], ['-4433,', 2.598833643460815e-06], ['-4229,', 2.598833643460815e-06], ['-4209,', 2.598833643460815e-06], ['-4176,', 2.598833643460815e-06], ['-4104,', 2.598833643460815e-06], ['-4095,', 2.598833643460815e-06], ['-4078,', 2.598833643460815e-06], ['-3941,', 2.598833643460815e-06], ['-3818,', 2.598833643460815e-06], ['-3600,', 2.598833643460815e-06], ['-3474,', 2.598833643460815e-06], ['-3314,', 2.598833643460815e-06], ['-3264,', 2.598833643460815e-06], ['-3196,', 2.598833643460815e-06], ['-3072,', 2.598833643460815e-06], ['-2912,', 2.598833643460815e-06], ['-2836,', 2.598833643460815e-06], ['-2773,', 2.598833643460815e-06], ['-2269,', 2.598833643460815e-06], ['-2184,', 2.598833643460815e-06], ['-2100,', 2.598833643460815e-06], ['-1730,', 2.598833643460815e-06], ['-1512,', 2.598833643460815e-06], ['-1500,', 2.598833643460815e-06], ['-1396,', 2.598833643460815e-06], ['-1344,', 2.598833643460815e-06], ['-1312,', 2.598833643460815e-06], ['-1297,', 2.598833643460815e-06], ['-1059,', 2.598833643460815e-06], ['-1058,', 2.598833643460815e-06], ['1027,', 2.598833643460815e-06], ['1049,', 2.598833643460815e-06], ['1059,', 2.598833643460815e-06], ['1100,', 2.598833643460815e-06], ['1104,', 2.598833643460815e-06], ['1108,', 2.598833643460815e-06], ['1136,', 2.598833643460815e-06], ['1200,', 2.598833643460815e-06], ['1204,', 2.598833643460815e-06], ['1242,', 2.598833643460815e-06], ['1292,', 2.598833643460815e-06], ['1304,', 2.598833643460815e-06], ['1312,', 2.598833643460815e-06], ['1320,', 2.598833643460815e-06], ['1336,', 2.598833643460815e-06], ['1344,', 2.598833643460815e-06], ['1348,', 2.598833643460815e-06], ['1360,', 2.598833643460815e-06], ['1364,', 2.598833643460815e-06], ['1395,', 2.598833643460815e-06], ['1448,', 2.598833643460815e-06], ['1460,', 2.598833643460815e-06], ['1461,', 2.598833643460815e-06], ['1472,', 2.598833643460815e-06], ['1488,', 2.598833643460815e-06], ['1500,', 2.598833643460815e-06], ['1512,', 2.598833643460815e-06], ['1568,', 2.598833643460815e-06], ['1576,', 2.598833643460815e-06], ['1649,', 2.598833643460815e-06], ['1664,', 2.598833643460815e-06], ['1684,', 2.598833643460815e-06], ['1696,', 2.598833643460815e-06], ['1744,', 2.598833643460815e-06], ['1812,', 2.598833643460815e-06], ['1822,', 2.598833643460815e-06], ['1884,', 2.598833643460815e-06], ['1963,', 2.598833643460815e-06], ['1978,', 2.598833643460815e-06], ['2000,', 2.598833643460815e-06], ['2012,', 2.598833643460815e-06], ['2014,', 2.598833643460815e-06], ['2037,', 2.598833643460815e-06], ['2039,', 2.598833643460815e-06], ['2100,', 2.598833643460815e-06], ['2139,', 2.598833643460815e-06], ['2144,', 2.598833643460815e-06], ['2184,', 2.598833643460815e-06], ['2237,', 2.598833643460815e-06], ['2260,', 2.598833643460815e-06], ['2320,', 2.598833643460815e-06], ['2408,', 2.598833643460815e-06], ['2446,', 2.598833643460815e-06], ['2447,', 2.598833643460815e-06], ['2499,', 2.598833643460815e-06], ['2531,', 2.598833643460815e-06], ['2578,', 2.598833643460815e-06], ['2592,', 2.598833643460815e-06], ['2611,', 2.598833643460815e-06], ['2633,', 2.598833643460815e-06], ['2704,', 2.598833643460815e-06], ['2730,', 2.598833643460815e-06], ['2773,', 2.598833643460815e-06], ['2880,', 2.598833643460815e-06], ['2896,', 2.598833643460815e-06], ['2998,', 2.598833643460815e-06], ['3000,', 2.598833643460815e-06], ['3001,', 2.598833643460815e-06], ['3021,', 2.598833643460815e-06], ['3079,', 2.598833643460815e-06], ['3112,', 2.598833643460815e-06], ['3150,', 2.598833643460815e-06], ['3179,', 2.598833643460815e-06], ['3192,', 2.598833643460815e-06], ['3240,', 2.598833643460815e-06], ['3264,', 2.598833643460815e-06], ['3271,', 2.598833643460815e-06], ['3283,', 2.598833643460815e-06], ['3328,', 2.598833643460815e-06], ['3363,', 2.598833643460815e-06], ['3367,', 2.598833643460815e-06], ['3453,', 2.598833643460815e-06], ['3529,', 2.598833643460815e-06], ['3570,', 2.598833643460815e-06], ['3580,', 2.598833643460815e-06], ['3600,', 2.598833643460815e-06], ['3624,', 2.598833643460815e-06], ['3707,', 2.598833643460815e-06], ['3783,', 2.598833643460815e-06], ['3826,', 2.598833643460815e-06], ['3897,', 2.598833643460815e-06], ['3941,', 2.598833643460815e-06], ['3962,', 2.598833643460815e-06], ['3989,', 2.598833643460815e-06], ['4000,', 2.598833643460815e-06], ['4025,', 2.598833643460815e-06], ['4073,', 2.598833643460815e-06], ['4093,', 2.598833643460815e-06], ['4099,', 2.598833643460815e-06], ['4108,', 2.598833643460815e-06], ['4184,', 2.598833643460815e-06], ['4209,', 2.598833643460815e-06], ['4369,', 2.598833643460815e-06], ['4376,', 2.598833643460815e-06], ['4416,', 2.598833643460815e-06], ['4433,', 2.598833643460815e-06], ['4434,', 2.598833643460815e-06], ['4482,', 2.598833643460815e-06], ['4582,', 2.598833643460815e-06], ['4712,', 2.598833643460815e-06], ['4717,', 2.598833643460815e-06], ['4813,', 2.598833643460815e-06], ['4815,', 2.598833643460815e-06], ['4864,', 2.598833643460815e-06], ['5000,', 2.598833643460815e-06], ['5027,', 2.598833643460815e-06], ['5040,', 2.598833643460815e-06], ['5091,', 2.598833643460815e-06], ['5195,', 2.598833643460815e-06], ['5243,', 2.598833643460815e-06], ['5260,', 2.598833643460815e-06], ['5285,', 2.598833643460815e-06], ['5329,', 2.598833643460815e-06], ['5331,', 2.598833643460815e-06], ['5350,', 2.598833643460815e-06], ['5361,', 2.598833643460815e-06], ['5387,', 2.598833643460815e-06], ['5461,', 2.598833643460815e-06], ['5492,', 2.598833643460815e-06], ['5529,', 2.598833643460815e-06], ['5573,', 2.598833643460815e-06], ['5793,', 2.598833643460815e-06], ['5819,', 2.598833643460815e-06], ['5915,', 2.598833643460815e-06], ['5946,', 2.598833643460815e-06], ['5992,', 2.598833643460815e-06], ['6000,', 2.598833643460815e-06], ['6164,', 2.598833643460815e-06], ['6205,', 2.598833643460815e-06], ['6262,', 2.598833643460815e-06], ['6263,', 2.598833643460815e-06], ['6269,', 2.598833643460815e-06], ['6270,', 2.598833643460815e-06], ['6387,', 2.598833643460815e-06], ['6400,', 2.598833643460815e-06], ['6406,', 2.598833643460815e-06], ['6476,', 2.598833643460815e-06], ['6541,', 2.598833643460815e-06], ['6565,', 2.598833643460815e-06], ['6568,', 2.598833643460815e-06], ['6626,', 2.598833643460815e-06], ['6656,', 2.598833643460815e-06], ['6732,', 2.598833643460815e-06], ['6810,', 2.598833643460815e-06], ['6817,', 2.598833643460815e-06], ['6859,', 2.598833643460815e-06], ['7040,', 2.598833643460815e-06], ['7053,', 2.598833643460815e-06], ['7141,', 2.598833643460815e-06], ['7169,', 2.598833643460815e-06], ['7221,', 2.598833643460815e-06], ['7223,', 2.598833643460815e-06], ['7274,', 2.598833643460815e-06], ['7282,', 2.598833643460815e-06], ['7350,', 2.598833643460815e-06], ['7369,', 2.598833643460815e-06], ['7373,', 2.598833643460815e-06], ['7442,', 2.598833643460815e-06], ['7447,', 2.598833643460815e-06], ['7471,', 2.598833643460815e-06], ['7518,', 2.598833643460815e-06], ['7542,', 2.598833643460815e-06], ['7566,', 2.598833643460815e-06], ['7587,', 2.598833643460815e-06], ['7663,', 2.598833643460815e-06], ['7678,', 2.598833643460815e-06], ['7682,', 2.598833643460815e-06], ['7748,', 2.598833643460815e-06], ['7752,', 2.598833643460815e-06], ['7791,', 2.598833643460815e-06], ['8000,', 2.598833643460815e-06], ['8026,', 2.598833643460815e-06], ['8048,', 2.598833643460815e-06], ['8170,', 2.598833643460815e-06], ['8203,', 2.598833643460815e-06], ['8204,', 2.598833643460815e-06], ['8290,', 2.598833643460815e-06], ['8368,', 2.598833643460815e-06], ['8520,', 2.598833643460815e-06], ['8640,', 2.598833643460815e-06], ['8666,', 2.598833643460815e-06], ['8672,', 2.598833643460815e-06], ['8697,', 2.598833643460815e-06], ['8716,', 2.598833643460815e-06], ['8728,', 2.598833643460815e-06], ['8756,', 2.598833643460815e-06], ['8820,', 2.598833643460815e-06], ['8875,', 2.598833643460815e-06], ['8918,', 2.598833643460815e-06], ['8956,', 2.598833643460815e-06], ['9058,', 2.598833643460815e-06], ['9154,', 2.598833643460815e-06], ['9175,', 2.598833643460815e-06], ['9191,', 2.598833643460815e-06], ['9217,', 2.598833643460815e-06], ['9262,', 2.598833643460815e-06], ['9321,', 2.598833643460815e-06], ['9373,', 2.598833643460815e-06], ['9434,', 2.598833643460815e-06], ['9465,', 2.598833643460815e-06], ['9514,', 2.598833643460815e-06], ['9534,', 2.598833643460815e-06], ['9633,', 2.598833643460815e-06], ['9746,', 2.598833643460815e-06], ['9810,', 2.598833643460815e-06], ['9850,', 2.598833643460815e-06], ['9947,', 2.598833643460815e-06], ['9973,', 2.598833643460815e-06], ['10000,', 2.598833643460815e-06], ['10009,', 2.598833643460815e-06], ['10033,', 2.598833643460815e-06], ['10055,', 2.598833643460815e-06], ['10217,', 2.598833643460815e-06], ['10248,', 2.598833643460815e-06], ['10298,', 2.598833643460815e-06], ['10310,', 2.598833643460815e-06], ['10323,', 2.598833643460815e-06], ['10368,', 2.598833643460815e-06], ['10438,', 2.598833643460815e-06], ['10456,', 2.598833643460815e-06], ['10486,', 2.598833643460815e-06], ['10538,', 2.598833643460815e-06], ['10664,', 2.598833643460815e-06], ['10695,', 2.598833643460815e-06], ['10700,', 2.598833643460815e-06], ['10703,', 2.598833643460815e-06], ['10832,', 2.598833643460815e-06], ['10887,', 2.598833643460815e-06], ['10935,', 2.598833643460815e-06], ['10958,', 2.598833643460815e-06], ['11018,', 2.598833643460815e-06], ['11059,', 2.598833643460815e-06], ['11061,', 2.598833643460815e-06], ['11086,', 2.598833643460815e-06], ['11116,', 2.598833643460815e-06], ['11148,', 2.598833643460815e-06], ['11190,', 2.598833643460815e-06], ['11249,', 2.598833643460815e-06], ['11314,', 2.598833643460815e-06], ['11332,', 2.598833643460815e-06], ['11363,', 2.598833643460815e-06], ['11409,', 2.598833643460815e-06], ['11415,', 2.598833643460815e-06], ['11443,', 2.598833643460815e-06], ['11467,', 2.598833643460815e-06], ['11512,', 2.598833643460815e-06], ['11522,', 2.598833643460815e-06], ['11529,', 2.598833643460815e-06], ['11585,', 2.598833643460815e-06], ['11759,', 2.598833643460815e-06], ['11768,', 2.598833643460815e-06], ['11795,', 2.598833643460815e-06], ['11893,', 2.598833643460815e-06], ['11997,', 2.598833643460815e-06], ['12131,', 2.598833643460815e-06], ['12299,', 2.598833643460815e-06], ['12536,', 2.598833643460815e-06], ['12543,', 2.598833643460815e-06], ['12893,', 2.598833643460815e-06], ['12945,', 2.598833643460815e-06], ['12998,', 2.598833643460815e-06], ['13109,', 2.598833643460815e-06], ['13213,', 2.598833643460815e-06], ['13685,', 2.598833643460815e-06], ['13930,', 2.598833643460815e-06], ['14023,', 2.598833643460815e-06], ['14024,', 2.598833643460815e-06], ['14271,', 2.598833643460815e-06], ['14564,', 2.598833643460815e-06], ['14647,', 2.598833643460815e-06], ['15326,', 2.598833643460815e-06], ['15850,', 2.598833643460815e-06], ['15855,', 2.598833643460815e-06], ['15929,', 2.598833643460815e-06], ['16000,', 2.598833643460815e-06], ['16154,', 2.598833643460815e-06], ['16496,', 2.598833643460815e-06], ['16807,', 2.598833643460815e-06], ['16819,', 2.598833643460815e-06], ['16984,', 2.598833643460815e-06], ['17203,', 2.598833643460815e-06], ['17223,', 2.598833643460815e-06], ['17333,', 2.598833643460815e-06], ['17760,', 2.598833643460815e-06], ['17799,', 2.598833643460815e-06], ['17837,', 2.598833643460815e-06], ['18029,', 2.598833643460815e-06], ['18068,', 2.598833643460815e-06], ['18336,', 2.598833643460815e-06], ['18515,', 2.598833643460815e-06], ['19595,', 2.598833643460815e-06], ['20017,', 2.598833643460815e-06], ['20131,', 2.598833643460815e-06], ['20862,', 2.598833643460815e-06], ['20995,', 2.598833643460815e-06], ['21709,', 2.598833643460815e-06], ['22554,', 2.598833643460815e-06], ['25000,', 2.598833643460815e-06], ['25172,', 2.598833643460815e-06], ['25600,', 2.598833643460815e-06], ['25733,', 2.598833643460815e-06], ['27439,', 2.598833643460815e-06], ['38470,', 2.598833643460815e-06], ['46802,', 2.598833643460815e-06], ['50000,', 2.598833643460815e-06], ['11796480,', 2.598833643460815e-06], ['16843009,', 2.598833643460815e-06], ['23592960,', 2.598833643460815e-06], ['num_mult_constants_used', 2.598833643460815e-06], ['(int)(sizeof', 2.598833643460815e-06], ['multiply_constants_used[0]);', 2.598833643460815e-06], ['multiply_constants_used[0]', 2.598833643460815e-06], ['multiply_constants_avail[XSIZE];', 2.598833643460815e-06], ['compare_constants', 2.598833643460815e-06], ['(*(int*)key)', 2.598833643460815e-06], ['*((int*)t);', 2.598833643460815e-06], ['find_mult_constants_used', 2.598833643460815e-06], ['(&multiplier,', 2.598833643460815e-06], ['multiply_constants_used,', 2.598833643460815e-06], ['num_mult_constants_used,', 2.598833643460815e-06], ['multiply_constants_used[0],', 2.598833643460815e-06], ['compare_constants);', 2.598833643460815e-06], ['&s->m_exprs[i];', 2.598833643460815e-06], ['(e->m_op', 2.598833643460815e-06], ['n++;', 2.598833643460815e-06], ['tilepro_emit', 2.598833643460815e-06], ['-multiplier;', 2.598833643460815e-06], ['(31', 2.598833643460815e-06], ['__builtin_clz', 2.598833643460815e-06], ['fewer', 2.598833643460815e-06], ['(__builtin_popcount', 2.598833643460815e-06], ['__builtin_popcount', 2.598833643460815e-06], ['30)', 2.598833643460815e-06], ['((find_mult_constants_used', 2.598833643460815e-06], ['(multiplier)))', 2.598833643460815e-06], ['tilegx_emit', 2.598833643460815e-06], ['1LL', 2.598833643460815e-06], ['(63', 2.598833643460815e-06], ['__builtin_clzll', 2.598833643460815e-06], ['(prev_pow2', 2.598833643460815e-06], ['100)', 2.598833643460815e-06], ['100)))', 2.598833643460815e-06], ['(__builtin_popcountll', 2.598833643460815e-06], ['__builtin_popcountll', 2.598833643460815e-06], ['62)', 2.598833643460815e-06], ['(find_mult_constants_used', 2.598833643460815e-06], ['(multiplier))', 2.598833643460815e-06], ['best_solution;', 2.598833643460815e-06], ['TILEPro.\\n");', 2.598833643460815e-06], ['TILE-Gx.\\n");', 2.598833643460815e-06], ['Inc.\\n");', 2.598833643460815e-06], ['(walt@tilera.com)\\n");', 2.598833643460815e-06], ['GCC.\\n");', 2.598833643460815e-06], ['it\\n");', 2.598833643460815e-06], ['published\\n");', 2.598833643460815e-06], ['your\\n");', 2.598833643460815e-06], ['version.\\n");', 2.598833643460815e-06], ['WITHOUT\\n");', 2.598833643460815e-06], ['MERCHANTABILITY\\n");', 2.598833643460815e-06], ['Public\\n");', 2.598833643460815e-06], ['details.\\n");', 2.598833643460815e-06], ['License\\n");', 2.598833643460815e-06], ['see\\n");', 2.598833643460815e-06], ['auto-generated', 2.598833643460815e-06], ['gen-mul-tables.cc.\\n");', 2.598833643460815e-06], ['\\"config.h\\"\\n");', 2.598833643460815e-06], ['\\"system.h\\"\\n");', 2.598833643460815e-06], ['\\"coretypes.h\\"\\n");', 2.598833643460815e-06], ['\\"backend.h\\"\\n");', 2.598833643460815e-06], ['\\"rtl.h\\"\\n");', 2.598833643460815e-06], ['\\"expmed.h\\"\\n");', 2.598833643460815e-06], ['\\"%s-multiply.h\\"\\n\\n",', 2.598833643460815e-06], ['%s_multiply_insn_seq', 2.598833643460815e-06], ['"%s_multiply_insn_seq_table[]', 2.598833643460815e-06], ['{\\n",', 2.598833643460815e-06], ['*comma_separator', 2.598833643460815e-06], ['(best_solution.begin', 2.598833643460815e-06], ['(*i).first;', 2.598833643460815e-06], ['bogus', 2.598833643460815e-06], ['(!tilepro_emit', 2.598833643460815e-06], ['(!tilegx_emit', 2.598833643460815e-06], ['comma_separator);', 2.598833643460815e-06], ['INT32_MIN;', 2.598833643460815e-06], ['INT64_MIN;', 2.598833643460815e-06], ['int_min)', 2.598833643460815e-06], ["C's", 2.598833643460815e-06], ['woeful', 2.598833643460815e-06], ['lack', 2.598833643460815e-06], ['negation.', 2.598833643460815e-06], ['INT_MIN', 2.598833643460815e-06], ['&s->m_exprs[j];', 2.598833643460815e-06], ['e->m_op;', 2.598833643460815e-06], ['buf[1024];', 2.598833643460815e-06], ['"%s{%d,', 2.598833643460815e-06], ['%d}%s",', 2.598833643460815e-06], ['op->m_top_index,', 2.598833643460815e-06], ['e->m_lhs,', 2.598833643460815e-06], ['e->m_rhs,', 2.598833643460815e-06], ['s->m_num_vals', 2.598833643460815e-06], ['opnd0[10];', 2.598833643460815e-06], ['(e->m_lhs)', 2.598833643460815e-06], ['"r%d",', 2.598833643460815e-06], ['e->m_lhs);', 2.598833643460815e-06], ['"zero");', 2.598833643460815e-06], ['("%s\\t\\t\\t/*', 2.598833643460815e-06], ['r%d,', 2.598833643460815e-06], ['%s%d', 2.598833643460815e-06], ['*/\\n",', 2.598833643460815e-06], ['op->m_name,', 2.598833643460815e-06], ['"r",', 2.598833643460815e-06], ['e->m_rhs);', 2.598833643460815e-06], ['}");', 2.598833643460815e-06], ['comma_separator', 2.598833643460815e-06], ['",\\n";', 2.598833643460815e-06], ['%s_multiply_insn_seq_table_size', 2.598833643460815e-06], ['=\\n"', 2.598833643460815e-06], ['%s_multiply_insn_seq_table\\n"', 2.598833643460815e-06], ['%s_multiply_insn_seq_table[0]);\\n",', 2.598833643460815e-06], ['EXIT_SUCCESS;', 2.598833643460815e-06], ['brig-branch-inst-handler.cc', 2.598833643460815e-06], ['brig_branch_inst_handler::operator', 2.598833643460815e-06], ['BRIG_OPCODE_CALL)', 2.598833643460815e-06], ['*out_args;', 2.598833643460815e-06], ['(out_args,', 2.598833643460815e-06], ['*in_args;', 2.598833643460815e-06], ['Ten', 2.598833643460815e-06], ['initially,', 2.598833643460815e-06], ['(operand_count', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CODE_REF);', 2.598833643460815e-06], ['*operand_data);', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_CODE_LIST);', 2.598833643460815e-06], ['*codelist', 2.598833643460815e-06], ['operand_data;', 2.598833643460815e-06], ['(codelist->elements);', 2.598833643460815e-06], ['*code_element', 2.598833643460815e-06], ['(code_element->kind', 2.598833643460815e-06], ['*brig_var', 2.598833643460815e-06], ['code_element;', 2.598833643460815e-06], ['(brig_var);', 2.598833643460815e-06], ['(brig_var->type', 2.598833643460815e-06], ['(out_args_p', 2.598833643460815e-06], ['out_args', 2.598833643460815e-06], ['in_args,', 2.598833643460815e-06], ['(func_ref', 2.598833643460815e-06], ['out_args->length', 2.598833643460815e-06], ['(*out_args)[0];', 2.598833643460815e-06], ['(ret_val);', 2.598833643460815e-06], ['group_local_offset', 2.598833643460815e-06], ['("group_local_offset",', 2.598833643460815e-06], ['m_parent.m_cf->', 2.598833643460815e-06], ['m_local_group_variables.size()));', 2.598833643460815e-06], ["callee's", 2.598833643460815e-06], ['aligned!', 2.598833643460815e-06], ['m_parent.m_cf->m_group_base_arg);', 2.598833643460815e-06], ['group_local_offset);', 2.598833643460815e-06], ['m_parent.m_cf->m_private_base_arg);', 2.598833643460815e-06], ['(ret_val_type,', 2.598833643460815e-06], ['(func_ref),', 2.598833643460815e-06], ['in_args);', 2.598833643460815e-06], ['(func_ref)', 2.598833643460815e-06], ['(ret_val', 2.598833643460815e-06], ['(ret_val)', 2.598833643460815e-06], ['(ret_val),', 2.598833643460815e-06], ['ret_val,', 2.598833643460815e-06], ['(result_assign);', 2.598833643460815e-06], ['m_parent.m_cf->m_called_functions.push_back', 2.598833643460815e-06], ['(func_ref);', 2.598833643460815e-06], ['(func_ref))', 2.598833643460815e-06], ['m_parent.add_decl_call', 2.598833643460815e-06], ['BRIG_OPCODE_BR)', 2.598833643460815e-06], ['BRIG_OPCODE_SBR)', 2.598833643460815e-06], ['switch_expr', 2.598833643460815e-06], ['(select),', 2.598833643460815e-06], ['select,', 2.598833643460815e-06], ['(default_case,', 2.598833643460815e-06], ['default_jump', 2.598833643460815e-06], ['(default_jump,', 2.598833643460815e-06], ['(cases);', 2.598833643460815e-06], ['case_label', 2.598833643460815e-06], ['c),', 2.598833643460815e-06], ['(case_label,', 2.598833643460815e-06], ['c));', 2.598833643460815e-06], ['(switch_expr);', 2.598833643460815e-06], ['BRIG_OPCODE_CBR)', 2.598833643460815e-06], ['Represents', 2.598833643460815e-06], ['(condition)?(goto', 2.598833643460815e-06], ['foo):(goto', 2.598833643460815e-06], ['bar).', 2.598833643460815e-06], ['(if_stmt);', 2.598833643460815e-06], ['BRIG_OPCODE_WAVEBARRIER)', 2.598833643460815e-06], ['WAVEBARRIER', 2.598833643460815e-06], ['NOP', 2.598833643460815e-06], ['BRIG_OPCODE_BARRIER)', 2.598833643460815e-06], ['(are', 2.598833643460815e-06], ['gcc?)', 2.598833643460815e-06], ['duplicated', 2.598833643460815e-06], ["'noduplicate'", 2.598833643460815e-06], ['LLVM.', 2.598833643460815e-06], ['fbarriers.', 2.598833643460815e-06], ['BRIG_OPCODE_ARRIVEFBAR', 2.598833643460815e-06], ['BRIG_OPCODE_WAITFBAR)', 2.598833643460815e-06], ['d-target.cc', 2.598833643460815e-06], ['"dmd/tokens.h"', 2.598833643460815e-06], ['Target::c_longsize;', 2.598833643460815e-06], ['Target::realsize;', 2.598833643460815e-06], ['Target::realpad;', 2.598833643460815e-06], ['Target::realalignsize;', 2.598833643460815e-06], ['Target::reverseCppOverloads;', 2.598833643460815e-06], ['Target::cppExceptions;', 2.598833643460815e-06], ['Target::maxStaticDataSize;', 2.598833643460815e-06], ['.max,', 2.598833643460815e-06], ['.min,', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::max;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::min_normal;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::nan;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::snan;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::infinity;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::epsilon;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::dig;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::mant_dig;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::max_exp;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::min_exp;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::max_10_exp;', 2.598833643460815e-06], ['Target::FPTypeProperties<T>::min_10_exp;', 2.598833643460815e-06], ['log10_2', 2.598833643460815e-06], ['0.30102999566398119521;', 2.598833643460815e-06], ['buf[128];', 2.598833643460815e-06], ['REAL_MODE_FORMAT', 2.598833643460815e-06], ['infinity.', 2.598833643460815e-06], ['get_max_float', 2.598833643460815e-06], ['(fmt,', 2.598833643460815e-06], ['(buf));', 2.598833643460815e-06], ['(&T::max.rv', 2.598833643460815e-06], ['(&T::min_normal.rv', 2.598833643460815e-06], ['(&T::nan.rv', 2.598833643460815e-06], ['Signalling', 2.598833643460815e-06], ['(&T::snan.rv', 2.598833643460815e-06], ['+Infinity', 2.598833643460815e-06], ['infinities.', 2.598833643460815e-06], ['(&T::infinity.rv', 2.598833643460815e-06], ['(fmt->pnan', 2.598833643460815e-06], ['fmt->p)', 2.598833643460815e-06], ['(&T::epsilon.rv', 2.598833643460815e-06], ['T::dig', 2.598833643460815e-06], ['mantissa.', 2.598833643460815e-06], ['T::mant_dig', 2.598833643460815e-06], ['fmt->p;', 2.598833643460815e-06], ['T::max_exp', 2.598833643460815e-06], ['fmt->emax;', 2.598833643460815e-06], ['T::min_exp', 2.598833643460815e-06], ['fmt->emin;', 2.598833643460815e-06], ['T::max_10_exp', 2.598833643460815e-06], ['fmt->emax', 2.598833643460815e-06], ['T::min_10_exp', 2.598833643460815e-06], ['(fmt->emin', 2.598833643460815e-06], ['Target::ptrsize', 2.598833643460815e-06], ['Target::realsize', 2.598833643460815e-06], ['(Target::realsize', 2.598833643460815e-06], ['(long_double_type_node)', 2.598833643460815e-06], ['Target::realalignsize', 2.598833643460815e-06], ['Target::classinfosize', 2.598833643460815e-06], ['Target::maxStaticDataSize', 2.598833643460815e-06], ['tree_to_shwi', 2.598833643460815e-06], ['(TYPE_MAX_VALUE', 2.598833643460815e-06], ['(ptrdiff_type_node));', 2.598833643460815e-06], ['ptrdiff_t.', 2.598833643460815e-06], ['global.params.isLP64', 2.598833643460815e-06], ['Tint64;', 2.598833643460815e-06], ['Tuns32;', 2.598833643460815e-06], ['Tint32;', 2.598833643460815e-06], ['Type::tsize_t', 2.598833643460815e-06], ['Type::basic[Tsize_t];', 2.598833643460815e-06], ['Type::tptrdiff_t', 2.598833643460815e-06], ['Type::basic[Tptrdiff_t];', 2.598833643460815e-06], ['Type::thash_t', 2.598833643460815e-06], ['Target::c_longsize', 2.598833643460815e-06], ['Target::reverseCppOverloads', 2.598833643460815e-06], ['Target::cppExceptions', 2.598833643460815e-06], ['real_value.', 2.598833643460815e-06], ['(real_t)', 2.598833643460815e-06], ['(real_value));', 2.598833643460815e-06], ['<Target::FloatProperties>', 2.598833643460815e-06], ['<Target::DoubleProperties>', 2.598833643460815e-06], ['<Target::RealProperties>', 2.598833643460815e-06], ['Commonly', 2.598833643460815e-06], ['(&CTFloat::zero.rv', 2.598833643460815e-06], ['&dconst0);', 2.598833643460815e-06], ['(&CTFloat::one.rv', 2.598833643460815e-06], ['&dconst1);', 2.598833643460815e-06], ['(&CTFloat::minusone.rv', 2.598833643460815e-06], ['&dconstm1);', 2.598833643460815e-06], ['(&CTFloat::half.rv', 2.598833643460815e-06], ['&dconsthalf);', 2.598833643460815e-06], ['Target::alignsize', 2.598833643460815e-06], ['min_align_of_type', 2.598833643460815e-06], ['Target::fieldalign', 2.598833643460815e-06], ['type->alignsize', 2.598833643460815e-06], ['BIGGEST_FIELD_ALIGNMENT', 2.598833643460815e-06], ['BIGGEST_FIELD_ALIGNMENT);', 2.598833643460815e-06], ['align);', 2.598833643460815e-06], ['-fpack-struct=', 2.598833643460815e-06], ['(maximum_field_alignment)', 2.598833643460815e-06], ['maximum_field_alignment);', 2.598833643460815e-06], ['critical', 2.598833643460815e-06], ['Target::critsecsize', 2.598833643460815e-06], ['targetdm.d_critsec_size', 2.598833643460815e-06], ['Target::va_listType', 2.598833643460815e-06], ['Type::tvalist;', 2.598833643460815e-06], ['SZ', 2.598833643460815e-06], ['Target::isVectorTypeSupported', 2.598833643460815e-06], ['__vector(void[])', 2.598833643460815e-06], ['__vector(ubyte[])', 2.598833643460815e-06], ['(!type->isTypeBasic', 2.598833643460815e-06], ['hardware', 2.598833643460815e-06], ['(!targetm.vector_mode_supported_p', 2.598833643460815e-06], ['(mode)', 2.598833643460815e-06], ['!targetm.scalar_mode_supported_p', 2.598833643460815e-06], ['(as_a', 2.598833643460815e-06], ['<scalar_mode>', 2.598833643460815e-06], ['(mode)))', 2.598833643460815e-06], ['Target::isVectorOpSupported', 2.598833643460815e-06], ['TOK', 2.598833643460815e-06], ['non-scalar,', 2.598833643460815e-06], ['__vector(void[]).', 2.598833643460815e-06], ['(!type->isscalar', 2.598833643460815e-06], ['TOKpow:', 2.598833643460815e-06], ['fmod()', 2.598833643460815e-06], ['(type->isfloating', 2.598833643460815e-06], ['TOKandand:', 2.598833643460815e-06], ['TOKoror:', 2.598833643460815e-06], ['Logical', 2.598833643460815e-06], ['TOKue:', 2.598833643460815e-06], ['TOKlg:', 2.598833643460815e-06], ['TOKule:', 2.598833643460815e-06], ['TOKul:', 2.598833643460815e-06], ['TOKuge:', 2.598833643460815e-06], ['TOKug:', 2.598833643460815e-06], ['TOKleg:', 2.598833643460815e-06], ['TOKunord:', 2.598833643460815e-06], ['TOKequal:', 2.598833643460815e-06], ['TOKnotequal:', 2.598833643460815e-06], ['TOKidentity:', 2.598833643460815e-06], ['TOKnotidentity:', 2.598833643460815e-06], ['Target::toCppMangle', 2.598833643460815e-06], ['toCppMangleItanium', 2.598833643460815e-06], ['CD', 2.598833643460815e-06], ['cppTypeInfoMangleItanium', 2.598833643460815e-06], ['mangling.', 2.598833643460815e-06], ['Target::cppTypeMangle', 2.598833643460815e-06], ['targetm.mangle_type', 2.598833643460815e-06], ['Target::cppParameterType', 2.598833643460815e-06], ['arg->type->merge2', 2.598833643460815e-06], ['t->referenceTo', 2.598833643460815e-06], ['(td);', 2.598833643460815e-06], ['t->merge2', 2.598833643460815e-06], ['mangle', 2.598833643460815e-06], ['Type::tvalist->ty', 2.598833643460815e-06], ['Type::tvalist)', 2.598833643460815e-06], ['tb->castMod', 2.598833643460815e-06], ['(t->mod);', 2.598833643460815e-06], ['fundamental', 2.598833643460815e-06], ['IS_FUNDAMENTAL', 2.598833643460815e-06], ['Target::cppFundamentalType', 2.598833643460815e-06], ['LINK', 2.598833643460815e-06], ['Target::systemLinkage', 2.598833643460815e-06], ['LINKc;', 2.598833643460815e-06], ['brig-mem-inst-handler.cc', 2.598833643460815e-06], ['inst', 2.598833643460815e-06], ['brig_mem_inst_handler::build_mem_access', 2.598833643460815e-06], ['is_load', 2.598833643460815e-06], ['BRIG_OPCODE_LD;', 2.598833643460815e-06], ['(!is_load', 2.598833643460815e-06], ['!is_store)', 2.598833643460815e-06], ['{ld,st}_v{2,4}.', 2.598833643460815e-06], ['as).', 2.598833643460815e-06], ['(data))', 2.598833643460815e-06], ['(data);', 2.598833643460815e-06], ['unaligned', 2.598833643460815e-06], ['exploit', 2.598833643460815e-06], ['modifier,', 2.598833643460815e-06], ['faster', 2.598833643460815e-06], ['unaligned_type', 2.598833643460815e-06], ['build_aligned_type', 2.598833643460815e-06], ['unaligned_type,', 2.598833643460815e-06], ['(is_load)', 2.598833643460815e-06], ['unpack.', 2.598833643460815e-06], ['("mem_read",', 2.598833643460815e-06], ['(mem_ref),', 2.598833643460815e-06], ['brig_mem_inst_handler::operator', 2.598833643460815e-06], ['BRIG_OPCODE_ALLOCA)', 2.598833643460815e-06], ['*mem_inst', 2.598833643460815e-06], ['brig_inst;', 2.598833643460815e-06], ['BRIG_ALIGNMENT_NONE)', 2.598833643460815e-06], ['align_opr', 2.598833643460815e-06], ['(align_opr);', 2.598833643460815e-06], ['builtin_call', 2.598833643460815e-06], ['(BRIG_OPCODE_ALLOCA,', 2.598833643460815e-06], ['inputs);', 2.598833643460815e-06], ['builtin_call);', 2.598833643460815e-06], ['m_parent.m_cf->m_has_allocas', 2.598833643460815e-06], ['data_operand_offset;', 2.598833643460815e-06], ['(&data_operand_offset,', 2.598833643460815e-06], ['&operand_entries->bytes,', 2.598833643460815e-06], ['*operand', 2.598833643460815e-06], ['(data_operand_offset);', 2.598833643460815e-06], ['*operandData', 2.598833643460815e-06], ['is_three_element_vector_access', 2.598833643460815e-06], ['operand->kind', 2.598833643460815e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST', 2.598833643460815e-06], ['(operandData', 2.598833643460815e-06], ['(((const', 2.598833643460815e-06], ['operand)->elements))', 2.598833643460815e-06], ['operandData->byteCount', 2.598833643460815e-06], ['(is_three_element_vector_access)', 2.598833643460815e-06], ['scalarize', 2.598833643460815e-06], ['3-element', 2.598833643460815e-06], ['datatypes', 2.598833643460815e-06], ['internally.', 2.598833643460815e-06], ['operandData->byteCount;', 2.598833643460815e-06], ['operandData->bytes;', 2.598833643460815e-06], ['addr_operand_offset;', 2.598833643460815e-06], ['(&addr_operand_offset,', 2.598833643460815e-06], ['&operand_entries->bytes', 2.598833643460815e-06], ['*addr_operand', 2.598833643460815e-06], ['(addr_operand_offset);', 2.598833643460815e-06], ['address_base', 2.598833643460815e-06], ['*addr_operand);', 2.598833643460815e-06], ['instr_type);', 2.598833643460815e-06], ['address_offset);', 2.598833643460815e-06], ['(address_base),', 2.598833643460815e-06], ['address_base,', 2.598833643460815e-06], ['ptr_offset);', 2.598833643460815e-06], ['(is_store', 2.598833643460815e-06], ['instr_type)', 2.598833643460815e-06], ['&data', 2.598833643460815e-06], ['&addr', 2.598833643460815e-06], ['brig-signal-inst-handler.cc', 2.598833643460815e-06], ['brig_signal_inst_handler::operator', 2.598833643460815e-06], ['inst->signalOperation;', 2.598833643460815e-06], ['brig-copy-move-inst-handler.cc', 2.598833643460815e-06], ['copy/move', 2.598833643460815e-06], ['brig_copy_move_inst_handler::handle_lda', 2.598833643460815e-06], ['*brig_inst)', 2.598833643460815e-06], ['brig_inst->base.byteCount;', 2.598833643460815e-06], ['brig_copy_move_inst_handler::operator', 2.598833643460815e-06], ['handle_lda', 2.598833643460815e-06], ['(brig_inst);', 2.598833643460815e-06], ['*inst_src_type', 2.598833643460815e-06], ['(inst_src_type->sourceType);', 2.598833643460815e-06], ['source_type,', 2.598833643460815e-06], ['BRIG_OPCODE_COMBINE)', 2.598833643460815e-06], ['combine,', 2.598833643460815e-06], ['casted);', 2.598833643460815e-06], ['BRIG_OPCODE_EXPAND)', 2.598833643460815e-06], ['go-gcc.cc', 2.598833643460815e-06], ['Ian', 2.598833643460815e-06], ['Lance', 2.598833643460815e-06], ['Taylor,', 2.598833643460815e-06], ['"C",', 2.598833643460815e-06], ['tree.h', 2.598833643460815e-06], ['<gmp.h>', 2.598833643460815e-06], ['"realmpfr.h"', 2.598833643460815e-06], ['Gcc_tree(tree', 2.598833643460815e-06], ['t_(t)', 2.598833643460815e-06], ['get_tree()', 2.598833643460815e-06], ['set_tree(tree', 2.598833643460815e-06], ['gcc,', 2.598833643460815e-06], ['Btype(tree', 2.598833643460815e-06], ['Bexpression(tree', 2.598833643460815e-06], ['Bstatement(tree', 2.598833643460815e-06], ['Bfunction(tree', 2.598833643460815e-06], ['Bblock', 2.598833643460815e-06], ['Bblock(tree', 2.598833643460815e-06], ['Blabel', 2.598833643460815e-06], ['Blabel(tree', 2.598833643460815e-06], ['complicated,', 2.598833643460815e-06], ['if,', 2.598833643460815e-06], ['non-zero-sized', 2.598833643460815e-06], ['miscompilation.', 2.598833643460815e-06], ['orig_type_(NULL)', 2.598833643460815e-06], ['orig_type)', 2.598833643460815e-06], ['orig_type_(orig_type)', 2.598833643460815e-06], ['get_tree(Location)', 2.598833643460815e-06], ['get_decl()', 2.598833643460815e-06], ['orig_type_;', 2.598833643460815e-06], ['Bvariable::get_tree(Location', 2.598833643460815e-06], ['(this->orig_type_', 2.598833643460815e-06], ['TREE_TYPE(this->t_)', 2.598833643460815e-06], ['this->orig_type_)', 2.598833643460815e-06], ['*(orig_type*)&decl.', 2.598833643460815e-06], ['this->t_);', 2.598833643460815e-06], ['build_pointer_type(this->orig_type_),', 2.598833643460815e-06], ['instantiations', 2.598833643460815e-06], ['proper.', 2.598833643460815e-06], ['Gcc_backend', 2.598833643460815e-06], ['Backend', 2.598833643460815e-06], ['error_type()', 2.598833643460815e-06], ['this->make_type(error_mark_node);', 2.598833643460815e-06], ['void_type()', 2.598833643460815e-06], ['this->make_type(void_type_node);', 2.598833643460815e-06], ['bool_type()', 2.598833643460815e-06], ['this->make_type(boolean_type_node);', 2.598833643460815e-06], ['integer_type(bool,', 2.598833643460815e-06], ['float_type(int);', 2.598833643460815e-06], ['complex_type(int);', 2.598833643460815e-06], ['pointer_type(Btype*);', 2.598833643460815e-06], ['function_type(const', 2.598833643460815e-06], ['Btyped_identifier&,', 2.598833643460815e-06], ['struct_type(const', 2.598833643460815e-06], ['array_type(Btype*,', 2.598833643460815e-06], ['placeholder_pointer_type(const', 2.598833643460815e-06], ['set_placeholder_pointer_type(Btype*,', 2.598833643460815e-06], ['set_placeholder_function_type(Btype*,', 2.598833643460815e-06], ['placeholder_struct_type(const', 2.598833643460815e-06], ['set_placeholder_struct_type(Btype*', 2.598833643460815e-06], ['placeholder_array_type(const', 2.598833643460815e-06], ['set_placeholder_array_type(Btype*,', 2.598833643460815e-06], ['named_type(const', 2.598833643460815e-06], ['circular_pointer_type(Btype*,', 2.598833643460815e-06], ['is_circular_pointer_type(Btype*);', 2.598833643460815e-06], ['type_size(Btype*);', 2.598833643460815e-06], ['type_alignment(Btype*);', 2.598833643460815e-06], ['type_field_alignment(Btype*);', 2.598833643460815e-06], ['type_field_offset(Btype*,', 2.598833643460815e-06], ['Expressions.', 2.598833643460815e-06], ['zero_expression(Btype*);', 2.598833643460815e-06], ['error_expression()', 2.598833643460815e-06], ['this->make_expression(error_mark_node);', 2.598833643460815e-06], ['nil_pointer_expression()', 2.598833643460815e-06], ['this->make_expression(null_pointer_node);', 2.598833643460815e-06], ['var_expression(Bvariable*', 2.598833643460815e-06], ['indirect_expression(Btype*,', 2.598833643460815e-06], ['named_constant_expression(Btype*', 2.598833643460815e-06], ['integer_constant_expression(Btype*', 2.598833643460815e-06], ['float_constant_expression(Btype*', 2.598833643460815e-06], ['complex_constant_expression(Btype*', 2.598833643460815e-06], ['string_constant_expression(const', 2.598833643460815e-06], ['boolean_constant_expression(bool', 2.598833643460815e-06], ['real_part_expression(Bexpression*', 2.598833643460815e-06], ['imag_part_expression(Bexpression*', 2.598833643460815e-06], ['complex_expression(Bexpression*', 2.598833643460815e-06], ['convert_expression(Btype*', 2.598833643460815e-06], ['function_code_expression(Bfunction*,', 2.598833643460815e-06], ['address_expression(Bexpression*,', 2.598833643460815e-06], ['struct_field_expression(Bexpression*,', 2.598833643460815e-06], ['compound_expression(Bstatement*,', 2.598833643460815e-06], ['conditional_expression(Bfunction*,', 2.598833643460815e-06], ['unary_expression(Operator,', 2.598833643460815e-06], ['binary_expression(Operator,', 2.598833643460815e-06], ['constructor_expression(Btype*,', 2.598833643460815e-06], ['array_constructor_expression(Btype*,', 2.598833643460815e-06], ['long>&,', 2.598833643460815e-06], ['pointer_offset_expression(Bexpression*', 2.598833643460815e-06], ['array_index_expression(Bexpression*', 2.598833643460815e-06], ['call_expression(Bfunction*', 2.598833643460815e-06], ['static_chain,', 2.598833643460815e-06], ['Statements.', 2.598833643460815e-06], ['error_statement()', 2.598833643460815e-06], ['this->make_statement(error_mark_node);', 2.598833643460815e-06], ['expression_statement(Bfunction*,', 2.598833643460815e-06], ['init_statement(Bfunction*,', 2.598833643460815e-06], ['assignment_statement(Bfunction*,', 2.598833643460815e-06], ['return_statement(Bfunction*,', 2.598833643460815e-06], ['if_statement(Bfunction*,', 2.598833643460815e-06], ['switch_statement(Bfunction*', 2.598833643460815e-06], ['compound_statement(Bstatement*,', 2.598833643460815e-06], ['Bstatement*);', 2.598833643460815e-06], ['statement_list(const', 2.598833643460815e-06], ['exception_handler_statement(Bstatement*', 2.598833643460815e-06], ['Blocks.', 2.598833643460815e-06], ['block(Bfunction*,', 2.598833643460815e-06], ['std::vector<Bvariable*>&,', 2.598833643460815e-06], ['block_add_statements(Bblock*,', 2.598833643460815e-06], ['block_statement(Bblock*);', 2.598833643460815e-06], ['error_variable()', 2.598833643460815e-06], ['Bvariable(error_mark_node);', 2.598833643460815e-06], ['global_variable(const', 2.598833643460815e-06], ['global_variable_set_init(Bvariable*,', 2.598833643460815e-06], ['local_variable(Bfunction*,', 2.598833643460815e-06], ['Bvariable*,', 2.598833643460815e-06], ['parameter_variable(Bfunction*,', 2.598833643460815e-06], ['static_chain_variable(Bfunction*,', 2.598833643460815e-06], ['temporary_variable(Bfunction*,', 2.598833643460815e-06], ['Bstatement**);', 2.598833643460815e-06], ['implicit_variable(const', 2.598833643460815e-06], ['implicit_variable_set_init(Bvariable*,', 2.598833643460815e-06], ['implicit_variable_reference(const', 2.598833643460815e-06], ['immutable_struct(const', 2.598833643460815e-06], ['immutable_struct_set_init(Bvariable*,', 2.598833643460815e-06], ['immutable_struct_reference(const', 2.598833643460815e-06], ['Labels.', 2.598833643460815e-06], ['label(Bfunction*,', 2.598833643460815e-06], ['label_definition_statement(Blabel*);', 2.598833643460815e-06], ['goto_statement(Blabel*,', 2.598833643460815e-06], ['label_address(Blabel*,', 2.598833643460815e-06], ['error_function()', 2.598833643460815e-06], ['this->make_function(error_mark_node);', 2.598833643460815e-06], ['function(Btype*', 2.598833643460815e-06], ['function_defer_statement(Bfunction*', 2.598833643460815e-06], ['function_set_parameters(Bfunction*', 2.598833643460815e-06], ['function_set_body(Bfunction*', 2.598833643460815e-06], ['lookup_builtin(const', 2.598833643460815e-06], ['std::string&);', 2.598833643460815e-06], ['write_global_definitions(const', 2.598833643460815e-06], ['std::vector<Btype*>&,', 2.598833643460815e-06], ['std::vector<Bfunction*>&,', 2.598833643460815e-06], ['write_export_data(const', 2.598833643460815e-06], ['make_expression(tree', 2.598833643460815e-06], ['Bexpression(t);', 2.598833643460815e-06], ['make_statement(tree', 2.598833643460815e-06], ['Bstatement(t);', 2.598833643460815e-06], ['make_type(tree', 2.598833643460815e-06], ['Btype(t);', 2.598833643460815e-06], ['make_function(tree', 2.598833643460815e-06], ['Bfunction(t);', 2.598833643460815e-06], ['fill_in_struct(Btype*,', 2.598833643460815e-06], ['fill_in_array(Btype*,', 2.598833643460815e-06], ['non_zero_size_type(tree);', 2.598833643460815e-06], ['convert_tree(tree,', 2.598833643460815e-06], ['define_builtin(built_in_function', 2.598833643460815e-06], ['noreturn_p);', 2.598833643460815e-06], ['Bfunction*>', 2.598833643460815e-06], ['builtin_functions_;', 2.598833643460815e-06], ['get_identifier_from_string(const', 2.598833643460815e-06], ['get_identifier_with_length(str.data(),', 2.598833643460815e-06], ['str.length());', 2.598833643460815e-06], ['Gcc_backend::Gcc_backend()', 2.598833643460815e-06], ['fetch_and_add', 2.598833643460815e-06], ['++', 2.598833643460815e-06], ['--.', 2.598833643460815e-06], ['BITS_PER_UNIT)->get_tree();', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_1,', 2.598833643460815e-06], ['"__sync_fetch_and_add_1",', 2.598833643460815e-06], ['2)->get_tree();', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_2,', 2.598833643460815e-06], ['"__sync_fetch_and_add_2",', 2.598833643460815e-06], ['4)->get_tree();', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_4,', 2.598833643460815e-06], ['"__sync_fetch_and_add_4",', 2.598833643460815e-06], ['8)->get_tree();', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_8,', 2.598833643460815e-06], ['"__sync_fetch_and_add_8",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXPECT,', 2.598833643460815e-06], ['"__builtin_expect",', 2.598833643460815e-06], ['build_function_type_list(long_integer_type_node,', 2.598833643460815e-06], ['__builtin_memcmp', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_MEMCMP,', 2.598833643460815e-06], ['"__builtin_memcmp",', 2.598833643460815e-06], ['"memcmp",', 2.598833643460815e-06], ['runtime/internal/sys.', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_CTZ,', 2.598833643460815e-06], ['"__builtin_ctz",', 2.598833643460815e-06], ['"ctz",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_CTZLL,', 2.598833643460815e-06], ['"__builtin_ctzll",', 2.598833643460815e-06], ['"ctzll",', 2.598833643460815e-06], ['long_long_unsigned_type_node,', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_BSWAP32,', 2.598833643460815e-06], ['"__builtin_bswap32",', 2.598833643460815e-06], ['"bswap32",', 2.598833643460815e-06], ['build_function_type_list(uint32_type_node,', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_BSWAP64,', 2.598833643460815e-06], ['"__builtin_bswap64",', 2.598833643460815e-06], ['"bswap64",', 2.598833643460815e-06], ['build_function_type_list(uint64_type_node,', 2.598833643460815e-06], ['math_function_type', 2.598833643460815e-06], ['math_function_type_long', 2.598833643460815e-06], ['math_function_type_two', 2.598833643460815e-06], ['math_function_type_long_two', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ACOS,', 2.598833643460815e-06], ['"__builtin_acos",', 2.598833643460815e-06], ['"acos",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ACOSL,', 2.598833643460815e-06], ['"__builtin_acosl",', 2.598833643460815e-06], ['"acosl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ASIN,', 2.598833643460815e-06], ['"__builtin_asin",', 2.598833643460815e-06], ['"asin",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ASINL,', 2.598833643460815e-06], ['"__builtin_asinl",', 2.598833643460815e-06], ['"asinl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ATAN,', 2.598833643460815e-06], ['"__builtin_atan",', 2.598833643460815e-06], ['"atan",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ATANL,', 2.598833643460815e-06], ['"__builtin_atanl",', 2.598833643460815e-06], ['"atanl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ATAN2,', 2.598833643460815e-06], ['"__builtin_atan2",', 2.598833643460815e-06], ['"atan2",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_ATAN2L,', 2.598833643460815e-06], ['"__builtin_atan2l",', 2.598833643460815e-06], ['"atan2l",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_CEIL,', 2.598833643460815e-06], ['"__builtin_ceil",', 2.598833643460815e-06], ['"ceil",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_CEILL,', 2.598833643460815e-06], ['"__builtin_ceill",', 2.598833643460815e-06], ['"ceill",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_COS,', 2.598833643460815e-06], ['"__builtin_cos",', 2.598833643460815e-06], ['"cos",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_COSL,', 2.598833643460815e-06], ['"__builtin_cosl",', 2.598833643460815e-06], ['"cosl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXP,', 2.598833643460815e-06], ['"__builtin_exp",', 2.598833643460815e-06], ['"exp",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXPL,', 2.598833643460815e-06], ['"__builtin_expl",', 2.598833643460815e-06], ['"expl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXPM1,', 2.598833643460815e-06], ['"__builtin_expm1",', 2.598833643460815e-06], ['"expm1",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXPM1L,', 2.598833643460815e-06], ['"__builtin_expm1l",', 2.598833643460815e-06], ['"expm1l",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FABS,', 2.598833643460815e-06], ['"__builtin_fabs",', 2.598833643460815e-06], ['"fabs",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FABSL,', 2.598833643460815e-06], ['"__builtin_fabsl",', 2.598833643460815e-06], ['"fabsl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FLOOR,', 2.598833643460815e-06], ['"__builtin_floor",', 2.598833643460815e-06], ['"floor",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FLOORL,', 2.598833643460815e-06], ['"__builtin_floorl",', 2.598833643460815e-06], ['"floorl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FMOD,', 2.598833643460815e-06], ['"__builtin_fmod",', 2.598833643460815e-06], ['"fmod",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_FMODL,', 2.598833643460815e-06], ['"__builtin_fmodl",', 2.598833643460815e-06], ['"fmodl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LDEXP,', 2.598833643460815e-06], ['"__builtin_ldexp",', 2.598833643460815e-06], ['"ldexp",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LDEXPL,', 2.598833643460815e-06], ['"__builtin_ldexpl",', 2.598833643460815e-06], ['"ldexpl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG,', 2.598833643460815e-06], ['"__builtin_log",', 2.598833643460815e-06], ['"log",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOGL,', 2.598833643460815e-06], ['"__builtin_logl",', 2.598833643460815e-06], ['"logl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG1P,', 2.598833643460815e-06], ['"__builtin_log1p",', 2.598833643460815e-06], ['"log1p",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG1PL,', 2.598833643460815e-06], ['"__builtin_log1pl",', 2.598833643460815e-06], ['"log1pl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG10,', 2.598833643460815e-06], ['"__builtin_log10",', 2.598833643460815e-06], ['"log10",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG10L,', 2.598833643460815e-06], ['"__builtin_log10l",', 2.598833643460815e-06], ['"log10l",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG2,', 2.598833643460815e-06], ['"__builtin_log2",', 2.598833643460815e-06], ['"log2",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_LOG2L,', 2.598833643460815e-06], ['"__builtin_log2l",', 2.598833643460815e-06], ['"log2l",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SIN,', 2.598833643460815e-06], ['"__builtin_sin",', 2.598833643460815e-06], ['"sin",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SINL,', 2.598833643460815e-06], ['"__builtin_sinl",', 2.598833643460815e-06], ['"sinl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SQRT,', 2.598833643460815e-06], ['"__builtin_sqrt",', 2.598833643460815e-06], ['"sqrt",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_SQRTL,', 2.598833643460815e-06], ['"__builtin_sqrtl",', 2.598833643460815e-06], ['"sqrtl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_TAN,', 2.598833643460815e-06], ['"__builtin_tan",', 2.598833643460815e-06], ['"tan",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_TANL,', 2.598833643460815e-06], ['"__builtin_tanl",', 2.598833643460815e-06], ['"tanl",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_TRUNC,', 2.598833643460815e-06], ['"__builtin_trunc",', 2.598833643460815e-06], ['"trunc",', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_TRUNCL,', 2.598833643460815e-06], ['"__builtin_truncl",', 2.598833643460815e-06], ['"truncl",', 2.598833643460815e-06], ['runtime.getcallerpc.', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_RETURN_ADDRESS,', 2.598833643460815e-06], ['__builtin_dwarf_cfa', 2.598833643460815e-06], ['runtime.getcallersp.', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_DWARF_CFA,', 2.598833643460815e-06], ['__builtin_extract_return_addr', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_EXTRACT_RETURN_ADDR,', 2.598833643460815e-06], ['"__builtin_extract_return_addr",', 2.598833643460815e-06], ['__builtin_trap', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_TRAP,', 2.598833643460815e-06], ['"__builtin_trap",', 2.598833643460815e-06], ['__builtin_prefetch.', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_PREFETCH,', 2.598833643460815e-06], ['"__builtin_prefetch",', 2.598833643460815e-06], ['build_varargs_function_type_list(void_type_node,', 2.598833643460815e-06], ['__builtin_unreachable', 2.598833643460815e-06], ['this->define_builtin(BUILT_IN_UNREACHABLE,', 2.598833643460815e-06], ['"__builtin_unreachable",', 2.598833643460815e-06], ['Gcc_backend::integer_type(bool', 2.598833643460815e-06], ['(is_unsigned)', 2.598833643460815e-06], ['short_unsigned_type_node;', 2.598833643460815e-06], ['make_unsigned_type(bits);', 2.598833643460815e-06], ['signed_char_type_node;', 2.598833643460815e-06], ['make_signed_type(bits);', 2.598833643460815e-06], ['Gcc_backend::float_type(int', 2.598833643460815e-06], ['FLOAT_TYPE_SIZE)', 2.598833643460815e-06], ['DOUBLE_TYPE_SIZE)', 2.598833643460815e-06], ['LONG_DOUBLE_TYPE_SIZE)', 2.598833643460815e-06], ['bits;', 2.598833643460815e-06], ['Gcc_backend::complex_type(int', 2.598833643460815e-06], ['FLOAT_TYPE_SIZE', 2.598833643460815e-06], ['DOUBLE_TYPE_SIZE', 2.598833643460815e-06], ['LONG_DOUBLE_TYPE_SIZE', 2.598833643460815e-06], ['build_complex_type(type);', 2.598833643460815e-06], ['Gcc_backend::pointer_type(Btype*', 2.598833643460815e-06], ['to_type_tree', 2.598833643460815e-06], ['(to_type_tree', 2.598833643460815e-06], ['build_pointer_type(to_type_tree);', 2.598833643460815e-06], ['Gcc_backend::function_type(const', 2.598833643460815e-06], ['Btyped_identifier&', 2.598833643460815e-06], ['result_struct,', 2.598833643460815e-06], ['&args;', 2.598833643460815e-06], ['(receiver.btype', 2.598833643460815e-06], ['receiver.btype->get_tree();', 2.598833643460815e-06], ['parameters.begin();', 2.598833643460815e-06], ['parameters.end();', 2.598833643460815e-06], ['Varargs', 2.598833643460815e-06], ['entirely', 2.598833643460815e-06], ['varargs.', 2.598833643460815e-06], ['void_list_node;', 2.598833643460815e-06], ['(results.empty())', 2.598833643460815e-06], ['(results.size()', 2.598833643460815e-06], ['results.front().btype->get_tree();', 2.598833643460815e-06], ['gcc_assert(result_struct', 2.598833643460815e-06], ['result_struct->get_tree();', 2.598833643460815e-06], ['libffi', 2.598833643460815e-06], ['SPARC,', 2.598833643460815e-06], ['harm', 2.598833643460815e-06], ['https://gcc.gnu.org/PR72814', 2.598833643460815e-06], ['int_size_in_bytes(result)', 2.598833643460815e-06], ['build_function_type(result,', 2.598833643460815e-06], ['this->make_type(build_pointer_type(fntype));', 2.598833643460815e-06], ['Gcc_backend::struct_type(const', 2.598833643460815e-06], ['this->fill_in_struct(this->make_type(make_node(RECORD_TYPE)),', 2.598833643460815e-06], ['Gcc_backend::fill_in_struct(Btype*', 2.598833643460815e-06], ['fields.begin();', 2.598833643460815e-06], ['fields.end();', 2.598833643460815e-06], ['get_identifier_from_string(p->name);', 2.598833643460815e-06], ['build_decl(p->location.gcc_location(),', 2.598833643460815e-06], ['fill_tree;', 2.598833643460815e-06], ['&DECL_CHAIN(field);', 2.598833643460815e-06], ['TYPE_FIELDS(fill_tree)', 2.598833643460815e-06], ['Gcc_backend::array_type(Btype*', 2.598833643460815e-06], ['this->fill_in_array(this->make_type(make_node(ARRAY_TYPE)),', 2.598833643460815e-06], ['Gcc_backend::fill_in_array(Btype*', 2.598833643460815e-06], ['element_type->get_tree();', 2.598833643460815e-06], ['length->get_tree();', 2.598833643460815e-06], ['(element_type_tree', 2.598833643460815e-06], ['gcc_assert(TYPE_SIZE(element_type_tree)', 2.598833643460815e-06], ['fold_convert(sizetype,', 2.598833643460815e-06], ['length_tree);', 2.598833643460815e-06], ['index_type_tree', 2.598833643460815e-06], ['build_index_type(fold_build2(MINUS_EXPR,', 2.598833643460815e-06], ['length_tree,', 2.598833643460815e-06], ['size_one_node));', 2.598833643460815e-06], ['TREE_TYPE(fill_tree)', 2.598833643460815e-06], ['element_type_tree;', 2.598833643460815e-06], ['TYPE_DOMAIN(fill_tree)', 2.598833643460815e-06], ['index_type_tree;', 2.598833643460815e-06], ['TYPE_ADDR_SPACE(fill_tree)', 2.598833643460815e-06], ['TYPE_ADDR_SPACE(element_type_tree);', 2.598833643460815e-06], ['(TYPE_STRUCTURAL_EQUALITY_P(element_type_tree))', 2.598833643460815e-06], ['(TYPE_CANONICAL(element_type_tree)', 2.598833643460815e-06], ['TYPE_CANONICAL(index_type_tree)', 2.598833643460815e-06], ['index_type_tree)', 2.598833643460815e-06], ['TYPE_CANONICAL(fill_tree)', 2.598833643460815e-06], ['build_array_type(TYPE_CANONICAL(element_type_tree),', 2.598833643460815e-06], ['TYPE_CANONICAL(index_type_tree));', 2.598833643460815e-06], ['Gcc_backend::placeholder_pointer_type(const', 2.598833643460815e-06], ['build_distinct_type_copy(ptr_type_node);', 2.598833643460815e-06], ['Gcc_backend::set_placeholder_pointer_type(Btype*', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(pt)', 2.598833643460815e-06], ['(tt', 2.598833643460815e-06], ['placeholder->set_tree(error_mark_node);', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(tt)', 2.598833643460815e-06], ['TREE_TYPE(pt)', 2.598833643460815e-06], ['TREE_TYPE(tt);', 2.598833643460815e-06], ['TYPE_CANONICAL(pt)', 2.598833643460815e-06], ['TYPE_CANONICAL(tt);', 2.598833643460815e-06], ['(TYPE_NAME(pt)', 2.598833643460815e-06], ['build_variant_type_copy(pt);', 2.598833643460815e-06], ['DECL_ORIGINAL_TYPE(TYPE_NAME(pt))', 2.598833643460815e-06], ['Gcc_backend::set_placeholder_function_type(Btype*', 2.598833643460815e-06], ['this->set_placeholder_pointer_type(placeholder,', 2.598833643460815e-06], ['Gcc_backend::placeholder_struct_type(const', 2.598833643460815e-06], ['too,', 2.598833643460815e-06], ['propagates', 2.598833643460815e-06], ['SET_TYPE_STRUCTURAL_EQUALITY(ret);', 2.598833643460815e-06], ['Gcc_backend::set_placeholder_struct_type(', 2.598833643460815e-06], ['TYPE_FIELDS(t)', 2.598833643460815e-06], ['this->fill_in_struct(placeholder,', 2.598833643460815e-06], ['(TYPE_NAME(t)', 2.598833643460815e-06], ['TYPE_SIZE(copy)', 2.598833643460815e-06], ['bc', 2.598833643460815e-06], ['this->fill_in_struct(bc,', 2.598833643460815e-06], ['bc;', 2.598833643460815e-06], ['Gcc_backend::placeholder_array_type(const', 2.598833643460815e-06], ['make_node(ARRAY_TYPE);', 2.598833643460815e-06], ['Gcc_backend::set_placeholder_array_type(Btype*', 2.598833643460815e-06], ['TREE_TYPE(t)', 2.598833643460815e-06], ['this->fill_in_array(placeholder,', 2.598833643460815e-06], ['Gcc_backend::named_type(const', 2.598833643460815e-06], ['(TYPE_NAME(type)', 2.598833643460815e-06], ['location.gcc_location()', 2.598833643460815e-06], ['BUILTINS_LOCATION', 2.598833643460815e-06], ['INTEGER_TYPE', 2.598833643460815e-06], ['BOOLEAN_TYPE))', 2.598833643460815e-06], ['TYPE_NAME(type)', 2.598833643460815e-06], ['build_variant_type_copy(type);', 2.598833643460815e-06], ['copy);', 2.598833643460815e-06], ['DECL_ORIGINAL_TYPE(decl)', 2.598833643460815e-06], ['Gcc_backend::circular_pointer_type(Btype*,', 2.598833643460815e-06], ['this->make_type(ptr_type_node);', 2.598833643460815e-06], ['Gcc_backend::is_circular_pointer_type(Btype*', 2.598833643460815e-06], ['btype->get_tree()', 2.598833643460815e-06], ['Gcc_backend::type_size(Btype*', 2.598833643460815e-06], ['TYPE_SIZE_UNIT(t);', 2.598833643460815e-06], ['gcc_assert(tree_fits_uhwi_p', 2.598833643460815e-06], ['val_wide', 2.598833643460815e-06], ['TREE_INT_CST_LOW(t);', 2.598833643460815e-06], ['static_cast<int64_t>(val_wide);', 2.598833643460815e-06], ['HOST_WIDE_INT>(ret)', 2.598833643460815e-06], ['val_wide)', 2.598833643460815e-06], ['Gcc_backend::type_alignment(Btype*', 2.598833643460815e-06], ['TYPE_ALIGN_UNIT(t);', 2.598833643460815e-06], ['Gcc_backend::type_field_alignment(Btype*', 2.598833643460815e-06], ['go_field_alignment(t);', 2.598833643460815e-06], ['Gcc_backend::type_field_offset(Btype*', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(struct_tree)', 2.598833643460815e-06], ['TYPE_FIELDS(struct_tree);', 2.598833643460815e-06], ['--index)', 2.598833643460815e-06], ['offset_wide', 2.598833643460815e-06], ['int_byte_position(field);', 2.598833643460815e-06], ['static_cast<int64_t>(offset_wide);', 2.598833643460815e-06], ['gcc_assert(ret', 2.598833643460815e-06], ['offset_wide);', 2.598833643460815e-06], ['Gcc_backend::zero_expression(Btype*', 2.598833643460815e-06], ['build_zero_cst(t);', 2.598833643460815e-06], ['Gcc_backend::var_expression(Bvariable*', 2.598833643460815e-06], ['var->get_tree(location);', 2.598833643460815e-06], ['Gcc_backend::indirect_expression(Btype*', 2.598833643460815e-06], ['indirecting.', 2.598833643460815e-06], ['target_type_tree', 2.598833643460815e-06], ['TREE_TYPE(TREE_TYPE(expr_tree));', 2.598833643460815e-06], ['(VOID_TYPE_P(target_type_tree))', 2.598833643460815e-06], ['build_pointer_type(type_tree),', 2.598833643460815e-06], ['(known_valid)', 2.598833643460815e-06], ['TREE_THIS_NOTRAP(ret)', 2.598833643460815e-06], ['Gcc_backend::named_constant_expression(Btype*', 2.598833643460815e-06], ['val->get_tree();', 2.598833643460815e-06], ['const_val;', 2.598833643460815e-06], ['this->make_expression(decl);', 2.598833643460815e-06], ['Gcc_backend::integer_constant_expression(Btype*', 2.598833643460815e-06], ['double_int_to_tree(t,', 2.598833643460815e-06], ['mpz_get_double_int(t,', 2.598833643460815e-06], ['Gcc_backend::float_constant_expression(Btype*', 2.598833643460815e-06], ['TYPE_MODE(t),', 2.598833643460815e-06], ['build_real(t,', 2.598833643460815e-06], ['r2);', 2.598833643460815e-06], ['Gcc_backend::complex_constant_expression(Btype*', 2.598833643460815e-06], ['r3;', 2.598833643460815e-06], ['real_from_mpfr(&r3,', 2.598833643460815e-06], ['r4;', 2.598833643460815e-06], ['real_convert(&r4,', 2.598833643460815e-06], ['&r3);', 2.598833643460815e-06], ['build_complex(t,', 2.598833643460815e-06], ['r2),', 2.598833643460815e-06], ['r4));', 2.598833643460815e-06], ['Gcc_backend::string_constant_expression(const', 2.598833643460815e-06], ['build_index_type(size_int(val.length()));', 2.598833643460815e-06], ['const_char_type', 2.598833643460815e-06], ['build_qualified_type(unsigned_char_type_node,', 2.598833643460815e-06], ['TYPE_QUAL_CONST);', 2.598833643460815e-06], ['build_array_type(const_char_type,', 2.598833643460815e-06], ['index_type);', 2.598833643460815e-06], ['TYPE_STRING_FLAG(string_type)', 2.598833643460815e-06], ['string_val', 2.598833643460815e-06], ['build_string(val.length(),', 2.598833643460815e-06], ['val.data());', 2.598833643460815e-06], ['TREE_TYPE(string_val)', 2.598833643460815e-06], ['this->make_expression(string_val);', 2.598833643460815e-06], ['Gcc_backend::boolean_constant_expression(bool', 2.598833643460815e-06], ['bool_cst', 2.598833643460815e-06], ['this->make_expression(bool_cst);', 2.598833643460815e-06], ['Gcc_backend::real_part_expression(Bexpression*', 2.598833643460815e-06], ['Gcc_backend::imag_part_expression(Bexpression*', 2.598833643460815e-06], ['Gcc_backend::complex_expression(Bexpression*', 2.598833643460815e-06], ['real_tree', 2.598833643460815e-06], ['breal->get_tree();', 2.598833643460815e-06], ['bimag->get_tree();', 2.598833643460815e-06], ['(real_tree', 2.598833643460815e-06], ['gcc_assert(TYPE_MAIN_VARIANT(TREE_TYPE(real_tree))', 2.598833643460815e-06], ['TYPE_MAIN_VARIANT(TREE_TYPE(imag_tree)));', 2.598833643460815e-06], ['gcc_assert(SCALAR_FLOAT_TYPE_P(TREE_TYPE(real_tree)));', 2.598833643460815e-06], ['build_complex_type(TREE_TYPE(real_tree)),', 2.598833643460815e-06], ['real_tree,', 2.598833643460815e-06], ['imag_tree);', 2.598833643460815e-06], ['Gcc_backend::convert_expression(Btype*', 2.598833643460815e-06], ['(this->type_size(type)', 2.598833643460815e-06], ['fold(convert_to_integer(type_tree,', 2.598833643460815e-06], ['REAL_TYPE)', 2.598833643460815e-06], ['fold(convert_to_real(type_tree,', 2.598833643460815e-06], ['fold(convert_to_complex(type_tree,', 2.598833643460815e-06], ['TREE_CODE(TREE_TYPE(expr_tree))', 2.598833643460815e-06], ['fold(convert_to_pointer(type_tree,', 2.598833643460815e-06], ['Gcc_backend::function_code_expression(Bfunction*', 2.598833643460815e-06], ['bfunc,', 2.598833643460815e-06], ['bfunc->get_tree();', 2.598833643460815e-06], ['Gcc_backend::address_expression(Bexpression*', 2.598833643460815e-06], ['BSTRUCT.', 2.598833643460815e-06], ['Gcc_backend::struct_field_expression(Bexpression*', 2.598833643460815e-06], ['bstruct,', 2.598833643460815e-06], ['bstruct->get_tree();', 2.598833643460815e-06], ['TREE_TYPE(struct_tree)', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(TREE_TYPE(struct_tree))', 2.598833643460815e-06], ['TYPE_FIELDS(TREE_TYPE(struct_tree));', 2.598833643460815e-06], ['struct_tree,', 2.598833643460815e-06], ['(TREE_CONSTANT(struct_tree))', 2.598833643460815e-06], ['BEXPR.', 2.598833643460815e-06], ['Gcc_backend::compound_expression(Bstatement*', 2.598833643460815e-06], ['TREE_TYPE(expr),', 2.598833643460815e-06], ['stat,', 2.598833643460815e-06], ['THEN_EXPR', 2.598833643460815e-06], ['CONDITION', 2.598833643460815e-06], ['ELSE_EXPR', 2.598833643460815e-06], ['Gcc_backend::conditional_expression(Bfunction*,', 2.598833643460815e-06], ['then_expr,', 2.598833643460815e-06], ['then_expr->get_tree();', 2.598833643460815e-06], ['else_expr', 2.598833643460815e-06], ['else_expr->get_tree();', 2.598833643460815e-06], ['Gcc_backend::unary_expression(Operator', 2.598833643460815e-06], ['TREE_TYPE(expr_tree);', 2.598833643460815e-06], ['TRUTH_NOT_EXPR;', 2.598833643460815e-06], ['tree_code.', 2.598833643460815e-06], ['operator_to_tree_code(Operator', 2.598833643460815e-06], ['EQ_EXPR;', 2.598833643460815e-06], ['TRUTH_ANDIF_EXPR;', 2.598833643460815e-06], ['Gcc_backend::binary_expression(Operator', 2.598833643460815e-06], ['left->get_tree();', 2.598833643460815e-06], ['right->get_tree();', 2.598833643460815e-06], ['(left_tree', 2.598833643460815e-06], ['operator_to_tree_code(op,', 2.598833643460815e-06], ['TREE_TYPE(left_tree));', 2.598833643460815e-06], ['TREE_TYPE(left_tree)', 2.598833643460815e-06], ['TREE_TYPE(right_tree);', 2.598833643460815e-06], ['left_tree);', 2.598833643460815e-06], ['operators,', 2.598833643460815e-06], ['left_tree,', 2.598833643460815e-06], ['BTYPE', 2.598833643460815e-06], ['VALS.', 2.598833643460815e-06], ['Gcc_backend::constructor_expression(Btype*', 2.598833643460815e-06], ['TYPE_FIELDS(type_tree);', 2.598833643460815e-06], ['TREE_TYPE(val)', 2.598833643460815e-06], ['(int_size_in_bytes(TREE_TYPE(field))', 2.598833643460815e-06], ['this->convert_tree(TREE_TYPE(field),', 2.598833643460815e-06], ['(!TREE_CONSTANT(elt->value))', 2.598833643460815e-06], ['Gcc_backend::array_constructor_expression(', 2.598833643460815e-06], ['array_btype,', 2.598833643460815e-06], ['long>&', 2.598833643460815e-06], ['array_btype->get_tree();', 2.598833643460815e-06], ['gcc_assert(indexes.size()', 2.598833643460815e-06], ['TREE_TYPE(type_tree);', 2.598833643460815e-06], ['int_size_in_bytes(element_type);', 2.598833643460815e-06], ['size_int(indexes[i]);', 2.598833643460815e-06], ['(vals[i])->get_tree();', 2.598833643460815e-06], ['(!TREE_CONSTANT(val))', 2.598833643460815e-06], ['BASE[INDEX].', 2.598833643460815e-06], ['Gcc_backend::pointer_offset_expression(Bexpression*', 2.598833643460815e-06], ['base_tree', 2.598833643460815e-06], ['base->get_tree();', 2.598833643460815e-06], ['TREE_TYPE(TREE_TYPE(base_tree));', 2.598833643460815e-06], ['(base_tree', 2.598833643460815e-06], ['TREE_TYPE(base_tree)', 2.598833643460815e-06], ['TYPE_SIZE_UNIT(element_type_tree);', 2.598833643460815e-06], ['element_size);', 2.598833643460815e-06], ['POINTER_PLUS_EXPR,', 2.598833643460815e-06], ['TREE_TYPE(base_tree),', 2.598833643460815e-06], ['base_tree,', 2.598833643460815e-06], ['this->make_expression(ptr);', 2.598833643460815e-06], ['ARRAY[INDEX]', 2.598833643460815e-06], ['Gcc_backend::array_index_expression(Bexpression*', 2.598833643460815e-06], ['array_tree', 2.598833643460815e-06], ['array->get_tree();', 2.598833643460815e-06], ['(array_tree', 2.598833643460815e-06], ['TREE_TYPE(array_tree)', 2.598833643460815e-06], ['(TREE_TYPE(array_tree)', 2.598833643460815e-06], ['build4_loc(location.gcc_location(),', 2.598833643460815e-06], ['ARRAY_REF,', 2.598833643460815e-06], ['TREE_TYPE(TREE_TYPE(array_tree)),', 2.598833643460815e-06], ['FN_EXPR', 2.598833643460815e-06], ['FN_ARGS.', 2.598833643460815e-06], ['Gcc_backend::call_expression(Bfunction*,', 2.598833643460815e-06], ['fn_expr,', 2.598833643460815e-06], ['chain_expr,', 2.598833643460815e-06], ['fn_expr->get_tree();', 2.598833643460815e-06], ['TREE_TYPE(fn)', 2.598833643460815e-06], ['gcc_assert(FUNCTION_POINTER_TYPE_P(TREE_TYPE(fn)));', 2.598833643460815e-06], ['TREE_TYPE(TREE_TYPE(TREE_TYPE(fn)));', 2.598833643460815e-06], ['fn_args.size();', 2.598833643460815e-06], ['fn_args.at(i)->get_tree();', 2.598833643460815e-06], ['(TREE_CODE(fndecl)', 2.598833643460815e-06], ['TREE_OPERAND(fndecl,', 2.598833643460815e-06], ['80387', 2.598833643460815e-06], ['math.', 2.598833643460815e-06], ['(optimize', 2.598833643460815e-06], ['TREE_CODE(fndecl)', 2.598833643460815e-06], ['fndecl_built_in_p', 2.598833643460815e-06], ['BUILT_IN_NORMAL)', 2.598833643460815e-06], ['DECL_IS_BUILTIN', 2.598833643460815e-06], ['((SCALAR_FLOAT_TYPE_P(rettype)', 2.598833643460815e-06], ['SCALAR_FLOAT_TYPE_P(TREE_TYPE(args[0])))', 2.598833643460815e-06], ['(COMPLEX_FLOAT_TYPE_P(rettype)', 2.598833643460815e-06], ['COMPLEX_FLOAT_TYPE_P(TREE_TYPE(args[0])))))', 2.598833643460815e-06], ['excess_precision_type(TREE_TYPE(args[0]));', 2.598833643460815e-06], ['excess_fndecl', 2.598833643460815e-06], ['mathfn_built_in(excess_type,', 2.598833643460815e-06], ['DECL_FUNCTION_CODE(fndecl));', 2.598833643460815e-06], ['(excess_fndecl', 2.598833643460815e-06], ['excess_fndecl);', 2.598833643460815e-06], ['(SCALAR_FLOAT_TYPE_P(TREE_TYPE(args[i]))', 2.598833643460815e-06], ['COMPLEX_FLOAT_TYPE_P(TREE_TYPE(args[i])))', 2.598833643460815e-06], ['::convert(excess_type,', 2.598833643460815e-06], ['args[i]);', 2.598833643460815e-06], ['build_call_array_loc(location.gcc_location(),', 2.598833643460815e-06], ['(chain_expr)', 2.598833643460815e-06], ['CALL_EXPR_STATIC_CHAIN', 2.598833643460815e-06], ['chain_expr->get_tree();', 2.598833643460815e-06], ['convert_to_real.', 2.598833643460815e-06], ['build1_loc(location.gcc_location(),', 2.598833643460815e-06], ['Gcc_backend::expression_statement(Bfunction*,', 2.598833643460815e-06], ['this->make_statement(expr->get_tree());', 2.598833643460815e-06], ['Variable', 2.598833643460815e-06], ['Gcc_backend::init_statement(Bfunction*,', 2.598833643460815e-06], ['var_tree', 2.598833643460815e-06], ['(var_tree', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(var_tree)', 2.598833643460815e-06], ['VAR_DECL);', 2.598833643460815e-06], ['(int_size_in_bytes(TREE_TYPE(var_tree))', 2.598833643460815e-06], ['int_size_in_bytes(TREE_TYPE(init_tree))', 2.598833643460815e-06], ['DECL_INITIAL(var_tree)', 2.598833643460815e-06], ['build1_loc(DECL_SOURCE_LOCATION(var_tree),', 2.598833643460815e-06], ['var_tree);', 2.598833643460815e-06], ['build2_loc(DECL_SOURCE_LOCATION(var_tree),', 2.598833643460815e-06], ['Assignment.', 2.598833643460815e-06], ['Gcc_backend::assignment_statement(Bfunction*', 2.598833643460815e-06], ['lhs_tree', 2.598833643460815e-06], ['lhs->get_tree();', 2.598833643460815e-06], ['rhs->get_tree();', 2.598833643460815e-06], ['(lhs_tree', 2.598833643460815e-06], ['(TREE_TYPE(lhs_tree)', 2.598833643460815e-06], ['int_size_in_bytes(TREE_TYPE(lhs_tree))', 2.598833643460815e-06], ['TREE_TYPE(rhs_tree)', 2.598833643460815e-06], ['int_size_in_bytes(TREE_TYPE(rhs_tree))', 2.598833643460815e-06], ['this->compound_statement(this->expression_statement(bfn,', 2.598833643460815e-06], ['lhs),', 2.598833643460815e-06], ['this->expression_statement(bfn,', 2.598833643460815e-06], ['rhs));', 2.598833643460815e-06], ['this->convert_tree(TREE_TYPE(lhs_tree),', 2.598833643460815e-06], ['rhs_tree,', 2.598833643460815e-06], ['this->make_statement(fold_build2_loc(location.gcc_location(),', 2.598833643460815e-06], ['lhs_tree,', 2.598833643460815e-06], ['rhs_tree));', 2.598833643460815e-06], ['Return.', 2.598833643460815e-06], ['Gcc_backend::return_statement(Bfunction*', 2.598833643460815e-06], ['bfunction,', 2.598833643460815e-06], ['bfunction->get_tree();', 2.598833643460815e-06], ['(fntree', 2.598833643460815e-06], ['DECL_RESULT(fntree);', 2.598833643460815e-06], ['function_type', 2.598833643460815e-06], ['res_type', 2.598833643460815e-06], ['(res_type', 2.598833643460815e-06], ['int_size_in_bytes(res_type)', 2.598833643460815e-06], ['append_to_statement_list(ret,', 2.598833643460815e-06], ['(vals.empty())', 2.598833643460815e-06], ['(vals.size()', 2.598833643460815e-06], ['vals.front()->get_tree();', 2.598833643460815e-06], ['vals.front()->get_tree());', 2.598833643460815e-06], ['rettmp', 2.598833643460815e-06], ['create_tmp_var(rettype,', 2.598833643460815e-06], ['"RESULT");', 2.598833643460815e-06], ['TYPE_FIELDS(rettype);', 2.598833643460815e-06], ['p++,', 2.598833643460815e-06], ['rettmp,', 2.598833643460815e-06], ['(*p)->get_tree());', 2.598833643460815e-06], ['append_to_statement_list(set,', 2.598833643460815e-06], ['rettmp);', 2.598833643460815e-06], ['ret_expr', 2.598833643460815e-06], ['append_to_statement_list(ret_expr,', 2.598833643460815e-06], ['attempts', 2.598833643460815e-06], ['FINALLY_STMT', 2.598833643460815e-06], ['executed.', 2.598833643460815e-06], ['defers', 2.598833643460815e-06], ['BSTAT;', 2.598833643460815e-06], ['EXCEPT_STMT;', 2.598833643460815e-06], ['FINALLY_STMT;', 2.598833643460815e-06], ['Gcc_backend::exception_handler_statement(Bstatement*', 2.598833643460815e-06], ['except_stmt', 2.598833643460815e-06], ['except_stmt->get_tree();', 2.598833643460815e-06], ['finally_stmt', 2.598833643460815e-06], ['finally_stmt->get_tree();', 2.598833643460815e-06], ['(stat_tree', 2.598833643460815e-06], ['(except_tree', 2.598833643460815e-06], ['TRY_CATCH_EXPR,', 2.598833643460815e-06], ['CATCH_EXPR,', 2.598833643460815e-06], ['except_tree));', 2.598833643460815e-06], ['(finally_tree', 2.598833643460815e-06], ['TRY_FINALLY_EXPR,', 2.598833643460815e-06], ['finally_tree);', 2.598833643460815e-06], ['this->make_statement(stat_tree);', 2.598833643460815e-06], ['If.', 2.598833643460815e-06], ['Gcc_backend::if_statement(Bfunction*,', 2.598833643460815e-06], ['then_block->get_tree();', 2.598833643460815e-06], ['else_block->get_tree();', 2.598833643460815e-06], ['(cond_tree', 2.598833643460815e-06], ['Switch.', 2.598833643460815e-06], ['Gcc_backend::switch_statement(', 2.598833643460815e-06], ['switch_location)', 2.598833643460815e-06], ['gcc_assert(cases.size()', 2.598833643460815e-06], ['statements.size());', 2.598833643460815e-06], ['cases.begin();', 2.598833643460815e-06], ['++ps,', 2.598833643460815e-06], ['++pc)', 2.598833643460815e-06], ['(pc->empty())', 2.598833643460815e-06], ['EXPR_LOCATION((*ps)->get_tree())', 2.598833643460815e-06], ['build_case_label(NULL_TREE,', 2.598833643460815e-06], ['pc->begin();', 2.598833643460815e-06], ['pc->end();', 2.598833643460815e-06], ['++pcv)', 2.598833643460815e-06], ['(*pcv)->get_tree();', 2.598833643460815e-06], ['EXPR_LOCATION(t);', 2.598833643460815e-06], ['build_case_label((*pcv)->get_tree(),', 2.598833643460815e-06], ['(*ps)->get_tree();', 2.598833643460815e-06], ['value->get_tree();', 2.598833643460815e-06], ['build2_loc(switch_location.gcc_location(),', 2.598833643460815e-06], ['SWITCH_EXPR,', 2.598833643460815e-06], ['tv,', 2.598833643460815e-06], ['stmt_list);', 2.598833643460815e-06], ['this->make_statement(t);', 2.598833643460815e-06], ['Pair', 2.598833643460815e-06], ['Gcc_backend::compound_statement(Bstatement*', 2.598833643460815e-06], ['s1,', 2.598833643460815e-06], ['s2)', 2.598833643460815e-06], ['s1->get_tree();', 2.598833643460815e-06], ['s2->get_tree();', 2.598833643460815e-06], ['(stmt_list', 2.598833643460815e-06], ['Gcc_backend::statement_list(const', 2.598833643460815e-06], ['dual', 2.598833643460815e-06], ['blocks:', 2.598833643460815e-06], ['Bblock.', 2.598833643460815e-06], ['Gcc_backend::block(Bfunction*', 2.598833643460815e-06], ['start_location,', 2.598833643460815e-06], ['make_node(BLOCK);', 2.598833643460815e-06], ['gcc_assert(fndecl', 2.598833643460815e-06], ['(DECL_INITIAL(fndecl)', 2.598833643460815e-06], ['DECL_INITIAL(fndecl)', 2.598833643460815e-06], ['DECL_INITIAL(fndecl);', 2.598833643460815e-06], ['superbind_tree', 2.598833643460815e-06], ['enclosing->get_tree();', 2.598833643460815e-06], ['BIND_EXPR_BLOCK(superbind_tree);', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(superblock_tree)', 2.598833643460815e-06], ['&BLOCK_VARS(block_tree);', 2.598833643460815e-06], ['vars.begin();', 2.598833643460815e-06], ['vars.end();', 2.598833643460815e-06], ['(*pp', 2.598833643460815e-06], ['TREE_USED(block_tree)', 2.598833643460815e-06], ['build3_loc(start_location.gcc_location(),', 2.598833643460815e-06], ['BIND_EXPR,', 2.598833643460815e-06], ['BLOCK_VARS(block_tree),', 2.598833643460815e-06], ['block_tree);', 2.598833643460815e-06], ['TREE_SIDE_EFFECTS(bind_tree)', 2.598833643460815e-06], ['Bblock(bind_tree);', 2.598833643460815e-06], ['Gcc_backend::block_add_statements(Bblock*', 2.598833643460815e-06], ['append_to_statement_list(s,', 2.598833643460815e-06], ['BIND_EXPR_BODY(bind_tree)', 2.598833643460815e-06], ['Gcc_backend::block_statement(Bblock*', 2.598833643460815e-06], ['bblock)', 2.598833643460815e-06], ['this->make_statement(bind_tree);', 2.598833643460815e-06], ['go-c.h.', 2.598833643460815e-06], ['Gcc_backend::non_zero_size_type(tree', 2.598833643460815e-06], ['(int_size_in_bytes(type)', 2.598833643460815e-06], ['(TREE_CODE(type))', 2.598833643460815e-06], ['(TYPE_FIELDS(type)', 2.598833643460815e-06], ['TYPE_FIELDS(type);', 2.598833643460815e-06], ['TREE_TYPE(field);', 2.598833643460815e-06], ['TYPE_FIELDS(type))', 2.598833643460815e-06], ['non_zero_size_type(ft);', 2.598833643460815e-06], ['build_decl(DECL_SOURCE_LOCATION(field),', 2.598833643460815e-06], ['DECL_NAME(field),', 2.598833643460815e-06], ['DECL_CONTEXT(f)', 2.598833643460815e-06], ['&DECL_CHAIN(f);', 2.598833643460815e-06], ['TYPE_FIELDS(ns)', 2.598833643460815e-06], ['layout_type(ns);', 2.598833643460815e-06], ['(go_non_zero_struct', 2.598833643460815e-06], ['build_decl(UNKNOWN_LOCATION,', 2.598833643460815e-06], ['get_identifier("dummy"),', 2.598833643460815e-06], ['TYPE_FIELDS(type)', 2.598833643460815e-06], ['go_non_zero_struct', 2.598833643460815e-06], ['non_zero_size_type(TREE_TYPE(type));', 2.598833643460815e-06], ['build_array_type_nelts(element_type,', 2.598833643460815e-06], ['EXPR_TREE', 2.598833643460815e-06], ['TYPE_TREE.', 2.598833643460815e-06], ['Gcc_backend::convert_tree(tree', 2.598833643460815e-06], ['expr_tree,', 2.598833643460815e-06], ['TREE_TYPE(expr_tree))', 2.598833643460815e-06], ['TREE_CODE(TREE_TYPE(expr_tree)));', 2.598833643460815e-06], ['(POINTER_TYPE_P(type_tree)', 2.598833643460815e-06], ['INTEGRAL_TYPE_P(type_tree)', 2.598833643460815e-06], ['SCALAR_FLOAT_TYPE_P(type_tree)', 2.598833643460815e-06], ['COMPLEX_FLOAT_TYPE_P(type_tree))', 2.598833643460815e-06], ['gcc_assert(int_size_in_bytes(type_tree)', 2.598833643460815e-06], ['int_size_in_bytes(TREE_TYPE(expr_tree)));', 2.598833643460815e-06], ['(TYPE_MAIN_VARIANT(type_tree)', 2.598833643460815e-06], ['TYPE_MAIN_VARIANT(TREE_TYPE(expr_tree)))', 2.598833643460815e-06], ['Gcc_backend::global_variable(const', 2.598833643460815e-06], ['orig_type_tree', 2.598833643460815e-06], ['((is_external', 2.598833643460815e-06], ['!is_hidden)', 2.598833643460815e-06], ['int_size_in_bytes(type_tree)', 2.598833643460815e-06], ['this->non_zero_size_type(type_tree);', 2.598833643460815e-06], ['get_identifier_from_string(var_name),', 2.598833643460815e-06], ['(is_external)', 2.598833643460815e-06], ['(in_unique_section)', 2.598833643460815e-06], ['Bvariable(decl,', 2.598833643460815e-06], ['orig_type_tree);', 2.598833643460815e-06], ['Gcc_backend::global_variable_set_init(Bvariable*', 2.598833643460815e-06], ['gcc_assert(TREE_CONSTANT(expr_tree));', 2.598833643460815e-06], ['DECL_INITIAL(var_decl)', 2.598833643460815e-06], ['section,', 2.598833643460815e-06], ['(symtab_node::get(var_decl)', 2.598833643460815e-06], ['symtab_node::get(var_decl)->implicit_section)', 2.598833643460815e-06], ['(expr_tree),', 2.598833643460815e-06], ['Gcc_backend::local_variable(Bfunction*', 2.598833643460815e-06], ['decl_var,', 2.598833643460815e-06], ['(decl_var', 2.598833643460815e-06], ['DECL_HAS_VALUE_EXPR_P(decl)', 2.598833643460815e-06], ['SET_DECL_VALUE_EXPR(decl,', 2.598833643460815e-06], ['decl_var->get_decl());', 2.598833643460815e-06], ['Gcc_backend::parameter_variable(Bfunction*', 2.598833643460815e-06], ['Gcc_backend::static_chain_variable(Bfunction*', 2.598833643460815e-06], ['DECL_IGNORED_P(decl)', 2.598833643460815e-06], ['push_struct_function(fndecl);', 2.598833643460815e-06], ['gcc_assert(f->static_chain_decl', 2.598833643460815e-06], ['f->static_chain_decl', 2.598833643460815e-06], ['DECL_STATIC_CHAIN(fndecl)', 2.598833643460815e-06], ['Gcc_backend::temporary_variable(Bfunction*', 2.598833643460815e-06], ['pstatement)', 2.598833643460815e-06], ['gcc_assert(function', 2.598833643460815e-06], ['binit->get_tree();', 2.598833643460815e-06], ['(!TREE_ADDRESSABLE(type_tree))', 2.598833643460815e-06], ['create_tmp_var(type_tree,', 2.598833643460815e-06], ['"GOTMP");', 2.598833643460815e-06], ['gcc_assert(bblock', 2.598833643460815e-06], ['create_tmp_var_name("GOTMP"),', 2.598833643460815e-06], ['DECL_ARTIFICIAL(var)', 2.598833643460815e-06], ['DECL_IGNORED_P(var)', 2.598833643460815e-06], ['TREE_USED(var)', 2.598833643460815e-06], ['DECL_CONTEXT(var)', 2.598833643460815e-06], ['BIND_EXPR_BLOCK(bind_tree);', 2.598833643460815e-06], ['gcc_assert(TREE_CODE(block_tree)', 2.598833643460815e-06], ['DECL_CHAIN(var)', 2.598833643460815e-06], ['BLOCK_VARS(block_tree)', 2.598833643460815e-06], ['BIND_EXPR_VARS(bind_tree)', 2.598833643460815e-06], ['DECL_INITIAL(var)', 2.598833643460815e-06], ['this->convert_tree(type_tree,', 2.598833643460815e-06], ['TREE_ADDRESSABLE(var)', 2.598833643460815e-06], ['this->make_statement(build1_loc(location.gcc_location(),', 2.598833643460815e-06], ['var));', 2.598833643460815e-06], ['BINIT,', 2.598833643460815e-06], ['BINIT', 2.598833643460815e-06], ['void_type_node))', 2.598833643460815e-06], ['this->compound_statement(this->expression_statement(function,', 2.598833643460815e-06], ['binit),', 2.598833643460815e-06], ['*pstatement);', 2.598833643460815e-06], ['Bvariable(var);', 2.598833643460815e-06], ['compiler-defined.', 2.598833643460815e-06], ['Gcc_backend::implicit_variable(const', 2.598833643460815e-06], ['is_constant,', 2.598833643460815e-06], ['!is_hidden;', 2.598833643460815e-06], ['DECL_COMMON(decl)', 2.598833643460815e-06], ['implicit_variable', 2.598833643460815e-06], ['SET_DECL_ALIGN(decl,', 2.598833643460815e-06], ['DECL_USER_ALIGN(decl)', 2.598833643460815e-06], ['initalizer', 2.598833643460815e-06], ['Gcc_backend::implicit_variable_set_init(Bvariable*', 2.598833643460815e-06], ['Gcc_backend::implicit_variable_reference(const', 2.598833643460815e-06], ['Gcc_backend::immutable_struct(const', 2.598833643460815e-06], ['Gcc_backend::immutable_struct_set_init(Bvariable*', 2.598833643460815e-06], ['initializer)', 2.598833643460815e-06], ['initializer->get_tree();', 2.598833643460815e-06], ['unneeded', 2.598833643460815e-06], ['(init_tree),', 2.598833643460815e-06], ['Gcc_backend::immutable_struct_reference(const', 2.598833643460815e-06], ['Gcc_backend::label(Bfunction*', 2.598833643460815e-06], ['(DECL_STRUCT_FUNCTION(func_tree)', 2.598833643460815e-06], ['push_struct_function(func_tree);', 2.598833643460815e-06], ['push_cfun(DECL_STRUCT_FUNCTION(func_tree));', 2.598833643460815e-06], ['create_artificial_label(location.gcc_location());', 2.598833643460815e-06], ['Blabel(decl);', 2.598833643460815e-06], ['Gcc_backend::label_definition_statement(Blabel*', 2.598833643460815e-06], ['fold_build1_loc(DECL_SOURCE_LOCATION(lab),', 2.598833643460815e-06], ['LABEL_EXPR,', 2.598833643460815e-06], ['Gcc_backend::goto_statement(Blabel*', 2.598833643460815e-06], ['GOTO_EXPR,', 2.598833643460815e-06], ['Gcc_backend::label_address(Blabel*', 2.598833643460815e-06], ['TREE_USED(lab)', 2.598833643460815e-06], ['TREE_ADDRESSABLE(lab)', 2.598833643460815e-06], ['Gcc_backend::function(Btype*', 2.598833643460815e-06], ['fntype->get_tree();', 2.598833643460815e-06], ['gcc_assert(FUNCTION_POINTER_TYPE_P(functype));', 2.598833643460815e-06], ['this->error_function();', 2.598833643460815e-06], ['functype);', 2.598833643460815e-06], ['function_is_visible)', 2.598833643460815e-06], ['function_is_declaration)', 2.598833643460815e-06], ['DECL_ARTIFICIAL(resdecl)', 2.598833643460815e-06], ['DECL_IGNORED_P(resdecl)', 2.598833643460815e-06], ['DECL_CONTEXT(resdecl)', 2.598833643460815e-06], ['DECL_RESULT(decl)', 2.598833643460815e-06], ['function_is_inlinable)', 2.598833643460815e-06], ['DECL_UNINLINABLE(decl)', 2.598833643460815e-06], ['function_no_split_stack)', 2.598833643460815e-06], ['("no_split_stack");', 2.598833643460815e-06], ['DECL_ATTRIBUTES(decl)', 2.598833643460815e-06], ['tree_cons(attr,', 2.598833643460815e-06], ['function_does_not_return)', 2.598833643460815e-06], ['function_in_unique_section)', 2.598833643460815e-06], ['function_only_inline)', 2.598833643460815e-06], ['DECL_DECLARED_INLINE_P(decl)', 2.598833643460815e-06], ['runtime.setdeferretaddr(L1)', 2.598833643460815e-06], ['realfn()', 2.598833643460815e-06], ['L1:', 2.598833643460815e-06], ['realfn', 2.598833643460815e-06], ['basic-block', 2.598833643460815e-06], ['reordering', 2.598833643460815e-06], ['assumption.', 2.598833643460815e-06], ['Optimizing', 2.598833643460815e-06], ['epilogue.', 2.598833643460815e-06], ['small.', 2.598833643460815e-06], ['++pos)', 2.598833643460815e-06], ['(name[pos]', 2.598833643460815e-06], ['name[pos]', 2.598833643460815e-06], ['name.length())', 2.598833643460815e-06], ['cl_optimization', 2.598833643460815e-06], ['cur_opts;', 2.598833643460815e-06], ['cl_optimization_save(&cur_opts,', 2.598833643460815e-06], ['&global_options);', 2.598833643460815e-06], ['global_options.x_optimize_size', 2.598833643460815e-06], ['global_options.x_optimize_fast', 2.598833643460815e-06], ['global_options.x_optimize_debug', 2.598833643460815e-06], ['DECL_FUNCTION_SPECIFIC_OPTIMIZATION(decl)', 2.598833643460815e-06], ['build_optimization_node(&global_options);', 2.598833643460815e-06], ['cl_optimization_restore(&global_options,', 2.598833643460815e-06], ['&cur_opts);', 2.598833643460815e-06], ['Bfunction(decl);', 2.598833643460815e-06], ['C++:', 2.598833643460815e-06], ['finish:', 2.598833643460815e-06], ['UNDEFER;', 2.598833643460815e-06], ['CHECK_DEFER;', 2.598833643460815e-06], ['finish;', 2.598833643460815e-06], ['Gcc_backend::function_defer_statement(Bfunction*', 2.598833643460815e-06], ['undefer_tree', 2.598833643460815e-06], ['undefer->get_tree();', 2.598833643460815e-06], ['defer->get_tree();', 2.598833643460815e-06], ['(undefer_tree', 2.598833643460815e-06], ['this->label(function,', 2.598833643460815e-06], ['label_def', 2.598833643460815e-06], ['this->label_definition_statement(blabel);', 2.598833643460815e-06], ['append_to_statement_list(label_def->get_tree(),', 2.598833643460815e-06], ['jump_stmt', 2.598833643460815e-06], ['this->goto_statement(blabel,', 2.598833643460815e-06], ['jump_stmt->get_tree();', 2.598833643460815e-06], ['build2(COMPOUND_EXPR,', 2.598833643460815e-06], ['defer_tree,', 2.598833643460815e-06], ['jump);', 2.598833643460815e-06], ['build2(CATCH_EXPR,', 2.598833643460815e-06], ['try_catch', 2.598833643460815e-06], ['build2(TRY_CATCH_EXPR,', 2.598833643460815e-06], ['undefer_tree,', 2.598833643460815e-06], ['append_to_statement_list(try_catch,', 2.598833643460815e-06], ['PARAM_VARS', 2.598833643460815e-06], ['Gcc_backend::function_set_parameters(Bfunction*', 2.598833643460815e-06], ['param_vars)', 2.598833643460815e-06], ['&params;', 2.598833643460815e-06], ['param_vars.begin();', 2.598833643460815e-06], ['param_vars.end();', 2.598833643460815e-06], ['gcc_assert(*pp', 2.598833643460815e-06], ['DECL_ARGUMENTS(func_tree)', 2.598833643460815e-06], ['CODE_BLOCK.', 2.598833643460815e-06], ['Gcc_backend::function_set_body(Bfunction*', 2.598833643460815e-06], ['code_stmt->get_tree();', 2.598833643460815e-06], ['DECL_SAVED_TREE(func_tree)', 2.598833643460815e-06], ['Gcc_backend::lookup_builtin(const', 2.598833643460815e-06], ['(this->builtin_functions_.count(name)', 2.598833643460815e-06], ['this->builtin_functions_[name];', 2.598833643460815e-06], ['TYPE_DECLS,', 2.598833643460815e-06], ['CONSTANT_DECLS,', 2.598833643460815e-06], ['FUNCTION_DECLS,', 2.598833643460815e-06], ['VARIABLE_DECLS', 2.598833643460815e-06], ['globally,', 2.598833643460815e-06], ['Gcc_backend::write_global_definitions(', 2.598833643460815e-06], ['constant_decls,', 2.598833643460815e-06], ['function_decls,', 2.598833643460815e-06], ['variable_decls)', 2.598833643460815e-06], ['type_decls.size()', 2.598833643460815e-06], ['constant_decls.size()', 2.598833643460815e-06], ['function_decls.size()', 2.598833643460815e-06], ['variable_decls.size();', 2.598833643460815e-06], ['defs', 2.598833643460815e-06], ['tree[count_definitions];', 2.598833643460815e-06], ['non-erroneous', 2.598833643460815e-06], ['Gimple', 2.598833643460815e-06], ['variable_decls.begin();', 2.598833643460815e-06], ['variable_decls.end();', 2.598833643460815e-06], ['(*p)->get_decl();', 2.598833643460815e-06], ['(std::vector<Btype*>::const_iterator', 2.598833643460815e-06], ['type_decls.begin();', 2.598833643460815e-06], ['type_decls.end();', 2.598833643460815e-06], ['IS_TYPE_OR_DECL_P(type_tree))', 2.598833643460815e-06], ['TYPE_NAME(type_tree);', 2.598833643460815e-06], ['gcc_assert(defs[i]', 2.598833643460815e-06], ['constant_decls.begin();', 2.598833643460815e-06], ['constant_decls.end();', 2.598833643460815e-06], ['((*p)->get_tree()', 2.598833643460815e-06], ['(std::vector<Bfunction*>::const_iterator', 2.598833643460815e-06], ['function_decls.begin();', 2.598833643460815e-06], ['function_decls.end();', 2.598833643460815e-06], ['allocate_struct_function(decl,', 2.598833643460815e-06], ['cgraph_node::finalize_function(decl,', 2.598833643460815e-06], ['wrapup_global_declarations(defs,', 2.598833643460815e-06], ['defs;', 2.598833643460815e-06], ['Gcc_backend::write_export_data(const', 2.598833643460815e-06], ['go_write_export_data(bytes,', 2.598833643460815e-06], ['BCODE', 2.598833643460815e-06], ['LIBNAME', 2.598833643460815e-06], ['NORETURN_P', 2.598833643460815e-06], ['noreturn', 2.598833643460815e-06], ['Gcc_backend::define_builtin(built_in_function', 2.598833643460815e-06], ['noreturn_p)', 2.598833643460815e-06], ['add_builtin_function(name,', 2.598833643460815e-06], ['set_builtin_decl(bcode,', 2.598833643460815e-06], ['this->builtin_functions_[name]', 2.598833643460815e-06], ['(libname', 2.598833643460815e-06], ['add_builtin_function(libname,', 2.598833643460815e-06], ['this->builtin_functions_[libname]', 2.598833643460815e-06], ['go_get_backend()', 2.598833643460815e-06], ['go-optimize.cc', 2.598833643460815e-06], ['Go_optimize*', 2.598833643460815e-06], ['Go_optimize::Go_optimize(const', 2.598833643460815e-06], ['enabled)', 2.598833643460815e-06], ['next_(optimizations),', 2.598833643460815e-06], ['is_enabled_(enabled)', 2.598833643460815e-06], ['Go_optimize::enable_by_name(const', 2.598833643460815e-06], ['(Go_optimize*', 2.598833643460815e-06], ['Enable/disable', 2.598833643460815e-06], ['go_enable_optimize(const', 2.598833643460815e-06], ['Go_optimize::enable_by_name(name,', 2.598833643460815e-06], ['(bool)value)', 2.598833643460815e-06], ['statements.cc', 2.598833643460815e-06], ['Statement.', 2.598833643460815e-06], ['Statement::Statement(Statement_classification', 2.598833643460815e-06], ['Statement::~Statement()', 2.598833643460815e-06], ['subclasses.', 2.598833643460815e-06], ['Statement::traverse(Block*', 2.598833643460815e-06], ['Traverse::traverse_statements)', 2.598833643460815e-06], ['traverse->statement(block,', 2.598833643460815e-06], ['here--a', 2.598833643460815e-06], ['Statement::traverse_contents(Traverse*', 2.598833643460815e-06], ['Statement::traverse_assignments(Traverse_assignments*', 2.598833643460815e-06], ['this->do_traverse_assignments(tassign);', 2.598833643460815e-06], ['Statement::traverse_expression(Traverse*', 2.598833643460815e-06], ['Expression::traverse(expr,', 2.598833643460815e-06], ['Statement::traverse_expression_list(Traverse*', 2.598833643460815e-06], ['expr_list)', 2.598833643460815e-06], ['(expr_list', 2.598833643460815e-06], ['expr_list->traverse(traverse);', 2.598833643460815e-06], ['Statement::traverse_type(Traverse*', 2.598833643460815e-06], ['Statement::determine_types()', 2.598833643460815e-06], ['this->do_determine_types();', 2.598833643460815e-06], ['Statement::import_statement(Import_function_body*', 2.598833643460815e-06], ['(ifb->match_c_string("{"))', 2.598833643460815e-06], ["ifb->body().find('\\n',", 2.598833643460815e-06], ['ifb->off());', 2.598833643460815e-06], ['go_error_at(ifb->location(),', 2.598833643460815e-06], ['ifb->set_off(nl', 2.598833643460815e-06], ['ifb->increment_indent();', 2.598833643460815e-06], ['Block(ifb->block(),', 2.598833643460815e-06], ['Block::import_block(block,', 2.598833643460815e-06], ['ifb->decrement_indent();', 2.598833643460815e-06], ['(ifb->match_c_string("return"))', 2.598833643460815e-06], ['ifb->advance(6);', 2.598833643460815e-06], ['Statement::make_return_statement(NULL,', 2.598833643460815e-06], ['ifb->require_c_string("', 2.598833643460815e-06], ['Statement::thunk_statement()', 2.598833643460815e-06], ['STATEMENT_GO>();', 2.598833643460815e-06], ['STATEMENT_DEFER>();', 2.598833643460815e-06], ['Statement::get_backend(Translate_context*', 2.598833643460815e-06], ['Statement::dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['this->do_dump_statement(ast_dump_context);', 2.598833643460815e-06], ['Statement::set_is_error()', 2.598833643460815e-06], ['STATEMENT_ERROR;', 2.598833643460815e-06], ['Statement::report_error(const', 2.598833643460815e-06], ['Error_statement', 2.598833643460815e-06], ['Error_statement(Location', 2.598833643460815e-06], ['Statement(STATEMENT_ERROR,', 2.598833643460815e-06], ['tack', 2.598833643460815e-06], ['dsuffix(Location', 2.598833643460815e-06], ['Linemap::location_to_string(location);', 2.598833643460815e-06], ['(lstr', 2.598833643460815e-06], ['rval("', 2.598833643460815e-06], ['Error_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['"Error', 2.598833643460815e-06], ['Statement::make_error_statement(Location', 2.598833643460815e-06], ['Error_statement(location);', 2.598833643460815e-06], ['Variable_declaration_statement.', 2.598833643460815e-06], ['Variable_declaration_statement::Variable_declaration_statement(', 2.598833643460815e-06], ['Statement(STATEMENT_VARIABLE_DECLARATION,', 2.598833643460815e-06], ['var->var_value()->location()),', 2.598833643460815e-06], ['var_(var)', 2.598833643460815e-06], ['Variable_declaration_statement::do_traverse(Traverse*)', 2.598833643460815e-06], ['Variable_declaration_statement::do_traverse_assignments(', 2.598833643460815e-06], ['Traverse_assignments*', 2.598833643460815e-06], ['tassign->initialize_variable(this->var_);', 2.598833643460815e-06], ['Variable_declaration_statement::do_lower(Gogo*', 2.598833643460815e-06], ['this->var_->var_value()->lower_init_expression(gogo,', 2.598833643460815e-06], ['Variable_declaration_statement::do_flatten(Gogo*', 2.598833643460815e-06], ['(var->type()->is_error_type()', 2.598833643460815e-06], ['var->init()->is_error_expression()))', 2.598833643460815e-06], ['this->var_->var_value()->flatten_init_expression(gogo,', 2.598833643460815e-06], ['Variable_declaration_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->var_->get_backend_variable(context->gogo(),', 2.598833643460815e-06], ['var->get_init(context->gogo(),', 2.598833643460815e-06], ['go_assert(binit', 2.598833643460815e-06], ['newfn', 2.598833643460815e-06], ['context->gogo()->lookup_global("new");', 2.598833643460815e-06], ['go_assert(newfn', 2.598833643460815e-06], ['newfn->is_function_declaration());', 2.598833643460815e-06], ['Expression::make_func_reference(newfn,', 2.598833643460815e-06], ['params->push_back(Expression::make_type(var->type(),', 2.598833643460815e-06], ['bref);', 2.598833643460815e-06], ['stats;', 2.598833643460815e-06], ['stats.reserve(3);', 2.598833643460815e-06], ['stats.push_back(btemp);', 2.598833643460815e-06], ['stats.push_back(set);', 2.598833643460815e-06], ['stats.push_back(sinit);', 2.598833643460815e-06], ['context->backend()->statement_list(stats);', 2.598833643460815e-06], ['Variable_declaration_statement::do_dump_statement(', 2.598833643460815e-06], ['go_assert(var_->is_variable());', 2.598833643460815e-06], ['this->var_->name()', 2.598833643460815e-06], ['(var->has_type())', 2.598833643460815e-06], ['ast_dump_context->dump_type(var->type());', 2.598833643460815e-06], ['"=', 2.598833643460815e-06], ['ast_dump_context->dump_expression(var->init());', 2.598833643460815e-06], ['Statement::make_variable_declaration(Named_object*', 2.598833643460815e-06], ['Variable_declaration_statement(var);', 2.598833643460815e-06], ['Temporary_statement::type()', 2.598833643460815e-06], ['Temporary_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['Temporary_statement::do_traverse_assignments(Traverse_assignments*', 2.598833643460815e-06], ['tassign->value(&this->init_,', 2.598833643460815e-06], ['Temporary_statement::do_determine_types()', 2.598833643460815e-06], ['this->type_->is_abstract())', 2.598833643460815e-06], ['this->type_->make_non_abstract_type();', 2.598833643460815e-06], ['go_assert(!this->type_->is_abstract());', 2.598833643460815e-06], ['Temporary_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!Type::are_assignable(this->type_,', 2.598833643460815e-06], ['statement:', 2.598833643460815e-06], ['Temporary_statement::do_flatten(Gogo*,', 2.598833643460815e-06], ['this->init_->is_error_expression()))', 2.598833643460815e-06], ['Temporary_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(this->bvariable_', 2.598833643460815e-06], ['this->type()->get_backend(context->gogo());', 2.598833643460815e-06], ['binit;', 2.598833643460815e-06], ['init->get_backend(context);', 2.598833643460815e-06], ['context->backend()->convert_expression(btype,', 2.598833643460815e-06], ['this->bvariable_', 2.598833643460815e-06], ['context->backend()->temporary_variable(bfunction,', 2.598833643460815e-06], ['this->is_address_taken_,', 2.598833643460815e-06], ['&statement);', 2.598833643460815e-06], ['Temporary_statement::get_backend_variable(Translate_context*', 2.598833643460815e-06], ['(this->bvariable_', 2.598833643460815e-06], ['context->backend()->error_variable();', 2.598833643460815e-06], ['this->bvariable_;', 2.598833643460815e-06], ['represemtation', 2.598833643460815e-06], ['Temporary_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_temp_variable_name(this);', 2.598833643460815e-06], ['BLOCK.', 2.598833643460815e-06], ['Statement::make_temporary(Type*', 2.598833643460815e-06], ['Temporary_statement(type,', 2.598833643460815e-06], ['Move_subexpressions(int', 2.598833643460815e-06], ['skip_(skip),', 2.598833643460815e-06], ['moving.', 2.598833643460815e-06], ['skip_;', 2.598833643460815e-06], ['Move_subexpressions::expression(Expression**', 2.598833643460815e-06], ['(this->skip_', 2.598833643460815e-06], ['--this->skip_;', 2.598833643460815e-06], ['((*pexpr)->temporary_reference_expression()', 2.598833643460815e-06], ['!(*pexpr)->is_nil_expression()', 2.598833643460815e-06], ['!(*pexpr)->is_constant())', 2.598833643460815e-06], ['subexpressions.', 2.598833643460815e-06], ['Move_ordered_evals(Block*', 2.598833643460815e-06], ['Move_ordered_evals::expression(Expression**', 2.598833643460815e-06], ['((*pexpr)->must_eval_subexpressions_in_order(&i))', 2.598833643460815e-06], ['ms(i,', 2.598833643460815e-06], ['this->block_);', 2.598833643460815e-06], ['((*pexpr)->traverse_subexpressions(&ms)', 2.598833643460815e-06], ['((*pexpr)->must_eval_in_order())', 2.598833643460815e-06], ['call->is_multi_value_arg())', 2.598833643460815e-06], ['multi-valued', 2.598833643460815e-06], ['Assignment_statement.', 2.598833643460815e-06], ['Assignment_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['Assignment_statement::do_traverse_assignments(Traverse_assignments*', 2.598833643460815e-06], ['tassign->assignment(&this->lhs_,', 2.598833643460815e-06], ['Assignment_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['mie', 2.598833643460815e-06], ['this->lhs_->map_index_expression();', 2.598833643460815e-06], ['(mie', 2.598833643460815e-06], ['map->type()->map_type();', 2.598833643460815e-06], ['mie->traverse_subexpressions(&moe);', 2.598833643460815e-06], ['mie->index(),', 2.598833643460815e-06], ['Statement::make_temporary(mt->val_type(),', 2.598833643460815e-06], ['*mapassign(TYPE,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPASSIGN,', 2.598833643460815e-06], ['ptrval_type', 2.598833643460815e-06], ['Type::make_pointer_type(mt->val_type());', 2.598833643460815e-06], ['Expression::make_cast(ptrval_type,', 2.598833643460815e-06], ['Expression::make_dereference(call,', 2.598833643460815e-06], ['b->add_statement(Statement::make_assignment(indir,', 2.598833643460815e-06], ['s[:n]', 2.598833643460815e-06], ['this->rhs_->array_index_expression();', 2.598833643460815e-06], ['Expression::is_same_variable(this->lhs_,', 2.598833643460815e-06], ['aie->array()))', 2.598833643460815e-06], ['(aie->start()->numeric_constant_value(&nc)', 2.598833643460815e-06], ['nc.to_unsigned_long(&ival)', 2.598833643460815e-06], ['ival', 2.598833643460815e-06], ['this->omit_write_barrier_', 2.598833643460815e-06], ['Assignment_statement::do_determine_types()', 2.598833643460815e-06], ['this->lhs_->determine_type_no_context();', 2.598833643460815e-06], ['(rhs_context_type->is_sink_type())', 2.598833643460815e-06], ['context(rhs_context_type,', 2.598833643460815e-06], ['this->rhs_->determine_type(&context);', 2.598833643460815e-06], ['Assignment_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['addressable,', 2.598833643460815e-06], ['(!this->lhs_->is_addressable()', 2.598833643460815e-06], ['this->lhs_->map_index_expression()', 2.598833643460815e-06], ['!this->lhs_->is_sink_expression())', 2.598833643460815e-06], ['(!this->lhs_->type()->is_error())', 2.598833643460815e-06], ['assignment"));', 2.598833643460815e-06], ['lhs_type', 2.598833643460815e-06], ['this->rhs_->type();', 2.598833643460815e-06], ['(lhs_type->is_sink_type()', 2.598833643460815e-06], ['(!Type::are_assignable(lhs_type,', 2.598833643460815e-06], ['rhs_type->is_error())', 2.598833643460815e-06], ['Assignment_statement::do_export_statement(Export_function_body*', 2.598833643460815e-06], ['this->lhs_->export_expression(efb);', 2.598833643460815e-06], ['this->rhs_->export_expression(efb);', 2.598833643460815e-06], ['Assignment_statement::do_flatten(Gogo*,', 2.598833643460815e-06], ['(this->lhs_->is_error_expression()', 2.598833643460815e-06], ['this->lhs_->type()->is_error_type()', 2.598833643460815e-06], ['this->rhs_->is_error_expression()', 2.598833643460815e-06], ['this->rhs_->type()->is_error_type())', 2.598833643460815e-06], ['(!this->lhs_->is_sink_expression()', 2.598833643460815e-06], ['!Type::are_identical(this->lhs_->type(),', 2.598833643460815e-06], ['this->rhs_->type(),', 2.598833643460815e-06], ['this->rhs_->type()->interface_type()', 2.598833643460815e-06], ['!this->rhs_->is_variable())', 2.598833643460815e-06], ['this->rhs_', 2.598833643460815e-06], ['Assignment_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(this->lhs_->is_sink_expression())', 2.598833643460815e-06], ['this->rhs_->get_backend(context);', 2.598833643460815e-06], ['this->lhs_->get_backend(context);', 2.598833643460815e-06], ['this->lhs_->type(),', 2.598833643460815e-06], ['conv->get_backend(context);', 2.598833643460815e-06], ['Assignment_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Statement::make_assignment(Expression*', 2.598833643460815e-06], ['Assignment_statement(lhs,', 2.598833643460815e-06], ['Assignment_operation_statement', 2.598833643460815e-06], ['Assignment_operation_statement(Operator', 2.598833643460815e-06], ['Statement(STATEMENT_ASSIGNMENT_OPERATION,', 2.598833643460815e-06], ['op_(op),', 2.598833643460815e-06], ['(OPERATOR_PLUSEQ,', 2.598833643460815e-06], ['etc.).', 2.598833643460815e-06], ['op_;', 2.598833643460815e-06], ['Assignment_operation_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['Assignment_operation_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['this->lhs_->traverse_subexpressions(&moe);', 2.598833643460815e-06], ['lval', 2.598833643460815e-06], ['this->lhs_->copy();', 2.598833643460815e-06], ['binop', 2.598833643460815e-06], ['lval,', 2.598833643460815e-06], ['Statement::make_assignment(this->lhs_,', 2.598833643460815e-06], ['binop,', 2.598833643460815e-06], ['(b->statements()->empty())', 2.598833643460815e-06], ['Assignment_operation_statement::do_dump_statement(', 2.598833643460815e-06], ['Statement::make_assignment_operation(Operator', 2.598833643460815e-06], ['Assignment_operation_statement(op,', 2.598833643460815e-06], ['Tuple_assignment_statement', 2.598833643460815e-06], ['Tuple_assignment_statement(Expression_list*', 2.598833643460815e-06], ['Statement(STATEMENT_TUPLE_ASSIGNMENT,', 2.598833643460815e-06], ['lvalues.', 2.598833643460815e-06], ['rvalues.', 2.598833643460815e-06], ['Tuple_assignment_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['(this->traverse_expression_list(traverse,', 2.598833643460815e-06], ['this->lhs_)', 2.598833643460815e-06], ['this->traverse_expression_list(traverse,', 2.598833643460815e-06], ['this->rhs_);', 2.598833643460815e-06], ['Tuple_assignment_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['++plhs)', 2.598833643460815e-06], ['Expression::traverse(&*plhs,', 2.598833643460815e-06], ['&moe);', 2.598833643460815e-06], ['std::vector<Temporary_statement*>', 2.598833643460815e-06], ['temps;', 2.598833643460815e-06], ['temps.reserve(this->lhs_->size());', 2.598833643460815e-06], ['((*prhs)->type()->is_nil_type())', 2.598833643460815e-06], ['b->add_statement(Statement::make_statement(*prhs,', 2.598833643460815e-06], ['Statement::make_temporary((*plhs)->type(),', 2.598833643460815e-06], ['*prhs,', 2.598833643460815e-06], ['b->add_statement(temp);', 2.598833643460815e-06], ['temps.push_back(temp);', 2.598833643460815e-06], ['std::vector<Temporary_statement*>::const_iterator', 2.598833643460815e-06], ['ptemp', 2.598833643460815e-06], ['temps.begin();', 2.598833643460815e-06], ['Expression::make_temporary_reference(*ptemp,', 2.598833643460815e-06], ['b->add_statement(Statement::make_assignment(*plhs,', 2.598833643460815e-06], ['++ptemp;', 2.598833643460815e-06], ['go_assert(ptemp', 2.598833643460815e-06], ['temps.end()', 2.598833643460815e-06], ['Tuple_assignment_statement::do_dump_statement(', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->lhs_);', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->rhs_);', 2.598833643460815e-06], ['Statement::make_tuple_assignment(Expression_list*', 2.598833643460815e-06], ['Tuple_assignment_statement(lhs,', 2.598833643460815e-06], ['m[k]', 2.598833643460815e-06], ['Tuple_map_assignment_statement', 2.598833643460815e-06], ['Tuple_map_assignment_statement(Expression*', 2.598833643460815e-06], ['Statement(STATEMENT_TUPLE_MAP_ASSIGNMENT,', 2.598833643460815e-06], ['present_(present),', 2.598833643460815e-06], ['map_index_(map_index)', 2.598833643460815e-06], ['present_;', 2.598833643460815e-06], ['map_index_;', 2.598833643460815e-06], ['Tuple_map_assignment_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->present_)', 2.598833643460815e-06], ['&this->map_index_);', 2.598833643460815e-06], ['Tuple_map_assignment_statement::do_lower(Gogo*', 2.598833643460815e-06], ['this->map_index_->map_index_expression();', 2.598833643460815e-06], ['side"));', 2.598833643460815e-06], ['map_type', 2.598833643460815e-06], ['map_index->get_map_type();', 2.598833643460815e-06], ['(map_type', 2.598833643460815e-06], ['this->present_->traverse_subexpressions(&moe);', 2.598833643460815e-06], ['Statement::make_temporary(map_type->key_type(),', 2.598833643460815e-06], ['map_index->index(),', 2.598833643460815e-06], ['*VAL_TYPE', 2.598833643460815e-06], ['Type::make_pointer_type(map_type->val_type());', 2.598833643460815e-06], ['Statement::make_temporary(val_ptr_type,', 2.598833643460815e-06], ['b->add_statement(val_ptr_temp);', 2.598833643460815e-06], ['Statement::make_temporary((this->present_->type()->is_sink_type())', 2.598833643460815e-06], ['this->present_->type(),', 2.598833643460815e-06], ['b->add_statement(present_temp);', 2.598833643460815e-06], ['val_ptr_temp,', 2.598833643460815e-06], ['mapaccess2(DESCRIPTOR,', 2.598833643460815e-06], ['map_index->map();', 2.598833643460815e-06], ['map_type->fat_zero_value(gogo);', 2.598833643460815e-06], ['(a4', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPACCESS2,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPACCESS2_FAT,', 2.598833643460815e-06], ['a4);', 2.598833643460815e-06], ['Expression::make_unsafe_cast(val_ptr_type,', 2.598833643460815e-06], ['*val__ptr_temp', 2.598833643460815e-06], ['ind,', 2.598833643460815e-06], ['Statement::make_assignment(this->present_,', 2.598833643460815e-06], ['Tuple_map_assignment_statement::do_dump_statement(', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->present_);', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->map_index_);', 2.598833643460815e-06], ['Statement::make_tuple_map_assignment(Expression*', 2.598833643460815e-06], ['Tuple_map_assignment_statement(val,', 2.598833643460815e-06], ['Tuple_receive_assignment_statement', 2.598833643460815e-06], ['Tuple_receive_assignment_statement(Expression*', 2.598833643460815e-06], ['Statement(STATEMENT_TUPLE_RECEIVE_ASSIGNMENT,', 2.598833643460815e-06], ['closed_(closed),', 2.598833643460815e-06], ['channel_(channel)', 2.598833643460815e-06], ['closed.', 2.598833643460815e-06], ['closed_;', 2.598833643460815e-06], ['channel_;', 2.598833643460815e-06], ['Tuple_receive_assignment_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->closed_)', 2.598833643460815e-06], ['&this->channel_);', 2.598833643460815e-06], ['Tuple_receive_assignment_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['(!channel_type->may_receive())', 2.598833643460815e-06], ['this->closed_->traverse_subexpressions(&moe);', 2.598833643460815e-06], ['Statement::make_temporary(channel_type->element_type(),', 2.598833643460815e-06], ['Statement::make_temporary((this->closed_->type()->is_sink_type())', 2.598833643460815e-06], ['this->closed_->type(),', 2.598833643460815e-06], ['b->add_statement(closed_temp);', 2.598833643460815e-06], ['chanrecv2(channel,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CHANRECV2,', 2.598833643460815e-06], ['p2);', 2.598833643460815e-06], ['Statement::make_assignment(this->closed_,', 2.598833643460815e-06], ['Tuple_receive_assignment_statement::do_dump_statement(', 2.598833643460815e-06], ['nonblocking', 2.598833643460815e-06], ['Statement::make_tuple_receive_assignment(Expression*', 2.598833643460815e-06], ['Tuple_receive_assignment_statement(val,', 2.598833643460815e-06], ['i.(type).', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement(Expression*', 2.598833643460815e-06], ['Statement(STATEMENT_TUPLE_TYPE_GUARD_ASSIGNMENT,', 2.598833643460815e-06], ['ok_(ok),', 2.598833643460815e-06], ['lower_to_type(Runtime::Function);', 2.598833643460815e-06], ['lower_to_object_type(Block*,', 2.598833643460815e-06], ['Runtime::Function);', 2.598833643460815e-06], ['recieves', 2.598833643460815e-06], ['ok_;', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->ok_)', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['this->ok_->traverse_subexpressions(&moe);', 2.598833643460815e-06], ['expr_is_empty', 2.598833643460815e-06], ['expr_type->interface_type()->is_empty();', 2.598833643460815e-06], ['(this->type_->interface_type()->is_empty())', 2.598833643460815e-06], ['Runtime::make_call((expr_is_empty', 2.598833643460815e-06], ['Runtime::IFACEE2E2', 2.598833643460815e-06], ['Runtime::IFACEI2E2),', 2.598833643460815e-06], ['Runtime::IFACEE2I2', 2.598833643460815e-06], ['Runtime::IFACEI2I2);', 2.598833643460815e-06], ['(this->type_->points_to()', 2.598833643460815e-06], ['Runtime::IFACEE2T2P', 2.598833643460815e-06], ['Runtime::IFACEI2T2P);', 2.598833643460815e-06], ['this->lower_to_object_type(b,', 2.598833643460815e-06], ['(expr_is_empty', 2.598833643460815e-06], ['Runtime::IFACEE2T2', 2.598833643460815e-06], ['Runtime::IFACEI2T2));', 2.598833643460815e-06], ['Expression::make_unsafe_cast(this->type_,', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::lower_to_type(Runtime::Function', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::lower_to_object_type(', 2.598833643460815e-06], ['Statement::make_temporary(this->type_,', 2.598833643460815e-06], ['CODE(type_descriptor,', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement::do_dump_statement(', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->ok_);', 2.598833643460815e-06], ['Statement::make_tuple_type_guard_assignment(Expression*', 2.598833643460815e-06], ['Tuple_type_guard_assignment_statement(val,', 2.598833643460815e-06], ['Expression_statement.', 2.598833643460815e-06], ['Expression_statement::Expression_statement(Expression*', 2.598833643460815e-06], ['Statement(STATEMENT_EXPRESSION,', 2.598833643460815e-06], ['is_ignored_(is_ignored)', 2.598833643460815e-06], ['Expression_statement::do_determine_types()', 2.598833643460815e-06], ['Expression_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->is_ignored_)', 2.598833643460815e-06], ['this->expr_->discarding_value();', 2.598833643460815e-06], ['Expression_statement::do_may_fall_through()', 2.598833643460815e-06], ['this->expr_->call_expression();', 2.598833643460815e-06], ['call->fn();', 2.598833643460815e-06], ['fn->unknown_expression();', 2.598833643460815e-06], ['ue->named_object();', 2.598833643460815e-06], ['fntype->is_builtin()', 2.598833643460815e-06], ['Expression_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Expression_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Statement::make_statement(Expression*', 2.598833643460815e-06], ['Expression_statement(expr,', 2.598833643460815e-06], ['is_ignored);', 2.598833643460815e-06], ['Block_statement::do_export_statement(Export_function_body*', 2.598833643460815e-06], ['indented', 2.598833643460815e-06], ['"{', 2.598833643460815e-06], ['Linemap::location_to_line(this->block_->start_location()));', 2.598833643460815e-06], ['this->block_->export_block(efb);', 2.598833643460815e-06], ['indentation', 2.598833643460815e-06], ['subtract', 2.598833643460815e-06], ['efb->write_c_string("}");', 2.598833643460815e-06], ['has.', 2.598833643460815e-06], ['Block_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->block_->get_backend(context);', 2.598833643460815e-06], ['Block_statement::do_dump_statement(Ast_dump_context*)', 2.598833643460815e-06], ['Statement::make_block_statement(Block*', 2.598833643460815e-06], ['Block_statement(block,', 2.598833643460815e-06], ['Inc_dec_statement', 2.598833643460815e-06], ['Inc_dec_statement(bool', 2.598833643460815e-06], ['is_inc,', 2.598833643460815e-06], ['Statement(STATEMENT_INCDEC,', 2.598833643460815e-06], ['is_inc_(is_inc)', 2.598833643460815e-06], ['l-value', 2.598833643460815e-06], ['is_inc_;', 2.598833643460815e-06], ['-=.', 2.598833643460815e-06], ['Inc_dec_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['(!this->expr_->type()->is_numeric_type())', 2.598833643460815e-06], ['this->report_error("increment', 2.598833643460815e-06], ['non-numeric', 2.598833643460815e-06], ['oexpr', 2.598833643460815e-06], ['this->is_inc_', 2.598833643460815e-06], ['OPERATOR_PLUSEQ', 2.598833643460815e-06], ['oexpr,', 2.598833643460815e-06], ['inc/dec', 2.598833643460815e-06], ['Inc_dec_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['(is_inc_?', 2.598833643460815e-06], ['"++":', 2.598833643460815e-06], ['"--")', 2.598833643460815e-06], ['Statement::make_inc_statement(Expression*', 2.598833643460815e-06], ['Inc_dec_statement(true,', 2.598833643460815e-06], ['Statement::make_dec_statement(Expression*', 2.598833643460815e-06], ['Inc_dec_statement(false,', 2.598833643460815e-06], ['Thunk_statement.', 2.598833643460815e-06], ['Thunk_statement::Thunk_statement(Statement_classification', 2.598833643460815e-06], ['Statement(classification,', 2.598833643460815e-06], ['call_(call),', 2.598833643460815e-06], ['struct_type_(NULL)', 2.598833643460815e-06], ['Thunk_statement::is_simple(Function_type*', 2.598833643460815e-06], ['fntype->is_varargs())', 2.598833643460815e-06], ['parameters->begin()->type()->points_to()', 2.598833643460815e-06], ['approach.', 2.598833643460815e-06], ['!results->begin()->type()->is_basic_type()', 2.598833643460815e-06], ['results->begin()->type()->points_to()', 2.598833643460815e-06], ['(fn->func_expression()->closure()', 2.598833643460815e-06], ['Thunk_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->call_);', 2.598833643460815e-06], ['traverse_assignment', 2.598833643460815e-06], ['Thunk_statement::do_traverse_assignments(Traverse_assignments*', 2.598833643460815e-06], ['fn2', 2.598833643460815e-06], ['tassign->value(&fn2,', 2.598833643460815e-06], ['Thunk_statement::do_determine_types()', 2.598833643460815e-06], ['!this->is_simple(fntype))', 2.598833643460815e-06], ['this->struct_type_', 2.598833643460815e-06], ['this->build_struct(fntype);', 2.598833643460815e-06], ['Thunk_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->call_->discarding_value())', 2.598833643460815e-06], ['(!this->call_->is_error_expression())', 2.598833643460815e-06], ['this->report_error("expected', 2.598833643460815e-06], ['Simplify_thunk_traverse(Gogo*', 2.598833643460815e-06], ['traverse_blocks),', 2.598833643460815e-06], ['Simplify_thunk_traverse::function(Named_object*', 2.598833643460815e-06], ['Simplify_thunk_traverse::block(Block*', 2.598833643460815e-06], ['(b->statements()->size()', 2.598833643460815e-06], ['b->statements()->back()->thunk_statement();', 2.598833643460815e-06], ['(stat->simplify_statement(this->gogo_,', 2.598833643460815e-06], ['b))', 2.598833643460815e-06], ['Gogo::simplify_thunk_statements()', 2.598833643460815e-06], ['thunk_traverse(this);', 2.598833643460815e-06], ['this->traverse(&thunk_traverse);', 2.598833643460815e-06], ['Thunk_statement::is_constant_function()', 2.598833643460815e-06], ['fn->func_expression()->closure()', 2.598833643460815e-06], ['(fn->interface_field_reference_expression()', 2.598833643460815e-06], ['Thunk_statement::simplify_statement(Gogo*', 2.598833643460815e-06], ['function->func_value()->defer_stack(this->location());', 2.598833643460815e-06], ['(this->is_simple(fntype))', 2.598833643460815e-06], ['is_constant_function', 2.598833643460815e-06], ['this->is_constant_function();', 2.598833643460815e-06], ['block->insert_statement_before(block->statements()->size()', 2.598833643460815e-06], ['fn_temp);', 2.598833643460815e-06], ['this->build_thunk(gogo,', 2.598833643460815e-06], ['thunk_name);', 2.598833643460815e-06], ['vals->push_back(fn);', 2.598833643460815e-06], ['vals->push_back(interface_method->expr());', 2.598833643460815e-06], ['(ce->args()', 2.598833643460815e-06], ['ce->args()->begin();', 2.598833643460815e-06], ['ce->args()->end();', 2.598833643460815e-06], ['vals->push_back(*p);', 2.598833643460815e-06], ['Expression::make_struct_composite_literal(this->struct_type_,', 2.598833643460815e-06], ['Expression::make_heap_expression(constructor,', 2.598833643460815e-06], ['((Node::make_node(this)->encoding()', 2.598833643460815e-06], ['constructor->heap_expression()->set_allocate_on_stack();', 2.598833643460815e-06], ['`go', 2.598833643460815e-06], ['nil`', 2.598833643460815e-06], ['goroutine.', 2.598833643460815e-06], ['constructor;', 2.598833643460815e-06], ['isnil', 2.598833643460815e-06], ['gogo->runtime_error(RUNTIME_ERROR_GO_NIL,', 2.598833643460815e-06], ['Expression::make_conditional(isnil,', 2.598833643460815e-06], ['Expression::make_nil(location),', 2.598833643460815e-06], ['named_thunk', 2.598833643460815e-06], ['gogo->lookup(thunk_name,', 2.598833643460815e-06], ['go_assert(named_thunk', 2.598833643460815e-06], ['named_thunk->is_function());', 2.598833643460815e-06], ['Expression::make_func_reference(named_thunk,', 2.598833643460815e-06], ['params->push_back(param);', 2.598833643460815e-06], ['Statement::make_go_statement(call,', 2.598833643460815e-06], ['Statement::make_defer_statement(call,', 2.598833643460815e-06], ['go_assert(block->statements()->size()', 2.598833643460815e-06], ['go_assert(block->statements()->back()', 2.598833643460815e-06], ['block->replace_statement(block->statements()->size()', 2.598833643460815e-06], ['gogo->check_types_in_block(block);', 2.598833643460815e-06], ['Thunk_statement::thunk_field_param(int', 2.598833643460815e-06], ['buflen)', 2.598833643460815e-06], ['"a%d",', 2.598833643460815e-06], ['Thunk_statement::build_struct(Function_type*', 2.598833643460815e-06], ['(!this->is_constant_function())', 2.598833643460815e-06], ['tid("object",', 2.598833643460815e-06], ['interface_method->expr()->type(),', 2.598833643460815e-06], ['fields->push_back(Struct_field(tid));', 2.598833643460815e-06], ['(ce->is_recover_call())', 2.598833643460815e-06], ['fields->push_back(Struct_field(Typed_identifier("can_recover",', 2.598833643460815e-06], ['this->thunk_field_param(i,', 2.598833643460815e-06], ['fields->push_back(Struct_field(Typed_identifier(buf,', 2.598833643460815e-06], ['*st', 2.598833643460815e-06], ['new,', 2.598833643460815e-06], ['albeit', 2.598833643460815e-06], ['Thunk_statement::build_thunk(Gogo*', 2.598833643460815e-06], ['thunk_name)', 2.598833643460815e-06], ['fn->named_object();', 2.598833643460815e-06], ['(!no->is_function())', 2.598833643460815e-06], ['no->func_value()->calls_recover();', 2.598833643460815e-06], ['build.', 2.598833643460815e-06], ['parameter_name', 2.598833643460815e-06], ['"__go_thunk_parameter";', 2.598833643460815e-06], ['thunk_parameters', 2.598833643460815e-06], ['pointer_to_struct_type', 2.598833643460815e-06], ['Type::make_pointer_type(this->struct_type_);', 2.598833643460815e-06], ['thunk_parameters->push_back(Typed_identifier(parameter_name,', 2.598833643460815e-06], ['pointer_to_struct_type,', 2.598833643460815e-06], ['deferring', 2.598833643460815e-06], ['thunk_results->push_back(Typed_identifier("",', 2.598833643460815e-06], ['thunk_type', 2.598833643460815e-06], ['thunk_parameters,', 2.598833643460815e-06], ['thunk_results,', 2.598833643460815e-06], ['thunk_type,', 2.598833643460815e-06], ['__go_set_defer_retaddr.', 2.598833643460815e-06], ['gogo->add_label_reference("retaddr",', 2.598833643460815e-06], ['Expression::make_label_addr(retaddr_label,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::SETDEFERRETADDR,', 2.598833643460815e-06], ['deleting', 2.598833643460815e-06], ['gogo->add_statement(Statement::make_goto_statement(retaddr_label,', 2.598833643460815e-06], ['then_block->determine_types();', 2.598833643460815e-06], ['Statement::make_if_statement(call,', 2.598833643460815e-06], ['function->func_value()->set_calls_defer_retaddr();', 2.598833643460815e-06], ['named_parameter', 2.598833643460815e-06], ['gogo->lookup(parameter_name,', 2.598833643460815e-06], ['go_assert(named_parameter', 2.598833643460815e-06], ['named_parameter->is_variable());', 2.598833643460815e-06], ['build_struct.', 2.598833643460815e-06], ['Expression::make_dereference(thunk_parameter,', 2.598833643460815e-06], ['ce->fn()->interface_field_reference_expression();', 2.598833643460815e-06], ['func_to_call;', 2.598833643460815e-06], ['(this->is_constant_function())', 2.598833643460815e-06], ['go_assert(next_index', 2.598833643460815e-06], ['name(interface_method->name());', 2.598833643460815e-06], ['Expression::make_interface_field_reference(r,', 2.598833643460815e-06], ['this->struct_type_->fields();', 2.598833643460815e-06], ['is_recover_call', 2.598833643460815e-06], ['ce->is_recover_call();', 2.598833643460815e-06], ['((*arg)->is_constant())', 2.598833643460815e-06], ['*arg;', 2.598833643460815e-06], ['Expression::make_dereference(thunk_param,', 2.598833643460815e-06], ['Expression::make_field_reference(thunk_param,', 2.598833643460815e-06], ['next_index,', 2.598833643460815e-06], ['++next_index;', 2.598833643460815e-06], ['(!is_recover_call)', 2.598833643460815e-06], ['call_params->push_back(param);', 2.598833643460815e-06], ['go_assert(call_params->empty());', 2.598833643460815e-06], ['(call_params->empty())', 2.598833643460815e-06], ['call_params;', 2.598833643460815e-06], ['Expression::make_call(func_to_call,', 2.598833643460815e-06], ['call_params,', 2.598833643460815e-06], ['for,', 2.598833643460815e-06], ['call_statement', 2.598833643460815e-06], ['gogo->add_statement(call_statement);', 2.598833643460815e-06], ['gogo->add_label_definition("retaddr",', 2.598833643460815e-06], ['gogo->add_statement(Statement::make_return_statement(vals,', 2.598833643460815e-06], ['call_statement->determine_types();', 2.598833643460815e-06], ['gogo->flatten_block(function,', 2.598833643460815e-06], ['(may_call_recover', 2.598833643460815e-06], ['this->classification()', 2.598833643460815e-06], ['Dig', 2.598833643460815e-06], ['go_assert(call_statement->classification()', 2.598833643460815e-06], ['STATEMENT_EXPRESSION);', 2.598833643460815e-06], ['static_cast<Expression_statement*>(call_statement);', 2.598833643460815e-06], ['es->expr()->call_expression();', 2.598833643460815e-06], ['ce->set_is_deferred();', 2.598833643460815e-06], ['ce->set_is_concurrent();', 2.598833643460815e-06], ['(recover_arg', 2.598833643460815e-06], ['ce->set_recover_arg(recover_arg);', 2.598833643460815e-06], ['Thunk_statement::get_fn_and_arg(Expression**', 2.598833643460815e-06], ['pfn,', 2.598833643460815e-06], ['parg)', 2.598833643460815e-06], ['fn->func_expression();', 2.598833643460815e-06], ['go_assert(fe', 2.598833643460815e-06], ['*pfn', 2.598833643460815e-06], ['Expression::make_func_code_reference(fe->named_object(),', 2.598833643460815e-06], ['fe->location());', 2.598833643460815e-06], ['Go_statement.', 2.598833643460815e-06], ['Go_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Runtime::make_call(Runtime::GO,', 2.598833643460815e-06], ['Go_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['"go', 2.598833643460815e-06], ['Statement::make_go_statement(Call_expression*', 2.598833643460815e-06], ['Go_statement(call,', 2.598833643460815e-06], ['Defer_statement.', 2.598833643460815e-06], ['Defer_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['ds', 2.598833643460815e-06], ['context->function()->func_value()->defer_stack(loc);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::DEFERPROC,', 2.598833643460815e-06], ['ds,', 2.598833643460815e-06], ['Defer_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['"defer', 2.598833643460815e-06], ['Statement::make_defer_statement(Call_expression*', 2.598833643460815e-06], ['Defer_statement(call,', 2.598833643460815e-06], ['Return_statement.', 2.598833643460815e-06], ['Return_statement::do_traverse_assignments(Traverse_assignments*', 2.598833643460815e-06], ['tassign->value(&*p,', 2.598833643460815e-06], ['panic/recover', 2.598833643460815e-06], ['Return_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['results_count', 2.598833643460815e-06], ['results->size();', 2.598833643460815e-06], ['!function->func_value()->results_are_named())', 2.598833643460815e-06], ['this->report_error(_("return', 2.598833643460815e-06], ['vals->front()->call_expression()', 2.598833643460815e-06], ['vals->front()->call_expression();', 2.598833643460815e-06], ['call->set_expected_result_count(results_count);', 2.598833643460815e-06], ['statement"));', 2.598833643460815e-06], ['++pr,', 2.598833643460815e-06], ['*pr;', 2.598833643460815e-06], ['*pe;', 2.598833643460815e-06], ['*rvtype', 2.598833643460815e-06], ['rv->result_var_value()->type();', 2.598833643460815e-06], ['type_context(rvtype,', 2.598833643460815e-06], ['e->determine_type(&type_context);', 2.598833643460815e-06], ['(Type::are_assignable(rvtype,', 2.598833643460815e-06], ['Expression::make_var_reference(rv,', 2.598833643460815e-06], ['lhs->push_back(ve);', 2.598833643460815e-06], ['rhs->push_back(e);', 2.598833643460815e-06], ['go_assert(lhs->size()', 2.598833643460815e-06], ['rhs->size());', 2.598833643460815e-06], ['(lhs->empty())', 2.598833643460815e-06], ['b->add_statement(Statement::make_assignment(lhs->front(),', 2.598833643460815e-06], ['rhs->front(),', 2.598833643460815e-06], ['b->add_statement(Statement::make_tuple_assignment(lhs,', 2.598833643460815e-06], ['Return_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['function->result_variables();', 2.598833643460815e-06], ['retvals;', 2.598833643460815e-06], ['retvals.reserve(results->size());', 2.598833643460815e-06], ['vr', 2.598833643460815e-06], ['retvals.push_back(vr->get_backend(context));', 2.598833643460815e-06], ['context->backend()->return_statement(function->get_decl(),', 2.598833643460815e-06], ['retvals,', 2.598833643460815e-06], ['Return_statement::do_export_statement(Export_function_body*', 2.598833643460815e-06], ['efb->write_c_string("return");', 2.598833643460815e-06], ['Return_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->vals_);', 2.598833643460815e-06], ['Return_statement*', 2.598833643460815e-06], ['Statement::make_return_statement(Expression_list*', 2.598833643460815e-06], ['Return_statement(vals,', 2.598833643460815e-06], ['Statement::make_return_from_call(Call_expression*', 2.598833643460815e-06], ['call->result_count();', 2.598833643460815e-06], ['Bc_statement', 2.598833643460815e-06], ['Bc_statement(bool', 2.598833643460815e-06], ['is_break,', 2.598833643460815e-06], ['Statement(STATEMENT_BREAK_OR_CONTINUE,', 2.598833643460815e-06], ['label_(label),', 2.598833643460815e-06], ['is_break_(is_break)', 2.598833643460815e-06], ['is_break()', 2.598833643460815e-06], ['this->is_break_;', 2.598833643460815e-06], ['do_may_fall_through()', 2.598833643460815e-06], ['"continue".', 2.598833643460815e-06], ['is_break_;', 2.598833643460815e-06], ['Bc_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['(this->is_break_', 2.598833643460815e-06], ['"continue");', 2.598833643460815e-06], ['(this->label_', 2.598833643460815e-06], ['Statement::make_break_statement(Unnamed_label*', 2.598833643460815e-06], ['Bc_statement(true,', 2.598833643460815e-06], ['Statement::make_continue_statement(Unnamed_label*', 2.598833643460815e-06], ['Bc_statement(false,', 2.598833643460815e-06], ['Goto_statement.', 2.598833643460815e-06], ['Goto_statement::do_traverse(Traverse*)', 2.598833643460815e-06], ['se,', 2.598833643460815e-06], ['Goto_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->label_->is_defined())', 2.598833643460815e-06], ['Gogo::message_name(this->label_->name()).c_str());', 2.598833643460815e-06], ['Goto_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Goto_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Statement::make_goto_statement(Label*', 2.598833643460815e-06], ['Goto_statement(label,', 2.598833643460815e-06], ['Goto_unnamed_statement.', 2.598833643460815e-06], ['Goto_unnamed_statement::do_traverse(Traverse*)', 2.598833643460815e-06], ['Goto_unnamed_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['Goto_unnamed_statement::do_dump_statement(', 2.598833643460815e-06], ['Statement::make_goto_unnamed_statement(Unnamed_label*', 2.598833643460815e-06], ['Goto_unnamed_statement(label,', 2.598833643460815e-06], ['Label_statement.', 2.598833643460815e-06], ['Label_statement::do_traverse(Traverse*)', 2.598833643460815e-06], ['Label_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['(this->label_->is_dummy_label())', 2.598833643460815e-06], ['context->backend()->boolean_constant_expression(false);', 2.598833643460815e-06], ['bce);', 2.598833643460815e-06], ['Label_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Statement::make_label_statement(Label*', 2.598833643460815e-06], ['Label_statement(label,', 2.598833643460815e-06], ['Unnamed_label_statement.', 2.598833643460815e-06], ['Unnamed_label_statement::Unnamed_label_statement(Unnamed_label*', 2.598833643460815e-06], ['Statement(STATEMENT_UNNAMED_LABEL,', 2.598833643460815e-06], ['label->location()),', 2.598833643460815e-06], ['Unnamed_label_statement::do_traverse(Traverse*)', 2.598833643460815e-06], ['Unnamed_label_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->label_->get_definition(context);', 2.598833643460815e-06], ['Unnamed_label_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Statement::make_unnamed_label_statement(Unnamed_label*', 2.598833643460815e-06], ['Unnamed_label_statement(label);', 2.598833643460815e-06], ['If_statement.', 2.598833643460815e-06], ['If_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['this->then_block_->traverse(traverse)', 2.598833643460815e-06], ['(this->else_block_->traverse(traverse)', 2.598833643460815e-06], ['If_statement::do_determine_types()', 2.598833643460815e-06], ['context(Type::lookup_bool_type(),', 2.598833643460815e-06], ['this->cond_->determine_type(&context);', 2.598833643460815e-06], ['this->then_block_->determine_types();', 2.598833643460815e-06], ['this->else_block_->determine_types();', 2.598833643460815e-06], ['If_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['this->cond_->type();', 2.598833643460815e-06], ['If_statement::do_may_fall_through()', 2.598833643460815e-06], ['this->then_block_->may_fall_through()', 2.598833643460815e-06], ['this->else_block_->may_fall_through());', 2.598833643460815e-06], ['If_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['go_assert(this->cond_->type()->is_boolean_type()', 2.598833643460815e-06], ['this->cond_->type()->is_error());', 2.598833643460815e-06], ['this->then_block_->get_backend(context);', 2.598833643460815e-06], ['this->else_block_->get_backend(context));', 2.598833643460815e-06], ['context->backend()->if_statement(bfunction,', 2.598833643460815e-06], ['If_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['"if', 2.598833643460815e-06], ['ast_dump_context->dump_block(this->then_block_);', 2.598833643460815e-06], ['ast_dump_context->dump_block(this->else_block_);', 2.598833643460815e-06], ['Statement::make_if_statement(Expression*', 2.598833643460815e-06], ['If_statement(cond,', 2.598833643460815e-06], ['Case_clauses::Hash_integer_value.', 2.598833643460815e-06], ['Case_clauses::Hash_integer_value', 2.598833643460815e-06], ['operator()(Expression*)', 2.598833643460815e-06], ['Case_clauses::Hash_integer_value::operator()(Expression*', 2.598833643460815e-06], ['pe)', 2.598833643460815e-06], ['(!pe->numeric_constant_value(&nc)', 2.598833643460815e-06], ['Case_clauses::Eq_integer_value.', 2.598833643460815e-06], ['Case_clauses::Eq_integer_value', 2.598833643460815e-06], ['operator()(Expression*,', 2.598833643460815e-06], ['Expression*)', 2.598833643460815e-06], ['Case_clauses::Eq_integer_value::operator()(Expression*', 2.598833643460815e-06], ['anc;', 2.598833643460815e-06], ['aval;', 2.598833643460815e-06], ['bnc;', 2.598833643460815e-06], ['bval;', 2.598833643460815e-06], ['(!a->numeric_constant_value(&anc)', 2.598833643460815e-06], ['!anc.to_int(&aval)', 2.598833643460815e-06], ['!b->numeric_constant_value(&bnc)', 2.598833643460815e-06], ['!bnc.to_int(&bval))', 2.598833643460815e-06], ['mpz_cmp(aval,', 2.598833643460815e-06], ['bval)', 2.598833643460815e-06], ['mpz_clear(aval);', 2.598833643460815e-06], ['mpz_clear(bval);', 2.598833643460815e-06], ['Case_clauses::Case_clause.', 2.598833643460815e-06], ['Case_clauses::Case_clause::traverse(Traverse*', 2.598833643460815e-06], ['(this->cases_->traverse(traverse)', 2.598833643460815e-06], ['Case_clauses::Case_clause::is_constant()', 2.598833643460815e-06], ['(!(*p)->is_constant()', 2.598833643460815e-06], ['(*p)->type()->integer_type()', 2.598833643460815e-06], ['VAL_TEMP', 2.598833643460815e-06], ['on;', 2.598833643460815e-06], ['START_LABEL', 2.598833643460815e-06], ['test.', 2.598833643460815e-06], ['FINISH_LABEL', 2.598833643460815e-06], ['Case_clauses::Case_clause::lower(Block*', 2.598833643460815e-06], ['finish_label)', 2.598833643460815e-06], ['this->cases_->empty())', 2.598833643460815e-06], ['go_assert(this->is_default_);', 2.598833643460815e-06], ['this_cond', 2.598833643460815e-06], ['this_cond;', 2.598833643460815e-06], ['this_cond,', 2.598833643460815e-06], ['Statement::make_goto_unnamed_statement(next_case_label,', 2.598833643460815e-06], ['(start_label', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(start_label));', 2.598833643460815e-06], ['Statement::make_goto_unnamed_statement(finish_label,', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(next_case_label));', 2.598833643460815e-06], ['Case_clauses::Case_clause::determine_types(Type*', 2.598833643460815e-06], ['case_context(type,', 2.598833643460815e-06], ['(*p)->determine_type(&case_context);', 2.598833643460815e-06], ['Case_clauses::Case_clause::check_types(Type*', 2.598833643460815e-06], ['(!Type::are_assignable(type,', 2.598833643460815e-06], ['!Type::are_assignable((*p)->type(),', 2.598833643460815e-06], ['mismatch', 2.598833643460815e-06], ['Case_clauses::Case_clause::may_fall_through()', 2.598833643460815e-06], ['CASE_CONSTANTS', 2.598833643460815e-06], ['vector;', 2.598833643460815e-06], ['selected.', 2.598833643460815e-06], ['Case_clauses::Case_clause::get_backend(Translate_context*', 2.598833643460815e-06], ['Case_constants*', 2.598833643460815e-06], ['case_constants,', 2.598833643460815e-06], ['std::vector<Bexpression*>*', 2.598833643460815e-06], ['cases)', 2.598833643460815e-06], ['Expression::EXPRESSION_INTEGER)', 2.598833643460815e-06], ['(!(*p)->numeric_constant_value(&nc)', 2.598833643460815e-06], ['go_assert(nc.type()', 2.598833643460815e-06], ['nc.type(),', 2.598833643460815e-06], ['std::pair<Case_constants::iterator,', 2.598833643460815e-06], ['case_constants->insert(e);', 2.598833643460815e-06], ['cases->push_back(e->get_backend(context));', 2.598833643460815e-06], ['(break_stat', 2.598833643460815e-06], ['context->backend()->compound_statement(statements,', 2.598833643460815e-06], ['break_stat);', 2.598833643460815e-06], ['Case_clauses::Case_clause::dump_clause(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_expression_list(this->cases_);', 2.598833643460815e-06], ['Case_clauses.', 2.598833643460815e-06], ['Case_clauses::traverse(Traverse*', 2.598833643460815e-06], ['Case_clauses::is_constant()', 2.598833643460815e-06], ['(!p->is_constant())', 2.598833643460815e-06], ['Case_clauses::lower(Block*', 2.598833643460815e-06], ['Case_clause*', 2.598833643460815e-06], ['winds', 2.598833643460815e-06], ['BREAK_LABEL,', 2.598833643460815e-06], ['start_label', 2.598833643460815e-06], ['last_fallthrough_label;', 2.598833643460815e-06], ['(p->is_fallthrough()', 2.598833643460815e-06], ['this->clauses_.end())', 2.598833643460815e-06], ['Unnamed_label(p->location());', 2.598833643460815e-06], ['p->lower(b,', 2.598833643460815e-06], ['finish_label);', 2.598833643460815e-06], ['start_label;', 2.598833643460815e-06], ['default_case->lower(b,', 2.598833643460815e-06], ['default_start_label,', 2.598833643460815e-06], ['default_finish_label);', 2.598833643460815e-06], ['Case_clauses::determine_types(Type*', 2.598833643460815e-06], ['p->determine_types(type);', 2.598833643460815e-06], ['Case_clauses::check_types(Type*', 2.598833643460815e-06], ['(!p->check_types(type))', 2.598833643460815e-06], ['Case_clauses::may_fall_through()', 2.598833643460815e-06], ['(p->may_fall_through()', 2.598833643460815e-06], ['!p->is_fallthrough())', 2.598833643460815e-06], ['*ALL_CASES', 2.598833643460815e-06], ['*ALL_STATEMENTS.', 2.598833643460815e-06], ['Case_clauses::get_backend(Translate_context*', 2.598833643460815e-06], ['>*', 2.598833643460815e-06], ['std::vector<Bstatement*>*', 2.598833643460815e-06], ['all_statements)', 2.598833643460815e-06], ['Case_constants', 2.598833643460815e-06], ['case_constants;', 2.598833643460815e-06], ['all_cases->resize(c);', 2.598833643460815e-06], ['all_statements->resize(c);', 2.598833643460815e-06], ['cases;', 2.598833643460815e-06], ['p->get_backend(context,', 2.598833643460815e-06], ['&case_constants,', 2.598833643460815e-06], ['&cases);', 2.598833643460815e-06], ['p->is_fallthrough())', 2.598833643460815e-06], ['(*all_cases)[i].swap(cases);', 2.598833643460815e-06], ['(*all_statements)[i]', 2.598833643460815e-06], ['Case_clauses::dump_clauses(Ast_dump_context*', 2.598833643460815e-06], ['Constant_switch_statement(Expression*', 2.598833643460815e-06], ['Statement(STATEMENT_CONSTANT_SWITCH,', 2.598833643460815e-06], ['clauses_(clauses),', 2.598833643460815e-06], ['break_label_(break_label)', 2.598833643460815e-06], ['do_determine_types();', 2.598833643460815e-06], ['clauses_;', 2.598833643460815e-06], ['Constant_switch_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['Constant_switch_statement::do_determine_types()', 2.598833643460815e-06], ['this->val_->determine_type_no_context();', 2.598833643460815e-06], ['this->clauses_->determine_types(this->val_->type());', 2.598833643460815e-06], ['Constant_switch_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['(!this->clauses_->check_types(this->val_->type()))', 2.598833643460815e-06], ['Constant_switch_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['switch_val_expr', 2.598833643460815e-06], ['this->val_->get_backend(context);', 2.598833643460815e-06], ['(break_label', 2.598833643460815e-06], ['all_cases;', 2.598833643460815e-06], ['all_statements;', 2.598833643460815e-06], ['&all_cases,', 2.598833643460815e-06], ['&all_statements);', 2.598833643460815e-06], ['switch_statement;', 2.598833643460815e-06], ['switch_statement', 2.598833643460815e-06], ['switch_val_expr,', 2.598833643460815e-06], ['all_statements,', 2.598833643460815e-06], ['context->backend()->compound_statement(switch_statement,', 2.598833643460815e-06], ['ldef);', 2.598833643460815e-06], ['Constant_switch_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Switch_statement.', 2.598833643460815e-06], ['Switch_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['Switch_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['(this->val_->is_error_expression()', 2.598833643460815e-06], ['this->val_->type()->is_error()))', 2.598833643460815e-06], ['this->val_->type()->integer_type()', 2.598833643460815e-06], ['!this->clauses_->empty()', 2.598833643460815e-06], ['this->clauses_->is_constant())', 2.598833643460815e-06], ['Constant_switch_statement(this->val_,', 2.598833643460815e-06], ['this->clauses_,', 2.598833643460815e-06], ['this->break_label_,', 2.598833643460815e-06], ['!this->val_->type()->is_comparable()', 2.598833643460815e-06], ['!Type::are_compatible_for_comparison(true,', 2.598833643460815e-06], ['go_error_at(this->val_->location(),', 2.598833643460815e-06], ['compared");', 2.598833643460815e-06], ['(this->clauses_->empty())', 2.598833643460815e-06], ['Statement::make_statement(val,', 2.598833643460815e-06], ['Statement::make_temporary(type,', 2.598833643460815e-06], ['this->clauses_->lower(b,', 2.598833643460815e-06], ['Switch_statement::break_label()', 2.598833643460815e-06], ['Switch_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Switch_statement::do_may_fall_through()', 2.598833643460815e-06], ['Statement::make_switch_statement(Expression*', 2.598833643460815e-06], ['Switch_statement(val,', 2.598833643460815e-06], ['Type_case_clauses::Type_case_clause.', 2.598833643460815e-06], ['Type_case_clauses::Type_case_clause::traverse(Traverse*', 2.598833643460815e-06], ['(!this->is_default_', 2.598833643460815e-06], ['*STMTS_LABEL,', 2.598833643460815e-06], ['Type_case_clauses::Type_case_clause::lower(Type*', 2.598833643460815e-06], ['Unnamed_label**', 2.598833643460815e-06], ['stmts_label)', 2.598833643460815e-06], ['(!this->is_default_)', 2.598833643460815e-06], ['(switch_val_type->interface_type()', 2.598833643460815e-06], ['!type->is_nil_constant_as_type()', 2.598833643460815e-06], ['!switch_val_type->interface_type()->implements_interface(type,', 2.598833643460815e-06], ['case");', 2.598833643460815e-06], ['(type->is_nil_constant_as_type())', 2.598833643460815e-06], ['Runtime::make_call((type->interface_type()', 2.598833643460815e-06], ['Runtime::IFACETYPEEQ', 2.598833643460815e-06], ['Runtime::IFACET2IP),', 2.598833643460815e-06], ['dest;', 2.598833643460815e-06], ['(!this->is_fallthrough_)', 2.598833643460815e-06], ['STMTS_LABEL', 2.598833643460815e-06], ['(*stmts_label', 2.598833643460815e-06], ['*stmts_label;', 2.598833643460815e-06], ['Statement::make_goto_unnamed_statement(dest,', 2.598833643460815e-06], ['(!this->is_fallthrough_', 2.598833643460815e-06], ['go_assert(!this->is_fallthrough_);', 2.598833643460815e-06], ['(stmts_label', 2.598833643460815e-06], ['(*stmts_label)->set_location(this->statements_->start_location());', 2.598833643460815e-06], ['Statement::make_unnamed_label_statement(*stmts_label);', 2.598833643460815e-06], ['go_assert(next_case_label', 2.598833643460815e-06], ['this->statements_->end_location());', 2.598833643460815e-06], ['b->add_statement(Statement::make_goto_unnamed_statement(break_label,', 2.598833643460815e-06], ['gloc));', 2.598833643460815e-06], ['Statement::make_unnamed_label_statement(next_case_label);', 2.598833643460815e-06], ['Type_case_clauses::Type_case_clause::may_fall_through()', 2.598833643460815e-06], ["(it's", 2.598833643460815e-06], ['T1,', 2.598833643460815e-06], ['T2:).', 2.598833643460815e-06], ['whole.', 2.598833643460815e-06], ['Type_case_clauses::Type_case_clause::dump_clause(', 2.598833643460815e-06], ['Type_case_clauses.', 2.598833643460815e-06], ['Type_case_clauses::traverse(Traverse*', 2.598833643460815e-06], ['(Type_clauses::iterator', 2.598833643460815e-06], ['Type_case_clauses::check_duplicates()', 2.598833643460815e-06], ['Unordered_set_hash(const', 2.598833643460815e-06], ['Type_hash_identical,', 2.598833643460815e-06], ['Type_identical)', 2.598833643460815e-06], ['Types_seen;', 2.598833643460815e-06], ['Types_seen', 2.598833643460815e-06], ['types_seen;', 2.598833643460815e-06], ['(t->is_nil_constant_as_type())', 2.598833643460815e-06], ['types_seen.insert(t);', 2.598833643460815e-06], ['Type_case_clauses::lower(Type*', 2.598833643460815e-06], ['Type_case_clause*', 2.598833643460815e-06], ['p->lower(switch_val_type,', 2.598833643460815e-06], ['&stmts_label);', 2.598833643460815e-06], ['tests,', 2.598833643460815e-06], ['default_case->lower(switch_val_type,', 2.598833643460815e-06], ['Type_case_clauses::may_fall_through()', 2.598833643460815e-06], ['Type_case_clauses::dump_clauses(Ast_dump_context*', 2.598833643460815e-06], ['Type_switch_statement.', 2.598833643460815e-06], ['Type_switch_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->expr_)', 2.598833643460815e-06], ['libraries,', 2.598833643460815e-06], ['Type_switch_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['this->clauses_->check_duplicates();', 2.598833643460815e-06], ['(val_type->interface_type()', 2.598833643460815e-06], ['(!val_type->is_error())', 2.598833643460815e-06], ['DESCRIPTOR_TYPE', 2.598833643460815e-06], ['descriptor_type', 2.598833643460815e-06], ['Statement::make_temporary(descriptor_type,', 2.598833643460815e-06], ['b->add_statement(descriptor_temp);', 2.598833643460815e-06], ['ifacetype(val_temp)', 2.598833643460815e-06], ['val_type->interface_type()->is_empty();', 2.598833643460815e-06], ['Runtime::make_call((is_empty', 2.598833643460815e-06], ['Runtime::EFACETYPE', 2.598833643460815e-06], ['Runtime::IFACETYPE),', 2.598833643460815e-06], ['this->clauses_->lower(val_type,', 2.598833643460815e-06], ['Type_switch_statement::do_may_fall_through()', 2.598833643460815e-06], ['Type_switch_statement::break_label()', 2.598833643460815e-06], ['Type_switch_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['(!this->name_.empty())', 2.598833643460815e-06], ['this->name_', 2.598833643460815e-06], ['.(type)";', 2.598833643460815e-06], ['Statement::make_type_switch_statement(const', 2.598833643460815e-06], ['Type_switch_statement(name,', 2.598833643460815e-06], ['Send_statement.', 2.598833643460815e-06], ['Send_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->channel_)', 2.598833643460815e-06], ['&this->val_);', 2.598833643460815e-06], ['Send_statement::do_determine_types()', 2.598833643460815e-06], ['this->channel_->determine_type_no_context();', 2.598833643460815e-06], ['context.type', 2.598833643460815e-06], ['type->channel_type()->element_type();', 2.598833643460815e-06], ['this->val_->determine_type(&context);', 2.598833643460815e-06], ['Send_statement::do_check_types(Gogo*)', 2.598833643460815e-06], ['type->channel_type();', 2.598833643460815e-06], ['"left', 2.598833643460815e-06], ['(!channel_type->may_send())', 2.598833643460815e-06], ['Send_statement::do_flatten(Gogo*,', 2.598833643460815e-06], ['(this->channel_->is_error_expression()', 2.598833643460815e-06], ['this->channel_->type()->is_error_type())', 2.598833643460815e-06], ['this->channel_->type()->channel_type()->element_type();', 2.598833643460815e-06], ['(!Type::are_identical(element_type,', 2.598833643460815e-06], ['this->val_->type()->interface_type()', 2.598833643460815e-06], ['!this->val_->is_variable())', 2.598833643460815e-06], ['Send_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['can_take_address;', 2.598833643460815e-06], ['(element_type->base()->classification())', 2.598833643460815e-06], ['!element_type->is_slice_type();', 2.598833643460815e-06], ['(can_take_address', 2.598833643460815e-06], ['val->var_expression()', 2.598833643460815e-06], ['val->temporary_reference_expression()', 2.598833643460815e-06], ['(can_take_address)', 2.598833643460815e-06], ['Runtime::make_call(Runtime::CHANSEND,', 2.598833643460815e-06], ['(btemp', 2.598833643460815e-06], ['context->backend()->compound_statement(btemp,', 2.598833643460815e-06], ['Send_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['Send_statement*', 2.598833643460815e-06], ['Statement::make_send_statement(Expression*', 2.598833643460815e-06], ['Send_statement(channel,', 2.598833643460815e-06], ['Select_clauses::Select_clause.', 2.598833643460815e-06], ['Select_clauses::Select_clause::traverse(Traverse*', 2.598833643460815e-06], ['(!this->is_lowered_', 2.598833643460815e-06], ['(this->channel_', 2.598833643460815e-06], ['(Expression::traverse(&this->channel_,', 2.598833643460815e-06], ['(Expression::traverse(&this->val_,', 2.598833643460815e-06], ['(Expression::traverse(&this->closed_,', 2.598833643460815e-06], ['Select_clauses::Select_clause::lower(Gogo*', 2.598833643460815e-06], ['Expression::make_integer_ul(index,', 2.598833643460815e-06], ['Expression::make_array_index(scase,', 2.598833643460815e-06], ['index_expr,', 2.598833643460815e-06], ['go_assert(this->channel_', 2.598833643460815e-06], ['this->lower_default(b,', 2.598833643460815e-06], ['scase);', 2.598833643460815e-06], ['channel_temp', 2.598833643460815e-06], ['b->add_statement(channel_temp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(channel_temp,', 2.598833643460815e-06], ['this->lower_send(b,', 2.598833643460815e-06], ['chanref);', 2.598833643460815e-06], ['this->lower_recv(gogo,', 2.598833643460815e-06], ['Select_clauses::Select_clause::lower_default(Block*', 2.598833643460815e-06], ['scase)', 2.598833643460815e-06], ['caseDefault);', 2.598833643460815e-06], ['Select_clauses::Select_clause::lower_send(Block*', 2.598833643460815e-06], ['chanref)', 2.598833643460815e-06], ['sent', 2.598833643460815e-06], ['Temporary_statement,', 2.598833643460815e-06], ['val->set_value_escapes();', 2.598833643460815e-06], ['caseSend);', 2.598833643460815e-06], ['Select_clauses::Select_clause::lower_recv(Gogo*', 2.598833643460815e-06], ['caseRecv);', 2.598833643460815e-06], ['go_assert(this->val_', 2.598833643460815e-06], ['this->var_->var_value()->set_init(valref);', 2.598833643460815e-06], ['this->var_->var_value()->clear_type_from_chan_element();', 2.598833643460815e-06], ['!this->val_->is_sink_expression())', 2.598833643460815e-06], ['init->add_statement(Statement::make_assignment(this->val_,', 2.598833643460815e-06], ['go_assert(this->closed_', 2.598833643460815e-06], ['this->closedvar_->var_value()->set_init(cref);', 2.598833643460815e-06], ['!this->closed_->is_sink_expression())', 2.598833643460815e-06], ['init->add_statement(Statement::make_assignment(this->closed_,', 2.598833643460815e-06], ['init->add_statement(Statement::make_block_statement(this->statements_,', 2.598833643460815e-06], ['this->statements_', 2.598833643460815e-06], ['Select_clauses::Select_clause::set_case(Block*', 2.598833643460815e-06], ['scase->type()->struct_type();', 2.598833643460815e-06], ['go_assert(scase_type->field(field_index)->is_field_name("c"));', 2.598833643460815e-06], ['Expression::make_field_reference(scase,', 2.598833643460815e-06], ['Expression::make_unsafe_cast(unsafe_pointer_type,', 2.598833643460815e-06], ['go_assert(scase_type->field(field_index)->is_field_name("elem"));', 2.598833643460815e-06], ['go_assert(scase_type->field(field_index)->is_field_name("kind"));', 2.598833643460815e-06], ['Expression::make_integer_ul(kind,', 2.598833643460815e-06], ['Select_clauses::Select_clause::determine_types()', 2.598833643460815e-06], ['go_assert(this->is_lowered_);', 2.598833643460815e-06], ['Select_clauses::Select_clause::check_types()', 2.598833643460815e-06], ['go_error_at(this->channel_->location(),', 2.598833643460815e-06], ['(this->is_send_', 2.598833643460815e-06], ['!ct->may_send())', 2.598833643460815e-06], ['(!this->is_send_', 2.598833643460815e-06], ['!ct->may_receive())', 2.598833643460815e-06], ['Select_clauses::Select_clause::may_fall_through()', 2.598833643460815e-06], ['execute.', 2.598833643460815e-06], ['Select_clauses::Select_clause::get_statements_backend(', 2.598833643460815e-06], ['Translate_context*', 2.598833643460815e-06], ['Select_clauses::Select_clause::dump_clause(', 2.598833643460815e-06], ['val_', 2.598833643460815e-06], ['closed_', 2.598833643460815e-06], ['NULL?', 2.598833643460815e-06], ['this->var_', 2.598833643460815e-06], ['Select_clauses.', 2.598833643460815e-06], ['Select_clauses::traverse(Traverse*', 2.598833643460815e-06], ['Select_clauses::lower(Gogo*', 2.598833643460815e-06], ['p->lower(gogo,', 2.598833643460815e-06], ['Select_clauses::determine_types()', 2.598833643460815e-06], ['p->determine_types();', 2.598833643460815e-06], ['Select_clauses::check_types()', 2.598833643460815e-06], ['p->check_types();', 2.598833643460815e-06], ['Select_clauses::may_fall_through()', 2.598833643460815e-06], ['Assemble', 2.598833643460815e-06], ['Select_clauses::get_backend(Translate_context*', 2.598833643460815e-06], ['Unnamed_label', 2.598833643460815e-06], ['*break_label,', 2.598833643460815e-06], ['cases(count', 2.598833643460815e-06], ['clauses(count', 2.598833643460815e-06], ['cases[i].push_back(index_expr->get_backend(context));', 2.598833643460815e-06], ['p->get_statements_backend(context);', 2.598833643460815e-06], ['(p->statements()', 2.598833643460815e-06], ['p->location()', 2.598833643460815e-06], ['p->statements()->end_location());', 2.598833643460815e-06], ['gloc);', 2.598833643460815e-06], ['context->backend()->compound_statement(s,', 2.598833643460815e-06], ['bindex', 2.598833643460815e-06], ['bindex);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::UNREACHABLE,', 2.598833643460815e-06], ['crash->get_backend(context);', 2.598833643460815e-06], ['clauses[count]', 2.598833643460815e-06], ['bcrash);', 2.598833643460815e-06], ['statements.reserve(2);', 2.598833643460815e-06], ['switch_stmt', 2.598833643460815e-06], ['bindex,', 2.598833643460815e-06], ['statements.push_back(switch_stmt);', 2.598833643460815e-06], ['statements.push_back(ldef);', 2.598833643460815e-06], ['context->backend()->statement_list(statements);', 2.598833643460815e-06], ['Select_clauses::dump_clauses(Ast_dump_context*', 2.598833643460815e-06], ['Select_statement.', 2.598833643460815e-06], ['Select_statement::break_label()', 2.598833643460815e-06], ['selectgo', 2.598833643460815e-06], ['Select_statement::do_lower(Gogo*', 2.598833643460815e-06], ['ncases', 2.598833643460815e-06], ['this->clauses_->size();', 2.598833643460815e-06], ['Channel_type::select_case_type();', 2.598833643460815e-06], ['ncases_expr', 2.598833643460815e-06], ['scases_type', 2.598833643460815e-06], ['Type::make_array_type(scase_type,', 2.598833643460815e-06], ['ncases_expr);', 2.598833643460815e-06], ['scases_type->set_is_array_incomparable();', 2.598833643460815e-06], ['Statement::make_temporary(scases_type,', 2.598833643460815e-06], ['b->add_statement(scases);', 2.598833643460815e-06], ['ncases2_expr', 2.598833643460815e-06], ['Expression::make_integer_ul(ncases', 2.598833643460815e-06], ['order_type', 2.598833643460815e-06], ['Type::make_array_type(uint16_type,', 2.598833643460815e-06], ['ncases2_expr);', 2.598833643460815e-06], ['order_type->set_is_array_incomparable();', 2.598833643460815e-06], ['Statement::make_temporary(order_type,', 2.598833643460815e-06], ['b->add_statement(order);', 2.598833643460815e-06], ['b->add_statement(this->index_);', 2.598833643460815e-06], ['recvok', 2.598833643460815e-06], ['Statement::make_temporary(bool_type,', 2.598833643460815e-06], ['b->add_statement(recvok);', 2.598833643460815e-06], ['this->clauses_->lower(gogo,', 2.598833643460815e-06], ['Later,', 2.598833643460815e-06], ['do_get_backend,', 2.598833643460815e-06], ['Expression::make_temporary_reference(order,', 2.598833643460815e-06], ['count_expr', 2.598833643460815e-06], ['Runtime::make_call(Runtime::SELECTGO,', 2.598833643460815e-06], ['count_expr);', 2.598833643460815e-06], ['Expression::make_temporary_reference(this->index_,', 2.598833643460815e-06], ['Select_statement::do_may_fall_through()', 2.598833643460815e-06], ['terminating.', 2.598833643460815e-06], ['Select_statement::do_get_backend(Translate_context*', 2.598833643460815e-06], ['this->break_label(),', 2.598833643460815e-06], ['Select_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['"select";', 2.598833643460815e-06], ['Statement::make_select_statement(Location', 2.598833643460815e-06], ['Select_statement(location);', 2.598833643460815e-06], ['For_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['(this->init_->traverse(traverse)', 2.598833643460815e-06], ['(this->post_->traverse(traverse)', 2.598833643460815e-06], ['gotos.', 2.598833643460815e-06], ['rid', 2.598833643460815e-06], ['collection.', 2.598833643460815e-06], ['For_statement::do_lower(Gogo*,', 2.598833643460815e-06], ['Statement::make_block_statement(this->init_,', 2.598833643460815e-06], ['this->init_->start_location());', 2.598833643460815e-06], ['b->add_statement(Statement::make_goto_unnamed_statement(entry,', 2.598833643460815e-06], ['top->set_derived_from(this);', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(top));', 2.598833643460815e-06], ['Statement::make_block_statement(this->statements_,', 2.598833643460815e-06], ['this->statements_->start_location());', 2.598833643460815e-06], ['this->statements_->end_location();', 2.598833643460815e-06], ['cont', 2.598833643460815e-06], ['(cont', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(cont));', 2.598833643460815e-06], ['Statement::make_block_statement(this->post_,', 2.598833643460815e-06], ['this->post_->start_location());', 2.598833643460815e-06], ['this->post_->end_location();', 2.598833643460815e-06], ['b->add_statement(Statement::make_goto_unnamed_statement(top,', 2.598833643460815e-06], ['end_loc));', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(entry));', 2.598833643460815e-06], ['cond_loc', 2.598833643460815e-06], ['this->cond_->location();', 2.598833643460815e-06], ['Statement::make_goto_unnamed_statement(top,', 2.598833643460815e-06], ['Statement::make_if_statement(this->cond_,', 2.598833643460815e-06], ['brk', 2.598833643460815e-06], ['(brk', 2.598833643460815e-06], ['b->add_statement(Statement::make_unnamed_label_statement(brk));', 2.598833643460815e-06], ['b->set_end_location(end_loc);', 2.598833643460815e-06], ['bs->block_statement()->set_is_lowered_for_statement();', 2.598833643460815e-06], ['bs;', 2.598833643460815e-06], ['For_statement::break_label()', 2.598833643460815e-06], ['For_statement::continue_label()', 2.598833643460815e-06], ['For_statement::set_break_continue_labels(Unnamed_label*', 2.598833643460815e-06], ['continue_label)', 2.598833643460815e-06], ['go_assert(this->break_label_', 2.598833643460815e-06], ['continue_label;', 2.598833643460815e-06], ['For_statement::do_may_fall_through()', 2.598833643460815e-06], ['if(this->cond_', 2.598833643460815e-06], ['if(this->break_label_', 2.598833643460815e-06], ['For_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_subblocks())', 2.598833643460815e-06], ['ast_dump_context->dump_block(this->init_);', 2.598833643460815e-06], ['ast_dump_context->dump_block(this->post_);', 2.598833643460815e-06], ['Statement::make_for_statement(Block*', 2.598833643460815e-06], ['For_statement(init,', 2.598833643460815e-06], ['For_range_statement.', 2.598833643460815e-06], ['For_range_statement::do_traverse(Traverse*', 2.598833643460815e-06], ['&this->index_var_)', 2.598833643460815e-06], ['&this->value_var_)', 2.598833643460815e-06], ['&this->range_)', 2.598833643460815e-06], ['For_range_statement::do_lower(Gogo*', 2.598833643460815e-06], ['this->range_->type();', 2.598833643460815e-06], ['(range_type->points_to()', 2.598833643460815e-06], ['range_type->points_to()->array_type()', 2.598833643460815e-06], ['!range_type->points_to()->is_slice_type())', 2.598833643460815e-06], ['range_type->points_to();', 2.598833643460815e-06], ['index_type;', 2.598833643460815e-06], ['range_type->array_type()->element_type();', 2.598833643460815e-06], ['range_type->map_type()->key_type();', 2.598833643460815e-06], ['range_type->map_type()->val_type();', 2.598833643460815e-06], ['range_type->channel_type()->element_type();', 2.598833643460815e-06], ['(!this->value_var_->type()->is_error())', 2.598833643460815e-06], ['this->report_error(_("range', 2.598833643460815e-06], ['len(this->range_)', 2.598833643460815e-06], ['len(x)', 2.598833643460815e-06], ['contant', 2.598833643460815e-06], ['difference,', 2.598833643460815e-06], ['((this->value_var_', 2.598833643460815e-06], ['range_type->array_type()', 2.598833643460815e-06], ['!range_type->is_slice_type()', 2.598833643460815e-06], ['Builtin_call_expression::array_len_is_constant(this->range_))', 2.598833643460815e-06], ['temp_block', 2.598833643460815e-06], ['(eval)', 2.598833643460815e-06], ['this->range_->var_expression();', 2.598833643460815e-06], ['temp_block->add_statement(range_temp);', 2.598833643460815e-06], ['this->range_', 2.598833643460815e-06], ['Statement::make_temporary(index_type,', 2.598833643460815e-06], ['temp_block->add_statement(index_temp);', 2.598833643460815e-06], ['!this->value_var_->is_sink_expression())', 2.598833643460815e-06], ['Statement::make_temporary(value_type,', 2.598833643460815e-06], ['temp_block->add_statement(value_temp);', 2.598833643460815e-06], ['Block(temp_block,', 2.598833643460815e-06], ['ITER_INIT', 2.598833643460815e-06], ['INDEX_TEMP', 2.598833643460815e-06], ['VALUE_TEMP', 2.598833643460815e-06], ['(range_type->is_slice_type())', 2.598833643460815e-06], ['this->lower_range_slice(gogo,', 2.598833643460815e-06], ['this->lower_range_array(gogo,', 2.598833643460815e-06], ['this->lower_range_string(gogo,', 2.598833643460815e-06], ['this->lower_range_map(gogo,', 2.598833643460815e-06], ['range_type->map_type(),', 2.598833643460815e-06], ['this->lower_range_channel(gogo,', 2.598833643460815e-06], ['(iter_init', 2.598833643460815e-06], ['body->add_statement(Statement::make_block_statement(iter_init,', 2.598833643460815e-06], ['Statement::make_assignment(this->index_var_,', 2.598833643460815e-06], ['lhs->push_back(this->index_var_);', 2.598833643460815e-06], ['lhs->push_back(this->value_var_);', 2.598833643460815e-06], ['rhs->push_back(index_ref);', 2.598833643460815e-06], ['rhs->push_back(Expression::make_temporary_reference(value_temp,', 2.598833643460815e-06], ['body->add_statement(assign);', 2.598833643460815e-06], ['body->add_statement(Statement::make_block_statement(this->statements_,', 2.598833643460815e-06], ['body->set_end_location(this->statements_->end_location());', 2.598833643460815e-06], ['loop->add_statements(body);', 2.598833643460815e-06], ['loop->set_break_continue_labels(this->break_label_,', 2.598833643460815e-06], ['this->continue_label_);', 2.598833643460815e-06], ['temp_block->add_statement(loop);', 2.598833643460815e-06], ['Statement::make_block_statement(temp_block,', 2.598833643460815e-06], ['RANGE_OBJECT', 2.598833643460815e-06], ['RANGE_TEMP.', 2.598833643460815e-06], ['For_range_statement::make_range_ref(Named_object*', 2.598833643460815e-06], ['Expression::make_var_reference(range_object,', 2.598833643460815e-06], ['FUNCNAME', 2.598833643460815e-06], ['For_range_statement::call_builtin(Gogo*', 2.598833643460815e-06], ['funcname,', 2.598833643460815e-06], ['gogo->lookup_global(funcname);', 2.598833643460815e-06], ['params->push_back(arg);', 2.598833643460815e-06], ['For_range_statement::lower_range_array(Gogo*', 2.598833643460815e-06], ['range_temp[index_temp]', 2.598833643460815e-06], ['this->range_;', 2.598833643460815e-06], ['init->add_statement(range_temp);', 2.598833643460815e-06], ['For_range_statement::lower_range_slice(Gogo*', 2.598833643460815e-06], ['len(for_temp)', 2.598833643460815e-06], ['for_temp[index_temp]', 2.598833643460815e-06], ['fetching', 2.598833643460815e-06], ['range_temp[index_temp].', 2.598833643460815e-06], ['len(range_temp)', 2.598833643460815e-06], ['init->add_statement(for_temp);', 2.598833643460815e-06], ['For_range_statement::lower_range_string(Gogo*', 2.598833643460815e-06], ['init->add_statement(next_index_temp);', 2.598833643460815e-06], ['rune_type;', 2.598833643460815e-06], ['value_temp->type();', 2.598833643460815e-06], ['Statement::make_temporary(rune_type,', 2.598833643460815e-06], ['init->add_statement(value_temp);', 2.598833643460815e-06], ['len_ref', 2.598833643460815e-06], ['len_ref,', 2.598833643460815e-06], ['Expression::make_string_index(ref,', 2.598833643460815e-06], ['Expression::make_cast(rune_type,', 2.598833643460815e-06], ['rune_self', 2.598833643460815e-06], ['Expression::make_integer_ul(0x80,', 2.598833643460815e-06], ['rune_type,', 2.598833643460815e-06], ['value_ref,', 2.598833643460815e-06], ['rune_self,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::DECODERUNE,', 2.598833643460815e-06], ['index_ref);', 2.598833643460815e-06], ['For_range_statement::lower_range_map(Gogo*', 2.598833643460815e-06], ['map_type,', 2.598833643460815e-06], ['Map_type::hiter_type', 2.598833643460815e-06], ['mapiterinit(type,', 2.598833643460815e-06], ['&hiter);', 2.598833643460815e-06], ['nil;', 2.598833643460815e-06], ['runtime.mapiterinit(type,', 2.598833643460815e-06], ['&hiter)', 2.598833643460815e-06], ['map_iteration_type', 2.598833643460815e-06], ['map_type->hiter_type(gogo);', 2.598833643460815e-06], ['Statement::make_temporary(map_iteration_type,', 2.598833643460815e-06], ['init->add_statement(hiter);', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPITERINIT,', 2.598833643460815e-06], ['p2,', 2.598833643460815e-06], ['init->add_statement(Statement::make_statement(call,', 2.598833643460815e-06], ['ne;', 2.598833643460815e-06], ['Expression::make_field_reference(rhs,', 2.598833643460815e-06], ['Expression::make_dereference(rhs,', 2.598833643460815e-06], ['Runtime::make_call(Runtime::MAPITERNEXT,', 2.598833643460815e-06], ['p1);', 2.598833643460815e-06], ['post->add_statement(Statement::make_statement(call,', 2.598833643460815e-06], ['For_range_statement::lower_range_channel(Gogo*,', 2.598833643460815e-06], ['go_assert(value_temp', 2.598833643460815e-06], ['Statement::make_temporary(Type::lookup_bool_type(),', 2.598833643460815e-06], ['iter_init->add_statement(ok_temp);', 2.598833643460815e-06], ['iref->set_is_lvalue();', 2.598833643460815e-06], ['oref->set_is_lvalue();', 2.598833643460815e-06], ['Statement::make_tuple_receive_assignment(iref,', 2.598833643460815e-06], ['Statement::make_break_statement(this->break_label(),', 2.598833643460815e-06], ['For_range_statement::break_label()', 2.598833643460815e-06], ['For_range_statement::continue_label()', 2.598833643460815e-06], ['For_range_statement::do_dump_statement(Ast_dump_context*', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->index_var_);', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->value_var_);', 2.598833643460815e-06], ['ast_dump_context->dump_expression(this->range_);', 2.598833643460815e-06], ['Statement::make_for_range_statement(Expression*', 2.598833643460815e-06], ['index_var,', 2.598833643460815e-06], ['For_range_statement(index_var,', 2.598833643460815e-06], ['brig-seg-inst-handler.cc', 2.598833643460815e-06], ['brig_seg_inst_handler::brig_seg_inst_handler', 2.598833643460815e-06], ['brig_seg_inst_handler::operator', 2.598833643460815e-06], ['BRIG_OPCODE_STOF)', 2.598833643460815e-06], ['BRIG_OPCODE_FTOS)', 2.598833643460815e-06], ['BRIG_OPCODE_NULLPTR)', 2.598833643460815e-06], ['BRIG_SEGMENT_FLAT', 2.598833643460815e-06], ['BRIG_OPCODE_SEGMENTP)', 2.598833643460815e-06], ['(inst.segment)', 2.598833643460815e-06], ['BRIG_SEGMENT_GLOBAL:', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_SEGMENTP_GLOBAL);', 2.598833643460815e-06], ['BRIG_SEGMENT_GROUP:', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_SEGMENTP_GROUP);', 2.598833643460815e-06], ['BRIG_SEGMENT_PRIVATE:', 2.598833643460815e-06], ['(BUILT_IN_HSAIL_SEGMENTP_PRIVATE);', 2.598833643460815e-06], ['savepos', 2.598833643460815e-06], ['sizeof(*savepos)', 2.598833643460815e-06], ['out!', 2.598833643460815e-06], ['printf("size', 2.598833643460815e-06], ['thingy', 2.598833643460815e-06], ['sizeof(*savepos));', 2.598833643460815e-06], ['parse.cc', 2.598833643460815e-06], ['Parse::Enclosing_var_comparison.', 2.598833643460815e-06], ['v2.', 2.598833643460815e-06], ['Parse::Enclosing_var_comparison::operator()(const', 2.598833643460815e-06], ['(v1.var()', 2.598833643460815e-06], ['v2.var())', 2.598833643460815e-06], ['n1(v1.var()->name());', 2.598833643460815e-06], ['n2(v2.var()->name());', 2.598833643460815e-06], ['n1.compare(n2);', 2.598833643460815e-06], ['Parse.', 2.598833643460815e-06], ['Parse::Parse(Lex*', 2.598833643460815e-06], ['lex,', 2.598833643460815e-06], ['lex_(lex),', 2.598833643460815e-06], ['token_(Token::make_invalid_token(Linemap::unknown_location())),', 2.598833643460815e-06], ['unget_token_(Token::make_invalid_token(Linemap::unknown_location())),', 2.598833643460815e-06], ['unget_token_valid_(false),', 2.598833643460815e-06], ['is_erroneous_function_(false),', 2.598833643460815e-06], ['break_stack_(NULL),', 2.598833643460815e-06], ['continue_stack_(NULL),', 2.598833643460815e-06], ['enclosing_vars_()', 2.598833643460815e-06], ['Parse::peek_token()', 2.598833643460815e-06], ['&this->unget_token_;', 2.598833643460815e-06], ['(this->token_.is_invalid())', 2.598833643460815e-06], ['Parse::advance_token()', 2.598833643460815e-06], ['(!this->token_.is_invalid())', 2.598833643460815e-06], ['Parse::unget_token(const', 2.598833643460815e-06], ['token)', 2.598833643460815e-06], ['go_assert(!this->unget_token_valid_);', 2.598833643460815e-06], ['this->unget_token_', 2.598833643460815e-06], ['token;', 2.598833643460815e-06], ['Parse::location()', 2.598833643460815e-06], ['Parse::identifier_list(Typed_identifier_list*', 2.598833643460815e-06], ['til)', 2.598833643460815e-06], ['til->push_back(Typed_identifier(name,', 2.598833643460815e-06], ['Parse::expression_list(Expression*', 2.598833643460815e-06], ['ret->push_back(first);', 2.598833643460815e-06], ['ret->push_back(this->expression(PRECEDENCE_NORMAL,', 2.598833643460815e-06], ['this->unget_token(Token::make_operator_token(OPERATOR_COMMA,', 2.598833643460815e-06], ['*PPACKAGE', 2.598833643460815e-06], ['Parse::qualified_ident(std::string*', 2.598833643460815e-06], ['ppackage)', 2.598833643460815e-06], ['(!token->is_op(OPERATOR_DOT))', 2.598833643460815e-06], ['!package->is_package())', 2.598833643460815e-06], ['IDENTIFIER;', 2.598833643460815e-06], ['both.', 2.598833643460815e-06], ['package->package_value()->note_usage(Gogo::unpack_hidden_name(name));', 2.598833643460815e-06], ['(package->name()', 2.598833643460815e-06], ['FunctionType', 2.598833643460815e-06], ['Parse::type()', 2.598833643460815e-06], ['this->array_type(false);', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_CHAN)', 2.598833643460815e-06], ['token->is_op(OPERATOR_CHANOP))', 2.598833643460815e-06], ['this->channel_type();', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_INTERFACE))', 2.598833643460815e-06], ['this->interface_type(true);', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_MAP))', 2.598833643460815e-06], ['this->map_type();', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_STRUCT))', 2.598833643460815e-06], ['this->pointer_type();', 2.598833643460815e-06], ['(!ret->is_error_type())', 2.598833643460815e-06], ['Parse::type_may_start_here()', 2.598833643460815e-06], ['(token->is_identifier()', 2.598833643460815e-06], ['token->is_op(OPERATOR_LSQUARE)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_CHAN)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_INTERFACE)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_FUNC)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_MAP)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_STRUCT)', 2.598833643460815e-06], ['token->is_op(OPERATOR_LPAREN));', 2.598833643460815e-06], ['MAY_BE_NIL', 2.598833643460815e-06], ['accepted,', 2.598833643460815e-06], ['Parse::type_name(bool', 2.598833643460815e-06], ['(!this->qualified_ident(&name,', 2.598833643460815e-06], ['&package))', 2.598833643460815e-06], ['package->package_value()->lookup(name);', 2.598833643460815e-06], ['package->name()', 2.598833643460815e-06], ["('.'", 2.598833643460815e-06], ['package->package_value()->pkgpath()', 2.598833643460815e-06], ['package->package_value()->lookup(s);', 2.598833643460815e-06], ['package->package_value();', 2.598833643460815e-06], ['packname(p->package_name());', 2.598833643460815e-06], ['packname(package->package_value()->package_name());', 2.598833643460815e-06], ['(!named_object->type_value()->is_visible())', 2.598833643460815e-06], ['Parse::array_type(bool', 2.598833643460815e-06], ['may_use_ellipsis)', 2.598833643460815e-06], ['(token->is_op(OPERATOR_RSQUARE))', 2.598833643460815e-06], ['(!token->is_op(OPERATOR_ELLIPSIS))', 2.598833643460815e-06], ['(may_use_ellipsis)', 2.598833643460815e-06], ['(element_type->is_error_type())', 2.598833643460815e-06], ['"map"', 2.598833643460815e-06], ['Parse::map_type()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_MAP));', 2.598833643460815e-06], ['(!this->advance_token()->is_op(OPERATOR_LSQUARE))', 2.598833643460815e-06], ['%<[%>");', 2.598833643460815e-06], ['(key_type->is_error_type()', 2.598833643460815e-06], ['value_type->is_error_type())', 2.598833643460815e-06], ['value_type,', 2.598833643460815e-06], ['"struct"', 2.598833643460815e-06], ['Parse::struct_type()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_STRUCT));', 2.598833643460815e-06], ['this->field_decl(sfl);', 2.598833643460815e-06], ['(pi->type()->is_error_type())', 2.598833643460815e-06], ['pi->type();', 2.598833643460815e-06], ['++pj)', 2.598833643460815e-06], ['(pi->field_name()', 2.598833643460815e-06], ['pj->field_name()', 2.598833643460815e-06], ['!Gogo::is_sink_name(pi->field_name()))', 2.598833643460815e-06], ['go_error_at(pi->location(),', 2.598833643460815e-06], ['Gogo::message_name(pi->field_name()).c_str());', 2.598833643460815e-06], ['(IdentifierList', 2.598833643460815e-06], ['TypeName)', 2.598833643460815e-06], ['Parse::field_decl(Struct_field_list*', 2.598833643460815e-06], ['sfl)', 2.598833643460815e-06], ['is_anonymous;', 2.598833643460815e-06], ['is_anonymous_pointer;', 2.598833643460815e-06], ['token->is_op(OPERATOR_RCURLY)', 2.598833643460815e-06], ['token->is_op(OPERATOR_DOT)', 2.598833643460815e-06], ['token->is_string());', 2.598833643460815e-06], ['(is_anonymous)', 2.598833643460815e-06], ['sfl->push_back(Struct_field(Typed_identifier("",', 2.598833643460815e-06], ['p->set_type(type);', 2.598833643460815e-06], ['sfl->push_back(Struct_field(*p));', 2.598833643460815e-06], ['Parse::pointer_type()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_MULT));', 2.598833643460815e-06], ['Parse::channel_type()', 2.598833643460815e-06], ['(!this->advance_token()->is_keyword(KEYWORD_CHAN))', 2.598833643460815e-06], ['%<chan%>");', 2.598833643460815e-06], ['go_assert(token->is_keyword(KEYWORD_CHAN));', 2.598833643460815e-06], ['(this->advance_token()->is_op(OPERATOR_CHANOP))', 2.598833643460815e-06], ['Better', 2.598833643460815e-06], ['(!this->type_may_start_here())', 2.598833643460815e-06], ['Type::make_channel_type(send,', 2.598833643460815e-06], ['Parse::check_signature_names(const', 2.598833643460815e-06], ['Parse::Names*', 2.598833643460815e-06], ['names)', 2.598833643460815e-06], ['Typed_identifier*>', 2.598833643460815e-06], ['std::make_pair(p->name(),', 2.598833643460815e-06], ['std::pair<Parse::Names::iterator,', 2.598833643460815e-06], ['names->insert(val);', 2.598833643460815e-06], ['go_inform(ins.first->second->location(),', 2.598833643460815e-06], ['RECEIVER', 2.598833643460815e-06], ['Parse::signature(Typed_identifier*', 2.598833643460815e-06], ['params_ok', 2.598833643460815e-06], ['this->parameters(&params,', 2.598833643460815e-06], ['&is_varargs);', 2.598833643460815e-06], ['(this->peek_token()->is_op(OPERATOR_LPAREN)', 2.598833643460815e-06], ['this->type_may_start_here())', 2.598833643460815e-06], ['(!this->result(&results))', 2.598833643460815e-06], ['(!params_ok)', 2.598833643460815e-06], ['Parse::Names', 2.598833643460815e-06], ['names;', 2.598833643460815e-06], ['names[receiver->name()]', 2.598833643460815e-06], ['this->check_signature_names(params,', 2.598833643460815e-06], ['this->check_signature_names(results,', 2.598833643460815e-06], ['Parse::parameters(Typed_identifier_list**', 2.598833643460815e-06], ['pparams,', 2.598833643460815e-06], ['this->parameter_list(is_varargs);', 2.598833643460815e-06], ['parameter_list.', 2.598833643460815e-06], ['*IS_VARARGS', 2.598833643460815e-06], ['ellipsis.', 2.598833643460815e-06], ['IS_VARARGS', 2.598833643460815e-06], ['Parse::parameter_list(bool*', 2.598833643460815e-06], ['comma,', 2.598833643460815e-06], ['lookahead', 2.598833643460815e-06], ['parameters_have_names;', 2.598833643460815e-06], ["'*'.", 2.598833643460815e-06], ['gather', 2.598833643460815e-06], ['commas', 2.598833643460815e-06], ['(just_saw_comma)', 2.598833643460815e-06], ['(this->peek_token()->is_op(OPERATOR_DOT))', 2.598833643460815e-06], ['ret->pop_back();', 2.598833643460815e-06], ['",",', 2.598833643460815e-06], ['".",', 2.598833643460815e-06], ['(parameters_have_names)', 2.598833643460815e-06], ['go_assert(!just_saw_comma);', 2.598833643460815e-06], ['ID1,', 2.598833643460815e-06], ['xxx.', 2.598833643460815e-06], ['ret->size();', 2.598833643460815e-06], ['ret->set_type(i,', 2.598833643460815e-06], ['ret->begin();', 2.598833643460815e-06], ['ret->end();', 2.598833643460815e-06], ['this->gogo_->lookup(p->name(),', 2.598833643460815e-06], ['this->gogo_->add_unknown_name(p->name(),', 2.598833643460815e-06], ['(no->is_unknown()', 2.598833643460815e-06], ['tret->push_back(Typed_identifier("",', 2.598833643460815e-06], ['tret;', 2.598833643460815e-06], ['(!just_saw_comma', 2.598833643460815e-06], ['mix_error', 2.598833643460815e-06], ['*is_varargs)', 2.598833643460815e-06], ['(mix_error)', 2.598833643460815e-06], ['named/anonymous', 2.598833643460815e-06], ['mix");', 2.598833643460815e-06], ['Parse::parameter_decl(bool', 2.598833643460815e-06], ['parameters_have_names,', 2.598833643460815e-06], ['mix_error,', 2.598833643460815e-06], ['saw_error)', 2.598833643460815e-06], ['(!parameters_have_names)', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_RPAREN)))', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_RPAREN)', 2.598833643460815e-06], ['this->identifier_list(til);', 2.598833643460815e-06], ['new_count', 2.598833643460815e-06], ['(new_count', 2.598833643460815e-06], ['orig_count;', 2.598833643460815e-06], ['new_count;', 2.598833643460815e-06], ['til->set_type(i,', 2.598833643460815e-06], ['Parse::result(Typed_identifier_list**', 2.598833643460815e-06], ['presults)', 2.598833643460815e-06], ['this->parameters(presults,', 2.598833643460815e-06], ['Parse::block()', 2.598833643460815e-06], ['hopes', 2.598833643460815e-06], ['lots', 2.598833643460815e-06], ['++nest;', 2.598833643460815e-06], ['--nest;', 2.598833643460815e-06], ['(nest', 2.598833643460815e-06], ['"interface"', 2.598833643460815e-06], ['Parse::interface_type(bool', 2.598833643460815e-06], ['record)', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_INTERFACE));', 2.598833643460815e-06], ['(!this->advance_token()->is_op(OPERATOR_RCURLY))', 2.598833643460815e-06], ['Type::make_empty_interface_type(location);', 2.598833643460815e-06], ['(record)', 2.598833643460815e-06], ['this->gogo_->record_interface_type(ret);', 2.598833643460815e-06], ['Parse::method_spec(Typed_identifier_list*', 2.598833643460815e-06], ['(this->advance_token()->is_op(OPERATOR_LPAREN))', 2.598833643460815e-06], ['MethodName.', 2.598833643460815e-06], ['"methods', 2.598833643460815e-06], ['non-blank', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_RCURLY)))', 2.598833643460815e-06], ['"name', 2.598833643460815e-06], ['!token->is_op(OPERATOR_SEMICOLON)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_RCURLY))', 2.598833643460815e-06], ['Interface_type::do_verify.', 2.598833643460815e-06], ['Parse::declaration()', 2.598833643460815e-06], ['this->lex_->get_and_clear_pragmas();', 2.598833643460815e-06], ['!token->is_keyword(KEYWORD_FUNC)', 2.598833643460815e-06], ['!token->is_keyword(KEYWORD_TYPE))', 2.598833643460815e-06], ['go_warning_at(token->location(),', 2.598833643460815e-06], ['non-function");', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_CONST))', 2.598833643460815e-06], ['this->const_decl();', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_TYPE))', 2.598833643460815e-06], ['this->type_decl(pragmas);', 2.598833643460815e-06], ['this->function_decl(pragmas);', 2.598833643460815e-06], ['Parse::declaration_may_start_here()', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_CONST)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_TYPE)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_VAR)', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_FUNC));', 2.598833643460815e-06], ['Decl<P>', 2.598833643460815e-06], ['Parse::decl(void', 2.598833643460815e-06], ['group");', 2.598833643460815e-06], ['this->list(pfn,', 2.598833643460815e-06], ["')'.", 2.598833643460815e-06], ['Parse::list(void', 2.598833643460815e-06], ['follow_is_paren)', 2.598833643460815e-06], ['follow_is_paren', 2.598833643460815e-06], ['comma");', 2.598833643460815e-06], ['(this->advance_token()->is_op(follow))', 2.598833643460815e-06], ['Parse::const_decl()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_CONST));', 2.598833643460815e-06], ['last_type', 2.598833643460815e-06], ['last_expr_list', 2.598833643460815e-06], ['++iota;', 2.598833643460815e-06], ['(last_expr_list', 2.598833643460815e-06], ['last_expr_list;', 2.598833643460815e-06], ['Parse::const_spec(int', 2.598833643460815e-06], ['iota,', 2.598833643460815e-06], ['last_type,', 2.598833643460815e-06], ['Expression_list**', 2.598833643460815e-06], ['last_expr_list)', 2.598833643460815e-06], ['(this->type_may_start_here())', 2.598833643460815e-06], ['*expr_list;', 2.598833643460815e-06], ['*last_type;', 2.598833643460815e-06], ['(*last_expr_list)->begin();', 2.598833643460815e-06], ['(*last_expr_list)->end();', 2.598833643460815e-06], ['expr_list->push_back((*p)->copy());', 2.598833643460815e-06], ['*last_expr_list;', 2.598833643460815e-06], ['expr_list;', 2.598833643460815e-06], ['expr_list->begin();', 2.598833643460815e-06], ['pi->set_type(type);', 2.598833643460815e-06], ['(!Gogo::is_sink_name(pi->name()))', 2.598833643460815e-06], ['this->gogo_->add_constant(*pi,', 2.598833643460815e-06], ['".$sinkconst%d",', 2.598833643460815e-06], ['ti(std::string(buf),', 2.598833643460815e-06], ['pi->location());', 2.598833643460815e-06], ['this->gogo_->add_constant(ti,', 2.598833643460815e-06], ['no->const_value()->set_is_sink();', 2.598833643460815e-06], ['Decl<TypeSpec>', 2.598833643460815e-06], ['Parse::type_decl(unsigned', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_TYPE));', 2.598833643460815e-06], ['this->decl(&Parse::type_spec,', 2.598833643460815e-06], ['TypeSpec', 2.598833643460815e-06], ['["="]', 2.598833643460815e-06], ['Parse::type_spec(void*,', 2.598833643460815e-06], ['(token->is_op(OPERATOR_EQ))', 2.598833643460815e-06], ['this->gogo_->declare_type(name,', 2.598833643460815e-06], ['token->is_keyword(KEYWORD_INTERFACE))', 2.598833643460815e-06], ['Parse::interface_type', 2.598833643460815e-06], ['explicity', 2.598833643460815e-06], ['this->interface_type(false);', 2.598833643460815e-06], ['(named_type->is_type_declaration())', 2.598833643460815e-06], ['(ftype->forward_declaration_type()', 2.598833643460815e-06], ['(ftype->forward_declaration_type()->named_object()', 2.598833643460815e-06], ['named_type))', 2.598833643460815e-06], ['Type::make_named_type(named_type,', 2.598833643460815e-06], ['nt->set_is_alias();', 2.598833643460815e-06], ['this->gogo_->define_type(named_type,', 2.598833643460815e-06], ['go_assert(named_type->package()', 2.598833643460815e-06], ['GOPRAGMA_NOTINHEAP)', 2.598833643460815e-06], ['nt->set_not_in_heap();', 2.598833643460815e-06], ['~GOPRAGMA_NOTINHEAP;', 2.598833643460815e-06], ['this->gogo_->add_type(name,', 2.598833643460815e-06], ['"var"', 2.598833643460815e-06], ['Decl<VarSpec>', 2.598833643460815e-06], ['Parse::var_decl()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_VAR));', 2.598833643460815e-06], ['this->decl(&Parse::var_spec,', 2.598833643460815e-06], ['VarSpec', 2.598833643460815e-06], ['Parse::var_spec(void*,', 2.598833643460815e-06], ['var");', 2.598833643460815e-06], ['(!this->peek_token()->is_op(OPERATOR_EQ)', 2.598833643460815e-06], ['TIL', 2.598833643460815e-06], ['Parse::init_vars(const', 2.598833643460815e-06], ['til->size()', 2.598833643460815e-06], ['(this->init_vars_from_call(til,', 2.598833643460815e-06], ['(this->init_vars_from_map(til,', 2.598833643460815e-06], ['(this->init_vars_from_receive(til,', 2.598833643460815e-06], ['(this->init_vars_from_type_guard(til,', 2.598833643460815e-06], ['til->size())', 2.598833643460815e-06], ['(init->empty()', 2.598833643460815e-06], ['!init->front()->is_error_expression())', 2.598833643460815e-06], ['"wrong', 2.598833643460815e-06], ['initializations");', 2.598833643460815e-06], ['accidentally', 2.598833643460815e-06], ['init->begin();', 2.598833643460815e-06], ['++pexpr;', 2.598833643460815e-06], ['this->finish_init_vars(vars,', 2.598833643460815e-06], ['Parse::init_vars_from_call(const', 2.598833643460815e-06], ['might.', 2.598833643460815e-06], ['call->set_expected_result_count(vars->size());', 2.598833643460815e-06], ['ivars', 2.598833643460815e-06], ['vars->end();', 2.598833643460815e-06], ['this->init_var(*pv,', 2.598833643460815e-06], ['ivars,', 2.598833643460815e-06], ['ivals);', 2.598833643460815e-06], ['(this->gogo_->in_global_scope()', 2.598833643460815e-06], ['(first_var', 2.598833643460815e-06], ['relationship', 2.598833643460815e-06], ['way,', 2.598833643460815e-06], ['(no->is_redefinition())', 2.598833643460815e-06], ['this->gogo_->record_var_depends_on(no->var_value(),', 2.598833643460815e-06], ['first_var);', 2.598833643460815e-06], ['this->finish_init_vars(ivars,', 2.598833643460815e-06], ['Parse::init_vars_from_map(const', 2.598833643460815e-06], ['expr->index_expression();', 2.598833643460815e-06], ['present_var', 2.598833643460815e-06], ['Statement::make_tuple_map_assignment(val_var,', 2.598833643460815e-06], ['present_var,', 2.598833643460815e-06], ['Parse::init_vars_from_receive(const', 2.598833643460815e-06], ['expr->receive_expression();', 2.598833643460815e-06], ['receive.', 2.598833643460815e-06], ['received_var', 2.598833643460815e-06], ['Statement::make_tuple_receive_assignment(val_var,', 2.598833643460815e-06], ['received_var,', 2.598833643460815e-06], ['receive->channel(),', 2.598833643460815e-06], ['Parse::init_vars_from_type_guard(const', 2.598833643460815e-06], ['type_guard', 2.598833643460815e-06], ['expr->type_guard_expression();', 2.598833643460815e-06], ['ok_var', 2.598833643460815e-06], ['texpr', 2.598833643460815e-06], ['Statement::make_tuple_type_guard_assignment(val_var,', 2.598833643460815e-06], ['ok_var,', 2.598833643460815e-06], ['texpr,', 2.598833643460815e-06], ['*IS_NEW', 2.598833643460815e-06], ['redeclaration.', 2.598833643460815e-06], ['Parse::init_var(const', 2.598833643460815e-06], ['type_from_init,', 2.598833643460815e-06], ['is_new,', 2.598833643460815e-06], ['tid.location();', 2.598833643460815e-06], ['(Gogo::is_sink_name(tid.name()))', 2.598833643460815e-06], ['(this->gogo_->in_global_scope())', 2.598833643460815e-06], ['"sink$%d",', 2.598833643460815e-06], ['this->gogo_->add_type_to_verify(type);', 2.598833643460815e-06], ['this->gogo_->lookup_in_block(tid.name());', 2.598833643460815e-06], ['no->is_result_variable()))', 2.598833643460815e-06], ['x.(int).', 2.598833643460815e-06], ['go_assert(vars', 2.598833643460815e-06], ['vars->push_back(Expression::make_var_reference(no,', 2.598833643460815e-06], ['vals->push_back(init);', 2.598833643460815e-06], ['*is_new', 2.598833643460815e-06], ['this->gogo_->in_global_scope(),', 2.598833643460815e-06], ['this->gogo_->add_variable(tid.name(),', 2.598833643460815e-06], ['Parse::create_dummy_global(Type*', 2.598833643460815e-06], ['"_.%d",', 2.598833643460815e-06], [':=.', 2.598833643460815e-06], ['a.', 2.598833643460815e-06], ['Parse::finish_init_vars(Expression_list*', 2.598833643460815e-06], ['(vars->empty())', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_assignment(vars->front(),', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_tuple_assignment(vars,', 2.598833643460815e-06], ['SimpleVarDecl', 2.598833643460815e-06], ['Parse::simple_var_decl_or_assignment(const', 2.598833643460815e-06], ['std::set<std::string>', 2.598833643460815e-06], ['uniq_idents;', 2.598833643460815e-06], ['uniq_idents.insert(name);', 2.598833643460815e-06], ['dup_name;', 2.598833643460815e-06], ['dup_loc;', 2.598833643460815e-06], ['go_assert(p_type_switch', 2.598833643460815e-06], ['std::pair<std::set<std::string>::iterator,', 2.598833643460815e-06], ['ins;', 2.598833643460815e-06], ['go_error_at(id_location,', 2.598833643460815e-06], ['dup_name', 2.598833643460815e-06], ['dup_loc', 2.598833643460815e-06], ['id_location;', 2.598833643460815e-06], ['TIL.', 2.598833643460815e-06], ['(!this->peek_token()->is_op(OPERATOR_COLONEQ))', 2.598833643460815e-06], ['exprs->push_back(this->id_to_expression(p->name(),', 2.598833643460815e-06], ['p->location(),', 2.598833643460815e-06], ['more_exprs', 2.598833643460815e-06], ['more_exprs->begin();', 2.598833643460815e-06], ['more_exprs->end();', 2.598833643460815e-06], ['exprs->push_back(*p);', 2.598833643460815e-06], ['more_exprs;', 2.598833643460815e-06], ['this->tuple_assignment(exprs,', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_COLONEQ));', 2.598833643460815e-06], ['(!dup_name.empty())', 2.598833643460815e-06], ['go_error_at(dup_loc,', 2.598833643460815e-06], ['dup_name.c_str());', 2.598833643460815e-06], ['is_type_switch', 2.598833643460815e-06], ['&is_type_switch,', 2.598833643460815e-06], ['(is_type_switch)', 2.598833643460815e-06], ['p_type_switch->found', 2.598833643460815e-06], ['p_type_switch->name', 2.598833643460815e-06], ['init->push_back(expr);', 2.598833643460815e-06], ['Deprecated', 2.598833643460815e-06], ['extension:', 2.598833643460815e-06], ['__asm__', 2.598833643460815e-06], ['asm.', 2.598833643460815e-06], ['date.', 2.598833643460815e-06], ['PRAGMAS', 2.598833643460815e-06], ['bitset', 2.598833643460815e-06], ['Parse::function_decl(unsigned', 2.598833643460815e-06], ['extern_name', 2.598833643460815e-06], ['this->lex_->extern_name();', 2.598833643460815e-06], ['this->signature(rec,', 2.598833643460815e-06], ['(this->peek_token()->is_keyword(KEYWORD_ASM))', 2.598833643460815e-06], ['(!this->advance_token()->is_op(OPERATOR_LPAREN))', 2.598833643460815e-06], ['token->string_value();', 2.598833643460815e-06], ['(named_object->is_function_declaration())', 2.598833643460815e-06], ['named_object->func_declaration_value()->set_asm_name(asm_name);', 2.598833643460815e-06], ['opening', 2.598833643460815e-06], ['bit;', 2.598833643460815e-06], ['decl_ok;', 2.598833643460815e-06], ['func_ok;', 2.598833643460815e-06], ['method_ok;', 2.598833643460815e-06], ['pragma_check[]', 2.598833643460815e-06], ['GOPRAGMA_NOINTERFACE,', 2.598833643460815e-06], ['"nointerface",', 2.598833643460815e-06], ['GOPRAGMA_NOESCAPE,', 2.598833643460815e-06], ['"noescape",', 2.598833643460815e-06], ['GOPRAGMA_NORACE,', 2.598833643460815e-06], ['"norace",', 2.598833643460815e-06], ['GOPRAGMA_NOSPLIT,', 2.598833643460815e-06], ['"nosplit",', 2.598833643460815e-06], ['GOPRAGMA_NOINLINE,', 2.598833643460815e-06], ['"noinline",', 2.598833643460815e-06], ['GOPRAGMA_SYSTEMSTACK,', 2.598833643460815e-06], ['"systemstack",', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIER,', 2.598833643460815e-06], ['"nowritebarrier",', 2.598833643460815e-06], ['GOPRAGMA_NOWRITEBARRIERREC,', 2.598833643460815e-06], ['"nowritebarrierrec",', 2.598833643460815e-06], ['GOPRAGMA_YESWRITEBARRIERREC,', 2.598833643460815e-06], ['"yeswritebarrierrec",', 2.598833643460815e-06], ['GOPRAGMA_CGOUNSAFEARGS,', 2.598833643460815e-06], ['"cgo_unsafe_args",', 2.598833643460815e-06], ['GOPRAGMA_UINTPTRESCAPES,', 2.598833643460815e-06], ['"uintptrescapes",', 2.598833643460815e-06], ['is_decl', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_LCURLY);', 2.598833643460815e-06], ['sizeof(pragma_check)', 2.598833643460815e-06], ['sizeof(pragma_check[0]);', 2.598833643460815e-06], ['pragma_check[i].bit)', 2.598833643460815e-06], ['(pragma_check[i].decl_ok)', 2.598833643460815e-06], ['declaration"),', 2.598833643460815e-06], ['(pragma_check[i].func_ok)', 2.598833643460815e-06], ['(pragma_check[i].method_ok)', 2.598833643460815e-06], ['pragma_check[i].bit;', 2.598833643460815e-06], ['type-checking', 2.598833643460815e-06], ['".$sinkfndecl%d",', 2.598833643460815e-06], ['std::string(buf);', 2.598833643460815e-06], ['(expected_receiver', 2.598833643460815e-06], ['(!extern_name.empty()', 2.598833643460815e-06], ['named_object->func_declaration_value();', 2.598833643460815e-06], ['fd->set_asm_name(extern_name);', 2.598833643460815e-06], ['named_object->func_declaration_value()->set_pragmas(pragmas);', 2.598833643460815e-06], ['this->gogo_->pack_hidden_name("_",', 2.598833643460815e-06], ['this->gogo_->start_function(name,', 2.598833643460815e-06], ['!this->is_erroneous_function_', 2.598833643460815e-06], ['named_object->is_function())', 2.598833643460815e-06], ['named_object->func_value()->set_pragmas(pragmas);', 2.598833643460815e-06], ['Parse::receiver()', 2.598833643460815e-06], ['(!this->parameters(&til,', 2.598833643460815e-06], ['til->empty())', 2.598833643460815e-06], ['receivers");', 2.598833643460815e-06], ['MethodExpr', 2.598833643460815e-06], ['int_lit', 2.598833643460815e-06], ['float_lit', 2.598833643460815e-06], ['imaginary_lit', 2.598833643460815e-06], ['char_lit', 2.598833643460815e-06], ['Parse::operand(bool', 2.598833643460815e-06], ['this->gogo_->lookup(packed,', 2.598833643460815e-06], ['named_object->is_package())', 2.598833643460815e-06], ['(!this->advance_token()->is_op(OPERATOR_DOT)', 2.598833643460815e-06], ['!this->advance_token()->is_identifier())', 2.598833643460815e-06], ['named_object->package_value();', 2.598833643460815e-06], ['package->note_usage(id);', 2.598833643460815e-06], ['package->lookup(packed);', 2.598833643460815e-06], ['named_object->is_type()', 2.598833643460815e-06], ['!named_object->type_value()->is_visible())', 2.598833643460815e-06], ['Gogo::message_name(package->package_name()).c_str(),', 2.598833643460815e-06], ['Gogo::message_name(package->package_name());', 2.598833643460815e-06], ['n2', 2.598833643460815e-06], ['(!is_exported)', 2.598833643460815e-06], ['"%<%s.%s%>"),', 2.598833643460815e-06], ['this->gogo_->add_unknown_name(packed,', 2.598833643460815e-06], ['Expression::make_type(named_object->type_value(),', 2.598833643460815e-06], ['(may_be_sink)', 2.598833643460815e-06], ['Expression::make_string(token->string_value(),', 2.598833643460815e-06], ['Expression::make_character(token->character_value(),', 2.598833643460815e-06], ['Expression::make_integer_z(token->integer_value(),', 2.598833643460815e-06], ['Expression::make_float(token->float_value(),', 2.598833643460815e-06], ['mpfr_init_set_ui(zero,', 2.598833643460815e-06], ['*token->imaginary_value(),', 2.598833643460815e-06], ['mpfr_clear(zero);', 2.598833643460815e-06], ['Expression::make_complex(&val,', 2.598833643460815e-06], ['this->function_lit();', 2.598833643460815e-06], ['Expression::make_type(this->type(),', 2.598833643460815e-06], ['Expression::make_type(this->array_type(true),', 2.598833643460815e-06], ['operand");', 2.598833643460815e-06], ['Parse::enclosing_var_reference(Named_object*', 2.598833643460815e-06], ['go_assert(var->is_variable()', 2.598833643460815e-06], ['var->is_result_variable());', 2.598833643460815e-06], ['this->mark_var_used(var);', 2.598833643460815e-06], ['this_function', 2.598833643460815e-06], ['this_function->func_value()->closure_var();', 2.598833643460815e-06], ['ev(var,', 2.598833643460815e-06], ['this->enclosing_vars_.size()', 2.598833643460815e-06], ['std::pair<Enclosing_vars::iterator,', 2.598833643460815e-06], ['this->enclosing_vars_.insert(ev);', 2.598833643460815e-06], ['this_function->func_value()->add_closure_field(var,', 2.598833643460815e-06], ['Expression::make_var_reference(closure,', 2.598833643460815e-06], ['Expression::make_dereference(closure_ref,', 2.598833643460815e-06], ['Expression::make_field_reference(closure_ref,', 2.598833643460815e-06], ['ins.first->index(),', 2.598833643460815e-06], ['Expression::make_enclosing_var_reference(e,', 2.598833643460815e-06], ['LiteralValue.', 2.598833643460815e-06], ['"nil".', 2.598833643460815e-06], ['steps', 2.598833643460815e-06], ['[][]int{{1}}', 2.598833643460815e-06], ['[][][]int{{{1}}}', 2.598833643460815e-06], ['Parse::composite_lit(Type*', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_LCURLY));', 2.598833643460815e-06], ['sure--it', 2.598833643460815e-06], ['this->id_to_expression(gogo->pack_hidden_name(identifier,', 2.598833643460815e-06], ['is_exported),', 2.598833643460815e-06], ['(!token->is_op(OPERATOR_COLON))', 2.598833643460815e-06], ['(has_keys)', 2.598833643460815e-06], ['vals->push_back(NULL);', 2.598833643460815e-06], ['(is_type_omitted)', 2.598833643460815e-06], ['val->complit()->update_key_path(depth);', 2.598833643460815e-06], ['(!has_keys', 2.598833643460815e-06], ['newvals', 2.598833643460815e-06], ['newvals->push_back(NULL);', 2.598833643460815e-06], ['newvals->push_back(*p);', 2.598833643460815e-06], ['newvals;', 2.598833643460815e-06], ['(val->unknown_expression()', 2.598833643460815e-06], ['val->unknown_expression()->set_is_composite_literal_key();', 2.598833643460815e-06], ['(!is_name)', 2.598833643460815e-06], ['%<,%>', 2.598833643460815e-06], ['!token->is_op(OPERATOR_RCURLY)))', 2.598833643460815e-06], ['++depth;', 2.598833643460815e-06], ['--depth;', 2.598833643460815e-06], ['Parse::function_lit()', 2.598833643460815e-06], ['Enclosing_vars', 2.598833643460815e-06], ['hold_enclosing_vars;', 2.598833643460815e-06], ["'{'.", 2.598833643460815e-06], ['(fntype_is_error)', 2.598833643460815e-06], ['hold_break_stack', 2.598833643460815e-06], ['hold_continue_stack', 2.598833643460815e-06], ['this->gogo_->start_function("",', 2.598833643460815e-06], ['hold_break_stack;', 2.598833643460815e-06], ['hold_continue_stack;', 2.598833643460815e-06], ['this->create_closure(no,', 2.598833643460815e-06], ['&hold_enclosing_vars,', 2.598833643460815e-06], ['ENCLOSING_VARS,', 2.598833643460815e-06], ['Parse::create_closure(Named_object*', 2.598833643460815e-06], ['Enclosing_vars*', 2.598833643460815e-06], ['enclosing_vars,', 2.598833643460815e-06], ['(enclosing_vars->empty())', 2.598833643460815e-06], ['enclosing_var_count', 2.598833643460815e-06], ['enclosing_vars->size();', 2.598833643460815e-06], ['std::vector<Enclosing_var>', 2.598833643460815e-06], ['ev(enclosing_var_count);', 2.598833643460815e-06], ['(Enclosing_vars::const_iterator', 2.598833643460815e-06], ['enclosing_vars->begin();', 2.598833643460815e-06], ['enclosing_vars->end();', 2.598833643460815e-06], ['ev[p->index()', 2.598833643460815e-06], ["closure's", 2.598833643460815e-06], ['enclosing_function', 2.598833643460815e-06], ['initializer->push_back(Expression::make_func_code_reference(function,', 2.598833643460815e-06], ['enclosing_var_count;', 2.598833643460815e-06], ['go_assert(ev[i].index()', 2.598833643460815e-06], ['ev[i].var();', 2.598833643460815e-06], ['(ev[i].in_function()', 2.598833643460815e-06], ['enclosing_function)', 2.598833643460815e-06], ['this->enclosing_var_reference(ev[i].in_function(),', 2.598833643460815e-06], ['refaddr', 2.598833643460815e-06], ['initializer->push_back(refaddr);', 2.598833643460815e-06], ['closure_var', 2.598833643460815e-06], ['function->func_value()->closure_var();', 2.598833643460815e-06], ['closure_var->var_value()->type()->deref()->struct_type();', 2.598833643460815e-06], ['cv', 2.598833643460815e-06], ['Expression::make_heap_expression(cv,', 2.598833643460815e-06], ['Parse::primary_expr(bool', 2.598833643460815e-06], ['operand_is_parenthesized', 2.598833643460815e-06], ['this->operand(may_be_sink,', 2.598833643460815e-06], ['&operand_is_parenthesized);', 2.598833643460815e-06], ['operand_is_parenthesized;', 2.598833643460815e-06], ['(may_be_composite_lit', 2.598833643460815e-06], ['!operand_is_parenthesized', 2.598833643460815e-06], ['ret->unknown_expression()', 2.598833643460815e-06], ['ret->unknown_expression()->named_object();', 2.598833643460815e-06], ['parentheses,', 2.598833643460815e-06], ['"((uint))(1)".', 2.598833643460815e-06], ['(ret->is_type_expression())', 2.598833643460815e-06], ['(!may_be_composite_lit)', 2.598833643460815e-06], ['t->forward_declaration_type()', 2.598833643460815e-06], ['_("parentheses', 2.598833643460815e-06], ['"literal', 2.598833643460815e-06], ['ambiguity"));', 2.598833643460815e-06], ['(operand_is_parenthesized)', 2.598833643460815e-06], ['parenthesize', 2.598833643460815e-06], ['this->composite_lit(ret->type(),', 2.598833643460815e-06], ['(this->peek_token()->is_op(OPERATOR_ELLIPSIS))', 2.598833643460815e-06], ['conversion");', 2.598833643460815e-06], ['t->array_type()->length()', 2.598833643460815e-06], ['t->array_type()->length()->is_nil_expression())', 2.598833643460815e-06], ['go_error_at(ret->location(),', 2.598833643460815e-06], ['this->call(this->verify_not_sink(ret));', 2.598833643460815e-06], ['this->selector(this->verify_not_sink(ret),', 2.598833643460815e-06], ['is_type_switch);', 2.598833643460815e-06], ['this->index(this->verify_not_sink(ret));', 2.598833643460815e-06], ['(whole_is_parenthesized', 2.598833643460815e-06], ['QualifiedIdent,', 2.598833643460815e-06], ['Parse::selector(Expression*', 2.598833643460815e-06], ['is_type_switch)', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_DOT));', 2.598833643460815e-06], ['(token->identifier()', 2.598833643460815e-06], ['Expression::make_selector(left,', 2.598833643460815e-06], ['(!this->peek_token()->is_keyword(KEYWORD_TYPE))', 2.598833643460815e-06], ['*is_type_switch', 2.598833643460815e-06], ['%<.(type)%>', 2.598833643460815e-06], ['Expression::make_type_guard(left,', 2.598833643460815e-06], ['Parse::index(Expression*', 2.598833643460815e-06], ['"middle', 2.598833643460815e-06], ['"final', 2.598833643460815e-06], ['Expression::make_index(expr,', 2.598833643460815e-06], ['Parse::call(Expression*', 2.598833643460815e-06], ['func)', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_LPAREN));', 2.598833643460815e-06], ['(token->is_op(OPERATOR_ELLIPSIS))', 2.598833643460815e-06], ['(func->is_error_expression())', 2.598833643460815e-06], ['func->location());', 2.598833643460815e-06], ['unqualified', 2.598833643460815e-06], ['Parse::id_to_expression(const', 2.598833643460815e-06], ['is_lhs)', 2.598833643460815e-06], ['is_lhs,', 2.598833643460815e-06], ['(!is_lhs)', 2.598833643460815e-06], ['named_object->package()->note_fake_usage(ue);', 2.598833643460815e-06], ['PRECEDENCE', 2.598833643460815e-06], ['precedence', 2.598833643460815e-06], ['Parse::expression(Precedence', 2.598833643460815e-06], ['precedence,', 2.598833643460815e-06], ['*is_parenthesized)', 2.598833643460815e-06], ['this->unary_expr(may_be_sink,', 2.598833643460815e-06], ['(token->classification()', 2.598833643460815e-06], ['Token::TOKEN_OPERATOR)', 2.598833643460815e-06], ['Precedence', 2.598833643460815e-06], ['right_precedence;', 2.598833643460815e-06], ['PRECEDENCE_OROR;', 2.598833643460815e-06], ['PRECEDENCE_ANDAND;', 2.598833643460815e-06], ['PRECEDENCE_RELOP;', 2.598833643460815e-06], ['PRECEDENCE_ADDOP;', 2.598833643460815e-06], ['PRECEDENCE_MULOP;', 2.598833643460815e-06], ['PRECEDENCE_INVALID;', 2.598833643460815e-06], ['(right_precedence', 2.598833643460815e-06], ['PRECEDENCE_INVALID)', 2.598833643460815e-06], ['binop_location', 2.598833643460815e-06], ['(precedence', 2.598833643460815e-06], ['right_precedence)', 2.598833643460815e-06], ['this->verify_not_sink(left);', 2.598833643460815e-06], ['this->expression(right_precedence,', 2.598833643460815e-06], ['binop_location);', 2.598833643460815e-06], ['Parse::expression_may_start_here()', 2.598833643460815e-06], ['Token::TOKEN_INVALID:', 2.598833643460815e-06], ['Token::TOKEN_EOF:', 2.598833643460815e-06], ['unary_op', 2.598833643460815e-06], ['Parse::unary_expr(bool', 2.598833643460815e-06], ['chan.', 2.598833643460815e-06], ['choices', 2.598833643460815e-06], ['int:', 2.598833643460815e-06], ['Receive', 2.598833643460815e-06], ['int):', 2.598833643460815e-06], ['(x))', 2.598833643460815e-06], ['int).', 2.598833643460815e-06], ['(this->advance_token()->is_keyword(KEYWORD_CHAN))', 2.598833643460815e-06], ['this->primary_expr(false,', 2.598833643460815e-06], ['(!expr->is_type_expression())', 2.598833643460815e-06], ['(expr->type()->is_error_type())', 2.598833643460815e-06], ['TYPE",', 2.598833643460815e-06], ['expr->type()->channel_type();', 2.598833643460815e-06], ['ct->element_type());', 2.598833643460815e-06], ['TYPE).', 2.598833643460815e-06], ['this->reassociate_chan_direction(ct,', 2.598833643460815e-06], ['this->unget_token(Token::make_operator_token(OPERATOR_CHANOP,', 2.598833643460815e-06], ['(token->is_op(OPERATOR_PLUS)', 2.598833643460815e-06], ['token->is_op(OPERATOR_MINUS)', 2.598833643460815e-06], ['token->is_op(OPERATOR_NOT)', 2.598833643460815e-06], ['token->is_op(OPERATOR_XOR)', 2.598833643460815e-06], ['token->is_op(OPERATOR_AND))', 2.598833643460815e-06], ['this->unary_expr(false,', 2.598833643460815e-06], ['expr->is_composite_literal())', 2.598833643460815e-06], ['OPERATOR_CHANOP)', 2.598833643460815e-06], ['this->primary_expr(may_be_sink,', 2.598833643460815e-06], ['obscure', 2.598833643460815e-06], ['unary_expr', 2.598833643460815e-06], ['(chan', 2.598833643460815e-06], ['reassociate.', 2.598833643460815e-06], ['Parse::reassociate_chan_direction(Channel_type', 2.598833643460815e-06], ['*ct,', 2.598833643460815e-06], ['ct->element_type()->channel_type();', 2.598833643460815e-06], ['(ele', 2.598833643460815e-06], ['error");', 2.598833643460815e-06], ['ele;', 2.598833643460815e-06], ['(ele->may_send())', 2.598833643460815e-06], ['ele->element_type());', 2.598833643460815e-06], ['this->reassociate_chan_direction(ele,', 2.598833643460815e-06], ['GoStmt', 2.598833643460815e-06], ['ReturnStmt', 2.598833643460815e-06], ['BreakStmt', 2.598833643460815e-06], ['ContinueStmt', 2.598833643460815e-06], ['GotoStmt', 2.598833643460815e-06], ['FallthroughStmt', 2.598833643460815e-06], ['SelectStmt', 2.598833643460815e-06], ['ForStmt', 2.598833643460815e-06], ['DeferStmt', 2.598833643460815e-06], ['Parse::statement(Label*', 2.598833643460815e-06], ['this->go_or_defer_stat();', 2.598833643460815e-06], ['this->return_stat();', 2.598833643460815e-06], ['this->break_stat();', 2.598833643460815e-06], ['this->continue_stat();', 2.598833643460815e-06], ['this->goto_stat();', 2.598833643460815e-06], ['this->switch_stat(label);', 2.598833643460815e-06], ['this->select_stat(label);', 2.598833643460815e-06], ['this->for_stat(label);', 2.598833643460815e-06], ['this->labeled_stmt(identifier,', 2.598833643460815e-06], ['this->gogo_->add_block(this->gogo_->finish_block(end_loc),', 2.598833643460815e-06], ['Parse::statement_may_start_here()', 2.598833643460815e-06], ['(token->is_op(OPERATOR_LCURLY)', 2.598833643460815e-06], ['token->is_op(OPERATOR_SEMICOLON))', 2.598833643460815e-06], ['Parse::labeled_stmt(const', 2.598833643460815e-06], ['this->gogo_->add_label_definition(label_name,', 2.598833643460815e-06], ['(!this->statement_may_start_here())', 2.598833643460815e-06], ['permitted,', 2.598833643460815e-06], ['label");', 2.598833643460815e-06], ['this->statement(label);', 2.598833643460815e-06], ['ExpressionStmt', 2.598833643460815e-06], ['IncDecStmt', 2.598833643460815e-06], ['ShortVarDecl', 2.598833643460815e-06], ['Parse::statement.', 2.598833643460815e-06], ['RETURN_EXP', 2.598833643460815e-06], ['*RETURN_EXP', 2.598833643460815e-06], ['Parse::simple_stat(bool', 2.598833643460815e-06], ['return_exp,', 2.598833643460815e-06], ['SimpleVarDecl.', 2.598833643460815e-06], ['token->is_op(OPERATOR_COMMA))', 2.598833643460815e-06], ['this->gogo_->pack_hidden_name(identifier,', 2.598833643460815e-06], ['this->simple_var_decl_or_assignment(identifier,', 2.598833643460815e-06], ['p_type_switch', 2.598833643460815e-06], ['&p_type_switch->found),', 2.598833643460815e-06], ['p_type_switch->found)', 2.598833643460815e-06], ['p_type_switch->name.clear();', 2.598833643460815e-06], ['exp->location();', 2.598833643460815e-06], ['this->send_stmt(this->verify_not_sink(exp),', 2.598833643460815e-06], ['*return_exp', 2.598833643460815e-06], ['(token->is_op(OPERATOR_PLUSPLUS)', 2.598833643460815e-06], ['token->is_op(OPERATOR_MINUSMINUS))', 2.598833643460815e-06], ['this->inc_dec_stat(this->verify_not_sink(exp));', 2.598833643460815e-06], ['(token->is_op(OPERATOR_COMMA)', 2.598833643460815e-06], ['token->is_op(OPERATOR_EQ))', 2.598833643460815e-06], ['this->assignment(exp,', 2.598833643460815e-06], ['(token->is_op(OPERATOR_PLUSEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_MINUSEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_OREQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_XOREQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_MULTEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_DIVEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_MODEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_LSHIFTEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_RSHIFTEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_ANDEQ)', 2.598833643460815e-06], ['token->is_op(OPERATOR_BITCLEAREQ))', 2.598833643460815e-06], ['this->assignment(this->verify_not_sink(exp),', 2.598833643460815e-06], ['(!exp->is_error_expression())', 2.598833643460815e-06], ['"non-name', 2.598833643460815e-06], ['this->expression_stat(exp);', 2.598833643460815e-06], ['Parse::simple_stat_may_start_here()', 2.598833643460815e-06], ['brace,', 2.598833643460815e-06], ['Parse::statement_list()', 2.598833643460815e-06], ['Parse::statement_list_may_start_here()', 2.598833643460815e-06], ['this->statement_may_start_here();', 2.598833643460815e-06], ['ExpressionStat', 2.598833643460815e-06], ['Parse::expression_stat(Expression*', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_statement(exp,', 2.598833643460815e-06], ['"&lt;-"', 2.598833643460815e-06], ['Parse::send_stmt(Expression*', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_CHANOP));', 2.598833643460815e-06], ['Statement::make_send_statement(channel,', 2.598833643460815e-06], ['IncDecStat', 2.598833643460815e-06], ['"++"', 2.598833643460815e-06], ['"--"', 2.598833643460815e-06], ['Parse::inc_dec_stat(Expression*', 2.598833643460815e-06], ['(token->is_op(OPERATOR_PLUSPLUS))', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_inc_statement(exp));', 2.598833643460815e-06], ['(token->is_op(OPERATOR_MINUSMINUS))', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_dec_statement(exp));', 2.598833643460815e-06], ['assign_op', 2.598833643460815e-06], ['parsed.', 2.598833643460815e-06], ['Parse::assignment(Expression*', 2.598833643460815e-06], ['vars->push_back(expr);', 2.598833643460815e-06], ['this->tuple_assignment(vars,', 2.598833643460815e-06], ['Parse::tuple_assignment(Expression_list*', 2.598833643460815e-06], ['(!token->is_op(OPERATOR_EQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_PLUSEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_MINUSEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_OREQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_XOREQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_MULTEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_DIVEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_MODEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_LSHIFTEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_RSHIFTEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_ANDEQ)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_BITCLEAREQ))', 2.598833643460815e-06], ['"range', 2.598833643460815e-06], ['this->range_clause_expr(lhs,', 2.598833643460815e-06], ['everything;', 2.598833643460815e-06], ['lhs->begin();', 2.598833643460815e-06], ['lhs->end();', 2.598833643460815e-06], ['OPERATOR_EQ', 2.598833643460815e-06], ['(*pe)->is_sink_expression())', 2.598833643460815e-06], ['go_error_at((*pe)->location(),', 2.598833643460815e-06], ['receive;', 2.598833643460815e-06], ['type_guard;', 2.598833643460815e-06], ['vals->size())', 2.598833643460815e-06], ['Statement::make_assignment(lhs->front(),', 2.598833643460815e-06], ['lhs->front(),', 2.598833643460815e-06], ['(*vals->begin())->call_expression())', 2.598833643460815e-06], ['call->set_expected_result_count(lhs->size());', 2.598833643460815e-06], ['lhs->size();', 2.598833643460815e-06], ['(*vals->begin())->index_expression())', 2.598833643460815e-06], ['Statement::make_tuple_map_assignment(val,', 2.598833643460815e-06], ['(*vals->begin())->receive_expression())', 2.598833643460815e-06], ['receive->channel();', 2.598833643460815e-06], ['Statement::make_tuple_receive_assignment(val,', 2.598833643460815e-06], ['(*vals->begin())->type_guard_expression())', 2.598833643460815e-06], ['Statement::make_tuple_type_guard_assignment(val,', 2.598833643460815e-06], ['"match', 2.598833643460815e-06], ['GoStat', 2.598833643460815e-06], ['"go"', 2.598833643460815e-06], ['DeferStat', 2.598833643460815e-06], ['"defer"', 2.598833643460815e-06], ['Parse::go_or_defer_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_GO)', 2.598833643460815e-06], ['this->peek_token()->is_keyword(KEYWORD_DEFER));', 2.598833643460815e-06], ['is_go', 2.598833643460815e-06], ['this->peek_token()->is_keyword(KEYWORD_GO);', 2.598833643460815e-06], ['stat_location', 2.598833643460815e-06], ['expr_location', 2.598833643460815e-06], ['&is_parenthesized);', 2.598833643460815e-06], ['go_error_at(expr_location,', 2.598833643460815e-06], ['this->gogo_->start_block(stat_location);', 2.598833643460815e-06], ['(is_go)', 2.598833643460815e-06], ['Statement::make_go_statement(call_expr,', 2.598833643460815e-06], ['call_expr->set_is_concurrent();', 2.598833643460815e-06], ['Statement::make_defer_statement(call_expr,', 2.598833643460815e-06], ['call_expr->set_is_deferred();', 2.598833643460815e-06], ['this->gogo_->add_statement(stat);', 2.598833643460815e-06], ['this->gogo_->add_block(this->gogo_->finish_block(stat_location),', 2.598833643460815e-06], ['ReturnStat', 2.598833643460815e-06], ['"return"', 2.598833643460815e-06], ['Parse::return_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_RETURN));', 2.598833643460815e-06], ['(this->expression_may_start_here())', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_return_statement(vals,', 2.598833643460815e-06], ['this->gogo_->current_function()->func_value()->results_are_named())', 2.598833643460815e-06], ['this->gogo_->lookup((*p)->name(),', 2.598833643460815e-06], ['(!no->is_result_variable())', 2.598833643460815e-06], ['shadowed', 2.598833643460815e-06], ['return",', 2.598833643460815e-06], ['(*p)->message_name().c_str());', 2.598833643460815e-06], ['"if"', 2.598833643460815e-06], ['Parse::if_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_IF));', 2.598833643460815e-06], ['saw_send_stmt', 2.598833643460815e-06], ['"else".', 2.598833643460815e-06], ['(this->advance_token()->is_keyword(KEYWORD_ELSE))', 2.598833643460815e-06], ['%<else%>");', 2.598833643460815e-06], ['(this->peek_token()->is_keyword(KEYWORD_ELSE))', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_IF))', 2.598833643460815e-06], ['%<if%>', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_if_statement(cond,', 2.598833643460815e-06], ['Parse::switch_stat(Label*', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_SWITCH));', 2.598833643460815e-06], ['Type_switch', 2.598833643460815e-06], ['type_switch;', 2.598833643460815e-06], ['this->expression_stat(switch_val);', 2.598833643460815e-06], ['id_loc', 2.598833643460815e-06], ['is_coloneq', 2.598833643460815e-06], ['token->is_op(OPERATOR_COLONEQ);', 2.598833643460815e-06], ['id_loc));', 2.598833643460815e-06], ['TypeSwitchGuard.', 2.598833643460815e-06], ['SimpleStat.', 2.598833643460815e-06], ['this->gogo_->start_block(id_loc);', 2.598833643460815e-06], ['(!type_switch.found)', 2.598833643460815e-06], ['!switch_val->is_error_expression())', 2.598833643460815e-06], ['go_error_at(id_loc,', 2.598833643460815e-06], ['Expression::make_error(id_loc);', 2.598833643460815e-06], ['type_switch.name.clear();', 2.598833643460815e-06], ['switch_val;', 2.598833643460815e-06], ['type_switch.location', 2.598833643460815e-06], ['switch_val->location();', 2.598833643460815e-06], ['(this->peek_token()->is_op(OPERATOR_COLONEQ))', 2.598833643460815e-06], ['this->type_switch_body(label,', 2.598833643460815e-06], ['this->expr_switch_body(label,', 2.598833643460815e-06], ['Parse::expr_switch_body(Label*', 2.598833643460815e-06], ['Statement::make_switch_statement(switch_val,', 2.598833643460815e-06], ['Case_clauses();', 2.598833643460815e-06], ['this->expr_case_clause(case_clauses,', 2.598833643460815e-06], ['FallthroughStat', 2.598833643460815e-06], ['Parse::expr_case_clause(Case_clauses*', 2.598833643460815e-06], ['this->expr_switch_case(&is_default);', 2.598833643460815e-06], ['fallthrough_loc', 2.598833643460815e-06], ['switch"));', 2.598833643460815e-06], ['!this->peek_token()->is_keyword(KEYWORD_DEFAULT))', 2.598833643460815e-06], ['place");', 2.598833643460815e-06], ['!this->peek_token()->is_keyword(KEYWORD_DEFAULT)', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_RCURLY)', 2.598833643460815e-06], ['(is_default', 2.598833643460815e-06], ['clauses->add(vals,', 2.598833643460815e-06], ['is_fallthrough,', 2.598833643460815e-06], ['Parse::expr_switch_case(bool*', 2.598833643460815e-06], ['Parse::type_switch_body(Label*', 2.598833643460815e-06], ['Type_switch&', 2.598833643460815e-06], ['type_switch.expr;', 2.598833643460815e-06], ['type_switch.name;', 2.598833643460815e-06], ['(Gogo::is_sink_name(var_name))', 2.598833643460815e-06], ['var_name.clear();', 2.598833643460815e-06], ['type_switch.location;', 2.598833643460815e-06], ['switch_temp', 2.598833643460815e-06], ['this->gogo_->add_statement(switch_temp);', 2.598833643460815e-06], ['Expression::make_temporary_reference(switch_temp,', 2.598833643460815e-06], ['Statement::make_type_switch_statement(var_name,', 2.598833643460815e-06], ['Type_case_clauses();', 2.598833643460815e-06], ['implicit_vars;', 2.598833643460815e-06], ['this->type_case_clause(var_name,', 2.598833643460815e-06], ['case_clauses,', 2.598833643460815e-06], ['&saw_default,', 2.598833643460815e-06], ['&implicit_vars);', 2.598833643460815e-06], ['implicit_vars.begin();', 2.598833643460815e-06], ['implicit_vars.end();', 2.598833643460815e-06], ['((*p)->var_value()->is_used())', 2.598833643460815e-06], ['(!used)', 2.598833643460815e-06], ['Gogo::message_name(var_name).c_str());', 2.598833643460815e-06], ['IMPLICIT_VARS', 2.598833643460815e-06], ['Parse::type_case_clause(const', 2.598833643460815e-06], ['saw_default,', 2.598833643460815e-06], ['implicit_vars)', 2.598833643460815e-06], ['std::vector<Type*>', 2.598833643460815e-06], ['this->type_switch_case(&types,', 2.598833643460815e-06], ['var_loc', 2.598833643460815e-06], ['(types.size()', 2.598833643460815e-06], ['Expression::make_type_guard(init,', 2.598833643460815e-06], ['var_loc);', 2.598833643460815e-06], ['v->set_is_used();', 2.598833643460815e-06], ['v->set_is_type_switch_var();', 2.598833643460815e-06], ['implicit_vars->push_back(this->gogo_->add_variable(var_name,', 2.598833643460815e-06], ['v));', 2.598833643460815e-06], ['go_assert(types.empty());', 2.598833643460815e-06], ['clauses->add(NULL,', 2.598833643460815e-06], ['(std::vector<Type*>::const_iterator', 2.598833643460815e-06], ['types.end();', 2.598833643460815e-06], ['clauses->add(*p,', 2.598833643460815e-06], ['clauses->add(types.back(),', 2.598833643460815e-06], ['clauses->add(Type::make_error_type(),', 2.598833643460815e-06], ['Parse::type_switch_case(std::vector<Type*>*', 2.598833643460815e-06], ['(!t->is_error_type())', 2.598833643460815e-06], ['types->push_back(t);', 2.598833643460815e-06], ['(!token->is_op(OPERATOR_COLON)', 2.598833643460815e-06], ['!token->is_op(OPERATOR_COMMA)', 2.598833643460815e-06], ['SelectStat', 2.598833643460815e-06], ['"select"', 2.598833643460815e-06], ['Parse::select_stat(Label*', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_SELECT));', 2.598833643460815e-06], ['Statement::make_select_statement(location);', 2.598833643460815e-06], ['Select_clauses*', 2.598833643460815e-06], ['select_clauses', 2.598833643460815e-06], ['Select_clauses();', 2.598833643460815e-06], ['this->comm_clause(select_clauses,', 2.598833643460815e-06], ['statement->add_clauses(select_clauses);', 2.598833643460815e-06], ['Parse::comm_clause(Select_clauses*', 2.598833643460815e-06], ['is_send', 2.598833643460815e-06], ['varname;', 2.598833643460815e-06], ['closedname;', 2.598833643460815e-06], ['got_case', 2.598833643460815e-06], ['this->comm_case(&is_send,', 2.598833643460815e-06], ['&channel,', 2.598833643460815e-06], ['&closed,', 2.598833643460815e-06], ['&varname,', 2.598833643460815e-06], ['&closedname,', 2.598833643460815e-06], ['colon");', 2.598833643460815e-06], ['(!varname.empty())', 2.598833643460815e-06], ['Variable(NULL,', 2.598833643460815e-06], ['v->set_type_from_chan_element();', 2.598833643460815e-06], ['this->gogo_->add_variable(varname,', 2.598833643460815e-06], ['(!closedname.empty())', 2.598833643460815e-06], ['this->gogo_->add_variable(closedname,', 2.598833643460815e-06], ['(got_case)', 2.598833643460815e-06], ['clauses->add(is_send,', 2.598833643460815e-06], ['closedvar,', 2.598833643460815e-06], ['this->gogo_->add_block(statements,', 2.598833643460815e-06], ['Parse::comm_case(bool*', 2.598833643460815e-06], ['closedname,', 2.598833643460815e-06], ['(!this->send_or_recv_stmt(is_send,', 2.598833643460815e-06], ['closedname))', 2.598833643460815e-06], ['Parse::send_or_recv_stmt(bool*', 2.598833643460815e-06], ['closedname)', 2.598833643460815e-06], ['is_rv_exported', 2.598833643460815e-06], ['recv_var_loc', 2.598833643460815e-06], ['is_rc_exported', 2.598833643460815e-06], ['recv_closed_loc', 2.598833643460815e-06], ['rv,', 2.598833643460815e-06], ['(recv_closed', 2.598833643460815e-06], ['*closedname', 2.598833643460815e-06], ['gogo->pack_hidden_name(recv_closed,', 2.598833643460815e-06], ['is_rc_exported);', 2.598833643460815e-06], ['this->unget_token(Token::make_identifier_token(recv_closed,', 2.598833643460815e-06], ['is_rc_exported,', 2.598833643460815e-06], ['recv_closed_loc));', 2.598833643460815e-06], ['this->id_to_expression(gogo->pack_hidden_name(recv_var,', 2.598833643460815e-06], ['is_rv_exported),', 2.598833643460815e-06], ['recv_var_loc,', 2.598833643460815e-06], ['this->unget_token(Token::make_identifier_token(recv_var,', 2.598833643460815e-06], ['is_rv_exported,', 2.598833643460815e-06], ['recv_var_loc));', 2.598833643460815e-06], ['(saw_comma', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_CHANOP))', 2.598833643460815e-06], ['(e->receive_expression()', 2.598833643460815e-06], ['e->receive_expression()->channel();', 2.598833643460815e-06], ["'case", 2.598833643460815e-06], ["(<-c):'.", 2.598833643460815e-06], ['(<-c)<-v:', 2.598833643460815e-06], ['<-c', 2.598833643460815e-06], ['Expression::make_receive(*channel,', 2.598833643460815e-06], ['(*channel)->location());', 2.598833643460815e-06], ['(!saw_comma', 2.598833643460815e-06], ['recvloc', 2.598833643460815e-06], ['recvexpr', 2.598833643460815e-06], ['(recvexpr->receive_expression()', 2.598833643460815e-06], ['go_error_at(recvloc,', 2.598833643460815e-06], ['%<<-%>");', 2.598833643460815e-06], ['recvexpr->receive_expression()->channel();', 2.598833643460815e-06], ['*closed', 2.598833643460815e-06], ['(closed_is_id)', 2.598833643460815e-06], ['%<=%>', 2.598833643460815e-06], ['(this->peek_token()->is_op(OPERATOR_CHANOP))', 2.598833643460815e-06], ['this->verify_not_sink(e);', 2.598833643460815e-06], ['ForStat', 2.598833643460815e-06], ['"for"', 2.598833643460815e-06], ['Parse::for_stat(Label*', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_FOR));', 2.598833643460815e-06], ['Open', 2.598833643460815e-06], ['Range_clause', 2.598833643460815e-06], ['range_clause;', 2.598833643460815e-06], ['initializer");', 2.598833643460815e-06], ['Condition,', 2.598833643460815e-06], ['InitStat,', 2.598833643460815e-06], ['&range_clause,', 2.598833643460815e-06], ['!range_clause.found)', 2.598833643460815e-06], ['(range_clause.found)', 2.598833643460815e-06], ['ForClause.', 2.598833643460815e-06], ['(!range_clause.found)', 2.598833643460815e-06], ['Statement::make_for_range_statement(range_clause.index,', 2.598833643460815e-06], ['range_clause.value,', 2.598833643460815e-06], ['range_clause.range,', 2.598833643460815e-06], ['this->push_break_statement(s,', 2.598833643460815e-06], ['this->push_continue_statement(s,', 2.598833643460815e-06], ['(sfor', 2.598833643460815e-06], ['sfor->add_statements(statements);', 2.598833643460815e-06], ['srange->add_statements(statements);', 2.598833643460815e-06], ['this->pop_continue_statement();', 2.598833643460815e-06], ['Parse::for_clause(Expression**', 2.598833643460815e-06], ['post)', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_op(OPERATOR_SEMICOLON));', 2.598833643460815e-06], ['semicolon");', 2.598833643460815e-06], ['"range"', 2.598833643460815e-06], ['Parse::range_clause_decl(const', 2.598833643460815e-06], ['(til->empty())', 2.598833643460815e-06], ['(any_new', 2.598833643460815e-06], ['no->var_value()->set_type_from_range_index();', 2.598833643460815e-06], ['&til->back();', 2.598833643460815e-06], ['is_new', 2.598833643460815e-06], ['&is_new,', 2.598833643460815e-06], ['(is_new', 2.598833643460815e-06], ['no->var_value()->set_type_from_range_value();', 2.598833643460815e-06], ['(is_new)', 2.598833643460815e-06], ['(!any_new)', 2.598833643460815e-06], ['Parse::range_clause_expr(const', 2.598833643460815e-06], ['go_assert(vals->size()', 2.598833643460815e-06], ['(vals->empty())', 2.598833643460815e-06], ['vals->front();', 2.598833643460815e-06], ['vals->back();', 2.598833643460815e-06], ['Parse::push_break_statement(Statement*', 2.598833643460815e-06], ['this->break_stack_->push_back(std::make_pair(enclosing,', 2.598833643460815e-06], ['Parse::push_continue_statement(Statement*', 2.598833643460815e-06], ['this->continue_stack_->push_back(std::make_pair(enclosing,', 2.598833643460815e-06], ['Parse::pop_break_statement()', 2.598833643460815e-06], ['this->break_stack_->pop_back();', 2.598833643460815e-06], ['Parse::pop_continue_statement()', 2.598833643460815e-06], ['this->continue_stack_->pop_back();', 2.598833643460815e-06], ['Parse::find_bc_statement(const', 2.598833643460815e-06], ['bc_stack,', 2.598833643460815e-06], ['(bc_stack', 2.598833643460815e-06], ['(Bc_stack::const_reverse_iterator', 2.598833643460815e-06], ['bc_stack->rbegin();', 2.598833643460815e-06], ['bc_stack->rend();', 2.598833643460815e-06], ['p->second->name()', 2.598833643460815e-06], ['p->second->set_is_used();', 2.598833643460815e-06], ['BreakStat', 2.598833643460815e-06], ['Parse::break_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_BREAK));', 2.598833643460815e-06], ['this->break_stack_->empty())', 2.598833643460815e-06], ['"break', 2.598833643460815e-06], ['this->break_stack_->back().first;', 2.598833643460815e-06], ['this->find_bc_statement(this->break_stack_,', 2.598833643460815e-06], ['enclosing->for_statement()->break_label();', 2.598833643460815e-06], ['enclosing->for_range_statement()->break_label();', 2.598833643460815e-06], ['Statement::STATEMENT_SWITCH)', 2.598833643460815e-06], ['enclosing->switch_statement()->break_label();', 2.598833643460815e-06], ['Statement::STATEMENT_TYPE_SWITCH)', 2.598833643460815e-06], ['enclosing->type_switch_statement()->break_label();', 2.598833643460815e-06], ['Statement::STATEMENT_SELECT)', 2.598833643460815e-06], ['enclosing->select_statement()->break_label();', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_break_statement(label,', 2.598833643460815e-06], ['ContinueStat', 2.598833643460815e-06], ['"continue"', 2.598833643460815e-06], ['Parse::continue_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_CONTINUE));', 2.598833643460815e-06], ['this->continue_stack_->empty())', 2.598833643460815e-06], ['"continue', 2.598833643460815e-06], ['for");', 2.598833643460815e-06], ['this->continue_stack_->back().first;', 2.598833643460815e-06], ['this->find_bc_statement(this->continue_stack_,', 2.598833643460815e-06], ['enclosing->for_statement()->continue_label();', 2.598833643460815e-06], ['enclosing->for_range_statement()->continue_label();', 2.598833643460815e-06], ['this->gogo_->add_statement(Statement::make_continue_statement(label,', 2.598833643460815e-06], ['GotoStat', 2.598833643460815e-06], ['"goto"', 2.598833643460815e-06], ['Parse::goto_stat()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_GOTO));', 2.598833643460815e-06], ['goto");', 2.598833643460815e-06], ['Statement::make_goto_statement(label,', 2.598833643460815e-06], ['"package"', 2.598833643460815e-06], ['Parse::package_clause()', 2.598833643460815e-06], ['(!token->is_keyword(KEYWORD_PACKAGE))', 2.598833643460815e-06], ['"program', 2.598833643460815e-06], ['_");', 2.598833643460815e-06], ['"package', 2.598833643460815e-06], ['this->gogo_->set_package_name(name,', 2.598833643460815e-06], ['"import"', 2.598833643460815e-06], ['Decl<ImportSpec>', 2.598833643460815e-06], ['Parse::import_decl()', 2.598833643460815e-06], ['go_assert(this->peek_token()->is_keyword(KEYWORD_IMPORT));', 2.598833643460815e-06], ['this->decl(&Parse::import_spec,', 2.598833643460815e-06], ['ImportSpec', 2.598833643460815e-06], ['PackageFileName', 2.598833643460815e-06], ['Parse::import_spec(void*,', 2.598833643460815e-06], ['import");', 2.598833643460815e-06], ['this->gogo_->import_package(token->string_value(),', 2.598833643460815e-06], ['SourceFile', 2.598833643460815e-06], ['TopLevelDecl', 2.598833643460815e-06], ['Parse::program()', 2.598833643460815e-06], ['this->package_clause();', 2.598833643460815e-06], ['(token->is_keyword(KEYWORD_IMPORT))', 2.598833643460815e-06], ['this->import_decl();', 2.598833643460815e-06], ['(this->declaration_may_start_here())', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_RCURLY));', 2.598833643460815e-06], ['!this->peek_token()->is_op(OPERATOR_SEMICOLON))', 2.598833643460815e-06], ['"level', 2.598833643460815e-06], ['declaration"));', 2.598833643460815e-06], ['this->skip_past_error(OPERATOR_INVALID);', 2.598833643460815e-06], ['OPERATOR_RCURLY.', 2.598833643460815e-06], ['semicolon,', 2.598833643460815e-06], ['OP,', 2.598833643460815e-06], ['Parse::skip_past_error(Operator', 2.598833643460815e-06], ['(!token->is_op(op))', 2.598833643460815e-06], ['(token->is_eof())', 2.598833643460815e-06], ['Parse::verify_not_sink(Expression*', 2.598833643460815e-06], ['(expr->is_sink_expression())', 2.598833643460815e-06], ['Expression::make_error(expr->location());', 2.598833643460815e-06], ['this->mark_var_used(expr->var_expression()->named_object());', 2.598833643460815e-06], ['this->mark_var_used(expr->enclosed_var_expression()->variable());', 2.598833643460815e-06], ['Parse::mark_var_used(Named_object*', 2.598833643460815e-06], ['no->var_value()->set_is_used();', 2.598833643460815e-06], ['ABI,', 2.598833643460815e-06], ['(Type::tvalist->ty', 2.598833643460815e-06], ['Type::tvalist))', 2.598833643460815e-06], ['!empty_aggregate_p', 2.598833643460815e-06], ['*t2)', 2.598833643460815e-06], ['t1->toBasetype', 2.598833643460815e-06], ['t2->toBasetype', 2.598833643460815e-06], ['(tb1', 2.598833643460815e-06], ['tb2)', 2.598833643460815e-06], ['mutably', 2.598833643460815e-06], ['tb1->equivalent', 2.598833643460815e-06], ['(tb2))', 2.598833643460815e-06], ["'Object'", 2.598833643460815e-06], ['(ClassDeclaration::object)', 2.598833643460815e-06], ['ClassDeclaration::object->type;', 2.598833643460815e-06], ['("missing', 2.598833643460815e-06], ['corrupt', 2.598833643460815e-06], ['object.d");', 2.598833643460815e-06], ['Type::terror;', 2.598833643460815e-06], ['[arrays/void-arrays],', 2.598833643460815e-06], ['[arrays/static-arrays],', 2.598833643460815e-06], ['allowed,', 2.598833643460815e-06], ['build_range_type', 2.598833643460815e-06], ['(range,', 2.598833643460815e-06], ['NFIELDS', 2.598833643460815e-06], ['ident/type', 2.598833643460815e-06], ['MOD.', 2.598833643460815e-06], ['mod)', 2.598833643460815e-06], ['MODimmutable:', 2.598833643460815e-06], ['TYPE_QUAL_CONST;', 2.598833643460815e-06], ['MODshared:', 2.598833643460815e-06], ['qualtype', 2.598833643460815e-06], ['quals);', 2.598833643460815e-06], ["'shared'.", 2.598833643460815e-06], ['(mod', 2.598833643460815e-06], ['MODshared)', 2.598833643460815e-06], ['(qualtype)', 2.598833643460815e-06], ['qualtype;', 2.598833643460815e-06], ['(field)));', 2.598833643460815e-06], ['FIELDS', 2.598833643460815e-06], ['chain,', 2.598833643460815e-06], ['(ftype)', 2.598833643460815e-06], ['anon_aggrname_p', 2.598833643460815e-06], ['(TYPE_IDENTIFIER', 2.598833643460815e-06], ['(ftype)))', 2.598833643460815e-06], ['vfields', 2.598833643460815e-06], ['(ftype);', 2.598833643460815e-06], ['(vfields,', 2.598833643460815e-06], ['(vfields);', 2.598833643460815e-06], ['voffset,', 2.598833643460815e-06], ['MEMBERS', 2.598833643460815e-06], ['INHERITED_P', 2.598833643460815e-06], ['(Dsymbols', 2.598833643460815e-06], ['*members,', 2.598833643460815e-06], ['inherited_p)', 2.598833643460815e-06], ['members->dim;', 2.598833643460815e-06], ['(*members)[i];', 2.598833643460815e-06], ['sym->isVarDeclaration', 2.598833643460815e-06], ['(!inherited_p', 2.598833643460815e-06], ['tuple,', 2.598833643460815e-06], ['(var->aliassym)', 2.598833643460815e-06], ['TupleDeclaration', 2.598833643460815e-06], ['var->aliassym->isTupleDeclaration', 2.598833643460815e-06], ['tmembers;', 2.598833643460815e-06], ['coerce', 2.598833643460815e-06], ['td->objects->dim;', 2.598833643460815e-06], ['*ro', 2.598833643460815e-06], ['(*td->objects)[j];', 2.598833643460815e-06], ['(ro->dyncast', 2.598833643460815e-06], ['DYNCAST_EXPRESSION);', 2.598833643460815e-06], ['ro;', 2.598833643460815e-06], ['TOKdsymbol);', 2.598833643460815e-06], ['DsymbolExp', 2.598833643460815e-06], ['(DsymbolExp', 2.598833643460815e-06], ['tmembers.push', 2.598833643460815e-06], ['(se->s);', 2.598833643460815e-06], ['(&tmembers,', 2.598833643460815e-06], ['(var->isField', 2.598833643460815e-06], ['var->ident', 2.598833643460815e-06], ['var->ident->toChars', 2.598833643460815e-06], ['(declaration_type', 2.598833643460815e-06], ['inherited_p,', 2.598833643460815e-06], ['var->offset);', 2.598833643460815e-06], ['struct/union', 2.598833643460815e-06], ['in-tact', 2.598833643460815e-06], ['AnonDeclaration', 2.598833643460815e-06], ['sym->isAnonDeclaration', 2.598833643460815e-06], ['anon_cnt', 2.598833643460815e-06], ['buf[32];', 2.598833643460815e-06], ['anon_aggrname_format', 2.598833643460815e-06], ['anon_cnt++);', 2.598833643460815e-06], ['(ad->isunion', 2.598833643460815e-06], ['(ad->loc),', 2.598833643460815e-06], ['(ad->decl,', 2.598833643460815e-06], ['Undoes', 2.598833643460815e-06], ['setFieldOffset,', 2.598833643460815e-06], ['accesses.', 2.598833643460815e-06], ['(ad->anonoffset);', 2.598833643460815e-06], ['(ad->anonstructsize,', 2.598833643460815e-06], ['ad->anonalignsize,', 2.598833643460815e-06], ['ad->anonoffset);', 2.598833643460815e-06], ['*attrib', 2.598833643460815e-06], ['sym->isAttribDeclaration', 2.598833643460815e-06], ['(attrib', 2.598833643460815e-06], ['attrib->include', 2.598833643460815e-06], ['(decls,', 2.598833643460815e-06], ['namespaces.', 2.598833643460815e-06], ['(sym->isTemplateMixin', 2.598833643460815e-06], ['sym->isNspace', 2.598833643460815e-06], ['ScopeDsymbol', 2.598833643460815e-06], ['*scopesym', 2.598833643460815e-06], ['sym->isScopeDsymbol', 2.598833643460815e-06], ['(scopesym->members)', 2.598833643460815e-06], ['(scopesym->members,', 2.598833643460815e-06], ['BASE.', 2.598833643460815e-06], ['base->isClassDeclaration', 2.598833643460815e-06], ['inherited_p', 2.598833643460815e-06], ['cd->baseClass);', 2.598833643460815e-06], ['(Object)', 2.598833643460815e-06], ['objtype', 2.598833643460815e-06], ['(cd->type));', 2.598833643460815e-06], ['id->vtblInterfaces->dim', 2.598833643460815e-06], ['"__vptr",', 2.598833643460815e-06], ['TYPE_VFIELD', 2.598833643460815e-06], ['DECL_FCONTEXT', 2.598833643460815e-06], ['objtype;', 2.598833643460815e-06], ['"__monitor",', 2.598833643460815e-06], ['(cd->vtblInterfaces)', 2.598833643460815e-06], ['bc->offset);', 2.598833643460815e-06], ['(base->members)', 2.598833643460815e-06], ['(base->members,', 2.598833643460815e-06], ['base->fields.dim);', 2.598833643460815e-06], ['base->fields.dim;', 2.598833643460815e-06], ['base->fields[i];', 2.598833643460815e-06], ['(var->csym', 2.598833643460815e-06], ['STRUCTSIZE', 2.598833643460815e-06], ['ALIGNSIZE.', 2.598833643460815e-06], ['ATTRS', 2.598833643460815e-06], ['structsize,', 2.598833643460815e-06], ['UserAttributeDeclaration', 2.598833643460815e-06], ['*attrs)', 2.598833643460815e-06], ['(attrs)', 2.598833643460815e-06], ['attrs->getAttributes', 2.598833643460815e-06], ['(&type,', 2.598833643460815e-06], ['Front-end,', 2.598833643460815e-06], ['CTYPE', 2.598833643460815e-06], ['(TypeError', 2.598833643460815e-06], ['(TypeNull', 2.598833643460815e-06], ['[type/basic-data-types]', 2.598833643460815e-06], ['cent', 2.598833643460815e-06], ['ucent', 2.598833643460815e-06], ['hardware.', 2.598833643460815e-06], ['ifloat', 2.598833643460815e-06], ['idouble', 2.598833643460815e-06], ['ireal', 2.598833643460815e-06], ['cfloat', 2.598833643460815e-06], ['cdouble', 2.598833643460815e-06], ['creal', 2.598833643460815e-06], ['wchar', 2.598833643460815e-06], ['UTF-16', 2.598833643460815e-06], ['UTF-32', 2.598833643460815e-06], ['(t->ty)', 2.598833643460815e-06], ['Tvoid:', 2.598833643460815e-06], ['Tbool:', 2.598833643460815e-06], ['d_bool_type;', 2.598833643460815e-06], ['Tint8:', 2.598833643460815e-06], ['Tuns8:', 2.598833643460815e-06], ['d_ubyte_type;', 2.598833643460815e-06], ['Tint16:', 2.598833643460815e-06], ['Tuns16:', 2.598833643460815e-06], ['d_ushort_type;', 2.598833643460815e-06], ['Tint32:', 2.598833643460815e-06], ['Tuns32:', 2.598833643460815e-06], ['d_uint_type;', 2.598833643460815e-06], ['Tint64:', 2.598833643460815e-06], ['Tuns64:', 2.598833643460815e-06], ['d_ulong_type;', 2.598833643460815e-06], ['Tint128:', 2.598833643460815e-06], ['Tuns128:', 2.598833643460815e-06], ['d_ucent_type;', 2.598833643460815e-06], ['Tfloat32:', 2.598833643460815e-06], ['Tfloat64:', 2.598833643460815e-06], ['Tfloat80:', 2.598833643460815e-06], ['Timaginary32:', 2.598833643460815e-06], ['ifloat_type_node;', 2.598833643460815e-06], ['Timaginary64:', 2.598833643460815e-06], ['idouble_type_node;', 2.598833643460815e-06], ['Timaginary80:', 2.598833643460815e-06], ['ireal_type_node;', 2.598833643460815e-06], ['char8_type_node;', 2.598833643460815e-06], ['char16_type_node;', 2.598833643460815e-06], ['char32_type_node;', 2.598833643460815e-06], ['Derived', 2.598833643460815e-06], ['(t->next));', 2.598833643460815e-06], ['consisting', 2.598833643460815e-06], ['[abi/arrays],', 2.598833643460815e-06], ['(t->next)));', 2.598833643460815e-06], ['compile-time,', 2.598833643460815e-06], ['(t->dim->isConst', 2.598833643460815e-06], ['t->dim->type->isintegral', 2.598833643460815e-06], ['t->dim->toUInteger', 2.598833643460815e-06], ['(t->next,', 2.598833643460815e-06], ['dimension:', 2.598833643460815e-06], ['t->dim->toChars', 2.598833643460815e-06], ['t->basetype)->dim->toUInteger', 2.598833643460815e-06], ['(t->elementType', 2.598833643460815e-06], ['rationale', 2.598833643460815e-06], ['(inner', 2.598833643460815e-06], ['(Type::tuns8);', 2.598833643460815e-06], ['sparsely', 2.598833643460815e-06], ['populated.', 2.598833643460815e-06], ['[abi/associative-arrays],', 2.598833643460815e-06], ['consist', 2.598833643460815e-06], ['opaque,', 2.598833643460815e-06], ['[function/variadic]', 2.598833643460815e-06], ['Variadic', 2.598833643460815e-06], ['t->linkage', 2.598833643460815e-06], ['(Type::typeinfotypelist->type);', 2.598833643460815e-06], ['(t->parameters)', 2.598833643460815e-06], ['n_args', 2.598833643460815e-06], ['(t->parameters);', 2.598833643460815e-06], ['n_args;', 2.598833643460815e-06], ['(Parameter::getNth', 2.598833643460815e-06], ['(t->parameters,', 2.598833643460815e-06], ['void_list_node,', 2.598833643460815e-06], ['variadic.', 2.598833643460815e-06], ['void_list_node);', 2.598833643460815e-06], ['(t->next', 2.598833643460815e-06], ['(t->isref)', 2.598833643460815e-06], ['parameters?', 2.598833643460815e-06], ['fnparams);', 2.598833643460815e-06], ['conventions.', 2.598833643460815e-06], ['(t->linkage)', 2.598833643460815e-06], ['LINKpascal:', 2.598833643460815e-06], ['LINKwindows:', 2.598833643460815e-06], ['[attribute/linkage]', 2.598833643460815e-06], ['Windows', 2.598833643460815e-06], ['Win32,', 2.598833643460815e-06], ['stdcall', 2.598833643460815e-06], ['convention.', 2.598833643460815e-06], ['(!global.params.is64bit)', 2.598833643460815e-06], ['"stdcall");', 2.598833643460815e-06], ['LINKc:', 2.598833643460815e-06], ['LINKcpp:', 2.598833643460815e-06], ['LINKd:', 2.598833643460815e-06], ['LINKobjc:', 2.598833643460815e-06], ['[abi/function-calling-conventions]', 2.598833643460815e-06], ['[abi/delegates],', 2.598833643460815e-06], ['dgtype', 2.598833643460815e-06], ['(Type::tvoidptr),', 2.598833643460815e-06], ['("funcptr"),', 2.598833643460815e-06], ['(dgtype));', 2.598833643460815e-06], ['BOOLEAN_TYPE)', 2.598833643460815e-06], ['Enums', 2.598833643460815e-06], ['integral.', 2.598833643460815e-06], ['these,', 2.598833643460815e-06], ['ENUMERAL_TYPE.', 2.598833643460815e-06], ['build_variant_type_copy', 2.598833643460815e-06], ['(ENUMERAL_TYPE);', 2.598833643460815e-06], ['ENUM_IS_SCOPED', 2.598833643460815e-06], ['(flag_short_enums)', 2.598833643460815e-06], ['t->size', 2.598833643460815e-06], ['(t->sym->loc)', 2.598833643460815e-06], ['t->sym->members->dim;', 2.598833643460815e-06], ['EnumMember', 2.598833643460815e-06], ['(*t->sym->members)[i]->isEnumMember', 2.598833643460815e-06], ['seep', 2.598833643460815e-06], ['(member', 2.598833643460815e-06], ['(member->ident->toChars', 2.598833643460815e-06], ['(member->value', 2.598833643460815e-06], ['()->toInteger', 2.598833643460815e-06], ['(member->loc),', 2.598833643460815e-06], ['(values,', 2.598833643460815e-06], ['TYPE_VALUES', 2.598833643460815e-06], ['values;', 2.598833643460815e-06], ['(t->sym->userAttribDecl)', 2.598833643460815e-06], ['t->sym->userAttribDecl->getAttributes', 2.598833643460815e-06], ['(&t->ctype,', 2.598833643460815e-06], ['non-POD', 2.598833643460815e-06], ['self-references.', 2.598833643460815e-06], ['(t->sym->isUnionDeclaration', 2.598833643460815e-06], ['t->sym->structsize;', 2.598833643460815e-06], ['(t->sym->alignment', 2.598833643460815e-06], ['t->sym->alignment', 2.598833643460815e-06], ['t->sym->alignsize;', 2.598833643460815e-06], ['variants.', 2.598833643460815e-06], ['(t->sym->postblit', 2.598833643460815e-06], ['t->sym->dtor)', 2.598833643460815e-06], ['Whereas', 2.598833643460815e-06], ['object-orientated', 2.598833643460815e-06], ['self-references', 2.598833643460815e-06], ['lang_specific', 2.598833643460815e-06], ['(t->sym->structsize,', 2.598833643460815e-06], ['t->sym->alignsize,', 2.598833643460815e-06], ['basetype;', 2.598833643460815e-06], ['final,', 2.598833643460815e-06], ['derivations.', 2.598833643460815e-06], ['(t->sym->storage_class', 2.598833643460815e-06], ['TYPE_FINAL_P', 2.598833643460815e-06], ['off.', 2.598833643460815e-06], ['(!t->sym->isInterfaceDeclaration', 2.598833643460815e-06], ['t->sym,', 2.598833643460815e-06], ['t->sym->vtbl.dim;', 2.598833643460815e-06], ['t->sym->vtbl[i]->isFuncDeclaration', 2.598833643460815e-06], ['!chain_member', 2.598833643460815e-06], ['(method,', 2.598833643460815e-06], ['(basetype)))', 2.598833643460815e-06], ['(basetype,', 2.598833643460815e-06], ['(!t->ctype)', 2.598833643460815e-06], ['treats', 2.598833643460815e-06], ['e.g:', 2.598833643460815e-06], ['(t->isNaked', 2.598833643460815e-06], ['t->castMod', 2.598833643460815e-06], ['(!tb->ctype)', 2.598833643460815e-06], ['(tb->ctype,', 2.598833643460815e-06], ['t->mod);', 2.598833643460815e-06], ['modules.cc', 2.598833643460815e-06], ["this()',", 2.598833643460815e-06], ["~this()',", 2.598833643460815e-06], ["`unittest'", 2.598833643460815e-06], ['aggregated', 2.598833643460815e-06], ['variably', 2.598833643460815e-06], ["`flags'", 2.598833643460815e-06], ['accessors', 2.598833643460815e-06], ['POD_structs', 2.598833643460815e-06], ['CompilerDSO', 2.598833643460815e-06], ['dso_slot_node;', 2.598833643460815e-06], ['registering', 2.598833643460815e-06], ['deregistering', 2.598833643460815e-06], ['DSOs', 2.598833643460815e-06], ['druntime,', 2.598833643460815e-06], ['dso_initialized_node;', 2.598833643460815e-06], ['start_minfo_node;', 2.598833643460815e-06], ['stop_minfo_node;', 2.598833643460815e-06], ['termination,', 2.598833643460815e-06], ['unit', 2.598833643460815e-06], ['*ctors;', 2.598833643460815e-06], ['*dtors;', 2.598833643460815e-06], ['*ctorgates;', 2.598833643460815e-06], ['*sharedctors;', 2.598833643460815e-06], ['*shareddtors;', 2.598833643460815e-06], ['*sharedctorgates;', 2.598833643460815e-06], ['*unitTests;', 2.598833643460815e-06], ['libdruntime/object_.d.', 2.598833643460815e-06], ['module_info_flags', 2.598833643460815e-06], ['MIctorstart', 2.598833643460815e-06], ['0x1,', 2.598833643460815e-06], ['MIctordone', 2.598833643460815e-06], ['0x2,', 2.598833643460815e-06], ['MIstandalone', 2.598833643460815e-06], ['0x4,', 2.598833643460815e-06], ['MItlsctor', 2.598833643460815e-06], ['0x8,', 2.598833643460815e-06], ['MItlsdtor', 2.598833643460815e-06], ['0x10,', 2.598833643460815e-06], ['MIctor', 2.598833643460815e-06], ['0x20,', 2.598833643460815e-06], ['MIdtor', 2.598833643460815e-06], ['0x40,', 2.598833643460815e-06], ['MIxgetMembers', 2.598833643460815e-06], ['0x80,', 2.598833643460815e-06], ['MIictor', 2.598833643460815e-06], ['0x100,', 2.598833643460815e-06], ['MIunitTest', 2.598833643460815e-06], ['0x200,', 2.598833643460815e-06], ['MIimportedModules', 2.598833643460815e-06], ['0x400,', 2.598833643460815e-06], ['MIlocalClasses', 2.598833643460815e-06], ['0x800,', 2.598833643460815e-06], ['MIname', 2.598833643460815e-06], ['0x1000', 2.598833643460815e-06], ['*current_moduleinfo;', 2.598833643460815e-06], ['*current_module_decl;', 2.598833643460815e-06], ["this').", 2.598833643460815e-06], ['*static_ctor_list;', 2.598833643460815e-06], ['*static_dtor_list;', 2.598833643460815e-06], ['current_module_decl;', 2.598833643460815e-06], ['(!mod)', 2.598833643460815e-06], ['Module::rootModule;', 2.598833643460815e-06], ['"FZv");', 2.598833643460815e-06], ['FuncDeclaration::genCfunc', 2.598833643460815e-06], ['fd->loc', 2.598833643460815e-06], ['(mod->srcfile->toChars', 2.598833643460815e-06], ['fd->parent', 2.598833643460815e-06], ['fd->protection.kind', 2.598833643460815e-06], ['PROTprivate;', 2.598833643460815e-06], ['fd->semanticRun', 2.598833643460815e-06], ['PASSsemantic3done;', 2.598833643460815e-06], ['ctors,', 2.598833643460815e-06], ['dtors,', 2.598833643460815e-06], ['increments', 2.598833643460815e-06], ['order)', 2.598833643460815e-06], ['GATES,', 2.598833643460815e-06], ['FUNCTIONS.', 2.598833643460815e-06], ['*functions,', 2.598833643460815e-06], ['*gates)', 2.598833643460815e-06], ['gates', 2.598833643460815e-06], ['(gates);', 2.598833643460815e-06], ['(*gates)[i];', 2.598833643460815e-06], ['integer_one_node);', 2.598833643460815e-06], ['var_expr);', 2.598833643460815e-06], ['(functions);', 2.598833643460815e-06], ['(*functions)[i];', 2.598833643460815e-06], ['(expr_list)', 2.598833643460815e-06], ['expr_list);', 2.598833643460815e-06], ['(moduleinfo_type)', 2.598833643460815e-06], ['moduleinfo_type', 2.598833643460815e-06], ['(moduleinfo_type,', 2.598833643460815e-06], ['"ModuleInfo",', 2.598833643460815e-06], ['destructors,', 2.598833643460815e-06], ['"__ModuleInfo",', 2.598833643460815e-06], ['readonly,', 2.598833643460815e-06], ['moduleinit', 2.598833643460815e-06], ['CompilerDSOData,', 2.598833643460815e-06], ['(compiler_dso_type)', 2.598833643460815e-06], ['version;', 2.598833643460815e-06], ['slot;', 2.598833643460815e-06], ['_minfo_beg;', 2.598833643460815e-06], ['_minfo_end;', 2.598833643460815e-06], ['_deh_beg;', 2.598833643460815e-06], ['_deh_end;', 2.598833643460815e-06], ['(ptr_type_node),', 2.598833643460815e-06], ['compiler_dso_type', 2.598833643460815e-06], ['(compiler_dso_type,', 2.598833643460815e-06], ['"CompilerDSOData",', 2.598833643460815e-06], ['FUNCTION_DECL.', 2.598833643460815e-06], ['get_dso_registry_fn', 2.598833643460815e-06], ['(dso_type),', 2.598833643460815e-06], ['dso_registry_fn', 2.598833643460815e-06], ['("_d_dso_registry"),', 2.598833643460815e-06], ['Depending', 2.598833643460815e-06], ['CTOR_P,', 2.598833643460815e-06], ['eiter', 2.598833643460815e-06], ["`false'", 2.598833643460815e-06], ["`true'", 2.598833643460815e-06], ['ctor_p)', 2.598833643460815e-06], ['("dso_ctor")', 2.598833643460815e-06], ['("dso_dtor");', 2.598833643460815e-06], ['dso_ctor/dso_dtor', 2.598833643460815e-06], ['extern(C)', 2.598833643460815e-06], ['dso_{c,d}tor', 2.598833643460815e-06], ['condition)', 2.598833643460815e-06], ['condition).', 2.598833643460815e-06], ['if_cond', 2.598833643460815e-06], ['dso_initialized_node,', 2.598833643460815e-06], ['(dso_type);', 2.598833643460815e-06], ['size_type_node));', 2.598833643460815e-06], ['(dso_slot_node));', 2.598833643460815e-06], ['(start_minfo_node));', 2.598833643460815e-06], ['(stop_minfo_node));', 2.598833643460815e-06], ['assign_expr', 2.598833643460815e-06], ['(dso,', 2.598833643460815e-06], ['(dso_type,', 2.598833643460815e-06], ['assign_expr);', 2.598833643460815e-06], ['(get_dso_registry_fn', 2.598833643460815e-06], ['(dso));', 2.598833643460815e-06], ['(if_cond,', 2.598833643460815e-06], ['expr_list,', 2.598833643460815e-06], ['void_node));', 2.598833643460815e-06], ['dso_registry', 2.598833643460815e-06], ['VISIBILITY_HIDDEN', 2.598833643460815e-06], ['Place', 2.598833643460815e-06], ['MINFO', 2.598833643460815e-06], ['ctors/dtors', 2.598833643460815e-06], ['minfo)', 2.598833643460815e-06], ['(targetm_common.have_named_sections);', 2.598833643460815e-06], ['Module.', 2.598833643460815e-06], ['"__moduleRef",', 2.598833643460815e-06], ['mref', 2.598833643460815e-06], ["`.'", 2.598833643460815e-06], ['__start_', 2.598833643460815e-06], ['__stop_', 2.598833643460815e-06], ['https://sourceware.org/binutils/docs-2.26/ld/Orphan-Sections.html.', 2.598833643460815e-06], ['DECL_PRESERVE_P', 2.598833643460815e-06], ['"minfo");', 2.598833643460815e-06], ['(mref);', 2.598833643460815e-06], ['(!first_module)', 2.598833643460815e-06], ['start_minfo_node', 2.598833643460815e-06], ['("__start_minfo",', 2.598833643460815e-06], ['(start_minfo_node,', 2.598833643460815e-06], ['stop_minfo_node', 2.598833643460815e-06], ['("__stop_minfo",', 2.598833643460815e-06], ['(stop_minfo_node,', 2.598833643460815e-06], ['dso_slot', 2.598833643460815e-06], ['dso_initialized.', 2.598833643460815e-06], ['dso_slot_node', 2.598833643460815e-06], ['("dso_slot"),', 2.598833643460815e-06], ['(dso_slot_node)', 2.598833643460815e-06], ['(dso_slot_node);', 2.598833643460815e-06], ['(dso_slot_node,', 2.598833643460815e-06], ['dso_initialized_node', 2.598833643460815e-06], ['("dso_initialized"),', 2.598833643460815e-06], ['(dso_initialized_node)', 2.598833643460815e-06], ['(dso_initialized_node);', 2.598833643460815e-06], ['dso_ctor()', 2.598833643460815e-06], ['dso_dtor().', 2.598833643460815e-06], ['dso_ctor', 2.598833643460815e-06], ['(static_ctor_list,', 2.598833643460815e-06], ['dso_ctor);', 2.598833643460815e-06], ['dso_dtor', 2.598833643460815e-06], ['(static_dtor_list,', 2.598833643460815e-06], ['dso_dtor);', 2.598833643460815e-06], ['Convenience', 2.598833643460815e-06], ['layout_moduleinfo_fields.', 2.598833643460815e-06], ['incrementing', 2.598833643460815e-06], ['account,', 2.598833643460815e-06], ['rec_type,', 2.598833643460815e-06], ['HOST_WIDE_INT&', 2.598833643460815e-06], ['(rec_type,', 2.598833643460815e-06], ['as-needed', 2.598833643460815e-06], ['basis,', 2.598833643460815e-06], ['minimum.', 2.598833643460815e-06], ['(decl->findGetMembers', 2.598833643460815e-06], ['aimports_dim),', 2.598833643460815e-06], ['aclasses.dim),', 2.598833643460815e-06], ['Lastly,', 2.598833643460815e-06], ['namelen),', 2.598833643460815e-06], ['(offset,', 2.598833643460815e-06], ['*sgetmembers;', 2.598833643460815e-06], ['sgetmembers', 2.598833643460815e-06], ['decl->findGetMembers', 2.598833643460815e-06], ['MItlsctor;', 2.598833643460815e-06], ['MItlsdtor;', 2.598833643460815e-06], ['MIctor;', 2.598833643460815e-06], ['MIdtor;', 2.598833643460815e-06], ['(sgetmembers)', 2.598833643460815e-06], ['MIxgetMembers;', 2.598833643460815e-06], ['MIictor;', 2.598833643460815e-06], ['MIunitTest;', 2.598833643460815e-06], ['MIimportedModules;', 2.598833643460815e-06], ['MIlocalClasses;', 2.598833643460815e-06], ['(!decl->needmoduleinfo)', 2.598833643460815e-06], ['MIstandalone;', 2.598833643460815e-06], ['MIname;', 2.598833643460815e-06], ['minfo', 2.598833643460815e-06], ['(minfo));', 2.598833643460815e-06], ['decl:', 2.598833643460815e-06], ['*minit', 2.598833643460815e-06], ['appearance,', 2.598833643460815e-06], ['flags:', 2.598833643460815e-06], ['tlsctor;', 2.598833643460815e-06], ['tlsdtor;', 2.598833643460815e-06], ['xgetMembers;', 2.598833643460815e-06], ['dtor;', 2.598833643460815e-06], ['ictor;', 2.598833643460815e-06], ['unitTest;', 2.598833643460815e-06], ['ModuleInfo*[]', 2.598833643460815e-06], ['importedModules;', 2.598833643460815e-06], ['TypeInfo_Class[]', 2.598833643460815e-06], ['localClasses;', 2.598833643460815e-06], ['char[N]', 2.598833643460815e-06], ['MItlsctor)', 2.598833643460815e-06], ['(decl->sctor));', 2.598833643460815e-06], ['MItlsdtor)', 2.598833643460815e-06], ['(decl->sdtor));', 2.598833643460815e-06], ['MIctor)', 2.598833643460815e-06], ['(decl->ssharedctor));', 2.598833643460815e-06], ['MIdtor)', 2.598833643460815e-06], ['(decl->sshareddtor));', 2.598833643460815e-06], ['MIxgetMembers)', 2.598833643460815e-06], ['(sgetmembers)));', 2.598833643460815e-06], ['MIictor)', 2.598833643460815e-06], ['(decl->sictor));', 2.598833643460815e-06], ['MIunitTest)', 2.598833643460815e-06], ['(decl->stest));', 2.598833643460815e-06], ['MIimportedModules)', 2.598833643460815e-06], ['aimports_dim);', 2.598833643460815e-06], ['(mi->needmoduleinfo)', 2.598833643460815e-06], ['(idx),', 2.598833643460815e-06], ['(get_moduleinfo_decl', 2.598833643460815e-06], ['(mi)));', 2.598833643460815e-06], ['idx++;', 2.598833643460815e-06], ['(aimports_dim));', 2.598833643460815e-06], ['MIlocalClasses)', 2.598833643460815e-06], ['aclasses.dim);', 2.598833643460815e-06], ['aclasses.dim;', 2.598833643460815e-06], ['aclasses[i];', 2.598833643460815e-06], ['(aclasses.dim));', 2.598833643460815e-06], ['MIname)', 2.598833643460815e-06], ['0-terminated', 2.598833643460815e-06], ['C-string,', 2.598833643460815e-06], ['strtree', 2.598833643460815e-06], ['(namelen,', 2.598833643460815e-06], ['(strtree)', 2.598833643460815e-06], ['namelen);', 2.598833643460815e-06], ['strtree);', 2.598833643460815e-06], ['minit);', 2.598833643460815e-06], ['minfo);', 2.598833643460815e-06], ['Send', 2.598833643460815e-06], ['(!current_moduleinfo', 2.598833643460815e-06], ['!current_module_decl);', 2.598833643460815e-06], ['mi', 2.598833643460815e-06], ['&mi;', 2.598833643460815e-06], ['(decl->members)', 2.598833643460815e-06], ['(!global.params.betterC', 2.598833643460815e-06], ['("__entrypoint"))', 2.598833643460815e-06], ['(mi.ctors', 2.598833643460815e-06], ['mi.ctorgates)', 2.598833643460815e-06], ['decl->sctor', 2.598833643460815e-06], ['("*__modctor"),', 2.598833643460815e-06], ['mi.ctors,', 2.598833643460815e-06], ['mi.ctorgates);', 2.598833643460815e-06], ['(mi.dtors)', 2.598833643460815e-06], ['decl->sdtor', 2.598833643460815e-06], ['("*__moddtor"),', 2.598833643460815e-06], ['mi.dtors,', 2.598833643460815e-06], ['(mi.sharedctors', 2.598833643460815e-06], ['mi.sharedctorgates)', 2.598833643460815e-06], ['decl->ssharedctor', 2.598833643460815e-06], ['("*__modsharedctor"),', 2.598833643460815e-06], ['mi.sharedctors,', 2.598833643460815e-06], ['mi.sharedctorgates);', 2.598833643460815e-06], ['(mi.shareddtors)', 2.598833643460815e-06], ['decl->sshareddtor', 2.598833643460815e-06], ['("*__modshareddtor"),', 2.598833643460815e-06], ['mi.shareddtors,', 2.598833643460815e-06], ['(mi.unitTests)', 2.598833643460815e-06], ['decl->stest', 2.598833643460815e-06], ['("*__modtest"),', 2.598833643460815e-06], ['mi.unitTests,', 2.598833643460815e-06], ['(cfun', 2.598833643460815e-06], ['(current_module_decl', 2.598833643460815e-06], ['(current_module_decl);', 2.598833643460815e-06], ["`shared'", 2.598833643460815e-06], ['derives', 2.598833643460815e-06], ['non-shared', 2.598833643460815e-06], ['(fd->isSharedStaticCtorDeclaration', 2.598833643460815e-06], ['(current_moduleinfo->sharedctors,', 2.598833643460815e-06], ['(fd->isStaticCtorDeclaration', 2.598833643460815e-06], ['(current_moduleinfo->ctors,', 2.598833643460815e-06], ["destructor's", 2.598833643460815e-06], ['vgate', 2.598833643460815e-06], ['(fd->isSharedStaticDtorDeclaration', 2.598833643460815e-06], ['((SharedStaticDtorDeclaration', 2.598833643460815e-06], ['(current_moduleinfo->sharedctorgates,', 2.598833643460815e-06], ['(current_moduleinfo->shareddtors,', 2.598833643460815e-06], ['(fd->isStaticDtorDeclaration', 2.598833643460815e-06], ['((StaticDtorDeclaration', 2.598833643460815e-06], ['(current_moduleinfo->ctorgates,', 2.598833643460815e-06], ['(current_moduleinfo->dtors,', 2.598833643460815e-06], ['(fd->isUnitTestDeclaration', 2.598833643460815e-06], ['(current_moduleinfo->unitTests,', 2.598833643460815e-06], ['Wrapup', 2.598833643460815e-06], ['*vec,', 2.598833643460815e-06], ['symtab->process_same_body_aliases', 2.598833643460815e-06], ['external_scope,', 2.598833643460815e-06], ['wrapup_global_declarations.', 2.598833643460815e-06], ['vec[i];', 2.598833643460815e-06], ['(&decl,', 2.598833643460815e-06], ['static_ctor_list', 2.598833643460815e-06], ['(static_ctor_list)', 2.598833643460815e-06], ['("I"),', 2.598833643460815e-06], ['static_ctor_list,', 2.598833643460815e-06], ['DECL_STATIC_CONSTRUCTOR', 2.598833643460815e-06], ['decl_init_priority_insert', 2.598833643460815e-06], ['(static_dtor_list)', 2.598833643460815e-06], ['("D"),', 2.598833643460815e-06], ['static_dtor_list,', 2.598833643460815e-06], ['DECL_STATIC_DESTRUCTOR', 2.598833643460815e-06], ['decl_fini_priority_insert', 2.598833643460815e-06], ['"gt-d-modules.h"', 2.598833643460815e-06], ['brig-lane-inst-handler.cc', 2.598833643460815e-06], ['lane', 2.598833643460815e-06], ['brig_lane_inst_handler::brig_lane_inst_handler', 2.598833643460815e-06], ['brig_lane_inst_handler::operator', 2.598833643460815e-06], ['(inst.base);', 2.598833643460815e-06], ['BRIG_OPCODE_ACTIVELANECOUNT)', 2.598833643460815e-06], ['wave,', 2.598833643460815e-06], ['(uint32_type_node),', 2.598833643460815e-06], ['BRIG_OPCODE_ACTIVELANEID)', 2.598833643460815e-06], ['BRIG_OPCODE_ACTIVELANEMASK)', 2.598833643460815e-06], ['u64_type', 2.598833643460815e-06], ['zero_cst', 2.598833643460815e-06], ['(u64_type);', 2.598833643460815e-06], ['u64_type,', 2.598833643460815e-06], ['zero_cst,', 2.598833643460815e-06], ['(elements);', 2.598833643460815e-06], ['BRIG_OPCODE_ACTIVELANEPERMUTE)', 2.598833643460815e-06], ['operands[3];', 2.598833643460815e-06], ['operands[4];', 2.598833643460815e-06], ["'identity'", 2.598833643460815e-06], ['(use_identity),', 2.598833643460815e-06], ['use_identity);', 2.598833643460815e-06], ['(src),', 2.598833643460815e-06], ['(inst.base,', 2.598833643460815e-06], ['brig-util.cc', 2.598833643460815e-06], ['utility', 2.598833643460815e-06], ['"stdint.h"', 2.598833643460815e-06], ['group_variable_offset_index::has_variable', 2.598833643460815e-06], ['group_variable_offset_index::add', 2.598833643460815e-06], ['m_group_offsets[name]', 2.598833643460815e-06], ['m_next_group_offset;', 2.598833643460815e-06], ['group_variable_offset_index::segment_offset', 2.598833643460815e-06], ['OPNUM', 2.598833643460815e-06], ['OPCODE', 2.598833643460815e-06], ['False', 2.598833643460815e-06], ['input.', 2.598833643460815e-06], ['reused', 2.598833643460815e-06], ['Martin', 2.598833643460815e-06], ["Jambor's", 2.598833643460815e-06], ['opnum)', 2.598833643460815e-06], ['(opcode)', 2.598833643460815e-06], ['BRIG_OPCODE_SBR:', 2.598833643460815e-06], ['BRIG_OPCODE_CBR:', 2.598833643460815e-06], ['BRIG_OPCODE_ATOMICNORET:', 2.598833643460815e-06], ['BRIG_OPCODE_SIGNALNORET:', 2.598833643460815e-06], ['opnum', 2.598833643460815e-06], ['~BRIG_TYPE_BASE_MASK;', 2.598833643460815e-06], ['BRIG_TYPE_PACK_32)', 2.598833643460815e-06], ['BRIG_TYPE_PACK_64)', 2.598833643460815e-06], ['BRIG_TYPE_PACK_128)', 2.598833643460815e-06], ['BRIG_TYPE_U8X4:', 2.598833643460815e-06], ['BRIG_TYPE_U16X2:', 2.598833643460815e-06], ['BRIG_TYPE_S8X4:', 2.598833643460815e-06], ['BRIG_TYPE_S16X2:', 2.598833643460815e-06], ['BRIG_TYPE_F16X2:', 2.598833643460815e-06], ['BRIG_TYPE_U8X8:', 2.598833643460815e-06], ['BRIG_TYPE_U16X4:', 2.598833643460815e-06], ['BRIG_TYPE_U32X2:', 2.598833643460815e-06], ['BRIG_TYPE_S8X8:', 2.598833643460815e-06], ['BRIG_TYPE_S16X4:', 2.598833643460815e-06], ['BRIG_TYPE_S32X2:', 2.598833643460815e-06], ['BRIG_TYPE_F16X4:', 2.598833643460815e-06], ['BRIG_TYPE_F32X2:', 2.598833643460815e-06], ['BRIG_TYPE_U8X16:', 2.598833643460815e-06], ['BRIG_TYPE_U16X8:', 2.598833643460815e-06], ['BRIG_TYPE_U32X4:', 2.598833643460815e-06], ['BRIG_TYPE_U64X2:', 2.598833643460815e-06], ['BRIG_TYPE_S8X16:', 2.598833643460815e-06], ['BRIG_TYPE_S16X8:', 2.598833643460815e-06], ['BRIG_TYPE_S32X4:', 2.598833643460815e-06], ['BRIG_TYPE_S64X2:', 2.598833643460815e-06], ['BRIG_TYPE_F16X8:', 2.598833643460815e-06], ['BRIG_TYPE_F32X4:', 2.598833643460815e-06], ['BRIG_TYPE_F64X2:', 2.598833643460815e-06], ['("HMM', 2.598833643460815e-06], ['%x\\n",', 2.598833643460815e-06], ['borrowed', 2.598833643460815e-06], ['ENDS.', 2.598833643460815e-06], ['BrigUInt64', 2.598833643460815e-06], ['&brig_type)', 2.598833643460815e-06], ['(brig_type.hi)', 2.598833643460815e-06], ['(brig_type.lo);', 2.598833643460815e-06], ['*brig_reg)', 2.598833643460815e-06], ['(brig_reg->regKind)', 2.598833643460815e-06], ['gccbrig_reg_name', 2.598833643460815e-06], ['(reg->regKind)', 2.598833643460815e-06], ["'c';", 2.598833643460815e-06], ["'d';", 2.598833643460815e-06], ["'q';", 2.598833643460815e-06], ['reg->regNum;', 2.598833643460815e-06], ['gccbrig_type_name', 2.598833643460815e-06], ['"u8";', 2.598833643460815e-06], ['"u16";', 2.598833643460815e-06], ['"u32";', 2.598833643460815e-06], ['"u64";', 2.598833643460815e-06], ['"s8";', 2.598833643460815e-06], ['"s16";', 2.598833643460815e-06], ['"s32";', 2.598833643460815e-06], ['"s64";', 2.598833643460815e-06], ['gccbrig_segment_name', 2.598833643460815e-06], ['(BrigSegment8_t', 2.598833643460815e-06], ['segment)', 2.598833643460815e-06], ['BRIG_SEGMENT_GLOBAL)', 2.598833643460815e-06], ['"global";', 2.598833643460815e-06], ['"group";', 2.598833643460815e-06], ['"private";', 2.598833643460815e-06], ['gccbrig_is_float_type', 2.598833643460815e-06], ['BRIG_TYPE_F64', 2.598833643460815e-06], ['BRIG_TYPE_F16);', 2.598833643460815e-06], ['tree_type)', 2.598833643460815e-06], ['BRIG_TYPE_U8;', 2.598833643460815e-06], ['BRIG_TYPE_U16;', 2.598833643460815e-06], ['(tree_type);', 2.598833643460815e-06], ['brig_element_type;', 2.598833643460815e-06], ['(element_size)', 2.598833643460815e-06], ['BRIG_TYPE_U8', 2.598833643460815e-06], ['BRIG_TYPE_U16', 2.598833643460815e-06], ['BRIG_TYPE_U32', 2.598833643460815e-06], ['(tree_type)', 2.598833643460815e-06], ['BRIG_TYPE_PACK_32;', 2.598833643460815e-06], ['BRIG_TYPE_PACK_64;', 2.598833643460815e-06], ['BRIG_TYPE_PACK_128;', 2.598833643460815e-06], ['"bit', 2.598833643460815e-06], ['level"', 2.598833643460815e-06], ['semantical', 2.598833643460815e-06], ['differences.', 2.598833643460815e-06], ['opcode)', 2.598833643460815e-06], ['BRIG_OPCODE_SHUFFLE', 2.598833643460815e-06], ['BRIG_OPCODE_UNPACKHI', 2.598833643460815e-06], ['BRIG_OPCODE_ST', 2.598833643460815e-06], ['BRIG_OPCODE_PACK;', 2.598833643460815e-06], ['treatment:', 2.598833643460815e-06], ['__gccbrig_ptr_variable_name.', 2.598833643460815e-06], ['definition)', 2.598833643460815e-06], ['gccbrig_might_be_host_defined_var_p', 2.598833643460815e-06], ['!is_definition', 2.598833643460815e-06], ['brigVar->linkage', 2.598833643460815e-06], ['BRIG_LINKAGE_PROGRAM', 2.598833643460815e-06], ['(brigVar->allocation', 2.598833643460815e-06], ['BRIG_ALLOCATION_PROGRAM', 2.598833643460815e-06], ['brigVar->allocation', 2.598833643460815e-06], ['BRIG_ALLOCATION_AGENT);', 2.598833643460815e-06], ['HSA/BRIG', 2.598833643460815e-06], ['(hsa_type_packed_p', 2.598833643460815e-06], ['(brig_type))', 2.598833643460815e-06], ['inner_brig_type', 2.598833643460815e-06], ['(inner_brig_type', 2.598833643460815e-06], ['(BRIG_TYPE_U16),', 2.598833643460815e-06], ['inner_size', 2.598833643460815e-06], ['inner_size;', 2.598833643460815e-06], ['uint16_type_node;', 2.598833643460815e-06], ['HSA,', 2.598833643460815e-06], ['HSA).', 2.598833643460815e-06], ['BRIG_TYPE_SAMP:', 2.598833643460815e-06], ['BRIG_TYPE_ROIMG:', 2.598833643460815e-06], ['BRIG_TYPE_WOIMG:', 2.598833643460815e-06], ['BRIG_TYPE_RWIMG:', 2.598833643460815e-06], ['images', 2.598833643460815e-06], ['Images', 2.598833643460815e-06], ['who', 2.598833643460815e-06], ['initialized?', 2.598833643460815e-06], ['void_ptr', 2.598833643460815e-06], ['(void_type_node);', 2.598833643460815e-06], ['void_ptr;', 2.598833643460815e-06], ['qualifiers.', 2.598833643460815e-06], ['tree_type;', 2.598833643460815e-06], ['REG.', 2.598833643460815e-06], ['Returned', 2.598833643460815e-06], ['[0,', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT].', 2.598833643460815e-06], ['&reg)', 2.598833643460815e-06], ['reg.regNum;', 2.598833643460815e-06], ['(reg.regKind)', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT', 2.598833643460815e-06], ['reg_id)', 2.598833643460815e-06], ['reg_name[32];', 2.598833643460815e-06], ['reg_id;', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_C_REG_COUNT)', 2.598833643460815e-06], ['"$c%lu",', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT)', 2.598833643460815e-06], ['"$s%lu",', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT;', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT)', 2.598833643460815e-06], ['"$d%lu",', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT;', 2.598833643460815e-06], ['BRIG_2_TREE_HSAIL_Q_REG_COUNT)', 2.598833643460815e-06], ['"$q%lu",', 2.598833643460815e-06], ['"$??";', 2.598833643460815e-06], ['Prints', 2.598833643460815e-06], ['statistics', 2.598833643460815e-06], ['gccbrig_print_reg_use_info', 2.598833643460815e-06], ['*dump,', 2.598833643460815e-06], ['&info)', 2.598833643460815e-06], ['begin_it', 2.598833643460815e-06], ['info.begin', 2.598833643460815e-06], ['end_it', 2.598833643460815e-06], ['info.end', 2.598833643460815e-06], ['(regs_use_index::const_iterator', 2.598833643460815e-06], ['begin_it;', 2.598833643460815e-06], ['end_it;', 2.598833643460815e-06], ['hsa_reg', 2.598833643460815e-06], ['(it->first);', 2.598833643460815e-06], ['("%s:\\n",', 2.598833643460815e-06], ['hsa_reg.c_str', 2.598833643460815e-06], ['reg_use_it;', 2.598833643460815e-06], ['begin_it2', 2.598833643460815e-06], ['end_it2', 2.598833643460815e-06], ['(reg_use_it', 2.598833643460815e-06], ['begin_it2;', 2.598833643460815e-06], ['end_it2;', 2.598833643460815e-06], ['it2++)', 2.598833643460815e-06], ['"(%lu)', 2.598833643460815e-06], ['it2->second);', 2.598833643460815e-06], ['print_node_brief', 2.598833643460815e-06], ['it2->first,', 2.598833643460815e-06], ['d-incpath.cc', 2.598833643460815e-06], ['"cppdefault.h"', 2.598833643460815e-06], ['"Translate"', 2.598833643460815e-06], ['i.e:', 2.598833643460815e-06], ['/usr/local/lib/gcc', 2.598833643460815e-06], ['IPREFIX', 2.598833643460815e-06], ['Based', 2.598833643460815e-06], ['incpath.c.', 2.598833643460815e-06], ['*path,', 2.598833643460815e-06], ['*iprefix)', 2.598833643460815e-06], ['(cpp_relocated', 2.598833643460815e-06], ['cpp_PREFIX_len)', 2.598833643460815e-06], ['cpp_PREFIX,', 2.598833643460815e-06], ['*relocated_prefix;', 2.598833643460815e-06], ['configure-time', 2.598833643460815e-06], ['relocated,', 2.598833643460815e-06], ['(!relocated_prefix)', 2.598833643460815e-06], ['directory.', 2.598833643460815e-06], ['*dummy', 2.598833643460815e-06], ['(gcc_exec_prefix,', 2.598833643460815e-06], ['"dummy",', 2.598833643460815e-06], ['relocated_prefix', 2.598833643460815e-06], ['make_relative_prefix', 2.598833643460815e-06], ['cpp_EXEC_PREFIX,', 2.598833643460815e-06], ['cpp_PREFIX);', 2.598833643460815e-06], ['(dummy);', 2.598833643460815e-06], ['(relocated_prefix,', 2.598833643460815e-06], ['(iprefix', 2.598833643460815e-06], ['cpp_GCC_INCLUDE_DIR_len)', 2.598833643460815e-06], ['cpp_GCC_INCLUDE_DIR,', 2.598833643460815e-06], ['(iprefix,', 2.598833643460815e-06], ['(!global.path)', 2.598833643460815e-06], ['global.path', 2.598833643460815e-06], ['(target', 2.598833643460815e-06], ['!FileName::exists', 2.598833643460815e-06], ['global.path->push', 2.598833643460815e-06], ['(!global.filePath)', 2.598833643460815e-06], ['global.filePath', 2.598833643460815e-06], ['(!FileName::exists', 2.598833643460815e-06], ['global.filePath->push', 2.598833643460815e-06], ['STDINC,', 2.598833643460815e-06], ['*iprefix,', 2.598833643460815e-06], ['*imultilib,', 2.598833643460815e-06], ['stdinc)', 2.598833643460815e-06], ['(stdinc)', 2.598833643460815e-06], ['default_include', 2.598833643460815e-06], ['cpp_include_defaults;', 2.598833643460815e-06], ['p->fname;', 2.598833643460815e-06], ['*path;', 2.598833643460815e-06], ['(p->cplusplus)', 2.598833643460815e-06], ['(!p->add_sysroot)', 2.598833643460815e-06], ['(p->fname,', 2.598833643460815e-06], ['iprefix);', 2.598833643460815e-06], ['(p->fname);', 2.598833643460815e-06], ['"/d",', 2.598833643460815e-06], ['(*global.params.imppath)[i])', 2.598833643460815e-06], ['(found)', 2.598833643460815e-06], ['Multilib', 2.598833643460815e-06], ['(imultilib)', 2.598833643460815e-06], ['*target_path', 2.598833643460815e-06], ['"/",', 2.598833643460815e-06], ['imultilib,', 2.598833643460815e-06], ['(target_path);', 2.598833643460815e-06], ['(global.params.imppath)', 2.598833643460815e-06], ['(*global.params.imppath)[i];', 2.598833643460815e-06], ['(global.params.fileImppath)', 2.598833643460815e-06], ['global.params.fileImppath->dim;', 2.598833643460815e-06], ['(*global.params.fileImppath)[i];', 2.598833643460815e-06], ["Kahan's", 2.598833643460815e-06], ['Floating', 2.598833643460815e-06], ['Point', 2.598833643460815e-06], ['"Paranoia"', 2.598833643460815e-06], ['Sumner,', 2.598833643460815e-06], ['UCSF,', 2.598833643460815e-06], ['Feb.', 2.598833643460815e-06], ['Gay,', 2.598833643460815e-06], ['BTL,', 2.598833643460815e-06], ['1986', 2.598833643460815e-06], ['Wichmann,', 2.598833643460815e-06], ['18', 2.598833643460815e-06], ['exhibit', 2.598833643460815e-06], ['style).', 2.598833643460815e-06], ['Adjusted', 2.598833643460815e-06], ['1992', 2.598833643460815e-06], ['(dmg);', 2.598833643460815e-06], ['Apr', 2.598833643460815e-06], ['1983', 2.598833643460815e-06], ['Professor', 2.598833643460815e-06], ['W.', 2.598833643460815e-06], ['Kahan,', 2.598833643460815e-06], ['567', 2.598833643460815e-06], ['Evans', 2.598833643460815e-06], ['Hall', 2.598833643460815e-06], ['Electrical', 2.598833643460815e-06], ['Engineering', 2.598833643460815e-06], ['Science', 2.598833643460815e-06], ['Dept.', 2.598833643460815e-06], ['Berkeley,', 2.598833643460815e-06], ['94720', 2.598833643460815e-06], ['Wichmann', 2.598833643460815e-06], ['National', 2.598833643460815e-06], ['Physical', 2.598833643460815e-06], ['Laboratory', 2.598833643460815e-06], ['Teddington', 2.598833643460815e-06], ['Middx', 2.598833643460815e-06], ['TW11', 2.598833643460815e-06], ['OLW', 2.598833643460815e-06], ['UK', 2.598833643460815e-06], ['Gay', 2.598833643460815e-06], ['Sumner', 2.598833643460815e-06], ['AT&T', 2.598833643460815e-06], ['Bell', 2.598833643460815e-06], ['Labs', 2.598833643460815e-06], ['Center,', 2.598833643460815e-06], ['Rm.', 2.598833643460815e-06], ['U-76', 2.598833643460815e-06], ['600', 2.598833643460815e-06], ['Mountain', 2.598833643460815e-06], ['Avenue', 2.598833643460815e-06], ['Murray', 2.598833643460815e-06], ['Hill,', 2.598833643460815e-06], ['NJ', 2.598833643460815e-06], ['07974', 2.598833643460815e-06], ['San', 2.598833643460815e-06], ['Francisco,', 2.598833643460815e-06], ['CA', 2.598833643460815e-06], ['94143', 2.598833643460815e-06], ['simultaneous', 2.598833643460815e-06], ['corrections', 2.598833643460815e-06], ['(reflected', 2.598833643460815e-06], ['netlib).', 2.598833643460815e-06], ['[A', 2.598833643460815e-06], ['fixes', 2.598833643460815e-06], ['dgh', 2.598833643460815e-06], ['sun!dhough', 2.598833643460815e-06], ['incorporated', 2.598833643460815e-06], ['31', 2.598833643460815e-06], ['July', 2.598833643460815e-06], ['1986.]', 2.598833643460815e-06], ['Richard', 2.598833643460815e-06], ['Karpinski', 2.598833643460815e-06], ['Sumner.', 2.598833643460815e-06], ['sample', 2.598833643460815e-06], ['reports,', 2.598833643460815e-06], ['criticisms.', 2.598833643460815e-06], ['freely', 2.598833643460815e-06], ['acknowledge', 2.598833643460815e-06], ['Comments', 2.598833643460815e-06], ['NPL,', 2.598833643460815e-06], ['please.', 2.598833643460815e-06], ['introductory', 2.598833643460815e-06], ['commentary', 2.598833643460815e-06], ["Wichmann's", 2.598833643460815e-06], ['work:', 2.598833643460815e-06], ['Kahan', 2.598833643460815e-06], ['Microsoft', 2.598833643460815e-06], ['analogy', 2.598833643460815e-06], ['Pascal.', 2.598833643460815e-06], ['transcription', 2.598833643460815e-06], ['coding', 2.598833643460815e-06], ['conventional', 2.598833643460815e-06], ['block-structured', 2.598833643460815e-06], ['Hence', 2.598833643460815e-06], ['structured', 2.598833643460815e-06], ['mnemonic', 2.598833643460815e-06], ['significance),', 2.598833643460815e-06], ['[Note:', 2.598833643460815e-06], ['C]:', 2.598833643460815e-06], ['AInverse', 2.598833643460815e-06], ['J0', 2.598833643460815e-06], ['[Failure]', 2.598833643460815e-06], ['BInverse', 2.598833643460815e-06], ['J1', 2.598833643460815e-06], ['B2', 2.598833643460815e-06], ['[SeriousDefect]', 2.598833643460815e-06], ['T5', 2.598833643460815e-06], ['B9', 2.598833643460815e-06], ['J2', 2.598833643460815e-06], ['T7', 2.598833643460815e-06], ['[Defect]', 2.598833643460815e-06], ['T8', 2.598833643460815e-06], ['CInverse', 2.598833643460815e-06], ['J3', 2.598833643460815e-06], ['[Flaw]', 2.598833643460815e-06], ['U0', 2.598833643460815e-06], ['UnderflowThreshold', 2.598833643460815e-06], ['D4', 2.598833643460815e-06], ['FourD', 2.598833643460815e-06], ['E2', 2.598833643460815e-06], ['Exp2', 2.598833643460815e-06], ['N1', 2.598833643460815e-06], ['V8', 2.598833643460815e-06], ['E5', 2.598833643460815e-06], ['E6', 2.598833643460815e-06], ['O1', 2.598833643460815e-06], ['E7', 2.598833643460815e-06], ['O2', 2.598833643460815e-06], ['E8', 2.598833643460815e-06], ['O3', 2.598833643460815e-06], ['O4', 2.598833643460815e-06], ['F1', 2.598833643460815e-06], ['O5', 2.598833643460815e-06], ['X9', 2.598833643460815e-06], ['F2', 2.598833643460815e-06], ['O8', 2.598833643460815e-06], ['F3', 2.598833643460815e-06], ['O9', 2.598833643460815e-06], ['Y9', 2.598833643460815e-06], ['G1', 2.598833643460815e-06], ['Q8', 2.598833643460815e-06], ['G2', 2.598833643460815e-06], ['Z0', 2.598833643460815e-06], ['R1', 2.598833643460815e-06], ['H1', 2.598833643460815e-06], ['HInverse', 2.598833643460815e-06], ['R2', 2.598833643460815e-06], ['R3', 2.598833643460815e-06], ['IO', 2.598833643460815e-06], ['R4', 2.598833643460815e-06], ['RSqrt', 2.598833643460815e-06], ['I3', 2.598833643460815e-06], ['R9', 2.598833643460815e-06], ['SqRWrng', 2.598833643460815e-06], ['consequence,', 2.598833643460815e-06], ['"constants"', 2.598833643460815e-06], ['glossary', 2.598833643460815e-06], ['helpful).', 2.598833643460815e-06], ['identifiersis', 2.598833643460815e-06], ['wherehelpful.', 2.598833643460815e-06], ['correspondence', 2.598833643460815e-06], ['lines', 2.598833643460815e-06], ['90-', 2.598833643460815e-06], ['140', 2.598833643460815e-06], ['170-', 2.598833643460815e-06], ['250', 2.598833643460815e-06], ['Instructions', 2.598833643460815e-06], ['380-', 2.598833643460815e-06], ['460', 2.598833643460815e-06], ['Heading', 2.598833643460815e-06], ['480-', 2.598833643460815e-06], ['670', 2.598833643460815e-06], ['Characteristics', 2.598833643460815e-06], ['690-', 2.598833643460815e-06], ['870', 2.598833643460815e-06], ['History', 2.598833643460815e-06], ['2940-2950', 2.598833643460815e-06], ['3710-3740', 2.598833643460815e-06], ['4040-4080', 2.598833643460815e-06], ['DoesYequalX', 2.598833643460815e-06], ['4090-4110', 2.598833643460815e-06], ['4640-4850', 2.598833643460815e-06], ['TestPartialUnderflow', 2.598833643460815e-06], ['paranoia', 2.598833643460815e-06], ['software', 2.598833643460815e-06], ['sanity', 2.598833643460815e-06], ['overloading', 2.598833643460815e-06], ['damned', 2.598833643460815e-06], ['<math.h>', 2.598833643460815e-06], ['<unistd.h>', 2.598833643460815e-06], ['awful', 2.598833643460815e-06], ['prepared', 2.598833643460815e-06], ['C++.', 2.598833643460815e-06], ['biggest', 2.598833643460815e-06], ['stickler', 2.598833643460815e-06], ['GTY(x)', 2.598833643460815e-06], ['"ansidecl.h"', 2.598833643460815e-06], ['"auto-host.h"', 2.598833643460815e-06], ['"hwint.h"', 2.598833643460815e-06], ['EXTRA_MODES_FILE', 2.598833643460815e-06], ['rtx_def;', 2.598833643460815e-06], ['rtx_def', 2.598833643460815e-06], ['*rtx;', 2.598833643460815e-06], ['rtvec_def;', 2.598833643460815e-06], ['rtvec_def', 2.598833643460815e-06], ['*rtvec;', 2.598833643460815e-06], ['tree_node;', 2.598833643460815e-06], ['tree_node', 2.598833643460815e-06], ['*tree;', 2.598833643460815e-06], ['DEFTREECODE(SYM,', 2.598833643460815e-06], ['STRING,', 2.598833643460815e-06], ['NARGS)', 2.598833643460815e-06], ['SYM,', 2.598833643460815e-06], ['"tree.def"', 2.598833643460815e-06], ['LAST_AND_UNUSED_TREE_CODE', 2.598833643460815e-06], ['DEFTREECODE', 2.598833643460815e-06], ['klass', 2.598833643460815e-06], ['setjmp(x)', 2.598833643460815e-06], ['verbose_index', 2.598833643460815e-06], ["gcc's", 2.598833643460815e-06], ['real.c.', 2.598833643460815e-06], ['I.e.', 2.598833643460815e-06], ['exercise.', 2.598833643460815e-06], ['MODE', 2.598833643460815e-06], ['SFmode;', 2.598833643460815e-06], ['external_max', 2.598833643460815e-06], ['(REAL_VALUE_TYPE)', 2.598833643460815e-06], ['(long)', 2.598833643460815e-06], ['(long);', 2.598833643460815e-06], ['image[external_max', 2.598833643460815e-06], ['external_max];', 2.598833643460815e-06], ['from_long(long);', 2.598833643460815e-06], ['from_str(const', 2.598833643460815e-06], ['binop(int', 2.598833643460815e-06], ['real_c_float&);', 2.598833643460815e-06], ['unop(int', 2.598833643460815e-06], ['cmp(int', 2.598833643460815e-06], ['real_c_float&)', 2.598833643460815e-06], ['real_c_float()', 2.598833643460815e-06], ['real_c_float(long', 2.598833643460815e-06], ['binop(PLUS_EXPR,', 2.598833643460815e-06], ['binop(MINUS_EXPR,', 2.598833643460815e-06], ['binop(MULT_EXPR,', 2.598833643460815e-06], ['binop(RDIV_EXPR,', 2.598833643460815e-06], ['r.unop(NEGATE_EXPR);', 2.598833643460815e-06], ['r.unop(ABS_EXPR);', 2.598833643460815e-06], ['cmp(LT_EXPR,', 2.598833643460815e-06], ['cmp(LE_EXPR,', 2.598833643460815e-06], ['cmp(EQ_EXPR,', 2.598833643460815e-06], ['cmp(NE_EXPR,', 2.598833643460815e-06], ['cmp(GE_EXPR,', 2.598833643460815e-06], ['cmp(GT_EXPR,', 2.598833643460815e-06], ['real_c_float::from_long', 2.598833643460815e-06], ['MODE,', 2.598833643460815e-06], ['real_c_float::from_str', 2.598833643460815e-06], ['"inf")', 2.598833643460815e-06], ['"nan")', 2.598833643460815e-06], ['real_c_float::binop', 2.598833643460815e-06], ['bi,', 2.598833643460815e-06], ['bb[64],', 2.598833643460815e-06], ['symbol_for_code;', 2.598833643460815e-06], ['PLUS_EXPR:', 2.598833643460815e-06], ["'+';", 2.598833643460815e-06], ['MINUS_EXPR:', 2.598833643460815e-06], ["'-';", 2.598833643460815e-06], ['RDIV_EXPR:', 2.598833643460815e-06], ['real_c_float::unop', 2.598833643460815e-06], ['"abs', 2.598833643460815e-06], ['%s%s', 2.598833643460815e-06], ['real_c_float::cmp', 2.598833643460815e-06], ['bb[64];', 2.598833643460815e-06], ['real_c_float::str()', 2.598833643460815e-06], ['int(fmt->p', 2.598833643460815e-06], ['real_c_float::hex()', 2.598833643460815e-06], ['real_c_float::integer()', 2.598833643460815e-06], ['real_c_float::exp()', 2.598833643460815e-06], ['real_exponent', 2.598833643460815e-06], ['real_c_float::ldexp', 2.598833643460815e-06], ['arithmetic.', 2.598833643460815e-06], ['Exists', 2.598833643460815e-06], ['image;', 2.598833643460815e-06], ['from_str', 2.598833643460815e-06], ['do_abs', 2.598833643460815e-06], ['(T);', 2.598833643460815e-06], ['verbose_binop', 2.598833643460815e-06], ['verbose_unop', 2.598833643460815e-06], ['verbose_cmp', 2.598833643460815e-06], ['native_float()', 2.598833643460815e-06], ['native_float(long', 2.598833643460815e-06], ["'+',", 2.598833643460815e-06], ["'-',", 2.598833643460815e-06], ["'*',", 2.598833643460815e-06], ["'/',", 2.598833643460815e-06], ['verbose_unop("-",', 2.598833643460815e-06], ['-image);', 2.598833643460815e-06], ['verbose_unop("abs', 2.598833643460815e-06], ['do_abs(image));', 2.598833643460815e-06], ['"<",', 2.598833643460815e-06], ['"<=",', 2.598833643460815e-06], ['"==",', 2.598833643460815e-06], ['"!=",', 2.598833643460815e-06], ['">=",', 2.598833643460815e-06], ['">",', 2.598833643460815e-06], ['long(image);', 2.598833643460815e-06], ['native_float<T>::from_str', 2.598833643460815e-06], ['native_float<float>::from_str', 2.598833643460815e-06], ['strtof', 2.598833643460815e-06], ['native_float<double>::from_str', 2.598833643460815e-06], ['native_float<T>::do_abs', 2.598833643460815e-06], ['fabsl', 2.598833643460815e-06], ['native_float<float>::do_abs', 2.598833643460815e-06], ['fabsf', 2.598833643460815e-06], ['native_float<double>::do_abs', 2.598833643460815e-06], ['fabs', 2.598833643460815e-06], ['native_float<T>::verbose_binop', 2.598833643460815e-06], ['native_float<T>::verbose_unop', 2.598833643460815e-06], ['%s%.*a', 2.598833643460815e-06], ['%s%.*La', 2.598833643460815e-06], ['native_float<T>::verbose_cmp', 2.598833643460815e-06], ['native_float<T>::str()', 2.598833643460815e-06], ['"%.*e",', 2.598833643460815e-06], ['"%.*Le",', 2.598833643460815e-06], ['native_float<T>::hex()', 2.598833643460815e-06], ['"%.*a",', 2.598833643460815e-06], ['"%.*La",', 2.598833643460815e-06], ['native_float<T>::exp()', 2.598833643460815e-06], ['frexp', 2.598833643460815e-06], ['&e);', 2.598833643460815e-06], ['native_float<T>::ldexp', 2.598833643460815e-06], ['ldexpl', 2.598833643460815e-06], ['native_float<float>::ldexp', 2.598833643460815e-06], ['ldexpf', 2.598833643460815e-06], ['native_float<double>::ldexp', 2.598833643460815e-06], ['::ldexp', 2.598833643460815e-06], ['libm', 2.598833643460815e-06], ['f.abs();', 2.598833643460815e-06], ['operator+', 2.598833643460815e-06], ['operator*', 2.598833643460815e-06], ['operator/', 2.598833643460815e-06], ['/=', 2.598833643460815e-06], ['f.integer();', 2.598833643460815e-06], ['diff,', 2.598833643460815e-06], ['diff2;', 2.598833643460815e-06], ['z.ldexp', 2.598833643460815e-06], ['(-f.exp()', 2.598833643460815e-06], ['(diff2', 2.598833643460815e-06], ['(two', 2.598833643460815e-06], ['z))', 2.598833643460815e-06], ['two);', 2.598833643460815e-06], ['(diff', 2.598833643460815e-06], ['diff2)', 2.598833643460815e-06], ['defined(NO_LONG_DOUBLE)', 2.598833643460815e-06], ['sqrtl', 2.598833643460815e-06], ['x.exp()', 2.598833643460815e-06], ['x.ldexp(-exp);', 2.598833643460815e-06], ['xm1', 2.598833643460815e-06], ['term;', 2.598833643460815e-06], ['(next', 2.598833643460815e-06], ['sum)', 2.598833643460815e-06], ['(++n', 2.598833643460815e-06], ['1000)', 2.598833643460815e-06], ['FLOAT(".69314718055994530941");', 2.598833643460815e-06], ['(NO_LONG_DOUBLE)', 2.598833643460815e-06], ['logl', 2.598833643460815e-06], ['expl', 2.598833643460815e-06], ['&base,', 2.598833643460815e-06], ['&exp)', 2.598833643460815e-06], ['d2;', 2.598833643460815e-06], ['d2', 2.598833643460815e-06], ['(d1,', 2.598833643460815e-06], ['d2);', 2.598833643460815e-06], ['d1);', 2.598833643460815e-06], ['ld1,', 2.598833643460815e-06], ['ld2;', 2.598833643460815e-06], ['ld2', 2.598833643460815e-06], ['powl', 2.598833643460815e-06], ['(ld1,', 2.598833643460815e-06], ['ld2);', 2.598833643460815e-06], ['ld1);', 2.598833643460815e-06], ['/*Number', 2.598833643460815e-06], ['commutativity.', 2.598833643460815e-06], ['No,', 2.598833643460815e-06], ['Other,', 2.598833643460815e-06], ['Rounded,', 2.598833643460815e-06], ['Chopped', 2.598833643460815e-06], ['Failure,', 2.598833643460815e-06], ['Serious,', 2.598833643460815e-06], ['Defect,', 2.598833643460815e-06], ['Flaw', 2.598833643460815e-06], ['Radix,', 2.598833643460815e-06], ['BInvrse,', 2.598833643460815e-06], ['RadixD2,', 2.598833643460815e-06], ['Small', 2.598833643460815e-06], ['Four;', 2.598833643460815e-06], ['Five;', 2.598833643460815e-06], ['Eight;', 2.598833643460815e-06], ['ThirtyTwo;', 2.598833643460815e-06], ['MinusOne;', 2.598833643460815e-06], ['Indx;', 2.598833643460815e-06], ['ch[8];', 2.598833643460815e-06], ['AInvrse,', 2.598833643460815e-06], ['FourD;', 2.598833643460815e-06], ['E0,', 2.598833643460815e-06], ['Exp2,', 2.598833643460815e-06], ['E3,', 2.598833643460815e-06], ['MinSqEr;', 2.598833643460815e-06], ['SqEr,', 2.598833643460815e-06], ['MaxSqEr,', 2.598833643460815e-06], ['F6,', 2.598833643460815e-06], ['H,', 2.598833643460815e-06], ['I;', 2.598833643460815e-06], ['StickyBit,', 2.598833643460815e-06], ['J;', 2.598833643460815e-06], ['MyZero;', 2.598833643460815e-06], ['Q,', 2.598833643460815e-06], ['Q9;', 2.598833643460815e-06], ['R,', 2.598833643460815e-06], ['OneUlp,', 2.598833643460815e-06], ['UfThold,', 2.598833643460815e-06], ['U1,', 2.598833643460815e-06], ['V,', 2.598833643460815e-06], ['V0,', 2.598833643460815e-06], ['X2,', 2.598833643460815e-06], ['X8,', 2.598833643460815e-06], ['Y,', 2.598833643460815e-06], ['Y2,', 2.598833643460815e-06], ['PseudoZero,', 2.598833643460815e-06], ['Z1,', 2.598833643460815e-06], ['Z2,', 2.598833643460815e-06], ['ErrCnt[4];', 2.598833643460815e-06], ['Milestone;', 2.598833643460815e-06], ['PageNo;', 2.598833643460815e-06], ['N,', 2.598833643460815e-06], ['N1;', 2.598833643460815e-06], ['GMult,', 2.598833643460815e-06], ['GDiv,', 2.598833643460815e-06], ['GAddSub;', 2.598833643460815e-06], ['RMult,', 2.598833643460815e-06], ['RDiv,', 2.598833643460815e-06], ['RAddSub,', 2.598833643460815e-06], ['RSqrt;', 2.598833643460815e-06], ['Break,', 2.598833643460815e-06], ['Done,', 2.598833643460815e-06], ['NotMonot,', 2.598833643460815e-06], ['Monot,', 2.598833643460815e-06], ['Anomaly,', 2.598833643460815e-06], ['IEEE,', 2.598833643460815e-06], ['SqRWrng,', 2.598833643460815e-06], ['UfNGrad;', 2.598833643460815e-06], ['Computed', 2.598833643460815e-06], ['/*U1', 2.598833643460815e-06], ['1.0-U1', 2.598833643460815e-06], ['/*U2', 2.598833643460815e-06], ['1.0+U2', 2.598833643460815e-06], ['Sign', 2.598833643460815e-06], ['(FLOAT);', 2.598833643460815e-06], ['IsYeqX', 2.598833643460815e-06], ['SR3750', 2.598833643460815e-06], ['Pretend', 2.598833643460815e-06], ['bss.', 2.598833643460815e-06], ['Paranoia()', 2.598833643460815e-06], ['memset(this,', 2.598833643460815e-06], ['(*this));', 2.598833643460815e-06], ['Paranoia<FLOAT>::main()', 2.598833643460815e-06], ['sides.', 2.598833643460815e-06], ['long(1);', 2.598833643460815e-06], ['long(2);', 2.598833643460815e-06], ['long(3);', 2.598833643460815e-06], ['long(4);', 2.598833643460815e-06], ['long(5);', 2.598833643460815e-06], ['long(8);', 2.598833643460815e-06], ['long(9);', 2.598833643460815e-06], ['long(27);', 2.598833643460815e-06], ['long(32);', 2.598833643460815e-06], ['long(240);', 2.598833643460815e-06], ['long(-1);', 2.598833643460815e-06], ['"0x1p-1";', 2.598833643460815e-06], ['"0x3p-1";', 2.598833643460815e-06], ['ErrCnt[Flaw]', 2.598833643460815e-06], ['("Program', 2.598833643460815e-06], ['RUNNING', 2.598833643460815e-06], ['integers:\\n");', 2.598833643460815e-06], ['"0+0', 2.598833643460815e-06], ['"1-1', 2.598833643460815e-06], ['"1', 2.598833643460815e-06], ['Two),', 2.598833643460815e-06], ['"1+1', 2.598833643460815e-06], ['2");', 2.598833643460815e-06], ['-Zero;', 2.598833643460815e-06], ['Non-zero!\\n");', 2.598833643460815e-06], ['"0.001";', 2.598833643460815e-06], ['(Three', 2.598833643460815e-06], ['"3', 2.598833643460815e-06], ['2+1");', 2.598833643460815e-06], ['3+1");', 2.598833643460815e-06], ['(-Two)', 2.598833643460815e-06], ['2*(-2)', 2.598833643460815e-06], ['"4-3-1', 2.598833643460815e-06], ['One)),', 2.598833643460815e-06], ['"-1', 2.598833643460815e-06], ['0-1");', 2.598833643460815e-06], ['"-1+1', 2.598833643460815e-06], ['"1+(-1)', 2.598833643460815e-06], ['(One)', 2.598833643460815e-06], ['"-1+abs(1)', 2.598833643460815e-06], ['"-1+(-1)*(-1)', 2.598833643460815e-06], ['"1/2', 2.598833643460815e-06], ['(-1)', 2.598833643460815e-06], ['(Nine', 2.598833643460815e-06], ['"9', 2.598833643460815e-06], ['3*3");', 2.598833643460815e-06], ['(TwentySeven', 2.598833643460815e-06], ['"27', 2.598833643460815e-06], ['9*3");', 2.598833643460815e-06], ['(Eight', 2.598833643460815e-06], ['"8', 2.598833643460815e-06], ['4+4");', 2.598833643460815e-06], ['"32', 2.598833643460815e-06], ['8*4");', 2.598833643460815e-06], ['"32-27-4-1', 2.598833643460815e-06], ['"5', 2.598833643460815e-06], ['4+1");', 2.598833643460815e-06], ['Four,', 2.598833643460815e-06], ['"240', 2.598833643460815e-06], ['4*5*3*4");', 2.598833643460815e-06], ['"240/3', 2.598833643460815e-06], ['4*4*5', 2.598833643460815e-06], ['"240/4', 2.598833643460815e-06], ['5*3*4', 2.598833643460815e-06], ['"240/5', 2.598833643460815e-06], ['4*3*4', 2.598833643460815e-06], ['("-1,', 2.598833643460815e-06], ['1/2,', 2.598833643460815e-06], ['240', 2.598833643460815e-06], ['Precision.\\n");', 2.598833643460815e-06], ['(Y)', 2.598833643460815e-06], ['/*..', 2.598833643460815e-06], ['|((W+1)-W)-1|', 2.598833643460815e-06], ['Radix^Precision', 2.598833643460815e-06], ['barely', 2.598833643460815e-06], ['(W+1)-W', 2.598833643460815e-06], ['("Closest', 2.598833643460815e-06], ['.\\n\\n",', 2.598833643460815e-06], ['("Recalculating', 2.598833643460815e-06], ['radix', 2.598833643460815e-06], ['precision\\n', 2.598833643460815e-06], ['/*save', 2.598833643460815e-06], ['Third);', 2.598833643460815e-06], ['1+...', 2.598833643460815e-06], ['(!((U2', 2.598833643460815e-06], ['F6);', 2.598833643460815e-06], ['-...', 2.598833643460815e-06], ['(!((U1', 2.598833643460815e-06], ['(U1', 2.598833643460815e-06], ['("confirms', 2.598833643460815e-06], ['("gets', 2.598833643460815e-06], ['("0.01")', 2.598833643460815e-06], ['U1);', 2.598833643460815e-06], ['confirmed.\\n");', 2.598833643460815e-06], ['("MYSTERY:', 2.598833643460815e-06], ['recalculated', 2.598833643460815e-06], ['Eight,', 2.598833643460815e-06], ['big:', 2.598833643460815e-06], ['roundoff', 2.598833643460815e-06], ['problems");', 2.598833643460815e-06], ['10");', 2.598833643460815e-06], ['"(1-U1)-1/2', 2.598833643460815e-06], ['FALSE,', 2.598833643460815e-06], ['prog.', 2.598833643460815e-06], ['fails?");', 2.598833643460815e-06], ['"Comparison', 2.598833643460815e-06], ['fuzzy,X=1', 2.598833643460815e-06], ['X-1/2-1/2', 2.598833643460815e-06], ['25;', 2.598833643460815e-06], ['nextafter(Radix,', 2.598833643460815e-06], ['(BMinusU2', 2.598833643460815e-06], ['Purify', 2.598833643460815e-06], ['-TwoForty', 2.598833643460815e-06], ['(U1)', 2.598833643460815e-06], ['(Radix);', 2.598833643460815e-06], ['X);', 2.598833643460815e-06], ['Precision);', 2.598833643460815e-06], ['("Precision', 2.598833643460815e-06], ['number\\n");', 2.598833643460815e-06], ['but,', 2.598833643460815e-06], ['flaw.\\n");', 2.598833643460815e-06], ['("logarithmic', 2.598833643460815e-06], ['U1.\\n");', 2.598833643460815e-06], ['Precision.str());', 2.598833643460815e-06], ['"Precision', 2.598833643460815e-06], ['worse', 2.598833643460815e-06], ['30;', 2.598833643460815e-06], ['(((Four', 2.598833643460815e-06], ['Four)', 2.598833643460815e-06], ['Z2))', 2.598833643460815e-06], ['(!((Z2', 2.598833643460815e-06], ['((Three', 2.598833643460815e-06], ['(!((Z1', 2.598833643460815e-06], ['Y1))', 2.598833643460815e-06], ['(!((Y1', 2.598833643460815e-06], ['X1)', 2.598833643460815e-06], ['F9)', 2.598833643460815e-06], ['(!((X1', 2.598833643460815e-06], ['(X1', 2.598833643460815e-06], ['"Disagreements', 2.598833643460815e-06], ['Z1,\\n");', 2.598833643460815e-06], ['("respectively', 2.598833643460815e-06], ['%s,\\n",', 2.598833643460815e-06], ['X1.str(),', 2.598833643460815e-06], ['Y1.str(),', 2.598833643460815e-06], ['Z1.str());', 2.598833643460815e-06], ['("are', 2.598833643460815e-06], ['symptoms', 2.598833643460815e-06], ['inconsistencies', 2.598833643460815e-06], ['introduced\\n");', 2.598833643460815e-06], ['("by', 2.598833643460815e-06], ['subexpressions.\\n");', 2.598833643460815e-06], ['("Possibly', 2.598833643460815e-06], ['U1))', 2.598833643460815e-06], ['("Precision");', 2.598833643460815e-06], ['("\\tU1', 2.598833643460815e-06], ['U1.str(),', 2.598833643460815e-06], ['U1).str());', 2.598833643460815e-06], ['("\\tU2', 2.598833643460815e-06], ['U2.str(),', 2.598833643460815e-06], ['U2).str());', 2.598833643460815e-06], ['("Because', 2.598833643460815e-06], ['(",', 2.598833643460815e-06], ['rational', 2.598833643460815e-06], ['result\\n");', 2.598833643460815e-06], ['("Z1', 2.598833643460815e-06], ['Z1.str(),', 2.598833643460815e-06], ['Z2.str());', 2.598833643460815e-06], ['an\\nextra-precision");', 2.598833643460815e-06], ['-LOG', 2.598833643460815e-06], ['("Some', 2.598833643460815e-06], ['"extra', 2.598833643460815e-06], ['precisely\\n");', 2.598833643460815e-06], ['("with', 2.598833643460815e-06], ['B-digits,', 2.598833643460815e-06], ['i.e.\\n",', 2.598833643460815e-06], ['(Radix)).str());', 2.598833643460815e-06], ['("roughly', 2.598833643460815e-06], ['decimals.\\n",', 2.598833643460815e-06], ['(10))).str());', 2.598833643460815e-06], ['35;', 2.598833643460815e-06], ['U2,', 2.598833643460815e-06], ['"Subtraction', 2.598833643460815e-06], ['X=Y,X+Z', 2.598833643460815e-06], ['Y+Z!");', 2.598833643460815e-06], ['("Subtraction', 2.598833643460815e-06], ['normalized,', 2.598833643460815e-06], ['be.");', 2.598833643460815e-06], ['("\\nChecking', 2.598833643460815e-06], ['-.\\n");', 2.598833643460815e-06], ['1*X', 2.598833643460815e-06], ['exceed', 2.598833643460815e-06], ['ulp\\n"', 2.598833643460815e-06], ['1/3', 2.598833643460815e-06], ['3/9', 2.598833643460815e-06], ['9/27', 2.598833643460815e-06], ['disagree");', 2.598833643460815e-06], ['X/1', 2.598833643460815e-06], ['"Computed', 2.598833643460815e-06], ['1/1.000..1', 2.598833643460815e-06], ['"-', 2.598833643460815e-06], ['cancellation', 2.598833643460815e-06], ['obscured");', 2.598833643460815e-06], ['"comparison', 2.598833643460815e-06], ['although\\n");', 2.598833643460815e-06], ['thereby', 2.598833643460815e-06], ['vitiating\\n");', 2.598833643460815e-06], ['precautions', 2.598833643460815e-06], ['as\\n");', 2.598833643460815e-06], ['1.0)', 2.598833643460815e-06], ['{.....}', 2.598833643460815e-06], ['{.../(X-1.0)...}\\n");', 2.598833643460815e-06], ['should.\\n");', 2.598833643460815e-06], ['40;', 2.598833643460815e-06], ['multiply,', 2.598833643460815e-06], ['add/subtract.\\n");', 2.598833643460815e-06], ['(!(FLOOR', 2.598833643460815e-06], ['(AInvrse)', 2.598833643460815e-06], ['AInvrse));', 2.598833643460815e-06], ['(A1', 2.598833643460815e-06], ['Three);', 2.598833643460815e-06], ['(!Done)', 2.598833643460815e-06], ['(1/X)', 2.598833643460815e-06], ['StickyBit;', 2.598833643460815e-06], ['((RMult', 2.598833643460815e-06], ['No))', 2.598833643460815e-06], ['("Multiplication");', 2.598833643460815e-06], ['45;', 2.598833643460815e-06], ['OneAndHalf)', 2.598833643460815e-06], ['("Division");', 2.598833643460815e-06], ['Other)', 2.598833643460815e-06], ['("/', 2.598833643460815e-06], ['(BInvrse', 2.598833643460815e-06], ['Half),', 2.598833643460815e-06], ['50;', 2.598833643460815e-06], ['((F9', 2.598833643460815e-06], ['((BMinusU2', 2.598833643460815e-06], ['"Incomplete', 2.598833643460815e-06], ['carry-propagation', 2.598833643460815e-06], ['Addition");', 2.598833643460815e-06], ['("Add/Subtract', 2.598833643460815e-06], ['chopped.\\n");', 2.598833643460815e-06], ['("Add/Subtract");', 2.598833643460815e-06], ['"(X', 2.598833643460815e-06], ['zero!\\n");', 2.598833643460815e-06], ['((GMult', 2.598833643460815e-06], ['(RMult', 2.598833643460815e-06], ['(FLOOR', 2.598833643460815e-06], ['(RadixD2)', 2.598833643460815e-06], ['RadixD2))', 2.598833643460815e-06], ['sticky', 2.598833643460815e-06], ['bit.\\n");', 2.598833643460815e-06], ['((T', 2.598833643460815e-06], ['all.\\n");', 2.598833643460815e-06], ['!(GMult', 2.598833643460815e-06], ['Other),', 2.598833643460815e-06], ['"lack(s)', 2.598833643460815e-06], ['failure(s)', 2.598833643460815e-06], ['chop\\n\\', 2.598833643460815e-06], ['(noted', 2.598833643460815e-06], ['above)', 2.598833643460815e-06], ['flaw', 2.598833643460815e-06], ['tally', 2.598833643460815e-06], ['below");', 2.598833643460815e-06], ['60;', 2.598833643460815e-06], ['("Does', 2.598833643460815e-06], ['Multiplication', 2.598833643460815e-06], ['commute?', 2.598833643460815e-06], ['random', 2.598833643460815e-06], ['trial', 2.598833643460815e-06], ['fails.\\n");', 2.598833643460815e-06], ['70;', 2.598833643460815e-06], ['("\\nRunning', 2.598833643460815e-06], ['root(x).\\n");', 2.598833643460815e-06], ['(Zero))', 2.598833643460815e-06], ['(-Zero', 2.598833643460815e-06], ['(-Zero))', 2.598833643460815e-06], ['(One)),', 2.598833643460815e-06], ['"Square', 2.598833643460815e-06], ['sqrt(X', 2.598833643460815e-06], ['X.\\n",', 2.598833643460815e-06], ['(!((Y', 2.598833643460815e-06], ['NoTrials)));', 2.598833643460815e-06], ['(Defect);', 2.598833643460815e-06], ['("Test', 2.598833643460815e-06], ['monotonicity.\\n");', 2.598833643460815e-06], ['(!(NotMonot', 2.598833643460815e-06], ['Monot))', 2.598833643460815e-06], ['(Y);', 2.598833643460815e-06], ['Z))', 2.598833643460815e-06], ['(!(I', 2.598833643460815e-06], ['Q))', 2.598833643460815e-06], ['(Monot)', 2.598833643460815e-06], ['("sqrt', 2.598833643460815e-06], ['Monotonicity.\\n");', 2.598833643460815e-06], ['("sqrt(X)', 2.598833643460815e-06], ['non-monotonic', 2.598833643460815e-06], ['110;', 2.598833643460815e-06], ['("Seeking', 2.598833643460815e-06], ['thresholds', 2.598833643460815e-06], ['1/Radix', 2.598833643460815e-06], ['1/HInvrse', 2.598833643460815e-06], ['Min(1/Radix,', 2.598833643460815e-06], ['1/2)', 2.598833643460815e-06], ['...1/Radix^(BIG', 2.598833643460815e-06], ['Integer)', 2.598833643460815e-06], ['1/C', 2.598833643460815e-06], ['((E0', 2.598833643460815e-06], ['"multiplication', 2.598833643460815e-06], ['((UfThold', 2.598833643460815e-06], ['Y2))', 2.598833643460815e-06], ['((Underflow', 2.598833643460815e-06], ['PseudoZero)', 2.598833643460815e-06], ['PseudoZero));', 2.598833643460815e-06], ['Comment', 2.598833643460815e-06], ['4530', 2.598833643460815e-06], ['4560', 2.598833643460815e-06], ['"phoney-', 2.598833643460815e-06], ['zero"', 2.598833643460815e-06], ['violates', 2.598833643460815e-06], ['"Positive', 2.598833643460815e-06], ['an\\n");', 2.598833643460815e-06], ['("allegedly', 2.598833643460815e-06], ['value\\n");', 2.598833643460815e-06], ['("PseudoZero', 2.598833643460815e-06], ['-PseudoZero;', 2.598833643460815e-06], ['("But', 2.598833643460815e-06], ['-PseudoZero,', 2.598833643460815e-06], ['be\\n");', 2.598833643460815e-06], ['("positive,', 2.598833643460815e-06], ["isn't;", 2.598833643460815e-06], ['stick', 2.598833643460815e-06], ['allegedly', 2.598833643460815e-06], ['positive\\n");', 2.598833643460815e-06], ['("value', 2.598833643460815e-06], ['120;', 2.598833643460815e-06], ['(CInvrse', 2.598833643460815e-06], ['(!((E1', 2.598833643460815e-06], ['E0)))', 2.598833643460815e-06], ['("Products', 2.598833643460815e-06], ['differences.\\n");', 2.598833643460815e-06], ['E1;', 2.598833643460815e-06], ['("Difference', 2.598833643460815e-06], ['underflows', 2.598833643460815e-06], ['products.\\n");', 2.598833643460815e-06], ['("Smallest', 2.598833643460815e-06], ['E0.str());', 2.598833643460815e-06], ['S))', 2.598833643460815e-06], ['"Either', 2.598833643460815e-06], ['accuracy', 2.598833643460815e-06], ['deteriorates', 2.598833643460815e-06], ['numbers\\n");', 2.598833643460815e-06], ['("approach', 2.598833643460815e-06], ['coming', 2.598833643460815e-06], ['C.str());', 2.598833643460815e-06], ['confuses', 2.598833643460815e-06], ['Comparison,', 2.598833643460815e-06], ['that\\n");', 2.598833643460815e-06], ['("Q', 2.598833643460815e-06], ['denying', 2.598833643460815e-06], ['|Q', 2.598833643460815e-06], ['values\\n");', 2.598833643460815e-06], ['("print', 2.598833643460815e-06], ['Q.str(),', 2.598833643460815e-06], ['("|Q', 2.598833643460815e-06], ['Y2).str());', 2.598833643460815e-06], ['((Q', 2.598833643460815e-06], ['E1))', 2.598833643460815e-06], ['gradual;', 2.598833643460815e-06], ['incurs', 2.598833643460815e-06], ['Absolute', 2.598833643460815e-06], ['=\\n");', 2.598833643460815e-06], ['("(roundoff', 2.598833643460815e-06], ['E0);', 2.598833643460815e-06], ['(UfNGrad)', 2.598833643460815e-06], ['failed!\\n");', 2.598833643460815e-06], ['(Underflow', 2.598833643460815e-06], ['UfThold);', 2.598833643460815e-06], ['(R', 2.598833643460815e-06], ['H)', 2.598833643460815e-06], ['%s\\n\\tis', 2.598833643460815e-06], ['("yet', 2.598833643460815e-06], ['Z9.str());', 2.598833643460815e-06], ['("this', 2.598833643460815e-06], ['DEFECT\\nthat', 2.598833643460815e-06], ['("confusion', 2.598833643460815e-06], ['innocent', 2.598833643460815e-06], ['like\\n");;', 2.598833643460815e-06], ['else");', 2.598833643460815e-06], ['(f(X)', 2.598833643460815e-06], ['f(Z))', 2.598833643460815e-06], ['...\\n");', 2.598833643460815e-06], ['("encounter', 2.598833643460815e-06], ['actually\\n");', 2.598833643460815e-06], ['fails!\\n");', 2.598833643460815e-06], ['Half).str());', 2.598833643460815e-06], ['which\\n",', 2.598833643460815e-06], ['("calculation', 2.598833643460815e-06], ['suffer', 2.598833643460815e-06], ['Relative', 2.598833643460815e-06], ['("merely', 2.598833643460815e-06], ['roundoff.\\n");', 2.598833643460815e-06], ['("Range', 2.598833643460815e-06], ['narrow;', 2.598833643460815e-06], ['U1^%d', 2.598833643460815e-06], ['Underflows.\\n",', 2.598833643460815e-06], ['I);', 2.598833643460815e-06], ['130;', 2.598833643460815e-06], ['-FLOOR', 2.598833643460815e-06], ['(UfThold)', 2.598833643460815e-06], ['(HInvrse))', 2.598833643460815e-06], ['threshold\\n");', 2.598833643460815e-06], ['("UfThold', 2.598833643460815e-06], ['(%s)\\nonly', 2.598833643460815e-06], ['("should', 2.598833643460815e-06], ['afflict', 2.598833643460815e-06], ['expression\\n\\t(%s)', 2.598833643460815e-06], ['(%s);\\n",', 2.598833643460815e-06], ['("actually', 2.598833643460815e-06], ['calculating', 2.598833643460815e-06], ['yields:");', 2.598833643460815e-06], ['"trap', 2.598833643460815e-06], ['underflow.\\n");', 2.598833643460815e-06], ['(HInvrse,', 2.598833643460815e-06], ['(!((V9', 2.598833643460815e-06], ['UfThold)))', 2.598833643460815e-06], ['(!(V9', 2.598833643460815e-06], ['E9)))', 2.598833643460815e-06], ['160;', 2.598833643460815e-06], ['threshold:\\n");', 2.598833643460815e-06], ['error.\\n");', 2.598833643460815e-06], ['-CInvrse;', 2.598833643460815e-06], ['Y);', 2.598833643460815e-06], ['overflow:', 2.598833643460815e-06], ['("Can', 2.598833643460815e-06], ['`Z', 2.598833643460815e-06], ["-Y'", 2.598833643460815e-06], ['overflow?\\n");', 2.598833643460815e-06], ['("Trying', 2.598833643460815e-06], ['-Y;', 2.598833643460815e-06], ['(V', 2.598833643460815e-06], ['("Seems', 2.598833643460815e-06], ['("finds', 2.598833643460815e-06], ['"-(-Y)', 2.598833643460815e-06], ['Y.\\n");', 2.598833643460815e-06], ['("overflow', 2.598833643460815e-06], ['%s\\n\\tshrinks', 2.598833643460815e-06], ['Y.str(),', 2.598833643460815e-06], ['(V0', 2.598833643460815e-06], ['V.str());', 2.598833643460815e-06], ['saturates', 2.598833643460815e-06], ['V0.str());', 2.598833643460815e-06], ['("There', 2.598833643460815e-06], ['saturation', 2.598833643460815e-06], ['overflow.\\n");', 2.598833643460815e-06], ['signaled', 2.598833643460815e-06], ['%s.\\n",', 2.598833643460815e-06], ['("Any', 2.598833643460815e-06], ['separating', 2.598833643460815e-06], ['one\\n");', 2.598833643460815e-06], ['("above', 2.598833643460815e-06], ['DEFECT.\\n");', 2.598833643460815e-06], ['170;', 2.598833643460815e-06], ['(!(-V', 2.598833643460815e-06], ['-V0', 2.598833643460815e-06], ['-UfThold', 2.598833643460815e-06], ['V))', 2.598833643460815e-06], ['"Comparisons', 2.598833643460815e-06], ['involving', 2.598833643460815e-06], ['("+-%s,', 2.598833643460815e-06], ['+-%s\\nand', 2.598833643460815e-06], ['+-%s', 2.598833643460815e-06], ['Overflow.",', 2.598833643460815e-06], ['V.str(),', 2.598833643460815e-06], ['V0.str(),', 2.598833643460815e-06], ['175;', 2.598833643460815e-06], ['dgh:', 2.598833643460815e-06], ['-->', 2.598833643460815e-06], ['180;', 2.598833643460815e-06], ['(((V9', 2.598833643460815e-06], ['Z)))', 2.598833643460815e-06], ['190;', 2.598833643460815e-06], ['"Badly");', 2.598833643460815e-06], ['unbalanced', 2.598833643460815e-06], ['range;', 2.598833643460815e-06], ['%s\\n\\t%s\\n",', 2.598833643460815e-06], ['1.\\n");', 2.598833643460815e-06], ['200;', 2.598833643460815e-06], ['-U1', 2.598833643460815e-06], ['210;', 2.598833643460815e-06], ['MyZero', 2.598833643460815e-06], ['produce?\\n");', 2.598833643460815e-06], ['("\\n', 2.598833643460815e-06], ['220;', 2.598833643460815e-06], ['"FAILUREs', 2.598833643460815e-06], ['DEFECTs', 2.598833643460815e-06], ['"DEFECTs', 2.598833643460815e-06], ['"FLAWs', 2.598833643460815e-06], ['="', 2.598833643460815e-06], ['(ErrCnt[i])', 2.598833643460815e-06], ['%-29s', 2.598833643460815e-06], ['%d.\\n",', 2.598833643460815e-06], ['msg[i],', 2.598833643460815e-06], ['ErrCnt[i]);', 2.598833643460815e-06], ['ErrCnt[Flaw])', 2.598833643460815e-06], ['(ErrCnt[Flaw]', 2.598833643460815e-06], ['("Satisfactory', 2.598833643460815e-06], ['flawed.\\n");', 2.598833643460815e-06], ['(ErrCnt[Defect]', 2.598833643460815e-06], ['Acceptable\\n");', 2.598833643460815e-06], ['("despite', 2.598833643460815e-06], ['inconvenient', 2.598833643460815e-06], ['ErrCnt[Serious])', 2.598833643460815e-06], ['("unacceptable', 2.598833643460815e-06], ['Serious', 2.598833643460815e-06], ['("Potentially', 2.598833643460815e-06], ['FAILURE', 2.598833643460815e-06], ['spoiled', 2.598833643460815e-06], ["program's", 2.598833643460815e-06], ['diagnoses.\\n");', 2.598833643460815e-06], ['failures,', 2.598833643460815e-06], ['defects', 2.598833643460815e-06], ['flaws', 2.598833643460815e-06], ['discovered.\\n");', 2.598833643460815e-06], ['(!((RMult', 2.598833643460815e-06], ['(RSqrt', 2.598833643460815e-06], ['Rounded)))', 2.598833643460815e-06], ['Satisfactory.\\n");', 2.598833643460815e-06], ['("Rounding', 2.598833643460815e-06], ['("the', 2.598833643460815e-06], ['proposed', 2.598833643460815e-06], ['P");', 2.598833643460815e-06], ['("754");', 2.598833643460815e-06], ['("854");', 2.598833643460815e-06], ['(IEEE)', 2.598833643460815e-06], ['(",\\nexcept', 2.598833643460815e-06], ['Rounding");', 2.598833643460815e-06], ['Gradual', 2.598833643460815e-06], ['Underflow.\\n");', 2.598833643460815e-06], ['Excellent!\\n");', 2.598833643460815e-06], ['("END', 2.598833643460815e-06], ['OF', 2.598833643460815e-06], ['TEST.\\n");', 2.598833643460815e-06], ['Paranoia<FLOAT>::Sign', 2.598833643460815e-06], ['(0))', 2.598833643460815e-06], ['Paranoia<FLOAT>::Pause', 2.598833643460815e-06], ['(do_pause)', 2.598833643460815e-06], ['("Press', 2.598833643460815e-06], ['return...",', 2.598833643460815e-06], ['stdout);', 2.598833643460815e-06], ['fflush', 2.598833643460815e-06], ['(stdout);', 2.598833643460815e-06], ['getchar();', 2.598833643460815e-06], ['("\\nDiagnosis', 2.598833643460815e-06], ['resumes', 2.598833643460815e-06], ['milestone', 2.598833643460815e-06], ['Milestone);', 2.598833643460815e-06], ['Page:', 2.598833643460815e-06], ['%d\\n\\n",', 2.598833643460815e-06], ['PageNo);', 2.598833643460815e-06], ['++Milestone;', 2.598833643460815e-06], ['++PageNo;', 2.598833643460815e-06], ['Paranoia<FLOAT>::TstCond', 2.598833643460815e-06], ['Valid,', 2.598833643460815e-06], ['(!Valid)', 2.598833643460815e-06], ['(K,', 2.598833643460815e-06], ['Paranoia<FLOAT>::BadCond', 2.598833643460815e-06], ['"FAILURE",', 2.598833643460815e-06], ['DEFECT",', 2.598833643460815e-06], ['"DEFECT",', 2.598833643460815e-06], ['"FLAW"', 2.598833643460815e-06], ['msg[K],', 2.598833643460815e-06], ['(Random1', 2.598833643460815e-06], ['Random9)^5', 2.598833643460815e-06], ['FLOOR(X)', 2.598833643460815e-06], ['0.000005', 2.598833643460815e-06], ['Random1.', 2.598833643460815e-06], ['Paranoia<FLOAT>::Random', 2.598833643460815e-06], ['("0.000005");', 2.598833643460815e-06], ['(Random1);', 2.598833643460815e-06], ['Paranoia<FLOAT>::SqXMinX', 2.598833643460815e-06], ['ErrKind)', 2.598833643460815e-06], ['XA,', 2.598833643460815e-06], ['XB', 2.598833643460815e-06], ['XA', 2.598833643460815e-06], ['((SQRT', 2.598833643460815e-06], ['XB)', 2.598833643460815e-06], ['XA)', 2.598833643460815e-06], ['OneUlp;', 2.598833643460815e-06], ['(ErrKind,', 2.598833643460815e-06], ['("sqrt(%s)', 2.598833643460815e-06], ['X).str(),', 2.598833643460815e-06], ['(OneUlp', 2.598833643460815e-06], ['SqEr).str());', 2.598833643460815e-06], ['("\\tinstead', 2.598833643460815e-06], ['Paranoia<FLOAT>::NewD', 2.598833643460815e-06], ['-Z;', 2.598833643460815e-06], ['-Z1;', 2.598833643460815e-06], ['Paranoia<FLOAT>::SR3750', 2.598833643460815e-06], ['Z2)))', 2.598833643460815e-06], ['D);', 2.598833643460815e-06], ['(X2', 2.598833643460815e-06], ['Z2)', 2.598833643460815e-06], ['Z2);', 2.598833643460815e-06], ['X2);', 2.598833643460815e-06], ['Paranoia<FLOAT>::IsYeqX', 2.598833643460815e-06], ['("WARNING:', 2.598833643460815e-06], ['computing\\n");', 2.598833643460815e-06], ['"computing\\n");', 2.598833643460815e-06], ['("\\t(%s)', 2.598833643460815e-06], ['(%s)\\n",', 2.598833643460815e-06], ['Z.str(),', 2.598833643460815e-06], ['Q.str());', 2.598833643460815e-06], ['("\\tyielded', 2.598833643460815e-06], ['%s;\\n",', 2.598833643460815e-06], ['("\\twhich', 2.598833643460815e-06], ['unequal', 2.598833643460815e-06], [';\\n",', 2.598833643460815e-06], ['("\\t\\tthey', 2.598833643460815e-06], ['X).str());', 2.598833643460815e-06], ['discrepancies.', 2.598833643460815e-06], ['Paranoia<FLOAT>::PrintIfNPositive', 2.598833643460815e-06], ['("Similar', 2.598833643460815e-06], ['discrepancies', 2.598833643460815e-06], ['times.\\n",', 2.598833643460815e-06], ['N);', 2.598833643460815e-06], ['Paranoia<FLOAT>::TstPtUf', 2.598833643460815e-06], ['denies', 2.598833643460815e-06], ['("(Z', 2.598833643460815e-06], ['safe.\\n");', 2.598833643460815e-06], ['very_serious;', 2.598833643460815e-06], ['Q9.str());', 2.598833643460815e-06], ['O.K.,', 2.598833643460815e-06], ['Over/Underflow");', 2.598833643460815e-06], ['signaled.\\n");', 2.598833643460815e-06], ['((Q9', 2.598833643460815e-06], ['very_serious:', 2.598833643460815e-06], ['VERY', 2.598833643460815e-06], ['"What', 2.598833643460815e-06], ['("%s\\n\\tcompares', 2.598833643460815e-06], ['(!((Z', 2.598833643460815e-06], ['Random1)))', 2.598833643460815e-06], ['("1', 2.598833643460815e-06], ['(!(Z', 2.598833643460815e-06], ['"Multiplication', 2.598833643460815e-06], ['commute!\\n");', 2.598833643460815e-06], ['("\\tComparison', 2.598833643460815e-06], ['("\\tdiffers', 2.598833643460815e-06], ['Paranoia<FLOAT>::notify', 2.598833643460815e-06], ['inconsistent...\\n",', 2.598833643460815e-06], ['PLEASE', 2.598833643460815e-06], ['NOTIFY', 2.598833643460815e-06], ['KARPINKSI!\\n");', 2.598833643460815e-06], ['main(int', 2.598833643460815e-06], ['ac,', 2.598833643460815e-06], ['**av)', 2.598833643460815e-06], ['setbuf(stdout,', 2.598833643460815e-06], ['setbuf(stderr,', 2.598833643460815e-06], ['(getopt', 2.598833643460815e-06], ['(ac,', 2.598833643460815e-06], ['av,', 2.598833643460815e-06], ['"pvg:fdl"))', 2.598833643460815e-06], ['-1:', 2.598833643460815e-06], ['*fmt;', 2.598833643460815e-06], ['fmts[]', 2.598833643460815e-06], ['F(x)', 2.598833643460815e-06], ['#x,', 2.598833643460815e-06], ['&x##_format', 2.598833643460815e-06], ['F(ieee_single),', 2.598833643460815e-06], ['F(ieee_double),', 2.598833643460815e-06], ['F(ieee_extended_motorola),', 2.598833643460815e-06], ['F(ieee_extended_intel_96),', 2.598833643460815e-06], ['F(ieee_extended_intel_128),', 2.598833643460815e-06], ['F(ibm_extended),', 2.598833643460815e-06], ['F(ieee_quad),', 2.598833643460815e-06], ['F(vax_f),', 2.598833643460815e-06], ['F(vax_d),', 2.598833643460815e-06], ['F(vax_g),', 2.598833643460815e-06], ['F(i370_single),', 2.598833643460815e-06], ['F(i370_double),', 2.598833643460815e-06], ['F(real_internal),', 2.598833643460815e-06], ['(fmts)/sizeof(*fmts);', 2.598833643460815e-06], ['(fmts[i].name,', 2.598833643460815e-06], ['optarg)', 2.598833643460815e-06], ['("Unknown', 2.598833643460815e-06], ['\\"%s\\";', 2.598833643460815e-06], ['"available', 2.598833643460815e-06], ['implementations:\\n",', 2.598833643460815e-06], ['optarg);', 2.598833643460815e-06], ['("\\t%s\\n",', 2.598833643460815e-06], ['fmts[i].name);', 2.598833643460815e-06], ['cheat', 2.598833643460815e-06], ['real_format_for_mode[int(real_c_float::MODE)', 2.598833643460815e-06], ['int(QFmode)]', 2.598833643460815e-06], ['fmts[i].fmt;', 2.598833643460815e-06], ['Paranoia<real_c_float>().main();', 2.598833643460815e-06], ['native_float<float>', 2.598833643460815e-06], ['native_float<double>', 2.598833643460815e-06], ['native_float<long', 2.598833643460815e-06], ['double>', 2.598833643460815e-06], ["'?':", 2.598833643460815e-06], ['("-p\\tpause', 2.598833643460815e-06], ['pages");', 2.598833643460815e-06], ['("-g<FMT>\\treal.c', 2.598833643460815e-06], ['FMT");', 2.598833643460815e-06], ['("-f\\tnative', 2.598833643460815e-06], ['("-d\\tnative', 2.598833643460815e-06], ['("-l\\tnative', 2.598833643460815e-06], ['real.o.', 2.598833643460815e-06], ['fancy_abort', 2.598833643460815e-06], ['target_flags', 2.598833643460815e-06], ['floor_log2_wide', 2.598833643460815e-06], ['log++,', 2.598833643460815e-06], ['log;', 2.598833643460815e-06], ['brig-label-handler.cc', 2.598833643460815e-06], ['brig_directive_label_handler::operator', 2.598833643460815e-06], ['(label_str));', 2.598833643460815e-06], ['"math.h"', 2.598833643460815e-06], ['json;', 2.598833643460815e-06], ['OUTF.', 2.598833643460815e-06], ['json::objects', 2.598833643460815e-06], ['value::dump', 2.598833643460815e-06], ['*outf)', 2.598833643460815e-06], ['pp_buffer', 2.598833643460815e-06], ['(&pp)->stream', 2.598833643460815e-06], ['outf;', 2.598833643460815e-06], ['pp_flush', 2.598833643460815e-06], ['json::object,', 2.598833643460815e-06], ['unordered', 2.598833643460815e-06], ["json:object's", 2.598833643460815e-06], ['object::~object', 2.598833643460815e-06], ['(const_cast', 2.598833643460815e-06], ['*>((*it).first));', 2.598833643460815e-06], ['((*it).second);', 2.598833643460815e-06], ['json::object.', 2.598833643460815e-06], ['object::print', 2.598833643460815e-06], ['guaranteed.', 2.598833643460815e-06], ["'{');", 2.598833643460815e-06], ['const_cast', 2.598833643460815e-06], ['*>((*it).first);', 2.598833643460815e-06], ['(*it).second;', 2.598833643460815e-06], ['pp_printf', 2.598833643460815e-06], ['"\\"%s\\":', 2.598833643460815e-06], ['key);', 2.598833643460815e-06], ['escaping?', 2.598833643460815e-06], ['value->print', 2.598833643460815e-06], ["'}');", 2.598833643460815e-06], ['KEY,', 2.598833643460815e-06], ['KEY', 2.598833643460815e-06], ['necessary).', 2.598833643460815e-06], ['object::set', 2.598833643460815e-06], ['**ptr', 2.598833643460815e-06], ['m_map.get', 2.598833643460815e-06], ['m_map.put', 2.598833643460815e-06], ['(xstrdup', 2.598833643460815e-06], ['(key),', 2.598833643460815e-06], ["json::array's", 2.598833643460815e-06], ['array::~array', 2.598833643460815e-06], ['json::array.', 2.598833643460815e-06], ['array::print', 2.598833643460815e-06], ["'[');", 2.598833643460815e-06], ['v->print', 2.598833643460815e-06], ["']');", 2.598833643460815e-06], ['V.', 2.598833643460815e-06], ['array::append', 2.598833643460815e-06], ['m_elements.safe_push', 2.598833643460815e-06], ['json::number,', 2.598833643460815e-06], ['json::number.', 2.598833643460815e-06], ['number::print', 2.598833643460815e-06], ['tmp[1024];', 2.598833643460815e-06], ['(tmp),', 2.598833643460815e-06], ['"%g",', 2.598833643460815e-06], ['m_value);', 2.598833643460815e-06], ['json::string,', 2.598833643460815e-06], ["json::string's", 2.598833643460815e-06], ['string::string', 2.598833643460815e-06], ['*utf8)', 2.598833643460815e-06], ['m_utf8', 2.598833643460815e-06], ['json::string.', 2.598833643460815e-06], ['string::print', 2.598833643460815e-06], ['m_utf8;', 2.598833643460815e-06], ['ptr++)', 2.598833643460815e-06], ['ch', 2.598833643460815e-06], ['(ch)', 2.598833643460815e-06], ['"\\\\\\"");', 2.598833643460815e-06], ["'\\b':", 2.598833643460815e-06], ['"\\\\b");', 2.598833643460815e-06], ["'\\f':", 2.598833643460815e-06], ['"\\\\f");', 2.598833643460815e-06], ['"\\\\r");', 2.598833643460815e-06], ['"\\\\t");', 2.598833643460815e-06], ['ch);', 2.598833643460815e-06], ['json::literal,', 2.598833643460815e-06], ['json::literal.', 2.598833643460815e-06], ['literal::print', 2.598833643460815e-06], ['(m_kind)', 2.598833643460815e-06], ['JSON_TRUE:', 2.598833643460815e-06], ['JSON_FALSE:', 2.598833643460815e-06], ['JSON_NULL:', 2.598833643460815e-06], ['\x0c', 2.598833643460815e-06], ['JV->print', 2.598833643460815e-06], ['EXPECTED_JSON.', 2.598833643460815e-06], ['&jv,', 2.598833643460815e-06], ['*expected_json)', 2.598833643460815e-06], ['jv.print', 2.598833643460815e-06], ['(expected_json,', 2.598833643460815e-06], ['pair,', 2.598833643460815e-06], ['impose', 2.598833643460815e-06], ['ordering.', 2.598833643460815e-06], ['obj.set', 2.598833643460815e-06], ['("foo",', 2.598833643460815e-06], ['(obj,', 2.598833643460815e-06], ['"{\\"foo\\":', 2.598833643460815e-06], ['\\"bar\\"}");', 2.598833643460815e-06], ['arr;', 2.598833643460815e-06], ['"[]");', 2.598833643460815e-06], ['"[\\"foo\\"]");', 2.598833643460815e-06], ['"[\\"foo\\",', 2.598833643460815e-06], ['\\"bar\\"]");', 2.598833643460815e-06], ['"0");', 2.598833643460815e-06], ['(42),', 2.598833643460815e-06], ['"42");', 2.598833643460815e-06], ['(-100),', 2.598833643460815e-06], ['"-100");', 2.598833643460815e-06], ['("foo");', 2.598833643460815e-06], ['(foo,', 2.598833643460815e-06], ['"\\"foo\\"");', 2.598833643460815e-06], ['contains_quotes', 2.598833643460815e-06], ['("before', 2.598833643460815e-06], ['\\"quoted\\"', 2.598833643460815e-06], ['after");', 2.598833643460815e-06], ['(contains_quotes,', 2.598833643460815e-06], ['"\\"before', 2.598833643460815e-06], ['\\\\\\"quoted\\\\\\"', 2.598833643460815e-06], ['after\\"");', 2.598833643460815e-06], ['(JSON_TRUE),', 2.598833643460815e-06], ['(JSON_FALSE),', 2.598833643460815e-06], ['(JSON_NULL),', 2.598833643460815e-06], ['json_cc_tests', 2.598833643460815e-06], ['ERROR_MARK', 2.598833643460815e-06], ['((PRED_CONSTR', 2.598833643460815e-06], ['EXPR_PACK_EXPANSION', 2.598833643460815e-06], ['conjoining', 2.598833643460815e-06], ['conjoin_constraints(a,', 2.598833643460815e-06], ['TREE_VEC);', 2.598833643460815e-06], ['function_concept_check_p', 2.598833643460815e-06], ['(f1)', 2.598833643460815e-06], ['(f1)))', 2.598833643460815e-06], ['contains_wildcard_p', 2.598833643460815e-06], ['WILDCARD_DECL)', 2.598833643460815e-06], ['*fargs', 2.598833643460815e-06], ['make_tree_vector();', 2.598833643460815e-06], ['finish_call_expr', 2.598833643460815e-06], ['&fargs,', 2.598833643460815e-06], ['tf_none);', 2.598833643460815e-06], ['release_tree_vector', 2.598833643460815e-06], ['(fargs);', 2.598833643460815e-06], ['non-existent', 2.598833643460815e-06], ['TEMPLATE_ID_EXPR);', 2.598833643460815e-06], ['(contains_wildcard_p', 2.598833643460815e-06], ['finish_template_variable', 2.598833643460815e-06], ['(id);', 2.598833643460815e-06], ['Resolution', 2.598833643460815e-06], ['facility', 2.598833643460815e-06], ["'concept'.", 2.598833643460815e-06], ['resolution', 2.598833643460815e-06], ['OVL,', 2.598833643460815e-06], ['f<T,', 2.598833643460815e-06], ['U>()', 2.598833643460815e-06], ['template),', 2.598833643460815e-06], ['PURPOSE', 2.598833643460815e-06], ['ovl,', 2.598833643460815e-06], ['(lkp_iterator', 2.598833643460815e-06], ['(ovl);', 2.598833643460815e-06], ['++iter)', 2.598833643460815e-06], ['overload.', 2.598833643460815e-06], ['*iter;', 2.598833643460815e-06], ['(tmpl)', 2.598833643460815e-06], ['non-concepts.', 2.598833643460815e-06], ['functional', 2.598833643460815e-06], ['postfix-expression.', 2.598833643460815e-06], ['headaches', 2.598833643460815e-06], ['masks', 2.598833643460815e-06], ['non-deduced', 2.598833643460815e-06], ['contexts', 2.598833643460815e-06], ['(!DECL_DECLARED_CONCEPT_P', 2.598833643460815e-06], ['Remember', 2.598833643460815e-06], ['subst', 2.598833643460815e-06], ['tmpl))', 2.598833643460815e-06], ['(subst', 2.598833643460815e-06], ['++nerrs;', 2.598833643460815e-06], ['(subst,', 2.598833643460815e-06], ['cands);', 2.598833643460815e-06], ['(!cands)', 2.598833643460815e-06], ['candidates', 2.598833643460815e-06], ['deductions.', 2.598833643460815e-06], ['(cands))', 2.598833643460815e-06], ['cands;', 2.598833643460815e-06], ['denote', 2.598833643460815e-06], ['base-link,', 2.598833643460815e-06], ['function(s)', 2.598833643460815e-06], ['template-id,', 2.598833643460815e-06], ['concept-check.', 2.598833643460815e-06], ['(BASELINK_P', 2.598833643460815e-06], ['ovl', 2.598833643460815e-06], ['concept...', 2.598833643460815e-06], ['(ovl)', 2.598833643460815e-06], ['(call),', 2.598833643460815e-06], ['(ovl,', 2.598833643460815e-06], ['(!variable_concept_p', 2.598833643460815e-06], ['(tmpl))', 2.598833643460815e-06], ['failing', 2.598833643460815e-06], ['tmpl);', 2.598833643460815e-06], ['deduce_constrained_parameter', 2.598833643460815e-06], ['proto)', 2.598833643460815e-06], ['(info),', 2.598833643460815e-06], ['(ARGUMENT_PACK_P', 2.598833643460815e-06], ['implications', 2.598833643460815e-06], ['template<typenaem', 2.598833643460815e-06], ['C<T>.', 2.598833643460815e-06], ['learn,', 2.598833643460815e-06], ['D<T>.', 2.598833643460815e-06], ['If,', 2.598833643460815e-06], ['logically', 2.598833643460815e-06], ['equivalence.', 2.598833643460815e-06], ['C<T>;', 2.598833643460815e-06], ['conjunction_cxt,', 2.598833643460815e-06], ['C2.', 2.598833643460815e-06], ['disjunction_cxt,', 2.598833643460815e-06], ['equivalence_cxt', 2.598833643460815e-06], ['learn_implications(tree,', 2.598833643460815e-06], ['implication_context);', 2.598833643460815e-06], ['(cxt)', 2.598833643460815e-06], ['conjunction_cxt:', 2.598833643460815e-06], ['disjunction_cxt:', 2.598833643460815e-06], ['equivalence_cxt:', 2.598833643460815e-06], ['disjunction_cxt)', 2.598833643460815e-06], ['conjunction_cxt)', 2.598833643460815e-06], ['Quickly', 2.598833643460815e-06], ['cache', 2.598833643460815e-06], ['concepts.', 2.598833643460815e-06], ['arguemnts.', 2.598833643460815e-06], ['helpful.', 2.598833643460815e-06], ['caching.', 2.598833643460815e-06], ['contraint.', 2.598833643460815e-06], ['CONJ_CONSTR)', 2.598833643460815e-06], ['conjunction_cxt);', 2.598833643460815e-06], ['disjunction_cxt);', 2.598833643460815e-06], ['equivalence_cxt);', 2.598833643460815e-06], ['Expansion', 2.598833643460815e-06], ['(!body)', 2.598833643460815e-06], ['(!init)', 2.598833643460815e-06], ['++expansion_level;', 2.598833643460815e-06], ['~expanding_concept_sentinel()', 2.598833643460815e-06], ['--expansion_level;', 2.598833643460815e-06], ['expanded.', 2.598833643460815e-06], ['expanding_concept()', 2.598833643460815e-06], ['template)', 2.598833643460815e-06], ["concept's", 2.598833643460815e-06], ['sentinel;', 2.598833643460815e-06], ['get_concept_expansion', 2.598833643460815e-06], ['spec;', 2.598833643460815e-06], ['lastly,', 2.598833643460815e-06], ['implications,', 2.598833643460815e-06], ['norm', 2.598833643460815e-06], ['save_concept_expansion', 2.598833643460815e-06], ['Stepwise', 2.598833643460815e-06], ['steps.', 2.598833643460815e-06], ['Normalization', 2.598833643460815e-06], ['logical-or', 2.598833643460815e-06], ['logical-and', 2.598833643460815e-06], ['specifier', 2.598833643460815e-06], ['type_constr;', 2.598833643460815e-06], ['type_uses_auto,', 2.598833643460815e-06], ['type_uses_auto', 2.598833643460815e-06], ['placeholder);', 2.598833643460815e-06], ['type_constr);', 2.598833643460815e-06], ['(COMPOUND_REQ_NOEXCEPT_P', 2.598833643460815e-06], ['except);', 2.598833643460815e-06], ['constraint-expression.', 2.598833643460815e-06], ['requires-expression', 2.598833643460815e-06], ['(!check)', 2.598833643460815e-06], ['non-SFINAEable', 2.598833643460815e-06], ['first-pass', 2.598833643460815e-06], ['check_for_logical_overloads', 2.598833643460815e-06], ['BASELINK)', 2.598833643460815e-06], ['(DECL_OVERLOADED_OPERATOR_P', 2.598833643460815e-06], ['cp_expr_loc_or_loc', 2.598833643460815e-06], ['%qE,', 2.598833643460815e-06], ['operator",', 2.598833643460815e-06], ['expansions,', 2.598833643460815e-06], ['type_unknown_p', 2.598833643460815e-06], ['(!dependent_type_p', 2.598833643460815e-06], ['(check_for_logical_overloads', 2.598833643460815e-06], ['("predicate', 2.598833643460815e-06], ['%q+E', 2.598833643460815e-06], ['%<bool%>",', 2.598833643460815e-06], ['PAT.', 2.598833643460815e-06], ['(pat))', 2.598833643460815e-06], ['(pat);', 2.598833643460815e-06], ['pat;', 2.598833643460815e-06], ['SET_PACK_EXPANSION_PATTERN', 2.598833643460815e-06], ['CONJ_CONSTR);', 2.598833643460815e-06], ['DISJ_CONSTR);', 2.598833643460815e-06], ['REQUIRES_EXPR:', 2.598833643460815e-06], ['BIND_EXPR:', 2.598833643460815e-06], ['(BIND_EXPR_BODY', 2.598833643460815e-06], ['RETURN_EXPR:', 2.598833643460815e-06], ['(t)))', 2.598833643460815e-06], ['tcc_unary:', 2.598833643460815e-06], ['tcc_binary:', 2.598833643460815e-06], ['tcc_expression:', 2.598833643460815e-06], ['tcc_vl_exp:', 2.598833643460815e-06], ['tcc_statement:', 2.598833643460815e-06], ['tcc_declaration:', 2.598833643460815e-06], ['tcc_exceptional:', 2.598833643460815e-06], ['tcc_constant:', 2.598833643460815e-06], ['tcc_reference:', 2.598833643460815e-06], ['tcc_comparison:', 2.598833643460815e-06], ['Unhandled', 2.598833643460815e-06], ['kind.', 2.598833643460815e-06], ['/\\', 2.598833643460815e-06], ['\\/', 2.598833643460815e-06], ['(DISJ_CONSTR,', 2.598833643460815e-06], ['stages.', 2.598833643460815e-06], ['Then,', 2.598833643460815e-06], ['reducing', 2.598833643460815e-06], ['--------------------------------------------------------------------------', 2.598833643460815e-06], ['constraint-related', 2.598833643460815e-06], ['(current_template_parms);', 2.598833643460815e-06], ['recently', 2.598833643460815e-06], ['specialization,', 2.598833643460815e-06], ["TYPE's", 2.598833643460815e-06], ['associate_classtype_constraints', 2.598833643460815e-06], ['(CLASSTYPE_IS_TEMPLATE', 2.598833643460815e-06], ['CLASSTYPE_TEMPLATE_SPECIALIZATION', 2.598833643460815e-06], ['orig_ci', 2.598833643460815e-06], ['(!equivalent_constraints', 2.598833643460815e-06], ['orig_ci))', 2.598833643460815e-06], ['("%qT', 2.598833643460815e-06], ['set_constraints', 2.598833643460815e-06], ['(tree_constraint_info', 2.598833643460815e-06], ['*)make_node', 2.598833643460815e-06], ['(CONSTRAINT_INFO);', 2.598833643460815e-06], ['constraint-info', 2.598833643460815e-06], ['(TREQS)', 2.598833643460815e-06], ['declarator', 2.598833643460815e-06], ['(DREQS).', 2.598833643460815e-06], ['TREQS', 2.598833643460815e-06], ['DREQS', 2.598833643460815e-06], ['unconstrained', 2.598833643460815e-06], ['tmpl_reqs,', 2.598833643460815e-06], ['decl_reqs)', 2.598833643460815e-06], ['(tmpl_reqs', 2.598833643460815e-06], ['(tmpl_reqs)', 2.598833643460815e-06], ['(decl_reqs', 2.598833643460815e-06], ['(decl_reqs)', 2.598833643460815e-06], ['(!tmpl_reqs', 2.598833643460815e-06], ['!decl_reqs)', 2.598833643460815e-06], ['ci->template_reqs', 2.598833643460815e-06], ['tmpl_reqs;', 2.598833643460815e-06], ['ci->declarator_reqs', 2.598833643460815e-06], ['decl_reqs;', 2.598833643460815e-06], ['ci->associated_constr', 2.598833643460815e-06], ['(tmpl_reqs,', 2.598833643460815e-06], ['decl_reqs);', 2.598833643460815e-06], ['(tree)ci;', 2.598833643460815e-06], ['prepending', 2.598833643460815e-06], ['REST.', 2.598833643460815e-06], ['(rest,', 2.598833643460815e-06], ['GET_NON_DEFAULT_TEMPLATE_ARGS_COUNT', 2.598833643460815e-06], ['rest;', 2.598833643460815e-06], ['be:', 2.598833643460815e-06], ['OVERLOAD', 2.598833643460815e-06], ['BASELINK', 2.598833643460815e-06], ['TEMPLTATE_DECL', 2.598833643460815e-06], ['eventual', 2.598833643460815e-06], ['rest);', 2.598833643460815e-06], ['(variable_template_p', 2.598833643460815e-06], ['(lookup_template_variable', 2.598833643460815e-06], ['(lookup_template_function', 2.598833643460815e-06], ['build_constrained_parameter', 2.598833643460815e-06], ['cnc,', 2.598833643460815e-06], ['proto,', 2.598833643460815e-06], ['(cnc);', 2.598833643460815e-06], ['proto;', 2.598833643460815e-06], ['CONSTR,', 2.598833643460815e-06], ['finish_concept_name', 2.598833643460815e-06], ['TYPE_DECL).', 2.598833643460815e-06], ['decomposed.', 2.598833643460815e-06], ['not).', 2.598833643460815e-06], ['CHECK_CONSTR.', 2.598833643460815e-06], ['(!constr)', 2.598833643460815e-06], ['con', 2.598833643460815e-06], ['is_proto_pack', 2.598833643460815e-06], ['apply_to_all_p', 2.598833643460815e-06], ['!is_proto_pack;', 2.598833643460815e-06], ['(build_tree_list', 2.598833643460815e-06], ['PACK_EXPANSION_PATTERN', 2.598833643460815e-06], ['(con);', 2.598833643460815e-06], ['VAR_P', 2.598833643460815e-06], ['(con)', 2.598833643460815e-06], ['ovl_make', 2.598833643460815e-06], ['make_pack_expansion', 2.598833643460815e-06], ['(check)', 2.598833643460815e-06], ['shorthand', 2.598833643460815e-06], ['PARMS.', 2.598833643460815e-06], ['get_shorthand_constraints', 2.598833643460815e-06], ['parms)', 2.598833643460815e-06], ['chains', 2.598833643460815e-06], ['PARAMETER_LIST', 2.598833643460815e-06], ['SRC_PARM.', 2.598833643460815e-06], ['PARM_LOC', 2.598833643460815e-06], ['parameter_list,', 2.598833643460815e-06], ['src_parm)', 2.598833643460815e-06], ['is_parameter_pack', 2.598833643460815e-06], ['ARGUMENT_PACK_P', 2.598833643460815e-06], ['(is_parameter_pack)', 2.598833643460815e-06], ['(src_parm),', 2.598833643460815e-06], ['PARM_DECL.', 2.598833643460815e-06], ['WILDCARD_DECL);', 2.598833643460815e-06], ['parm_loc', 2.598833643460815e-06], ['(is_parameter_pack', 2.598833643460815e-06], ['WILDCARD_PACK_P', 2.598833643460815e-06], ['(src_parm))', 2.598833643460815e-06], ['(parm_loc,', 2.598833643460815e-06], ['err_parm', 2.598833643460815e-06], ['(error_mark_node,', 2.598833643460815e-06], ['err_parm);', 2.598833643460815e-06], ['is_non_type;', 2.598833643460815e-06], ['finish_template_type_parm', 2.598833643460815e-06], ['current_template_parms', 2.598833643460815e-06], ['DECL_TEMPLATE_PARMS', 2.598833643460815e-06], ['finish_template_template_parm', 2.598833643460815e-06], ['declarator,', 2.598833643460815e-06], ['copy_decl', 2.598833643460815e-06], ['process_template_parm.', 2.598833643460815e-06], ['Introductions', 2.598833643460815e-06], ['parm);', 2.598833643460815e-06], ['process_template_parm', 2.598833643460815e-06], ['parm_loc,', 2.598833643460815e-06], ['parm,', 2.598833643460815e-06], ['is_non_type,', 2.598833643460815e-06], ['is_parameter_pack);', 2.598833643460815e-06], ['Associates', 2.598833643460815e-06], ['introduction', 2.598833643460815e-06], ['INTRO_LIST', 2.598833643460815e-06], ['WILDCARD_DECLs', 2.598833643460815e-06], ['TMPL_DECL', 2.598833643460815e-06], ['C<INTRO_LIST>', 2.598833643460815e-06], ['deduced.', 2.598833643460815e-06], ['matching.', 2.598833643460815e-06], ['finish_template_introduction', 2.598833643460815e-06], ['tmpl_decl,', 2.598833643460815e-06], ['intro_list)', 2.598833643460815e-06], ['Deduce', 2.598833643460815e-06], ['intro_list);', 2.598833643460815e-06], ['(!parms)', 2.598833643460815e-06], ['introduction.', 2.598833643460815e-06], ['(parms),', 2.598833643460815e-06], ['(intro_list));', 2.598833643460815e-06], ['n));', 2.598833643460815e-06], ['end_template_decl', 2.598833643460815e-06], ['check_args', 2.598833643460815e-06], ['check_args);', 2.598833643460815e-06], ['TEMPLATE_PARMS_CONSTRAINTS', 2.598833643460815e-06], ['(current_template_parms)', 2.598833643460815e-06], ['parm_list;', 2.598833643460815e-06], ['constrained-type-specifier,', 2.598833643460815e-06], ['TMPL', 2.598833643460815e-06], ['FIXME', 2.598833643460815e-06], ['forms', 2.598833643460815e-06], ['constrained-type-specifier?', 2.598833643460815e-06], ['&tmpl,', 2.598833643460815e-06], ['&args)', 2.598833643460815e-06], ['(proto,', 2.598833643460815e-06], ['CHECK_CONSTR', 2.598833643460815e-06], ['TEMPLATE_TYPE_PARM.', 2.598833643460815e-06], ['equivalent_placeholder_constraints', 2.598833643460815e-06], ['auto.', 2.598833643460815e-06], ['(c1);', 2.598833643460815e-06], ['(c2)', 2.598833643460815e-06], ['(!c1', 2.598833643460815e-06], ['!c2)', 2.598833643460815e-06], ['satisfaction;', 2.598833643460815e-06], ['a2;', 2.598833643460815e-06], ['a1);', 2.598833643460815e-06], ['a2);', 2.598833643460815e-06], ['len1', 2.598833643460815e-06], ['(a1);', 2.598833643460815e-06], ['(a2);', 2.598833643460815e-06], ['(len1', 2.598833643460815e-06], ['len2)', 2.598833643460815e-06], ['infinitely', 2.598833643460815e-06], ['recurse.', 2.598833643460815e-06], ['len1;', 2.598833643460815e-06], ['(a1,', 2.598833643460815e-06], ['(a2,', 2.598833643460815e-06], ['(!template_args_equal', 2.598833643460815e-06], ['t2))', 2.598833643460815e-06], ['PRED_CONSTR', 2.598833643460815e-06], ['hash_placeholder_constraint', 2.598833643460815e-06], ['hash_tmpl_and_args,', 2.598833643460815e-06], ['iterative_hash_object', 2.598833643460815e-06], ['(DECL_UID', 2.598833643460815e-06], ['(a)-1;', 2.598833643460815e-06], ['Substitution', 2.598833643460815e-06], ['template<C1', 2.598833643460815e-06], ['f(T)', 2.598833643460815e-06], ['C2<T>;', 2.598833643460815e-06], ['g(T)', 2.598833643460815e-06], ['T::value;', 2.598833643460815e-06], ['S<int>', 2.598833643460815e-06], ['S<int>::g(T)', 2.598833643460815e-06], ['Substituting', 2.598833643460815e-06], ['C2<T>', 2.598833643460815e-06], ['C2<int>,', 2.598833643460815e-06], ['T::value', 2.598833643460815e-06], ['failure,', 2.598833643460815e-06], ['conjunctions.', 2.598833643460815e-06], ['(TEMPLATE_ID_EXPR,', 2.598833643460815e-06], ['rebuild', 2.598833643460815e-06], ['r0', 2.598833643460815e-06], ['(r0', 2.598833643460815e-06], ['r1);', 2.598833643460815e-06], ['(new_type', 2.598833643460815e-06], ['new_type);', 2.598833643460815e-06], ['autos', 2.598833643460815e-06], ['DEDUCT_CONSTR_PLACEHOLDER(t);', 2.598833643460815e-06], ['(?)', 2.598833643460815e-06], ['problems.', 2.598833643460815e-06], ['new_pattern', 2.598833643460815e-06], ['(new_pattern', 2.598833643460815e-06], ['new_pattern,', 2.598833643460815e-06], ['autos);', 2.598833643460815e-06], ['tsubst_constraint_variables.', 2.598833643460815e-06], ['vars)', 2.598833643460815e-06], ['(DECL_PACK_P', 2.598833643460815e-06], ['extract_fnparm_pack', 2.598833643460815e-06], ['&s);', 2.598833643460815e-06], ['(pack,', 2.598833643460815e-06], ['tsubst_parameterized_constraint.', 2.598833643460815e-06], ['PARM_DECLs.', 2.598833643460815e-06], ['saved_unevaluated_operand', 2.598833643460815e-06], ['cp_unevaluated_operand;', 2.598833643460815e-06], ['saved_unevaluated_operand;', 2.598833643460815e-06], ['(PARM_CONSTR_PARMS', 2.598833643460815e-06], ['ordering,', 2.598833643460815e-06], ['noexcept_p', 2.598833643460815e-06], ['noexcept_p);', 2.598833643460815e-06], ['programs.', 2.598833643460815e-06], ['r);', 2.598833643460815e-06], ['original.', 2.598833643460815e-06], ['(r);', 2.598833643460815e-06], ['re-declaration', 2.598833643460815e-06], ['tsubst_requires_expr', 2.598833643460815e-06], ['(parms)', 2.598833643460815e-06], ['(parms', 2.598833643460815e-06], ['(reqs,', 2.598833643460815e-06], ['(reqs', 2.598833643460815e-06], ['CI,', 2.598833643460815e-06], ['tsubst_constraint_info', 2.598833643460815e-06], ['(!t', 2.598833643460815e-06], ['!check_constraint_info', 2.598833643460815e-06], ['CI_TEMPLATE_REQS', 2.598833643460815e-06], ['CI_DECLARATOR_REQS', 2.598833643460815e-06], ['decl_constr);', 2.598833643460815e-06], ['convenience,', 2.598833643460815e-06], ['reduces', 2.598833643460815e-06], ['else).', 2.598833643460815e-06], ['tsubst_flags_t,', 2.598833643460815e-06], ['gen_elem_of_pack_expansion_instantiation', 2.598833643460815e-06], ['([temp.constr.pred]).', 2.598833643460815e-06], ['ill-formed;', 2.598833643460815e-06], ["SFINAE'able", 2.598833643460815e-06], ['EXPR_PACK_EXPANSION);', 2.598833643460815e-06], ['shall', 2.598833643460815e-06], ['const-qualified', 2.598833643460815e-06], ['acceptable.', 2.598833643460815e-06], ['(cp_expr_loc_or_loc', 2.598833643460815e-06], ['input_location),', 2.598833643460815e-06], ['cxx_constant_value', 2.598833643460815e-06], ['C<CARGS>', 2.598833643460815e-06], ['CARGS', 2.598833643460815e-06], ['lookup_concept_satisfaction', 2.598833643460815e-06], ['targs))', 2.598833643460815e-06], ['concept;', 2.598833643460815e-06], ['non-satisfaction.', 2.598833643460815e-06], ['(def', 2.598833643460815e-06], ['boolean_false_node);', 2.598833643460815e-06], ['([temp.constr.expr]).', 2.598833643460815e-06], ['unevaluated.', 2.598833643460815e-06], ['(tf_none))', 2.598833643460815e-06], ['(TYPE_P', 2.598833643460815e-06], ['(check))', 2.598833643460815e-06], ['(complain))', 2.598833643460815e-06], ['template-like', 2.598833643460815e-06], ['modop-exprs)', 2.598833643460815e-06], ['typed.', 2.598833643460815e-06], ['(ICONV_CONSTR_EXPR', 2.598833643460815e-06], ['(ICONV_CONSTR_TYPE', 2.598833643460815e-06], ['<unspecified>', 2.598833643460815e-06], ['perform_direct_initialization_if_possible', 2.598833643460815e-06], ['complain);', 2.598833643460815e-06], ['(conv', 2.598833643460815e-06], ['decltype(auto)', 2.598833643460815e-06], ['DEDUCT_CONSTR_PLACEHOLDER', 2.598833643460815e-06], ['type_canonical', 2.598833643460815e-06], ['complain|tf_partial,', 2.598833643460815e-06], ['do_auto_deduction', 2.598833643460815e-06], ['adc_requirement);', 2.598833643460815e-06], ['type_canonical;', 2.598833643460815e-06], ['noexcept(e)', 2.598833643460815e-06], ['(expr_noexcept_p', 2.598833643460815e-06], ['complain))', 2.598833643460815e-06], ['partially', 2.598833643460815e-06], ['satisfy_predicate_constraint.', 2.598833643460815e-06], ['overload,', 2.598833643460815e-06], ['boolean_false_node)', 2.598833643460815e-06], ['Dispatch', 2.598833643460815e-06], ['(!processing_template_decl);', 2.598833643460815e-06], ['satisfy_*', 2.598833643460815e-06], ['(TV_CONSTRAINT_SAT);', 2.598833643460815e-06], ['terms,', 2.598833643460815e-06], ['processing_template_decl_sentinel', 2.598833643460815e-06], ['proc', 2.598833643460815e-06], ['tsubst_copy', 2.598833643460815e-06], ['processing_template_decl', 2.598833643460815e-06], ['on,', 2.598833643460815e-06], ['processing,', 2.598833643460815e-06], ['buried', 2.598833643460815e-06], ['decltype', 2.598833643460815e-06], ['CI', 2.598833643460815e-06], ['ARGS,', 2.598833643460815e-06], ['ci,', 2.598833643460815e-06], ['(!ci)', 2.598833643460815e-06], ['uses_template_parms', 2.598833643460815e-06], ['lookup_constraint_satisfaction', 2.598833643460815e-06], ['(CI_ASSOCIATED_CONSTRAINTS', 2.598833643460815e-06], ['(ci),', 2.598833643460815e-06], ['memoize_constraint_satisfaction', 2.598833643460815e-06], ['(constr));', 2.598833643460815e-06], ['evaluate_function_concept', 2.598833643460815e-06], ['evaluate_variable_concept', 2.598833643460815e-06], ["DECL's", 2.598833643460815e-06], ['formed', 2.598833643460815e-06], ['resolution).', 2.598833643460815e-06], ['TMPL_PARMS_DEPTH', 2.598833643460815e-06], ['get_innermost_template_args', 2.598833643460815e-06], ['(TI_ARGS', 2.598833643460815e-06], ['(ti),', 2.598833643460815e-06], ['extensively', 2.598833643460815e-06], ['constraint_expression_satisfied_p', 2.598833643460815e-06], ['requires-expressions', 2.598833643460815e-06], ['null)', 2.598833643460815e-06], ['Modify', 2.598833643460815e-06], ['CONSTRAINT_VAR_P', 2.598833643460815e-06], ['build_min', 2.598833643460815e-06], ['(REQUIRES_EXPR,', 2.598833643460815e-06], ['(SIMPLE_REQ,', 2.598833643460815e-06], ['(TYPE_REQ,', 2.598833643460815e-06], ['non-null,', 2.598833643460815e-06], ['NOEXCEPT_P', 2.598833643460815e-06], ['noexcept_p)', 2.598833643460815e-06], ['(COMPOUND_REQ,', 2.598833643460815e-06], ['(req)', 2.598833643460815e-06], ['noexcept_p;', 2.598833643460815e-06], ['req;', 2.598833643460815e-06], ['(NESTED_REQ,', 2.598833643460815e-06], ['check_function_concept', 2.598833643460815e-06], ['constexpr', 2.598833643460815e-06], ['(seen_error', 2.598833643460815e-06], ['*/;', 2.598833643460815e-06], ['empty",', 2.598833643460815e-06], ['statements",', 2.598833643460815e-06], ['admissible.', 2.598833643460815e-06], ['check_constrained_friend', 2.598833643460815e-06], ['(!reqs)', 2.598833643460815e-06], ['Constrained', 2.598833643460815e-06], ['meaningless.', 2.598833643460815e-06], ['"constrained', 2.598833643460815e-06], ['Equivalence', 2.598833643460815e-06], ["A's", 2.598833643460815e-06], ['constrain', 2.598833643460815e-06], ["A's.", 2.598833643460815e-06], ['equivalently_constrained', 2.598833643460815e-06], ['(d1)', 2.598833643460815e-06], ['(d1),', 2.598833643460815e-06], ['Partial', 2.598833643460815e-06], ['strictly_subsumes', 2.598833643460815e-06], ['!subsumes', 2.598833643460815e-06], ['Determines', 2.598833643460815e-06], ['constrained.', 2.598833643460815e-06], ['subsumed', 2.598833643460815e-06], ["other's?", 2.598833643460815e-06], ['more_constrained', 2.598833643460815e-06], ['winner', 2.598833643460815e-06], ['c2))', 2.598833643460815e-06], ['++winner;', 2.598833643460815e-06], ['--winner;', 2.598833643460815e-06], ['winner;', 2.598833643460815e-06], ['D2,', 2.598833643460815e-06], ['unconstrained.', 2.598833643460815e-06], ['at_least_as_constrained', 2.598833643460815e-06], ['c2);', 2.598833643460815e-06], ['Provide', 2.598833643460815e-06], ['exceeded', 2.598833643460815e-06], ['pre-configured', 2.598833643460815e-06], ['threshold.', 2.598833643460815e-06], ['elide_constraint_failure_p', 2.598833643460815e-06], ['constraint_errors;', 2.598833643460815e-06], ['++constraint_errors;', 2.598833643460815e-06], ['undiagnosed', 2.598833643460815e-06], ['constraint_thresh;', 2.598833643460815e-06], ['diagnosis', 2.598833643460815e-06], ['sub-constraint', 2.598833643460815e-06], ['(location_t,', 2.598833643460815e-06], ['trait.', 2.598833643460815e-06], ['TRAIT_EXPR_TYPE1', 2.598833643460815e-06], ['TRAIT_EXPR_TYPE2', 2.598833643460815e-06], ['(TRAIT_EXPR_KIND', 2.598833643460815e-06], ['CPTK_HAS_NOTHROW_ASSIGN:', 2.598833643460815e-06], ['CPTK_HAS_NOTHROW_CONSTRUCTOR:', 2.598833643460815e-06], ['CPTK_HAS_NOTHROW_COPY:', 2.598833643460815e-06], ['CPTK_HAS_TRIVIAL_ASSIGN:', 2.598833643460815e-06], ['CPTK_HAS_TRIVIAL_CONSTRUCTOR:', 2.598833643460815e-06], ['CPTK_HAS_TRIVIAL_COPY:', 2.598833643460815e-06], ['CPTK_HAS_TRIVIAL_DESTRUCTOR:', 2.598833643460815e-06], ['destructible",', 2.598833643460815e-06], ['CPTK_HAS_VIRTUAL_DESTRUCTOR:', 2.598833643460815e-06], ['destructor",', 2.598833643460815e-06], ['CPTK_IS_ABSTRACT:', 2.598833643460815e-06], ['CPTK_IS_BASE_OF:', 2.598833643460815e-06], ['CPTK_IS_CLASS:', 2.598833643460815e-06], ['CPTK_IS_EMPTY:', 2.598833643460815e-06], ['CPTK_IS_ENUM:', 2.598833643460815e-06], ['enum",', 2.598833643460815e-06], ['CPTK_IS_FINAL:', 2.598833643460815e-06], ['CPTK_IS_LITERAL_TYPE:', 2.598833643460815e-06], ['CPTK_IS_POD:', 2.598833643460815e-06], ['POD', 2.598833643460815e-06], ['CPTK_IS_POLYMORPHIC:', 2.598833643460815e-06], ['polymorphic', 2.598833643460815e-06], ['CPTK_IS_SAME_AS:', 2.598833643460815e-06], ['CPTK_IS_STD_LAYOUT:', 2.598833643460815e-06], ['CPTK_IS_TRIVIAL:', 2.598833643460815e-06], ['CPTK_IS_UNION:', 2.598833643460815e-06], ['union",', 2.598833643460815e-06], ['predicates.', 2.598833643460815e-06], ['(PRED_CONSTR_EXPR', 2.598833643460815e-06], ['TRAIT_EXPR)', 2.598833643460815e-06], ['packs', 2.598833643460815e-06], ['expect.', 2.598833643460815e-06], ['(cur),', 2.598833643460815e-06], ['better.', 2.598833643460815e-06], ['expansion");', 2.598833643460815e-06], ['(!constraint_expression_satisfied_p', 2.598833643460815e-06], ['satisfied",', 2.598833643460815e-06], ['DECL<CARGS>.', 2.598833643460815e-06], ['cargs);', 2.598833643460815e-06], ['check);', 2.598833643460815e-06], ['%<%E', 2.598833643460815e-06], ['%S%>",', 2.598833643460815e-06], ['(CHECK_CONSTR_CONCEPT', 2.598833643460815e-06], ['dloc', 2.598833643460815e-06], ['"within', 2.598833643460815e-06], ['%qS",', 2.598833643460815e-06], ['(orig)', 2.598833643460815e-06], ['TRUTH_ORIF_EXPR)', 2.598833643460815e-06], ['resolving', 2.598833643460815e-06], ['BEGIN', 2.598833643460815e-06], ['(EXPR_CONSTR_EXPR', 2.598833643460815e-06], ['(orig),', 2.598833643460815e-06], ['inform(loc,', 2.598833643460815e-06], ['substution', 2.598833643460815e-06], ['(pattern))', 2.598833643460815e-06], ['Rebuild', 2.598833643460815e-06], ['"failed', 2.598833643460815e-06], ['(vars)', 2.598833643460815e-06], ['%q#D",', 2.598833643460815e-06], ['(vars);', 2.598833643460815e-06], ['ORIGinal', 2.598833643460815e-06], ['(dependent)', 2.598833643460815e-06], ['ORIG', 2.598833643460815e-06], ['improve', 2.598833643460815e-06], ['original?', 2.598833643460815e-06], ['"ill-formed', 2.598833643460815e-06], ['constraint");', 2.598833643460815e-06], ['reason(s)', 2.598833643460815e-06], ['satisfied");', 2.598833643460815e-06], ['Constraints', 2.598833643460815e-06], ['TI_ARGS', 2.598833643460815e-06], ['(ci);', 2.598833643460815e-06], ['detailing', 2.598833643460815e-06], ['diagnose_constraints', 2.598833643460815e-06], ['elided', 2.598833643460815e-06], ['"...', 2.598833643460815e-06], ['shown",', 2.598833643460815e-06], ['project', 2.598833643460815e-06], ['http://code.google.com/p/gofrontend.', 2.598833643460815e-06], ['project.', 2.598833643460815e-06], ['names.cc', 2.598833643460815e-06], ['Names', 2.598833643460815e-06], ['(According', 2.598833643460815e-06], ['sources,', 2.598833643460815e-06], ['MMIX.', 2.598833643460815e-06], ['systems.)', 2.598833643460815e-06], ['forth.', 2.598833643460815e-06], ['non-Go', 2.598833643460815e-06], ['conflicts.', 2.598833643460815e-06], ['"PKGPATH.NAME".', 2.598833643460815e-06], ['"hidden"', 2.598833643460815e-06], ['compiler;', 2.598833643460815e-06], ['adjusted', 2.598833643460815e-06], ['Gogo::pkgpath_for_symbol.', 2.598833643460815e-06], ['"PKGPATH.TYPE.NAME".', 2.598833643460815e-06], ['PKGPATH,', 2.598833643460815e-06], ['consecutive,', 2.598833643460815e-06], ['uncommon,', 2.598833643460815e-06], ['PKGPATH.TYPE.NAME,', 2.598833643460815e-06], ['approximately', 2.598833643460815e-06], ['While', 2.598833643460815e-06], ['FNNAME.TYPENAME(INDEX)', 2.598833643460815e-06], ['TYPE.MNAME.TYPENAME(INDEX).', 2.598833643460815e-06], ['parentheses', 2.598833643460815e-06], ['(they', 2.598833643460815e-06], ['declarations).', 2.598833643460815e-06], ['purposes,', 2.598833643460815e-06], ['differentiated', 2.598833643460815e-06], ['".hash".', 2.598833643460815e-06], ['"..hash".', 2.598833643460815e-06], ['".eq".', 2.598833643460815e-06], ['"..f".', 2.598833643460815e-06], ['".thunkNN"', 2.598833643460815e-06], ['PKGPATH..thunkNN.', 2.598833643460815e-06], ['".initNN"', 2.598833643460815e-06], ['PKGPATH..initNN.', 2.598833643460815e-06], ['"..funcNN"', 2.598833643460815e-06], ['"..funcNN..f".', 2.598833643460815e-06], ['"..r".', 2.598833643460815e-06], ['PKGPATH.TYPE..d.', 2.598833643460815e-06], ['type..TYPE.', 2.598833643460815e-06], ["linker's", 2.598833643460815e-06], ['common:', 2.598833643460815e-06], ['PKGPATH.TYPE..g.', 2.598833643460815e-06], ['typeg..TYPE.', 2.598833643460815e-06], ['gcbits..B32', 2.598833643460815e-06], ['B32', 2.598833643460815e-06], ['letters', 2.598833643460815e-06], ['imt..ITYPE..TYPE.', 2.598833643460815e-06], ['PKGPATH.TYPE.', 2.598833643460815e-06], ['imt.', 2.598833643460815e-06], ['unimportant.', 2.598833643460815e-06], ['"go..CNN"', 2.598833643460815e-06], ['"go..zerovalue".', 2.598833643460815e-06], ['__go_init_main.', 2.598833643460815e-06], ['PKGPATH..import.', 2.598833643460815e-06], ['pkgpath.i', 2.598833643460815e-06], ['int;', 2.598833643460815e-06], ['}".', 2.598833643460815e-06], ['aspects', 2.598833643460815e-06], ['incomparable', 2.598833643460815e-06], ['"{x}".', 2.598833643460815e-06], ['braces,', 2.598833643460815e-06], ['quotes.', 2.598833643460815e-06], ['literals:', 2.598833643460815e-06], ['.0', 2.598833643460815e-06], ['.1', 2.598833643460815e-06], ['.2', 2.598833643460815e-06], ['.3', 2.598833643460815e-06], ["','", 2.598833643460815e-06], ['.4', 2.598833643460815e-06], ["'{'", 2.598833643460815e-06], ['.5', 2.598833643460815e-06], ['.6', 2.598833643460815e-06], ["'['", 2.598833643460815e-06], ['.7', 2.598833643460815e-06], ["']'", 2.598833643460815e-06], ['.8', 2.598833643460815e-06], ['.9', 2.598833643460815e-06], ["')'", 2.598833643460815e-06], ['shown', 2.598833643460815e-06], ['treatment.', 2.598833643460815e-06], ['Alphanumerics,', 2.598833643460815e-06], ['underscores,', 2.598833643460815e-06], ['(Unicode', 2.598833643460815e-06], ['ASCII.', 2.598833643460815e-06], ['encoded.', 2.598833643460815e-06], ['unambiguous,', 2.598833643460815e-06], ['eight', 2.598833643460815e-06], ['..U', 2.598833643460815e-06], ['\\u', 2.598833643460815e-06], ['\\U.', 2.598833643460815e-06], ["'=',", 2.598833643460815e-06], ["'/').", 2.598833643460815e-06], ['scheme', 2.598833643460815e-06], ['translates', 2.598833643460815e-06], ['"..zNN"', 2.598833643460815e-06], ["'z',", 2.598833643460815e-06], ['"..u"', 2.598833643460815e-06], ['"..U"', 2.598833643460815e-06], ['Demangling', 2.598833643460815e-06], ['straightforward:', 2.598833643460815e-06], ['..zXX', 2.598833643460815e-06], ['..UXXXXXXXX', 2.598833643460815e-06], ['.D,', 2.598833643460815e-06], ['function/method', 2.598833643460815e-06], ["method's", 2.598833643460815e-06], ['Gogo::function_asm_name(const', 2.598833643460815e-06], ['rtype->deref()->mangled_name(this);', 2.598833643460815e-06], ['Gogo::unpack_hidden_name.', 2.598833643460815e-06], ['(Gogo::is_special_name(go_name))', 2.598833643460815e-06], ['ret.append(go_name);', 2.598833643460815e-06], ['Gogo::function_descriptor_name(Named_object*', 2.598833643460815e-06], ['!no->func_value()->asm_name().empty())', 2.598833643460815e-06], ['no->func_value()->asm_name()', 2.598833643460815e-06], ['!no->func_declaration_value()->asm_name().empty())', 2.598833643460815e-06], ['no->func_declaration_value()->asm_name()', 2.598833643460815e-06], ['this->function_asm_name(no->name(),', 2.598833643460815e-06], ['ret.append("..f");', 2.598833643460815e-06], ['MNAME', 2.598833643460815e-06], ['Gogo::function_asm_name,', 2.598833643460815e-06], ['Gogo::stub_method_name(const', 2.598833643460815e-06], ['mname)', 2.598833643460815e-06], ['(!Gogo::is_hidden_name(mname))', 2.598833643460815e-06], ['mname', 2.598833643460815e-06], ['ppkgpath(package', 2.598833643460815e-06], ['this->pkgpath()', 2.598833643460815e-06], ['mpkgpath', 2.598833643460815e-06], ['Gogo::hidden_name_pkgpath(mname);', 2.598833643460815e-06], ['(mpkgpath', 2.598833643460815e-06], ['ppkgpath)', 2.598833643460815e-06], ['Gogo::unpack_hidden_name(mname)', 2.598833643460815e-06], ['disambiguate', 2.598833643460815e-06], ['mpkgpath;', 2.598833643460815e-06], ['ret.append(Gogo::unpack_hidden_name(mname));', 2.598833643460815e-06], ['ret.append("..stub");', 2.598833643460815e-06], ['*HASH_NAME', 2.598833643460815e-06], ['*EQUAL_NAME.', 2.598833643460815e-06], ['Gogo::specific_type_function_names(const', 2.598833643460815e-06], ['*hash_name,', 2.598833643460815e-06], ['*equal_name)', 2.598833643460815e-06], ['*hash_name', 2.598833643460815e-06], ['"..hash";', 2.598833643460815e-06], ['*equal_name', 2.598833643460815e-06], ['"..eq";', 2.598833643460815e-06], ['Gogo::global_var_asm_name(const', 2.598833643460815e-06], ['Gogo::erroneous_name()', 2.598833643460815e-06], ['erroneous_count;', 2.598833643460815e-06], ['name[50];', 2.598833643460815e-06], ['snprintf(name,', 2.598833643460815e-06], ['".erroneous%d",', 2.598833643460815e-06], ['erroneous_count);', 2.598833643460815e-06], ['++erroneous_count;', 2.598833643460815e-06], ['Gogo::is_erroneous_name(const', 2.598833643460815e-06], ['name.compare(0,', 2.598833643460815e-06], ['".erroneous")', 2.598833643460815e-06], ['Gogo::thunk_name()', 2.598833643460815e-06], ['thunk_count;', 2.598833643460815e-06], ['thunk_name[50];', 2.598833643460815e-06], ['snprintf(thunk_name,', 2.598833643460815e-06], ['"..thunk%d",', 2.598833643460815e-06], ['thunk_count);', 2.598833643460815e-06], ['++thunk_count;', 2.598833643460815e-06], ['thunk_name;', 2.598833643460815e-06], ['Gogo::is_thunk(const', 2.598833643460815e-06], ['name(no->name());', 2.598833643460815e-06], ['name.size();', 2.598833643460815e-06], ['(name[i]', 2.598833643460815e-06], ['name[i]', 2.598833643460815e-06], ['Gogo::init_function_name()', 2.598833643460815e-06], ['init_count;', 2.598833643460815e-06], ['"..init%d",', 2.598833643460815e-06], ['init_count);', 2.598833643460815e-06], ['++init_count;', 2.598833643460815e-06], ['Gogo::nested_function_name(Named_object*', 2.598833643460815e-06], ['func()', 2.598833643460815e-06], ['++toplevel_index;', 2.598833643460815e-06], ['".go";', 2.598833643460815e-06], ['enclosing->func_value()->enclosing();', 2.598833643460815e-06], ['(parent', 2.598833643460815e-06], ['parent;', 2.598833643460815e-06], ['enclosing->func_value()->type()->receiver();', 2.598833643460815e-06], ['rcvr->type()->mangled_name(this);', 2.598833643460815e-06], ["prefix.push_back('.');", 2.598833643460815e-06], ['prefix.append(Gogo::unpack_hidden_name(enclosing->name()));', 2.598833643460815e-06], ['enclosing->func_value()->next_nested_function_index();', 2.598833643460815e-06], ['"..func%u",', 2.598833643460815e-06], ['underscore.', 2.598833643460815e-06], ['Gogo::sink_function_name()', 2.598833643460815e-06], ['sink_count;', 2.598833643460815e-06], ['".sink%d",', 2.598833643460815e-06], ['sink_count);', 2.598833643460815e-06], ['++sink_count;', 2.598833643460815e-06], ['Gogo::redefined_function_name()', 2.598833643460815e-06], ['redefinition_count;', 2.598833643460815e-06], ['".redefined%d",', 2.598833643460815e-06], ['redefinition_count);', 2.598833643460815e-06], ['++redefinition_count;', 2.598833643460815e-06], ['Gogo::recover_thunk_name(const', 2.598833643460815e-06], ['(Gogo::is_special_name(name))', 2.598833643460815e-06], ['ret.append(name);', 2.598833643460815e-06], ['ret.append(Gogo::unpack_hidden_name(name));', 2.598833643460815e-06], ['ret.append("..r");', 2.598833643460815e-06], ['runtime.registerGCRoots.', 2.598833643460815e-06], ['Gogo::gc_root_name()', 2.598833643460815e-06], ['"go..C0";', 2.598833643460815e-06], ['Gogo::initializer_name()', 2.598833643460815e-06], ['"go..C%u",', 2.598833643460815e-06], ['Gogo::map_zero_value_name()', 2.598833643460815e-06], ['"go..zerovalue";', 2.598833643460815e-06], ['Gogo::get_init_fn_name()', 2.598833643460815e-06], ['(this->init_fn_name_.empty())', 2.598833643460815e-06], ['"__go_init_main";', 2.598833643460815e-06], ['this->pkgpath_symbol();', 2.598833643460815e-06], ['s.append("..import");', 2.598833643460815e-06], ['this->init_fn_name_;', 2.598833643460815e-06], ['Type::mangled_name(Gogo*', 2.598833643460815e-06], ['do_mangled_name', 2.598833643460815e-06], ['mapping.', 2.598833643460815e-06], ['this->do_mangled_name(gogo,', 2.598833643460815e-06], ['go_assert((ret[0]', 2.598833643460815e-06], ['(ret[0]', 2.598833643460815e-06], ["'U')", 2.598833643460815e-06], ['.DIGIT', 2.598833643460815e-06], ["ret.find('.');", 2.598833643460815e-06], ["ret.find('.',", 2.598833643460815e-06], ['ret.size())', 2.598833643460815e-06], ['ret[i', 2.598833643460815e-06], ['go_assert(c', 2.598833643460815e-06], ["'9');", 2.598833643460815e-06], ['*;,{}[]()";', 2.598833643460815e-06], ['rlen', 2.598833643460815e-06], ['strlen(replace);', 2.598833643460815e-06], ['buf[2];', 2.598833643460815e-06], ['rlen;', 2.598833643460815e-06], ['++ri)', 2.598833643460815e-06], ['ret.find(replace[ri]);', 2.598833643460815e-06], ['ret.replace(i,', 2.598833643460815e-06], ['Error_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['ret->append("{error}");', 2.598833643460815e-06], ['Void_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['ret->append("{void}");', 2.598833643460815e-06], ['Boolean_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['ret->append("bool");', 2.598833643460815e-06], ['Integer_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['"%s%si%d",', 2.598833643460815e-06], ['this->is_unsigned_', 2.598833643460815e-06], ['Float_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['"%sfloat%d",', 2.598833643460815e-06], ['Complex_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['"%sc%d",', 2.598833643460815e-06], ['String_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['Function_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_name(this->receiver_->type(),', 2.598833643460815e-06], ['ret->append(")");', 2.598833643460815e-06], ["ret->push_back(',');", 2.598833643460815e-06], ['ret->append(",,,");', 2.598833643460815e-06], ['ret->append(",");', 2.598833643460815e-06], ['Pointer_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_name(this->to_type_,', 2.598833643460815e-06], ['Nil_type::do_mangled_name(Gogo*,', 2.598833643460815e-06], ['ret->append("{nil}");', 2.598833643460815e-06], ['Struct_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['ret->append("struct{");', 2.598833643460815e-06], ['ret->append("{x}");', 2.598833643460815e-06], ['p->field_name());', 2.598833643460815e-06], ['p->type()->named_type()->append_mangled_type_name(gogo,', 2.598833643460815e-06], ['quotation', 2.598833643460815e-06], ['marks.', 2.598833643460815e-06], ["ret->push_back('{');", 2.598833643460815e-06], ['ret->append(go_mangle_struct_tag(p->tag()));', 2.598833643460815e-06], ['Array_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['ret->append("x");', 2.598833643460815e-06], ['Map_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_name(this->key_type_,', 2.598833643460815e-06], ['this->append_mangled_name(this->val_type_,', 2.598833643460815e-06], ['Channel_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['Interface_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['ret->append("interface{");', 2.598833643460815e-06], ['!this->seen_)', 2.598833643460815e-06], ['p->name());', 2.598833643460815e-06], ['Named_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_type_name(gogo,', 2.598833643460815e-06], ['Forward_declaration_type::do_mangled_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_name(this->real_type(),', 2.598833643460815e-06], ['RET.', 2.598833643460815e-06], ['Named_type::append_mangled_type_name(Gogo*', 2.598833643460815e-06], ['this->append_mangled_name(this->type_,', 2.598833643460815e-06], ['go_assert(this->in_function_', 2.598833643460815e-06], ['ret->append(rcvr->type()->deref()->mangled_name(gogo));', 2.598833643460815e-06], ['(this->in_function_->package()', 2.598833643460815e-06], ['ret->append(this->in_function_->package()->pkgpath());', 2.598833643460815e-06], ['this->in_function_index_', 2.598833643460815e-06], ['Gogo::type_descriptor_name(Type*', 2.598833643460815e-06], ['libgo/runtime/go-unsafe-pointer.c,', 2.598833643460815e-06], ['(type->is_unsafe_pointer_type())', 2.598833643460815e-06], ['"unsafe.Pointer..d";', 2.598833643460815e-06], ['type->mangled_name(this);', 2.598833643460815e-06], ['nt->in_function(&index);', 2.598833643460815e-06], ['(nt->is_builtin())', 2.598833643460815e-06], ['in_function->func_value()->type()->receiver();', 2.598833643460815e-06], ['ret.append(rcvr->type()->deref()->mangled_name(this));', 2.598833643460815e-06], ['(in_function->package()', 2.598833643460815e-06], ['ret.append(in_function->package()->pkgpath());', 2.598833643460815e-06], ['ret.append(Gogo::unpack_hidden_name(in_function->name()));', 2.598833643460815e-06], ['ret.append(no->package()->pkgpath());', 2.598833643460815e-06], ['Gogo::append_possibly_hidden_name(&ret,', 2.598833643460815e-06], ['no->name());', 2.598833643460815e-06], ['ret.append(buf);', 2.598833643460815e-06], ['ret.append("..d");', 2.598833643460815e-06], ['ptrmask_symbol_name', 2.598833643460815e-06], ['Gogo::gc_symbol_name(Type*', 2.598833643460815e-06], ['this->type_descriptor_name(type,', 2.598833643460815e-06], ['"..g";', 2.598833643460815e-06], ['PTRMASK_SYM_NAME', 2.598833643460815e-06], ['base32', 2.598833643460815e-06], ['Ptrmask::symname', 2.598833643460815e-06], ['types.cc).', 2.598833643460815e-06], ['intialize', 2.598833643460815e-06], ['gc_symbol_name', 2.598833643460815e-06], ['Gogo::ptrmask_symbol_name(const', 2.598833643460815e-06], ['ptrmask_sym_name)', 2.598833643460815e-06], ['"gcbits.."', 2.598833643460815e-06], ['ptrmask_sym_name;', 2.598833643460815e-06], ['ITYPE.', 2.598833643460815e-06], ['Gogo::interface_method_table_name(Interface_type*', 2.598833643460815e-06], ['((is_pointer', 2.598833643460815e-06], ['"pimt.."', 2.598833643460815e-06], ['"imt..")', 2.598833643460815e-06], ['itype->mangled_name(this)', 2.598833643460815e-06], ['type->mangled_name(this));', 2.598833643460815e-06], ['unpack_hidden_name.', 2.598833643460815e-06], ['"..SUFFIX",', 2.598833643460815e-06], ['unpack_hidden_name', 2.598833643460815e-06], ["'.'.", 2.598833643460815e-06], ['Gogo::is_special_name(const', 2.598833643460815e-06], ['(name.find("..hash")', 2.598833643460815e-06], ['name.find("..eq")', 2.598833643460815e-06], ['name.find("..stub")', 2.598833643460815e-06], ['name.find("..func")', 2.598833643460815e-06], ['name.find("..r")', 2.598833643460815e-06], ['name.find("..init")', 2.598833643460815e-06], ['name.find("..thunk")', 2.598833643460815e-06], ['name.find("..import")', 2.598833643460815e-06], ['brig-atomic-inst-handler.cc', 2.598833643460815e-06], ['brig_atomic_inst_handler::brig_atomic_inst_handler', 2.598833643460815e-06], ['brig_atomic_inst_handler::generate_tree', 2.598833643460815e-06], ['&inst,', 2.598833643460815e-06], ['atomic_opcode)', 2.598833643460815e-06], ['(inst);', 2.598833643460815e-06], ['first_input', 2.598833643460815e-06], ['(inst.opcode,', 2.598833643460815e-06], ['(inst.type);', 2.598833643460815e-06], ['Utilize', 2.598833643460815e-06], ['C++11', 2.598833643460815e-06], ['support)', 2.598833643460815e-06], ['atomic_type', 2.598833643460815e-06], ['TYPE_QUAL_ATOMIC);', 2.598833643460815e-06], ['(atomic_type', 2.598833643460815e-06], ['signal_handle', 2.598833643460815e-06], ['operands[first_input];', 2.598833643460815e-06], ['atomic_ptype', 2.598833643460815e-06], ['(atomic_type);', 2.598833643460815e-06], ['casted_to_ptr', 2.598833643460815e-06], ['signal_handle);', 2.598833643460815e-06], ['BRIG_ATOMIC_LD)', 2.598833643460815e-06], ['operands[first_input]);', 2.598833643460815e-06], ['BRIG_ATOMIC_ST)', 2.598833643460815e-06], ['BRIG_ATOMIC_LD', 2.598833643460815e-06], ['BRIG_ATOMIC_WAIT_EQ', 2.598833643460815e-06], ['BRIG_ATOMIC_WAITTIMEOUT_GTE))', 2.598833643460815e-06], ['signal_wait*', 2.598833643460815e-06], ['spuriously', 2.598833643460815e-06], ['Therefore', 2.598833643460815e-06], ['away.', 2.598833643460815e-06], ['sleep-wait.', 2.598833643460815e-06], ['BRIG_ATOMIC_CAS)', 2.598833643460815e-06], ['CAS', 2.598833643460815e-06], ['args.', 2.598833643460815e-06], ['(BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_8);', 2.598833643460815e-06], ['src1', 2.598833643460815e-06], ['2];', 2.598833643460815e-06], ['src0_type', 2.598833643460815e-06], ['src1_type', 2.598833643460815e-06], ['(built_in)))));', 2.598833643460815e-06], ['src0_type,', 2.598833643460815e-06], ['src0,', 2.598833643460815e-06], ['src1_type,', 2.598833643460815e-06], ['src1);', 2.598833643460815e-06], ['automagically', 2.598833643460815e-06], ['DEF_HSAIL_ATOMIC_BUILTIN(ENUM,', 2.598833643460815e-06], ['ATOMIC_OPCODE,', 2.598833643460815e-06], ['ATOMIC_OPCODE', 2.598833643460815e-06], ['inst.type', 2.598833643460815e-06], ['(atomic_opcode)', 2.598833643460815e-06], ['BRIG_ATOMIC_ADD:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_ADD_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_ADD_8);', 2.598833643460815e-06], ['BRIG_ATOMIC_SUB:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_SUB_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_SUB_8);', 2.598833643460815e-06], ['BRIG_ATOMIC_AND:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_AND_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_AND_8);', 2.598833643460815e-06], ['BRIG_ATOMIC_XOR:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_XOR_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_XOR_8);', 2.598833643460815e-06], ['BRIG_ATOMIC_OR:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_OR_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_FETCH_AND_OR_8);', 2.598833643460815e-06], ['BRIG_ATOMIC_EXCH:', 2.598833643460815e-06], ['(BUILT_IN_SYNC_LOCK_TEST_AND_SET_4);', 2.598833643460815e-06], ['(BUILT_IN_SYNC_LOCK_TEST_AND_SET_8);', 2.598833643460815e-06], ['(built_in', 2.598833643460815e-06], ['arg0_type', 2.598833643460815e-06], ['arg0_type,', 2.598833643460815e-06], ['gimplifier', 2.598833643460815e-06], ['drops', 2.598833643460815e-06], ['signed)', 2.598833643460815e-06], ['(arg0_type,', 2.598833643460815e-06], ['"builtin_out");', 2.598833643460815e-06], ['tmp_assign', 2.598833643460815e-06], ['(tmp_assign);', 2.598833643460815e-06], ['(first_input', 2.598833643460815e-06], ['(inst,', 2.598833643460815e-06], ['inst.base.byteCount;', 2.598833643460815e-06], ['brig_atomic_inst_handler::operator', 2.598833643460815e-06], ['inst->atomicOperation;', 2.598833643460815e-06], ['go.cc', 2.598833643460815e-06], ['go_create_gogo(const', 2.598833643460815e-06], ['go_create_gogo_args*', 2.598833643460815e-06], ['go_assert(::gogo', 2.598833643460815e-06], ['::gogo', 2.598833643460815e-06], ['Gogo(args->backend,', 2.598833643460815e-06], ['args->linemap,', 2.598833643460815e-06], ['args->int_type_size,', 2.598833643460815e-06], ['args->pointer_size);', 2.598833643460815e-06], ['(args->pkgpath', 2.598833643460815e-06], ['::gogo->set_pkgpath(args->pkgpath);', 2.598833643460815e-06], ['(args->prefix', 2.598833643460815e-06], ['::gogo->set_prefix(args->prefix);', 2.598833643460815e-06], ['(args->relative_import_path', 2.598833643460815e-06], ['::gogo->set_relative_import_path(args->relative_import_path);', 2.598833643460815e-06], ['::gogo->set_check_divide_by_zero(args->check_divide_by_zero);', 2.598833643460815e-06], ['::gogo->set_check_divide_overflow(args->check_divide_overflow);', 2.598833643460815e-06], ['(args->compiling_runtime)', 2.598833643460815e-06], ['::gogo->set_compiling_runtime(args->compiling_runtime);', 2.598833643460815e-06], ['(args->c_header', 2.598833643460815e-06], ['::gogo->set_c_header(args->c_header);', 2.598833643460815e-06], ['::gogo->set_debug_escape_level(args->debug_escape_level);', 2.598833643460815e-06], ['(args->debug_escape_hash', 2.598833643460815e-06], ['::gogo->set_debug_escape_hash(args->debug_escape_hash);', 2.598833643460815e-06], ['::gogo->set_nil_check_size_threshold(args->nil_check_size_threshold);', 2.598833643460815e-06], ['go_parse_input_files(const', 2.598833643460815e-06], ['filenames,', 2.598833643460815e-06], ['filename_count,', 2.598833643460815e-06], ['only_check_syntax,', 2.598833643460815e-06], ['go_assert(filename_count', 2.598833643460815e-06], ['Lex::Linknames', 2.598833643460815e-06], ['all_linknames;', 2.598833643460815e-06], ['filename_count;', 2.598833643460815e-06], ['filenames[i];', 2.598833643460815e-06], ['stdin;', 2.598833643460815e-06], ['fopen(filename,', 2.598833643460815e-06], ['"r");', 2.598833643460815e-06], ['(file', 2.598833643460815e-06], ['Lex', 2.598833643460815e-06], ['lexer(filename,', 2.598833643460815e-06], ['::gogo->linemap());', 2.598833643460815e-06], ['parse(&lexer,', 2.598833643460815e-06], ['::gogo);', 2.598833643460815e-06], ['parse.program();', 2.598833643460815e-06], ['fclose(file);', 2.598833643460815e-06], ['Lex::Linknames*', 2.598833643460815e-06], ['linknames', 2.598833643460815e-06], ['lexer.get_and_clear_linknames();', 2.598833643460815e-06], ['(linknames', 2.598833643460815e-06], ['(!::gogo->current_file_imported_unsafe())', 2.598833643460815e-06], ['linknames->begin();', 2.598833643460815e-06], ['linknames->end();', 2.598833643460815e-06], ['go_error_at(p->second.loc,', 2.598833643460815e-06], ['("//go:linkname', 2.598833643460815e-06], ['\\"unsafe\\""));', 2.598833643460815e-06], ['all_linknames.insert(linknames->begin(),', 2.598833643460815e-06], ['linknames->end());', 2.598833643460815e-06], ['::gogo->define_global_names();', 2.598833643460815e-06], ['all_linknames.begin();', 2.598833643460815e-06], ['all_linknames.end();', 2.598833643460815e-06], ['::gogo->add_linkname(p->first,', 2.598833643460815e-06], ['p->second.is_exported,', 2.598833643460815e-06], ['p->second.ext_name,', 2.598833643460815e-06], ['p->second.loc);', 2.598833643460815e-06], ['::gogo->finalize_methods();', 2.598833643460815e-06], ['::gogo->check_return_statements();', 2.598833643460815e-06], ['::gogo->lower_parse_tree();', 2.598833643460815e-06], ['linemap.', 2.598833643460815e-06], ['::gogo->linemap()->stop();', 2.598833643460815e-06], ['::gogo->create_function_descriptors();', 2.598833643460815e-06], ['::gogo->verify_types();', 2.598833643460815e-06], ['::gogo->determine_types();', 2.598833643460815e-06], ['::gogo->check_types();', 2.598833643460815e-06], ['(only_check_syntax)', 2.598833643460815e-06], ['::gogo->analyze_escape();', 2.598833643460815e-06], ['::gogo->do_exports();', 2.598833643460815e-06], ['::gogo->order_evaluations();', 2.598833643460815e-06], ['short-cut', 2.598833643460815e-06], ['(&&,', 2.598833643460815e-06], ['||)', 2.598833643460815e-06], ['::gogo->remove_shortcuts();', 2.598833643460815e-06], ['::gogo->convert_named_types();', 2.598833643460815e-06], ['::gogo->build_recover_thunks();', 2.598833643460815e-06], ['::gogo->simplify_thunk_statements();', 2.598833643460815e-06], ['::gogo->write_specific_type_functions();', 2.598833643460815e-06], ['::gogo->add_write_barriers();', 2.598833643460815e-06], ['::gogo->flatten();', 2.598833643460815e-06], ['::gogo->reclaim_escape_nodes();', 2.598833643460815e-06], ['ast,', 2.598833643460815e-06], ['filename[0]', 2.598833643460815e-06], ['::gogo->dump_ast(filenames[0]);', 2.598833643460815e-06], ['go_write_globals()', 2.598833643460815e-06], ['::gogo->write_globals();', 2.598833643460815e-06], ['langhooks', 2.598833643460815e-06], ['go_get_gogo()', 2.598833643460815e-06], ['::gogo;', 2.598833643460815e-06], ['*toplevel_array;', 2.598833643460815e-06], ['*cur_group;', 2.598833643460815e-06], ['*cur_children_array;', 2.598833643460815e-06], ['LOC_RANGE.', 2.598833643460815e-06], ['*loc_range,', 2.598833643460815e-06], ['range_idx)', 2.598833643460815e-06], ['caret_loc', 2.598833643460815e-06], ['get_pure_location', 2.598833643460815e-06], ['(caret_loc', 2.598833643460815e-06], ['get_start', 2.598833643460815e-06], ['finish_loc', 2.598833643460815e-06], ['get_finish', 2.598833643460815e-06], ['("caret",', 2.598833643460815e-06], ['(caret_loc));', 2.598833643460815e-06], ['(start_loc', 2.598833643460815e-06], ['(finish_loc', 2.598833643460815e-06], ['("finish",', 2.598833643460815e-06], ['(finish_loc));', 2.598833643460815e-06], ['(loc_range->m_label)', 2.598833643460815e-06], ['label_text', 2.598833643460815e-06], ['loc_range->m_label->get_text', 2.598833643460815e-06], ['(range_idx);', 2.598833643460815e-06], ['(text.m_buffer)', 2.598833643460815e-06], ['("label",', 2.598833643460815e-06], ['(text.m_buffer));', 2.598833643460815e-06], ['text.maybe_free', 2.598833643460815e-06], ['HINT.', 2.598833643460815e-06], ['*hint)', 2.598833643460815e-06], ['hint->get_start_loc', 2.598833643460815e-06], ['next_loc', 2.598833643460815e-06], ['hint->get_next_loc', 2.598833643460815e-06], ['("next",', 2.598833643460815e-06], ['(next_loc));', 2.598833643460815e-06], ['("string",', 2.598833643460815e-06], ['(hint->get_string', 2.598833643460815e-06], ['fixit_obj;', 2.598833643460815e-06], ['"begin_diagnostic"', 2.598833643460815e-06], ['json_begin_diagnostic', 2.598833643460815e-06], ['"end_diagnostic"', 2.598833643460815e-06], ['DIAGNOSTIC,', 2.598833643460815e-06], ['json_end_diagnostic', 2.598833643460815e-06], ['*diagnostic,', 2.598833643460815e-06], ['orig_diag_kind)', 2.598833643460815e-06], ['*diag_obj', 2.598833643460815e-06], ['"kind"', 2.598833643460815e-06], ['diagnostic.', 2.598833643460815e-06], ['diagnostic_kind_text[]', 2.598833643460815e-06], ['DEFINE_DIAGNOSTIC_KIND(K,', 2.598833643460815e-06], ['(T),', 2.598833643460815e-06], ['"diagnostic.def"', 2.598833643460815e-06], ['DEFINE_DIAGNOSTIC_KIND', 2.598833643460815e-06], ['"must-not-happen"', 2.598833643460815e-06], ['":', 2.598833643460815e-06], ['".', 2.598833643460815e-06], ['*kind_text', 2.598833643460815e-06], ['diagnostic_kind_text[diagnostic->kind];', 2.598833643460815e-06], ["':');", 2.598833643460815e-06], ['*rstrip', 2.598833643460815e-06], ['rstrip[len', 2.598833643460815e-06], ['(rstrip));', 2.598833643460815e-06], ['(rstrip);', 2.598833643460815e-06], ['(json::string', 2.598833643460815e-06], ['UTF-8)', 2.598833643460815e-06], ['(context->printer)));', 2.598833643460815e-06], ['pp_clear_output_area', 2.598833643460815e-06], ['(context->printer);', 2.598833643460815e-06], ['*option_text;', 2.598833643460815e-06], ['option_text', 2.598833643460815e-06], ['context->option_name', 2.598833643460815e-06], ['diagnostic->option_index,', 2.598833643460815e-06], ['orig_diag_kind,', 2.598833643460815e-06], ['diagnostic->kind);', 2.598833643460815e-06], ['(option_text)', 2.598833643460815e-06], ['("option",', 2.598833643460815e-06], ['(option_text));', 2.598833643460815e-06], ['(option_text);', 2.598833643460815e-06], ['auto_diagnostic_group,', 2.598833643460815e-06], ['(cur_group)', 2.598833643460815e-06], ['(cur_children_array);', 2.598833643460815e-06], ['cur_children_array->append', 2.598833643460815e-06], ['toplevel_array->append', 2.598833643460815e-06], ['diag_obj;', 2.598833643460815e-06], ['cur_children_array);', 2.598833643460815e-06], ['*richloc', 2.598833643460815e-06], ['diagnostic->richloc;', 2.598833643460815e-06], ['*loc_array', 2.598833643460815e-06], ['("locations",', 2.598833643460815e-06], ['loc_array);', 2.598833643460815e-06], ['richloc->get_num_locations', 2.598833643460815e-06], ['*loc_range', 2.598833643460815e-06], ['richloc->get_range', 2.598833643460815e-06], ['*loc_obj', 2.598833643460815e-06], ['(loc_range,', 2.598833643460815e-06], ['(loc_obj)', 2.598833643460815e-06], ['loc_array->append', 2.598833643460815e-06], ['(loc_obj);', 2.598833643460815e-06], ['(richloc->get_num_fixit_hints', 2.598833643460815e-06], ['*fixit_array', 2.598833643460815e-06], ['("fixits",', 2.598833643460815e-06], ['fixit_array);', 2.598833643460815e-06], ['richloc->get_num_fixit_hints', 2.598833643460815e-06], ['*hint', 2.598833643460815e-06], ['richloc->get_fixit_hint', 2.598833643460815e-06], ['(hint);', 2.598833643460815e-06], ['fixit_array->append', 2.598833643460815e-06], ['(fixit_obj);', 2.598833643460815e-06], ['tree-ish', 2.598833643460815e-06], ['things:', 2.598833643460815e-06], ['"begin_group_cb"', 2.598833643460815e-06], ['json_begin_group', 2.598833643460815e-06], ['"end_group_cb"', 2.598833643460815e-06], ['json_end_group', 2.598833643460815e-06], ['json_final_cb', 2.598833643460815e-06], ['toplevel_array->dump', 2.598833643460815e-06], ['(stderr);', 2.598833643460815e-06], ['toplevel_array;', 2.598833643460815e-06], ['FORMAT.', 2.598833643460815e-06], ['diagnostic_output_format_init', 2.598833643460815e-06], ['diagnostics_output_format', 2.598833643460815e-06], ['format)', 2.598833643460815e-06], ['(format)', 2.598833643460815e-06], ['DIAGNOSTICS_OUTPUT_FORMAT_TEXT:', 2.598833643460815e-06], ['default;', 2.598833643460815e-06], ['DIAGNOSTICS_OUTPUT_FORMAT_JSON:', 2.598833643460815e-06], ['(toplevel_array', 2.598833643460815e-06], ['callbacks.', 2.598833643460815e-06], ['context->begin_diagnostic', 2.598833643460815e-06], ['json_begin_diagnostic;', 2.598833643460815e-06], ['context->end_diagnostic', 2.598833643460815e-06], ['json_end_diagnostic;', 2.598833643460815e-06], ['context->begin_group_cb', 2.598833643460815e-06], ['json_begin_group;', 2.598833643460815e-06], ['context->end_group_cb', 2.598833643460815e-06], ['json_end_group;', 2.598833643460815e-06], ['context->final_cb', 2.598833643460815e-06], ['json_final_cb;', 2.598833643460815e-06], ['context->show_option_requested', 2.598833643460815e-06], ['colorize', 2.598833643460815e-06], ['pp_show_color', 2.598833643460815e-06], ['(context->printer)', 2.598833643460815e-06]]