[['=', 0.0425548562680728], ['{', 0.023078754890287465], ['if', 0.022558258207178092], ['}', 0.02245960197312468], ['the', 0.020823269263480184], ['//', 0.013726824289845212], ['return', 0.012454499064466745], ['*/', 0.011794522878040482], ['/*', 0.011774111243408743], ['==', 0.009637693485286614], ['a', 0.009603674094233712], ['tree', 0.00881782616091172], ['to', 0.008620513692804898], ['for', 0.007984351080115666], ['!=', 0.0074366388841639736], ['of', 0.007395815614900493], ['case', 0.007218914781425412], ['is', 0.006888926688212281], ['else', 0.005650620853886715], ['in', 0.005351250212621194], ['&&', 0.005136928048987923], ['const', 0.004150365708453819], ['void', 0.003619663208028576], ['and', 0.003612859329817996], ['#include', 0.003357713896921245], ['that', 0.003323694505868345], ['int', 0.003265861541078415], ['be', 0.0032046266371831946], ['break;', 0.003136587855077394], ['||', 0.0030515393774451435], ['NULL)', 0.0029528831433917333], ['type', 0.002932471508759993], [';;', 0.002932471508759993], ['we', 0.002908657935022963], ['();', 0.002840619152917163], ['-', 0.0027997958836536827], ['bool', 0.0026501105630209218], ['an', 0.0025820717809151216], ['it', 0.0023269263480183706], ['|', 0.0023167205307025006], ['not', 0.0022656914441231504], ['i', 0.0022622895050178602], [':', 0.0021262119408062595], ['as', 0.002061575097805749], ['0;', 0.002051369280489879], ['The', 0.002034359584963429], ['unsigned', 0.0020275557067528493], ['NULL', 0.002024153767647559], ['this', 0.002003742133015819], ['Expression*', 0.001979928559278789], ['<', 0.001962918863752339], ['or', 0.0019152917162782786], ['are', 0.0019118897771729887], ['by', 0.0018506548732777684], ['false;', 0.0018302432386460281], ['*', 0.001755400578329648], ['function', 0.0017247831263820378], ['1;', 0.0017179792481714577], ['+', 0.0016907637353291377], ['If', 0.0016601462833815274], ['true;', 0.0016499404660656573], ['static', 0.0016159210750127573], ['loc);', 0.0016159210750127573], ['new', 0.0015819016839598572], ['This', 0.0015614900493281171], ['with', 0.001551284232012247], ['can', 0.0014866473890117367], ['#', 0.0014254124851165164], ['?', 0.0014186086069059363], ['<<', 0.001343765946589556], ['have', 0.0013199523728525259], ['*)', 0.001302942677326076], ['Type*', 0.0012757271644837558], ['p', 0.0012485116516414356], ['Return', 0.0012178941996938255], ['char', 0.0011974825650620854], ['all', 0.0011940806259567954], ['(tree', 0.0011872767477462153], ['value', 0.0011736689913250554], ['from', 0.0011362476611668651], ['which', 0.001129443782956285], ['(const', 0.0010920224527980948], ['We', 0.0010750127572716449], ['will', 0.0010682088790610648], ['gcc_assert', 0.0010546011226399048], ['0)', 0.0010477972444293247], ['return;', 0.0010477972444293247], ['loop', 0.0010375914271134547], ['Bexpression*', 0.0010341894880081647], ['()', 0.0010205817315870045], ['result', 0.0010069739751658445], ['Location', 0.0010069739751658445], ['should', 0.0010035720360605546], ['expression', 0.0009865623405341045], ['then', 0.0009763565232182344], ['\\', 0.0009627487667970743], ['call', 0.0009321313148494642], ['>', 0.0009287293757441742], ['NULL,', 0.0009185235584283041], ['NULL);', 0.0009151216193230141], ['NULL;', 0.0009015138629018541], ['used', 0.0008674944718489539], ['(TREE_TYPE', 0.0008640925327436639], ['any', 0.0008334750807960537], ['())', 0.0008266712025854737], ['but', 0.0008232692634801837], ['Named_object*', 0.0008198673243748936], ['General', 0.0008096615070590236], ['expression.', 0.0008028576288484436], ['type,', 0.0007994556897431536], ['switch', 0.0007926518115325736], ['printf', 0.0007926518115325736], ['1', 0.0007926518115325736], ['code', 0.0007926518115325736], ['location);', 0.0007892498724272835], ['size_t', 0.0007858479333219936], ['on', 0.0007756421160061235], ['need', 0.0007756421160061235], ['type.', 0.0007756421160061235], ['esac', 0.0007722401769008335], ['into', 0.0007620343595849635], ['/', 0.0007416227249532234], ['GNU', 0.0007416227249532234], ['so', 0.0007280149685320633], ['struct', 0.0007280149685320633], ['Public', 0.0007144072121109032], ['&', 0.0007110052730056132], ['License', 0.0007110052730056132], ['A', 0.0007076033339003232], ['no', 0.0007076033339003232], ['NULL_TREE;', 0.0006973975165844532], ['variable', 0.0006973975165844532], ['while', 0.0006905936383738731], ['"', 0.000680387821058003], ['default:', 0.000673583942847423], ['TREE_TYPE', 0.000666780064636843], ['std::string', 0.000666780064636843], ['tm_file="${tm_file}', 0.000666780064636843], ['0);', 0.000663378125531553], ['Build', 0.000663378125531553], ['see', 0.0006599761864262629], ['class', 0.0006531723082156829], ['only', 0.0006531723082156829], ['ret', 0.0006497703691103929], ['GCC', 0.0006429664908998129], ['t', 0.0006361626126892329], ['at', 0.0006327606735839429], ['1,', 0.0006293587344786528], ['use', 0.0006157509780574927], ['has', 0.0006123490389522028], ['};', 0.0006089470998469127], ['(TREE_CODE', 0.0006089470998469127], ['false,', 0.0005953393434257526], ['0,', 0.0005885354652151726], ['field', 0.0005885354652151726], ['visit', 0.0005817315870045927], ['X', 0.0005783296478993026], ['location)', 0.0005783296478993026], ['Type', 0.0005715257696887226], ['do', 0.0005681238305834326], ['0', 0.0005647218914781425], ['HOST_WIDE_INT', 0.0005647218914781425], ['(size_t', 0.0005579180132675625], ['when', 0.0005545160741622725], ['file', 0.0005477121959516925], ['true,', 0.0005477121959516925], ['#define', 0.0005443102568464024], ['i++)', 0.0005375063786358224], ['array', 0.0005375063786358224], ['set', 0.0005341044395305324], ['++i)', 0.0005273005613199524], ['());', 0.0005170947440040824], ['(),', 0.0005136928048987923], ['pointer', 0.0005102908657935023], ['test', 0.0005068889266882123], ['1);', 0.0005000850484776322], ['tmake_file="${tmake_file}', 0.0004966831093723423], ['may', 0.0004932811702670522], ['wide_int', 0.0004898792311617622], ["don't", 0.0004898792311617622], ['out', 0.00047967341384589214], ['continue;', 0.00047967341384589214], ['Free', 0.00047967341384589214], ['<=', 0.00047627147474060214], ['Software', 0.00047627147474060214], ['For', 0.00047286953563531215], ['version', 0.0004694675965300221], ['name', 0.0004660656574247321], ['constant', 0.0004626637183194421], ['build2', 0.0004626637183194421], ['echo', 0.0004626637183194421], ['gcc_unreachable', 0.00045585984010886206], ['types', 0.00045585984010886206], ['error_mark_node)', 0.00045585984010886206], ['there', 0.000452457901003572], ['Check', 0.000452457901003572], ['Y', 0.000445654022792992], ['++p)', 0.000445654022792992], ['its', 0.00044225208368770197], ['+=', 0.00044225208368770197], ['fi', 0.00044225208368770197], ['number', 0.000438850144582412], ['args,', 0.000438850144582412], ['std::string&', 0.000438850144582412], ['must', 0.00043204626637183193], ['");', 0.00043204626637183193], ['error', 0.00043204626637183193], ['elfos.h', 0.00042864432726654193], ['rtx', 0.00042864432726654193], ['interface', 0.00042524238816125194], ['this->result_', 0.00042524238816125194], ['true', 0.0004218404490559619], ['either', 0.0004218404490559619], ['false);', 0.0004218404490559619], ['more', 0.0004184385099506719], ['first', 0.0004184385099506719], ['function.', 0.00041503657084538184], ['Operator', 0.00041503657084538184], ['decl', 0.00041503657084538184], ['one', 0.00041163463174009185], ['address', 0.00040823269263480185], ['3,', 0.0004048307535295118], ['functions', 0.0004048307535295118], ['exit', 0.0004048307535295118], ['check', 0.0004014288144242218], ['>=', 0.0004014288144242218], ['whether', 0.0004014288144242218], ['1)', 0.0003980268753189318], ['(decl)', 0.0003980268753189318], ['offset', 0.00039462493621364176], ['#undef', 0.00039122299710835177], ['block', 0.00039122299710835177], ['extra_options="${extra_options}', 0.00039122299710835177], ['go_unreachable();', 0.00038782105800306177], ['Make', 0.0003844191188977717], ['D', 0.0003776152406871917], ['current', 0.0003776152406871917], ['Get', 0.0003776152406871917], ['without', 0.0003742133015819017], ['value.', 0.0003742133015819017], ['(unsigned', 0.0003708113624766117], ['expr', 0.0003708113624766117], ['ast_dump_context->ostream()', 0.0003708113624766117], ['index', 0.00036400748426603164], ['copy', 0.00036060554516074164], ['TRAVERSE_CONTINUE;', 0.00036060554516074164], ['same', 0.0003572036060554516], ['because', 0.0003572036060554516], ['object', 0.0003572036060554516], ['each', 0.0003572036060554516], ['Z', 0.0003538016669501616], ['reference', 0.0003538016669501616], ['it.', 0.0003538016669501616], ['Btype*', 0.0003538016669501616], ['Returns', 0.0003503997278448716], ['Set', 0.0003503997278448716], ['list', 0.0003503997278448716], ['long', 0.00034699778873958155], ['even', 0.00034699778873958155], ['sizeof', 0.00034359584963429156], ['free', 0.00034359584963429156], ['later', 0.00034359584963429156], ['data', 0.0003401939105290015], ['using', 0.0003367919714237115], ['In', 0.0003367919714237115], ['(t);', 0.0003367919714237115], ['build_address', 0.0003367919714237115], ['(int', 0.0003333900323184215], ['See', 0.00032998809321313147], ['Add', 0.00032998809321313147], ['size', 0.00032998809321313147], ['method', 0.00032998809321313147], ['public:', 0.00032658615410784147], ['defined', 0.00032658615410784147], ['argument', 0.00032658615410784147], ['t)', 0.00032658615410784147], ['Node*', 0.00032658615410784147], ['already', 0.0003231842150025515], ['before', 0.0003231842150025515], ['complain,', 0.0003231842150025515], ['than', 0.0003197822758972614], ['variables', 0.0003197822758972614], ['string', 0.0003197822758972614], ['given', 0.0003197822758972614], ['"shli",', 0.0003197822758972614], ['values', 0.00031638033679197143], ['up', 0.00031638033679197143], ['representation', 0.00031638033679197143], ['name,', 0.00031638033679197143], ['${target}', 0.00031638033679197143], ['other', 0.00031297839768668144], ['been', 0.00031297839768668144], ['(type,', 0.00031297839768668144], ['(build_ctype', 0.00031297839768668144], ['convert', 0.0003095764585813914], ['build_expr', 0.0003095764585813914], ['T', 0.0003061745194761014], ['ret;', 0.0003061745194761014], ['was', 0.00030277258037081134], ['NULL_TREE);', 0.00030277258037081134], ['builtin', 0.00030277258037081134], ['dbxelf.h', 0.00030277258037081134], ['constraint', 0.00030277258037081134], ['traverse)', 0.00030277258037081134], ['function,', 0.00029937064126552134], ['init', 0.00029937064126552134], ['two', 0.00029596870216023135], ['bits', 0.0002925667630549413], ['emit_insn', 0.0002925667630549413], ['size_int', 0.0002891648239496513], ['error_mark_node;', 0.0002891648239496513], ['does', 0.0002857628848443613], ['NULL_TREE,', 0.0002857628848443613], ['log_msg', 0.0002857628848443613], ['public', 0.00028236094573907126], ['TREE_OPERAND', 0.00028236094573907126], ['tm_defines="${tm_defines}', 0.00028236094573907126], ['(reg:SI', 0.00028236094573907126], ['loop.', 0.00027895900663378126], ['backend', 0.00027895900663378126], ['(callexp,', 0.00027895900663378126], ['(i', 0.00027555706752849127], ['Copyright', 0.00027555706752849127], ['terms', 0.00027555706752849127], ['package', 0.00027555706752849127], ['(t,', 0.00027555706752849127], ['part', 0.0002721551284232012], ['where', 0.0002721551284232012], ['them', 0.0002687531893179112], ['statement', 0.0002687531893179112], ['loc', 0.0002687531893179112], ['you', 0.00026535125021262117], ['FLOAT', 0.00026535125021262117], ['(loc,', 0.00026535125021262117], ['op', 0.00026535125021262117], ['fields', 0.00026535125021262117], ['TRAVERSE_EXIT)', 0.00026535125021262117], ['named', 0.0002619493111073312], ['just', 0.0002619493111073312], ['arg', 0.0002619493111073312], ['},', 0.0002619493111073312], ['modify', 0.0002585473720020412], ['this;', 0.0002585473720020412], ['2)', 0.0002585473720020412], ['end', 0.0002585473720020412], ['TRAVERSE_EXIT;', 0.0002585473720020412], ['template', 0.00025514543289675113], ['and/or', 0.00025514543289675113], ['along', 0.00025514543289675113], ['global', 0.00025514543289675113], ['create', 0.00025514543289675113], ['inner', 0.00025514543289675113], ['this->location());', 0.00025514543289675113], ['n', 0.00025174349379146114], ['hope', 0.00025174349379146114], ['always', 0.00025174349379146114], ['CONSTRUCTOR_APPEND_ELT', 0.00025174349379146114], ['context)', 0.00025174349379146114], ['You', 0.00024834155468617114], ['integer', 0.00024834155468617114], ['under', 0.00024834155468617114], ['(at', 0.00024834155468617114], ['0));', 0.00024834155468617114], ['j', 0.00024834155468617114], ['--', 0.00024834155468617114], ['initializer', 0.00024834155468617114], ['1>&2', 0.00024834155468617114], ['(C)', 0.0002449396155808811], ['One', 0.0002449396155808811], ['after', 0.0002449396155808811], ['received', 0.0002449396155808811], ['right', 0.0002449396155808811], ['t,', 0.0002449396155808811], ['version.', 0.0002415376764755911], ['pass', 0.0002415376764755911], ['Bstatement*', 0.0002415376764755911], ['Class', 0.00023813573737030107], ['some', 0.00023813573737030107], ['Foundation,', 0.00023813573737030107], ['software;', 0.00023813573737030107], ['redistribute', 0.00023813573737030107], ['published', 0.00023813573737030107], ['Foundation;', 0.00023813573737030107], ['option)', 0.00023813573737030107], ['distributed', 0.00023813573737030107], ['useful,', 0.00023813573737030107], ['WARRANTY;', 0.00023813573737030107], ['implied', 0.00023813573737030107], ['warranty', 0.00023813573737030107], ['FOR', 0.00023813573737030107], ['PARTICULAR', 0.00023813573737030107], ['PURPOSE.', 0.00023813573737030107], ['details.', 0.00023813573737030107], ['GCC;', 0.00023813573737030107], ['COPYING3.', 0.00023813573737030107], ['loc,', 0.00023813573737030107], ['NULL_TREE)', 0.00023813573737030107], ['declaration', 0.00023813573737030107], ['compound_expr', 0.00023813573737030107], ['x', 0.00023473379826501105], ['they', 0.00023473379826501105], ['bit', 0.00023473379826501105], ['Inc.', 0.00023473379826501105], ['your', 0.00023473379826501105], ['WITHOUT', 0.00023473379826501105], ['ANY', 0.00023473379826501105], ['MERCHANTABILITY', 0.00023473379826501105], ['FITNESS', 0.00023473379826501105], ['<http://www.gnu.org/licenses/>.', 0.00023473379826501105], ['input', 0.00023473379826501105], ['types.', 0.00023473379826501105], ['Expression', 0.00023473379826501105], ['build_ctype', 0.00023473379826501105], ['outer', 0.00023473379826501105], ['TypeInfo', 0.00023473379826501105], ['Expression_list*', 0.00023473379826501105], ['private:', 0.00023133185915972105], ['zero', 0.00023133185915972105], ['len', 0.00023133185915972105], ['SHIFT', 0.00023133185915972105], ['label', 0.00023133185915972105], ['add', 0.00022792992005443103], ['basic', 0.00022792992005443103], ['va_gc>', 0.00022792992005443103], ['char*', 0.00022792992005443103], ['%s', 0.000224527980949141], ['2,', 0.000224527980949141], ['ASSERT_EQ', 0.000224527980949141], ['var', 0.000224527980949141], ['arguments', 0.000224527980949141], ['operand', 0.000224527980949141], ['Dump', 0.000224527980949141], ["can't", 0.00022112604184385099], ['get', 0.00022112604184385099], ['would', 0.00022112604184385099], ['variable.', 0.00022112604184385099], ['(TREE_OPERAND', 0.00022112604184385099], ['also', 0.000217724102738561], ['newlib-stdint.h', 0.000217724102738561], ['ccreg', 0.000217724102738561], ['this->layout_field', 0.000217724102738561], ['C', 0.00021432216363327097], ['since', 0.00021432216363327097], ['here', 0.00021432216363327097], ['Zero)', 0.00021432216363327097], ['|=', 0.00021432216363327097], ['target', 0.00021432216363327097], ['(void)', 0.00021432216363327097], ['("CODE_FOR_ashldi3",', 0.00021432216363327097], ['args', 0.00021432216363327097], ['Function_type*', 0.00021432216363327097], ['make', 0.00021092022452798094], ['this->location();', 0.00021092022452798094], ['go_assert(saw_errors());', 0.00021092022452798094], ['t;', 0.00020751828542269092], ['single', 0.00020751828542269092], ['conversion', 0.00020751828542269092], ['void_type_node,', 0.00020751828542269092], ['Go', 0.00020751828542269092], ['cannot', 0.00020411634631740093], ['temporary', 0.00020411634631740093], ['element', 0.00020411634631740093], ['symbol', 0.00020411634631740093], ['frontend', 0.00020411634631740093], ['point', 0.0002007144072121109], ['code,', 0.0002007144072121109], ['(t', 0.0002007144072121109], ['statements', 0.0002007144072121109], ["doesn't", 0.0002007144072121109], ['want', 0.0002007144072121109], ['Identifier::idPool', 0.0002007144072121109], ['RETURN,', 0.0002007144072121109], ['ast_dump_context)', 0.0002007144072121109], ['("', 0.00019731246810682088], ['such', 0.00019731246810682088], ['different', 0.00019731246810682088], [';', 0.00019731246810682088], ['(type);', 0.00019731246810682088], ['(decl);', 0.00019731246810682088], ['Typed_identifier_list*', 0.00019731246810682088], ['Gogo*', 0.00019731246810682088], ['could', 0.00019391052900153089], ['inline', 0.00019391052900153089], ['between', 0.00019391052900153089], ['left', 0.00019391052900153089], ['blocks', 0.00019391052900153089], ['val', 0.00019391052900153089], ['vector', 0.00019391052900153089], ['*e)', 0.00019391052900153089], ['add_stmt', 0.00019391052900153089], ['fprintf', 0.00019050858989624086], ['*,', 0.00019050858989624086], ['0))', 0.00019050858989624086], ['methods', 0.00019050858989624086], ['Create', 0.00019050858989624086], ['through', 0.00019050858989624086], ['multiple', 0.00019050858989624086], ['type)', 0.00019050858989624086], ['(expr,', 0.00019050858989624086], ['type;', 0.00019050858989624086], ['get_identifier', 0.00019050858989624086], ['module', 0.00019050858989624086], ['ARG_UNUSED', 0.00019050858989624086], ['returns', 0.00018710665079095084], ['comparison', 0.00018710665079095084], ['default', 0.00018710665079095084], ['calls', 0.00018710665079095084], ['Write', 0.00018710665079095084], ['(decl->csym)', 0.00018710665079095084], ['this->type_', 0.00018710665079095084], ['length', 0.00018370471168566082], ['found', 0.00018370471168566082], ['information', 0.00018370471168566082], ['location', 0.00018370471168566082], ['TREE_CODE', 0.00018370471168566082], ['might', 0.00018370471168566082], ['compiler', 0.00018370471168566082], ['mpz_t', 0.00018370471168566082], ['builtin_decl_explicit', 0.00018370471168566082], ['true);', 0.00018370471168566082], ['expr,', 0.00018370471168566082], ['gnu-user.h', 0.00018370471168566082], ['closure', 0.00018370471168566082], ['CALL_EXPR_ARG', 0.00018370471168566082], ['gogo,', 0.00018370471168566082], ['export', 0.00018370471168566082], ['go_error_at(location,', 0.00018370471168566082], ['being', 0.00018030277258037082], ['c', 0.00018030277258037082], ['result;', 0.00018030277258037082], ['s', 0.00018030277258037082], ["it's", 0.00018030277258037082], ['BrigBase', 0.00018030277258037082], ['error_mark_node', 0.00018030277258037082], ['constraints', 0.00018030277258037082], ['Traverse', 0.00018030277258037082], ['const;', 0.0001769008334750808], ['Note', 0.0001769008334750808], ['val);', 0.0001769008334750808], ['gccbrig_tree_type_for_hsa_type', 0.0001769008334750808], ['parameter', 0.0001769008334750808], ['(type)', 0.0001769008334750808], ['(dump_file,', 0.0001769008334750808], ['insn', 0.0001769008334750808], ['(XEXP', 0.0001769008334750808], ['tree,', 0.0001769008334750808], ['ARG1,', 0.0001769008334750808], ['fntype', 0.0001769008334750808], ['(this->type_', 0.0001769008334750808], ['about', 0.00017349889436979078], ['build_int_cst', 0.00017349889436979078], ['done', 0.00017349889436979078], ['${tm_file}', 0.00017349889436979078], ['fn', 0.00017349889436979078], ['GCC.', 0.00017009695526450075], ['delete', 0.00017009695526450075], ['range', 0.00017009695526450075], ['original', 0.00017009695526450075], ['result);', 0.00017009695526450075], ['x;', 0.00017009695526450075], ['tree_stl_vec', 0.00017009695526450075], ['in_decl);', 0.00017009695526450075], ['NULL))', 0.00017009695526450075], ['Temporary_statement*', 0.00017009695526450075], ['this->set_is_error();', 0.00017009695526450075], ['expressions', 0.00016669501615921076], ['file.', 0.00016669501615921076], ['flags', 0.00016669501615921076], ['location,', 0.00016669501615921076], ['build', 0.00016669501615921076], ['stride', 0.00016669501615921076], ['"Unknown', 0.00016669501615921076], ['concept', 0.00016669501615921076], ['uint32_type_node,', 0.00016329307705392074], ['loops', 0.00016329307705392074], ['[bb', 0.00016329307705392074], ['slice', 0.00016329307705392074], ['versioning', 0.00016329307705392074], ['Bvariable*', 0.00016329307705392074], ['Numeric_constant', 0.00016329307705392074], ['*);', 0.0001598911379486307], ['count', 0.0001598911379486307], ['these', 0.0001598911379486307], ['called', 0.0001598911379486307], ['It', 0.0001598911379486307], ['know', 0.0001598911379486307], ['support', 0.0001598911379486307], ['DECL_INITIAL', 0.0001598911379486307], ['DECL_CONTEXT', 0.0001598911379486307], ['""', 0.0001598911379486307], ['inform', 0.0001598911379486307], ['d_convert', 0.0001598911379486307], ['#endif', 0.00015648919884334072], ['U2;', 0.00015648919884334072], ['Use', 0.00015648919884334072], ['handle', 0.00015648919884334072], ['within', 0.00015648919884334072], ['array.', 0.00015648919884334072], ['try', 0.00015648919884334072], ['args);', 0.00015648919884334072], ['*d)', 0.00015648919884334072], ['enum', 0.0001530872597380507], ['An', 0.0001530872597380507], ['output', 0.0001530872597380507], ['memory', 0.0001530872597380507], ['Handle', 0.0001530872597380507], ['base', 0.0001530872597380507], ['condition', 0.0001530872597380507], ['temp', 0.0001530872597380507], ['Implements', 0.0001530872597380507], ['vec<constructor_elt,', 0.0001530872597380507], ['type);', 0.0001530872597380507], ['sed', 0.0001530872597380507], ['(set', 0.0001530872597380507], ['FuncDeclaration', 0.0001530872597380507], ['ARG2,', 0.0001530872597380507], ['Lower', 0.0001530872597380507], ['btype,', 0.0001530872597380507], ['Type::make_error_type();', 0.0001530872597380507], ['source', 0.00014968532063276067], ['Radix', 0.00014968532063276067], ['/*=============================================*/', 0.00014968532063276067], ['last', 0.00014968532063276067], ['va_list', 0.00014968532063276067], ['json::object', 0.00014968532063276067], ['record', 0.00014968532063276067], ['both', 0.00014968532063276067], ['build_decl', 0.00014968532063276067], ['runtime', 0.00014968532063276067], ['real', 0.00014968532063276067], ['OK', 0.00014968532063276067], ['t1', 0.00014968532063276067], ['(decl,', 0.00014968532063276067], ['GMP_RNDN);', 0.00014968532063276067], ['gogo', 0.00014968532063276067], ['inserter,', 0.00014968532063276067], ['TstCond', 0.00014628338152747065], ['Y;', 0.00014628338152747065], ['n;', 0.00014628338152747065], ['their', 0.00014628338152747065], ['start', 0.00014628338152747065], ['store', 0.00014628338152747065], ['base;', 0.00014628338152747065], ['int_size_in_bytes', 0.00014628338152747065], ['local', 0.00014628338152747065], ['declaration.', 0.00014628338152747065], ['nested', 0.00014628338152747065], ['decl;', 0.00014628338152747065], ['get_symbol_decl', 0.00014628338152747065], ['reduction', 0.00014628338152747065], ['Location);', 0.00014628338152747065], ['pv', 0.00014628338152747065], ['Statement*', 0.00014628338152747065], ['here.', 0.00014288144242218065], ['%s",', 0.00014288144242218065], ['overflow', 0.00014288144242218065], ['"system.h"', 0.00014288144242218065], ['error_at', 0.00014288144242218065], ['FIXME:', 0.00014288144242218065], ['%qs",', 0.00014288144242218065], ['value;', 0.00014288144242218065], ['b', 0.00014288144242218065], ['instruction', 0.00014288144242218065], ['complex', 0.00014288144242218065], ['(t))', 0.00014288144242218065], ['initialization', 0.00014288144242218065], ['(e->type),', 0.00014288144242218065], ['(code,', 0.00013947950331689063], ['"config.h"', 0.00013947950331689063], ['Verify', 0.00013947950331689063], ['%', 0.00013947950331689063], ['innermost', 0.00013947950331689063], ['cases', 0.00013947950331689063], ['order', 0.00013947950331689063], ['no)', 0.00013947950331689063], ['linux.h', 0.00013947950331689063], ['exp', 0.0001360775642116006], ['goto', 0.0001360775642116006], ['Contributed', 0.0001360775642116006], ['"coretypes.h"', 0.0001360775642116006], ['dump', 0.0001360775642116006], ['namespace', 0.0001360775642116006], ['underlying', 0.0001360775642116006], ['block.', 0.0001360775642116006], ['top', 0.0001360775642116006], ['Convert', 0.0001360775642116006], ['VAL', 0.0001360775642116006], ['bytes', 0.0001360775642116006], ['There', 0.0001360775642116006], ['1));', 0.0001360775642116006], ['jump', 0.0001360775642116006], ['references', 0.0001360775642116006], ['body', 0.0001360775642116006], ["Don't", 0.0001360775642116006], ['tm_file="dbxelf.h', 0.0001360775642116006], ['emit_move_insn', 0.0001360775642116006], ['log_return', 0.0001360775642116006], ['(make_location_t', 0.0001360775642116006], ['d_save_expr', 0.0001360775642116006], ['escape', 0.0001360775642116006], ['never', 0.00013267562510631059], ['*s)', 0.00013267562510631059], ['template<typename', 0.00013267562510631059], ['(Failure,', 0.00013267562510631059], ['mask', 0.00013267562510631059], ['shift', 0.00013267562510631059], ['len,', 0.00013267562510631059], ['sure', 0.00013267562510631059], ['ptr_type_node,', 0.00013267562510631059], ['build_constructor', 0.00013267562510631059], ['constant.', 0.00013267562510631059], ['constraint.', 0.00013267562510631059], ['ARG3,', 0.00013267562510631059], ['build_libcall', 0.00013267562510631059], ['(build_expr', 0.00013267562510631059], ['t->ctype', 0.00013267562510631059], ['Bfunction*', 0.00013267562510631059], ['results', 0.0001292736860010206], ['many', 0.0001292736860010206], ['-1', 0.0001292736860010206], ['i;', 0.0001292736860010206], ['branch', 0.0001292736860010206], ['t);', 0.0001292736860010206], ['like', 0.0001292736860010206], ['empty', 0.0001292736860010206], ['scope', 0.0001292736860010206], ['e', 0.0001292736860010206], ['attribute', 0.0001292736860010206], ['use_gcc_stdint=wrap', 0.0001292736860010206], ['reference.', 0.0001292736860010206], ['147', 0.0001292736860010206], ['Expression::make_error(location);', 0.0001292736860010206], ['this->type_;', 0.0001292736860010206], ['typedef', 0.00012587174689573057], ['message', 0.00012587174689573057], ['(fndecl)', 0.00012587174689573057], ['elements', 0.00012587174689573057], ['>>', 0.00012587174689573057], ['signed', 0.00012587174689573057], ['instead', 0.00012587174689573057], ['level', 0.00012587174689573057], ['build_pointer_type', 0.00012587174689573057], ['find', 0.00012587174689573057], ['calling', 0.00012587174689573057], ['descriptor', 0.00012587174689573057], ['${tm_file}"', 0.00012587174689573057], ['bb', 0.00012587174689573057], ['ident', 0.00012587174689573057], ['(struct', 0.00012587174689573057], ['context->gogo();', 0.00012587174689573057], ['Statement_inserter*', 0.00012587174689573057], ['uses', 0.00012246980779044055], ['parameters', 0.00012246980779044055], ['precision', 0.00012246980779044055], ['extra', 0.00012246980779044055], ['Generate', 0.00012246980779044055], ['TODO:', 0.00012246980779044055], ['TYPE', 0.00012246980779044055], ['offset);', 0.00012246980779044055], ['means', 0.00012246980779044055], ['form', 0.00012246980779044055], ['contains', 0.00012246980779044055], ['buf,', 0.00012246980779044055], ['TREE_USED', 0.00012246980779044055], ['NAME,', 0.00012246980779044055], ['reg', 0.00012246980779044055], ['ref', 0.00012246980779044055], ['table', 0.00012246980779044055], ['-e', 0.00012246980779044055], ['whose', 0.00012246980779044055], ['Dsymbol', 0.00012246980779044055], ['val,', 0.00012246980779044055], ['Block*', 0.00012246980779044055], ['Statement::make_temporary(NULL,', 0.00012246980779044055], ['converted', 0.00011906786868515054], ['r', 0.00011906786868515054], ['BadCond', 0.00011906786868515054], ['operands', 0.00011906786868515054], ['val)', 0.00011906786868515054], ['routine', 0.00011906786868515054], ['NULL_TREE', 0.00011906786868515054], ['context', 0.00011906786868515054], ['DECL_ARTIFICIAL', 0.00011906786868515054], ['name.', 0.00011906786868515054], ['Module', 0.00011906786868515054], ['arg);', 0.00011906786868515054], ['basic_block', 0.00011906786868515054], ['build_nt', 0.00011906786868515054], ['t2', 0.00011906786868515054], ['build_boolop', 0.00011906786868515054], ['ast', 0.00011906786868515054], ['this->ss_', 0.00011906786868515054], ['nil', 0.00011906786868515054], ['tree_code', 0.00011566592957986053], ['abstract', 0.00011566592957986053], ['2;', 0.00011566592957986053], ['("\\n");', 0.00011566592957986053], ['No', 0.00011566592957986053], ['(UNKNOWN_LOCATION,', 0.00011566592957986053], ['(type));', 0.00011566592957986053], ['t1,', 0.00011566592957986053], ['1]', 0.00011566592957986053], ['directly', 0.00011566592957986053], ['val;', 0.00011566592957986053], ['way', 0.00011566592957986053], ['take', 0.00011566592957986053], ['generated', 0.00011566592957986053], ['tm_defines="$tm_defines', 0.00011566592957986053], ['(t)', 0.00011566592957986053], ['errors', 0.00011566592957986053], ['language', 0.00011566592957986053], ['(tb->ty', 0.00011566592957986053], ['",', 0.0001122639904745705], ['now', 0.0001122639904745705], ['passed', 0.0001122639904745705], ['handling', 0.0001122639904745705], ['scope.', 0.0001122639904745705], ['i);', 0.0001122639904745705], ['value,', 0.0001122639904745705], ['assignment', 0.0001122639904745705], ['constructor', 0.0001122639904745705], ['TREE_PUBLIC', 0.0001122639904745705], ['alignment', 0.0001122639904745705], ['glibc-stdint.h', 0.0001122639904745705], ['binary', 0.0001122639904745705], ['conditional', 0.0001122639904745705], ['emit_jump_insn', 0.0001122639904745705], ['t1);', 0.0001122639904745705], ['D.', 0.0001122639904745705], ['ARG4,', 0.0001122639904745705], ['import', 0.0001122639904745705], ['Expression_list();', 0.0001122639904745705], ['this->seen_', 0.0001122639904745705], ['operator', 0.0001088620513692805], ['";', 0.0001088620513692805], ['exp);', 0.0001088620513692805], ['float', 0.0001088620513692805], ['(Z', 0.0001088620513692805], ['X;', 0.0001088620513692805], ['2', 0.0001088620513692805], ['during', 0.0001088620513692805], ['location_t', 0.0001088620513692805], ['JSON', 0.0001088620513692805], ['depending', 0.0001088620513692805], ['avoid', 0.0001088620513692805], ['(0,', 0.0001088620513692805], ['operation', 0.0001088620513692805], ['otherwise', 0.0001088620513692805], ['needs', 0.0001088620513692805], ['TYPE.', 0.0001088620513692805], ['base->byteCount;', 0.0001088620513692805], ['ptr', 0.0001088620513692805], ['kernel', 0.0001088620513692805], ['group', 0.0001088620513692805], ['(type', 0.0001088620513692805], ['map', 0.0001088620513692805], ['tm_file="elfos.h', 0.0001088620513692805], ['(exp,', 0.0001088620513692805], ['call_builtin_fn', 0.0001088620513692805], ['protected:', 0.0001088620513692805], ['(Typed_identifier_list::const_iterator', 0.0001088620513692805], ['snprintf(buf,', 0.0001088620513692805], ['All', 0.00010546011226399047], ['correct', 0.00010546011226399047], ['term', 0.00010546011226399047], ['next', 0.00010546011226399047], ['int,', 0.00010546011226399047], ['generate', 0.00010546011226399047], ['"tree.h"', 0.00010546011226399047], ['handled', 0.00010546011226399047], ['len;', 0.00010546011226399047], ['special', 0.00010546011226399047], ['functions.', 0.00010546011226399047], ['build1', 0.00010546011226399047], ['access', 0.00010546011226399047], ['(uint32_type_node,', 0.00010546011226399047], ['node', 0.00010546011226399047], ['When', 0.00010546011226399047], ['DECL_CHAIN', 0.00010546011226399047], ['dynamic', 0.00010546011226399047], ['(!', 0.00010546011226399047], ['("CODE_FOR_ashlsi3",', 0.00010546011226399047], ['"invalid', 0.00010546011226399047], ['tsubst_flags_t', 0.00010546011226399047], ['in_decl)', 0.00010546011226399047], ['ClassDeclaration', 0.00010546011226399047], ['vtable', 0.00010546011226399047], ['(Expression_list::const_iterator', 0.00010546011226399047], ['over', 0.00010205817315870046], ['&b)', 0.00010205817315870046], ['r;', 0.00010205817315870046], ['json::string', 0.00010205817315870046], ['%qs', 0.00010205817315870046], ['(MSG_NOTE,', 0.00010205817315870046], ['requires', 0.00010205817315870046], ['Do', 0.00010205817315870046], ['BrigInstBase', 0.00010205817315870046], ['(MODIFY_EXPR,', 0.00010205817315870046], ['them.', 0.00010205817315870046], ['value);', 0.00010205817315870046], ['(expr);', 0.00010205817315870046], ['0),', 0.00010205817315870046], ['definition', 0.00010205817315870046], ['gas=yes', 0.00010205817315870046], ['(const_int', 0.00010205817315870046], ['frontend.', 0.00010205817315870046], ['(field)', 0.00010205817315870046], ['initializer.', 0.00010205817315870046], ['receiver', 0.00010205817315870046], ['inserter->insert(temp);', 0.00010205817315870046], ['I', 9.865623405341044e-05], ['work', 9.865623405341044e-05], ['One;', 9.865623405341044e-05], ['(Y', 9.865623405341044e-05], ['i,', 9.865623405341044e-05], ['4', 9.865623405341044e-05], ['sign,', 9.865623405341044e-05], ['prec);', 9.865623405341044e-05], ['Find', 9.865623405341044e-05], ['Determine', 9.865623405341044e-05], ['created', 9.865623405341044e-05], ['debug', 9.865623405341044e-05], ['*base)', 9.865623405341044e-05], ['refers', 9.865623405341044e-05], ['These', 9.865623405341044e-05], ['(jump,', 9.865623405341044e-05], ['expr);', 9.865623405341044e-05], ['list.', 9.865623405341044e-05], ['one.', 9.865623405341044e-05], ['register', 9.865623405341044e-05], ['specific', 9.865623405341044e-05], ['time', 9.865623405341044e-05], ['(*this);', 9.865623405341044e-05], ['supported', 9.865623405341044e-05], ['library', 9.865623405341044e-05], ['state', 9.865623405341044e-05], ['rtx_insn', 9.865623405341044e-05], ['specified', 9.865623405341044e-05], ['*t)', 9.865623405341044e-05], ['args)', 9.865623405341044e-05], ['real_t', 9.865623405341044e-05], ['build_typeinfo', 9.865623405341044e-05], ['mpfr_t', 9.865623405341044e-05], ['TRAVERSE_SKIP_COMPONENTS;', 9.865623405341044e-05], ['DST', 9.865623405341044e-05], ['gcc', 9.525429494812043e-05], ['T>', 9.525429494812043e-05], ['-=', 9.525429494812043e-05], ['above', 9.525429494812043e-05], ['...', 9.525429494812043e-05], ['.\\n",', 9.525429494812043e-05], ['(X', 9.525429494812043e-05], ['mode', 9.525429494812043e-05], ['referenced', 9.525429494812043e-05], ['loc)', 9.525429494812043e-05], ['n,', 9.525429494812043e-05], ['signop', 9.525429494812043e-05], ['constants', 9.525429494812043e-05], ['yet', 9.525429494812043e-05], ['give', 9.525429494812043e-05], ['element_count', 9.525429494812043e-05], ['call.', 9.525429494812043e-05], ['vec_safe_push', 9.525429494812043e-05], ['arrays', 9.525429494812043e-05], ['seen', 9.525429494812043e-05], ['int64_t', 9.525429494812043e-05], ['DECL_EXTERNAL', 9.525429494812043e-05], ['(type))', 9.525429494812043e-05], ['Given', 9.525429494812043e-05], ['add_int_reg_note', 9.525429494812043e-05], ['REG_BR_PROB,', 9.525429494812043e-05], ['(false,', 9.525429494812043e-05], ['nest', 9.525429494812043e-05], ['interchange', 9.525429494812043e-05], ['thunk', 9.525429494812043e-05], ['libcall_types[type]', 9.525429494812043e-05], ['package,', 9.525429494812043e-05], ['C++', 9.185235584283041e-05], ['double', 9.185235584283041e-05], ['emit', 9.185235584283041e-05], ['(1,', 9.185235584283041e-05], ['(val,', 9.185235584283041e-05], ['sets', 9.185235584283041e-05], ['(code', 9.185235584283041e-05], ['(result,', 9.185235584283041e-05], ['entry', 9.185235584283041e-05], ['2016-2019', 9.185235584283041e-05], ['chainon', 9.185235584283041e-05], ['ptr,', 9.185235584283041e-05], ['build_resize_convert_view', 9.185235584283041e-05], ['TREE_ADDRESSABLE', 9.185235584283041e-05], ['require', 9.185235584283041e-05], ['loop,', 9.185235584283041e-05], ['declared', 9.185235584283041e-05], ['side', 9.185235584283041e-05], ['gnu_ld=yes', 9.185235584283041e-05], ['newlib-stdint.h"', 9.185235584283041e-05], ['cond', 9.185235584283041e-05], ['statement.', 9.185235584283041e-05], ['cur,', 9.185235584283041e-05], ['term_list::iterator', 9.185235584283041e-05], ['(*node)', 9.185235584283041e-05], ['warning', 9.185235584283041e-05], ['TYPE_MODE', 9.185235584283041e-05], ['ARG5,', 9.185235584283041e-05], ['(bits', 9.185235584283041e-05], ['this->error_expression();', 9.185235584283041e-05], ['vals,', 9.185235584283041e-05], ['Ast_dump_context*', 9.185235584283041e-05], ['Variable*', 9.185235584283041e-05], ['*p;', 9.185235584283041e-05], ['nc;', 9.185235584283041e-05], ['Type_context*)', 9.185235584283041e-05], ['Expression::make_temporary_reference(temp,', 9.185235584283041e-05], ['program', 8.84504167375404e-05], ['floating', 8.84504167375404e-05], ['digits', 8.84504167375404e-05], ['4;', 8.84504167375404e-05], ['(d);', 8.84504167375404e-05], ['(One', 8.84504167375404e-05], ['U2)', 8.84504167375404e-05], ['-1;', 8.84504167375404e-05], ['format', 8.84504167375404e-05], ['...)', 8.84504167375404e-05], ['it,', 8.84504167375404e-05], ['*>', 8.84504167375404e-05], ['(i);', 8.84504167375404e-05], ['(;', 8.84504167375404e-05], ['(char', 8.84504167375404e-05], ['assign', 8.84504167375404e-05], ['"fold-const.h"', 8.84504167375404e-05], ['sign);', 8.84504167375404e-05], ['index,', 8.84504167375404e-05], ['start,', 8.84504167375404e-05], ['needed', 8.84504167375404e-05], ['look', 8.84504167375404e-05], ['(i,', 8.84504167375404e-05], ['brig', 8.84504167375404e-05], ['build3', 8.84504167375404e-05], ['virtual', 8.84504167375404e-05], ['GENERIC', 8.84504167375404e-05], ['opcode', 8.84504167375404e-05], ['expressions.', 8.84504167375404e-05], ['TREE_READONLY', 8.84504167375404e-05], ['stmts', 8.84504167375404e-05], ['label.', 8.84504167375404e-05], ['is:', 8.84504167375404e-05], ['cpu', 8.84504167375404e-05], ['i386/unix.h', 8.84504167375404e-05], ['name)', 8.84504167375404e-05], ['ok', 8.84504167375404e-05], ['cstore', 8.84504167375404e-05], ['associated', 8.84504167375404e-05], ['error.', 8.84504167375404e-05], ['literal', 8.84504167375404e-05], ['imported', 8.84504167375404e-05], ['TYPE_FIELDS', 8.84504167375404e-05], ['convert_expr', 8.84504167375404e-05], ['(e->e1);', 8.84504167375404e-05], ['btype', 8.84504167375404e-05], ['Struct_type*', 8.84504167375404e-05], ['Node::Escape_state*', 8.84504167375404e-05], ['(debug_level', 8.84504167375404e-05], ['pa', 8.84504167375404e-05], ['inserter)', 8.84504167375404e-05], ['this->args();', 8.84504167375404e-05], ['Half', 8.504847763225038e-05], ['code.', 8.504847763225038e-05], ['4)', 8.504847763225038e-05], ['better', 8.504847763225038e-05], ['%d', 8.504847763225038e-05], ['dump_printf_loc', 8.504847763225038e-05], ['nothing', 8.504847763225038e-05], ['fndecl', 8.504847763225038e-05], ['were', 8.504847763225038e-05], ['least', 8.504847763225038e-05], ['lower', 8.504847763225038e-05], ['op0len,', 8.504847763225038e-05], ['block,', 8.504847763225038e-05], ['unary', 8.504847763225038e-05], ['hidden', 8.504847763225038e-05], ['frame', 8.504847763225038e-05], ['object.', 8.504847763225038e-05], ['segment', 8.504847763225038e-05], ['types,', 8.504847763225038e-05], ['EXPR', 8.504847763225038e-05], ['checking', 8.504847763225038e-05], ['names', 8.504847763225038e-05], ['(cond,', 8.504847763225038e-05], ['remove', 8.504847763225038e-05], ['path', 8.504847763225038e-05], ['boolean_false_node;', 8.504847763225038e-05], ['%qT', 8.504847763225038e-05], ['left,', 8.504847763225038e-05], ['(e->op', 8.504847763225038e-05], ['(Type', 8.504847763225038e-05], ['*fd', 8.504847763225038e-05], ['literal.', 8.504847763225038e-05], ['Flatten', 8.504847763225038e-05], ['Layout', 8.504847763225038e-05], ['package.', 8.504847763225038e-05], ['Named_type*', 8.504847763225038e-05], ['Package*', 8.504847763225038e-05], ['Named_object*,', 8.504847763225038e-05], ['composite', 8.504847763225038e-05], ['rtype', 8.504847763225038e-05], ['this->code_', 8.504847763225038e-05], ['ensure', 8.164653852696037e-05], ['b);', 8.164653852696037e-05], ['s;', 8.164653852696037e-05], ['digits,', 8.164653852696037e-05], ['(buf,', 8.164653852696037e-05], ['f', 8.164653852696037e-05], ['too', 8.164653852696037e-05], ['1.', 8.164653852696037e-05], ['what', 8.164653852696037e-05], ['stmt', 8.164653852696037e-05], ['obj->set', 8.164653852696037e-05], ['()));', 8.164653852696037e-05], ['Record', 8.164653852696037e-05], ['(this);', 8.164653852696037e-05], ['(NULL,', 8.164653852696037e-05], ['wide_int_ref', 8.164653852696037e-05], ['*val,', 8.164653852696037e-05], ['match', 8.164653852696037e-05], ['byte', 8.164653852696037e-05], ['still', 8.164653852696037e-05], ['op1len,', 8.164653852696037e-05], ['simple', 8.164653852696037e-05], ['how', 8.164653852696037e-05], ['(a,', 8.164653852696037e-05], ['Pekka', 8.164653852696037e-05], ['Jaaskelainen', 8.164653852696037e-05], ['<pekka.jaaskelainen@parmance.com>', 8.164653852696037e-05], ['Processor', 8.164653852696037e-05], ['Tech.', 8.164653852696037e-05], ['call_builtin', 8.164653852696037e-05], ['cast', 8.164653852696037e-05], ['second', 8.164653852696037e-05], ['(size_type_node,', 8.164653852696037e-05], ['identifier', 8.164653852696037e-05], ['(tmp1,', 8.164653852696037e-05], ['name);', 8.164653852696037e-05], ['decl,', 8.164653852696037e-05], ['(input_location,', 8.164653852696037e-05], ['semantic', 8.164653852696037e-05], ['orig,', 8.164653852696037e-05], ['build_frontend_type', 8.164653852696037e-05], ['ctype', 8.164653852696037e-05], ['field,', 8.164653852696037e-05], ['build_nop', 8.164653852696037e-05], ['(ClassDeclaration', 8.164653852696037e-05], ['d_array_convert', 8.164653852696037e-05], ['interchange.', 8.164653852696037e-05], ['(t->ctype)', 8.164653852696037e-05], ['type_tree', 8.164653852696037e-05], ['traverse', 8.164653852696037e-05], ['")";', 8.164653852696037e-05], ['Export', 8.164653852696037e-05], ['context->backend()->error_expression();', 8.164653852696037e-05], ['Numeric_constant*', 8.164653852696037e-05], ['Expression::make_error(this->location());', 8.164653852696037e-05], ['(this->end_', 8.164653852696037e-05], ['Milestone', 7.824459942167036e-05], ['implementation', 7.824459942167036e-05], ['3)', 7.824459942167036e-05], ['exp)', 7.824459942167036e-05], ['image', 7.824459942167036e-05], ['enough', 7.824459942167036e-05], ['(dump_enabled_p', 7.824459942167036e-05], ['another', 7.824459942167036e-05], ['json::array', 7.824459942167036e-05], ['common', 7.824459942167036e-05], ['context.', 7.824459942167036e-05], ['track', 7.824459942167036e-05], ['HOST_BITS_PER_WIDE_INT;', 7.824459942167036e-05], ['zero,', 7.824459942167036e-05], ['sign', 7.824459942167036e-05], ['TRUE', 7.824459942167036e-05], ['prec,', 7.824459942167036e-05], ['Otherwise', 7.824459942167036e-05], ['define', 7.824459942167036e-05], ['(HOST_WIDE_INT', 7.824459942167036e-05], ['used.', 7.824459942167036e-05], ['SIGNED);', 7.824459942167036e-05], ['Put', 7.824459942167036e-05], ['result.', 7.824459942167036e-05], ['rather', 7.824459942167036e-05], ['n);', 7.824459942167036e-05], ['outside', 7.824459942167036e-05], ['"brig-code-entry-handler.h"', 7.824459942167036e-05], ['element_type', 7.824459942167036e-05], ['TREE_VEC_ELT', 7.824459942167036e-05], ['call,', 7.824459942167036e-05], ['That', 7.824459942167036e-05], ['class.', 7.824459942167036e-05], ['Initialize', 7.824459942167036e-05], ['known', 7.824459942167036e-05], ['takes', 7.824459942167036e-05], ['module.', 7.824459942167036e-05], ['(ap,', 7.824459942167036e-05], ['yes', 7.824459942167036e-05], ['xyes;', 7.824459942167036e-05], ['(name),', 7.824459942167036e-05], ['XEXP', 7.824459942167036e-05], ['0)))', 7.824459942167036e-05], ['those', 7.824459942167036e-05], ['constraints.', 7.824459942167036e-05], ['T.', 7.824459942167036e-05], ['evaluate', 7.824459942167036e-05], ['fold_build2', 7.824459942167036e-05], ['*tb', 7.824459942167036e-05], ['interface.', 7.824459942167036e-05], ['d_truthvalue_conversion', 7.824459942167036e-05], ['do_copy()', 7.824459942167036e-05], ['go_error_at(this->location(),', 7.824459942167036e-05], ['Expression::make_error(loc);', 7.824459942167036e-05], ['efb->write_c_string("', 7.824459942167036e-05], ['U2', 7.484266031638034e-05], ['V', 7.484266031638034e-05], ['change', 7.484266031638034e-05], ['based', 7.484266031638034e-05], ['buf;', 7.484266031638034e-05], ['back', 7.484266031638034e-05], ['U1;', 7.484266031638034e-05], ['5', 7.484266031638034e-05], ['"");', 7.484266031638034e-05], [')', 7.484266031638034e-05], ['(strcmp', 7.484266031638034e-05], ["isn't", 7.484266031638034e-05], ['tmp', 7.484266031638034e-05], ['information.', 7.484266031638034e-05], ['Helper', 7.484266031638034e-05], ['memcpy', 7.484266031638034e-05], ['otherwise.', 7.484266031638034e-05], ['field;', 7.484266031638034e-05], ['(sgn', 7.484266031638034e-05], ['false', 7.484266031638034e-05], ['able', 7.484266031638034e-05], ['actual', 7.484266031638034e-05], ['BLOCKS_NEEDED', 7.484266031638034e-05], ['needed.', 7.484266031638034e-05], ['Only', 7.484266031638034e-05], ['edge', 7.484266031638034e-05], ['here,', 7.484266031638034e-05], ['k', 7.484266031638034e-05], ['m_parent.m_cf->append_statement', 7.484266031638034e-05], ['"stringpool.h"', 7.484266031638034e-05], ['operands[1],', 7.484266031638034e-05], ['built-in', 7.484266031638034e-05], ['possible', 7.484266031638034e-05], ['vec<tree,', 7.484266031638034e-05], ['comparison.', 7.484266031638034e-05], ['func', 7.484266031638034e-05], ['sequence', 7.484266031638034e-05], ['declarations', 7.484266031638034e-05], ['stack', 7.484266031638034e-05], ['index.', 7.484266031638034e-05], ['loops.', 7.484266031638034e-05], ['via', 7.484266031638034e-05], ['context,', 7.484266031638034e-05], ['search', 7.484266031638034e-05], ['us', 7.484266031638034e-05], ['i386/att.h', 7.484266031638034e-05], ['insns', 7.484266031638034e-05], ['Look', 7.484266031638034e-05], ['log_insn', 7.484266031638034e-05], ['()))', 7.484266031638034e-05], ['explicit', 7.484266031638034e-05], ['info', 7.484266031638034e-05], ['Substitute', 7.484266031638034e-05], ['substitution', 7.484266031638034e-05], ['ATTR_SPEC', 7.484266031638034e-05], ['back-end', 7.484266031638034e-05], ['def_fn_type', 7.484266031638034e-05], ['(ENUM,', 7.484266031638034e-05], ['create_field_decl', 7.484266031638034e-05], ['(elms,', 7.484266031638034e-05], ['null_pointer_node;', 7.484266031638034e-05], ['this->make_expression(ret);', 7.484266031638034e-05], ['dst,', 7.484266031638034e-05], ['MPC_RNDNN);', 7.484266031638034e-05], ['this->op_', 7.484266031638034e-05], ['arg_type', 7.484266031638034e-05], ['arguments"));', 7.484266031638034e-05], ['Type::make_function_type(NULL,', 7.484266031638034e-05], ['checks', 7.144072121109033e-05], ['structure', 7.144072121109033e-05], ['#else', 7.144072121109033e-05], ['Radix;', 7.144072121109033e-05], ['^', 7.144072121109033e-05], ['Try', 7.144072121109033e-05], ['min', 7.144072121109033e-05], ['max', 7.144072121109033e-05], ['values.', 7.144072121109033e-05], ['required', 7.144072121109033e-05], ['zero.', 7.144072121109033e-05], ['val[i]', 7.144072121109033e-05], ['TYPE_PRECISION', 7.144072121109033e-05], ['except', 7.144072121109033e-05], ['implement', 7.144072121109033e-05], ['itself', 7.144072121109033e-05], ['s)', 7.144072121109033e-05], ['(p', 7.144072121109033e-05], ['Now', 7.144072121109033e-05], ['built_in', 7.144072121109033e-05], ['operands[2]);', 7.144072121109033e-05], ['array,', 7.144072121109033e-05], ['arguments.', 7.144072121109033e-05], ['analysis', 7.144072121109033e-05], ['predicate', 7.144072121109033e-05], ['our', 7.144072121109033e-05], ['object,', 7.144072121109033e-05], ['tree);', 7.144072121109033e-05], ['header', 7.144072121109033e-05], ['[', 7.144072121109033e-05], ['string.', 7.144072121109033e-05], ['tracker', 7.144072121109033e-05], ['recover', 7.144072121109033e-05], ['plus_constant', 7.144072121109033e-05], ['(Pmode,', 7.144072121109033e-05], ['log_rtx', 7.144072121109033e-05], ['(m_ccreg,', 7.144072121109033e-05], ['placeholder', 7.144072121109033e-05], ['(args', 7.144072121109033e-05], ['(type),', 7.144072121109033e-05], ['d_array_value', 7.144072121109033e-05], ['ARG6,', 7.144072121109033e-05], ['Tstruct)', 7.144072121109033e-05], ['build_call_expr', 7.144072121109033e-05], ['modify_expr', 7.144072121109033e-05], ['libcall', 7.144072121109033e-05], ['strides', 7.144072121109033e-05], ['(thunk)', 7.144072121109033e-05], ['mpc_t', 7.144072121109033e-05], ['btype->get_tree();', 7.144072121109033e-05], ['Function*', 7.144072121109033e-05], ['(pp,', 7.144072121109033e-05], ['Type_context', 7.144072121109033e-05], ['do_determine_type(const', 7.144072121109033e-05], ['pf', 7.144072121109033e-05], ['S', 6.80387821058003e-05], ['added', 6.80387821058003e-05], ['%s\\n",', 6.80387821058003e-05], ['#ifdef', 6.80387821058003e-05], ['FLOAT>', 6.80387821058003e-05], ['(exp)', 6.80387821058003e-05], ['care', 6.80387821058003e-05], ["we're", 6.80387821058003e-05], ['First', 6.80387821058003e-05], ['appears', 6.80387821058003e-05], ['final', 6.80387821058003e-05], ['"\\n");', 6.80387821058003e-05], ['Emit', 6.80387821058003e-05], ['gimple', 6.80387821058003e-05], ['representation.', 6.80387821058003e-05], ['write', 6.80387821058003e-05], ['representing', 6.80387821058003e-05], ['chain', 6.80387821058003e-05], ['anonymous', 6.80387821058003e-05], ['OP', 6.80387821058003e-05], ["won't", 6.80387821058003e-05], ['VAL.', 6.80387821058003e-05], ['i)', 6.80387821058003e-05], ['xlen,', 6.80387821058003e-05], ['allow', 6.80387821058003e-05], ['setting', 6.80387821058003e-05], ['o0', 6.80387821058003e-05], ['*overflow', 6.80387821058003e-05], ['convert_to_integer', 6.80387821058003e-05], ['build_int_cstu', 6.80387821058003e-05], ['keep', 6.80387821058003e-05], ['var,', 6.80387821058003e-05], ['uint64_type_node,', 6.80387821058003e-05], ['space', 6.80387821058003e-05], ['(ptr_type_node,', 6.80387821058003e-05], ['symbol.', 6.80387821058003e-05], ['pointer.', 6.80387821058003e-05], ['expr)', 6.80387821058003e-05], ['user', 6.80387821058003e-05], ['refer', 6.80387821058003e-05], ['own', 6.80387821058003e-05], ['files', 6.80387821058003e-05], ['every', 6.80387821058003e-05], ['determine', 6.80387821058003e-05], ['arch', 6.80387821058003e-05], ['(bb);', 6.80387821058003e-05], ['REGNO', 6.80387821058003e-05], ['(function', 6.80387821058003e-05], ['gen_reg_rtx', 6.80387821058003e-05], ['actually', 6.80387821058003e-05], ['expression,', 6.80387821058003e-05], ['(expr)', 6.80387821058003e-05], ['parent', 6.80387821058003e-05], ['(decl))', 6.80387821058003e-05], ['(exp);', 6.80387821058003e-05], ['exp;', 6.80387821058003e-05], ['ARGS', 6.80387821058003e-05], ['*no_add_attrs', 6.80387821058003e-05], ['GTY(())', 6.80387821058003e-05], ['StructDeclaration', 6.80387821058003e-05], ['VersionCondition::addPredefinedGlobalIdent', 6.80387821058003e-05], ['DECL_LANG_SPECIFIC', 6.80387821058003e-05], ['(fd', 6.80387821058003e-05], ['component_ref', 6.80387821058003e-05], ['front-end', 6.80387821058003e-05], ['expr;', 6.80387821058003e-05], ['(name', 6.80387821058003e-05], ['AST', 6.80387821058003e-05], ['(tb1->ty', 6.80387821058003e-05], ['exported', 6.80387821058003e-05], ['Array_type*', 6.80387821058003e-05], ['this->register_builtin_type(gogo,', 6.80387821058003e-05], ['(c', 6.80387821058003e-05], ['(this->op_', 6.80387821058003e-05], ['left_val,', 6.80387821058003e-05], ['(0)', 6.46368430005103e-05], ['real_c_float', 6.46368430005103e-05], ['*p', 6.46368430005103e-05], ['sum', 6.46368430005103e-05], ['(Radix', 6.46368430005103e-05], ['gets', 6.46368430005103e-05], ['down', 6.46368430005103e-05], ['objects', 6.46368430005103e-05], ['ap;', 6.46368430005103e-05], ['(j', 6.46368430005103e-05], ['optimize', 6.46368430005103e-05], ['(location_t', 6.46368430005103e-05], ['corresponding', 6.46368430005103e-05], ['likely', 6.46368430005103e-05], ['HOST_BITS_PER_WIDE_INT', 6.46368430005103e-05], ['sign))', 6.46368430005103e-05], ['not.', 6.46368430005103e-05], ['resulting', 6.46368430005103e-05], ['previous', 6.46368430005103e-05], ['m', 6.46368430005103e-05], ['returning', 6.46368430005103e-05], ['canonize', 6.46368430005103e-05], ['BITS_PER_UNIT;', 6.46368430005103e-05], ['represented', 6.46368430005103e-05], ['OP0', 6.46368430005103e-05], ['shift)', 6.46368430005103e-05], ['((const', 6.46368430005103e-05], ['make_node', 6.46368430005103e-05], ['"diagnostic.h"', 6.46368430005103e-05], ['instructions', 6.46368430005103e-05], ['TREE_VALUE', 6.46368430005103e-05], ['BrigType16_t', 6.46368430005103e-05], ['scalar', 6.46368430005103e-05], ['arith_type,', 6.46368430005103e-05], ['(brig_opcode', 6.46368430005103e-05], ['BRIG', 6.46368430005103e-05], ['assume', 6.46368430005103e-05], ['returned', 6.46368430005103e-05], ['attributes', 6.46368430005103e-05], ['arg,', 6.46368430005103e-05], ['inside', 6.46368430005103e-05], ['variables.', 6.46368430005103e-05], ['go', 6.46368430005103e-05], ['TREE_CHAIN', 6.46368430005103e-05], ['(name);', 6.46368430005103e-05], ['(i),', 6.46368430005103e-05], ['itself.', 6.46368430005103e-05], ['src);', 6.46368430005103e-05], ['hash', 6.46368430005103e-05], ['valid', 6.46368430005103e-05], ['arguments,', 6.46368430005103e-05], ['default_use_cxa_atexit=yes', 6.46368430005103e-05], ['t-slibgcc"', 6.46368430005103e-05], ['(var_decl)', 6.46368430005103e-05], ['{"<limits.h>",', 6.46368430005103e-05], ['"<climits>"}', 6.46368430005103e-05], ['simply', 6.46368430005103e-05], ['initial', 6.46368430005103e-05], ['move', 6.46368430005103e-05], ['GEN_INT', 6.46368430005103e-05], ['(dump_file', 6.46368430005103e-05], ['->', 6.46368430005103e-05], ['pointers', 6.46368430005103e-05], ['(s);', 6.46368430005103e-05], ['/*---------------------------------------------------------------------------', 6.46368430005103e-05], ['---------------------------------------------------------------------------*/', 6.46368430005103e-05], ['requirement', 6.46368430005103e-05], ['iter', 6.46368430005103e-05], ['alias', 6.46368430005103e-05], ['member', 6.46368430005103e-05], ['exp,', 6.46368430005103e-05], ['(error_operand_p', 6.46368430005103e-05], ['t2);', 6.46368430005103e-05], ['proof_result', 6.46368430005103e-05], ['(ident,', 6.46368430005103e-05], ['*node,', 6.46368430005103e-05], ['ident,', 6.46368430005103e-05], ['Loc&', 6.46368430005103e-05], ['struct.', 6.46368430005103e-05], ['Tsarray)', 6.46368430005103e-05], ['longdouble', 6.46368430005103e-05], ['*m', 6.46368430005103e-05], ['d_pushdecl', 6.46368430005103e-05], ['v', 6.46368430005103e-05], ['rest_of_decl_compilation', 6.46368430005103e-05], ['(function);', 6.46368430005103e-05], ['function);', 6.46368430005103e-05], ['key', 6.46368430005103e-05], ['intrinsic', 6.46368430005103e-05], ['(mod,', 6.46368430005103e-05], ['statements.', 6.46368430005103e-05], ['make_frontend_typeinfo', 6.46368430005103e-05], ['std::string&,', 6.46368430005103e-05], ['OPERATOR_MINUS:', 6.46368430005103e-05], ['OPERATOR_XOR:', 6.46368430005103e-05], ['sink', 6.46368430005103e-05], ['gogo)', 6.46368430005103e-05], ['Bindings*', 6.46368430005103e-05], ['nil,', 6.46368430005103e-05], ['Type::lookup_integer_type("int");', 6.46368430005103e-05], ['location),', 6.46368430005103e-05], ['loc));', 6.46368430005103e-05], ['(imp->match_c_string("', 6.46368430005103e-05], ['"))', 6.46368430005103e-05], ['N', 6.123490389522027e-05], ['internal', 6.123490389522027e-05], ['(long', 6.123490389522027e-05], ['*this;', 6.123490389522027e-05], ['REAL_VALUE_TYPE', 6.123490389522027e-05], ['MODE);', 6.123490389522027e-05], ['(T', 6.123490389522027e-05], ['constants.', 6.123490389522027e-05], ['10;', 6.123490389522027e-05], ['old', 6.123490389522027e-05], ['U1)', 6.123490389522027e-05], ['against', 6.123490389522027e-05], ['line', 6.123490389522027e-05], ['case.', 6.123490389522027e-05], ['"tree-pretty-print.h"', 6.123490389522027e-05], ['ctor', 6.123490389522027e-05], ['NULL.', 6.123490389522027e-05], ['around', 6.123490389522027e-05], ['Otherwise,', 6.123490389522027e-05], ['HOST_HALF_WIDE_INT', 6.123490389522027e-05], ['target.', 6.123490389522027e-05], ['index;', 6.123490389522027e-05], ['*t', 6.123490389522027e-05], ['section', 6.123490389522027e-05], ['comparisons', 6.123490389522027e-05], ['equality', 6.123490389522027e-05], ['stored', 6.123490389522027e-05], ['implicit', 6.123490389522027e-05], ['run', 6.123490389522027e-05], ['wi::shwi', 6.123490389522027e-05], ['cst', 6.123490389522027e-05], ['argument.', 6.123490389522027e-05], ['initialized', 6.123490389522027e-05], ['int)', 6.123490389522027e-05], ['size.', 6.123490389522027e-05], ['unsignedp', 6.123490389522027e-05], ['until', 6.123490389522027e-05], ['Skip', 6.123490389522027e-05], ['()),', 6.123490389522027e-05], ['pack', 6.123490389522027e-05], ['data.', 6.123490389522027e-05], ['put', 6.123490389522027e-05], ['va_end', 6.123490389522027e-05], ['layout', 6.123490389522027e-05], ['(decl));', 6.123490389522027e-05], ['List', 6.123490389522027e-05], ['c_target_objs="${c_target_objs}', 6.123490389522027e-05], ['cxx_target_objs="${cxx_target_objs}', 6.123490389522027e-05], ['$target', 6.123490389522027e-05], ['eval', 6.123490389522027e-05], ['Keep', 6.123490389522027e-05], ['pass.', 6.123490389522027e-05], ["we've", 6.123490389522027e-05], ['(rtx', 6.123490389522027e-05], ['(gen_branch_false', 6.123490389522027e-05], ['167)', 6.123490389522027e-05], ['MUL_TYPE', 6.123490389522027e-05], ['strlen', 6.123490389522027e-05], ['conjunction', 6.123490389522027e-05], ['Expand', 6.123490389522027e-05], ['tsubst_expr', 6.123490389522027e-05], ['component', 6.123490389522027e-05], ['DECL_NAME', 6.123490389522027e-05], ['off', 6.123490389522027e-05], ['(expr))', 6.123490389522027e-05], ['"d-tree.h"', 6.123490389522027e-05], ['(flags),', 6.123490389522027e-05], ['(Loc', 6.123490389522027e-05], ['ret,', 6.123490389522027e-05], ['*decl)', 6.123490389522027e-05], ["'this'", 6.123490389522027e-05], ['delegate', 6.123490389522027e-05], ['field.', 6.123490389522027e-05], ['(TREE_SIDE_EFFECTS', 6.123490389522027e-05], ['VarDeclaration', 6.123490389522027e-05], ['indirect_ref', 6.123490389522027e-05], ['arg0,', 6.123490389522027e-05], ['fold_convert', 6.123490389522027e-05], ['index);', 6.123490389522027e-05], ['fd', 6.123490389522027e-05], ['(loop);', 6.123490389522027e-05], ['(e->e2);', 6.123490389522027e-05], ['this->build_stmt', 6.123490389522027e-05], ['(type_tree', 6.123490389522027e-05], ['++pv)', 6.123490389522027e-05], ['Struct_field_list*', 6.123490389522027e-05], ['Call_expression*', 6.123490389522027e-05], ['bvar', 6.123490389522027e-05], ['Traversal.', 6.123490389522027e-05], ['type");', 6.123490389522027e-05], ['pe', 6.123490389522027e-05], ['args->size()', 6.123490389522027e-05], ['(this->classification_)', 6.123490389522027e-05], ['below', 5.7832964789930263e-05], ['V9', 5.7832964789930263e-05], ['So', 5.7832964789930263e-05], ['TYPE,', 5.7832964789930263e-05], ['produce', 5.7832964789930263e-05], ['native_float', 5.7832964789930263e-05], ['a,', 5.7832964789930263e-05], ['r)', 5.7832964789930263e-05], ['sprintf', 5.7832964789930263e-05], ['#if', 5.7832964789930263e-05], ['2);', 5.7832964789930263e-05], ['(Half', 5.7832964789930263e-05], ['equal', 5.7832964789930263e-05], ['optimization', 5.7832964789930263e-05], ['possible.', 5.7832964789930263e-05], ['res', 5.7832964789930263e-05], ['(0),', 5.7832964789930263e-05], ['top-level', 5.7832964789930263e-05], ['appropriate', 5.7832964789930263e-05], ['minimum', 5.7832964789930263e-05], ['immediately', 5.7832964789930263e-05], ['currently', 5.7832964789930263e-05], ['(x)', 5.7832964789930263e-05], ['really', 5.7832964789930263e-05], ['"print-tree.h"', 5.7832964789930263e-05], ['"brig-util.h"', 5.7832964789930263e-05], ['nodes', 5.7832964789930263e-05], ['build_vector_type', 5.7832964789930263e-05], ['-1);', 5.7832964789930263e-05], ['uint64_t', 5.7832964789930263e-05], ['Builds', 5.7832964789930263e-05], ['most', 5.7832964789930263e-05], ['BrigDirectiveVariable', 5.7832964789930263e-05], ['variable,', 5.7832964789930263e-05], ['TYPE_UNSIGNED', 5.7832964789930263e-05], ['fndecl;', 5.7832964789930263e-05], ['To', 5.7832964789930263e-05], ['&stmt_list);', 5.7832964789930263e-05], ['equivalent', 5.7832964789930263e-05], ['(ap);', 5.7832964789930263e-05], ['exception', 5.7832964789930263e-05], ['insert', 5.7832964789930263e-05], ['necessary.', 5.7832964789930263e-05], ['gen_rtx_REG', 5.7832964789930263e-05], ['method.', 5.7832964789930263e-05], ['rtx_code_label', 5.7832964789930263e-05], ['gen_label_rtx', 5.7832964789930263e-05], ['prob_likely);', 5.7832964789930263e-05], ['emit_label', 5.7832964789930263e-05], ['(tmp2,', 5.7832964789930263e-05], ['cbranch', 5.7832964789930263e-05], ['NULL_RTX)', 5.7832964789930263e-05], ['BB', 5.7832964789930263e-05], ['normal', 5.7832964789930263e-05], ['going', 5.7832964789930263e-05], ['applied', 5.7832964789930263e-05], ['(op', 5.7832964789930263e-05], ['format,', 5.7832964789930263e-05], ['parameter.', 5.7832964789930263e-05], ['fn)', 5.7832964789930263e-05], ['init;', 5.7832964789930263e-05], ['DECL', 5.7832964789930263e-05], ['ret);', 5.7832964789930263e-05], ['bool,', 5.7832964789930263e-05], ['evaluated', 5.7832964789930263e-05], ['DECL.', 5.7832964789930263e-05], ['proof', 5.7832964789930263e-05], ['iterator', 5.7832964789930263e-05], ['hand', 5.7832964789930263e-05], ['dig', 5.7832964789930263e-05], ['members->push', 5.7832964789930263e-05], ['(fd);', 5.7832964789930263e-05], ['level.', 5.7832964789930263e-05], ['(exp))', 5.7832964789930263e-05], ['callee', 5.7832964789930263e-05], ['(t1),', 5.7832964789930263e-05], ['op,', 5.7832964789930263e-05], ['(get_symbol_decl', 5.7832964789930263e-05], ['(libcall,', 5.7832964789930263e-05], ['*sd', 5.7832964789930263e-05], ['d_keep', 5.7832964789930263e-05], ['(tbtype->ty', 5.7832964789930263e-05], ['()->ty', 5.7832964789930263e-05], ['binding', 5.7832964789930263e-05], ['IV', 5.7832964789930263e-05], ['(stmt))', 5.7832964789930263e-05], ['*ti', 5.7832964789930263e-05], ['(init', 5.7832964789930263e-05], ['(intrinsic', 5.7832964789930263e-05], ['**__vptr;', 5.7832964789930263e-05], ['*__monitor;', 5.7832964789930263e-05], ['this->layout_base', 5.7832964789930263e-05], ['t->vtinfo', 5.7832964789930263e-05], ['asm_name,', 5.7832964789930263e-05], ['math_function_type,', 5.7832964789930263e-05], ['math_function_type_long,', 5.7832964789930263e-05], ['OPERATOR_PLUS:', 5.7832964789930263e-05], ['OPERATOR_MULT:', 5.7832964789930263e-05], ['OPERATOR_AND:', 5.7832964789930263e-05], ['this->error_statement();', 5.7832964789930263e-05], ['Interface_type*', 5.7832964789930263e-05], ['nt', 5.7832964789930263e-05], ['p->second;', 5.7832964789930263e-05], ['efb)', 5.7832964789930263e-05], ['do_dump_expression(Ast_dump_context*)', 5.7832964789930263e-05], ['this->val_);', 5.7832964789930263e-05], ['this->expr_->type();', 5.7832964789930263e-05], ['written', 5.443102568464025e-05], ['Four', 5.443102568464025e-05], ['F9', 5.443102568464025e-05], ['Force', 5.443102568464025e-05], ['memory.', 5.443102568464025e-05], ['EXP', 5.443102568464025e-05], ['division', 5.443102568464025e-05], ['compute', 5.443102568464025e-05], ['pp', 5.443102568464025e-05], ['j++)', 5.443102568464025e-05], ['size;', 5.443102568464025e-05], ['indirect', 5.443102568464025e-05], ['(wide_int', 5.443102568464025e-05], ['maximum', 5.443102568464025e-05], ['precision,', 5.443102568464025e-05], ['hold', 5.443102568464025e-05], ['this.', 5.443102568464025e-05], ['-1,', 5.443102568464025e-05], ['Import', 5.443102568464025e-05], ['case,', 5.443102568464025e-05], ['operators', 5.443102568464025e-05], ['(l0', 5.443102568464025e-05], ['(op1,', 5.443102568464025e-05], ['offset)', 5.443102568464025e-05], ['b)', 5.443102568464025e-05], ['example,', 5.443102568464025e-05], ['(wi::shwi', 5.443102568464025e-05], ['prec),', 5.443102568464025e-05], ['prec)));', 5.443102568464025e-05], ['"errors.h"', 5.443102568464025e-05], ['stmt_list', 5.443102568464025e-05], ['operands[0],', 5.443102568464025e-05], ['"stor-layout.h"', 5.443102568464025e-05], ['element_count);', 5.443102568464025e-05], ['(PLUS_EXPR,', 5.443102568464025e-05], ['t));', 5.443102568464025e-05], ['HSA', 5.443102568464025e-05], ['(NULL_TREE,', 5.443102568464025e-05], ['result_type,', 5.443102568464025e-05], ['unless', 5.443102568464025e-05], ['1),', 5.443102568464025e-05], ['(get_identifier', 5.443102568464025e-05], ['TREE_STATIC', 5.443102568464025e-05], ['arg;', 5.443102568464025e-05], ['Also', 5.443102568464025e-05], ['src', 5.443102568464025e-05], ['va_start', 5.443102568464025e-05], ['generic', 5.443102568464025e-05], ['linked', 5.443102568464025e-05], ['attribute.', 5.443102568464025e-05], ['tree.', 5.443102568464025e-05], ['{"<string.h>",', 5.443102568464025e-05], ['"<cstring>"}', 5.443102568464025e-05], ['NULL_RTX', 5.443102568464025e-05], ['Start', 5.443102568464025e-05], ['cost', 5.443102568464025e-05], ['build_tree_list', 5.443102568464025e-05], ['(result);', 5.443102568464025e-05], ['NULL),', 5.443102568464025e-05], ['fntype,', 5.443102568464025e-05], ['(fntype', 5.443102568464025e-05], ['TYPE_LANG_SPECIFIC', 5.443102568464025e-05], ['stabilize_expr', 5.443102568464025e-05], ['(result)', 5.443102568464025e-05], ['Maybe', 5.443102568464025e-05], ['(init,', 5.443102568464025e-05], ['Mark', 5.443102568464025e-05], ['libcall_fn', 5.443102568464025e-05], ['functions,', 5.443102568464025e-05], ['defined.', 5.443102568464025e-05], ['closure.', 5.443102568464025e-05], ['(totype),', 5.443102568464025e-05], ['*format,', 5.443102568464025e-05], ['(NULL);', 5.443102568464025e-05], ['packages.', 5.443102568464025e-05], ['nest.', 5.443102568464025e-05], ['"%s', 5.443102568464025e-05], ['(e->e2),', 5.443102568464025e-05], ['signature', 5.443102568464025e-05], ['loop_info', 5.443102568464025e-05], ['right,', 5.443102568464025e-05], ['Btype*,', 5.443102568464025e-05], ['bexpr,', 5.443102568464025e-05], ['ss', 5.443102568464025e-05], ['Map_type*', 5.443102568464025e-05], ['Type_context*', 5.443102568464025e-05], ['st', 5.443102568464025e-05], ['subcontext.type', 5.443102568464025e-05], ['(this->code_', 5.443102568464025e-05], ['Typed_identifier_list();', 5.443102568464025e-05], ['(this->vals()', 5.443102568464025e-05], ['following', 5.102908657935023e-05], ['U1', 5.102908657935023e-05], ['W', 5.102908657935023e-05], ['l,', 5.102908657935023e-05], ['4);', 5.102908657935023e-05], ['Half;', 5.102908657935023e-05], ['0");', 5.102908657935023e-05], ['big', 5.102908657935023e-05], ['Z;', 5.102908657935023e-05], ['((X', 5.102908657935023e-05], ['emitted', 5.102908657935023e-05], ['Update', 5.102908657935023e-05], ['ASSERT_TRUE', 5.102908657935023e-05], ['(stmt);', 5.102908657935023e-05], ['ASSERT_FALSE', 5.102908657935023e-05], ['8)', 5.102908657935023e-05], ['files.', 5.102908657935023e-05], ['compare', 5.102908657935023e-05], ['"cannot', 5.102908657935023e-05], ['integer_zero_node);', 5.102908657935023e-05], ['less', 5.102908657935023e-05], ['size,', 5.102908657935023e-05], ['foo', 5.102908657935023e-05], ['width', 5.102908657935023e-05], ['However,', 5.102908657935023e-05], ['skip', 5.102908657935023e-05], ['blocks_needed', 5.102908657935023e-05], ['(x,', 5.102908657935023e-05], ['bits.', 5.102908657935023e-05], ['precision);', 5.102908657935023e-05], ['explicitly', 5.102908657935023e-05], ['(HOST_BITS_PER_WIDE_INT', 5.102908657935023e-05], ['upper', 5.102908657935023e-05], ['-top_bit_of', 5.102908657935023e-05], ['(base->kind', 5.102908657935023e-05], ['bind_expr', 5.102908657935023e-05], ['brig_code_entry_handler', 5.102908657935023e-05], ['64:', 5.102908657935023e-05], ['(MULT_EXPR,', 5.102908657935023e-05], ['direct', 5.102908657935023e-05], ['build_zero_cst', 5.102908657935023e-05], ['conversions', 5.102908657935023e-05], ['BrigData', 5.102908657935023e-05], ['uint32_t', 5.102908657935023e-05], ['cmp', 5.102908657935023e-05], ['boolean', 5.102908657935023e-05], ['"target.h"', 5.102908657935023e-05], ['element_size', 5.102908657935023e-05], ['input);', 5.102908657935023e-05], ['(build_pointer_type', 5.102908657935023e-05], ['(args,', 5.102908657935023e-05], ['update', 5.102908657935023e-05], ['(*i).second;', 5.102908657935023e-05], ['null', 5.102908657935023e-05], ['args[i]', 5.102908657935023e-05], ['args;', 5.102908657935023e-05], ['Finish', 5.102908657935023e-05], ['order.', 5.102908657935023e-05], ['"")', 5.102908657935023e-05], ['On', 5.102908657935023e-05], ['xyes', 5.102908657935023e-05], ['looking', 5.102908657935023e-05], ['adjust_automodify_address', 5.102908657935023e-05], ['(SImode,', 5.102908657935023e-05], ['QImode,', 5.102908657935023e-05], ['setcc', 5.102908657935023e-05], ['v;', 5.102908657935023e-05], ['("can\'t', 5.102908657935023e-05], ['table.', 5.102908657935023e-05], ['rules', 5.102908657935023e-05], ['args))', 5.102908657935023e-05], ['normalize_expression', 5.102908657935023e-05], ['fn);', 5.102908657935023e-05], ['satisfied', 5.102908657935023e-05], ['Search', 5.102908657935023e-05], ['(term_list&', 5.102908657935023e-05], ['ATTR_EXCL', 5.102908657935023e-05], ['(args),', 5.102908657935023e-05], ['dtype', 5.102908657935023e-05], ['*type)', 5.102908657935023e-05], ['(Module', 5.102908657935023e-05], ['TypeFunction', 5.102908657935023e-05], ['(build_alias_declaration', 5.102908657935023e-05], ['ARG7,', 5.102908657935023e-05], ['classes', 5.102908657935023e-05], ['Tarray)', 5.102908657935023e-05], ['associative', 5.102908657935023e-05], ['lowering', 5.102908657935023e-05], ['(TYPE_PRECISION', 5.102908657935023e-05], ['build_local_temp', 5.102908657935023e-05], ['pop_stmt_list', 5.102908657935023e-05], ['fields.', 5.102908657935023e-05], ['(basetype)', 5.102908657935023e-05], ['heap.', 5.102908657935023e-05], ['converting', 5.102908657935023e-05], ['Tsarray', 5.102908657935023e-05], ['(m);', 5.102908657935023e-05], ['interfaces', 5.102908657935023e-05], ['(op)', 5.102908657935023e-05], ['(loop,', 5.102908657935023e-05], ["loop's", 5.102908657935023e-05], ['debugging', 5.102908657935023e-05], ['e->e1->type->toBasetype', 5.102908657935023e-05], ['code;', 5.102908657935023e-05], ['address_term_info', 5.102908657935023e-05], ['type_;', 5.102908657935023e-05], ['zero-sized', 5.102908657935023e-05], ['std::vector<unsigned', 5.102908657935023e-05], ['*pp', 5.102908657935023e-05], ['build_decl(location.gcc_location(),', 5.102908657935023e-05], ['predeclared', 5.102908657935023e-05], ['bool>', 5.102908657935023e-05], ['flows', 5.102908657935023e-05], ['(std::vector<Named_object*>::const_iterator', 5.102908657935023e-05], ['this->assign(this->context_->sink(),', 5.102908657935023e-05], ['Type::COMPARE_TAGS,', 5.102908657935023e-05], ['assert_print_eq', 5.102908657935023e-05], ['ast_dump_context->dump_type(this->type_);', 5.102908657935023e-05], ['gogo->lower_expression(function,', 5.102908657935023e-05], ['end,', 5.102908657935023e-05], ['this->vals()->begin();', 5.102908657935023e-05], ['NC_INT:', 5.102908657935023e-05], ['NC_RUNE:', 5.102908657935023e-05], ['NC_FLOAT:', 5.102908657935023e-05], ['NC_COMPLEX:', 5.102908657935023e-05], ['useful', 4.7627147474060216e-05], ['Three', 4.7627147474060216e-05], ['Y1', 4.7627147474060216e-05], ['b.image,', 4.7627147474060216e-05], ['(*p', 4.7627147474060216e-05], ['(code)', 4.7627147474060216e-05], ['b,', 4.7627147474060216e-05], ['(r', 4.7627147474060216e-05], ['(Serious,', 4.7627147474060216e-05], ['Z)', 4.7627147474060216e-05], ['negative', 4.7627147474060216e-05], ['Should', 4.7627147474060216e-05], ['though', 4.7627147474060216e-05], ['standard', 4.7627147474060216e-05], ['Run', 4.7627147474060216e-05], ['push', 4.7627147474060216e-05], ['inlining', 4.7627147474060216e-05], ['FUNCTION_DECL)', 4.7627147474060216e-05], ['creating', 4.7627147474060216e-05], ['storage', 4.7627147474060216e-05], ['(n', 4.7627147474060216e-05], ['print', 4.7627147474060216e-05], ['accept', 4.7627147474060216e-05], ['"function.h"', 4.7627147474060216e-05], ['(wi::eq_p', 4.7627147474060216e-05], ['perform', 4.7627147474060216e-05], ['operation.', 4.7627147474060216e-05], ['UNSIGNED)', 4.7627147474060216e-05], ['range.', 4.7627147474060216e-05], ['cases.', 4.7627147474060216e-05], ['eliminate', 4.7627147474060216e-05], ["there's", 4.7627147474060216e-05], ['Used', 4.7627147474060216e-05], ['(len', 4.7627147474060216e-05], ['At', 4.7627147474060216e-05], ['XVAL', 4.7627147474060216e-05], ['len);', 4.7627147474060216e-05], ['x,', 4.7627147474060216e-05], ['prec)', 4.7627147474060216e-05], ['l0', 4.7627147474060216e-05], ['starting', 4.7627147474060216e-05], ['true.', 4.7627147474060216e-05], ['negate', 4.7627147474060216e-05], ['having', 4.7627147474060216e-05], ['first.', 4.7627147474060216e-05], ['per', 4.7627147474060216e-05], ['file,', 4.7627147474060216e-05], ['(element_type,', 4.7627147474060216e-05], ['(INTEGRAL_TYPE_P', 4.7627147474060216e-05], ['nodes.', 4.7627147474060216e-05], ['(VECTOR_TYPE_P', 4.7627147474060216e-05], ['brig_opcode', 4.7627147474060216e-05], ['(brig_inst->opcode', 4.7627147474060216e-05], ['(assign);', 4.7627147474060216e-05], ['separate', 4.7627147474060216e-05], ['address.', 4.7627147474060216e-05], ['TREE_VEC_LENGTH', 4.7627147474060216e-05], ['"toplev.h"', 4.7627147474060216e-05], ['DECL_ARGUMENTS', 4.7627147474060216e-05], ['*(const', 4.7627147474060216e-05], ['operand_type', 4.7627147474060216e-05], ['conversion_result', 4.7627147474060216e-05], ['Model', 4.7627147474060216e-05], ['fixed', 4.7627147474060216e-05], ['tree_cons', 4.7627147474060216e-05], ['(fndecl);', 4.7627147474060216e-05], ['(arg);', 4.7627147474060216e-05], ['VAR_DECL,', 4.7627147474060216e-05], ['anything', 4.7627147474060216e-05], ['dim', 4.7627147474060216e-05], ['id', 4.7627147474060216e-05], ['depends', 4.7627147474060216e-05], ['&reg_use_analyzer},', 4.7627147474060216e-05], ['length,', 4.7627147474060216e-05], ['Since', 4.7627147474060216e-05], ['freebsd-spec.h', 4.7627147474060216e-05], ['tmake_file="$tmake_file', 4.7627147474060216e-05], ['rtems.h', 4.7627147474060216e-05], ['Define', 4.7627147474060216e-05], ['valid.', 4.7627147474060216e-05], ['flow', 4.7627147474060216e-05], ['pointer,', 4.7627147474060216e-05], ['copied', 4.7627147474060216e-05], ['unknown', 4.7627147474060216e-05], ['Remove', 4.7627147474060216e-05], ['something', 4.7627147474060216e-05], ['(const_rtx', 4.7627147474060216e-05], ['log_return_void', 4.7627147474060216e-05], ['e,', 4.7627147474060216e-05], ['diagnostic', 4.7627147474060216e-05], ['(t));', 4.7627147474060216e-05], ['++processing_template_decl;', 4.7627147474060216e-05], ['--processing_template_decl;', 4.7627147474060216e-05], ['evaluates', 4.7627147474060216e-05], ['in_decl,', 4.7627147474060216e-05], ['tsubst', 4.7627147474060216e-05], ['boolean_true_node;', 4.7627147474060216e-05], ['(cur,', 4.7627147474060216e-05], ['(ts,', 4.7627147474060216e-05], ['*name', 4.7627147474060216e-05], ['(mod);', 4.7627147474060216e-05], ['(TypeFunction', 4.7627147474060216e-05], ['initialize', 4.7627147474060216e-05], ['make_location_t', 4.7627147474060216e-05], ['(exp));', 4.7627147474060216e-05], ['method,', 4.7627147474060216e-05], ['lowered', 4.7627147474060216e-05], ['*elms', 4.7627147474060216e-05], ['argument,', 4.7627147474060216e-05], ['symbols', 4.7627147474060216e-05], ['ap,', 4.7627147474060216e-05], ['format);', 4.7627147474060216e-05], ['(*expr_p,', 4.7627147474060216e-05], ['Declare', 4.7627147474060216e-05], ['PHI', 4.7627147474060216e-05], ['gimple_bb', 4.7627147474060216e-05], ['Whether', 4.7627147474060216e-05], ['unnamed', 4.7627147474060216e-05], ['(e->e1),', 4.7627147474060216e-05], ['packages', 4.7627147474060216e-05], ['held', 4.7627147474060216e-05], ['CALLEXP.', 4.7627147474060216e-05], ['callexp)', 4.7627147474060216e-05], ['ModuleInfo', 4.7627147474060216e-05], ['(minit,', 4.7627147474060216e-05], ['SSA', 4.7627147474060216e-05], ['strip_casts', 4.7627147474060216e-05], ['get_loop_info', 4.7627147474060216e-05], ['label;', 4.7627147474060216e-05], ['defer', 4.7627147474060216e-05], ['rhs,', 4.7627147474060216e-05], ['NULL_TREE),', 4.7627147474060216e-05], ['ins', 4.7627147474060216e-05], ['(nt', 4.7627147474060216e-05], ['Expression_list::const_iterator', 4.7627147474060216e-05], ['Expression::make_unary(OPERATOR_AND,', 4.7627147474060216e-05], ['dst', 4.7627147474060216e-05], ['this->assign(dst,', 4.7627147474060216e-05], ['traversal', 4.7627147474060216e-05], ['nc)', 4.7627147474060216e-05], ['do_get_backend(Translate_context*', 4.7627147474060216e-05], ['Translate_context', 4.7627147474060216e-05], ['resolved_type', 4.7627147474060216e-05], ['loc)->get_backend(context);', 4.7627147474060216e-05], ['parse', 4.7627147474060216e-05], ['gogo->backend()->conditional_expression(bfn,', 4.7627147474060216e-05], ['right_nc,', 4.7627147474060216e-05], ['this->report_error(_("too', 4.7627147474060216e-05], ['(*pv', 4.7627147474060216e-05], ['includes', 4.42252083687702e-05], ['E0', 4.42252083687702e-05], ['R', 4.42252083687702e-05], ['doing', 4.42252083687702e-05], ['f;', 4.42252083687702e-05], ['real_arithmetic', 4.42252083687702e-05], ['s);', 4.42252083687702e-05], ['(stderr,', 4.42252083687702e-05], ['expects', 4.42252083687702e-05], ['FABS', 4.42252083687702e-05], ['(x', 4.42252083687702e-05], ['Zero;', 4.42252083687702e-05], ['One)', 4.42252083687702e-05], ['(Defect,', 4.42252083687702e-05], ['larger', 4.42252083687702e-05], ['"backend.h"', 4.42252083687702e-05], ["shouldn't", 4.42252083687702e-05], ['CHECKING_P', 4.42252083687702e-05], ['(stmt,', 4.42252083687702e-05], ['"langhooks.h"', 4.42252083687702e-05], ['%qs:', 4.42252083687702e-05], ['referring', 4.42252083687702e-05], ['implements', 4.42252083687702e-05], ['result,', 4.42252083687702e-05], ['elements.', 4.42252083687702e-05], ['CMP', 4.42252083687702e-05], ['implicitly', 4.42252083687702e-05], ['buf);', 4.42252083687702e-05], ['1))', 4.42252083687702e-05], ['mask;', 4.42252083687702e-05], ['ranges', 4.42252083687702e-05], ['std::swap', 4.42252083687702e-05], ['undefined', 4.42252083687702e-05], ['(tree_code', 4.42252083687702e-05], ['(wmin,', 4.42252083687702e-05], ['"tm.h"', 4.42252083687702e-05], ['(precision);', 4.42252083687702e-05], ['need_canon', 4.42252083687702e-05], ['represent', 4.42252083687702e-05], ['selt', 4.42252083687702e-05], ['blocks_needed,', 4.42252083687702e-05], ['small_prec,', 4.42252083687702e-05], ['MAX', 4.42252083687702e-05], ['(op0,', 4.42252083687702e-05], ['inverted', 4.42252083687702e-05], ['set.', 4.42252083687702e-05], ['implemented', 4.42252083687702e-05], ['++j)', 4.42252083687702e-05], ['build_operands', 4.42252083687702e-05], ['build_output_assignment', 4.42252083687702e-05], ['now.', 4.42252083687702e-05], ['element_count;', 4.42252083687702e-05], ['operands[1]);', 4.42252083687702e-05], ['moved', 4.42252083687702e-05], ['destination', 4.42252083687702e-05], ['to.', 4.42252083687702e-05], ['(NE_EXPR,', 4.42252083687702e-05], ['Because', 4.42252083687702e-05], ['labels', 4.42252083687702e-05], ['reference,', 4.42252083687702e-05], ['(POINTER_TYPE_P', 4.42252083687702e-05], ['generating', 4.42252083687702e-05], ['Ensure', 4.42252083687702e-05], ['TYPE_SIZE', 4.42252083687702e-05], ['compile', 4.42252083687702e-05], ['(builtin_decl_explicit', 4.42252083687702e-05], ['(true)', 4.42252083687702e-05], ['void*', 4.42252083687702e-05], ['DECL_ATTRIBUTES', 4.42252083687702e-05], ['work-item', 4.42252083687702e-05], ['declare', 4.42252083687702e-05], ['definitions', 4.42252083687702e-05], ['prefix', 4.42252083687702e-05], ['(unsigned)', 4.42252083687702e-05], ['std::endl;', 4.42252083687702e-05], ['previously', 4.42252083687702e-05], ['mathfn_built_in', 4.42252083687702e-05], ['size_type_node,', 4.42252083687702e-05], ['Here', 4.42252083687702e-05], ['std::map<std::string,', 4.42252083687702e-05], ['declarations.', 4.42252083687702e-05], ['decl)', 4.42252083687702e-05], ['extra_objs="${extra_objs}', 4.42252083687702e-05], ["thread_file='posix'", 4.42252083687702e-05], ['floating-point', 4.42252083687702e-05], ['numeric', 4.42252083687702e-05], ['instance', 4.42252083687702e-05], ['{"<stdio.h>",', 4.42252083687702e-05], ['"<cstdio>"}', 4.42252083687702e-05], ['tracking', 4.42252083687702e-05], ['speculation', 4.42252083687702e-05], ['ignore', 4.42252083687702e-05], ['(insn))', 4.42252083687702e-05], ['(SImode);', 4.42252083687702e-05], ['addr1', 4.42252083687702e-05], ['(addr1,', 4.42252083687702e-05], ['s1_addr,', 4.42252083687702e-05], ['(gen_cmpeqsi_t', 4.42252083687702e-05], ['insn\\n");', 4.42252083687702e-05], ['*e', 4.42252083687702e-05], ['expansion', 4.42252083687702e-05], ['(t),', 4.42252083687702e-05], ['(arg,', 4.42252083687702e-05], ['location.', 4.42252083687702e-05], ['errors.', 4.42252083687702e-05], ['VAR', 4.42252083687702e-05], ['"dmd/declaration.h"', 4.42252083687702e-05], ['"dmd/aggregate.h"', 4.42252083687702e-05], ['Identifier', 4.42252083687702e-05], ['(size_int', 4.42252083687702e-05], ['trees.', 4.42252083687702e-05], ['build_deref', 4.42252083687702e-05], ['(INIT_EXPR,', 4.42252083687702e-05], ['push_stmt_list', 4.42252083687702e-05], ['make_array_type', 4.42252083687702e-05], ['(ve,', 4.42252083687702e-05], ['LHS', 4.42252083687702e-05], ['(FuncDeclaration', 4.42252083687702e-05], ['*cd', 4.42252083687702e-05], ['cond,', 4.42252083687702e-05], ['convert_for_condition', 4.42252083687702e-05], ['ptr);', 4.42252083687702e-05], ['ap);', 4.42252083687702e-05], ['&r.rv', 4.42252083687702e-05], ['(mode', 4.42252083687702e-05], ['garbage', 4.42252083687702e-05], ['Analyze', 4.42252083687702e-05], ['conditions', 4.42252083687702e-05], ['phobos_library', 4.42252083687702e-05], ['(phobos_library', 4.42252083687702e-05], ['generate_option', 4.42252083687702e-05], ['CL_DRIVER,', 4.42252083687702e-05], ['<typename', 4.42252083687702e-05], ['visitor', 4.42252083687702e-05], ['decl->csym;', 4.42252083687702e-05], ['(e->e1));', 4.42252083687702e-05], ['new_call', 4.42252083687702e-05], ['dimension', 4.42252083687702e-05], ['(callexp);', 4.42252083687702e-05], ['layout_moduleinfo_field', 4.42252083687702e-05], ['address_info', 4.42252083687702e-05], ['(address_info', 4.42252083687702e-05], ['dump_printf', 4.42252083687702e-05], ['Bblock*', 4.42252083687702e-05], ['this->ast_dump_context_->ostream()', 4.42252083687702e-05], ['this->ostream()', 4.42252083687702e-05], ['Func_expression*', 4.42252083687702e-05], ['details', 4.42252083687702e-05], ['++p;', 4.42252083687702e-05], ['pexpr)', 4.42252083687702e-05], ['pp_string', 4.42252083687702e-05], ['(Bindings::const_definitions_iterator', 4.42252083687702e-05], ['traverse);', 4.42252083687702e-05], ['descriptor.', 4.42252083687702e-05], ['do_is_static_initializer()', 4.42252083687702e-05], ['std::vector<Bexpression*>', 4.42252083687702e-05], ['(this->seen_)', 4.42252083687702e-05], ['TRAVERSE_EXIT', 4.42252083687702e-05], ['*result_type', 4.42252083687702e-05], ['Expression**', 4.42252083687702e-05], ['mt', 4.42252083687702e-05], ['int_type,', 4.42252083687702e-05], ['Label*', 4.42252083687702e-05], ['"import', 4.42252083687702e-05], ['((traverse_mask', 4.42252083687702e-05], ['Pascal', 4.0823269263480184e-05], ['OneAndHalf', 4.0823269263480184e-05], ['Two', 4.0823269263480184e-05], ['Y2', 4.0823269263480184e-05], ['Q', 4.0823269263480184e-05], ['PseudoZero', 4.0823269263480184e-05], ['very', 4.0823269263480184e-05], ['textual', 4.0823269263480184e-05], ['Pause', 4.0823269263480184e-05], ['extern', 4.0823269263480184e-05], ['real_from_target', 4.0823269263480184e-05], ['image,', 4.0823269263480184e-05], ['symbol_for_code', 4.0823269263480184e-05], ['(s,', 4.0823269263480184e-05], ['#ifndef', 4.0823269263480184e-05], ['SQRT', 4.0823269263480184e-05], ['main', 4.0823269263480184e-05], ['Zero),', 4.0823269263480184e-05], ['4,', 4.0823269263480184e-05], ['X)', 4.0823269263480184e-05], ['%s,', 4.0823269263480184e-05], ['Zero))', 4.0823269263480184e-05], ['Y2;', 4.0823269263480184e-05], ['Y1;', 4.0823269263480184e-05], ['UfThold', 4.0823269263480184e-05], ['system', 4.0823269263480184e-05], ['seems', 4.0823269263480184e-05], ['Print', 4.0823269263480184e-05], ['selftest', 4.0823269263480184e-05], ['"can\'t', 4.0823269263480184e-05], ['"diagnostic-core.h"', 4.0823269263480184e-05], ['Call', 4.0823269263480184e-05], ['node.', 4.0823269263480184e-05], ['kind', 4.0823269263480184e-05], ['(TYPE));', 4.0823269263480184e-05], ['half', 4.0823269263480184e-05], ['HOST_BITS_PER_WIDE_INT)', 4.0823269263480184e-05], ['SIGNED)', 4.0823269263480184e-05], ['HOST_WIDE_INT)', 4.0823269263480184e-05], ['operands.', 4.0823269263480184e-05], ['Calculate', 4.0823269263480184e-05], ['(prec,', 4.0823269263480184e-05], ['Perform', 4.0823269263480184e-05], ['operations.', 4.0823269263480184e-05], ['remaining', 4.0823269263480184e-05], ['wmax', 4.0823269263480184e-05], ['wmin', 4.0823269263480184e-05], ['0.', 4.0823269263480184e-05], ['length.', 4.0823269263480184e-05], ['PRECISION', 4.0823269263480184e-05], ['offset;', 4.0823269263480184e-05], ['removed', 4.0823269263480184e-05], ['*op0,', 4.0823269263480184e-05], ['*op1,', 4.0823269263480184e-05], ['l0--;', 4.0823269263480184e-05], ['o1', 4.0823269263480184e-05], ['however', 4.0823269263480184e-05], ['-1)', 4.0823269263480184e-05], ['Clear', 4.0823269263480184e-05], ['building', 4.0823269263480184e-05], ['expected', 4.0823269263480184e-05], ['assert_deceq', 4.0823269263480184e-05], ['a));', 4.0823269263480184e-05], ['<sstream>', 4.0823269263480184e-05], ['"gimple-expr.h"', 4.0823269263480184e-05], ['instr_expr', 4.0823269263480184e-05], ['ptype', 4.0823269263480184e-05], ['becomes', 4.0823269263480184e-05], ['32:', 4.0823269263480184e-05], ['builtins', 4.0823269263480184e-05], ['parameters.', 4.0823269263480184e-05], ['&,', 4.0823269263480184e-05], ['Implement', 4.0823269263480184e-05], ['m_parent.m_cf->add_temp_var', 4.0823269263480184e-05], ['build_nonstandard_integer_type', 4.0823269263480184e-05], ['(brig_opcode,', 4.0823269263480184e-05], ['brig_type', 4.0823269263480184e-05], ['gccbrig_hsa_type_bit_size', 4.0823269263480184e-05], ['option', 4.0823269263480184e-05], ['output.', 4.0823269263480184e-05], ['m_parent.get_brig_data_entry', 4.0823269263480184e-05], ['BrigOperandOffset32_t', 4.0823269263480184e-05], ['Array', 4.0823269263480184e-05], ['FIXME.', 4.0823269263480184e-05], ['barrier', 4.0823269263480184e-05], ['dest_type', 4.0823269263480184e-05], ['whole', 4.0823269263480184e-05], ['(brig_inst,', 4.0823269263480184e-05], ['BrigOperandRegister', 4.0823269263480184e-05], ['creates', 4.0823269263480184e-05], ['conversion.', 4.0823269263480184e-05], ['(resdecl)', 4.0823269263480184e-05], ['(arg', 4.0823269263480184e-05], ['NAME', 4.0823269263480184e-05], ['safe', 4.0823269263480184e-05], ['implies', 4.0823269263480184e-05], ['build_string', 4.0823269263480184e-05], ['var;', 4.0823269263480184e-05], ['usage', 4.0823269263480184e-05], ['VAR_DECL', 4.0823269263480184e-05], ['(name,', 4.0823269263480184e-05], ['Replace', 4.0823269263480184e-05], ['IR.', 4.0823269263480184e-05], ['provide', 4.0823269263480184e-05], ['${enable_threads}', 4.0823269263480184e-05], ['use_collect2=no', 4.0823269263480184e-05], ['rs6000/sysv4.opt"', 4.0823269263480184e-05], ['arch_without_sse2=yes', 4.0823269263480184e-05], ['mark', 4.0823269263480184e-05], ['changed', 4.0823269263480184e-05], ['bb->index);', 4.0823269263480184e-05], ['copy_rtx', 4.0823269263480184e-05], ['(rtx_insn', 4.0823269263480184e-05], ['(gen_tstsi_t', 4.0823269263480184e-05], ['(L_loop_byte));', 4.0823269263480184e-05], ['s2_addr,', 4.0823269263480184e-05], ['gen_lowpart', 4.0823269263480184e-05], ['%d]', 4.0823269263480184e-05], ['checked', 4.0823269263480184e-05], ['(eq:SI', 4.0823269263480184e-05], ['reg-reg', 4.0823269263480184e-05], ['holds', 4.0823269263480184e-05], ['helper', 4.0823269263480184e-05], ['declaration,', 4.0823269263480184e-05], ['tmpl', 4.0823269263480184e-05], ['failed', 4.0823269263480184e-05], ['decl);', 4.0823269263480184e-05], ['constr', 4.0823269263480184e-05], ['report', 4.0823269263480184e-05], ['catch', 4.0823269263480184e-05], ['nargs', 4.0823269263480184e-05], ['TREE_CONSTANT', 4.0823269263480184e-05], ['Diagnose', 4.0823269263480184e-05], ['"%qE', 4.0823269263480184e-05], ['ts,', 4.0823269263480184e-05], ['Apply', 4.0823269263480184e-05], ['(value)', 4.0823269263480184e-05], ['2006-2019', 4.0823269263480184e-05], ['"dmd/identifier.h"', 4.0823269263480184e-05], ['Want', 4.0823269263480184e-05], ['members', 4.0823269263480184e-05], ['marked', 4.0823269263480184e-05], ['build_lang_decl', 4.0823269263480184e-05], ['(Dsymbol', 4.0823269263480184e-05], ['ARG8,', 4.0823269263480184e-05], ['build_integer_cst', 4.0823269263480184e-05], ['d_array_ptr', 4.0823269263480184e-05], ['lhs', 4.0823269263480184e-05], ['assigned', 4.0823269263480184e-05], ['size);', 4.0823269263480184e-05], ['(type->ty', 4.0823269263480184e-05], ['((TypeStruct', 4.0823269263480184e-05], ['build_assign', 4.0823269263480184e-05], ['()->toBasetype', 4.0823269263480184e-05], ['Type::tvoid,', 4.0823269263480184e-05], ['get_decl_tree', 4.0823269263480184e-05], ['worth', 4.0823269263480184e-05], ['OutBuffer', 4.0823269263480184e-05], ['input_location', 4.0823269263480184e-05], ['N;', 4.0823269263480184e-05], ['(loop),', 4.0823269263480184e-05], ['vec<data_reference_p>', 4.0823269263480184e-05], ['loop_outer', 4.0823269263480184e-05], ['(alias)', 4.0823269263480184e-05], ['heap', 4.0823269263480184e-05], ['(argsize', 4.0823269263480184e-05], ['(build_typeinfo', 4.0823269263480184e-05], ['(d->tinfo->ty', 4.0823269263480184e-05], ['d->tinfo;', 4.0823269263480184e-05], ['fold_build1_loc(location.gcc_location(),', 4.0823269263480184e-05], ['get_identifier_from_string(name),', 4.0823269263480184e-05], ['static_cast<unsigned', 4.0823269263480184e-05], ['init_tree', 4.0823269263480184e-05], ["'0'", 4.0823269263480184e-05], ['escapes', 4.0823269263480184e-05], ['gogo_;', 4.0823269263480184e-05], ['size_t*,', 4.0823269263480184e-05], ['expression(Expression**);', 4.0823269263480184e-05], ['this->flows(dst,', 4.0823269263480184e-05], ['this->write_c_string("', 4.0823269263480184e-05], ['Expression::make_integer_ul(0,', 4.0823269263480184e-05], ['gogo->flatten_expression(function,', 4.0823269263480184e-05], ['bfn', 4.0823269263480184e-05], ['bexpr', 4.0823269263480184e-05], ['(context->type', 4.0823269263480184e-05], ['Type::make_pointer_type(Type::make_void_type());', 4.0823269263480184e-05], ['reason;', 4.0823269263480184e-05], ['&reason))', 4.0823269263480184e-05], ['reason.c_str());', 4.0823269263480184e-05], ['(this->vals_', 4.0823269263480184e-05], ['this->vals()->end();', 4.0823269263480184e-05], ['various', 3.742133015819017e-05], ['StickyBit', 3.742133015819017e-05], ['B', 3.742133015819017e-05], ['Underflow', 3.742133015819017e-05], ['Zero', 3.742133015819017e-05], ['correctly', 3.742133015819017e-05], ['modified', 3.742133015819017e-05], ['members.', 3.742133015819017e-05], ['"",', 3.742133015819017e-05], ['symbol,', 3.742133015819017e-05], ['assignments', 3.742133015819017e-05], ['32', 3.742133015819017e-05], ['encoding', 3.742133015819017e-05], ['subexpressions', 3.742133015819017e-05], ['neither', 3.742133015819017e-05], ['root', 3.742133015819017e-05], ['as:', 3.742133015819017e-05], ['diagnosed', 3.742133015819017e-05], ['%d\\n",', 3.742133015819017e-05], ['yet.', 3.742133015819017e-05], ['(line_table,', 3.742133015819017e-05], ['flag', 3.742133015819017e-05], ['(new', 3.742133015819017e-05], ['Compare', 3.742133015819017e-05], ['(block)', 3.742133015819017e-05], ['sort', 3.742133015819017e-05], ['buffer', 3.742133015819017e-05], ['(likely', 3.742133015819017e-05], ['Like', 3.742133015819017e-05], ['(e1,', 3.742133015819017e-05], ['end)', 3.742133015819017e-05], ['s.ctor_count);', 3.742133015819017e-05], ['s.dtor_count);', 3.742133015819017e-05], ['sgn)', 3.742133015819017e-05], ['(wi,', 3.742133015819017e-05], ['set,', 3.742133015819017e-05], ["It's", 3.742133015819017e-05], ['(vr0_min,', 3.742133015819017e-05], ['contain', 3.742133015819017e-05], ['upon', 3.742133015819017e-05], ['multiply', 3.742133015819017e-05], ['Construct', 3.742133015819017e-05], ['taken', 3.742133015819017e-05], ['ones', 3.742133015819017e-05], ['val[0]', 3.742133015819017e-05], ['bit.', 3.742133015819017e-05], ['issue', 3.742133015819017e-05], ['operator.', 3.742133015819017e-05], ['op1len', 3.742133015819017e-05], ['(offset', 3.742133015819017e-05], ['8;', 3.742133015819017e-05], ['logical', 3.742133015819017e-05], ['blocks.', 3.742133015819017e-05], ['trailing', 3.742133015819017e-05], ['once', 3.742133015819017e-05], ['"convert.h"', 3.742133015819017e-05], ['build_qualified_type', 3.742133015819017e-05], ['create_tmp_var', 3.742133015819017e-05], ['(brig_inst.opcode', 3.742133015819017e-05], ['(vec_type,', 3.742133015819017e-05], ['etype', 3.742133015819017e-05], ['void_type_node;', 3.742133015819017e-05], ['condition,', 3.742133015819017e-05], ['pattern', 3.742133015819017e-05], ['operand.', 3.742133015819017e-05], ['operand);', 3.742133015819017e-05], ['symbol_base', 3.742133015819017e-05], ['addr', 3.742133015819017e-05], ['output,', 3.742133015819017e-05], ['duplicate', 3.742133015819017e-05], ['control', 3.742133015819017e-05], ['brig_function::int_constant_value', 3.742133015819017e-05], ['(1);', 3.742133015819017e-05], ['casts', 3.742133015819017e-05], ['brig_function', 3.742133015819017e-05], ['points', 3.742133015819017e-05], ['allocated', 3.742133015819017e-05], ['void_type_node);', 3.742133015819017e-05], ['DECL_ARG_TYPE', 3.742133015819017e-05], ['targets', 3.742133015819017e-05], ["we'll", 3.742133015819017e-05], ['expanded', 3.742133015819017e-05], ['body,', 3.742133015819017e-05], ['construction', 3.742133015819017e-05], ['generates', 3.742133015819017e-05], ['var)', 3.742133015819017e-05], ['(operands[0],', 3.742133015819017e-05], ['(i)', 3.742133015819017e-05], ['(builtin_type,', 3.742133015819017e-05], ['allows', 3.742133015819017e-05], ['Need', 3.742133015819017e-05], ['entries', 3.742133015819017e-05], ['makes', 3.742133015819017e-05], ['va_arg', 3.742133015819017e-05], ['Finalize', 3.742133015819017e-05], ['true),', 3.742133015819017e-05], ['CPU', 3.742133015819017e-05], ['containing', 3.742133015819017e-05], ['compiling', 3.742133015819017e-05], ['command', 3.742133015819017e-05], ['ABI', 3.742133015819017e-05], ['glibc-stdint.h"', 3.742133015819017e-05], ['${nbsd_tm_file}', 3.742133015819017e-05], ['netbsd.opt', 3.742133015819017e-05], ['supports', 3.742133015819017e-05], ['provides', 3.742133015819017e-05], ['rs6000/t-ppccomm"', 3.742133015819017e-05], ['sparc/sysv4.h', 3.742133015819017e-05], ['];', 3.742133015819017e-05], ['tune', 3.742133015819017e-05], ['bb;', 3.742133015819017e-05], ['(PATTERN', 3.742133015819017e-05], ['prob_unlikely);', 3.742133015819017e-05], ['BBs.', 3.742133015819017e-05], ['4]', 3.742133015819017e-05], ['BBs', 3.742133015819017e-05], ['"\\nbecause', 3.742133015819017e-05], ['goal', 3.742133015819017e-05], ["didn't", 3.742133015819017e-05], ['constant,', 3.742133015819017e-05], ['*s', 3.742133015819017e-05], ['concept.', 3.742133015819017e-05], ['parms', 3.742133015819017e-05], ['fn,', 3.742133015819017e-05], ['satisfied.', 3.742133015819017e-05], ['requirements', 3.742133015819017e-05], ['(TREE_VALUE', 3.742133015819017e-05], ['parm', 3.742133015819017e-05], ['(t1,', 3.742133015819017e-05], ['(e', 3.742133015819017e-05], ['Evaluate', 3.742133015819017e-05], ['ti', 3.742133015819017e-05], ['depth', 3.742133015819017e-05], ['invalid', 3.742133015819017e-05], ['"dmd/mtype.h"', 3.742133015819017e-05], ['variant', 3.742133015819017e-05], ['p++)', 3.742133015819017e-05], ['Expressions', 3.742133015819017e-05], ['attribute;', 3.742133015819017e-05], ['attribute_spec.handler.', 3.742133015819017e-05], ['(no_add_attrs))', 3.742133015819017e-05], ['TREE_THIS_VOLATILE', 3.742133015819017e-05], ['FUNCTION_DECL', 3.742133015819017e-05], ['TYPE_LANG_FRONTEND', 3.742133015819017e-05], ['(t->ty', 3.742133015819017e-05], ['(TYPE_NAME', 3.742133015819017e-05], ['getting', 3.742133015819017e-05], ['*tf', 3.742133015819017e-05], ['*ad', 3.742133015819017e-05], ['(ad', 3.742133015819017e-05], ['prevent', 3.742133015819017e-05], ['AggregateDeclaration', 3.742133015819017e-05], ['(ctor)', 3.742133015819017e-05], ['rhs', 3.742133015819017e-05], ['structs', 3.742133015819017e-05], ['arg1);', 3.742133015819017e-05], ['imaginary', 3.742133015819017e-05], ['elms);', 3.742133015819017e-05], ['Tpointer)', 3.742133015819017e-05], ['varargs', 3.742133015819017e-05], ['struct,', 3.742133015819017e-05], ['fields;', 3.742133015819017e-05], ['(cd);', 3.742133015819017e-05], ['(ffi)', 3.742133015819017e-05], ['closure,', 3.742133015819017e-05], ['Strings', 3.742133015819017e-05], ['(Expression', 3.742133015819017e-05], ['worry', 3.742133015819017e-05], ['modules.dim;', 3.742133015819017e-05], ['build_decl_tree', 3.742133015819017e-05], ['reduction.', 3.742133015819017e-05], ['(gimple', 3.742133015819017e-05], ['invariant', 3.742133015819017e-05], ['SSA_NAME_VERSION', 3.742133015819017e-05], ['cached', 3.742133015819017e-05], ['loop_depth', 3.742133015819017e-05], ['&this->rv', 3.742133015819017e-05], ['d)', 3.742133015819017e-05], ['body.', 3.742133015819017e-05], ['declare_extern_var', 3.742133015819017e-05], ['function)', 3.742133015819017e-05], ['interfaces.', 3.742133015819017e-05], ['*tb1', 3.742133015819017e-05], ['tb1->nextOf', 3.742133015819017e-05], ['e->type,', 3.742133015819017e-05], ['e->e1->type);', 3.742133015819017e-05], ['shortcut', 3.742133015819017e-05], ['Generate:', 3.742133015819017e-05], ['vals', 3.742133015819017e-05], ['either:', 3.742133015819017e-05], ['uint', 3.742133015819017e-05], ['addresses', 3.742133015819017e-05], ['(Statement', 3.742133015819017e-05], ['this->start_scope', 3.742133015819017e-05], ['make_internal_typeinfo', 3.742133015819017e-05], ['array_type_node,', 3.742133015819017e-05], ['(t->ctype);', 3.742133015819017e-05], ['"go-system.h"', 3.742133015819017e-05], ['go_preserve_from_gc(decl);', 3.742133015819017e-05], ['fold_build2_loc(location.gcc_location(),', 3.742133015819017e-05], ['type_tree,', 3.742133015819017e-05], ['function->get_tree();', 3.742133015819017e-05], ['Authors.', 3.742133015819017e-05], ['rights', 3.742133015819017e-05], ['reserved.', 3.742133015819017e-05], ['governed', 3.742133015819017e-05], ['BSD-style', 3.742133015819017e-05], ['license', 3.742133015819017e-05], ['LICENSE', 3.742133015819017e-05], ['statement(Block*,', 3.742133015819017e-05], ['Typed_identifier*', 3.742133015819017e-05], ['std::cerr', 3.742133015819017e-05], ['(this->expr()', 3.742133015819017e-05], ['fe', 3.742133015819017e-05], ['enc', 3.742133015819017e-05], ['Traversal', 3.742133015819017e-05], ['Unary_expression*', 3.742133015819017e-05], ['recover.', 3.742133015819017e-05], ['*p);', 3.742133015819017e-05], ['fntype->parameters();', 3.742133015819017e-05], ['src->ast_format(gogo).c_str());', 3.742133015819017e-05], ['(Bindings::const_declarations_iterator', 3.742133015819017e-05], ['this->classification_', 3.742133015819017e-05], ['NIL_CHECK_NOT_NEEDED,', 3.742133015819017e-05], ['do_type();', 3.742133015819017e-05], ['Type::lookup_integer_type("uintptr");', 3.742133015819017e-05], ['imp,', 3.742133015819017e-05], ['go_error_at(imp->location(),', 3.742133015819017e-05], ['imp->require_c_string("', 3.742133015819017e-05], ['mpc_precision);', 3.742133015819017e-05], ['Expression::convert_for_assignment(gogo,', 3.742133015819017e-05], ['this->report_error(_("expected', 3.742133015819017e-05], ['context->function()->func_value()->get_decl();', 3.742133015819017e-05], ['left_nc,', 3.742133015819017e-05], ['right_val);', 3.742133015819017e-05], ['overflow");', 3.742133015819017e-05], ['imp->advance(3);', 3.742133015819017e-05], ['(Expression_list::iterator', 3.742133015819017e-05], ['loc)));', 3.742133015819017e-05], ['this->report_error(_("not', 3.742133015819017e-05], ['this->location_);', 3.742133015819017e-05], ['good', 3.401939105290015e-05], ['Z2', 3.401939105290015e-05], ['include', 3.401939105290015e-05], ['machine_mode', 3.401939105290015e-05], ['p++;', 3.401939105290015e-05], ['bb,', 3.401939105290015e-05], ['(ret', 3.401939105290015e-05], ['b.image);', 3.401939105290015e-05], ['RHS', 3.401939105290015e-05], ['significant', 3.401939105290015e-05], ['appear', 3.401939105290015e-05], ['rounding', 3.401939105290015e-05], ['nor', 3.401939105290015e-05], ['Other', 3.401939105290015e-05], ['3;', 3.401939105290015e-05], ['computed', 3.401939105290015e-05], ['provided', 3.401939105290015e-05], ['mode.', 3.401939105290015e-05], ['(tmp,', 3.401939105290015e-05], ['e.g.', 3.401939105290015e-05], ['concat', 3.401939105290015e-05], ['suitable', 3.401939105290015e-05], ['that.', 3.401939105290015e-05], ['e1', 3.401939105290015e-05], ['t2,', 3.401939105290015e-05], ['nl', 3.401939105290015e-05], ['(void', 3.401939105290015e-05], ['goes', 3.401939105290015e-05], ['element.', 3.401939105290015e-05], ['operations', 3.401939105290015e-05], ['large', 3.401939105290015e-05], ['Support', 3.401939105290015e-05], ['widest2_int', 3.401939105290015e-05], ['largest', 3.401939105290015e-05], ['contents', 3.401939105290015e-05], ['bound', 3.401939105290015e-05], ['bounds', 3.401939105290015e-05], ['values,', 3.401939105290015e-05], ['(prec);', 3.401939105290015e-05], ['val[len', 3.401939105290015e-05], ['high', 3.401939105290015e-05], ['prec', 3.401939105290015e-05], ['(precision', 3.401939105290015e-05], ['(val[len', 3.401939105290015e-05], ['rest', 3.401939105290015e-05], ['well', 3.401939105290015e-05], ['block)', 3.401939105290015e-05], ['l1)', 3.401939105290015e-05], ['val[l0]', 3.401939105290015e-05], ['(l1', 3.401939105290015e-05], ['l0)', 3.401939105290015e-05], ['carry', 3.401939105290015e-05], ['op1', 3.401939105290015e-05], ['is,', 3.401939105290015e-05], ['process', 3.401939105290015e-05], ['offset,', 3.401939105290015e-05], ['directive', 3.401939105290015e-05], ['(parent)', 3.401939105290015e-05], ['def', 3.401939105290015e-05], ['BRIG_TYPE_BASE_MASK;', 3.401939105290015e-05], ['HSAIL', 3.401939105290015e-05], ['gccbrig_type_vector_subparts', 3.401939105290015e-05], ['pos', 3.401939105290015e-05], ['including', 3.401939105290015e-05], ['(GOTO_EXPR,', 3.401939105290015e-05], ['processing', 3.401939105290015e-05], ['m_parent.get_brig_operand_entry', 3.401939105290015e-05], ['var);', 3.401939105290015e-05], ['Same', 3.401939105290015e-05], ['result_type', 3.401939105290015e-05], ['offset.', 3.401939105290015e-05], ['src_type', 3.401939105290015e-05], ['uint32_type_node;', 3.401939105290015e-05], ['(operands.at', 3.401939105290015e-05], ['Just', 3.401939105290015e-05], ['PARM_DECL,', 3.401939105290015e-05], ['They', 3.401939105290015e-05], ['related', 3.401939105290015e-05], ['BIND_EXPR_BODY', 3.401939105290015e-05], ['(false),', 3.401939105290015e-05], ['found.', 3.401939105290015e-05], ['ID', 3.401939105290015e-05], ['(std::string', 3.401939105290015e-05], ['append_statement', 3.401939105290015e-05], ['across', 3.401939105290015e-05], ['temporaries', 3.401939105290015e-05], ['4));', 3.401939105290015e-05], ['Adds', 3.401939105290015e-05], ['lead', 3.401939105290015e-05], ['lists', 3.401939105290015e-05], ['align', 3.401939105290015e-05], ['model', 3.401939105290015e-05], ['names.', 3.401939105290015e-05], ['now,', 3.401939105290015e-05], ['name;', 3.401939105290015e-05], ['unique', 3.401939105290015e-05], ['"."', 3.401939105290015e-05], ['padding', 3.401939105290015e-05], ['*args', 3.401939105290015e-05], ['configure', 3.401939105290015e-05], ['linker', 3.401939105290015e-05], ['defining', 3.401939105290015e-05], ['thread', 3.401939105290015e-05], ['character', 3.401939105290015e-05], ['Avoid', 3.401939105290015e-05], ['x86_64-*-*)', 3.401939105290015e-05], ['d_target_objs="${d_target_objs}', 3.401939105290015e-05], ['no;', 3.401939105290015e-05], ['i386/x86-64.h', 3.401939105290015e-05], ['rs6000/sysv4.h', 3.401939105290015e-05], ['Default', 3.401939105290015e-05], ['kinds', 3.401939105290015e-05], ['BITS_PER_UNIT);', 3.401939105290015e-05], ['this);', 3.401939105290015e-05], ['handles', 3.401939105290015e-05], ['Implementation', 3.401939105290015e-05], ['SP', 3.401939105290015e-05], ['lose', 3.401939105290015e-05], ['time.', 3.401939105290015e-05], ['(GET_CODE', 3.401939105290015e-05], ['GET_MODE', 3.401939105290015e-05], ['NEXT_INSN', 3.401939105290015e-05], ['addr2', 3.401939105290015e-05], ['(addr2,', 3.401939105290015e-05], ['(gen_branch_true', 3.401939105290015e-05], ['tmp2));', 3.401939105290015e-05], ['(gen_extendqisi2', 3.401939105290015e-05], ['(QImode,', 3.401939105290015e-05], ['count.', 3.401939105290015e-05], ['(i))', 3.401939105290015e-05], ['(pat,', 3.401939105290015e-05], ['probably', 3.401939105290015e-05], ['null.', 3.401939105290015e-05], ['3]', 3.401939105290015e-05], ['found,', 3.401939105290015e-05], ['continue', 3.401939105290015e-05], ['(comp,', 3.401939105290015e-05], ['(*i,', 3.401939105290015e-05], ['snprintf', 3.401939105290015e-05], ['(parent,', 3.401939105290015e-05], ['(constr,', 3.401939105290015e-05], ['compound', 3.401939105290015e-05], ['fold', 3.401939105290015e-05], ['expect', 3.401939105290015e-05], ['(tree,', 3.401939105290015e-05], ['results.', 3.401939105290015e-05], ['bool.', 3.401939105290015e-05], ['init,', 3.401939105290015e-05], ['subsume', 3.401939105290015e-05], ['(cur);', 3.401939105290015e-05], ['++iter;', 3.401939105290015e-05], ['assumptions', 3.401939105290015e-05], ['(t1))', 3.401939105290015e-05], ['proof_state::iterator', 3.401939105290015e-05], ['cause', 3.401939105290015e-05], ['value)', 3.401939105290015e-05], ['(OPT_Wattributes,', 3.401939105290015e-05], ['Tfunction)', 3.401939105290015e-05], ['TYPE_MAIN_VARIANT', 3.401939105290015e-05], ['fields,', 3.401939105290015e-05], ['exist,', 3.401939105290015e-05], ['make_unsigned_type', 3.401939105290015e-05], ['TYPE_NAME', 3.401939105290015e-05], ['Declaration', 3.401939105290015e-05], ['EXP.', 3.401939105290015e-05], ['d_array_length', 3.401939105290015e-05], ['BaseClass', 3.401939105290015e-05], ['aggregate', 3.401939105290015e-05], ['d_mark_addressable', 3.401939105290015e-05], ['ptrtype', 3.401939105290015e-05], ['benefit', 3.401939105290015e-05], ['build_vconvert', 3.401939105290015e-05], ['d_bool_type,', 3.401939105290015e-05], ['build_offset', 3.401939105290015e-05], ['(etype,', 3.401939105290015e-05], ['current_function_decl;', 3.401939105290015e-05], ['Not', 3.401939105290015e-05], ['Tvoid)', 3.401939105290015e-05], ['Tarray', 3.401939105290015e-05], ['stream.', 3.401939105290015e-05], ['trees', 3.401939105290015e-05], ['c;', 3.401939105290015e-05], ['modules[i];', 3.401939105290015e-05], ['dependence', 3.401939105290015e-05], ['induction', 3.401939105290015e-05], ['gphi', 3.401939105290015e-05], ['loop_cand', 3.401939105290015e-05], ['(loop_cand', 3.401939105290015e-05], ['(use_p,', 3.401939105290015e-05], ['!gsi_end_p', 3.401939105290015e-05], ['(var,', 3.401939105290015e-05], ['(dump_flags', 3.401939105290015e-05], ['TDF_DETAILS))', 3.401939105290015e-05], ['datarefs.iterate', 3.401939105290015e-05], ['references.', 3.401939105290015e-05], ['find_loop_location', 3.401939105290015e-05], ['assembler', 3.401939105290015e-05], ['Visitor', 3.401939105290015e-05], ['d_finish_decl', 3.401939105290015e-05], ['function;', 3.401939105290015e-05], ['thunk.', 3.401939105290015e-05], ['arrays.', 3.401939105290015e-05], ['(e->e1->op', 3.401939105290015e-05], ['keys', 3.401939105290015e-05], ['insert_aggregate_field', 3.401939105290015e-05], ['(flags', 3.401939105290015e-05], ['statement,', 3.401939105290015e-05], ['string,', 3.401939105290015e-05], ['(null_pointer_node);', 3.401939105290015e-05], ['(tk', 3.401939105290015e-05], ['OPERATOR_OR:', 3.401939105290015e-05], ['OPERATOR_DIV:', 3.401939105290015e-05], ['OPERATOR_MOD:', 3.401939105290015e-05], ['OPERATOR_BITCLEAR:', 3.401939105290015e-05], ['++p,', 3.401939105290015e-05], ['indexes,', 3.401939105290015e-05], ['size_t*', 3.401939105290015e-05], ['pindex,', 3.401939105290015e-05], ['"(";', 3.401939105290015e-05], ['(Struct_field_list::const_iterator', 3.401939105290015e-05], ['fields->begin();', 3.401939105290015e-05], ['fields->end();', 3.401939105290015e-05], ['embedded', 3.401939105290015e-05], ['OPERATOR_AND)', 3.401939105290015e-05], ['go_inform(src->location(),', 3.401939105290015e-05], ['named_object', 3.401939105290015e-05], ['go_error_at(this->location_,', 3.401939105290015e-05], ['gogo->backend()->error_expression();', 3.401939105290015e-05], ['do_type()', 3.401939105290015e-05], ['gogo->backend()->convert_expression(btype,', 3.401939105290015e-05], ['context->type;', 3.401939105290015e-05], ['this->location()))', 3.401939105290015e-05], ['int_type', 3.401939105290015e-05], ['"expected', 3.401939105290015e-05], ['this->one_arg();', 3.401939105290015e-05], ['cap_arg', 3.401939105290015e-05], ['cap,', 3.401939105290015e-05], ['capacity', 3.401939105290015e-05], ['bfunction', 3.401939105290015e-05], ['bad_index', 3.401939105290015e-05], ['h', 3.401939105290015e-05], ['pb', 3.401939105290015e-05], ['this->inserter_', 3.401939105290015e-05], ['named_object;', 3.401939105290015e-05], ['(and', 3.0617451947610136e-05], ['BASIC', 3.0617451947610136e-05], ['available', 3.0617451947610136e-05], ['therefore', 3.0617451947610136e-05], ['exactly', 3.0617451947610136e-05], ['changes', 3.0617451947610136e-05], ['made', 3.0617451947610136e-05], ['TwoForty', 3.0617451947610136e-05], ['Z1', 3.0617451947610136e-05], ['existing', 3.0617451947610136e-05], ['(image,', 3.0617451947610136e-05], ['real_to_hexadecimal', 3.0617451947610136e-05], ['"%6d:', 3.0617451947610136e-05], ['verbose_index++,', 3.0617451947610136e-05], ['T,', 3.0617451947610136e-05], ['e;', 3.0617451947610136e-05], ['Some', 3.0617451947610136e-05], ['routines', 3.0617451947610136e-05], ['FLOOR', 3.0617451947610136e-05], ['d', 3.0617451947610136e-05], ['&x)', 3.0617451947610136e-05], ['V9;', 3.0617451947610136e-05], ['Two)', 3.0617451947610136e-05], ['10)', 3.0617451947610136e-05], ['Half)', 3.0617451947610136e-05], ['evaluation', 3.0617451947610136e-05], ['arithmetic', 3.0617451947610136e-05], ['strictly', 3.0617451947610136e-05], ['computes', 3.0617451947610136e-05], ['n)', 3.0617451947610136e-05], ['construct', 3.0617451947610136e-05], ['indirectly', 3.0617451947610136e-05], ['(or', 3.0617451947610136e-05], ['LOC.', 3.0617451947610136e-05], ['block;', 3.0617451947610136e-05], ['(fndecl,', 3.0617451947610136e-05], ['limit', 3.0617451947610136e-05], ['OFFSET,', 3.0617451947610136e-05], ['(out,', 3.0617451947610136e-05], ['c);', 3.0617451947610136e-05], ['Sort', 3.0617451947610136e-05], ['base,', 3.0617451947610136e-05], ['&);', 3.0617451947610136e-05], ['testing', 3.0617451947610136e-05], ['dummy', 3.0617451947610136e-05], ['(val', 3.0617451947610136e-05], ['HOST_BITS_PER_WIDE_INT);', 3.0617451947610136e-05], ['overflow.', 3.0617451947610136e-05], ['(sign', 3.0617451947610136e-05], ['wi::max_value', 3.0617451947610136e-05], ['wi::zero', 3.0617451947610136e-05], ['wi::mask', 3.0617451947610136e-05], ['(wi::gt_p', 3.0617451947610136e-05], ['CODE', 3.0617451947610136e-05], ['extend', 3.0617451947610136e-05], ['caller', 3.0617451947610136e-05], ['safe_uhwi', 3.0617451947610136e-05], ['adding', 3.0617451947610136e-05], ['Copy', 3.0617451947610136e-05], ['*xval,', 3.0617451947610136e-05], ['according', 3.0617451947610136e-05], ['Store', 3.0617451947610136e-05], ['comes', 3.0617451947610136e-05], ['general', 3.0617451947610136e-05], ['(s', 3.0617451947610136e-05], ['Fill', 3.0617451947610136e-05], ['val[i++]', 3.0617451947610136e-05], ['l1', 3.0617451947610136e-05], ['treated', 3.0617451947610136e-05], ['away', 3.0617451947610136e-05], ['sizes', 3.0617451947610136e-05], ['wi::round_down_for_mask', 3.0617451947610136e-05], ["aren't", 3.0617451947610136e-05], ['wi::round_up_for_mask', 3.0617451947610136e-05], ['VALUE_TYPE', 3.0617451947610136e-05], ['64)', 3.0617451947610136e-05], ['"tree-iterator.h"', 3.0617451947610136e-05], ['(brig_to_generic', 3.0617451947610136e-05], ['&parent)', 3.0617451947610136e-05], ['(MEM_REF,', 3.0617451947610136e-05], ['(gccbrig_hsa_type_bit_size', 3.0617451947610136e-05], ['necessary', 3.0617451947610136e-05], ['later.', 3.0617451947610136e-05], ['bitsize_int', 3.0617451947610136e-05], ['(element_type)', 3.0617451947610136e-05], ['(BrigOpcode16_t', 3.0617451947610136e-05], ['BrigInstMod', 3.0617451947610136e-05], ['BrigInstCmp', 3.0617451947610136e-05], ['(i));', 3.0617451947610136e-05], ['BRIG_TYPE_BASE_MASK)', 3.0617451947610136e-05], ['(*brig_inst,', 3.0617451947610136e-05], ['(var', 3.0617451947610136e-05], ['(expr),', 3.0617451947610136e-05], ['(expr', 3.0617451947610136e-05], ['additional', 3.0617451947610136e-05], ['register.', 3.0617451947610136e-05], ['var_name', 3.0617451947610136e-05], ['(uint64_type_node,', 3.0617451947610136e-05], ['(brig_inst.type);', 3.0617451947610136e-05], ['(segment', 3.0617451947610136e-05], ['indirection', 3.0617451947610136e-05], ['private', 3.0617451947610136e-05], ['fatal_error', 3.0617451947610136e-05], ['matching', 3.0617451947610136e-05], ['converts', 3.0617451947610136e-05], ['mem', 3.0617451947610136e-05], ['operand,', 3.0617451947610136e-05], ['looks', 3.0617451947610136e-05], ['(0));', 3.0617451947610136e-05], ['unsigned_int_type', 3.0617451947610136e-05], ['FUNCTION_DECL,', 3.0617451947610136e-05], ['TYPE_ARG_TYPES', 3.0617451947610136e-05], ['DECL_RESULT', 3.0617451947610136e-05], ['(context_arg)', 3.0617451947610136e-05], ['(bind_expr);', 3.0617451947610136e-05], ['append', 3.0617451947610136e-05], ['&name)', 3.0617451947610136e-05], ['alignment);', 3.0617451947610136e-05], ['TSI_NEW_STMT);', 3.0617451947610136e-05], ['recursive', 3.0617451947610136e-05], ['analysis.', 3.0617451947610136e-05], ['decl.', 3.0617451947610136e-05], ['strstr', 3.0617451947610136e-05], ['append_to_statement_list_force', 3.0617451947610136e-05], ['(launcher)', 3.0617451947610136e-05], ['this,', 3.0617451947610136e-05], ['expand_builtin', 3.0617451947610136e-05], ['proper', 3.0617451947610136e-05], ['cases,', 3.0617451947610136e-05], ['turned', 3.0617451947610136e-05], ['identity', 3.0617451947610136e-05], ['TYPE_SIZE_UNIT', 3.0617451947610136e-05], ['map.', 3.0617451947610136e-05], ['effects.', 3.0617451947610136e-05], ['Function', 3.0617451947610136e-05], ['configuration', 3.0617451947610136e-05], ['compiled', 3.0617451947610136e-05], ['no,', 3.0617451947610136e-05], ['pass,', 3.0617451947610136e-05], ['32-bit', 3.0617451947610136e-05], ['"";', 3.0617451947610136e-05], ['yes)', 3.0617451947610136e-05], ['supported."', 3.0617451947610136e-05], ['support.', 3.0617451947610136e-05], ['netbsd-elf.opt"', 3.0617451947610136e-05], ['$with_cpu', 3.0617451947610136e-05], ['tune_32', 3.0617451947610136e-05], ['MIPS_ABI_DEFAULT=ABI_32"', 3.0617451947610136e-05], ['tmake_file="rs6000/t-fprules', 3.0617451947610136e-05], ['"val=\\$with_$which"', 3.0617451947610136e-05], ['tree_type', 3.0617451947610136e-05], ['*name,', 3.0617451947610136e-05], ['"%qs', 3.0617451947610136e-05], ['Simple', 3.0617451947610136e-05], ['PREV_INSN', 3.0617451947610136e-05], ['GET_CODE', 3.0617451947610136e-05], ['REG_P', 3.0617451947610136e-05], ['(label);', 3.0617451947610136e-05], ['pass_data', 3.0617451947610136e-05], ['2013-2019', 3.0617451947610136e-05], ['force_into', 3.0617451947610136e-05], ['adjust_address', 3.0617451947610136e-05], ['(dest,', 3.0617451947610136e-05], ['(s2_addr,', 3.0617451947610136e-05], ['GET_MODE_SIZE', 3.0617451947610136e-05], ['(len,', 3.0617451947610136e-05], ['(GET_MODE', 3.0617451947610136e-05], ['NULL_RTX;', 3.0617451947610136e-05], ['%d]\\n",', 3.0617451947610136e-05], ['identified', 3.0617451947610136e-05], ['5]', 3.0617451947610136e-05], ['(eq', 3.0617451947610136e-05], ['replace', 3.0617451947610136e-05], ['cstores', 3.0617451947610136e-05], ['reg,', 3.0617451947610136e-05], ['(reg)', 3.0617451947610136e-05], ['reach', 3.0617451947610136e-05], ['TILEPRO', 3.0617451947610136e-05], ['number.', 3.0617451947610136e-05], ['lookup', 3.0617451947610136e-05], ['diagnostics.', 3.0617451947610136e-05], ["'", 3.0617451947610136e-05], ['conjoin_constraints', 3.0617451947610136e-05], ['(parms,', 3.0617451947610136e-05], ['EXPR,', 3.0617451947610136e-05], ['deduction', 3.0617451947610136e-05], ['constr,', 3.0617451947610136e-05], ['CONJ_CONSTR:', 3.0617451947610136e-05], ['definition.', 3.0617451947610136e-05], ['(tmpl,', 3.0617451947610136e-05], ['("invalid', 3.0617451947610136e-05], ['ci', 3.0617451947610136e-05], ['get_constraints', 3.0617451947610136e-05], ['TYPE_DECL,', 3.0617451947610136e-05], ['substituting', 3.0617451947610136e-05], ['satisfy_constraint_1', 3.0617451947610136e-05], ['enclosing', 3.0617451947610136e-05], ['check_term', 3.0617451947610136e-05], ['(iter', 3.0617451947610136e-05], ['run-time', 3.0617451947610136e-05], ['ignored",', 3.0617451947610136e-05], ['flags,', 3.0617451947610136e-05], ['allowed', 3.0617451947610136e-05], ['"dmd/expression.h"', 3.0617451947610136e-05], ['"dmd/module.h"', 3.0617451947610136e-05], ['GC', 3.0617451947610136e-05], ['built_in_attributes[(int)', 3.0617451947610136e-05], ['ARG9,', 3.0617451947610136e-05], ['Map', 3.0617451947610136e-05], ['build_lang_type', 3.0617451947610136e-05], ['arrays,', 3.0617451947610136e-05], ['dereference', 3.0617451947610136e-05], ['tmemcmp', 3.0617451947610136e-05], ['pointers.', 3.0617451947610136e-05], ['build_struct_literal', 3.0617451947610136e-05], ['(field))', 3.0617451947610136e-05], ['lhs,', 3.0617451947610136e-05], ['build_condition', 3.0617451947610136e-05], ['fold_build1', 3.0617451947610136e-05], ['*type,', 3.0617451947610136e-05], ['fntype;', 3.0617451947610136e-05], ['enclosed', 3.0617451947610136e-05], ['derived', 3.0617451947610136e-05], ['(cd,', 3.0617451947610136e-05], ['FRAMEINFO_TYPE', 3.0617451947610136e-05], ['(cd', 3.0617451947610136e-05], ['link', 3.0617451947610136e-05], ['through.', 3.0617451947610136e-05], ['(same_type_p', 3.0617451947610136e-05], ['(get_classinfo_decl', 3.0617451947610136e-05], ['(value);', 3.0617451947610136e-05], ['obj', 3.0617451947610136e-05], ['(&x.rv', 3.0617451947610136e-05], ['(CONST_CAST', 3.0617451947610136e-05], ['dependencies', 3.0617451947610136e-05], ['imports', 3.0617451947610136e-05], ['(global.params.verbose)', 3.0617451947610136e-05], ['indent', 3.0617451947610136e-05], ['outermost', 3.0617451947610136e-05], ['interchanged', 3.0617451947610136e-05], ['*loop,', 3.0617451947610136e-05], ['<gphi', 3.0617451947610136e-05], ['(gsi);', 3.0617451947610136e-05], ['"%s",', 3.0617451947610136e-05], ['Give', 3.0617451947610136e-05], ['j++;', 3.0617451947610136e-05], ['&new_decoded_options[j]);', 3.0617451947610136e-05], ['mangle_internal_decl', 3.0617451947610136e-05], ['(d->loc),', 3.0617451947610136e-05], ['bother', 3.0617451947610136e-05], ['d_comdat_linkage', 3.0617451947610136e-05], ['crash', 3.0617451947610136e-05], ['(&v);', 3.0617451947610136e-05], ['thunks', 3.0617451947610136e-05], ['(decl->sinit)', 3.0617451947610136e-05], ['e->e2->type,', 3.0617451947610136e-05], ['tb2->ty', 3.0617451947610136e-05], ['build_expr_dtor', 3.0617451947610136e-05], ['e->type->toBasetype', 3.0617451947610136e-05], ['d->isym', 3.0617451947610136e-05], ['indexes', 3.0617451947610136e-05], ['(label)', 3.0617451947610136e-05], ['this->do_jump', 3.0617451947610136e-05], ['tv', 3.0617451947610136e-05], ['type_tree);', 3.0617451947610136e-05], ['expr_tree);', 3.0617451947610136e-05], ['OPERATOR_NOT:', 3.0617451947610136e-05], ['OPERATOR_EQEQ:', 3.0617451947610136e-05], ['OPERATOR_NOTEQ:', 3.0617451947610136e-05], ['OPERATOR_LT:', 3.0617451947610136e-05], ['OPERATOR_LE:', 3.0617451947610136e-05], ['OPERATOR_GT:', 3.0617451947610136e-05], ['OPERATOR_GE:', 3.0617451947610136e-05], ['OPERATOR_LSHIFT:', 3.0617451947610136e-05], ['OPERATOR_RSHIFT:', 3.0617451947610136e-05], ['this->error_variable();', 3.0617451947610136e-05], ['std::string::npos)', 3.0617451947610136e-05], ['function(Named_object*);', 3.0617451947610136e-05], ['Statement*);', 3.0617451947610136e-05], ['(it', 3.0617451947610136e-05], ['",";', 3.0617451947610136e-05], ['p->type(),', 3.0617451947610136e-05], ['ESCAPE_MASK)', 3.0617451947610136e-05], ['connected', 3.0617451947610136e-05], [':=', 3.0617451947610136e-05], ['heap,', 3.0617451947610136e-05], ['bindings', 3.0617451947610136e-05], ['this->write_c_string("\\n");', 3.0617451947610136e-05], ['ins.first->second', 3.0617451947610136e-05], ['go_assert(p', 3.0617451947610136e-05], ['slice.', 3.0617451947610136e-05], ['Expression::make_nil(location);', 3.0617451947610136e-05], ['is_pointer', 3.0617451947610136e-05], ['Type::COMPARE_ERRORS', 3.0617451947610136e-05], ['type"));', 3.0617451947610136e-05], ['(this->variable_->is_variable())', 3.0617451947610136e-05], ['inserter);', 3.0617451947610136e-05], ['this->expr_->get_backend(context);', 3.0617451947610136e-05], ['no->message_name().c_str());', 3.0617451947610136e-05], ['descriptors', 3.0617451947610136e-05], ['bloc);', 3.0617451947610136e-05], ['Statement_inserter*,', 3.0617451947610136e-05], ['!this->type_->is_abstract())', 3.0617451947610136e-05], ['context);', 3.0617451947610136e-05], ['this->expr_,', 3.0617451947610136e-05], ['count);', 3.0617451947610136e-05], ['integer"));', 3.0617451947610136e-05], ['right_type,', 3.0617451947610136e-05], ['left_type', 3.0617451947610136e-05], ['OPERATOR_EQEQ', 3.0617451947610136e-05], ['nc->set_invalid();', 3.0617451947610136e-05], ['imp->advance(4);', 3.0617451947610136e-05], ['(this->is_error_expression())', 3.0617451947610136e-05], ['go_assert(args', 3.0617451947610136e-05], ['cap', 3.0617451947610136e-05], ['(reason.empty())', 3.0617451947610136e-05], ['this->get_function_type();', 3.0617451947610136e-05], ['bad_index,', 3.0617451947610136e-05], ['(this->indexes_', 3.0617451947610136e-05], ['this)', 3.0617451947610136e-05], ['exp->write_c_string("', 3.0617451947610136e-05], ['named_function,', 3.0617451947610136e-05], ['Test', 2.7215512842320124e-05], ['little', 2.7215512842320124e-05], ['ThirtyTwo', 2.7215512842320124e-05], ['Random1', 2.7215512842320124e-05], ['Nine', 2.7215512842320124e-05], ['H', 2.7215512842320124e-05], ['determined', 2.7215512842320124e-05], ['parsed', 2.7215512842320124e-05], ['(&f,', 2.7215512842320124e-05], ['&ai,', 2.7215512842320124e-05], ['(bb,', 2.7215512842320124e-05], ['NO_LONG_DOUBLE', 2.7215512842320124e-05], ['representable', 2.7215512842320124e-05], ['(1)', 2.7215512842320124e-05], ['buf[64];', 2.7215512842320124e-05], ['sprintf(buf,', 2.7215512842320124e-05], ['FLOAT(buf);', 2.7215512842320124e-05], ['ld', 2.7215512842320124e-05], ['x)', 2.7215512842320124e-05], ['5,', 2.7215512842320124e-05], ['(Flaw,', 2.7215512842320124e-05], ['Y)', 2.7215512842320124e-05], ['("The', 2.7215512842320124e-05], ['decimal', 2.7215512842320124e-05], ['guard', 2.7215512842320124e-05], ['U2);', 2.7215512842320124e-05], ['round', 2.7215512842320124e-05], ['2:', 2.7215512842320124e-05], ['(ovfl_buf))', 2.7215512842320124e-05], ['int*', 2.7215512842320124e-05], ['2018-2019', 2.7215512842320124e-05], ['ctor.', 2.7215512842320124e-05], ['problem', 2.7215512842320124e-05], ['stack.', 2.7215512842320124e-05], ['type:', 2.7215512842320124e-05], ['ASSERT_NE', 2.7215512842320124e-05], ['"test.c:6:12:', 2.7215512842320124e-05], ['missed:', 2.7215512842320124e-05], ['*type', 2.7215512842320124e-05], ['(block', 2.7215512842320124e-05], ['(if', 2.7215512842320124e-05], ['allocation', 2.7215512842320124e-05], ['c->size;', 2.7215512842320124e-05], ['{}', 2.7215512842320124e-05], ['&wi,', 2.7215512842320124e-05], ['wide', 2.7215512842320124e-05], ['i.e.', 2.7215512842320124e-05], ['mask);', 2.7215512842320124e-05], ['math', 2.7215512842320124e-05], ['Transform', 2.7215512842320124e-05], ['any.', 2.7215512842320124e-05], ['&vr0_min,', 2.7215512842320124e-05], ['successfully', 2.7215512842320124e-05], ['included', 2.7215512842320124e-05], ['precision)', 2.7215512842320124e-05], ['xlen;', 2.7215512842320124e-05], ['word', 2.7215512842320124e-05], ['XALLOCAVEC', 2.7215512842320124e-05], ['zext_hwi', 2.7215512842320124e-05], ['precision.', 2.7215512842320124e-05], ['<<=', 2.7215512842320124e-05], ['OP1.', 2.7215512842320124e-05], ['op0len', 2.7215512842320124e-05], ['small_prec', 2.7215512842320124e-05], ['way.', 2.7215512842320124e-05], ['OP1', 2.7215512842320124e-05], ['comparisons.', 2.7215512842320124e-05], ['Both', 2.7215512842320124e-05], ['Insert', 2.7215512842320124e-05], ['(end', 2.7215512842320124e-05], ['result[j++]', 2.7215512842320124e-05], ['j;', 2.7215512842320124e-05], ['did', 2.7215512842320124e-05], ['op2', 2.7215512842320124e-05], ['determining', 2.7215512842320124e-05], ['count;', 2.7215512842320124e-05], ['place', 2.7215512842320124e-05], ['host', 2.7215512842320124e-05], ['leading', 2.7215512842320124e-05], ['++i;', 2.7215512842320124e-05], ['16', 2.7215512842320124e-05], ['32)', 2.7215512842320124e-05], ['(0xabc,', 2.7215512842320124e-05], ['(BIND_EXPR,', 2.7215512842320124e-05], ['DECL_SAVED_TREE', 2.7215512842320124e-05], ['ptype,', 2.7215512842320124e-05], ['*inst', 2.7215512842320124e-05], ['OPERANDS[0]', 2.7215512842320124e-05], ['packed', 2.7215512842320124e-05], ['OPERANDS[1]', 2.7215512842320124e-05], ['(BIT_AND_EXPR,', 2.7215512842320124e-05], ['i));', 2.7215512842320124e-05], ['defines', 2.7215512842320124e-05], ['happen', 2.7215512842320124e-05], ['CALL_EXPR)', 2.7215512842320124e-05], ['select', 2.7215512842320124e-05], ['instead.', 2.7215512842320124e-05], ['(bytes', 2.7215512842320124e-05], ['(var));', 2.7215512842320124e-05], ['vec_safe_reserve', 2.7215512842320124e-05], ['INTEGRAL_TYPE_P', 2.7215512842320124e-05], ['(EQ_EXPR,', 2.7215512842320124e-05], ['dest_type,', 2.7215512842320124e-05], ['results,', 2.7215512842320124e-05], ['&)', 2.7215512842320124e-05], ['BRIG_TYPE_U32,', 2.7215512842320124e-05], ['applies', 2.7215512842320124e-05], ['mode,', 2.7215512842320124e-05], ['space.', 2.7215512842320124e-05], ['extended', 2.7215512842320124e-05], ['(in', 2.7215512842320124e-05], ['dest', 2.7215512842320124e-05], ['BrigInstSegCvt', 2.7215512842320124e-05], ['BrigInstCvt', 2.7215512842320124e-05], ['reason', 2.7215512842320124e-05], ['(0);', 2.7215512842320124e-05], ['(brigVar,', 2.7215512842320124e-05], ['variables,', 2.7215512842320124e-05], ['DECL_DECLARED_INLINE_P', 2.7215512842320124e-05], ['(DECL_INITIAL', 2.7215512842320124e-05], ['void_type_node)', 2.7215512842320124e-05], ['yet,', 2.7215512842320124e-05], ['(NULL_TREE),', 2.7215512842320124e-05], ['add_local_variable', 2.7215512842320124e-05], ['m_context_arg);', 2.7215512842320124e-05], ['iteration', 2.7215512842320124e-05], ['instance.', 2.7215512842320124e-05], ['tsi_link_after', 2.7215512842320124e-05], ['Append', 2.7215512842320124e-05], ['Recursively', 2.7215512842320124e-05], ['called.', 2.7215512842320124e-05], ['(var)', 2.7215512842320124e-05], ['add_temp_var', 2.7215512842320124e-05], ['typed', 2.7215512842320124e-05], ['detect', 2.7215512842320124e-05], ['Note:', 2.7215512842320124e-05], ['(inst_base.opcode', 2.7215512842320124e-05], ['(MINUS_EXPR,', 2.7215512842320124e-05], ['mangled', 2.7215512842320124e-05], ['(ret)', 2.7215512842320124e-05], ['TREE_SIDE_EFFECTS', 2.7215512842320124e-05], ['(DECL_NAME', 2.7215512842320124e-05], ['first,', 2.7215512842320124e-05], ['delete[]', 2.7215512842320124e-05], ['in.', 2.7215512842320124e-05], ['definitions.', 2.7215512842320124e-05], ['graph.', 2.7215512842320124e-05], ['target-specific', 2.7215512842320124e-05], ['only.', 2.7215512842320124e-05], ['x$with_cpu', 2.7215512842320124e-05], ['use_collect2=yes', 2.7215512842320124e-05], ['posix)', 2.7215512842320124e-05], ['turn', 2.7215512842320124e-05], ['"x$with_cpu"', 2.7215512842320124e-05], ['tm_file="$tm_file', 2.7215512842320124e-05], [']', 2.7215512842320124e-05], ['mips/elf.h"', 2.7215512842320124e-05], ['sparc/t-sparc', 2.7215512842320124e-05], ['overriding', 2.7215512842320124e-05], ['particular', 2.7215512842320124e-05], ['matches', 2.7215512842320124e-05], ['${val}', 2.7215512842320124e-05], ['pick', 2.7215512842320124e-05], ['runtime.', 2.7215512842320124e-05], ['(brigVar->segment', 2.7215512842320124e-05], ['(name_reserved_for_implementation_p', 2.7215512842320124e-05], ['(e.g.', 2.7215512842320124e-05], ['RTL', 2.7215512842320124e-05], ['BB_END', 2.7215512842320124e-05], ['depend', 2.7215512842320124e-05], ['INTVAL', 2.7215512842320124e-05], ['load', 2.7215512842320124e-05], ['SImode,', 2.7215512842320124e-05], ['bytes,', 2.7215512842320124e-05], ['(func_addr_rtx,', 2.7215512842320124e-05], ['tmp1', 2.7215512842320124e-05], ['addr2_alignment', 2.7215512842320124e-05], ['(3)));', 2.7215512842320124e-05], ['(s1_addr,', 2.7215512842320124e-05], ['(gen_zero_extendqisi2', 2.7215512842320124e-05], ['(lenw,', 2.7215512842320124e-05], ['SH', 2.7215512842320124e-05], ['tries', 2.7215512842320124e-05], ['sett', 2.7215512842320124e-05], ['to,', 2.7215512842320124e-05], ['(v);', 2.7215512842320124e-05], ['1)))', 2.7215512842320124e-05], ['t))', 2.7215512842320124e-05], ['(pc)', 2.7215512842320124e-05], ['(if_then_else', 2.7215512842320124e-05], ['(label_ref:SI', 2.7215512842320124e-05], ['(pc)))', 2.7215512842320124e-05], ['(reg,', 2.7215512842320124e-05], ['bb_entry&', 2.7215512842320124e-05], ['trace)', 2.7215512842320124e-05], ['(REG_P', 2.7215512842320124e-05], ['(e.cstore.insn);', 2.7215512842320124e-05], ['trace.bb', 2.7215512842320124e-05], ['(std::list<bb_entry>::const_iterator', 2.7215512842320124e-05], ['trace.bb_entries.begin', 2.7215512842320124e-05], ['trace.bb_entries.end', 2.7215512842320124e-05], ['anything.', 2.7215512842320124e-05], ['10,', 2.7215512842320124e-05], ['ExpressionTree', 2.7215512842320124e-05], ['structure.', 2.7215512842320124e-05], ['diagnostics', 2.7215512842320124e-05], ['(a)', 2.7215512842320124e-05], ['(fn', 2.7215512842320124e-05], ['(fn)', 2.7215512842320124e-05], ['instantiated', 2.7215512842320124e-05], ['trying', 2.7215512842320124e-05], ['%qE",', 2.7215512842320124e-05], ['DISJ_CONSTR:', 2.7215512842320124e-05], ['t0', 2.7215512842320124e-05], ['T1', 2.7215512842320124e-05], ['constrained', 2.7215512842320124e-05], ['IDENT', 2.7215512842320124e-05], ['t2)', 2.7215512842320124e-05], ['diagnose_constraint', 2.7215512842320124e-05], ['potentially', 2.7215512842320124e-05], ['(iterator', 2.7215512842320124e-05], ['ts', 2.7215512842320124e-05], ['right);', 2.7215512842320124e-05], ['(decl),', 2.7215512842320124e-05], ['(TYPE_MAIN_VARIANT', 2.7215512842320124e-05], ['overridden', 2.7215512842320124e-05], ['(cst);', 2.7215512842320124e-05], ['dinteger_t', 2.7215512842320124e-05], ['RECORD_TYPE', 2.7215512842320124e-05], ['(lang_hooks.types.type_for_mode', 2.7215512842320124e-05], ['build_index_type', 2.7215512842320124e-05], ['build_array_type', 2.7215512842320124e-05], ['null_pointer_node);', 2.7215512842320124e-05], ['d_decl_context', 2.7215512842320124e-05], ['(decl', 2.7215512842320124e-05], ['structs.', 2.7215512842320124e-05], ['()->pointerTo', 2.7215512842320124e-05], ['(exp)));', 2.7215512842320124e-05], ['*ce', 2.7215512842320124e-05], ['*cd)', 2.7215512842320124e-05], ['index)', 2.7215512842320124e-05], ['(lhs,', 2.7215512842320124e-05], ['initializing', 2.7215512842320124e-05], ['tb->ty', 2.7215512842320124e-05], ['(ptrtype,', 2.7215512842320124e-05], ['Move', 2.7215512842320124e-05], ['BLOCK_VARS', 2.7215512842320124e-05], ['DECL_FIELD_OFFSET', 2.7215512842320124e-05], ['init);', 2.7215512842320124e-05], ['back-end.', 2.7215512842320124e-05], ['arg1,', 2.7215512842320124e-05], ['(integer_zerop', 2.7215512842320124e-05], ['void.', 2.7215512842320124e-05], ['(build_deref', 2.7215512842320124e-05], ['Tsarray);', 2.7215512842320124e-05], ['caller.', 2.7215512842320124e-05], ['taking', 2.7215512842320124e-05], ['Tclass)', 2.7215512842320124e-05], ['Checks', 2.7215512842320124e-05], ['obj,', 2.7215512842320124e-05], ['d_diagnostic_report_diagnostic', 2.7215512842320124e-05], ['buffer,', 2.7215512842320124e-05], ['sized', 2.7215512842320124e-05], ['x.normalize', 2.7215512842320124e-05], ['front', 2.7215512842320124e-05], ['e->type);', 2.7215512842320124e-05], ['*id', 2.7215512842320124e-05], ['typeinfo', 2.7215512842320124e-05], ['middle-end', 2.7215512842320124e-05], ['vec_safe_length', 2.7215512842320124e-05], ['reduction_p', 2.7215512842320124e-05], ['dyn_cast', 2.7215512842320124e-05], ['gsi_next', 2.7215512842320124e-05], ['new_var', 2.7215512842320124e-05], ['&dr);', 2.7215512842320124e-05], ['DR_ACCESS_STRIDE', 2.7215512842320124e-05], ['(dr);', 2.7215512842320124e-05], ['SRC', 2.7215512842320124e-05], ['(ref,', 2.7215512842320124e-05], ['(&this->rv', 2.7215512842320124e-05], ['What', 2.7215512842320124e-05], ['(arg));', 2.7215512842320124e-05], ['so.', 2.7215512842320124e-05], ['(ident)', 2.7215512842320124e-05], ['Visitor::visit;', 2.7215512842320124e-05], ['TypeInfo.', 2.7215512842320124e-05], ['aggregate_initializer_decl', 2.7215512842320124e-05], ['d_linkonce_linkage', 2.7215512842320124e-05], ['ClassInfo', 2.7215512842320124e-05], ['decl->csym', 2.7215512842320124e-05], ['(function)', 2.7215512842320124e-05], ['params', 2.7215512842320124e-05], ['graph', 2.7215512842320124e-05], ['assignment.', 2.7215512842320124e-05], ['(e->e2));', 2.7215512842320124e-05], ['(e->type);', 2.7215512842320124e-05], ['destructor', 2.7215512842320124e-05], ['constructor.', 2.7215512842320124e-05], ['length);', 2.7215512842320124e-05], ['built_in_function', 2.7215512842320124e-05], ['Which', 2.7215512842320124e-05], ['build_funcs_gates_fn', 2.7215512842320124e-05], ['TypeInfo_Class', 2.7215512842320124e-05], ['STRIDE', 2.7215512842320124e-05], ['dimension.', 2.7215512842320124e-05], ['address.stmt,', 2.7215512842320124e-05], ['(address,', 2.7215512842320124e-05], ['Statement', 2.7215512842320124e-05], ['this->end_scope', 2.7215512842320124e-05], ['this->lookup_label', 2.7215512842320124e-05], ['TypeInfoVisitor', 2.7215512842320124e-05], ['void*)', 2.7215512842320124e-05], ['inherited_p);', 2.7215512842320124e-05], ['"go-c.h"', 2.7215512842320124e-05], ['"gogo.h"', 2.7215512842320124e-05], ['Bexpression*,', 2.7215512842320124e-05], ['Blabel*', 2.7215512842320124e-05], ['this->error_type();', 2.7215512842320124e-05], ['expr_tree', 2.7215512842320124e-05], ['(*p)->get_tree();', 2.7215512842320124e-05], ['"\\n";', 2.7215512842320124e-05], ['(parameters', 2.7215512842320124e-05], ['(results', 2.7215512842320124e-05], ['Var_expression*', 2.7215512842320124e-05], ['enc;', 2.7215512842320124e-05], ['gc', 2.7215512842320124e-05], ['buf[50];', 2.7215512842320124e-05], ['*pexpr;', 2.7215512842320124e-05], ['traverse_expressions),', 2.7215512842320124e-05], ['OPERATOR_MULT', 2.7215512842320124e-05], ['++pa)', 2.7215512842320124e-05], ['this->flood(level,', 2.7215512842320124e-05], ['pm', 2.7215512842320124e-05], ['pkgpath', 2.7215512842320124e-05], ['std::vector<const', 2.7215512842320124e-05], ['Import_init*', 2.7215512842320124e-05], ['(type->integer_type()', 2.7215512842320124e-05], ['gogo->backend()->var_expression(bvar,', 2.7215512842320124e-05], ['TRAVERSE_CONTINUE', 2.7215512842320124e-05], ['(no->is_function_declaration())', 2.7215512842320124e-05], ['go_error_at(loc,', 2.7215512842320124e-05], ['no);', 2.7215512842320124e-05], ['this->type()->get_backend(gogo);', 2.7215512842320124e-05], ['Linemap::predeclared_location();', 2.7215512842320124e-05], ['(imp->peek_char()', 2.7215512842320124e-05], ['(this->is_character_constant_)', 2.7215512842320124e-05], ['Type::lookup_float_type("float64");', 2.7215512842320124e-05], ['Type::lookup_complex_type("complex128");', 2.7215512842320124e-05], ['efb->write_c_string(")");', 2.7215512842320124e-05], ['expr_type', 2.7215512842320124e-05], ['Copy.', 2.7215512842320124e-05], ['Expression::make_nil(loc),', 2.7215512842320124e-05], ['Runtime::Function', 2.7215512842320124e-05], ['mpz_set_ui(val,', 2.7215512842320124e-05], ['(this->op_)', 2.7215512842320124e-05], ['left_type,', 2.7215512842320124e-05], ['left_type;', 2.7215512842320124e-05], ['right_val,', 2.7215512842320124e-05], ['this->type_,', 2.7215512842320124e-05], ['(this->code_)', 2.7215512842320124e-05], ['(args->size()', 2.7215512842320124e-05], ['args->front();', 2.7215512842320124e-05], ['cap_arg,', 2.7215512842320124e-05], ['receive', 2.7215512842320124e-05], ['(this->args_', 2.7215512842320124e-05], ['slice,', 2.7215512842320124e-05], ['loc),', 2.7215512842320124e-05], ['this->vals_->begin();', 2.7215512842320124e-05], ['this->u_.float_val,', 2.7215512842320124e-05], ['(rtype->named_type()', 2.7215512842320124e-05], ['gogo_(gogo)', 2.7215512842320124e-05], ['(traverse_mask', 2.7215512842320124e-05], ['context(gogo,', 2.7215512842320124e-05], ['David', 2.3813573737030108e-05], ['Paranoia', 2.3813573737030108e-05], ['program,', 2.3813573737030108e-05], ['few', 2.3813573737030108e-05], ['E1', 2.3813573737030108e-05], ['Five', 2.3813573737030108e-05], ['IEEE', 2.3813573737030108e-05], ['compiler.', 2.3813573737030108e-05], ['much', 2.3813573737030108e-05], ['union', 2.3813573737030108e-05], ['l)', 2.3813573737030108e-05], ['real_c_float&', 2.3813573737030108e-05], ['operator=', 2.3813573737030108e-05], ['str', 2.3813573737030108e-05], ['l', 2.3813573737030108e-05], ['real_format', 2.3813573737030108e-05], ['"true"', 2.3813573737030108e-05], ['native', 2.3813573737030108e-05], ['l;', 2.3813573737030108e-05], ['native_float&', 2.3813573737030108e-05], ['f);', 2.3813573737030108e-05], ['LOG', 2.3813573737030108e-05], ['next;', 2.3813573737030108e-05], ['Two;', 2.3813573737030108e-05], ['F9;', 2.3813573737030108e-05], ['S;', 2.3813573737030108e-05], ['notify', 2.3813573737030108e-05], ['ErrCnt[Defect]', 2.3813573737030108e-05], ['small', 2.3813573737030108e-05], ['Zero,', 2.3813573737030108e-05], ['Zero)));', 2.3813573737030108e-05], ['itself,', 2.3813573737030108e-05], ['(Y1', 2.3813573737030108e-05], ['T;', 2.3813573737030108e-05], ['(Y2', 2.3813573737030108e-05], ['Rounded)', 2.3813573737030108e-05], ['power', 2.3813573737030108e-05], ['prints', 2.3813573737030108e-05], ['threshold', 2.3813573737030108e-05], ['4:', 2.3813573737030108e-05], ['overflow;', 2.3813573737030108e-05], ['"the', 2.3813573737030108e-05], ['machine', 2.3813573737030108e-05], ['puts', 2.3813573737030108e-05], ['"tree-pass.h"', 2.3813573737030108e-05], ['"selftest.h"', 2.3813573737030108e-05], ['Instead,', 2.3813573737030108e-05], ['internally', 2.3813573737030108e-05], ['dumping', 2.3813573737030108e-05], ['works.', 2.3813573737030108e-05], ['optinfo', 2.3813573737030108e-05], ['message.', 2.3813573737030108e-05], ['"cgraph.h"', 2.3813573737030108e-05], ['parts', 2.3813573737030108e-05], ['records', 2.3813573737030108e-05], ['pp;', 2.3813573737030108e-05], ['*obj', 2.3813573737030108e-05], ['json::number', 2.3813573737030108e-05], ['obj;', 2.3813573737030108e-05], ['consistent', 2.3813573737030108e-05], ['(block);', 2.3813573737030108e-05], ['UNKNOWN_LOCATION)', 2.3813573737030108e-05], ['IDENTIFIER_POINTER', 2.3813573737030108e-05], ['calls.', 2.3813573737030108e-05], ['dtor.', 2.3813573737030108e-05], ['FOR_EACH_VEC_ELT', 2.3813573737030108e-05], ['Any', 2.3813573737030108e-05], ['on.', 2.3813573737030108e-05], ['leaving', 2.3813573737030108e-05], ['stats', 2.3813573737030108e-05], ['happens', 2.3813573737030108e-05], ['gnu::unique_ptr<foo>', 2.3813573737030108e-05], ['non-NULL', 2.3813573737030108e-05], ['ops', 2.3813573737030108e-05], ['print_decu', 2.3813573737030108e-05], ['self', 2.3813573737030108e-05], ['fits', 2.3813573737030108e-05], ['(wi::neg_p', 2.3813573737030108e-05], ['print_hex', 2.3813573737030108e-05], ['latter', 2.3813573737030108e-05], ['adjust', 2.3813573737030108e-05], ['wi::overflow_type', 2.3813573737030108e-05], ['(overflow', 2.3813573737030108e-05], ['numbers', 2.3813573737030108e-05], ['calculate', 2.3813573737030108e-05], ['Compute', 2.3813573737030108e-05], ['components', 2.3813573737030108e-05], ['approach', 2.3813573737030108e-05], ['tmp,', 2.3813573737030108e-05], ['(for', 2.3813573737030108e-05], ['(m', 2.3813573737030108e-05], ['(wmax,', 2.3813573737030108e-05], ['(vr0_max,', 2.3813573737030108e-05], ['Pass', 2.3813573737030108e-05], ['easy', 2.3813573737030108e-05], ['(min,', 2.3813573737030108e-05], ['1];', 2.3813573737030108e-05], ['sext_hwi', 2.3813573737030108e-05], ['clear', 2.3813573737030108e-05], ['excess', 2.3813573737030108e-05], ['leave', 2.3813573737030108e-05], ['(count', 2.3813573737030108e-05], ['extension', 2.3813573737030108e-05], ['(index', 2.3813573737030108e-05], ['width,', 2.3813573737030108e-05], ['(xval,', 2.3813573737030108e-05], ['zeros.', 2.3813573737030108e-05], ['(op0len,', 2.3813573737030108e-05], ['op1len);', 2.3813573737030108e-05], ['wi::OVF_NONE;', 2.3813573737030108e-05], ['input,', 2.3813573737030108e-05], ['HIGH', 2.3813573737030108e-05], ['MAX_BITSIZE_MODE_ANY_INT', 2.3813573737030108e-05], ['full', 2.3813573737030108e-05], ['overflow,', 2.3813573737030108e-05], ['memset', 2.3813573737030108e-05], ['2));', 2.3813573737030108e-05], ['Main', 2.3813573737030108e-05], ['one,', 2.3813573737030108e-05], ['Each', 2.3813573737030108e-05], ['out.', 2.3813573737030108e-05], ['Either', 2.3813573737030108e-05], ['lowest', 2.3813573737030108e-05], ['assert_hexeq', 2.3813573737030108e-05], ['(b,', 2.3813573737030108e-05], ['b));', 2.3813573737030108e-05], ['32,', 2.3813573737030108e-05], ['64,', 2.3813573737030108e-05], ['block);', 2.3813573737030108e-05], ['atomic', 2.3813573737030108e-05], ['instr_type', 2.3813573737030108e-05], ['(inst.type))', 2.3813573737030108e-05], ['(TREE_CHAIN', 2.3813573737030108e-05], ['&operands)', 2.3813573737030108e-05], ['get_unsigned_int_type', 2.3813573737030108e-05], ['assumes', 2.3813573737030108e-05], ['vec', 2.3813573737030108e-05], ['position', 2.3813573737030108e-05], ['wide_type,', 2.3813573737030108e-05], ['inserted', 2.3813573737030108e-05], ['tell', 2.3813573737030108e-05], ['brig_opcode,', 2.3813573737030108e-05], ['VECTOR_TYPE_P', 2.3813573737030108e-05], ['operands);', 2.3813573737030108e-05], ['m_parent.m_cf->expand_or_call_builtin', 2.3813573737030108e-05], ['(*brig_inst);', 2.3813573737030108e-05], ['treat', 2.3813573737030108e-05], ['brig_element_type', 2.3813573737030108e-05], ['(*this,', 2.3813573737030108e-05], ["Let's", 2.3813573737030108e-05], ['best', 2.3813573737030108e-05], ['promoted_type', 2.3813573737030108e-05], ['*constructor_vals', 2.3813573737030108e-05], ['(constructor_vals,', 2.3813573737030108e-05], ['constructor_vals);', 2.3813573737030108e-05], ['(dest_type)', 2.3813573737030108e-05], ['(dest_type,', 2.3813573737030108e-05], ['indicates', 2.3813573737030108e-05], ['flat', 2.3813573737030108e-05], ['(POINTER_PLUS_EXPR,', 2.3813573737030108e-05], ['address,', 2.3813573737030108e-05], ['offsets', 2.3813573737030108e-05], ['pointed', 2.3813573737030108e-05], ['element_type,', 2.3813573737030108e-05], ['data);', 2.3813573737030108e-05], ['ARRAY_TYPE)', 2.3813573737030108e-05], ['brig_type)', 2.3813573737030108e-05], ['Creates', 2.3813573737030108e-05], ['false.', 2.3813573737030108e-05], ['analyze', 2.3813573737030108e-05], ['point.', 2.3813573737030108e-05], ['iff', 2.3813573737030108e-05], ['(output),', 2.3813573737030108e-05], ['constructed', 2.3813573737030108e-05], ['(src_type))', 2.3813573737030108e-05], ['cast.', 2.3813573737030108e-05], ['(base);', 2.3813573737030108e-05], ['casted_input', 2.3813573737030108e-05], ['info.', 2.3813573737030108e-05], ['beginning', 2.3813573737030108e-05], ['Ignore', 2.3813573737030108e-05], ['BIND_EXPR', 2.3813573737030108e-05], ['TYPE_QUAL_RESTRICT);', 2.3813573737030108e-05], ['(void_type_node,', 2.3813573737030108e-05], ['name_identifier', 2.3813573737030108e-05], ['name_identifier,', 2.3813573737030108e-05], ['SET_DECL_ASSEMBLER_NAME', 2.3813573737030108e-05], ['resdecl', 2.3813573737030108e-05], ['RESULT_DECL,', 2.3813573737030108e-05], ['usually', 2.3813573737030108e-05], ['(brigVar->type', 2.3813573737030108e-05], ['(DECL_ARGUMENTS', 2.3813573737030108e-05], ['set_externally_visible', 2.3813573737030108e-05], ['build_stmt', 2.3813573737030108e-05], ['(var);', 2.3813573737030108e-05], ['dim_char,', 2.3813573737030108e-05], ['(flag_assume_phsa)', 2.3813573737030108e-05], ['(variable)', 2.3813573737030108e-05], ['(&entry,', 2.3813573737030108e-05], ['ptr_type', 2.3813573737030108e-05], ['ctx,', 2.3813573737030108e-05], ['ELF', 2.3813573737030108e-05], ['implementation.', 2.3813573737030108e-05], ["'_'", 2.3813573737030108e-05], ['launcher', 2.3813573737030108e-05], ['built', 2.3813573737030108e-05], ['Attempt', 2.3813573737030108e-05], ['identify', 2.3813573737030108e-05], ['(operands[0]);', 2.3813573737030108e-05], ['normally', 2.3813573737030108e-05], ['(brig_type', 2.3813573737030108e-05], ['(std::make_pair', 2.3813573737030108e-05], ['VALUE', 2.3813573737030108e-05], ['directly,', 2.3813573737030108e-05], ['CALL_EXPR;', 2.3813573737030108e-05], ['return.', 2.3813573737030108e-05], ['"attribs.h"', 2.3813573737030108e-05], ['mangling', 2.3813573737030108e-05], ['&name,', 2.3813573737030108e-05], ['visible', 2.3813573737030108e-05], ['Assume', 2.3813573737030108e-05], ['force', 2.3813573737030108e-05], ['(m_dump_file,', 2.3813573737030108e-05], ['total', 2.3813573737030108e-05], ['nargs;', 2.3813573737030108e-05], ['print_generic_expr', 2.3813573737030108e-05], ['lets', 2.3813573737030108e-05], ['shared', 2.3813573737030108e-05], ['g.opt"', 2.3813573737030108e-05], ['fused-madd.opt"', 2.3813573737030108e-05], ['tm_p_file="${tm_p_file}', 2.3813573737030108e-05], ['ordering', 2.3813573737030108e-05], ['compilation', 2.3813573737030108e-05], ['TARGET_BIG_ENDIAN_DEFAULT=1"', 2.3813573737030108e-05], ["'s/,/", 2.3813573737030108e-05], ['openbsd.h', 2.3813573737030108e-05], ['openbsd-stdint.h', 2.3813573737030108e-05], ['${with_endian}', 2.3813573737030108e-05], ['automatically', 2.3813573737030108e-05], ['ARM', 2.3813573737030108e-05], ['arm/aout.h', 2.3813573737030108e-05], ['vx-common.h', 2.3813573737030108e-05], ['${fbsd_tm_file}', 2.3813573737030108e-05], ['$x86_archs', 2.3813573737030108e-05], ['*"', 2.3813573737030108e-05], ['"*)', 2.3813573737030108e-05], ['mips/elf.h', 2.3813573737030108e-05], ['arch_without_64bit=yes', 2.3813573737030108e-05], ['supported_defaults="arch', 2.3813573737030108e-05], ['But', 2.3813573737030108e-05], ['cpu_32', 2.3813573737030108e-05], ['cpu_64', 2.3813573737030108e-05], ['are:', 2.3813573737030108e-05], ['"#define', 2.3813573737030108e-05], ['encoded', 2.3813573737030108e-05], ['side.', 2.3813573737030108e-05], ['(brigVar);', 2.3813573737030108e-05], ['missing', 2.3813573737030108e-05], ['{"<stdint.h>",', 2.3813573737030108e-05], ['"<cstdint>"}', 2.3813573737030108e-05], ['transformed', 2.3813573737030108e-05], ['resolve', 2.3813573737030108e-05], ['(insn', 2.3813573737030108e-05], ['insn);', 2.3813573737030108e-05], ['!', 2.3813573737030108e-05], ['label);', 2.3813573737030108e-05], ['(insn)', 2.3813573737030108e-05], ['e);', 2.3813573737030108e-05], ['gate', 2.3813573737030108e-05], ['copy_addr_to_reg', 2.3813573737030108e-05], ['lab', 2.3813573737030108e-05], ['load.', 2.3813573737030108e-05], ['const0_rtx));', 2.3813573737030108e-05], ['(L_end_loop_byte));', 2.3813573737030108e-05], ['Loop', 2.3813573737030108e-05], ['check.', 2.3813573737030108e-05], ['clrt', 2.3813573737030108e-05], ['walk', 2.3813573737030108e-05], ['sh_optimize_sett_clrt', 2.3813573737030108e-05], ['(32);', 2.3813573737030108e-05], ['delete_insn', 2.3813573737030108e-05], ['REG_DEAD,', 2.3813573737030108e-05], ['inverting', 2.3813573737030108e-05], ['trace', 2.3813573737030108e-05], ['cstore_type_t', 2.3813573737030108e-05], ['newly', 2.3813573737030108e-05], ['touched_insn', 2.3813573737030108e-05], ['cstore_count,', 2.3813573737030108e-05], ['"in', 2.3813573737030108e-05], ['effectively', 2.3813573737030108e-05], ['priority', 2.3813573737030108e-05], ['considered', 2.3813573737030108e-05], ['mean', 2.3813573737030108e-05], ['abs_multiplier', 2.3813573737030108e-05], ['("#include', 2.3813573737030108e-05], ['(int)', 2.3813573737030108e-05], ['result->set', 2.3813573737030108e-05], ["'\\0';", 2.3813573737030108e-05], ['constraint_p', 2.3813573737030108e-05], ['c)', 2.3813573737030108e-05], ['substituted', 2.3813573737030108e-05], ['example:', 2.3813573737030108e-05], ['had', 2.3813573737030108e-05], ['check,', 2.3813573737030108e-05], ['prototype', 2.3813573737030108e-05], ['(result', 2.3813573737030108e-05], ['Constraint', 2.3813573737030108e-05], ['checks.', 2.3813573737030108e-05], ['CHECK_CONSTR:', 2.3813573737030108e-05], ['(CHECK_CONSTR,', 2.3813573737030108e-05], ['(body)', 2.3813573737030108e-05], ['(VAR_P', 2.3813573737030108e-05], ['DECL_TI_TEMPLATE', 2.3813573737030108e-05], ['And', 2.3813573737030108e-05], ['normalize_constraint', 2.3813573737030108e-05], ['PARM_CONSTR:', 2.3813573737030108e-05], ['ever', 2.3813573737030108e-05], ['tsubst_constraint', 2.3813573737030108e-05], ['opportunities', 2.3813573737030108e-05], ['boolean_true_node', 2.3813573737030108e-05], ['type",', 2.3813573737030108e-05], ['(constraints_satisfied_p', 2.3813573737030108e-05], ['constructing', 2.3813573737030108e-05], ['*b', 2.3813573737030108e-05], ['p,', 2.3813573737030108e-05], ['strcmp', 2.3813573737030108e-05], ['*no_add_attrs)', 2.3813573737030108e-05], ['*ident', 2.3813573737030108e-05], ['real_value', 2.3813573737030108e-05], ['*dsym', 2.3813573737030108e-05], ['m;', 2.3813573737030108e-05], ['Interface', 2.3813573737030108e-05], ['(RECORD_TYPE);', 2.3813573737030108e-05], ['ptr_type_node);', 2.3813573737030108e-05], ['(array_type_node,', 2.3813573737030108e-05], ['ENUM]', 2.3813573737030108e-05], ['int);', 2.3813573737030108e-05], ['"dmd/target.h"', 2.3813573737030108e-05], ['build_import_decl', 2.3813573737030108e-05], ['(TYPE_FIELDS', 2.3813573737030108e-05], ['(Declaration', 2.3813573737030108e-05], ['Static', 2.3813573737030108e-05], ['Parameter', 2.3813573737030108e-05], ['real_convert', 2.3813573737030108e-05], ['(binfo)', 2.3813573737030108e-05], ['memcmp', 2.3813573737030108e-05], ['(TypeStruct', 2.3813573737030108e-05], ['EQ_EXPR', 2.3813573737030108e-05], ['build_float_identity', 2.3813573737030108e-05], ['tcmp', 2.3813573737030108e-05], ['real_part', 2.3813573737030108e-05], ['imaginary_part', 2.3813573737030108e-05], ['(t1);', 2.3813573737030108e-05], ['sd,', 2.3813573737030108e-05], ['(build_assign', 2.3813573737030108e-05], ['(field,', 2.3813573737030108e-05], ['Walk', 2.3813573737030108e-05], ['(value))', 2.3813573737030108e-05], ['arg)', 2.3813573737030108e-05], ['temporaries.', 2.3813573737030108e-05], ['(ptr);', 2.3813573737030108e-05], ['INDEX', 2.3813573737030108e-05], ['DECL_IGNORED_P', 2.3813573737030108e-05], ['tf', 2.3813573737030108e-05], ['evaluation.', 2.3813573737030108e-05], ['(basetype);', 2.3813573737030108e-05], ['()->isFuncDeclaration', 2.3813573737030108e-05], ['CD.', 2.3813573737030108e-05], ['fd;', 2.3813573737030108e-05], ['*fd)', 2.3813573737030108e-05], ['FIELD_DECL,', 2.3813573737030108e-05], ["function's", 2.3813573737030108e-05], ['Data', 2.3813573737030108e-05], ['*etype', 2.3813573737030108e-05], ['convert_for_assignment', 2.3813573737030108e-05], ['ATTRIBUTE_GCC_DIAG(2,0)', 2.3813573737030108e-05], ['ap)', 2.3813573737030108e-05], ['(real_t', 2.3813573737030108e-05], ['fmt,', 2.3813573737030108e-05], ['create_typeinfo', 2.3813573737030108e-05], ['True', 2.3813573737030108e-05], ['buffer->writestring', 2.3813573737030108e-05], ['m->toChars', 2.3813573737030108e-05], ['integral', 2.3813573737030108e-05], ['(TypeClass', 2.3813573737030108e-05], ['interchanged.', 2.3813573737030108e-05], ['*stmt,', 2.3813573737030108e-05], ['*phi', 2.3813573737030108e-05], ['gimple_stmt_iterator', 2.3813573737030108e-05], ['SSA_NAME', 2.3813573737030108e-05], ['SSA_NAME)', 2.3813573737030108e-05], ['PHI_ARG_DEF_FROM_EDGE', 2.3813573737030108e-05], ['bb))', 2.3813573737030108e-05], ['stmt,', 2.3813573737030108e-05], ['dep', 2.3813573737030108e-05], ['bitmap_set_bit', 2.3813573737030108e-05], ['DATAREFS', 2.3813573737030108e-05], ['datarefs,', 2.3813573737030108e-05], ['vec<tree>', 2.3813573737030108e-05], ['niters', 2.3813573737030108e-05], ['ii', 2.3813573737030108e-05], ['LOOP', 2.3813573737030108e-05], ['longdouble&', 2.3813573737030108e-05], ['passing', 2.3813573737030108e-05], ['intended', 2.3813573737030108e-05], ['(decl->csym,', 2.3813573737030108e-05], ['(decl->csym);', 2.3813573737030108e-05], ['fntype);', 2.3813573737030108e-05], ['(fntype);', 2.3813573737030108e-05], ['Propagate', 2.3813573737030108e-05], ['inlinable', 2.3813573737030108e-05], ['bcd', 2.3813573737030108e-05], ['constructors', 2.3813573737030108e-05], ['build_artificial_decl', 2.3813573737030108e-05], ['literals.', 2.3813573737030108e-05], ['space,', 2.3813573737030108e-05], ['(e1b->op', 2.3813573737030108e-05], ['*tb2', 2.3813573737030108e-05], ['e->e1;', 2.3813573737030108e-05], ['(saved_elems,', 2.3813573737030108e-05], ['ctor);', 2.3813573737030108e-05], ['call?', 2.3813573737030108e-05], ['parmn', 2.3813573737030108e-05], ['function()', 2.3813573737030108e-05], ['fragment', 2.3813573737030108e-05], ['&li', 2.3813573737030108e-05], ['(&m_obstack,', 2.3813573737030108e-05], ['TERM', 2.3813573737030108e-05], ['stride,', 2.3813573737030108e-05], ['statements,', 2.3813573737030108e-05], ["(...)'", 2.3813573737030108e-05], ['(null_array_node);', 2.3813573737030108e-05], ['void*,', 2.3813573737030108e-05], ['(!tinfo_types[tk])', 2.3813573737030108e-05], ['(tk,', 2.3813573737030108e-05], ['"go-diagnostics.h"', 2.3813573737030108e-05], ['Gcc_tree', 2.3813573737030108e-05], ['Bexpression*);', 2.3813573737030108e-05], ['std::vector<Bexpression*>&', 2.3813573737030108e-05], ['is_hidden,', 2.3813573737030108e-05], ['tree*', 2.3813573737030108e-05], ['pt', 2.3813573737030108e-05], ['TREE_READONLY(decl)', 2.3813573737030108e-05], ['OPERATOR_OROR:', 2.3813573737030108e-05], ['OPERATOR_ANDAND:', 2.3813573737030108e-05], ['ref,', 2.3813573737030108e-05], ['ft', 2.3813573737030108e-05], ['SET_DECL_ASSEMBLER_NAME(decl,', 2.3813573737030108e-05], ['get_identifier_from_string(asm_name));', 2.3813573737030108e-05], ['Bvariable(decl);', 2.3813573737030108e-05], ['reliably', 2.3813573737030108e-05], ['((flags', 2.3813573737030108e-05], ['dump.', 2.3813573737030108e-05], ['go_error_at(Linemap::unknown_location(),', 2.3813573737030108e-05], ['(this->object()', 2.3813573737030108e-05], ['(no->is_variable()', 2.3813573737030108e-05], ['class_name', 2.3813573737030108e-05], ['10', 2.3813573737030108e-05], ['escape.', 2.3813573737030108e-05], ['Node::make_node(*pexpr);', 2.3813573737030108e-05], ['(fe', 2.3813573737030108e-05], ['OPERATOR_MULT)', 2.3813573737030108e-05], ['p1', 2.3813573737030108e-05], ['std::string*', 2.3813573737030108e-05], ['dereference.', 2.3813573737030108e-05], ['this->context_->sink();', 2.3813573737030108e-05], ['fn->func_value()->type();', 2.3813573737030108e-05], ['extra_loop_depth', 2.3813573737030108e-05], ['osrcesc', 2.3813573737030108e-05], ['src->encoding())', 2.3813573737030108e-05], ['src->set_encoding(Node::ESCAPE_HEAP);', 2.3813573737030108e-05], ['pp_character', 2.3813573737030108e-05], ['Unordered_set(const', 2.3813573737030108e-05], ["'A'", 2.3813573737030108e-05], ['buf[100];', 2.3813573737030108e-05], ['this->write_c_string(buf);', 2.3813573737030108e-05], ['first_field', 2.3813573737030108e-05], ['Expression::make_binary(OPERATOR_EQEQ,', 2.3813573737030108e-05], ['descriptor,', 2.3813573737030108e-05], ['type->get_backend(gogo);', 2.3813573737030108e-05], ['ival;', 2.3813573737030108e-05], ['Expression::make_boolean(true,', 2.3813573737030108e-05], ['do_is_constant()', 2.3813573737030108e-05], ['Type::traverse(this->type_,', 2.3813573737030108e-05], ['(this->variable_->is_result_variable())', 2.3813573737030108e-05], ['Ast', 2.3813573737030108e-05], ['this->function_,', 2.3813573737030108e-05], ['(!context->may_be_abstract)', 2.3813573737030108e-05], ['type_(type),', 2.3813573737030108e-05], ['efb->write_c_string("$convert(");', 2.3813573737030108e-05], ['efb->write_type(this->type_);', 2.3813573737030108e-05], ['efb->write_c_string(",', 2.3813573737030108e-05], ['mpz_clear(val);', 2.3813573737030108e-05], ['imp->read_type();', 2.3813573737030108e-05], ['")', 2.3813573737030108e-05], ['(!ok)', 2.3813573737030108e-05], ['(type->is_error())', 2.3813573737030108e-05], ['crash,', 2.3813573737030108e-05], ['right_type', 2.3813573737030108e-05], ['OPERATOR_LSHIFT', 2.3813573737030108e-05], ['this->left_->type();', 2.3813573737030108e-05], ['++pe)', 2.3813573737030108e-05], ['ins.first->second;', 2.3813573737030108e-05], ['st->set_is_struct_incomparable();', 2.3813573737030108e-05], ['function"));', 2.3813573737030108e-05], ['this->report_error(_("argument', 2.3813573737030108e-05], ['*pa,', 2.3813573737030108e-05], ['args->front()->type();', 2.3813573737030108e-05], ['Expression::make_temporary_reference(s1tmp,', 2.3813573737030108e-05], ['want_type', 2.3813573737030108e-05], ['channel"));', 2.3813573737030108e-05], ['"argument', 2.3813573737030108e-05], ['this->args_->size()', 2.3813573737030108e-05], ['"incompatible', 2.3813573737030108e-05], ['(this->cap_', 2.3813573737030108e-05], ['gogo->backend()->binary_expression(OPERATOR_OROR,', 2.3813573737030108e-05], ['Struct_field*', 2.3813573737030108e-05], ['++count;', 2.3813573737030108e-05], ['(method', 2.3813573737030108e-05], ['this->name_);', 2.3813573737030108e-05], ['(Type::traverse(this->type_,', 2.3813573737030108e-05], ['pi', 2.3813573737030108e-05], ['this->clear();', 2.3813573737030108e-05], ['issue_error,', 2.3813573737030108e-05], ['this->set_invalid();', 2.3813573737030108e-05], ['(this->package_', 2.3813573737030108e-05], ['Named_object::make_function(name,', 2.3813573737030108e-05], ['finalize', 2.3813573737030108e-05], ['budget', 2.3813573737030108e-05], ['e_or_t)', 2.3813573737030108e-05], ['Named_object(name,', 2.3813573737030108e-05], ['old_object;', 2.3813573737030108e-05], ['headers', 2.0411634631740092e-05], ['exact', 2.0411634631740092e-05], ['identifiers', 2.0411634631740092e-05], ['(which', 2.0411634631740092e-05], ['C1', 2.0411634631740092e-05], ['M', 2.0411634631740092e-05], ['E9', 2.0411634631740092e-05], ['MinusOne', 2.0411634631740092e-05], ['Precision', 2.0411634631740092e-05], ['library.', 2.0411634631740092e-05], ['(verbose)', 2.0411634631740092e-05], ['*fmt', 2.0411634631740092e-05], ['abort', 2.0411634631740092e-05], ['*buf', 2.0411634631740092e-05], ['verbose_cmp(image,', 2.0411634631740092e-05], ['strtold', 2.0411634631740092e-05], ['template<>', 2.0411634631740092e-05], ['strtod', 2.0411634631740092e-05], ['CHAR_BIT', 2.0411634631740092e-05], ['for.', 2.0411634631740092e-05], ['tests', 2.0411634631740092e-05], ['Guard', 2.0411634631740092e-05], ['OneAndHalf;', 2.0411634631740092e-05], ['C,', 2.0411634631740092e-05], ['D,', 2.0411634631740092e-05], ['1.0', 2.0411634631740092e-05], ['ErrCnt[Serious]', 2.0411634631740092e-05], ['alleges', 2.0411634631740092e-05], ['/*...', 2.0411634631740092e-05], ['relative', 2.0411634631740092e-05], ['tested', 2.0411634631740092e-05], ['further', 2.0411634631740092e-05], ['(Q', 2.0411634631740092e-05], ['divide', 2.0411634631740092e-05], ['(I', 2.0411634631740092e-05], ['near', 2.0411634631740092e-05], ['Y.str());', 2.0411634631740092e-05], ['D;', 2.0411634631740092e-05], ['E0;', 2.0411634631740092e-05], ['positive', 2.0411634631740092e-05], ['1:', 2.0411634631740092e-05], ['multiplication', 2.0411634631740092e-05], ['3:', 2.0411634631740092e-05], ['E9)', 2.0411634631740092e-05], ['(setjmp', 2.0411634631740092e-05], ['causes', 2.0411634631740092e-05], ['although', 2.0411634631740092e-05], ['(V9', 2.0411634631740092e-05], ['far', 2.0411634631740092e-05], ['produces', 2.0411634631740092e-05], ['possibly', 2.0411634631740092e-05], ['%d",', 2.0411634631740092e-05], ['compared', 2.0411634631740092e-05], ['("%s', 2.0411634631740092e-05], ['"immediate"', 2.0411634631740092e-05], ['storing', 2.0411634631740092e-05], ['opt_result', 2.0411634631740092e-05], ['ASSERT_DUMPED_TEXT_EQ', 2.0411634631740092e-05], ['Example', 2.0411634631740092e-05], ['fails,', 2.0411634631740092e-05], ['AUTO_DUMP_SCOPE', 2.0411634631740092e-05], ['stmt);', 2.0411634631740092e-05], ['%T', 2.0411634631740092e-05], ['stmt:', 2.0411634631740092e-05], ['failure', 2.0411634631740092e-05], ['from.', 2.0411634631740092e-05], ['emitting', 2.0411634631740092e-05], ['followed', 2.0411634631740092e-05], ['selftests', 2.0411634631740092e-05], ['(NULL),', 2.0411634631740092e-05], ['(&pp);', 2.0411634631740092e-05], ['BLOCK_SUPERCONTEXT', 2.0411634631740092e-05], ['json_item->set', 2.0411634631740092e-05], ['(item->get_location', 2.0411634631740092e-05], ['branches', 2.0411634631740092e-05], ['__attribute__', 2.0411634631740092e-05], ['t0,', 2.0411634631740092e-05], ['e0', 2.0411634631740092e-05], ['(c->n', 2.0411634631740092e-05], ['e2', 2.0411634631740092e-05], ['step', 2.0411634631740092e-05], ['c->size,', 2.0411634631740092e-05], ['(char,', 2.0411634631740092e-05], ['(r,', 2.0411634631740092e-05], ['(s));', 2.0411634631740092e-05], ['specialization', 2.0411634631740092e-05], ['routines.', 2.0411634631740092e-05], ['FILE', 2.0411634631740092e-05], ['HWI.', 2.0411634631740092e-05], ['overflows', 2.0411634631740092e-05], ['overflow_undefined)', 2.0411634631740092e-05], ['wi::min_value', 2.0411634631740092e-05], ['sign)', 2.0411634631740092e-05], ['wi::bit_and_not', 2.0411634631740092e-05], ['wi::min', 2.0411634631740092e-05], ['vr0_lb,', 2.0411634631740092e-05], ['overflow_undefined))', 2.0411634631740092e-05], ['vr0_ub,', 2.0411634631740092e-05], ['(res_lb,', 2.0411634631740092e-05], ['matter', 2.0411634631740092e-05], ['smallest', 2.0411634631740092e-05], ['2]', 2.0411634631740092e-05], ['&vr0_max,', 2.0411634631740092e-05], ['so,', 2.0411634631740092e-05], ['wmax,', 2.0411634631740092e-05], ['truncate', 2.0411634631740092e-05], ['SIGNED', 2.0411634631740092e-05], ['MIN', 2.0411634631740092e-05], ['Then', 2.0411634631740092e-05], ['non-zero', 2.0411634631740092e-05], ['canonical', 2.0411634631740092e-05], ['xval[i];', 2.0411634631740092e-05], ['read', 2.0411634631740092e-05], ['*val', 2.0411634631740092e-05], ['*v', 2.0411634631740092e-05], ['count,', 2.0411634631740092e-05], ['signedness', 2.0411634631740092e-05], ['xprecision,', 2.0411634631740092e-05], ['beyond', 2.0411634631740092e-05], ['(op0len', 2.0411634631740092e-05], ['l--;', 2.0411634631740092e-05], ['UNSIGNED);', 2.0411634631740092e-05], ['OFFSET.', 2.0411634631740092e-05], ['wi::lshift', 2.0411634631740092e-05], ['op0mask', 2.0411634631740092e-05], ['op0[l0]', 2.0411634631740092e-05], ['nonnull,', 2.0411634631740092e-05], ['(o0', 2.0411634631740092e-05], ['HOST_BITS_PER_HALF_WIDE_INT;', 2.0411634631740092e-05], ['throw', 2.0411634631740092e-05], ['HOST_BITS_PER_HALF_WIDE_INT];', 2.0411634631740092e-05], ['inputs', 2.0411634631740092e-05], ['directly.', 2.0411634631740092e-05], ['o1;', 2.0411634631740092e-05], ['k;', 2.0411634631740092e-05], ['x.precision', 2.0411634631740092e-05], ['OVF_NONE;', 2.0411634631740092e-05], ['properly', 2.0411634631740092e-05], ['null,', 2.0411634631740092e-05], ['*remainder_len', 2.0411634631740092e-05], ['UNSIGNED,', 2.0411634631740092e-05], ['XPRECISION', 2.0411634631740092e-05], ['shift);', 2.0411634631740092e-05], ['(res', 2.0411634631740092e-05], ['represents', 2.0411634631740092e-05], ['wraps', 2.0411634631740092e-05], ['widest_int', 2.0411634631740092e-05], ['gives', 2.0411634631740092e-05], ['(3);', 2.0411634631740092e-05], ['(0xf1,', 2.0411634631740092e-05], ['alloc_stmt_list', 2.0411634631740092e-05], ['bind', 2.0411634631740092e-05], ['(atomic_opcode', 2.0411634631740092e-05], ['(instr_type);', 2.0411634631740092e-05], ['Special', 2.0411634631740092e-05], ['due', 2.0411634631740092e-05], ['BRIG_OPCODE', 2.0411634631740092e-05], ['(brig_code_entry_handler', 2.0411634631740092e-05], ['operand0,', 2.0411634631740092e-05], ['built-ins', 2.0411634631740092e-05], ['OPERANDS[2]', 2.0411634631740092e-05], ['thus', 2.0411634631740092e-05], ['(arith_type);', 2.0411634631740092e-05], ['(BIT_FIELD_REF,', 2.0411634631740092e-05], ['After', 2.0411634631740092e-05], ['(int_size_in_bytes', 2.0411634631740092e-05], ['(wide_type,', 2.0411634631740092e-05], ['operands[1];', 2.0411634631740092e-05], ['(opcode', 2.0411634631740092e-05], ['seem', 2.0411634631740092e-05], ['ISA', 2.0411634631740092e-05], ['build_one_cst', 2.0411634631740092e-05], ['(input_count', 2.0411634631740092e-05], ['*brig_inst', 2.0411634631740092e-05], ['(brig_inst->opcode,', 2.0411634631740092e-05], ['brig_inst->opcode', 2.0411634631740092e-05], ['reported', 2.0411634631740092e-05], ['32b', 2.0411634631740092e-05], ['works', 2.0411634631740092e-05], ['scalars', 2.0411634631740092e-05], ['fall', 2.0411634631740092e-05], ['regular', 2.0411634631740092e-05], ['consider', 2.0411634631740092e-05], ['builtin.', 2.0411634631740092e-05], ['extract', 2.0411634631740092e-05], ['copies', 2.0411634631740092e-05], ['(in_args,', 2.0411634631740092e-05], ['(offset);', 2.0411634631740092e-05], ['BRIG_TYPE_ARRAY)', 2.0411634631740092e-05], ['integer_zero_node,', 2.0411634631740092e-05], ['(ADDR_EXPR,', 2.0411634631740092e-05], ['TREE_NOTHROW', 2.0411634631740092e-05], ['call);', 2.0411634631740092e-05], ['(brig_inst->type);', 2.0411634631740092e-05], ['(COND_EXPR,', 2.0411634631740092e-05], ['BrigDirectiveExecutable', 2.0411634631740092e-05], ['m_parent.get_mangled_name', 2.0411634631740092e-05], ['Produce', 2.0411634631740092e-05], ['(operand_type,', 2.0411634631740092e-05], ['*ref', 2.0411634631740092e-05], ['BRIG_SEGMENT_GROUP)', 2.0411634631740092e-05], ['(BRIG_OPCODE_WORKGROUPSIZE,', 2.0411634631740092e-05], ['callee,', 2.0411634631740092e-05], ['computation', 2.0411634631740092e-05], ['incoming', 2.0411634631740092e-05], ['(BrigType16_t', 2.0411634631740092e-05], ['next_data;', 2.0411634631740092e-05], ['(brig_inner_type', 2.0411634631740092e-05], ['ftz', 2.0411634631740092e-05], ['arbitrary', 2.0411634631740092e-05], ['Treat', 2.0411634631740092e-05], ['vec_size', 2.0411634631740092e-05], ['(size', 2.0411634631740092e-05], ['double_type_node,', 2.0411634631740092e-05], ['(src_type,', 2.0411634631740092e-05], ['destination.', 2.0411634631740092e-05], ['comment', 2.0411634631740092e-05], ['(conv_src_size', 2.0411634631740092e-05], ['(unsigned_int_type,', 2.0411634631740092e-05], ['indicated', 2.0411634631740092e-05], ['casted_input);', 2.0411634631740092e-05], ['position.', 2.0411634631740092e-05], ['(builtin,', 2.0411634631740092e-05], ['Allocate', 2.0411634631740092e-05], ['(fndecl));', 2.0411634631740092e-05], ['argtype', 2.0411634631740092e-05], ['directive.', 2.0411634631740092e-05], ['Push', 2.0411634631740092e-05], ['(ret_value)', 2.0411634631740092e-05], ['BIND_EXPR_VARS', 2.0411634631740092e-05], ['use.', 2.0411634631740092e-05], ['i),', 2.0411634631740092e-05], ['untyped', 2.0411634631740092e-05], ['tree_stmt_iterator', 2.0411634631740092e-05], ['share', 2.0411634631740092e-05], ['(uint32_type_node);', 2.0411634631740092e-05], ['Cannot', 2.0411634631740092e-05], ['finish', 2.0411634631740092e-05], ['section.', 2.0411634631740092e-05], ['alloca', 2.0411634631740092e-05], ['expand', 2.0411634631740092e-05], ['reuse', 2.0411634631740092e-05], ['certain', 2.0411634631740092e-05], ['s_custom_builtins.end', 2.0411634631740092e-05], ['assert', 2.0411634631740092e-05], ['label,', 2.0411634631740092e-05], ['cmp,', 2.0411634631740092e-05], ['handler', 2.0411634631740092e-05], ['accesses', 2.0411634631740092e-05], ['mod', 2.0411634631740092e-05], ['supported.', 2.0411634631740092e-05], ['layout_type', 2.0411634631740092e-05], ['BrigSectionHeader', 2.0411634631740092e-05], ['collect', 2.0411634631740092e-05], ['finish_function', 2.0411634631740092e-05], ['earlier', 2.0411634631740092e-05], ['(ptr_var)', 2.0411634631740092e-05], ['Strip', 2.0411634631740092e-05], ['length;', 2.0411634631740092e-05], ['laid', 2.0411634631740092e-05], ['indexed', 2.0411634631740092e-05], ['STRIP_NOPS', 2.0411634631740092e-05], ['OK.', 2.0411634631740092e-05], ['"***', 2.0411634631740092e-05], ['caught', 2.0411634631740092e-05], ['extra_headers="${extra_headers}', 2.0411634631740092e-05], ['-f', 2.0411634631740092e-05], ['processor', 2.0411634631740092e-05], ['64-bit', 2.0411634631740092e-05], ['Let', 2.0411634631740092e-05], ['requested', 2.0411634631740092e-05], ['glibc', 2.0411634631740092e-05], ["/g'`", 2.0411634631740092e-05], ['TM_MULTILIB_CONFIG=`echo', 2.0411634631740092e-05], ['$TM_MULTILIB_CONFIG', 2.0411634631740092e-05], ['linux-android.h', 2.0411634631740092e-05], ['.init_array', 2.0411634631740092e-05], ['script', 2.0411634631740092e-05], ['GAS', 2.0411634631740092e-05], ['gcc_cv_initfini_array=yes', 2.0411634631740092e-05], ['arm/t-arm', 2.0411634631740092e-05], ['arm/elf.h', 2.0411634631740092e-05], ['vxworks.h', 2.0411634631740092e-05], ['linux-android.opt"', 2.0411634631740092e-05], ['soft', 2.0411634631740092e-05], ['pa-d.o"', 2.0411634631740092e-05], ['openbsd-libpthread.h', 2.0411634631740092e-05], ['openbsd.opt"', 2.0411634631740092e-05], ['hpux-stdint.h"', 2.0411634631740092e-05], ['need_64bit_isa=yes', 2.0411634631740092e-05], ['i386/i386elf.h', 2.0411634631740092e-05], ['rtems.h"', 2.0411634631740092e-05], ['i386/gnu-user-common.h', 2.0411634631740092e-05], ['msformat-c.o"', 2.0411634631740092e-05], ['x$enable_threads', 2.0411634631740092e-05], ['"Cannot', 2.0411634631740092e-05], ['--with-cpu=$with_cpu"', 2.0411634631740092e-05], ['default_m68k_cpu=68020', 2.0411634631740092e-05], ['microblaze-c.o"', 2.0411634631740092e-05], ['enable_mips_multilibs="yes"', 2.0411634631740092e-05], ['usegas.h', 2.0411634631740092e-05], ['rs6000/t-ppcgas', 2.0411634631740092e-05], ['s390-c.o"', 2.0411634631740092e-05], ['options', 2.0411634631740092e-05], ['64bit', 2.0411634631740092e-05], ['Infer', 2.0411634631740092e-05], ['architecture', 2.0411634631740092e-05], ['--with-$which=$val"', 2.0411634631740092e-05], ['--with-$which=$val."', 2.0411634631740092e-05], ['a2', 2.0411634631740092e-05], ['"#undef', 2.0411634631740092e-05], ['compile-time.', 2.0411634631740092e-05], ['nunits', 2.0411634631740092e-05], ['accessed', 2.0411634631740092e-05], ['var_decl', 2.0411634631740092e-05], ['var_type', 2.0411634631740092e-05], ['natural', 2.0411634631740092e-05], ['Process', 2.0411634631740092e-05], ['them,', 2.0411634631740092e-05], ['{"<float.h>",', 2.0411634631740092e-05], ['"<cfloat>"}', 2.0411634631740092e-05], ['branch.', 2.0411634631740092e-05], ['tracker,', 2.0411634631740092e-05], ['purpose', 2.0411634631740092e-05], ['sequences', 2.0411634631740092e-05], ['*seq', 2.0411634631740092e-05], ['needs_tracking', 2.0411634631740092e-05], ['(src,', 2.0411634631740092e-05], ['reverse', 2.0411634631740092e-05], ['1)));', 2.0411634631740092e-05], ['(bb));', 2.0411634631740092e-05], ['RETURN)', 2.0411634631740092e-05], ['non-local', 2.0411634631740092e-05], ['emit_insn_after', 2.0411634631740092e-05], ['rtl_opt_pass', 2.0411634631740092e-05], ['*ctxt)', 2.0411634631740092e-05], ['execute', 2.0411634631740092e-05], ['namespace.', 2.0411634631740092e-05], ['(value,', 2.0411634631740092e-05], ['(operands[2])', 2.0411634631740092e-05], ['tmp2', 2.0411634631740092e-05], ['(addr1_alignment', 2.0411634631740092e-05], ['aligned,', 2.0411634631740092e-05], ['emit_barrier_after', 2.0411634631740092e-05], ['(jump);', 2.0411634631740092e-05], ['addr1));', 2.0411634631740092e-05], ['tmp2)));', 2.0411634631740092e-05], ['current_addr,', 2.0411634631740092e-05], ['Once', 2.0411634631740092e-05], ['predecessor', 2.0411634631740092e-05], ['paths.', 2.0411634631740092e-05], ['__VA_ARGS__);', 2.0411634631740092e-05], ['(gcc::context*', 2.0411634631740092e-05], ['insn.', 2.0411634631740092e-05], ['*start_insn,', 2.0411634631740092e-05], ['*i', 2.0411634631740092e-05], ['(m_ccreg)', 2.0411634631740092e-05], ['()->index);', 2.0411634631740092e-05], ['const_rtx', 2.0411634631740092e-05], ["haven't", 2.0411634631740092e-05], ['Such', 2.0411634631740092e-05], ['173)', 2.0411634631740092e-05], ['(ne', 2.0411634631740092e-05], ['comparison,', 2.0411634631740092e-05], ['set_of_reg', 2.0411634631740092e-05], ['(basic_block', 2.0411634631740092e-05], ['y)', 2.0411634631740092e-05], ['splitting', 2.0411634631740092e-05], ['(cbranch_trace&', 2.0411634631740092e-05], ['inv_cstore_count,', 2.0411634631740092e-05], ['"unknown', 2.0411634631740092e-05], ['(y))', 2.0411634631740092e-05], ['i->bb->index);', 2.0411634631740092e-05], ['(trace.setcc.set_src', 2.0411634631740092e-05], ['(such', 2.0411634631740092e-05], ['multiplier', 2.0411634631740092e-05], ['Name', 2.0411634631740092e-05], ['Expr', 2.0411634631740092e-05], ['n1,', 2.0411634631740092e-05], ['n2)', 2.0411634631740092e-05], ['8,', 2.0411634631740092e-05], ['k++)', 2.0411634631740092e-05], ['prev_pow2', 2.0411634631740092e-05], ['mostly', 2.0411634631740092e-05], ['json_from_expanded_location', 2.0411634631740092e-05], ['(diagnostic_context', 2.0411634631740092e-05], ['Lose', 2.0411634631740092e-05], ['diag_obj->set', 2.0411634631740092e-05], ['(b', 2.0411634631740092e-05], ['(b)', 2.0411634631740092e-05], ['(id,', 2.0411634631740092e-05], ['call;', 2.0411634631740092e-05], ['id;', 2.0411634631740092e-05], ['overload', 2.0411634631740092e-05], ['resolve_constraint_check', 2.0411634631740092e-05], ['iter;', 2.0411634631740092e-05], ['deduce', 2.0411634631740092e-05], ['often', 2.0411634631740092e-05], ['template-id', 2.0411634631740092e-05], ['ill-formed.', 2.0411634631740092e-05], ['tf_none,', 2.0411634631740092e-05], ['parameterized', 2.0411634631740092e-05], ['disjunction', 2.0411634631740092e-05], ['PRED_CONSTR:', 2.0411634631740092e-05], ['EXPR_CONSTR:', 2.0411634631740092e-05], ['TYPE_CONSTR:', 2.0411634631740092e-05], ['ICONV_CONSTR:', 2.0411634631740092e-05], ['DEDUCT_CONSTR:', 2.0411634631740092e-05], ['EXCEPT_CONSTR:', 2.0411634631740092e-05], ['gcc_unreachable();', 2.0411634631740092e-05], ['indicating', 2.0411634631740092e-05], ['ARG', 2.0411634631740092e-05], ['(src_parm);', 2.0411634631740092e-05], ['Wrap', 2.0411634631740092e-05], ['++n)', 2.0411634631740092e-05], ['CHECK_CONSTR_CONCEPT', 2.0411634631740092e-05], ['CHECK_CONSTR_ARGS', 2.0411634631740092e-05], ['c1', 2.0411634631740092e-05], ['c2', 2.0411634631740092e-05], ['len2', 2.0411634631740092e-05], ['Register', 2.0411634631740092e-05], ['satisfaction', 2.0411634631740092e-05], ['%qE', 2.0411634631740092e-05], ['placeholder,', 2.0411634631740092e-05], ['satisfy_constraint', 2.0411634631740092e-05], ['Turn', 2.0411634631740092e-05], ['failure.', 2.0411634631740092e-05], ['correctly.', 2.0411634631740092e-05], ['FUNCTION_DECL);', 2.0411634631740092e-05], ['(elide_constraint_failure_p())', 2.0411634631740092e-05], ['Can', 2.0411634631740092e-05], ['goal.', 2.0411634631740092e-05], ['term.', 2.0411634631740092e-05], ['slot', 2.0411634631740092e-05], ['invalid;', 2.0411634631740092e-05], ['incomplete', 2.0411634631740092e-05], ['entire', 2.0411634631740092e-05], ['state.', 2.0411634631740092e-05], ['LEFT', 2.0411634631740092e-05], ['"varasm.h"', 2.0411634631740092e-05], ['(*node);', 2.0411634631740092e-05], ['TREE_INT_CST_LOW', 2.0411634631740092e-05], ['(*node));', 2.0411634631740092e-05], ['ATTRIBUTE_UNUSED,', 2.0411634631740092e-05], ['(DECL_SOURCE_LOCATION', 2.0411634631740092e-05], ['symtab_node::get', 2.0411634631740092e-05], ["`gcc.builtins'", 2.0411634631740092e-05], ['casting', 2.0411634631740092e-05], ["Can't", 2.0411634631740092e-05], ['size)', 2.0411634631740092e-05], ['modules', 2.0411634631740092e-05], ['*m)', 2.0411634631740092e-05], ['Loc', 2.0411634631740092e-05], ['initializers,', 2.0411634631740092e-05], ['lang_hooks.types.type_for_size', 2.0411634631740092e-05], ['(long_double_type_node);', 2.0411634631740092e-05], ['interface,', 2.0411634631740092e-05], ['make_struct_type', 2.0411634631740092e-05], ['size_zero_node,', 2.0411634631740092e-05], ['VALUE)', 2.0411634631740092e-05], ['ARG10,', 2.0411634631740092e-05], ['maybe', 2.0411634631740092e-05], ['input_location;', 2.0411634631740092e-05], ['symbols.', 2.0411634631740092e-05], ['(decl->storage_class', 2.0411634631740092e-05], ['build_float_cst', 2.0411634631740092e-05], ['(ce,', 2.0411634631740092e-05], ['type->toBasetype', 2.0411634631740092e-05], ['inherited', 2.0411634631740092e-05], ['delegate_object', 2.0411634631740092e-05], ['Tdelegate)', 2.0411634631740092e-05], ['(ctype));', 2.0411634631740092e-05], ['lvalue_p', 2.0411634631740092e-05], ['effects', 2.0411634631740092e-05], ['rhs;', 2.0411634631740092e-05], ['memcmp.', 2.0411634631740092e-05], ['(t2),', 2.0411634631740092e-05], ['(t2,', 2.0411634631740092e-05], ['(build1', 2.0411634631740092e-05], ['fill', 2.0411634631740092e-05], ['empty,', 2.0411634631740092e-05], ['constant_p', 2.0411634631740092e-05], ['ANON_AGGR_TYPE_P', 2.0411634631740092e-05], ['(field)))', 2.0411634631740092e-05], ['(field),', 2.0411634631740092e-05], ['TARGET_EXPR_INITIAL', 2.0411634631740092e-05], ['fold_build2_loc', 2.0411634631740092e-05], ['COMPOUND_EXPR,', 2.0411634631740092e-05], ['Assign', 2.0411634631740092e-05], ['(etype)', 2.0411634631740092e-05], ['get_function_type', 2.0411634631740092e-05], ['dsym', 2.0411634631740092e-05], ['d_build_call_expr', 2.0411634631740092e-05], ['*arg', 2.0411634631740092e-05], ['basetype', 2.0411634631740092e-05], ['fdparent', 2.0411634631740092e-05], ['get_frameinfo', 2.0411634631740092e-05], ['(field', 2.0411634631740092e-05], ['(ffi))', 2.0411634631740092e-05], ['field);', 2.0411634631740092e-05], ['usual', 2.0411634631740092e-05], ['FRAMEINFO_CREATES_FRAME', 2.0411634631740092e-05], ['(type0)', 2.0411634631740092e-05], ['effect', 2.0411634631740092e-05], ['Fall', 2.0411634631740092e-05], ['(etype),', 2.0411634631740092e-05], ['totype->toChars', 2.0411634631740092e-05], ['()->size', 2.0411634631740092e-05], ['increasing', 2.0411634631740092e-05], ['ATTRIBUTE_GCC_DIAG(2,3)', 2.0411634631740092e-05], ['xformat', 2.0411634631740092e-05], ['xasprintf', 2.0411634631740092e-05], ['compilation.', 2.0411634631740092e-05], ['*buffer)', 2.0411634631740092e-05], ['((unsigned)', 2.0411634631740092e-05], ['binding_level', 2.0411634631740092e-05], ['d_option.deps_target->writeByte', 2.0411634631740092e-05], ['(level', 2.0411634631740092e-05], ['Or', 2.0411634631740092e-05], ['wants', 2.0411634631740092e-05], ['(global.errors)', 2.0411634631740092e-05], ['deferred', 2.0411634631740092e-05], ['break', 2.0411634631740092e-05], ['Types', 2.0411634631740092e-05], ['Tclass);', 2.0411634631740092e-05], ['(cd->isCPPclass', 2.0411634631740092e-05], ['interchanging', 2.0411634631740092e-05], ['ratio', 2.0411634631740092e-05], ['re;', 2.0411634631740092e-05], ['(re);', 2.0411634631740092e-05], ['*loop)', 2.0411634631740092e-05], ['use_operand_p', 2.0411634631740092e-05], ['use_p;', 2.0411634631740092e-05], ['(is_gimple_debug', 2.0411634631740092e-05], ['E', 2.0411634631740092e-05], ['STMT', 2.0411634631740092e-05], ['gsi;', 2.0411634631740092e-05], ['(gsi', 2.0411634631740092e-05], ['(&gsi))', 2.0411634631740092e-05], ['*stmt', 2.0411634631740092e-05], ['undo', 2.0411634631740092e-05], ['SSA_NAME_DEF_STMT', 2.0411634631740092e-05], ['(SSA_NAME_DEF_STMT', 2.0411634631740092e-05], ['(phi,', 2.0411634631740092e-05], ['(m_loop,', 2.0411634631740092e-05], ['gimple_assign_rhs_code', 2.0411634631740092e-05], ['unlikely', 2.0411634631740092e-05], ['(&gsi,', 2.0411634631740092e-05], ['datarefs)', 2.0411634631740092e-05], ['o_idx,', 2.0411634631740092e-05], ['vec<ddr_p>', 2.0411634631740092e-05], ['(ddr)', 2.0411634631740092e-05], ['loop;', 2.0411634631740092e-05], ['gimple_opt_pass', 2.0411634631740092e-05], ['Collect', 2.0411634631740092e-05], ['(start_loop,', 2.0411634631740092e-05], ['longdouble::set', 2.0411634631740092e-05], ['SKIPOPT;', 2.0411634631740092e-05], ['adds', 2.0411634631740092e-05], ['Target::ptrsize;', 2.0411634631740092e-05], ['d_int64', 2.0411634631740092e-05], ['td', 2.0411634631740092e-05], ['IDENTIFIER_PRETTY_NAME', 2.0411634631740092e-05], ['d->members->dim;', 2.0411634631740092e-05], ['(*d->members)[i];', 2.0411634631740092e-05], ['(d->type->ty', 2.0411634631740092e-05], ['Terror)', 2.0411634631740092e-05], ['(d->sinit);', 2.0411634631740092e-05], ['*member', 2.0411634631740092e-05], ['DECL_ASSEMBLER_NAME', 2.0411634631740092e-05], ['declare_local_var', 2.0411634631740092e-05], ['addressable.', 2.0411634631740092e-05], ['DECL_VISIBILITY', 2.0411634631740092e-05], ['base_vtable_offset', 2.0411634631740092e-05], ['(decl->vtblsym)', 2.0411634631740092e-05], ['"Z");', 2.0411634631740092e-05], ['(cd));', 2.0411634631740092e-05], ['make_decl_one_only', 2.0411634631740092e-05], ['e->e2->type->toBasetype', 2.0411634631740092e-05], ['t2));', 2.0411634631740092e-05], ['newlength', 2.0411634631740092e-05], ['Taking', 2.0411634631740092e-05], ['new_call;', 2.0411634631740092e-05], ['tb,', 2.0411634631740092e-05], ['Pointer', 2.0411634631740092e-05], ['intrinsics', 2.0411634631740092e-05], ['END_BUILTINS;', 2.0411634631740092e-05], ['END_BUILTINS);', 2.0411634631740092e-05], ['parameter,', 2.0411634631740092e-05], ['_d_dso_registry', 2.0411634631740092e-05], ['expr_list', 2.0411634631740092e-05], ['finish_aggregate_type', 2.0411634631740092e-05], ['(flags,', 2.0411634631740092e-05], ['raw_stride', 2.0411634631740092e-05], ['Information', 2.0411634631740092e-05], ['versioning.', 2.0411634631740092e-05], ['maybe_get_assign', 2.0411634631740092e-05], ['strides,', 2.0411634631740092e-05], ['d_label_entry', 2.0411634631740092e-05], ['lowers', 2.0411634631740092e-05], ['(s->_body)', 2.0411634631740092e-05], ['(s->_body);', 2.0411634631740092e-05], ['initializations', 2.0411634631740092e-05], ['(build_address', 2.0411634631740092e-05], ['(id->vtbl.dim', 2.0411634631740092e-05], ['this->init_', 2.0411634631740092e-05], ['this->layout_string', 2.0411634631740092e-05], ['(ti->next));', 2.0411634631740092e-05], ['function(Object)', 2.0411634631740092e-05], ['layout_aggregate_members', 2.0411634631740092e-05], ['RECORD_TYPE);', 2.0411634631740092e-05], ['UTF-8', 2.0411634631740092e-05], ['integer,', 2.0411634631740092e-05], ['t->sym);', 2.0411634631740092e-05], ['Gcc_tree(t)', 2.0411634631740092e-05], ['void_type_node', 2.0411634631740092e-05], ['bool)', 2.0411634631740092e-05], ['btype)', 2.0411634631740092e-05], ['gcc_assert(field', 2.0411634631740092e-05], ['(TREE_CODE(type_tree)', 2.0411634631740092e-05], ['anyhow.', 2.0411634631740092e-05], ['pop_cfun();', 2.0411634631740092e-05], ['enclosing,', 2.0411634631740092e-05], ['DECL_EXTERNAL(decl)', 2.0411634631740092e-05], ['TREE_PUBLIC(decl)', 2.0411634631740092e-05], ['TREE_USED(decl)', 2.0411634631740092e-05], ['compute_reloc_for_constant', 2.0411634631740092e-05], ['is_address_taken,', 2.0411634631740092e-05], ['variable(Named_object*);', 2.0411634631740092e-05], ['Ast_dump_context', 2.0411634631740092e-05], ['methods,', 2.0411634631740092e-05], ['unsigned>', 2.0411634631740092e-05], ['(ins.second)', 2.0411634631740092e-05], ['tag', 2.0411634631740092e-05], ['t->named_type();', 2.0411634631740092e-05], ['bad', 2.0411634631740092e-05], ['this->emitpre(notag,', 2.0411634631740092e-05], ['parameters->begin();', 2.0411634631740092e-05], ["node's", 2.0411634631740092e-05], ['ve', 2.0411634631740092e-05], ['is_address_taken', 2.0411634631740092e-05], ['TODO(cmang):', 2.0411634631740092e-05], ['this->type();', 2.0411634631740092e-05], ['nc.to_unsigned_long(&v)', 2.0411634631740092e-05], ['Node*>', 2.0411634631740092e-05], ['gogo_(gogo),', 2.0411634631740092e-05], ['roots', 2.0411634631740092e-05], ['Array_index_expression*', 2.0411634631740092e-05], ['this->context_->gogo();', 2.0411634631740092e-05], ['debug_level', 2.0411634631740092e-05], ['n->ast_format(gogo).c_str());', 2.0411634631740092e-05], ['(gogo->compiling_runtime()', 2.0411634631740092e-05], ['content', 2.0411634631740092e-05], ['dst->ast_format(gogo).c_str(),', 2.0411634631740092e-05], ['src->ast_format(gogo).c_str(),', 2.0411634631740092e-05], ['(src->expr()', 2.0411634631740092e-05], ['blank', 2.0411634631740092e-05], ['src,', 2.0411634631740092e-05], ['heap",', 2.0411634631740092e-05], ['mod_loop_depth;', 2.0411634631740092e-05], ['(fn->is_function_declaration())', 2.0411634631740092e-05], ['(no->package()', 2.0411634631740092e-05], ['pkgpath,', 2.0411634631740092e-05], ['Package*>&', 2.0411634631740092e-05], ['(type->is_abstract())', 2.0411634631740092e-05], ['(type->classification()', 2.0411634631740092e-05], ['std::vector<Named_object*>*', 2.0411634631740092e-05], ['(!ins.second)', 2.0411634631740092e-05], ['edges', 2.0411634631740092e-05], ['pci', 2.0411634631740092e-05], ['Field_reference_expression*', 2.0411634631740092e-05], ['EXPRESSION_ERROR)', 2.0411634631740092e-05], ['mpz_clear(ival);', 2.0411634631740092e-05], ['Expression::make_boolean(false,', 2.0411634631740092e-05], ['type_(type)', 2.0411634631740092e-05], ['this->report_error(_("invalid', 2.0411634631740092e-05], ['context->function();', 2.0411634631740092e-05], ['var_ref', 2.0411634631740092e-05], ['do_get_backend(Translate_context*);', 2.0411634631740092e-05], ['(no->is_function())', 2.0411634631740092e-05], ['uintptr_type', 2.0411634631740092e-05], ['bvar;', 2.0411634631740092e-05], ['do_dump_expression(Ast_dump_context*', 2.0411634631740092e-05], ['(imp->version()', 2.0411634631740092e-05], ['"bad', 2.0411634631740092e-05], ['constant");', 2.0411634631740092e-05], ['(this->is_error_expression()', 2.0411634631740092e-05], ['added_type', 2.0411634631740092e-05], ['location));', 2.0411634631740092e-05], ['(type->is_string_type()', 2.0411634631740092e-05], ['Runtime::make_call(code,', 2.0411634631740092e-05], ['ast_dump_context->dump_expression(this->expr_);', 2.0411634631740092e-05], ['bool*', 2.0411634631740092e-05], ['right_type;', 2.0411634631740092e-05], ['left_val;', 2.0411634631740092e-05], ['right_val;', 2.0411634631740092e-05], ['(left_type->interface_type()', 2.0411634631740092e-05], ['this->left_,', 2.0411634631740092e-05], ['Report', 2.0411634631740092e-05], ['this->exprs_->begin();', 2.0411634631740092e-05], ['this->exprs_->end();', 2.0411634631740092e-05], ['Named_object*>', 2.0411634631740092e-05], ['sfl', 2.0411634631740092e-05], ['Struct_field_list();', 2.0411634631740092e-05], ['Type::make_struct_type(sfl,', 2.0411634631740092e-05], ['BUILTIN_PRINT:', 2.0411634631740092e-05], ['BUILTIN_PRINTLN:', 2.0411634631740092e-05], ['BUILTIN_APPEND:', 2.0411634631740092e-05], ['BUILTIN_LEN:', 2.0411634631740092e-05], ['BUILTIN_CAP:', 2.0411634631740092e-05], ['flatten', 2.0411634631740092e-05], ['++pa,', 2.0411634631740092e-05], ['arg->type();', 2.0411634631740092e-05], ['BUILTIN_COMPLEX:', 2.0411634631740092e-05], ['BUILTIN_REAL:', 2.0411634631740092e-05], ['BUILTIN_IMAG:', 2.0411634631740092e-05], ['(%s)",', 2.0411634631740092e-05], ['wrapper', 2.0411634631740092e-05], ['this->args_', 2.0411634631740092e-05], ['&val);', 2.0411634631740092e-05], ['Expression::make_temporary_reference(ts,', 2.0411634631740092e-05], ['this->index_,', 2.0411634631740092e-05], ['gogo->backend()->convert_expression(int_btype,', 2.0411634631740092e-05], ['this->get_map_type();', 2.0411634631740092e-05], ['this->type_->get_backend(gogo);', 2.0411634631740092e-05], ['++pf)', 2.0411634631740092e-05], ['struct"));', 2.0411634631740092e-05], ['long>*', 2.0411634631740092e-05], ['flattening', 2.0411634631740092e-05], ['(type->named_type()', 2.0411634631740092e-05], ['go_error_at(index_expr->location(),', 2.0411634631740092e-05], ['ptrmask', 2.0411634631740092e-05], ['NC_INVALID:', 2.0411634631740092e-05], ['Express', 2.0411634631740092e-05], ['(issue_error)', 2.0411634631740092e-05], ['"main"', 2.0411634631740092e-05], ['pvar', 2.0411634631740092e-05], ['go_error_at(var->location(),', 2.0411634631740092e-05], ['std::vector<Bstatement*>', 2.0411634631740092e-05], ['go_assert(!this->functions_.empty());', 2.0411634631740092e-05], ['label_name,', 2.0411634631740092e-05], ['n.c_str());', 2.0411634631740092e-05], ['Statement_inserter', 2.0411634631740092e-05], ['hold_inserter;', 2.0411634631740092e-05], ['*pexpr', 2.0411634631740092e-05], ['named_function);', 2.0411634631740092e-05], ['end_loc);', 2.0411634631740092e-05], ['ifb->name().c_str());', 2.0411634631740092e-05], ['(this->init_', 2.0411634631740092e-05], ['B.', 1.7009695526450076e-05], ['bug', 1.7009695526450076e-05], ['systems', 1.7009695526450076e-05], ['versions', 1.7009695526450076e-05], ['same.', 1.7009695526450076e-05], ['producing', 1.7009695526450076e-05], ['J', 1.7009695526450076e-05], ['T0', 1.7009695526450076e-05], ['T2', 1.7009695526450076e-05], ['TwentySeven', 1.7009695526450076e-05], ['OneUlp', 1.7009695526450076e-05], ['F6', 1.7009695526450076e-05], ['GDiv', 1.7009695526450076e-05], ['GAddSub', 1.7009695526450076e-05], ['RMult', 1.7009695526450076e-05], ['RDiv', 1.7009695526450076e-05], ['Z9', 1.7009695526450076e-05], ['RAddSub', 1.7009695526450076e-05], ['(the', 1.7009695526450076e-05], ['constants,', 1.7009695526450076e-05], ['Random', 1.7009695526450076e-05], ['======================================================================', 1.7009695526450076e-05], ['32;', 1.7009695526450076e-05], ['(sizeof', 1.7009695526450076e-05], ['hex', 1.7009695526450076e-05], ['real_from_integer', 1.7009695526450076e-05], ['real_to_target', 1.7009695526450076e-05], ['&f,', 1.7009695526450076e-05], ["'-'", 1.7009695526450076e-05], ['(&ai,', 1.7009695526450076e-05], ['real_format_for_mode[MODE', 1.7009695526450076e-05], ['QFmode];', 1.7009695526450076e-05], ['(fmt->p', 1.7009695526450076e-05], ['fmt->log2_b', 1.7009695526450076e-05], ['bool);', 1.7009695526450076e-05], ['int(sizeof(T)', 1.7009695526450076e-05], ['available.', 1.7009695526450076e-05], ['typename', 1.7009695526450076e-05], ['integer.', 1.7009695526450076e-05], ['(f', 1.7009695526450076e-05], ['zero;', 1.7009695526450076e-05], ['d;', 1.7009695526450076e-05], ['sqrt', 1.7009695526450076e-05], ['ld;', 1.7009695526450076e-05], ['(FLOAT', 1.7009695526450076e-05], ['y', 1.7009695526450076e-05], ['wrap', 1.7009695526450076e-05], ['thing', 1.7009695526450076e-05], ['Three;', 1.7009695526450076e-05], ['W;', 1.7009695526450076e-05], ['X,', 1.7009695526450076e-05], ['(int,', 1.7009695526450076e-05], ['SqXMinX', 1.7009695526450076e-05], ['(MinusOne', 1.7009695526450076e-05], ['closest', 1.7009695526450076e-05], ['Half))', 1.7009695526450076e-05], ['normalized', 1.7009695526450076e-05], ['Yes)', 1.7009695526450076e-05], ['Done', 1.7009695526450076e-05], ['differs', 1.7009695526450076e-05], ['(OneAndHalf', 1.7009695526450076e-05], ['(StickyBit', 1.7009695526450076e-05], ['(', 1.7009695526450076e-05], ['BInvrse;', 1.7009695526450076e-05], ['H;', 1.7009695526450076e-05], ['(E1', 1.7009695526450076e-05], ['UfThold.str());', 1.7009695526450076e-05], ['Z.str());', 1.7009695526450076e-05], ['V9.str());', 1.7009695526450076e-05], ['("This', 1.7009695526450076e-05], ['V;', 1.7009695526450076e-05], ['Number', 1.7009695526450076e-05], ['(SqEr', 1.7009695526450076e-05], ['X2', 1.7009695526450076e-05], ['differ', 1.7009695526450076e-05], ['occurred', 1.7009695526450076e-05], ['evaluating', 1.7009695526450076e-05], ['Malcolm', 1.7009695526450076e-05], ['<dmalcolm@redhat.com>.', 1.7009695526450076e-05], ['"gimple.h"', 1.7009695526450076e-05], ['dump_context::get', 1.7009695526450076e-05], ['items', 1.7009695526450076e-05], ["that's", 1.7009695526450076e-05], ['prevents', 1.7009695526450076e-05], ['6,', 1.7009695526450076e-05], ['pretty_printer', 1.7009695526450076e-05], ['tmp;', 1.7009695526450076e-05], ['(LOCATION_LOCUS', 1.7009695526450076e-05], ['LOC', 1.7009695526450076e-05], ['BLOCK', 1.7009695526450076e-05], ['location_to_json', 1.7009695526450076e-05], ['child', 1.7009695526450076e-05], ['opt_pass', 1.7009695526450076e-05], ['(info);', 1.7009695526450076e-05], ['apply', 1.7009695526450076e-05], ['comparator', 1.7009695526450076e-05], ['necessarily', 1.7009695526450076e-05], ['cmp_fn', 1.7009695526450076e-05], ['holding', 1.7009695526450076e-05], ['*e1,', 1.7009695526450076e-05], ['*e2)', 1.7009695526450076e-05], ['(c->size', 1.7009695526450076e-05], ['e3', 1.7009695526450076e-05], ['intptr_t', 1.7009695526450076e-05], ['(e0,', 1.7009695526450076e-05], ['sorted', 1.7009695526450076e-05], ['(8);', 1.7009695526450076e-05], ['*base', 1.7009695526450076e-05], ['2017-2019', 1.7009695526450076e-05], ['Overwrite', 1.7009695526450076e-05], ['print_dec', 1.7009695526450076e-05], ['print_decs', 1.7009695526450076e-05], ['file);', 1.7009695526450076e-05], ['buf[WIDE_INT_PRINT_BUFFER_SIZE];', 1.7009695526450076e-05], ['&val,', 1.7009695526450076e-05], ['combination', 1.7009695526450076e-05], ['UNSIGNED', 1.7009695526450076e-05], ['mask,', 1.7009695526450076e-05], ['may_be_nonzero', 1.7009695526450076e-05], ['wi::max', 1.7009695526450076e-05], ['product', 1.7009695526450076e-05], ['[RES_LB,', 1.7009695526450076e-05], ['&res_lb,', 1.7009695526450076e-05], ['&res_ub,', 1.7009695526450076e-05], ['vr1_lb,', 1.7009695526450076e-05], ['res_ub,', 1.7009695526450076e-05], ['min0', 1.7009695526450076e-05], ['max0', 1.7009695526450076e-05], ['NOTE:', 1.7009695526450076e-05], ['figure', 1.7009695526450076e-05], ['pretty', 1.7009695526450076e-05], ['MULT_EXPR,', 1.7009695526450076e-05], ["We're", 1.7009695526450076e-05], ['mask.', 1.7009695526450076e-05], ['above.', 1.7009695526450076e-05], ['(n,', 1.7009695526450076e-05], ['pair', 1.7009695526450076e-05], ['&vr1_min,', 1.7009695526450076e-05], ['(vr1_min,', 1.7009695526450076e-05], ['vr0_min;', 1.7009695526450076e-05], ['vr0_min,', 1.7009695526450076e-05], ['vr0_max,', 1.7009695526450076e-05], ['vr1_min,', 1.7009695526450076e-05], ['described', 1.7009695526450076e-05], ['&wmin,', 1.7009695526450076e-05], ['&wmax,', 1.7009695526450076e-05], ['limits', 1.7009695526450076e-05], ['indicate', 1.7009695526450076e-05], ['AND', 1.7009695526450076e-05], ['(wi::ges_p', 1.7009695526450076e-05], ['do.', 1.7009695526450076e-05], ['((mode', 1.7009695526450076e-05], ['XLEN', 1.7009695526450076e-05], ['BUFFER', 1.7009695526450076e-05], ['*buffer,', 1.7009695526450076e-05], ['below.', 1.7009695526450076e-05], ['absolute', 1.7009695526450076e-05], ['us.', 1.7009695526450076e-05], ['slightly', 1.7009695526450076e-05], ['efficient', 1.7009695526450076e-05], ['fact', 1.7009695526450076e-05], ['gcc_checking_assert', 1.7009695526450076e-05], ['xlen', 1.7009695526450076e-05], ['1],', 1.7009695526450076e-05], ['note', 1.7009695526450076e-05], ['op1len)', 1.7009695526450076e-05], ['VAL,', 1.7009695526450076e-05], ['OFFSET', 1.7009695526450076e-05], ['val[len]', 1.7009695526450076e-05], ['op1mask', 1.7009695526450076e-05], ['val[l1]', 1.7009695526450076e-05], ['l1--;', 1.7009695526450076e-05], ['(overflow)', 1.7009695526450076e-05], ['wi::OVF_OVERFLOW', 1.7009695526450076e-05], ['o0)', 1.7009695526450076e-05], ['shift;', 1.7009695526450076e-05], ['wi_unpack', 1.7009695526450076e-05], ['in_len,', 1.7009695526450076e-05], ['&=', 1.7009695526450076e-05], ['j,', 1.7009695526450076e-05], ['(op1)', 1.7009695526450076e-05], ['(high)', 1.7009695526450076e-05], ['(v,', 1.7009695526450076e-05], ['half_blocks_needed;', 1.7009695526450076e-05], ['half_blocks_needed]', 1.7009695526450076e-05], ['algorithm', 1.7009695526450076e-05], ['64', 1.7009695526450076e-05], ['clz_hwi', 1.7009695526450076e-05], ['qhat', 1.7009695526450076e-05], ['dividend_prec);', 1.7009695526450076e-05], ['divisor', 1.7009695526450076e-05], ['(remainder)', 1.7009695526450076e-05], ['(quotient)', 1.7009695526450076e-05], ['quotient_len', 1.7009695526450076e-05], ['Split', 1.7009695526450076e-05], ['easier', 1.7009695526450076e-05], ['specially.', 1.7009695526450076e-05], ['Work', 1.7009695526450076e-05], ['redundant', 1.7009695526450076e-05], ['<class', 1.7009695526450076e-05], ['VALUE_TYPE>', 1.7009695526450076e-05], ['from_int<VALUE_TYPE>', 1.7009695526450076e-05], ['Using', 1.7009695526450076e-05], ['wi::add', 1.7009695526450076e-05], ['16,', 1.7009695526450076e-05], ['(17,', 1.7009695526450076e-05], ['stmt_list,', 1.7009695526450076e-05], ['"brig-builtins.h"', 1.7009695526450076e-05], ['gccbrig_hsa_opcode_op_output_p', 1.7009695526450076e-05], ['(built_in,', 1.7009695526450076e-05], ['instr_expr);', 1.7009695526450076e-05], ['visit_element', 1.7009695526450076e-05], ['arithmetics', 1.7009695526450076e-05], ['vector,', 1.7009695526450076e-05], ['shuffle', 1.7009695526450076e-05], ['format.', 1.7009695526450076e-05], ['VEC_PERM_EXPR', 1.7009695526450076e-05], ['times', 1.7009695526450076e-05], ['(mask_vec_type,', 1.7009695526450076e-05], ['(VEC_PERM_EXPR,', 1.7009695526450076e-05], ['stores', 1.7009695526450076e-05], ['vec_type', 1.7009695526450076e-05], ['operands[0]);', 1.7009695526450076e-05], ['Is', 1.7009695526450076e-05], ['instruction,', 1.7009695526450076e-05], ['brig_type,', 1.7009695526450076e-05], ['build_vector_from_val', 1.7009695526450076e-05], ['unsafe', 1.7009695526450076e-05], ['Assuming', 1.7009695526450076e-05], ['instructions,', 1.7009695526450076e-05], ['instructions.', 1.7009695526450076e-05], ['brig_inst_type', 1.7009695526450076e-05], ['(brig_inst_type);', 1.7009695526450076e-05], ['RETURN_EXPR)', 1.7009695526450076e-05], ['things', 1.7009695526450076e-05], ['belong', 1.7009695526450076e-05], ['example', 1.7009695526450076e-05], ['BRIG_TYPE_S8:', 1.7009695526450076e-05], ['BRIG_TYPE_U8:', 1.7009695526450076e-05], ['BRIG_TYPE_S16:', 1.7009695526450076e-05], ['BRIG_TYPE_U16:', 1.7009695526450076e-05], ['BRIG_TYPE_S32:', 1.7009695526450076e-05], ['BRIG_TYPE_U32:', 1.7009695526450076e-05], ['BrigInstSourceType', 1.7009695526450076e-05], ['registers', 1.7009695526450076e-05], ['(instr_expr),', 1.7009695526450076e-05], ['cst;', 1.7009695526450076e-05], ['(mask_inner_type,', 1.7009695526450076e-05], ['build_vector_from_ctor', 1.7009695526450076e-05], ['*operand_entries', 1.7009695526450076e-05], ['build_tree_operand', 1.7009695526450076e-05], ['m_parent.get_brig_code_entry', 1.7009695526450076e-05], ['etype,', 1.7009695526450076e-05], ['(call);', 1.7009695526450076e-05], ['BRIG_TYPE_F16;', 1.7009695526450076e-05], ['BRIG_TYPE_F16)', 1.7009695526450076e-05], ['"brig-machine.h"', 1.7009695526450076e-05], ['(var_name);', 1.7009695526450076e-05], ['BRIG_INST', 1.7009695526450076e-05], ['element);', 1.7009695526450076e-05], ['TREE_VEC', 1.7009695526450076e-05], ['make_tree_vec', 1.7009695526450076e-05], ['(vec,', 1.7009695526450076e-05], ['kernarg', 1.7009695526450076e-05], ['low', 1.7009695526450076e-05], ['low);', 1.7009695526450076e-05], ['(tree_element_type,', 1.7009695526450076e-05], ['16;', 1.7009695526450076e-05], ['assuming', 1.7009695526450076e-05], ['performs', 1.7009695526450076e-05], ['BRIG_ALU_FTZ;', 1.7009695526450076e-05], ['*cmp', 1.7009695526450076e-05], ['is_fp16_arith', 1.7009695526450076e-05], ['src_type;', 1.7009695526450076e-05], ['fp16', 1.7009695526450076e-05], ['handling.', 1.7009695526450076e-05], ['LABEL_DECL', 1.7009695526450076e-05], ['assigning', 1.7009695526450076e-05], ['well.', 1.7009695526450076e-05], ['BITS_PER_UNIT));', 1.7009695526450076e-05], ['output_element_type', 1.7009695526450076e-05], ['Generates', 1.7009695526450076e-05], ['float.', 1.7009695526450076e-05], ['(TYPE_UNSIGNED', 1.7009695526450076e-05], ['Parse', 1.7009695526450076e-05], ['(m_parent);', 1.7009695526450076e-05], ['expressed', 1.7009695526450076e-05], ['(var_name,', 1.7009695526450076e-05], ['is_definition', 1.7009695526450076e-05], ['bytes_consumed;', 1.7009695526450076e-05], ['func_name', 1.7009695526450076e-05], ['get_identifier_with_length', 1.7009695526450076e-05], ['NULL_TREE));', 1.7009695526450076e-05], ['(arg_arg)', 1.7009695526450076e-05], ['resdecl;', 1.7009695526450076e-05], ['idea', 1.7009695526450076e-05], ['convention', 1.7009695526450076e-05], ['brig_directive_variable_handler', 1.7009695526450076e-05], ['arg_var);', 1.7009695526450076e-05], ['restrict_char_ptr);', 1.7009695526450076e-05], ['uint32_type_node);', 1.7009695526450076e-05], ['memory,', 1.7009695526450076e-05], ['too.', 1.7009695526450076e-05], ['(group_base_arg)', 1.7009695526450076e-05], ['(group_local_offset_arg)', 1.7009695526450076e-05], ['(private_base_arg)', 1.7009695526450076e-05], ['(arg))', 1.7009695526450076e-05], ['(arg)', 1.7009695526450076e-05], ['(LABEL_EXPR,', 1.7009695526450076e-05], ['(stmts);', 1.7009695526450076e-05], ['"gimplify.h"', 1.7009695526450076e-05], ['m_next_kernarg_offset', 1.7009695526450076e-05], ['(alignment', 1.7009695526450076e-05], ['unnecessary', 1.7009695526450076e-05], ['guaranteed', 1.7009695526450076e-05], ['(reg);', 1.7009695526450076e-05], ['>::const_iterator', 1.7009695526450076e-05], ['it++)', 1.7009695526450076e-05], ['ctx', 1.7009695526450076e-05], ['m_context_arg,', 1.7009695526450076e-05], ['(ptr_type,', 1.7009695526450076e-05], ['usage.', 1.7009695526450076e-05], ['executes', 1.7009695526450076e-05], ['kernel.', 1.7009695526450076e-05], ['also.', 1.7009695526450076e-05], ['perfect', 1.7009695526450076e-05], ['std::endl', 1.7009695526450076e-05], ['(m_is_kernel)', 1.7009695526450076e-05], ['(name))', 1.7009695526450076e-05], ['not,', 1.7009695526450076e-05], ['(operands[1],', 1.7009695526450076e-05], ['int_constant_value', 1.7009695526450076e-05], ['finding', 1.7009695526450076e-05], ['s_custom_builtins.find', 1.7009695526450076e-05], ['elements.push_back', 1.7009695526450076e-05], ['BIT_AND_EXPR;', 1.7009695526450076e-05], ['&inst', 1.7009695526450076e-05], ['exponent', 1.7009695526450076e-05], ['(inst.segment', 1.7009695526450076e-05], ['m_cf', 1.7009695526450076e-05], ['m_next_private_offset', 1.7009695526450076e-05], ['(16);', 1.7009695526450076e-05], ['16);', 1.7009695526450076e-05], ['safely', 1.7009695526450076e-05], ['&func_handler},', 1.7009695526450076e-05], ['handler.', 1.7009695526450076e-05], ['g)', 1.7009695526450076e-05], ['Assumes', 1.7009695526450076e-05], ['(a', 1.7009695526450076e-05], ['var_decl);', 1.7009695526450076e-05], ['potential', 1.7009695526450076e-05], ['(p,', 1.7009695526450076e-05], ['finished', 1.7009695526450076e-05], ['nargs,', 1.7009695526450076e-05], ['fail', 1.7009695526450076e-05], ['CALL_EXPR_FN', 1.7009695526450076e-05], ['(decl)))', 1.7009695526450076e-05], ['shell', 1.7009695526450076e-05], ['running', 1.7009695526450076e-05], ['libraries', 1.7009695526450076e-05], ['macros', 1.7009695526450076e-05], ['tm_file', 1.7009695526450076e-05], ['driver', 1.7009695526450076e-05], ['target-dependent', 1.7009695526450076e-05], ['model.', 1.7009695526450076e-05], ['et', 1.7009695526450076e-05], ['defaults', 1.7009695526450076e-05], ['>&2', 1.7009695526450076e-05], ['updated', 1.7009695526450076e-05], ['${with_abi}', 1.7009695526450076e-05], ['--with-abi=$with_abi"', 1.7009695526450076e-05], ['issues', 1.7009695526450076e-05], ['introduced', 1.7009695526450076e-05], ['x$gnu_ld', 1.7009695526450076e-05], ['use_gcc_stdint=provide', 1.7009695526450076e-05], ['"default";', 1.7009695526450076e-05], ['ilp32', 1.7009695526450076e-05], ['lp64', 1.7009695526450076e-05], ["'s/^,//'`", 1.7009695526450076e-05], ['multilib', 1.7009695526450076e-05], ['arm/arm.h"', 1.7009695526450076e-05], ['./sysroot-suffix.h"', 1.7009695526450076e-05], ['x$enable_targets', 1.7009695526450076e-05], ['xall;', 1.7009695526450076e-05], ['x$with_cpu_64', 1.7009695526450076e-05], ['$x86_cpus', 1.7009695526450076e-05], ['$x86_64_archs', 1.7009695526450076e-05], ['--with-cpu=$with_cpu,', 1.7009695526450076e-05], ['arch_32', 1.7009695526450076e-05], ['ia64/sysv4.h', 1.7009695526450076e-05], ['default_mips_abi=n32', 1.7009695526450076e-05], ['MIPS_ABI_DEFAULT=ABI_N32"', 1.7009695526450076e-05], ['MIPS_ABI_DEFAULT=ABI_O64"', 1.7009695526450076e-05], ['sparc/long-double-switch.opt"', 1.7009695526450076e-05], ['sparc/t-sparc"', 1.7009695526450076e-05], ['i[34567]86-*-*', 1.7009695526450076e-05], ['supported_defaults="abi', 1.7009695526450076e-05], ["'s/^[^,]*,[", 1.7009695526450076e-05], ["]*//'", 1.7009695526450076e-05], ['selector', 1.7009695526450076e-05], ['specified,', 1.7009695526450076e-05], ['128;', 1.7009695526450076e-05], ['(tree_type))', 1.7009695526450076e-05], ['brigVar->segment', 1.7009695526450076e-05], ['initializers', 1.7009695526450076e-05], ['tree_to_uhwi', 1.7009695526450076e-05], ['Must', 1.7009695526450076e-05], ['{"<stddef.h>",', 1.7009695526450076e-05], ['"<cstddef>"}', 1.7009695526450076e-05], ['themselves', 1.7009695526450076e-05], ['from,', 1.7009695526450076e-05], ['(DImode,', 1.7009695526450076e-05], ['start_sequence', 1.7009695526450076e-05], ['end_sequence', 1.7009695526450076e-05], ['const0_rtx);', 1.7009695526450076e-05], ['FOR_EACH_BB_FN', 1.7009695526450076e-05], ['BB_HEAD', 1.7009695526450076e-05], ['(cond)', 1.7009695526450076e-05], ['save', 1.7009695526450076e-05], ['(seq,', 1.7009695526450076e-05], ['(insn,', 1.7009695526450076e-05], ['there.', 1.7009695526450076e-05], ['let', 1.7009695526450076e-05], ['fix', 1.7009695526450076e-05], ['insns.', 1.7009695526450076e-05], ['(gcc::context', 1.7009695526450076e-05], ['(gen_move_insn', 1.7009695526450076e-05], ['(target,', 1.7009695526450076e-05], ['OPERANDS[3]', 1.7009695526450076e-05], ['*operands)', 1.7009695526450076e-05], ['MEM_ALIGN', 1.7009695526450076e-05], ['(Pmode);', 1.7009695526450076e-05], ['lab));', 1.7009695526450076e-05], ['alignment.', 1.7009695526450076e-05], ['(tmp0,', 1.7009695526450076e-05], ['(L_return));', 1.7009695526450076e-05], ['(SImode)));', 1.7009695526450076e-05], ['(gen_addsi3', 1.7009695526450076e-05], ['(current_addr,', 1.7009695526450076e-05], ['dest_addr,', 1.7009695526450076e-05], ['insn,', 1.7009695526450076e-05], ['ccreg_value', 1.7009695526450076e-05], ['ccreg.', 1.7009695526450076e-05], ['captured', 1.7009695526450076e-05], ['m_ccreg', 1.7009695526450076e-05], ['STORE_FLAG_VALUE', 1.7009695526450076e-05], ['Output', 1.7009695526450076e-05], ['recording', 1.7009695526450076e-05], ['infinite', 1.7009695526450076e-05], ['(BB_HEAD', 1.7009695526450076e-05], ['eliminating', 1.7009695526450076e-05], ['i))', 1.7009695526450076e-05], ['set_rtx', 1.7009695526450076e-05], ['bb)', 1.7009695526450076e-05], ['(ei);', 1.7009695526450076e-05], ['("[bb', 1.7009695526450076e-05], ['instantiating', 1.7009695526450076e-05], ['condition.', 1.7009695526450076e-05], ['(gt:SI', 1.7009695526450076e-05], ['same,', 1.7009695526450076e-05], ['reg_dead_after_insn', 1.7009695526450076e-05], ['dependency', 1.7009695526450076e-05], ['bb_entry', 1.7009695526450076e-05], ['empty.', 1.7009695526450076e-05], ['dead', 1.7009695526450076e-05], ['Tells', 1.7009695526450076e-05], ['split', 1.7009695526450076e-05], ['cbranch_trace&', 1.7009695526450076e-05], ['times.', 1.7009695526450076e-05], ['i->cstore.empty', 1.7009695526450076e-05], ['(i->cstore_type', 1.7009695526450076e-05], ['add_reg_note', 1.7009695526450076e-05], ['(trace.setcc.insn);', 1.7009695526450076e-05], ['(MUL_TYPE', 1.7009695526450076e-05], ['n1', 1.7009695526450076e-05], ['n2;', 1.7009695526450076e-05], ['("%s",', 1.7009695526450076e-05], ['xstrdup', 1.7009695526450076e-05], ['TEMPLATE_ID_EXPR)', 1.7009695526450076e-05], ['qualified', 1.7009695526450076e-05], ['ARGS.', 1.7009695526450076e-05], ['(not', 1.7009695526450076e-05], ['checked.', 1.7009695526450076e-05], ['parent,', 1.7009695526450076e-05], ['learn_logical_operation', 1.7009695526450076e-05], ['learn_implications', 1.7009695526450076e-05], ['cxt);', 1.7009695526450076e-05], ['relations', 1.7009695526450076e-05], ['(args))', 1.7009695526450076e-05], ['(fn);', 1.7009695526450076e-05], ['expand_concept', 1.7009695526450076e-05], ['introduce', 1.7009695526450076e-05], ['error_mark_node.', 1.7009695526450076e-05], ['preserves', 1.7009695526450076e-05], ['parms,', 1.7009695526450076e-05], ['(check);', 1.7009695526450076e-05], ['diagnose', 1.7009695526450076e-05], ['EXPR_PACK_EXPANSION:', 1.7009695526450076e-05], ['VAR_DECL:', 1.7009695526450076e-05], ['(!t)', 1.7009695526450076e-05], ['(tree);', 1.7009695526450076e-05], ['class,', 1.7009695526450076e-05], ['ci);', 1.7009695526450076e-05], ['above,', 1.7009695526450076e-05], ['ident);', 1.7009695526450076e-05], ['placeholder_extract_concept_and_args', 1.7009695526450076e-05], ['PLACEHOLDER_TYPE_CONSTRAINTS', 1.7009695526450076e-05], ['hashval_t', 1.7009695526450076e-05], ['targs);', 1.7009695526450076e-05], ['cp_unevaluated', 1.7009695526450076e-05], ['guard;', 1.7009695526450076e-05], ['affect', 1.7009695526450076e-05], ['vars;', 1.7009695526450076e-05], ['tsubst_constraint_variables', 1.7009695526450076e-05], ['vars', 1.7009695526450076e-05], ['vars,', 1.7009695526450076e-05], ['record.', 1.7009695526450076e-05], ['(expr));', 1.7009695526450076e-05], ['%qT",', 1.7009695526450076e-05], ['EXPR.', 1.7009695526450076e-05], ['processing.', 1.7009695526450076e-05], ['trivially', 1.7009695526450076e-05], ['parameters,', 1.7009695526450076e-05], ['boolean_false_node', 1.7009695526450076e-05], ['validity', 1.7009695526450076e-05], ['evaluations.', 1.7009695526450076e-05], ['option.', 1.7009695526450076e-05], ['(elide_constraint_failure_p', 1.7009695526450076e-05], ['node,', 1.7009695526450076e-05], ['term_entry', 1.7009695526450076e-05], ['term_list', 1.7009695526450076e-05], ['iterator;', 1.7009695526450076e-05], ['ptr;', 1.7009695526450076e-05], ['(t2))', 1.7009695526450076e-05], ['ts.begin();', 1.7009695526450076e-05], ['ts.end();', 1.7009695526450076e-05], ['undecided;', 1.7009695526450076e-05], ['(proof_state&', 1.7009695526450076e-05], ['ti);', 1.7009695526450076e-05], ['handlers', 1.7009695526450076e-05], ['attribute_spec::exclusions', 1.7009695526450076e-05], ['false),', 1.7009695526450076e-05], ['false)', 1.7009695526450076e-05], ['StringExp', 1.7009695526450076e-05], ['*se', 1.7009695526450076e-05], ['(StringExp', 1.7009695526450076e-05], ['(e);', 1.7009695526450076e-05], ['handlers.', 1.7009695526450076e-05], ['POINTER_TYPE_P', 1.7009695526450076e-05], ['TYPE_ATTRIBUTES', 1.7009695526450076e-05], ['ATTRIBUTE_UNUSED)', 1.7009695526450076e-05], ['STRING_CST)', 1.7009695526450076e-05], ['TREE_STRING_POINTER', 1.7009695526450076e-05], ['*node);', 1.7009695526450076e-05], ['weak', 1.7009695526450076e-05], ['decls', 1.7009695526450076e-05], ['(dtype)', 1.7009695526450076e-05], ['type));', 1.7009695526450076e-05], ['(TYPE_SIZE_UNIT', 1.7009695526450076e-05], ['NULL));', 1.7009695526450076e-05], ['Frontend', 1.7009695526450076e-05], ['d_eval_constant_expression', 1.7009695526450076e-05], ['codegen', 1.7009695526450076e-05], ['(ident);', 1.7009695526450076e-05], ['generation', 1.7009695526450076e-05], ['module,', 1.7009695526450076e-05], ['Dsymbols', 1.7009695526450076e-05], ['&decl);', 1.7009695526450076e-05], ['help', 1.7009695526450076e-05], ['distinct', 1.7009695526450076e-05], ['make_signed_type', 1.7009695526450076e-05], ['TYPE_IMAGINARY_FLOAT', 1.7009695526450076e-05], ['d_int_type;', 1.7009695526450076e-05], ['vtable.', 1.7009695526450076e-05], ['ENUM,', 1.7009695526450076e-05], ['builtin_types[(int)', 1.7009695526450076e-05], ['("cannot', 1.7009695526450076e-05], ['"dmd/template.h"', 1.7009695526450076e-05], ["We've", 1.7009695526450076e-05], ['context;', 1.7009695526450076e-05], ['DECL_FIELD_CONTEXT', 1.7009695526450076e-05], ['build_reference_type', 1.7009695526450076e-05], ['(tb);', 1.7009695526450076e-05], ['.ptr', 1.7009695526450076e-05], ['(ctype);', 1.7009695526450076e-05], ['object);', 1.7009695526450076e-05], ['ctor;', 1.7009695526450076e-05], ['build_method_call', 1.7009695526450076e-05], ['Taarray)', 1.7009695526450076e-05], ['(object);', 1.7009695526450076e-05], ['COMPOUND_EXPR:', 1.7009695526450076e-05], ['force_target_expr', 1.7009695526450076e-05], ['create_temporary_var', 1.7009695526450076e-05], ['literals', 1.7009695526450076e-05], ['problems', 1.7009695526450076e-05], ['rewrite:', 1.7009695526450076e-05], ['e2)', 1.7009695526450076e-05], ['=>', 1.7009695526450076e-05], ['ADDR_EXPR:', 1.7009695526450076e-05], ['*vd', 1.7009695526450076e-05], ['TypeStruct', 1.7009695526450076e-05], ['t2ref);', 1.7009695526450076e-05], ['(TYPE_MODE', 1.7009695526450076e-05], ['holes', 1.7009695526450076e-05], ['Cast', 1.7009695526450076e-05], ['push_binding_level', 1.7009695526450076e-05], ['(TRUTH_ORIF_EXPR,', 1.7009695526450076e-05], ['ptrtype,', 1.7009695526450076e-05], ['(LOOP_EXPR,', 1.7009695526450076e-05], ['pop_binding_level', 1.7009695526450076e-05], ['*ve', 1.7009695526450076e-05], ['(value', 1.7009695526450076e-05], ['TYPE_CONTEXT', 1.7009695526450076e-05], ['(field));', 1.7009695526450076e-05], ['ARG0', 1.7009695526450076e-05], ['arg1)', 1.7009695526450076e-05], ['arg1', 1.7009695526450076e-05], ['integer_zerop', 1.7009695526450076e-05], ['three', 1.7009695526450076e-05], ['RETURN_EXPR,', 1.7009695526450076e-05], ['size_mult_expr', 1.7009695526450076e-05], ['build_array_index', 1.7009695526450076e-05], ['ptr));', 1.7009695526450076e-05], ['((TypeSArray', 1.7009695526450076e-05], ['void[]', 1.7009695526450076e-05], ['var.', 1.7009695526450076e-05], ['FD.', 1.7009695526450076e-05], ['(ctype))', 1.7009695526450076e-05], ['Front-end', 1.7009695526450076e-05], ['tce', 1.7009695526450076e-05], ['(callee);', 1.7009695526450076e-05], ['(len),', 1.7009695526450076e-05], ['get_frame_for_symbol', 1.7009695526450076e-05], ['fd->toParent2', 1.7009695526450076e-05], ['(fd->isNested', 1.7009695526450076e-05], ['aggregate.', 1.7009695526450076e-05], ['ad->toParent2', 1.7009695526450076e-05], ['(FRAMEINFO_CREATES_FRAME', 1.7009695526450076e-05], ['Even', 1.7009695526450076e-05], ['(FRAMEINFO_TYPE', 1.7009695526450076e-05], ['base.', 1.7009695526450076e-05], ['fd->isThis', 1.7009695526450076e-05], ['ad', 1.7009695526450076e-05], ['build_vthis', 1.7009695526450076e-05], ['classes,', 1.7009695526450076e-05], ['refs', 1.7009695526450076e-05], ['v)', 1.7009695526450076e-05], ['copying', 1.7009695526450076e-05], ['(sd);', 1.7009695526450076e-05], ['(op1);', 1.7009695526450076e-05], ['op0', 1.7009695526450076e-05], ['(expr)))', 1.7009695526450076e-05], ['e));', 1.7009695526450076e-05], ['totype);', 1.7009695526450076e-05], ['etype->toChars', 1.7009695526450076e-05], ['MODIFY_EXPR,', 1.7009695526450076e-05], ['*telem', 1.7009695526450076e-05], ['promotions', 1.7009695526450076e-05], ['tb->nextOf', 1.7009695526450076e-05], ['"dmd/errors.h"', 1.7009695526450076e-05], ['buf.writestring', 1.7009695526450076e-05], ['buf.extractString', 1.7009695526450076e-05], ['opt,', 1.7009695526450076e-05], ['messages', 1.7009695526450076e-05], ['prefix1,', 1.7009695526450076e-05], ['global.params.warnings', 1.7009695526450076e-05], ['(global.params.useDeprecated', 1.7009695526450076e-05], ['Global', 1.7009695526450076e-05], ['Fetch', 1.7009695526450076e-05], ['BUFFER.', 1.7009695526450076e-05], ['buffer;', 1.7009695526450076e-05], ['(r.rv', 1.7009695526450076e-05], ['CTFE.', 1.7009695526450076e-05], ['Modules', 1.7009695526450076e-05], ['DECL_INTRINSIC_CODE', 1.7009695526450076e-05], ['(path,', 1.7009695526450076e-05], ['starts', 1.7009695526450076e-05], ['(path);', 1.7009695526450076e-05], ['*path', 1.7009695526450076e-05], ['"dmd/mangle.h"', 1.7009695526450076e-05], ['defined,', 1.7009695526450076e-05], ['column', 1.7009695526450076e-05], ['(str);', 1.7009695526450076e-05], ['dependencies.', 1.7009695526450076e-05], ['(package', 1.7009695526450076e-05], ['GS_OK;', 1.7009695526450076e-05], ['enforce', 1.7009695526450076e-05], ['had_errors;', 1.7009695526450076e-05], ['TypeClass', 1.7009695526450076e-05], ['collector.', 1.7009695526450076e-05], ['get_classinfo_decl', 1.7009695526450076e-05], ['TDF_SLIM);', 1.7009695526450076e-05], ['LOOP,', 1.7009695526450076e-05], ['imm_use_iterator', 1.7009695526450076e-05], ['iterator,', 1.7009695526450076e-05], ['(use_p);', 1.7009695526450076e-05], ['unsupported_edge', 1.7009695526450076e-05], ['e)', 1.7009695526450076e-05], ['consumer', 1.7009695526450076e-05], ['gsi_stmt', 1.7009695526450076e-05], ['gimple_assign_rhs1', 1.7009695526450076e-05], ['unshare_expr', 1.7009695526450076e-05], ['loop_preheader_edge', 1.7009695526450076e-05], ['(m_loop));', 1.7009695526450076e-05], ['(chrec)', 1.7009695526450076e-05], ['analyze_scalar_evolution', 1.7009695526450076e-05], ['instantiate_scev', 1.7009695526450076e-05], ['loop:', 1.7009695526450076e-05], ['data_reference_p', 1.7009695526450076e-05], ['dr;', 1.7009695526450076e-05], ['(DDR_ARE_DEPENDENT', 1.7009695526450076e-05], ['levels', 1.7009695526450076e-05], ['gsi', 1.7009695526450076e-05], ['(m_dce_seeds,', 1.7009695526450076e-05], ['*loop_nest,', 1.7009695526450076e-05], ['num_loops', 1.7009695526450076e-05], ['sequential', 1.7009695526450076e-05], ['"false");', 1.7009695526450076e-05], ['changed_p', 1.7009695526450076e-05], ['stmt_cost', 1.7009695526450076e-05], ['pass_linterchange', 1.7009695526450076e-05], ['innermost,', 1.7009695526450076e-05], ['dependences', 1.7009695526450076e-05], ['start_loop', 1.7009695526450076e-05], ['references,', 1.7009695526450076e-05], ['*loop;', 1.7009695526450076e-05], ['end.', 1.7009695526450076e-05], ['libgphobos', 1.7009695526450076e-05], ['need_phobos', 1.7009695526450076e-05], ['PHOBOS_NOLINK;', 1.7009695526450076e-05], ['XNEWVEC', 1.7009695526450076e-05], ['(suffix,', 1.7009695526450076e-05], ['&new_decoded_options[j++]);', 1.7009695526450076e-05], ['appropriate.', 1.7009695526450076e-05], ['(OPT_l,', 1.7009695526450076e-05], ['added_libraries++;', 1.7009695526450076e-05], ['Could', 1.7009695526450076e-05], ['tb', 1.7009695526450076e-05], ['linkage', 1.7009695526450076e-05], ['*decl,', 1.7009695526450076e-05], ['DeclVisitor', 1.7009695526450076e-05], ['(d->semanticRun', 1.7009695526450076e-05], ['d->accept', 1.7009695526450076e-05], ['s->accept', 1.7009695526450076e-05], ['"had', 1.7009695526450076e-05], ['compiling");', 1.7009695526450076e-05], ['"use', 1.7009695526450076e-05], ['vtables', 1.7009695526450076e-05], ['wrong', 1.7009695526450076e-05], ['(TypeInfoDeclaration', 1.7009695526450076e-05], ['old_context', 1.7009695526450076e-05], ['saved_location', 1.7009695526450076e-05], ['saved_location;', 1.7009695526450076e-05], ['(name)', 1.7009695526450076e-05], ['(function))', 1.7009695526450076e-05], ['(thunk,', 1.7009695526450076e-05], ['param', 1.7009695526450076e-05], ['DECL_WEAK', 1.7009695526450076e-05], ['csymoffset', 1.7009695526450076e-05], ['find_aggregate_field', 1.7009695526450076e-05], ['*bcd', 1.7009695526450076e-05], ['bcd->baseClass)', 1.7009695526450076e-05], ['true));', 1.7009695526450076e-05], ['ExprVisitor', 1.7009695526450076e-05], ['(t0)', 1.7009695526450076e-05], ['tb1->ty', 1.7009695526450076e-05], ['expressions,', 1.7009695526450076e-05], ['(TypeAArray', 1.7009695526450076e-05], ['(make_array_type', 1.7009695526450076e-05], ['(ce', 1.7009695526450076e-05], ['appended', 1.7009695526450076e-05], ['tinfo,', 1.7009695526450076e-05], ['initializations.', 1.7009695526450076e-05], ['construction.', 1.7009695526450076e-05], ['(result),', 1.7009695526450076e-05], ['(array,', 1.7009695526450076e-05], ['tnext', 1.7009695526450076e-05], ['(thisexp,', 1.7009695526450076e-05], ['void_node;', 1.7009695526450076e-05], ['(!cd->isInterfaceDeclaration', 1.7009695526450076e-05], ['(e->loc),', 1.7009695526450076e-05], ['e->toChars', 1.7009695526450076e-05], ['new_call);', 1.7009695526450076e-05], ['(TypeBasic', 1.7009695526450076e-05], ['mutable', 1.7009695526450076e-05], ['"type', 1.7009695526450076e-05], ['this->make_import', 1.7009695526450076e-05], ['Visit', 1.7009695526450076e-05], ['(callexp),', 1.7009695526450076e-05], ['instrinsic', 1.7009695526450076e-05], ['INT_TYPE_SIZE)', 1.7009695526450076e-05], ['LONG_TYPE_SIZE)', 1.7009695526450076e-05], ['LONG_LONG_TYPE_SIZE)', 1.7009695526450076e-05], ['from);', 1.7009695526450076e-05], ['exponent);', 1.7009695526450076e-05], ['(T)', 1.7009695526450076e-05], ['build_dso_registry_var', 1.7009695526450076e-05], ['decl->aimports.dim;', 1.7009695526450076e-05], ['before.', 1.7009695526450076e-05], ['[A]', 1.7009695526450076e-05], ['simplify', 1.7009695526450076e-05], ['opportunities.', 1.7009695526450076e-05], ['Decide', 1.7009695526450076e-05], ['inner_likelihood', 1.7009695526450076e-05], ['subloops', 1.7009695526450076e-05], ['gassign', 1.7009695526450076e-05], ['ADDRESS', 1.7009695526450076e-05], ['"%T', 1.7009695526450076e-05], ['m_num_conditions', 1.7009695526450076e-05], ['obstack_free', 1.7009695526450076e-05], ['(&li.unity_names,', 1.7009695526450076e-05], ['dimension,', 1.7009695526450076e-05], ['&address,', 1.7009695526450076e-05], ['a[i', 1.7009695526450076e-05], ['current_binding_level;', 1.7009695526450076e-05], ['IRVisitor', 1.7009695526450076e-05], ['label)', 1.7009695526450076e-05], ['block");', 1.7009695526450076e-05], ['(s->loc),', 1.7009695526450076e-05], ['this->do_label', 1.7009695526450076e-05], ['m_flags;', 1.7009695526450076e-05], ['immutable(void)*', 1.7009695526450076e-05], ['function(in', 1.7009695526450076e-05], ['structsize', 1.7009695526450076e-05], ['(t->toChars', 1.7009695526450076e-05], ['live', 1.7009695526450076e-05], ['Btype', 1.7009695526450076e-05], ['build_fold_addr_expr_loc(location.gcc_location(),', 1.7009695526450076e-05], ['Location,', 1.7009695526450076e-05], ['std::vector<Bstatement*>&', 1.7009695526450076e-05], ['var_name,', 1.7009695526450076e-05], ['magic', 1.7009695526450076e-05], ['this->make_type(type);', 1.7009695526450076e-05], ['std::vector<Btyped_identifier>&', 1.7009695526450076e-05], ['length)', 1.7009695526450076e-05], ['fold_convert_loc(location.gcc_location(),', 1.7009695526450076e-05], ['use_left_type', 1.7009695526450076e-05], ['(std::vector<Bexpression*>::const_iterator', 1.7009695526450076e-05], ['index_tree', 1.7009695526450076e-05], ['fn;', 1.7009695526450076e-05], ['excess_type', 1.7009695526450076e-05], ['this->make_statement(ret);', 1.7009695526450076e-05], ['DECL_ARTIFICIAL(decl)', 1.7009695526450076e-05], ['asm_name.empty())', 1.7009695526450076e-05], ['(pos', 1.7009695526450076e-05], ['"statements.h"', 1.7009695526450076e-05], ['"types.h"', 1.7009695526450076e-05], ['traverse_functions', 1.7009695526450076e-05], ['statement)', 1.7009695526450076e-05], ['no->func_value();', 1.7009695526450076e-05], ['no->var_value();', 1.7009695526450076e-05], ['":";', 1.7009695526450076e-05], ['".";', 1.7009695526450076e-05], ['session.', 1.7009695526450076e-05], ['Channel_type*', 1.7009695526450076e-05], ['Type::TYPE_NAMED:', 1.7009695526450076e-05], ['parameters->end();', 1.7009695526450076e-05], ['this->typeref("', 1.7009695526450076e-05], ['results->begin();', 1.7009695526450076e-05], ['"array', 1.7009695526450076e-05], ['methods->begin();', 1.7009695526450076e-05], ['methods->end();', 1.7009695526450076e-05], ['(methods', 1.7009695526450076e-05], ['"lex.h"', 1.7009695526450076e-05], ['Type::lookup_integer_type("uint8");', 1.7009695526450076e-05], ['(ve', 1.7009695526450076e-05], ['ve->named_object();', 1.7009695526450076e-05], ['is_varargs', 1.7009695526450076e-05], ['Expression_list::iterator', 1.7009695526450076e-05], ['Numeric_constant::NC_UL_VALID)', 1.7009695526450076e-05], ['std::vector<Node*>', 1.7009695526450076e-05], ['(level.value()', 1.7009695526450076e-05], ['Node::ESCAPE_NONE);', 1.7009695526450076e-05], ['non-pointer', 1.7009695526450076e-05], ['std::vector<Named_object*>', 1.7009695526450076e-05], ['++fn)', 1.7009695526450076e-05], ['flood', 1.7009695526450076e-05], ['Traverse(traverse_expressions),', 1.7009695526450076e-05], ['SRC.', 1.7009695526450076e-05], ['DST.', 1.7009695526450076e-05], ['gogo->debug_escape_level();', 1.7009695526450076e-05], ['gogo->package_name()', 1.7009695526450076e-05], ['bce', 1.7009695526450076e-05], ['this->context_->track(n);', 1.7009695526450076e-05], ['ue', 1.7009695526450076e-05], ['flowing', 1.7009695526450076e-05], ['Type_conversion_expression*', 1.7009695526450076e-05], ['Connect', 1.7009695526450076e-05], ['receiver.', 1.7009695526450076e-05], ['go_inform(call->location(),', 1.7009695526450076e-05], ['"esccall::', 1.7009695526450076e-05], ['<-', 1.7009695526450076e-05], ['(fntype->is_method())', 1.7009695526450076e-05], ['pn', 1.7009695526450076e-05], ['underlying_node', 1.7009695526450076e-05], ['Node::make_node(underlying);', 1.7009695526450076e-05], ['(e->array_index_expression()', 1.7009695526450076e-05], ['go_inform(Linemap::unknown_location(),', 1.7009695526450076e-05], ['(fntype->parameters()', 1.7009695526450076e-05], ['params->begin();', 1.7009695526450076e-05], ['go_inform(src->definition_location(),', 1.7009695526450076e-05], ['"leaking', 1.7009695526450076e-05], ['underlying_node,', 1.7009695526450076e-05], ['subclass', 1.7009695526450076e-05], ['json::value::print', 1.7009695526450076e-05], ['(pretty_printer', 1.7009695526450076e-05], ['*pp)', 1.7009695526450076e-05], ['(literal', 1.7009695526450076e-05], ['2009', 1.7009695526450076e-05], ['package_name,', 1.7009695526450076e-05], ['bindings->begin_definitions();', 1.7009695526450076e-05], ['bindings->end_definitions();', 1.7009695526450076e-05], ['(std::string::const_iterator', 1.7009695526450076e-05], ['methods.', 1.7009695526450076e-05], ['go_assert(type', 1.7009695526450076e-05], ['ordinary', 1.7009695526450076e-05], ['traversal.', 1.7009695526450076e-05], ['Named_object::NAMED_OBJECT_CONST:', 1.7009695526450076e-05], ['Named_object::NAMED_OBJECT_TYPE:', 1.7009695526450076e-05], ['Named_object::NAMED_OBJECT_VAR:', 1.7009695526450076e-05], ['Named_object::NAMED_OBJECT_FUNC:', 1.7009695526450076e-05], ['Named_object::NAMED_OBJECT_FUNC_DECLARATION:', 1.7009695526450076e-05], ['(std::vector<const', 1.7009695526450076e-05], ['(Import_init_set::const_iterator', 1.7009695526450076e-05], ['panic', 1.7009695526450076e-05], ['want.', 1.7009695526450076e-05], ['(this->classification_', 1.7009695526450076e-05], ['(type->float_type()', 1.7009695526450076e-05], ['(type->complex_type()', 1.7009695526450076e-05], ['Expression::make_binary(OPERATOR_OROR,', 1.7009695526450076e-05], ['do_numeric_constant_value(Numeric_constant*', 1.7009695526450076e-05], ['lowered.', 1.7009695526450076e-05], ['inserter', 1.7009695526450076e-05], ['go_assert(fn', 1.7009695526450076e-05], ['fn->func_value()->get_or_make_decl(gogo,', 1.7009695526450076e-05], ['Type_context*);', 1.7009695526450076e-05], ['go_assert(this->type_', 1.7009695526450076e-05], ['context->bblock(),', 1.7009695526450076e-05], ['gogo->backend()->var_expression(this->bvar_,', 1.7009695526450076e-05], ['struct_type', 1.7009695526450076e-05], ['bloc));', 1.7009695526450076e-05], ['do_inlining_cost()', 1.7009695526450076e-05], ['Type::lookup_bool_type();', 1.7009695526450076e-05], ['gogo->backend()->constructor_expression(btype,', 1.7009695526450076e-05], ['imp->get_char();', 1.7009695526450076e-05], ['data:', 1.7009695526450076e-05], ['zval;', 1.7009695526450076e-05], ['mpz_clear(zval);', 1.7009695526450076e-05], ['mp_exp_t', 1.7009695526450076e-05], ['Expression::traverse(&init,', 1.7009695526450076e-05], ['ce', 1.7009695526450076e-05], ['Expression::make_nil(loc);', 1.7009695526450076e-05], ['this->expr_;', 1.7009695526450076e-05], ['location))', 1.7009695526450076e-05], ['pend)', 1.7009695526450076e-05], ['this->expr_', 1.7009695526450076e-05], ['type->float_type()', 1.7009695526450076e-05], ['type->complex_type()', 1.7009695526450076e-05], ['(type->interface_type()', 1.7009695526450076e-05], ['expr_type,', 1.7009695526450076e-05], ['type->points_to()', 1.7009695526450076e-05], ['Expression::import_expression(imp,', 1.7009695526450076e-05], ['nil.', 1.7009695526450076e-05], ['done,', 1.7009695526450076e-05], ['mpc_clear(val);', 1.7009695526450076e-05], ['gogo->backend()->binary_expression(OPERATOR_EQEQ,', 1.7009695526450076e-05], ['OPERATOR_MINUS;', 1.7009695526450076e-05], ['OPERATOR_NOTEQ)', 1.7009695526450076e-05], ['a2,', 1.7009695526450076e-05], ['(this->classification()', 1.7009695526450076e-05], ['Numeric_constant::NC_UL_VALID', 1.7009695526450076e-05], ['zero);', 1.7009695526450076e-05], ['zero_expr,', 1.7009695526450076e-05], ['(fn->is_function())', 1.7009695526450076e-05], ['fn->func_declaration_value()->type();', 1.7009695526450076e-05], ['called,', 1.7009695526450076e-05], ['orig_fntype', 1.7009695526450076e-05], ['bme', 1.7009695526450076e-05], ['NIL_CHECK_DEFAULT,', 1.7009695526450076e-05], ['nil_check', 1.7009695526450076e-05], ['is_varargs,', 1.7009695526450076e-05], ['BUILTIN_NEW:', 1.7009695526450076e-05], ['BUILTIN_MAKE:', 1.7009695526450076e-05], ['BUILTIN_RECOVER:', 1.7009695526450076e-05], ['this->args()->begin();', 1.7009695526450076e-05], ['*pa', 1.7009695526450076e-05], ['BUILTIN_COPY:', 1.7009695526450076e-05], ['BUILTIN_PANIC:', 1.7009695526450076e-05], ['parg', 1.7009695526450076e-05], ['args->begin();', 1.7009695526450076e-05], ['first_arg', 1.7009695526450076e-05], ['(type->map_type()', 1.7009695526450076e-05], ['len_arg,', 1.7009695526450076e-05], ['Expression::make_cast(int_type,', 1.7009695526450076e-05], ['Expression::make_type_descriptor(type,', 1.7009695526450076e-05], ['call_args', 1.7009695526450076e-05], ['&call);', 1.7009695526450076e-05], ['(arg_type', 1.7009695526450076e-05], ['BUILTIN_SIZEOF:', 1.7009695526450076e-05], ['BUILTIN_ALIGNOF:', 1.7009695526450076e-05], ['BUILTIN_OFFSETOF:', 1.7009695526450076e-05], ['is_print', 1.7009695526450076e-05], ['uintptr_type,', 1.7009695526450076e-05], ['print_stmts', 1.7009695526450076e-05], ['rc', 1.7009695526450076e-05], ['fntype->results();', 1.7009695526450076e-05], ['this->args_->begin();', 1.7009695526450076e-05], ['(pa', 1.7009695526450076e-05], ['Typed_identifier_list::const_iterator', 1.7009695526450076e-05], ['(cap', 1.7009695526450076e-05], ['this->start_,', 1.7009695526450076e-05], ['this->end_,', 1.7009695526450076e-05], ['Numeric_constant::NC_UL_NOTINT))', 1.7009695526450076e-05], ['array_type', 1.7009695526450076e-05], ['mpz_cmp(ival,', 1.7009695526450076e-05], ['bounds");', 1.7009695526450076e-05], ['(this->needs_bounds_check_)', 1.7009695526450076e-05], ['long>::const_iterator', 1.7009695526450076e-05], ['++pv,', 1.7009695526450076e-05], ['go_error_at((*pv)->location(),', 1.7009695526450076e-05], ['++pv;', 1.7009695526450076e-05], ['this->vals_->end();', 1.7009695526450076e-05], ['unexported', 1.7009695526450076e-05], ['std::vector<Expression*>', 1.7009695526450076e-05], ['"duplicate', 1.7009695526450076e-05], ['"index', 1.7009695526450076e-05], ['go_error_at((*p)->location(),', 1.7009695526450076e-05], ['Linemap::predeclared_location());', 1.7009695526450076e-05], ['rune', 1.7009695526450076e-05], ['GO_EXTERN_C', 1.7009695526450076e-05], ["'.'", 1.7009695526450076e-05], ['Import_init', 1.7009695526450076e-05], ['std::vector<Bvariable*>', 1.7009695526450076e-05], ['this->init_;', 1.7009695526450076e-05], ['here",', 1.7009695526450076e-05], ['init_fndecl', 1.7009695526450076e-05], ['pkgpath_symbol,', 1.7009695526450076e-05], ['pname', 1.7009695526450076e-05], ['rtype->named_type()->is_alias())', 1.7009695526450076e-05], ['rtype->named_type()->real_type()->forwarded();', 1.7009695526450076e-05], ['go_error_at(type->receiver()->location(),', 1.7009695526450076e-05], ['this->need_init_fn_', 1.7009695526450076e-05], ['type(Type*);', 1.7009695526450076e-05], ['Lower_parse_tree', 1.7009695526450076e-05], ['Traverse(traverse_variables', 1.7009695526450076e-05], ['traverse_statements', 1.7009695526450076e-05], ['&this->inserter_);', 1.7009695526450076e-05], ['asm_name', 1.7009695526450076e-05], ['go_error_at(eloc,', 1.7009695526450076e-05], ['A.', 1.3607756421160062e-05], ['M.', 1.3607756421160062e-05], ['A1', 1.3607756421160062e-05], ['NoErrors', 1.3607756421160062e-05], ['BMinusU2', 1.3607756421160062e-05], ['V0', 1.3607756421160062e-05], ['MinSqEr', 1.3607756421160062e-05], ['SqEr', 1.3607756421160062e-05], ['MaxSqEr', 1.3607756421160062e-05], ['X1', 1.3607756421160062e-05], ['Eight', 1.3607756421160062e-05], ['Third', 1.3607756421160062e-05], ['Random2', 1.3607756421160062e-05], ['difficult', 1.3607756421160062e-05], ['follow', 1.3607756421160062e-05], ['"C"', 1.3607756421160062e-05], ['<stdio.h>', 1.3607756421160062e-05], ['from_str(s);', 1.3607756421160062e-05], ['real_nan', 1.3607756421160062e-05], ['real_from_string', 1.3607756421160062e-05], ['(&ri,', 1.3607756421160062e-05], ['&ri,', 1.3607756421160062e-05], ['code)', 1.3607756421160062e-05], ['bi;', 1.3607756421160062e-05], ['T);', 1.3607756421160062e-05], ['verbose_binop(image,', 1.3607756421160062e-05], ['(double', 1.3607756421160062e-05], ['%.*a', 1.3607756421160062e-05], ['%.*La', 1.3607756421160062e-05], ['image);', 1.3607756421160062e-05], ['FLOAT,', 1.3607756421160062e-05], ['RHS>', 1.3607756421160062e-05], ['&a,', 1.3607756421160062e-05], ['FLOAT(a)', 1.3607756421160062e-05], ['FLOAT(b);', 1.3607756421160062e-05], ['zero)', 1.3607756421160062e-05], ['diff', 1.3607756421160062e-05], ['"%.35a",', 1.3607756421160062e-05], ['d);', 1.3607756421160062e-05], ['"%.35La",', 1.3607756421160062e-05], ['(x.hex(),', 1.3607756421160062e-05], ['d1,', 1.3607756421160062e-05], ['pow', 1.3607756421160062e-05], ['instantiate', 1.3607756421160062e-05], ['A1;', 1.3607756421160062e-05], ['i.e,', 1.3607756421160062e-05], ['TstPtUf', 1.3607756421160062e-05], ['7;', 1.3607756421160062e-05], ['(Zero', 1.3607756421160062e-05], ['One),', 1.3607756421160062e-05], ['1/2', 1.3607756421160062e-05], ['9,', 1.3607756421160062e-05], ['((Y', 1.3607756421160062e-05], ['One);', 1.3607756421160062e-05], ['satisfy', 1.3607756421160062e-05], ['separation', 1.3607756421160062e-05], ['E0)', 1.3607756421160062e-05], ['(FABS', 1.3607756421160062e-05], ['feature', 1.3607756421160062e-05], ['(Z2', 1.3607756421160062e-05], ['U2))', 1.3607756421160062e-05], ['digit', 1.3607756421160062e-05], ['lacks', 1.3607756421160062e-05], ['Digit,', 1.3607756421160062e-05], ['yields', 1.3607756421160062e-05], ['AInvrse', 1.3607756421160062e-05], ['correctly.\\n");', 1.3607756421160062e-05], ['("Addition/Subtraction', 1.3607756421160062e-05], ['((Z', 1.3607756421160062e-05], ['NoTrials)', 1.3607756421160062e-05], ['failures', 1.3607756421160062e-05], ['HInvrse', 1.3607756421160062e-05], ['CInvrse', 1.3607756421160062e-05], ['(D', 1.3607756421160062e-05], ['(PseudoZero', 1.3607756421160062e-05], ['underflow', 1.3607756421160062e-05], ['X.str());', 1.3607756421160062e-05], ['(N', 1.3607756421160062e-05], ['Error', 1.3607756421160062e-05], ['UfThold;', 1.3607756421160062e-05], ['signal', 1.3607756421160062e-05], ['Division', 1.3607756421160062e-05], ['5;', 1.3607756421160062e-05], ['"this', 1.3607756421160062e-05], ['V0)', 1.3607756421160062e-05], ['(Indx', 1.3607756421160062e-05], ['Indx', 1.3607756421160062e-05], ['encountered', 1.3607756421160062e-05], ['((ErrCnt[Failure]', 1.3607756421160062e-05], ['fputs', 1.3607756421160062e-05], ['SqEr;', 1.3607756421160062e-05], ['*name;', 1.3607756421160062e-05], ['time,', 1.3607756421160062e-05], ['>>=', 1.3607756421160062e-05], ['optional', 1.3607756421160062e-05], ['why', 1.3607756421160062e-05], ['"pretty-print.h"', 1.3607756421160062e-05], ['(MSG_MISSED_OPTIMIZATION,', 1.3607756421160062e-05], ['optinfo_item', 1.3607756421160062e-05], ['higher', 1.3607756421160062e-05], ['enabled.', 1.3607756421160062e-05], ['destinations,', 1.3607756421160062e-05], ['Nothing', 1.3607756421160062e-05], ['function_that_fails', 1.3607756421160062e-05], ['greturn', 1.3607756421160062e-05], ['*stmt)', 1.3607756421160062e-05], ['(stmt));', 1.3607756421160062e-05], ['fails.', 1.3607756421160062e-05], ['res;', 1.3607756421160062e-05], ['10);', 1.3607756421160062e-05], ['combinations', 1.3607756421160062e-05], ['dump_flags_t', 1.3607756421160062e-05], ['filter', 1.3607756421160062e-05], ['ASSERT_STR_CONTAINS', 1.3607756421160062e-05], ['&info', 1.3607756421160062e-05], ['(info.get_item', 1.3607756421160062e-05], ['(1),', 1.3607756421160062e-05], ['(effective_filter', 1.3607756421160062e-05], ['note:', 1.3607756421160062e-05], ['===', 1.3607756421160062e-05], ['===\\n"', 1.3607756421160062e-05], ['int"', 1.3607756421160062e-05], ['"test.c:5:10:', 1.3607756421160062e-05], ['Populate', 1.3607756421160062e-05], ['generator->set', 1.3607756421160062e-05], ['capture', 1.3607756421160062e-05], ['open', 1.3607756421160062e-05], ['writing', 1.3607756421160062e-05], ['queue', 1.3607756421160062e-05], ['(obj);', 1.3607756421160062e-05], ['Pop', 1.3607756421160062e-05], ['pop', 1.3607756421160062e-05], ['(loc);', 1.3607756421160062e-05], ['json::value', 1.3607756421160062e-05], ['message->append', 1.3607756421160062e-05], ['(item->get_text', 1.3607756421160062e-05], ['("location",', 1.3607756421160062e-05], ['inlined', 1.3607756421160062e-05], ['passes', 1.3607756421160062e-05], ['"children"', 1.3607756421160062e-05], ['(info', 1.3607756421160062e-05], ['(enum', 1.3607756421160062e-05], ['m_kind', 1.3607756421160062e-05], ['kind)', 1.3607756421160062e-05], ['separately.', 1.3607756421160062e-05], ['8', 1.3607756421160062e-05], ['merge', 1.3607756421160062e-05], ['noinline', 1.3607756421160062e-05], ['Structure', 1.3607756421160062e-05], ['sort_ctx', 1.3607756421160062e-05], ['t1;', 1.3607756421160062e-05], ['*out', 1.3607756421160062e-05], ['(out', 1.3607756421160062e-05], ['STRIDE;', 1.3607756421160062e-05], ['REORDER_23', 1.3607756421160062e-05], ['(size_t,', 1.3607756421160062e-05], ['REORDER_45', 1.3607756421160062e-05], ['compares', 1.3607756421160062e-05], ['place.', 1.3607756421160062e-05], ['e0,', 1.3607756421160062e-05], ['e2);', 1.3607756421160062e-05], ['(c,', 1.3607756421160062e-05], ['e1,', 1.3607756421160062e-05], ['e4);', 1.3607756421160062e-05], ['e3);', 1.3607756421160062e-05], ['e2,', 1.3607756421160062e-05], ['mergesort', 1.3607756421160062e-05], ['out;', 1.3607756421160062e-05], ['tmp);', 1.3607756421160062e-05], ['out)', 1.3607756421160062e-05], ['scratch', 1.3607756421160062e-05], ['(buf);', 1.3607756421160062e-05], ['cmp);', 1.3607756421160062e-05], ['dtor', 1.3607756421160062e-05], ['p;', 1.3607756421160062e-05], ['overloaded', 1.3607756421160062e-05], ['(42,', 1.3607756421160062e-05], ['num', 1.3607756421160062e-05], ['num;', 1.3607756421160062e-05], ['hex.', 1.3607756421160062e-05], ['buf', 1.3607756421160062e-05], ['start;', 1.3607756421160062e-05], ['CODE,', 1.3607756421160062e-05], ['must_be_nonzero', 1.3607756421160062e-05], ['(wi::ge_p', 1.3607756421160062e-05], ['lb', 1.3607756421160062e-05], ['accordingly.', 1.3607756421160062e-05], ['&min,', 1.3607756421160062e-05], ['&max,', 1.3607756421160062e-05], ['cross', 1.3607756421160062e-05], ['operations,', 1.3607756421160062e-05], ['(!wide_int_binop_overflow', 1.3607756421160062e-05], ['vr1_ub,', 1.3607756421160062e-05], ['Multiply', 1.3607756421160062e-05], ['widest2_int::from', 1.3607756421160062e-05], ['(wi::ltu_p', 1.3607756421160062e-05], ['wide_int::from', 1.3607756421160062e-05], ['MULT_EXPR', 1.3607756421160062e-05], ['wide_int_range_multiplicative_op', 1.3607756421160062e-05], ['simpler', 1.3607756421160062e-05], ['wi::set_bit_in_zero', 1.3607756421160062e-05], ['in_bounds', 1.3607756421160062e-05], ['[1,', 1.3607756421160062e-05], ['shifting', 1.3607756421160062e-05], ['(wi::lts_p', 1.3607756421160062e-05], ['numbers,', 1.3607756421160062e-05], ['optimized', 1.3607756421160062e-05], ['BIT_AND_EXPR', 1.3607756421160062e-05], ['consecutive', 1.3607756421160062e-05], ['cleared', 1.3607756421160062e-05], ['w.get_precision', 1.3607756421160062e-05], ['vr1_max))', 1.3607756421160062e-05], ['vr0_max;', 1.3607756421160062e-05], ['lower_bound,', 1.3607756421160062e-05], ['upper_bound,', 1.3607756421160062e-05], ['[WMIN,WMAX].', 1.3607756421160062e-05], ['(wi::lt_p', 1.3607756421160062e-05], ['wi::ge_p', 1.3607756421160062e-05], ['(prec', 1.3607756421160062e-05], ['(wi::gts_p', 1.3607756421160062e-05], ['TYPE_MIN_VALUE', 1.3607756421160062e-05], ['wi::abs', 1.3607756421160062e-05], ['max,', 1.3607756421160062e-05], ['min;', 1.3607756421160062e-05], ['swap', 1.3607756421160062e-05], ['max);', 1.3607756421160062e-05], ['ignored.', 1.3607756421160062e-05], ['extra_range_p', 1.3607756421160062e-05], ['divisor_max,', 1.3607756421160062e-05], ['HOST_BITS_PER_HALF_WIDE_INT', 1.3607756421160062e-05], ['utilities.', 1.3607756421160062e-05], ['deal', 1.3607756421160062e-05], ['int.', 1.3607756421160062e-05], ['HOST_BITS_PER_HALF_WIDE_INT)', 1.3607756421160062e-05], ['((HOST_WIDE_INT)', 1.3607756421160062e-05], ['LEN', 1.3607756421160062e-05], ['-1.', 1.3607756421160062e-05], ['i--)', 1.3607756421160062e-05], ['Conversion', 1.3607756421160062e-05], ['UNITS_PER_WORD;', 1.3607756421160062e-05], ['(HOST_WIDE_INT),', 1.3607756421160062e-05], ['v);', 1.3607756421160062e-05], ['possible,', 1.3607756421160062e-05], ['allocate', 1.3607756421160062e-05], ['zeros', 1.3607756421160062e-05], ['val[len++]', 1.3607756421160062e-05], ['*a,', 1.3607756421160062e-05], ['Unsigned', 1.3607756421160062e-05], ['highest', 1.3607756421160062e-05], ['(op1', 1.3607756421160062e-05], ['s1', 1.3607756421160062e-05], ['(s0', 1.3607756421160062e-05], ['s1)', 1.3607756421160062e-05], ['(l', 1.3607756421160062e-05], ['(u0', 1.3607756421160062e-05], ['u1)', 1.3607756421160062e-05], ['(x0', 1.3607756421160062e-05], ['x1)', 1.3607756421160062e-05], ['(HOST_WIDE_INT_1U', 1.3607756421160062e-05], ['zeros,', 1.3607756421160062e-05], ['(op1mask', 1.3607756421160062e-05], ['l1;', 1.3607756421160062e-05], ['op0[l0];', 1.3607756421160062e-05], ['(op0mask', 1.3607756421160062e-05], ['(need_canon)', 1.3607756421160062e-05], ['sgn,', 1.3607756421160062e-05], ['mask1;', 1.3607756421160062e-05], ['mask0', 1.3607756421160062e-05], ['mask1', 1.3607756421160062e-05], ['carry;', 1.3607756421160062e-05], ['HALF_INT_MASK;', 1.3607756421160062e-05], ['small_prec);', 1.3607756421160062e-05], ['wi_pack', 1.3607756421160062e-05], ['((unsigned', 1.3607756421160062e-05], ['returned.', 1.3607756421160062e-05], ['half_blocks_needed', 1.3607756421160062e-05], ['(needs_overflow)', 1.3607756421160062e-05], ['wi::storage_ref', 1.3607756421160062e-05], ['umul_ppmm', 1.3607756421160062e-05], ['wi::fits_uhwi_p', 1.3607756421160062e-05], ['quickly', 1.3607756421160062e-05], ['r[i', 1.3607756421160062e-05], ['b;', 1.3607756421160062e-05], ['X.', 1.3607756421160062e-05], ['x.len', 1.3607756421160062e-05], ['stop', 1.3607756421160062e-05], ['inversion', 1.3607756421160062e-05], ['borrow', 1.3607756421160062e-05], ['m,', 1.3607756421160062e-05], ['quotient', 1.3607756421160062e-05], ['Normalize', 1.3607756421160062e-05], ['overwrite', 1.3607756421160062e-05], ['(HOST_BITS_PER_HALF_WIDE_INT', 1.3607756421160062e-05], ['dividend_prec,', 1.3607756421160062e-05], ['dividend', 1.3607756421160062e-05], ['remainder[0]', 1.3607756421160062e-05], ['remember', 1.3607756421160062e-05], ['shift.', 1.3607756421160062e-05], ['skip);', 1.3607756421160062e-05], ['curr', 1.3607756421160062e-05], ['wider', 1.3607756421160062e-05], ['HIGH.', 1.3607756421160062e-05], ['nonzero,', 1.3607756421160062e-05], ['MASK', 1.3607756421160062e-05], ['nonzero', 1.3607756421160062e-05], ['MASK.', 1.3607756421160062e-05], ['(6,', 1.3607756421160062e-05], ['0xf1)', 1.3607756421160062e-05], ['(24,', 1.3607756421160062e-05], ['to:', 1.3607756421160062e-05], ['UPPER_MASK', 1.3607756421160062e-05], ['leaves', 1.3607756421160062e-05], ['variants', 1.3607756421160062e-05], ['DEBUG_FUNCTION', 1.3607756421160062e-05], ['(ptr)', 1.3607756421160062e-05], ['from_int', 1.3607756421160062e-05], ['32);', 1.3607756421160062e-05], ['false));', 1.3607756421160062e-05], ['wi::sub', 1.3607756421160062e-05], ['run_all_wide_int_tests', 1.3607756421160062e-05], ['&overflow);', 1.3607756421160062e-05], ['wi::OVF_NONE,', 1.3607756421160062e-05], ['(BLOCK);', 1.3607756421160062e-05], ['(bind_expr)', 1.3607756421160062e-05], ['bind_expr;', 1.3607756421160062e-05], ['convert_to_pointer', 1.3607756421160062e-05], ['(ptype,', 1.3607756421160062e-05], ['mem_ref', 1.3607756421160062e-05], ['legal', 1.3607756421160062e-05], ['DEF_HSAIL_SAT_BUILTIN', 1.3607756421160062e-05], ['DEF_HSAIL_BUILTIN', 1.3607756421160062e-05], ['DEF_HSAIL_ATOMIC_BUILTIN', 1.3607756421160062e-05], ['DEF_HSAIL_INTR_BUILTIN', 1.3607756421160062e-05], ['DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN', 1.3607756421160062e-05], ['ATTRS)', 1.3607756421160062e-05], ['(ENUM);', 1.3607756421160062e-05], ['"brig-builtins.def"', 1.3607756421160062e-05], ['tmp_var', 1.3607756421160062e-05], ['(tmp_var),', 1.3607756421160062e-05], ['tmp_var,', 1.3607756421160062e-05], ['tmp_var;', 1.3607756421160062e-05], ['A{', 1.3607756421160062e-05], ['ARITH_TYPE', 1.3607756421160062e-05], ['mask_element', 1.3607756421160062e-05], ['(input_mask_vals,', 1.3607756421160062e-05], ['mask_vec_type', 1.3607756421160062e-05], ['unpack', 1.3607756421160062e-05], ['(operands[0]));', 1.3607756421160062e-05], ['(LSHIFT_EXPR,', 1.3607756421160062e-05], ['(BIT_IOR_EXPR,', 1.3607756421160062e-05], ['instruction.', 1.3607756421160062e-05], ['desired', 1.3607756421160062e-05], ['inner_type', 1.3607756421160062e-05], ['(arith_type)', 1.3607756421160062e-05], ['(arith_type,', 1.3607756421160062e-05], ['amount', 1.3607756421160062e-05], ['operands.size', 1.3607756421160062e-05], ['custom', 1.3607756421160062e-05], ['(output_count', 1.3607756421160062e-05], ['performed', 1.3607756421160062e-05], ['BRIG_KIND_INST_CMP)', 1.3607756421160062e-05], ['(BRIG_TYPE_U64);', 1.3607756421160062e-05], ['operation,', 1.3607756421160062e-05], ['BRIG_TYPE_F16', 1.3607756421160062e-05], ['!gccbrig_is_bit_operation', 1.3607756421160062e-05], ['esize', 1.3607756421160062e-05], ['vector.', 1.3607756421160062e-05], ['&((const', 1.3607756421160062e-05], ['BrigInstBasic', 1.3607756421160062e-05], ['base)->base;', 1.3607756421160062e-05], ['operand_offset', 1.3607756421160062e-05], ['*operand_data', 1.3607756421160062e-05], ['(operand_offset);', 1.3607756421160062e-05], ['BrigOperandCodeList', 1.3607756421160062e-05], ['*data', 1.3607756421160062e-05], ['data->byteCount;', 1.3607756421160062e-05], ['*operand_ptr', 1.3607756421160062e-05], ['data->bytes;', 1.3607756421160062e-05], ['*operand_ptr;', 1.3607756421160062e-05], ['(etype);', 1.3607756421160062e-05], ['++operand_ptr;', 1.3607756421160062e-05], ['build_fold_addr_expr', 1.3607756421160062e-05], ['build_case_label', 1.3607756421160062e-05], ['append_to_statement_list', 1.3607756421160062e-05], ['&SWITCH_BODY', 1.3607756421160062e-05], ['(switch_expr));', 1.3607756421160062e-05], ['etc.', 1.3607756421160062e-05], ['std::vector<tree>', 1.3607756421160062e-05], ['convert_to_real', 1.3607756421160062e-05], ['(brig_to_generic::s_fp32_type,', 1.3607756421160062e-05], ['"builtins.h"', 1.3607756421160062e-05], ['"phsa.h"', 1.3607756421160062e-05], ['BrigDirectiveLabel', 1.3607756421160062e-05], ['m_parent.m_cf->label', 1.3607756421160062e-05], ['&brig_inst,', 1.3607756421160062e-05], ['operand_type,', 1.3607756421160062e-05], ['BrigOperandConstantBytes', 1.3607756421160062e-05], ['BrigOperandAddress', 1.3607756421160062e-05], ['var_offset', 1.3607756421160062e-05], ['const_offset', 1.3607756421160062e-05], ['(func);', 1.3607756421160062e-05], ['BRIG_SEGMENT_PRIVATE', 1.3607756421160062e-05], ['BRIG_SEGMENT_SPILL)', 1.3607756421160062e-05], ['successive', 1.3607756421160062e-05], ['operands;', 1.3607756421160062e-05], ['referred', 1.3607756421160062e-05], ["hasn't", 1.3607756421160062e-05], ['addr,', 1.3607756421160062e-05], ['gccbrig_to_uint64_t', 1.3607756421160062e-05], ['BRIG_SEGMENT_GLOBAL', 1.3607756421160062e-05], ['access.', 1.3607756421160062e-05], ['forced', 1.3607756421160062e-05], ['BRIG_TYPE_S64:', 1.3607756421160062e-05], ['BRIG_TYPE_U64:', 1.3607756421160062e-05], ['long)', 1.3607756421160062e-05], ['scalar_element_size;', 1.3607756421160062e-05], ['FP32', 1.3607756421160062e-05], ['source)', 1.3607756421160062e-05], ['source);', 1.3607756421160062e-05], ['analyzing', 1.3607756421160062e-05], ['resolved', 1.3607756421160062e-05], ['Flush', 1.3607756421160062e-05], ['*mod', 1.3607756421160062e-05], ['With', 1.3607756421160062e-05], ['regs', 1.3607756421160062e-05], ['packed.', 1.3607756421160062e-05], ['flush_to_zero', 1.3607756421160062e-05], ['(output);', 1.3607756421160062e-05], ['inst_expr', 1.3607756421160062e-05], ['inst_expr);', 1.3607756421160062e-05], ['SCALAR_FLOAT_TYPE_P', 1.3607756421160062e-05], ['CONSTRUCTOR)', 1.3607756421160062e-05], ['BITS_PER_UNIT,', 1.3607756421160062e-05], ['Appends', 1.3607756421160062e-05], ['stmt)', 1.3607756421160062e-05], ['operand)', 1.3607756421160062e-05], ['input_element_type,', 1.3607756421160062e-05], ['(input_element_type),', 1.3607756421160062e-05], ['(handler,', 1.3607756421160062e-05], ['visited', 1.3607756421160062e-05], ['ignored', 1.3607756421160062e-05], ['build_tree_operand_from_brig', 1.3607756421160062e-05], ['reinterpret', 1.3607756421160062e-05], ['four', 1.3607756421160062e-05], ['operands.at', 1.3607756421160062e-05], ['(input);', 1.3607756421160062e-05], ['integers', 1.3607756421160062e-05], ['exceptions', 1.3607756421160062e-05], ['NaN', 1.3607756421160062e-05], ['and_mask', 1.3607756421160062e-05], ['boolean,', 1.3607756421160062e-05], ['conversions.', 1.3607756421160062e-05], ['best.', 1.3607756421160062e-05], ['integers,', 1.3607756421160062e-05], ['unsignedp);', 1.3607756421160062e-05], ['maintain', 1.3607756421160062e-05], ['func_name;', 1.3607756421160062e-05], ['During', 1.3607756421160062e-05], ['ret_value', 1.3607756421160062e-05], ['restrict_void_ptr,', 1.3607756421160062e-05], ['restrict_char_ptr,', 1.3607756421160062e-05], ['execution', 1.3607756421160062e-05], ['arg_decls', 1.3607756421160062e-05], ['m_parent.m_cf->add_arg_variable', 1.3607756421160062e-05], ['args));', 1.3607756421160062e-05], ['kernels', 1.3607756421160062e-05], ['(fndecl),', 1.3607756421160062e-05], ['describes', 1.3607756421160062e-05], ['"options.h"', 1.3607756421160062e-05], ['m_has_unexpanded_dp_builtins', 1.3607756421160062e-05], ['LABEL_DECL,', 1.3607756421160062e-05], ['alignment)', 1.3607756421160062e-05], ['m_current_bind_expr;', 1.3607756421160062e-05], ['long_long_integer_type_node);', 1.3607756421160062e-05], ['reduce', 1.3607756421160062e-05], ['it->second;', 1.3607756421160062e-05], ['phase.', 1.3607756421160062e-05], ['boolean_type_node;', 1.3607756421160062e-05], ['parallel', 1.3607756421160062e-05], ['WI', 1.3607756421160062e-05], ['Increment', 1.3607756421160062e-05], ['early', 1.3607756421160062e-05], ['id,', 1.3607756421160062e-05], ['assembly', 1.3607756421160062e-05], ['kern_name', 1.3607756421160062e-05], ['std::ostringstream', 1.3607756421160062e-05], ['(2)', 1.3607756421160062e-05], ['runs', 1.3607756421160062e-05], ['launcher;', 1.3607756421160062e-05], ['(group_base_addr_arg)', 1.3607756421160062e-05], ['(DECL_STRUCT_FUNCTION', 1.3607756421160062e-05], ['(launcher);', 1.3607756421160062e-05], ['(stmt)', 1.3607756421160062e-05], ['Currently', 1.3607756421160062e-05], ['call_operands.push_back', 1.3607756421160062e-05], ['Instead', 1.3607756421160062e-05], ['valid,', 1.3607756421160062e-05], ['[name.length()', 1.3607756421160062e-05], ['dim;', 1.3607756421160062e-05], ['(name.c_str(),', 1.3607756421160062e-05], ['ctx);', 1.3607756421160062e-05], ['(brig_opcode)', 1.3607756421160062e-05], ['builtin_type', 1.3607756421160062e-05], ['BITS_PER_UNIT', 1.3607756421160062e-05], ['NAME.', 1.3607756421160062e-05], ['mapped', 1.3607756421160062e-05], ['TREE_LIST', 1.3607756421160062e-05], ['CALL_EXPR', 1.3607756421160062e-05], ['MINUS_EXPR;', 1.3607756421160062e-05], ['MULT_EXPR;', 1.3607756421160062e-05], ['RDIV_EXPR;', 1.3607756421160062e-05], ['LSHIFT_EXPR;', 1.3607756421160062e-05], ['BIT_IOR_EXPR;', 1.3607756421160062e-05], ['BIT_XOR_EXPR;', 1.3607756421160062e-05], ['TRUNC_MOD_EXPR;', 1.3607756421160062e-05], ['regardless', 1.3607756421160062e-05], ['Called', 1.3607756421160062e-05], ['(inst.base.opcode', 1.3607756421160062e-05], ['default.', 1.3607756421160062e-05], ['data,', 1.3607756421160062e-05], ['PHSA_ERROR_PREFIX_INCOMPATIBLE_MODULE', 1.3607756421160062e-05], ['features.', 1.3607756421160062e-05], ['inst_base.opcode', 1.3607756421160062e-05], ['(inst_base,', 1.3607756421160062e-05], ['operands[1]));', 1.3607756421160062e-05], ['m_total_group_segment_usage', 1.3607756421160062e-05], ['straight', 1.3607756421160062e-05], ['SET_TYPE_ALIGN', 1.3607756421160062e-05], ['purposes', 1.3607756421160062e-05], ['skipped_entry_handler', 1.3607756421160062e-05], ['code_entry_handler_info', 1.3607756421160062e-05], ['BrigModuleHeader', 1.3607756421160062e-05], ['(m_code', 1.3607756421160062e-05], ['Does', 1.3607756421160062e-05], ['parsing.', 1.3607756421160062e-05], ['(m_cf', 1.3607756421160062e-05], ['&skipped_handler},', 1.3607756421160062e-05], ['entry_offset)', 1.3607756421160062e-05], ['var_decl;', 1.3607756421160062e-05], ['(VIEW_CONVERT_EXPR,', 1.3607756421160062e-05], ['keeping', 1.3607756421160062e-05], ['alignment,', 1.3607756421160062e-05], ['dump_function', 1.3607756421160062e-05], ['copy.', 1.3607756421160062e-05], ['cgraph_node::finalize_function', 1.3607756421160062e-05], ['"\\n;;', 1.3607756421160062e-05], ['TDF_NONE);', 1.3607756421160062e-05], ['(FILE', 1.3607756421160062e-05], ['(dump_file)', 1.3607756421160062e-05], ['OS', 1.3607756421160062e-05], ['requested.', 1.3607756421160062e-05], ['__cxa_atexit', 1.3607756421160062e-05], ['"no"', 1.3607756421160062e-05], ['macro', 1.3607756421160062e-05], ['files,', 1.3607756421160062e-05], ['this:', 1.3607756421160062e-05], ['linking.', 1.3607756421160062e-05], ['target_has_targetm_common=no', 1.3607756421160062e-05], ['aarch64*-*-*)', 1.3607756421160062e-05], ['arm*-*-*)', 1.3607756421160062e-05], ['g.opt', 1.3607756421160062e-05], ['sparc*-*-*)', 1.3607756421160062e-05], ['v850*-*-*)', 1.3607756421160062e-05], ['mx32)', 1.3607756421160062e-05], ["'Unknown", 1.3607756421160062e-05], ['extra_options="$extra_options', 1.3607756421160062e-05], ['form:', 1.3607756421160062e-05], ['native_system_header_dir=/include', 1.3607756421160062e-05], ['Enable', 1.3607756421160062e-05], ['x$gas', 1.3607756421160062e-05], ['thread_file=posix', 1.3607756421160062e-05], ['alpha/t-alpha"', 1.3607756421160062e-05], ['x${with_endian}', 1.3607756421160062e-05], ['with_endian=big', 1.3607756421160062e-05], ['"with_endian=${with_endian}', 1.3607756421160062e-05], ['arm/t-bpabi"', 1.3607756421160062e-05], ['arm/t-bpabi', 1.3607756421160062e-05], ['-o', 1.3607756421160062e-05], ['xno;', 1.3607756421160062e-05], ['hard)', 1.3607756421160062e-05], ['--with-float=$with_float"', 1.3607756421160062e-05], ['elfos.h"', 1.3607756421160062e-05], ['pa/pa-64.h', 1.3607756421160062e-05], ['pa/pa32-regs.h', 1.3607756421160062e-05], ['xposix', 1.3607756421160062e-05], ['"Unsupported', 1.3607756421160062e-05], ['values:"', 1.3607756421160062e-05], ['i386/gnu-user.h', 1.3607756421160062e-05], ['i386/bsd.h', 1.3607756421160062e-05], ['i386/gas.h', 1.3607756421160062e-05], ['logic', 1.3607756421160062e-05], ['MOTOROLA=1"', 1.3607756421160062e-05], ['m68k/t-mlibs"', 1.3607756421160062e-05], ['ABI.', 1.3607756421160062e-05], ['MIPS_ABI_DEFAULT=ABI_EABI"', 1.3607756421160062e-05], ['tmake_file="mips/t-elf"', 1.3607756421160062e-05], ['port', 1.3607756421160062e-05], ['rs6000/sysv4.h"', 1.3607756421160062e-05], ['rs6000/linux64.opt"', 1.3607756421160062e-05], ['rs6000/eabi.h', 1.3607756421160062e-05], ['confusion', 1.3607756421160062e-05], ['say', 1.3607756421160062e-05], ['abcdefghijklmnopqrstuvwxyz-', 1.3607756421160062e-05], ['tr', 1.3607756421160062e-05], ['*-leon-*)', 1.3607756421160062e-05], ['*-leon[3-9]*)', 1.3607756421160062e-05], ['tm_file="sparc/biarch64.h', 1.3607756421160062e-05], ['powerpc*-*-*', 1.3607756421160062e-05], ['cpu=generic', 1.3607756421160062e-05], ['"$with_arch"', 1.3607756421160062e-05], ['mips64r5900-*-*', 1.3607756421160062e-05], ['mips64r5900el-*-*', 1.3607756421160062e-05], ['mipsr5900-*-*', 1.3607756421160062e-05], ['mipsr5900el-*-*)', 1.3607756421160062e-05], ['"${target}"', 1.3607756421160062e-05], ['$which', 1.3607756421160062e-05], ['"^$pattern(\\"$base_val\\","', 1.3607756421160062e-05], ['${srcdir}/config/aarch64/$def', 1.3607756421160062e-05], ['Extract', 1.3607756421160062e-05], ['"^AARCH64_OPT_EXTENSION(\\"$base_ext\\","', 1.3607756421160062e-05], ['${srcdir}/config/aarch64/aarch64-option-extensions.def', 1.3607756421160062e-05], ['tune"', 1.3607756421160062e-05], ['tune;', 1.3607756421160062e-05], ['fpu', 1.3607756421160062e-05], ['hard', 1.3607756421160062e-05], ['"Error:', 1.3607756421160062e-05], ['exist', 1.3607756421160062e-05], ['options.', 1.3607756421160062e-05], ['arch_64', 1.3607756421160062e-05], ['Allow', 1.3607756421160062e-05], ['"${with_arch}"', 1.3607756421160062e-05], ['"unsupported', 1.3607756421160062e-05], ['FP', 1.3607756421160062e-05], ['r1', 1.3607756421160062e-05], ['aliases.', 1.3607756421160062e-05], ['}"', 1.3607756421160062e-05], ['m_next_group_offset', 1.3607756421160062e-05], ['pack_type', 1.3607756421160062e-05], ['8:', 1.3607756421160062e-05], ['128:', 1.3607756421160062e-05], ['external', 1.3607756421160062e-05], ['nunits);', 1.3607756421160062e-05], ['float_type_node;', 1.3607756421160062e-05], ['double_type_node;', 1.3607756421160062e-05], ['BRIG_2_TREE_HSAIL_C_REG_COUNT;', 1.3607756421160062e-05], ['reg_hash', 1.3607756421160062e-05], ['(reg_hash', 1.3607756421160062e-05], ['(reg_name,', 1.3607756421160062e-05], ['reg_hash);', 1.3607756421160062e-05], ['reg_name;', 1.3607756421160062e-05], ['SET_DECL_ALIGN', 1.3607756421160062e-05], ['DECL_USER_ALIGN', 1.3607756421160062e-05], ['elsewhere.', 1.3607756421160062e-05], ['(TYPE_SIZE', 1.3607756421160062e-05], ['natural_alignment', 1.3607756421160062e-05], ['uppercase', 1.3607756421160062e-05], ['*name)', 1.3607756421160062e-05], ['"rtl.h"', 1.3607756421160062e-05], ['"memmodel.h"', 1.3607756421160062e-05], ['speculative', 1.3607756421160062e-05], ['establish', 1.3607756421160062e-05], ['fully', 1.3607756421160062e-05], ['safe.', 1.3607756421160062e-05], ['clean', 1.3607756421160062e-05], ['aarch64_speculation_clobber_sp', 1.3607756421160062e-05], ['(gen_rtx_SET', 1.3607756421160062e-05], ['get_insns', 1.3607756421160062e-05], ['seq;', 1.3607756421160062e-05], ['SP.', 1.3607756421160062e-05], ['(insn);', 1.3607756421160062e-05], ['gen_rtx_fmt_ee', 1.3607756421160062e-05], ['0)),', 1.3607756421160062e-05], ['insert_insn_on_edge', 1.3607756421160062e-05], ['copies.', 1.3607756421160062e-05], ['emit_insn_before', 1.3607756421160062e-05], ['end;', 1.3607756421160062e-05], ['insn;', 1.3607756421160062e-05], ['call_insn', 1.3607756421160062e-05], ['BB.', 1.3607756421160062e-05], ['anon', 1.3607756421160062e-05], ['ends', 1.3607756421160062e-05], ['rtx_equal_p', 1.3607756421160062e-05], ['move.', 1.3607756421160062e-05], ['(operands[3]);', 1.3607756421160062e-05], ['short', 1.3607756421160062e-05], ['func_addr_rtx', 1.3607756421160062e-05], ['r4', 1.3607756421160062e-05], ['r5', 1.3607756421160062e-05], ['5);', 1.3607756421160062e-05], ['function_symbol', 1.3607756421160062e-05], ['SFUNC_STATIC).lab;', 1.3607756421160062e-05], ['r4);', 1.3607756421160062e-05], ['r5);', 1.3607756421160062e-05], ['*jump;', 1.3607756421160062e-05], ['*L_return', 1.3607756421160062e-05], ['*L_loop_byte', 1.3607756421160062e-05], ['(tmp3,', 1.3607756421160062e-05], ['tmp1));', 1.3607756421160062e-05], ['(gen_rotlhi3_8', 1.3607756421160062e-05], ['(L_loop_byte);', 1.3607756421160062e-05], ['addr2));', 1.3607756421160062e-05], ['(flag_delayed_branch)', 1.3607756421160062e-05], ['(L_return);', 1.3607756421160062e-05], ['(gen_subsi3', 1.3607756421160062e-05], ['(TARGET_SH2)', 1.3607756421160062e-05], ['(gen_dect', 1.3607756421160062e-05], ['lenw));', 1.3607756421160062e-05], ['(-1)));', 1.3607756421160062e-05], ['(QImode));', 1.3607756421160062e-05], ['len));', 1.3607756421160062e-05], ['bytes.', 1.3607756421160062e-05], ['(dest_addr,', 1.3607756421160062e-05], ['update_ccreg_mode', 1.3607756421160062e-05], ['m);', 1.3607756421160062e-05], ['recursively', 1.3607756421160062e-05], ['paths', 1.3607756421160062e-05], ['std::vector<ccreg_value>&', 1.3607756421160062e-05], ['optinfo_flags', 1.3607756421160062e-05], ['tv_id', 1.3607756421160062e-05], ['properties_required', 1.3607756421160062e-05], ['properties_provided', 1.3607756421160062e-05], ['properties_destroyed', 1.3607756421160062e-05], ['todo_flags_start', 1.3607756421160062e-05], ['todo_flags_finish', 1.3607756421160062e-05], ['ccr0', 1.3607756421160062e-05], ['INVALID_REGNUM;', 1.3607756421160062e-05], ['"no', 1.3607756421160062e-05], ['STORE_FLAG_VALUE);', 1.3607756421160062e-05], ['(m_ccreg);', 1.3607756421160062e-05], ['0)));', 1.3607756421160062e-05], ['SET', 1.3607756421160062e-05], ['const0_rtx)', 1.3607756421160062e-05], ['EQ', 1.3607756421160062e-05], ['("found', 1.3607756421160062e-05], ['(edge_iterator', 1.3607756421160062e-05], ['ei', 1.3607756421160062e-05], ['ei_start', 1.3607756421160062e-05], ['!ei_end_p', 1.3607756421160062e-05], ['ei_next', 1.3607756421160062e-05], ['(&ei))', 1.3607756421160062e-05], ['(BB_END', 1.3607756421160062e-05], ['find_regno_note', 1.3607756421160062e-05], ['(i->insn,', 1.3607756421160062e-05], ['somewhere', 1.3607756421160062e-05], ['pull', 1.3607756421160062e-05], ['combine', 1.3607756421160062e-05], ['----------', 1.3607756421160062e-05], ['(xor:SI', 1.3607756421160062e-05], ['50)', 1.3607756421160062e-05], ['replaced', 1.3607756421160062e-05], ['51)', 1.3607756421160062e-05], ['lifetime', 1.3607756421160062e-05], ['5)))', 1.3607756421160062e-05], ['invert', 1.3607756421160062e-05], ['dominating', 1.3607756421160062e-05], ['cstores.', 1.3607756421160062e-05], ['reg.', 1.3607756421160062e-05], ['find_set_of_reg_bb', 1.3607756421160062e-05], ['prev_nonnote_nondebug_insn_bb', 1.3607756421160062e-05], ['(bb', 1.3607756421160062e-05], ['Stop', 1.3607756421160062e-05], ['split_insns,', 1.3607756421160062e-05], ['condition_rtx_in_insn', 1.3607756421160062e-05], ['invoke', 1.3607756421160062e-05], ['trace,', 1.3607756421160062e-05], ['"set', 1.3607756421160062e-05], ['(new_entry.cstore.set_src', 1.3607756421160062e-05], ['store\\n");', 1.3607756421160062e-05], ['cstore_dst', 1.3607756421160062e-05], ['effective', 1.3607756421160062e-05], ['order,', 1.3607756421160062e-05], ['Count', 1.3607756421160062e-05], ['reached', 1.3607756421160062e-05], ['SImode', 1.3607756421160062e-05], ['(dst_reg)', 1.3607756421160062e-05], ['dominating_cstore)', 1.3607756421160062e-05], ['cstore_count', 1.3607756421160062e-05], ['(i->setcc.empty', 1.3607756421160062e-05], ['(dominating_cstore', 1.3607756421160062e-05], ['(new_i,', 1.3607756421160062e-05], ['aborting\\n");', 1.3607756421160062e-05], ['inv_cstore_count', 1.3607756421160062e-05], ['sub,', 1.3607756421160062e-05], ['s2a,', 1.3607756421160062e-05], ['s2a', 1.3607756421160062e-05], ['another,', 1.3607756421160062e-05], ['multiplier,', 1.3607756421160062e-05], ['thrown', 1.3607756421160062e-05], ['nonconstant', 1.3607756421160062e-05], ['insn_code', 1.3607756421160062e-05], ['necessary,', 1.3607756421160062e-05], ['7,', 1.3607756421160062e-05], ['11,', 1.3607756421160062e-05], ['num_vals', 1.3607756421160062e-05], ['num_vals;', 1.3607756421160062e-05], ['op;', 1.3607756421160062e-05], ['ARCH);', 1.3607756421160062e-05], ['powers', 1.3607756421160062e-05], ['((abs_multiplier', 1.3607756421160062e-05], ['10))', 1.3607756421160062e-05], ['prev_pow10', 1.3607756421160062e-05], ['(multiplier)', 1.3607756421160062e-05], ['reasonable', 1.3607756421160062e-05], ['warning.', 1.3607756421160062e-05], [',\\n', 1.3607756421160062e-05], ['{",', 1.3607756421160062e-05], ['group.', 1.3607756421160062e-05], ['*result', 1.3607756421160062e-05], ['cleanup', 1.3607756421160062e-05], ['DISJ_CONSTR)', 1.3607756421160062e-05], ['a)', 1.3607756421160062e-05], ['a;', 1.3607756421160062e-05], ['(fn,', 1.3607756421160062e-05], ['particular,', 1.3607756421160062e-05], ['TEMPLATE_DECL)', 1.3607756421160062e-05], ['DECL_TEMPLATE_RESULT', 1.3607756421160062e-05], ['(tmpl);', 1.3607756421160062e-05], ['(fn))', 1.3607756421160062e-05], ['candidate', 1.3607756421160062e-05], ['(target))', 1.3607756421160062e-05], ['(target);', 1.3607756421160062e-05], ['TREE_PURPOSE', 1.3607756421160062e-05], ['resolve_variable_concept_check', 1.3607756421160062e-05], ['tree&', 1.3607756421160062e-05], ['proto', 1.3607756421160062e-05], ['concept,', 1.3607756421160062e-05], ['disjunction.', 1.3607756421160062e-05], ['...;', 1.3607756421160062e-05], ['C<T>', 1.3607756421160062e-05], ['implication_context', 1.3607756421160062e-05], ['C2', 1.3607756421160062e-05], ['save_subsumption_result', 1.3607756421160062e-05], ['conjunctions', 1.3607756421160062e-05], ['tmpl,', 1.3607756421160062e-05], ['(body,', 1.3607756421160062e-05], ['get_concept_definition', 1.3607756421160062e-05], ['normalization', 1.3607756421160062e-05], ['requirement.', 1.3607756421160062e-05], ['noexcept', 1.3607756421160062e-05], ['present,', 1.3607756421160062e-05], ['constr;', 1.3607756421160062e-05], ['guarantee', 1.3607756421160062e-05], ['(PRED_CONSTR,', 1.3607756421160062e-05], ['definition,', 1.3607756421160062e-05], ['normalize_atom', 1.3607756421160062e-05], ['pushed', 1.3607756421160062e-05], ['(constraint_p', 1.3607756421160062e-05], ['push_down_pack_expansion', 1.3607756421160062e-05], ['disjunctions.', 1.3607756421160062e-05], ['parser', 1.3607756421160062e-05], ['declares', 1.3607756421160062e-05], ['(ci,', 1.3607756421160062e-05], ["declaration's", 1.3607756421160062e-05], ['(rest)', 1.3607756421160062e-05], ['build_concept_check', 1.3607756421160062e-05], ['TYPE_DECL', 1.3607756421160062e-05], ['(TREE_VEC_ELT', 1.3607756421160062e-05], ['pack,', 1.3607756421160062e-05], ['making', 1.3607756421160062e-05], ['respectively.', 1.3607756421160062e-05], ['DECL_SOURCE_LOCATION', 1.3607756421160062e-05], ['ident;', 1.3607756421160062e-05], ['template.', 1.3607756421160062e-05], ['placeholders', 1.3607756421160062e-05], ['a1,', 1.3607756421160062e-05], ['declarations,', 1.3607756421160062e-05], ['DEDUCT_CONSTR_PATTERN', 1.3607756421160062e-05], ['EXCEPT_CONSTR_EXPR', 1.3607756421160062e-05], ['subroutine', 1.3607756421160062e-05], ['prior', 1.3607756421160062e-05], ['(vars', 1.3607756421160062e-05], ['local_specialization_stack', 1.3607756421160062e-05], ['stack;', 1.3607756421160062e-05], ['constraint,', 1.3607756421160062e-05], ['exprs', 1.3607756421160062e-05], ['TYPE_CANONICAL', 1.3607756421160062e-05], ['(placeholder)', 1.3607756421160062e-05], ['PARM_CONSTR_OPERAND', 1.3607756421160062e-05], ['FN', 1.3607756421160062e-05], ['(ti);', 1.3607756421160062e-05], ['non-empty', 1.3607756421160062e-05], ['boolean_type_node,', 1.3607756421160062e-05], ['(r)', 1.3607756421160062e-05], ['structural', 1.3607756421160062e-05], ['%qD', 1.3607756421160062e-05], ['CONSTRAINT_INFO);', 1.3607756421160062e-05], ['B,', 1.3607756421160062e-05], ['nothrow', 1.3607756421160062e-05], ['constructible",', 1.3607756421160062e-05], ['class",', 1.3607756421160062e-05], ['meaning', 1.3607756421160062e-05], ['unsatisfied', 1.3607756421160062e-05], ['Parameters', 1.3607756421160062e-05], ['tf_warning_or_error,', 1.3607756421160062e-05], ['orig', 1.3607756421160062e-05], ['(orig));', 1.3607756421160062e-05], ['(orig);', 1.3607756421160062e-05], ['attached', 1.3607756421160062e-05], ['erase', 1.3607756421160062e-05], ['ent', 1.3607756421160062e-05], ['iter,', 1.3607756421160062e-05], ['(!includes', 1.3607756421160062e-05], ['(iter,', 1.3607756421160062e-05], ['*ptr', 1.3607756421160062e-05], ['(iter);', 1.3607756421160062e-05], ['proof_goal&', 1.3607756421160062e-05], ['(proof_goal&', 1.3607756421160062e-05], ['valid;', 1.3607756421160062e-05], ['undecided)', 1.3607756421160062e-05], ['(g.assumptions,', 1.3607756421160062e-05], ['p)', 1.3607756421160062e-05], ['p.begin();', 1.3607756421160062e-05], ['list,', 1.3607756421160062e-05], ['iter);', 1.3607756421160062e-05], ['(ti', 1.3607756421160062e-05], ['load_conclusions', 1.3607756421160062e-05], ['derive', 1.3607756421160062e-05], ['(proof);', 1.3607756421160062e-05], ['RIGHT', 1.3607756421160062e-05], ['"common/common-target.h"', 1.3607756421160062e-05], ['attribute_spec', 1.3607756421160062e-05], ['attribs', 1.3607756421160062e-05], ['insert_decl_attribute', 1.3607756421160062e-05], ['ident)', 1.3607756421160062e-05], ['build_attributes', 1.3607756421160062e-05], ['*sym', 1.3607756421160062e-05], ['come', 1.3607756421160062e-05], ['POINTER_TYPE', 1.3607756421160062e-05], ['variadic', 1.3607756421160062e-05], ['*node', 1.3607756421160062e-05], ['current_function_decl', 1.3607756421160062e-05], ['set_decl_section_name', 1.3607756421160062e-05], ['ctype;', 1.3607756421160062e-05], ['*d', 1.3607756421160062e-05], ['errors,', 1.3607756421160062e-05], ['builtin_converted_decls.safe_push', 1.3607756421160062e-05], ['(builtin_data', 1.3607756421160062e-05], ['(dtype,', 1.3607756421160062e-05], ['dtype;', 1.3607756421160062e-05], ['dtype->addMod', 1.3607756421160062e-05], ['imported,', 1.3607756421160062e-05], ['Module::create', 1.3607756421160062e-05], ['REFERENCE_TYPE)', 1.3607756421160062e-05], ['TypeFunction::create', 1.3607756421160062e-05], ['STRIP_TYPE_NOPS', 1.3607756421160062e-05], ['re', 1.3607756421160062e-05], ['INTEGER_CST)', 1.3607756421160062e-05], ['initialization,', 1.3607756421160062e-05], ['BUILTINyes;', 1.3607756421160062e-05], ['va_list.', 1.3607756421160062e-05], ['(dsym', 1.3607756421160062e-05], ['decls.', 1.3607756421160062e-05], ['unsignedp)', 1.3607756421160062e-05], ['integer_type_node;', 1.3607756421160062e-05], ['front-end.', 1.3607756421160062e-05], ['d_ubyte_type', 1.3607756421160062e-05], ['d_ushort_type', 1.3607756421160062e-05], ['d_uint_type', 1.3607756421160062e-05], ['d_ulong_type', 1.3607756421160062e-05], ['d_ucent_type', 1.3607756421160062e-05], ['lang_hooks.types.type_for_mode', 1.3607756421160062e-05], ['build_distinct_type_copy', 1.3607756421160062e-05], ['("ptr"),', 1.3607756421160062e-05], ['builtins.', 1.3607756421160062e-05], ['(strlen', 1.3607756421160062e-05], ['Builtin', 1.3607756421160062e-05], ['ARG1)', 1.3607756421160062e-05], ['ARG2)', 1.3607756421160062e-05], ['ARG3)', 1.3607756421160062e-05], ['ARG4)', 1.3607756421160062e-05], ['ARG5)', 1.3607756421160062e-05], ['ARG6)', 1.3607756421160062e-05], ['ARG7)', 1.3607756421160062e-05], ['ARG11)', 1.3607756421160062e-05], ['RET', 1.3607756421160062e-05], ['Methods', 1.3607756421160062e-05], ['copy_aggregate_type', 1.3607756421160062e-05], ['(STCout', 1.3607756421160062e-05], ['STCref))', 1.3607756421160062e-05], ['delegates.', 1.3607756421160062e-05], ['STClazy)', 1.3607756421160062e-05], ['applied.', 1.3607756421160062e-05], ['*arg)', 1.3607756421160062e-05], ['(arg->storageClass', 1.3607756421160062e-05], ['INTEGER_CST', 1.3607756421160062e-05], ['(TYPE_DYNAMIC_ARRAY', 1.3607756421160062e-05], ['(assumed', 1.3607756421160062e-05], ['field).', 1.3607756421160062e-05], ['Tarray:', 1.3607756421160062e-05], ['inheritance', 1.3607756421160062e-05], ['RECORD_TYPE,', 1.3607756421160062e-05], ['(binfo,', 1.3607756421160062e-05], ['delegate_method', 1.3607756421160062e-05], ['build_delegate_cst', 1.3607756421160062e-05], ['CONSTRUCTOR_ELTS', 1.3607756421160062e-05], ['CALLEE', 1.3607756421160062e-05], ['OBJECT', 1.3607756421160062e-05], ['(callee,', 1.3607756421160062e-05], ['ARRAY_REF:', 1.3607756421160062e-05], ['PARM_DECL:', 1.3607756421160062e-05], ['IMAGPART_EXPR:', 1.3607756421160062e-05], ['REALPART_EXPR:', 1.3607756421160062e-05], ['COMPONENT_REF:', 1.3607756421160062e-05], ['SAVE_EXPR', 1.3607756421160062e-05], ['stabilize_reference', 1.3607756421160062e-05], ['save_expr', 1.3607756421160062e-05], ['effects,', 1.3607756421160062e-05], ['temporary.', 1.3607756421160062e-05], ['strings', 1.3607756421160062e-05], ['(&exp);', 1.3607756421160062e-05], ['(CONSTANT_CLASS_P', 1.3607756421160062e-05], ['ADDR_EXPR)', 1.3607756421160062e-05], ['d_mark_used', 1.3607756421160062e-05], ['(StructDeclaration', 1.3607756421160062e-05], ['tb;', 1.3607756421160062e-05], ['ignoring', 1.3607756421160062e-05], ['NE_EXPR', 1.3607756421160062e-05], ['SD.', 1.3607756421160062e-05], ['type)->sym;', 1.3607756421160062e-05], ['t1ref,', 1.3607756421160062e-05], ['Floating-point', 1.3607756421160062e-05], ['build_struct_comparison', 1.3607756421160062e-05], ['(t2);', 1.3607756421160062e-05], ['comparing', 1.3607756421160062e-05], ['(length', 1.3607756421160062e-05], ['(lentype,', 1.3607756421160062e-05], ['(POSTINCREMENT_EXPR,', 1.3607756421160062e-05], ['body));', 1.3607756421160062e-05], ['(block),', 1.3607756421160062e-05], ['bitsize_zero_node;', 1.3607756421160062e-05], ['initialization.', 1.3607756421160062e-05], ['(vec_safe_is_empty', 1.3607756421160062e-05], ['TYPE_PACKED', 1.3607756421160062e-05], ['nesting', 1.3607756421160062e-05], ['vfield', 1.3607756421160062e-05], ['(init)', 1.3607756421160062e-05], ['FIELD_DECL', 1.3607756421160062e-05], ['nest,', 1.3607756421160062e-05], ['nested,', 1.3607756421160062e-05], ['field)', 1.3607756421160062e-05], ['rhs)', 1.3607756421160062e-05], ['fold_build1_loc', 1.3607756421160062e-05], ['NOP_EXPR,', 1.3607756421160062e-05], ['ARG1', 1.3607756421160062e-05], ['incase', 1.3607756421160062e-05], ['taken.', 1.3607756421160062e-05], ['(arg0);', 1.3607756421160062e-05], ['(arg0))', 1.3607756421160062e-05], ['arg1));', 1.3607756421160062e-05], ['arg2', 1.3607756421160062e-05], ['COND_EXPR,', 1.3607756421160062e-05], ['arg2);', 1.3607756421160062e-05], ['build_vcondition', 1.3607756421160062e-05], ['complex_expr', 1.3607756421160062e-05], ['re,', 1.3607756421160062e-05], ['build_offset_op', 1.3607756421160062e-05], ['(ptr),', 1.3607756421160062e-05], ['ARRAY_TYPE', 1.3607756421160062e-05], ['etype)', 1.3607756421160062e-05], ['build_bounds_condition', 1.3607756421160062e-05], ['d_assert_call', 1.3607756421160062e-05], ['d_build_call', 1.3607756421160062e-05], ['Probably', 1.3607756421160062e-05], ['(Type::tchar,', 1.3607756421160062e-05], ['fmodfn', 1.3607756421160062e-05], ['(COMPLEX_FLOAT_TYPE_P', 1.3607756421160062e-05], ['build_vthis_function', 1.3607756421160062e-05], ['d_function_chain', 1.3607756421160062e-05], ['d_function_chain->function', 1.3607756421160062e-05], ['(fd->loc),', 1.3607756421160062e-05], ['fd->toPrettyChars', 1.3607756421160062e-05], ['frame_ref', 1.3607756421160062e-05], ['frame.', 1.3607756421160062e-05], ['(get_frameinfo', 1.3607756421160062e-05], ['fields);', 1.3607756421160062e-05], ['(offset));', 1.3607756421160062e-05], ['(sd', 1.3607756421160062e-05], ['(fd)', 1.3607756421160062e-05], ['(fd->vthis);', 1.3607756421160062e-05], ['(AggregateDeclaration', 1.3607756421160062e-05], ['vthis_value', 1.3607756421160062e-05], ['frame/closure', 1.3607756421160062e-05], ['frame,', 1.3607756421160062e-05], ['fd->closureVars.dim;', 1.3607756421160062e-05], ['d_build_truthvalue_op', 1.3607756421160062e-05], ['type1;', 1.3607756421160062e-05], ['(op0)', 1.3607756421160062e-05], ['(type1))', 1.3607756421160062e-05], ['op1);', 1.3607756421160062e-05], ['(exp),', 1.3607756421160062e-05], ['leak', 1.3607756421160062e-05], ['tsize', 1.3607756421160062e-05], ['tbtype->nextOf', 1.3607756421160062e-05], ['Tpointer', 1.3607756421160062e-05], ['()->baseElemOf', 1.3607756421160062e-05], ['(!integer_zerop', 1.3607756421160062e-05], ['same_type_p', 1.3607756421160062e-05], ['"dmd/globals.h"', 1.3607756421160062e-05], ['extensions', 1.3607756421160062e-05], ['(*p);', 1.3607756421160062e-05], ["'\\0')", 1.3607756421160062e-05], ['flags.', 1.3607756421160062e-05], ['(ISDIGIT', 1.3607756421160062e-05], ['dmd', 1.3607756421160062e-05], ['gagged', 1.3607756421160062e-05], ['emit.', 1.3607756421160062e-05], ['DK_NOTE,', 1.3607756421160062e-05], ['DIAGNOSTICerror)', 1.3607756421160062e-05], ['deprecation', 1.3607756421160062e-05], ['DIAGNOSTICinform', 1.3607756421160062e-05], ['TOUPPER', 1.3607756421160062e-05], ['characters', 1.3607756421160062e-05], ['(&r.rv', 1.3607756421160062e-05], ['16-bit', 1.3607756421160062e-05], ['char*)', 1.3607756421160062e-05], ['p[1]', 1.3607756421160062e-05], ['identical', 1.3607756421160062e-05], ['Encode', 1.3607756421160062e-05], ['buffer.', 1.3607756421160062e-05], ['e->op', 1.3607756421160062e-05], ['(!strcmp', 1.3607756421160062e-05], ['prefix,', 1.3607756421160062e-05], ['compile.', 1.3607756421160062e-05], ['cl_decoded_option', 1.3607756421160062e-05], ['global.params.useAssert', 1.3607756421160062e-05], ['global.params.useArrayBounds', 1.3607756421160062e-05], ['current_binding_level', 1.3607756421160062e-05], ['line.', 1.3607756421160062e-05], ['"-")', 1.3607756421160062e-05], ['op)', 1.3607756421160062e-05], ['gimple_seq', 1.3607756421160062e-05], ['("%.*s",', 1.3607756421160062e-05], ['buf.offset,', 1.3607756421160062e-05], ['buf.data);', 1.3607756421160062e-05], ['supposed', 1.3607756421160062e-05], ['obstack', 1.3607756421160062e-05], ['&buf);', 1.3607756421160062e-05], ['d_type_for_mode', 1.3607756421160062e-05], ['d_byte_type;', 1.3607756421160062e-05], ['d_short_type;', 1.3607756421160062e-05], ['d_long_type;', 1.3607756421160062e-05], ['d_cent_type;', 1.3607756421160062e-05], ['lexical', 1.3607756421160062e-05], ['everything', 1.3607756421160062e-05], ['compatible', 1.3607756421160062e-05], ['*tc', 1.3607756421160062e-05], ['classes.', 1.3607756421160062e-05], ['lang_decl', 1.3607756421160062e-05], ['(d->csym)', 1.3607756421160062e-05], ['((TypeClass', 1.3607756421160062e-05], ['c[i][j]', 1.3607756421160062e-05], ['Vector', 1.3607756421160062e-05], ["IV's", 1.3607756421160062e-05], ['finally', 1.3607756421160062e-05], ['(re->type', 1.3607756421160062e-05], ['reduction:', 1.3607756421160062e-05], ['induction_p', 1.3607756421160062e-05], ['&re);', 1.3607756421160062e-05], ['FOR_EACH_IMM_USE_FAST', 1.3607756421160062e-05], ['USE_STMT', 1.3607756421160062e-05], ['(!flow_bb_inside_loop_p', 1.3607756421160062e-05], ['lcssa', 1.3607756421160062e-05], ['producer', 1.3607756421160062e-05], ['gsi_start_bb', 1.3607756421160062e-05], ['(PHI_RESULT', 1.3607756421160062e-05], ['optimization.', 1.3607756421160062e-05], ['initialized.', 1.3607756421160062e-05], ['series', 1.3607756421160062e-05], ['init)', 1.3607756421160062e-05], ['next)', 1.3607756421160062e-05], ['XCNEW', 1.3607756421160062e-05], ['like:', 1.3607756421160062e-05], ['operand_equal_p', 1.3607756421160062e-05], ['scev', 1.3607756421160062e-05], ['carried', 1.3607756421160062e-05], ['gimple_seq_add_stmt_without_update', 1.3607756421160062e-05], ['moving', 1.3607756421160062e-05], ['gsi_after_labels', 1.3607756421160062e-05], ['Prepare', 1.3607756421160062e-05], ['gsi_for_stmt', 1.3607756421160062e-05], ['(&stmts,', 1.3607756421160062e-05], ['(vec<data_reference_p>', 1.3607756421160062e-05], ['data_reference', 1.3607756421160062e-05], ['*stride', 1.3607756421160062e-05], ['(stride->length', 1.3607756421160062e-05], ['reset_debug_uses', 1.3607756421160062e-05], ['gsi_last_bb', 1.3607756421160062e-05], ['i_niters', 1.3607756421160062e-05], ['o_niters', 1.3607756421160062e-05], ['//use', 1.3607756421160062e-05], ['success,', 1.3607756421160062e-05], ['(DR_STMT', 1.3607756421160062e-05], ['strides->safe_push', 1.3607756421160062e-05], ['(loop', 1.3607756421160062e-05], ['matter.', 1.3607756421160062e-05], ['(loop_nest,', 1.3607756421160062e-05], ['stride->length', 1.3607756421160062e-05], ['all_seq_dr_before_p', 1.3607756421160062e-05], ['all_seq_dr_after_p', 1.3607756421160062e-05], ['(iloop_strides,', 1.3607756421160062e-05], ['LOOP.', 1.3607756421160062e-05], ['(loop))', 1.3607756421160062e-05], ['loop))', 1.3607756421160062e-05], ['loop->num_nodes;', 1.3607756421160062e-05], ['idx', 1.3607756421160062e-05], ['*loop', 1.3607756421160062e-05], ['loop_nest', 1.3607756421160062e-05], ['bb_refs;', 1.3607756421160062e-05], ['vNULL;', 1.3607756421160062e-05], ['d,', 1.3607756421160062e-05], ['need_stdcxx', 1.3607756421160062e-05], ['shared_libgcc', 1.3607756421160062e-05], ['PHOBOS_DEFAULT)', 1.3607756421160062e-05], ['PHOBOS_LINK;', 1.3607756421160062e-05], ['(args[i]', 1.3607756421160062e-05], ["'.';", 1.3607756421160062e-05], ['(OPT_Wl_,', 1.3607756421160062e-05], ['Target', 1.3607756421160062e-05], ['define_float_constants', 1.3607756421160062e-05], ['(buf),', 1.3607756421160062e-05], ['(type->isTypeBasic', 1.3607756421160062e-05], ['linkage.', 1.3607756421160062e-05], ['type->ty', 1.3607756421160062e-05], ['()->mutableOf', 1.3607756421160062e-05], ['"dmd/enum.h"', 1.3607756421160062e-05], ['namelen', 1.3607756421160062e-05], ['Compile', 1.3607756421160062e-05], ['importing', 1.3607756421160062e-05], ['!d->members)', 1.3607756421160062e-05], ['TypeInfo,', 1.3607756421160062e-05], ['(d->type);', 1.3607756421160062e-05], ['(d->type,', 1.3607756421160062e-05], ['layout_struct_initializer', 1.3607756421160062e-05], ['(d->csym);', 1.3607756421160062e-05], ['IDENTIFIER_DSYMBOL', 1.3607756421160062e-05], ['destruction.', 1.3607756421160062e-05], ['get_typeinfo_decl', 1.3607756421160062e-05], ['start_function', 1.3607756421160062e-05], ['parm_decl', 1.3607756421160062e-05], ['param_list', 1.3607756421160062e-05], ['parm_decl);', 1.3607756421160062e-05], ['May', 1.3607756421160062e-05], ['(build2', 1.3607756421160062e-05], ['static.', 1.3607756421160062e-05], ['mangled_name', 1.3607756421160062e-05], ['(decl->csym));', 1.3607756421160062e-05], ['newfntype', 1.3607756421160062e-05], ['cgraph_node', 1.3607756421160062e-05], ['decl_attributes', 1.3607756421160062e-05], ['Thunks', 1.3607756421160062e-05], ['(function),', 1.3607756421160062e-05], ['thunk,', 1.3607756421160062e-05], ['resolve_unique_section', 1.3607756421160062e-05], ['unit.', 1.3607756421160062e-05], ['(param)', 1.3607756421160062e-05], ['DECL_LANG_THUNKS', 1.3607756421160062e-05], ['DECL_COMDAT', 1.3607756421160062e-05], ['cd->vtblInterfaces->dim;', 1.3607756421160062e-05], ['cd;', 1.3607756421160062e-05], ['~0u)', 1.3607756421160062e-05], ['decl->sinit;', 1.3607756421160062e-05], ['StructLiteralExp', 1.3607756421160062e-05], ['build_type_decl', 1.3607756421160062e-05], ['(TYPE_STUB_DECL', 1.3607756421160062e-05], ['COMDAT', 1.3607756421160062e-05], ['eptype', 1.3607756421160062e-05], ['void,', 1.3607756421160062e-05], ['(e->type->ty', 1.3607756421160062e-05], ['e->e1->type,', 1.3607756421160062e-05], ['(tb2->ty', 1.3607756421160062e-05], ['(TRUTH_ANDIF_EXPR,', 1.3607756421160062e-05], ['(TRUTH_NOT_EXPR,', 1.3607756421160062e-05], ['concatenation', 1.3607756421160062e-05], ['Type::tint8->arrayOf', 1.3607756421160062e-05], ['(var),', 1.3607756421160062e-05], ['tinfo', 1.3607756421160062e-05], ['postblit', 1.3607756421160062e-05], ['TOKconstruct)', 1.3607756421160062e-05], ['objects.', 1.3607756421160062e-05], ['tmemset', 1.3607756421160062e-05], ['(BUILT_IN_MEMSET);', 1.3607756421160062e-05], ['(tmemset,', 1.3607756421160062e-05], ['Tpointer);', 1.3607756421160062e-05], ['or:', 1.3607756421160062e-05], ['((VarExp', 1.3607756421160062e-05], ['libcall;', 1.3607756421160062e-05], ['(ptr,', 1.3607756421160062e-05], ['(e->e1->type->toBasetype', 1.3607756421160062e-05], ['Adjust', 1.3607756421160062e-05], ['Tarray);', 1.3607756421160062e-05], ['lwr', 1.3607756421160062e-05], ['(e->e1,', 1.3607756421160062e-05], ['this->constp_);', 1.3607756421160062e-05], ['unlike', 1.3607756421160062e-05], ['ty1', 1.3607756421160062e-05], ['Calls', 1.3607756421160062e-05], ['*var', 1.3607756421160062e-05], ['thisexp', 1.3607756421160062e-05], ['(callee)', 1.3607756421160062e-05], ['belongs', 1.3607756421160062e-05], ['(tid);', 1.3607756421160062e-05], ['(this->constp_)', 1.3607756421160062e-05], ['initializer,', 1.3607756421160062e-05], ['Allocating', 1.3607756421160062e-05], ['e->newtype->toBasetype', 1.3607756421160062e-05], ['setup_exp', 1.3607756421160062e-05], ['(new_call);', 1.3607756421160062e-05], ['(e->argprefix)', 1.3607756421160062e-05], ['(e->argprefix),', 1.3607756421160062e-05], ['tuple', 1.3607756421160062e-05], ['assigns', 1.3607756421160062e-05], ['saved_elems', 1.3607756421160062e-05], ['constructor,', 1.3607756421160062e-05], ['(ctor),', 1.3607756421160062e-05], ['InterfaceDeclaration', 1.3607756421160062e-05], ['v.result', 1.3607756421160062e-05], ['intrinsics.', 1.3607756421160062e-05], ['DECL_FUNCTION_CODE', 1.3607756421160062e-05], ['decl->builtin', 1.3607756421160062e-05], ['(uint', 1.3607756421160062e-05], ['(ulong', 1.3607756421160062e-05], ['argsize', 1.3607756421160062e-05], ['bt', 1.3607756421160062e-05], ['bitnum);', 1.3607756421160062e-05], ['bitnum', 1.3607756421160062e-05], ['(real', 1.3607756421160062e-05], ['overflow);', 1.3607756421160062e-05], ['volatileLoad', 1.3607756421160062e-05], ['volatileStore', 1.3607756421160062e-05], ['module_info', 1.3607756421160062e-05], ['dso', 1.3607756421160062e-05], ['(expr_list,', 1.3607756421160062e-05], ['(fields)', 1.3607756421160062e-05], ['finish_builtin_struct', 1.3607756421160062e-05], ['(Type::tvoidptr,', 1.3607756421160062e-05], ['stride;', 1.3607756421160062e-05], ['likelihood', 1.3607756421160062e-05], ['opportunity', 1.3607756421160062e-05], ['loop_versioning', 1.3607756421160062e-05], ['get_inner_likelihood', 1.3607756421160062e-05], ['scale', 1.3607756421160062e-05], ['address.terms.length', 1.3607756421160062e-05], ['terms.', 1.3607756421160062e-05], ['loop_containing_stmt', 1.3607756421160062e-05], ['(loop_depth', 1.3607756421160062e-05], ['OP1_TREE', 1.3607756421160062e-05], ['OP2', 1.3607756421160062e-05], ['indexing', 1.3607756421160062e-05], ['Fortran', 1.3607756421160062e-05], ['unlikely_p', 1.3607756421160062e-05], ['&term)', 1.3607756421160062e-05], ['(mult));', 1.3607756421160062e-05], ['stride.', 1.3607756421160062e-05], ['address);', 1.3607756421160062e-05], ['type_size,', 1.3607756421160062e-05], ['linfo.rejected_p', 1.3607756421160062e-05], ['loop->inner;', 1.3607756421160062e-05], ['contour.', 1.3607756421160062e-05], ['point,', 1.3607756421160062e-05], ['longer', 1.3607756421160062e-05], ['lowering.', 1.3607756421160062e-05], ['*s,', 1.3607756421160062e-05], ['*ent', 1.3607756421160062e-05], ['d_function_chain->labels->get', 1.3607756421160062e-05], ['(ent', 1.3607756421160062e-05], ['(location,', 1.3607756421160062e-05], ['requiring', 1.3607756421160062e-05], ['(build_expr_dtor', 1.3607756421160062e-05], ['this->finish_scope', 1.3607756421160062e-05], ['lbreak', 1.3607756421160062e-05], ['this->push_break_label', 1.3607756421160062e-05], ['this->pop_break_label', 1.3607756421160062e-05], ['(lbreak);', 1.3607756421160062e-05], ['wrapping', 1.3607756421160062e-05], ['(s->statement);', 1.3607756421160062e-05], ['collection', 1.3607756421160062e-05], ['outputs', 1.3607756421160062e-05], ['*tm', 1.3607756421160062e-05], ['tm', 1.3607756421160062e-05], ['tm->merge2', 1.3607756421160062e-05], ['(tm));', 1.3607756421160062e-05], ['bcd;', 1.3607756421160062e-05], ['function(void*)', 1.3607756421160062e-05], ['TypeInfoDeclVisitor', 1.3607756421160062e-05], ['(decl->cpp_type_info_ptr_sym)', 1.3607756421160062e-05], ['SpeculativeTypeVisitor', 1.3607756421160062e-05], ['(fields', 1.3607756421160062e-05], ['layout_aggregate_type', 1.3607756421160062e-05], ['Types.', 1.3607756421160062e-05], ['fnparams', 1.3607756421160062e-05], ['(t->ctype,', 1.3607756421160062e-05], ['gcc_loc', 1.3607756421160062e-05], ['location.gcc_location();', 1.3607756421160062e-05], ['Bexpression', 1.3607756421160062e-05], ['permit', 1.3607756421160062e-05], ['bcomplex,', 1.3607756421160062e-05], ['std::vector<Bexpression*>&,', 1.3607756421160062e-05], ['defer,', 1.3607756421160062e-05], ['bcode,', 1.3607756421160062e-05], ['this->integer_type(true,', 1.3607756421160062e-05], ['build_pointer_type(build_qualified_type(t,', 1.3607756421160062e-05], ['TYPE_QUAL_VOLATILE));', 1.3607756421160062e-05], ['build_function_type_list(t,', 1.3607756421160062e-05], ['long_double_type_node,', 1.3607756421160062e-05], ['bits)', 1.3607756421160062e-05], ['element_btype,', 1.3607756421160062e-05], ['element_type_tree', 1.3607756421160062e-05], ['tt', 1.3607756421160062e-05], ['TYPE_NAME(copy)', 1.3607756421160062e-05], ['TREE_CODE(type)', 1.3607756421160062e-05], ['expr->get_tree();', 1.3607756421160062e-05], ['TREE_CONSTANT(decl)', 1.3607756421160062e-05], ['TREE_TYPE(expr_tree)', 1.3607756421160062e-05], ['expr_tree));', 1.3607756421160062e-05], ['(func', 1.3607756421160062e-05], ['turns', 1.3607756421160062e-05], ['then_tree', 1.3607756421160062e-05], ['else_tree', 1.3607756421160062e-05], ['is_constant', 1.3607756421160062e-05], ['Calling', 1.3607756421160062e-05], ['var->get_decl();', 1.3607756421160062e-05], ['init_tree;', 1.3607756421160062e-05], ['this->make_statement(stmt_list);', 1.3607756421160062e-05], ['ps', 1.3607756421160062e-05], ['append_to_statement_list(t,', 1.3607756421160062e-05], ['bind_tree', 1.3607756421160062e-05], ['TREE_STATIC(decl)', 1.3607756421160062e-05], ['DECL_CONTEXT(decl)', 1.3607756421160062e-05], ['(is_address_taken)', 1.3607756421160062e-05], ['is_common,', 1.3607756421160062e-05], ['(is_common)', 1.3607756421160062e-05], ['DECL_WEAK(decl)', 1.3607756421160062e-05], ['immutable', 1.3607756421160062e-05], ['functype', 1.3607756421160062e-05], ['type_decls,', 1.3607756421160062e-05], ['defs[i]', 1.3607756421160062e-05], ['std::stringstream', 1.3607756421160062e-05], ['backend.', 1.3607756421160062e-05], ['checksum', 1.3607756421160062e-05], ['"expressions.h"', 1.3607756421160062e-05], ['Ast_dump_traverse_blocks_and_functions', 1.3607756421160062e-05], ['traversed', 1.3607756421160062e-05], ['Function::Results*', 1.3607756421160062e-05], ['Result_variable*', 1.3607756421160062e-05], ['(!no->is_variable())', 1.3607756421160062e-05], ['preinit', 1.3607756421160062e-05], ['no->message_name()', 1.3607756421160062e-05], ['"}";', 1.3607756421160062e-05], ['std::cerr.', 1.3607756421160062e-05], ['lstr', 1.3607756421160062e-05], ['Type*,', 1.3607756421160062e-05], ['tag,', 1.3607756421160062e-05], ['std::pair<bool,', 1.3607756421160062e-05], ['this->typeref(NULL,', 1.3607756421160062e-05], ['Type::TYPE_STRUCT:', 1.3607756421160062e-05], ['results->end();', 1.3607756421160062e-05], ['(at->length()', 1.3607756421160062e-05], ['(this->is_indirect())', 1.3607756421160062e-05], ['(this->statement()', 1.3607756421160062e-05], ['Linemap::unknown_location();', 1.3607756421160062e-05], ['no->is_result_variable())', 1.3607756421160062e-05], ['no->location();', 1.3607756421160062e-05], ['(no->is_function()', 1.3607756421160062e-05], ['"for', 1.3607756421160062e-05], ["')", 1.3607756421160062e-05], ['is_in_heap', 1.3607756421160062e-05], ['Expression::EXPRESSION_UNARY:', 1.3607756421160062e-05], ['Expression::EXPRESSION_FUNC_REFERENCE:', 1.3607756421160062e-05], ['Runtime::MAKECHAN:', 1.3607756421160062e-05], ['Runtime::MAKECHAN64:', 1.3607756421160062e-05], ['Runtime::MAKEMAP:', 1.3607756421160062e-05], ['Runtime::MAKESLICE:', 1.3607756421160062e-05], ['Runtime::MAKESLICE64:', 1.3607756421160062e-05], ['call->fn()->func_expression();', 1.3607756421160062e-05], ['state->loop_depth', 1.3607756421160062e-05], ['(!fn->is_function())', 1.3607756421160062e-05], ['strongly', 1.3607756421160062e-05], ['stack.begin();', 1.3607756421160062e-05], ['stack.end();', 1.3607756421160062e-05], ['(std::vector<Named_object*>::iterator', 1.3607756421160062e-05], ['Escape_context*', 1.3607756421160062e-05], ['(std::vector<Node*>::const_iterator', 1.3607756421160062e-05], ['"[%d]', 1.3607756421160062e-05], ['this->context_->loop_depth(),', 1.3607756421160062e-05], ['(call->is_builtin())', 1.3607756421160062e-05], ['Builtin_call_expression*', 1.3607756421160062e-05], ['Node::make_node(call->args()->front());', 1.3607756421160062e-05], ['Node::make_node(call->args()->back());', 1.3607756421160062e-05], ['this->assign_deref(this->context_->sink(),', 1.3607756421160062e-05], ['array_node', 1.3607756421160062e-05], ['(vals', 1.3607756421160062e-05], ['((*p)', 1.3607756421160062e-05], ['n->state(this->context_,', 1.3607756421160062e-05], ['known.', 1.3607756421160062e-05], ['Interface_field_reference_expression*', 1.3607756421160062e-05], ['arg_nodes.end();', 1.3607756421160062e-05], ['call_node->state(this->context_,', 1.3607756421160062e-05], ['til', 1.3607756421160062e-05], ['til->begin();', 1.3607756421160062e-05], ['src)', 1.3607756421160062e-05], ['e->field_reference_expression()->expr();', 1.3607756421160062e-05], ['slicing', 1.3607756421160062e-05], ['fit', 1.3607756421160062e-05], ['src_state', 1.3607756421160062e-05], ['params->end();', 1.3607756421160062e-05], ['dst_no', 1.3607756421160062e-05], ['(src->encoding()', 1.3607756421160062e-05], ['src->set_encoding(enc);', 1.3607756421160062e-05], ['Slice_construction_expression*', 1.3607756421160062e-05], ['key,', 1.3607756421160062e-05], ['exporting', 1.3607756421160062e-05], ['(no->is_function_declaration()', 1.3607756421160062e-05], ["'.')", 1.3607756421160062e-05], ['bindings->begin_declarations();', 1.3607756421160062e-05], ['bindings->end_declarations();', 1.3607756421160062e-05], ['Traverse(traverse_types),', 1.3607756421160062e-05], ['type->named_type();', 1.3607756421160062e-05], ['this->type_index_;', 1.3607756421160062e-05], ['"init"', 1.3607756421160062e-05], ['mit', 1.3607756421160062e-05], ['%lu",', 1.3607756421160062e-05], ['buf[30];', 1.3607756421160062e-05], ['go_assert(index', 1.3607756421160062e-05], ['std::string::npos);', 1.3607756421160062e-05], ['rval;', 1.3607756421160062e-05], ['discarded.', 1.3607756421160062e-05], ['Expression::make_interface_info(rhs,', 1.3607756421160062e-05], ['cval;', 1.3607756421160062e-05], ['val_type', 1.3607756421160062e-05], ['val_type,', 1.3607756421160062e-05], ['bound_type_size', 1.3607756421160062e-05], ['this->expr_->dump_expression(ast_dump_context);', 1.3607756421160062e-05], ['bloc', 1.3607756421160062e-05], ['std::string::npos', 1.3607756421160062e-05], ['Named_object::NAMED_OBJECT_TYPE_DECLARATION:', 1.3607756421160062e-05], ['Named_object::NAMED_OBJECT_PACKAGE:', 1.3607756421160062e-05], ['val_;', 1.3607756421160062e-05], ['characteristic', 1.3607756421160062e-05], ['byte_type', 1.3607756421160062e-05], ['"unknown");', 1.3607756421160062e-05], ['ast_dump_context,', 1.3607756421160062e-05], ['do_check_types(Gogo*);', 1.3607756421160062e-05], ['this->type_->copy_expressions()),', 1.3607756421160062e-05], ['Type::make_abstract_integer_type();', 1.3607756421160062e-05], ['context->gogo()->backend()->error_expression();', 1.3607756421160062e-05], ['imp->read_identifier();', 1.3607756421160062e-05], ['GMP_RNDN)', 1.3607756421160062e-05], ['mpfr_clear(val);', 1.3607756421160062e-05], ['do_traverse(Traverse*);', 1.3607756421160062e-05], ['this->constant_->const_value()->expr();', 1.3607756421160062e-05], ['ok;', 1.3607756421160062e-05], ['Named_constant*', 1.3607756421160062e-05], ['"constant', 1.3607756421160062e-05], ['iota.', 1.3607756421160062e-05], ['(type->is_slice_type())', 1.3607756421160062e-05], ['&c);', 1.3607756421160062e-05], ['expr_type->interface_type()', 1.3607756421160062e-05], ['expr_type->is_string_type())', 1.3607756421160062e-05], ['this->expr_->determine_type(&subcontext);', 1.3607756421160062e-05], ['type->function_type()', 1.3607756421160062e-05], ['Expression::make_cast(type,', 1.3607756421160062e-05], ['imp->require_c_string(")");', 1.3607756421160062e-05], ['issued_error;', 1.3607756421160062e-05], ['nc,', 1.3607756421160062e-05], ['*issued_error', 1.3607756421160062e-05], ['mpc_init2(val,', 1.3607756421160062e-05], ['mpz_init(val);', 1.3607756421160062e-05], ['points_to', 1.3607756421160062e-05], ['(type->points_to()', 1.3607756421160062e-05], ['(left_type->integer_type()', 1.3607756421160062e-05], ['cmp)', 1.3607756421160062e-05], ['left_nc->type();', 1.3607756421160062e-05], ['mpz_clear(left_val);', 1.3607756421160062e-05], ['mpfr_clear(left_val);', 1.3607756421160062e-05], ['mpc_clear(left_val);', 1.3607756421160062e-05], ['LEFT_NC', 1.3607756421160062e-05], ['RIGHT_NC,', 1.3607756421160062e-05], ['0x100000)', 1.3607756421160062e-05], ['"division', 1.3607756421160062e-05], ['zero");', 1.3607756421160062e-05], ['this->left_;', 1.3607756421160062e-05], ['(is_comparison)', 1.3607756421160062e-05], ['(!Type::are_compatible_for_comparison(true,', 1.3607756421160062e-05], ['this->left_->type(),', 1.3607756421160062e-05], ['field_index,', 1.3607756421160062e-05], ['this->right_->type();', 1.3607756421160062e-05], ['this->right_', 1.3607756421160062e-05], ['this->right_,', 1.3607756421160062e-05], ['a1', 1.3607756421160062e-05], ['is_shift_op', 1.3607756421160062e-05], ['Type::make_void_type();', 1.3607756421160062e-05], ['tleft;', 1.3607756421160062e-05], ['this->report_error(_("incompatible', 1.3607756421160062e-05], ['this->report_error(_("shift', 1.3607756421160062e-05], ['gogo->backend()->binary_expression(OPERATOR_LT,', 1.3607756421160062e-05], ['Expression::traverse(&this->expr_,', 1.3607756421160062e-05], ['this->method_->named_object();', 1.3607756421160062e-05], ['this->expr_type_', 1.3607756421160062e-05], ['Method*', 1.3607756421160062e-05], ['Expression::make_dereference(arg,', 1.3607756421160062e-05], ['gogo->lookup(p->name(),', 1.3607756421160062e-05], ['call->set_varargs_are_lowered();', 1.3607756421160062e-05], ['Statement::make_return_from_call(call,', 1.3607756421160062e-05], ['gogo->add_statement(s);', 1.3607756421160062e-05], ['gogo->add_block(b,', 1.3607756421160062e-05], ['Function_type', 1.3607756421160062e-05], ['Bound_method_expression*', 1.3607756421160062e-05], ['%<...%>', 1.3607756421160062e-05], ['farg', 1.3607756421160062e-05], ['BUILTIN_DELETE:', 1.3607756421160062e-05], ['(this->args()', 1.3607756421160062e-05], ['this->args()->end();', 1.3607756421160062e-05], ['len_arg', 1.3607756421160062e-05], ['"non-integer', 1.3607756421160062e-05], ['type->array_type()->element_type();', 1.3607756421160062e-05], ['type_arg,', 1.3607756421160062e-05], ['ASSIGN_LHS', 1.3607756421160062e-05], ['(assign_lhs', 1.3607756421160062e-05], ['call_args,', 1.3607756421160062e-05], ['&len);', 1.3607756421160062e-05], ['Statement::make_temporary(int_type,', 1.3607756421160062e-05], ['l2tmp', 1.3607756421160062e-05], ['args->end();', 1.3607756421160062e-05], ['Expression::make_temporary_reference(l1tmp,', 1.3607756421160062e-05], ['go_error_at(e->location(),', 1.3607756421160062e-05], ['make",', 1.3607756421160062e-05], ['is_length', 1.3607756421160062e-05], ['"len"', 1.3607756421160062e-05], ['"cap");', 1.3607756421160062e-05], ['(nt->name()', 1.3607756421160062e-05], ['(arg_type->points_to()', 1.3607756421160062e-05], ['arg_type->points_to();', 1.3607756421160062e-05], ['(arg_type->array_type()', 1.3607756421160062e-05], ['BUILTIN_INVALID:', 1.3607756421160062e-05], ['BUILTIN_CLOSE:', 1.3607756421160062e-05], ['args->empty())', 1.3607756421160062e-05], ['(this->check_one_arg())', 1.3607756421160062e-05], ['%<%s%>",', 1.3607756421160062e-05], ['incompatible', 1.3607756421160062e-05], ['Expression::make_compound(print_stmts,', 1.3607756421160062e-05], ['itype', 1.3607756421160062e-05], ['this->args_->end();', 1.3607756421160062e-05], ['Expression_list', 1.3607756421160062e-05], ['Expression::make_call(fn,', 1.3607756421160062e-05], ['is_interface_method', 1.3607756421160062e-05], ['fntype->is_method())', 1.3607756421160062e-05], ['pt;', 1.3607756421160062e-05], ['ref->get_backend(context);', 1.3607756421160062e-05], ['has_closure_arg', 1.3607756421160062e-05], ['bclosure', 1.3607756421160062e-05], ['correct.', 1.3607756421160062e-05], ['pr', 1.3607756421160062e-05], ['this->index_', 1.3607756421160062e-05], ['(type->array_type()', 1.3607756421160062e-05], ['Index_expression::dump_index_expression(ast_dump_context,', 1.3607756421160062e-05], ['(this->start_->type()->integer_type()', 1.3607756421160062e-05], ['this->report_error(_("slice', 1.3607756421160062e-05], ['int_bits', 1.3607756421160062e-05], ['ival_valid', 1.3607756421160062e-05], ['(mpz_sgn(ival)', 1.3607756421160062e-05], ['lval)', 1.3607756421160062e-05], ['range"));', 1.3607756421160062e-05], ['(mt', 1.3607756421160062e-05], ['mt->val_type();', 1.3607756421160062e-05], ['type->struct_type();', 1.3607756421160062e-05], ['gogo->backend()->zero_expression(btype);', 1.3607756421160062e-05], ['this->type_->struct_type()->fields();', 1.3607756421160062e-05], ['(*pv)->type(),', 1.3607756421160062e-05], ['*pv,', 1.3607756421160062e-05], ['literal",', 1.3607756421160062e-05], ['is_static_initializer', 1.3607756421160062e-05], ['this->type_->map_type();', 1.3607756421160062e-05], ['"variable', 1.3607756421160062e-05], ['traverse_order', 1.3607756421160062e-05], ['go_error_at(name_expr->location(),', 1.3607756421160062e-05], ['(no', 1.3607756421160062e-05], ['type->named_type()->message_name().c_str()', 1.3607756421160062e-05], ['"unnamed', 1.3607756421160062e-05], ['Unordered_map(unsigned', 1.3607756421160062e-05], ['lit', 1.3607756421160062e-05], ['channel_type', 1.3607756421160062e-05], ['Linemap::predeclared_location()),', 1.3607756421160062e-05], ['this->type_info_', 1.3607756421160062e-05], ['Typed_identifier', 1.3607756421160062e-05], ['error:', 1.3607756421160062e-05], ['this->begin();', 1.3607756421160062e-05], ['this->end();', 1.3607756421160062e-05], ['Numeric_constant&', 1.3607756421160062e-05], ['mpz_init_set(this->u_.int_val,', 1.3607756421160062e-05], ['this->u_.int_val);', 1.3607756421160062e-05], ['this->u_.complex_val,', 1.3607756421160062e-05], ['(!mpfr_zero_p(mpc_imagref(this->u_.complex_val)))', 1.3607756421160062e-05], ['ival,', 1.3607756421160062e-05], ['fval,', 1.3607756421160062e-05], ['mpc_realref(this->u_.complex_val),', 1.3607756421160062e-05], ['this->u_.int_val,', 1.3607756421160062e-05], ['"complex', 1.3607756421160062e-05], ['(type->bits())', 1.3607756421160062e-05], ['max_exp', 1.3607756421160062e-05], ['*c;', 1.3607756421160062e-05], ['va_start(ap,', 1.3607756421160062e-05], ['fmt);', 1.3607756421160062e-05], ['expand_message(fmt,', 1.3607756421160062e-05], ['ap));', 1.3607756421160062e-05], ['va_end(ap);', 1.3607756421160062e-05], ['strcmp(name,', 1.3607756421160062e-05], ['%s:', 1.3607756421160062e-05], ['unspecified', 1.3607756421160062e-05], ['this->pkgpath_symbol_', 1.3607756421160062e-05], ['package_name', 1.3607756421160062e-05], ['package_name;', 1.3607756421160062e-05], ['(this->is_main_package())', 1.3607756421160062e-05], ['dot_alias', 1.3607756421160062e-05], ['init_name,', 1.3607756421160062e-05], ['this->imported_init_fns_.begin();', 1.3607756421160062e-05], ['this->imported_init_fns_.end();', 1.3607756421160062e-05], ['this->package_->bindings();', 1.3607756421160062e-05], ['unknown_loc);', 1.3607756421160062e-05], ['builtin_loc);', 1.3607756421160062e-05], ['(*p)->location();', 1.3607756421160062e-05], ['no_loc);', 1.3607756421160062e-05], ['this->initialization_function_decl();', 1.3607756421160062e-05], ['const_iterator', 1.3607756421160062e-05], ['&find_vars);', 1.3607756421160062e-05], ['(dep', 1.3607756421160062e-05], ['V1', 1.3607756421160062e-05], ['var_inits->begin();', 1.3607756421160062e-05], ['var_inits->end();', 1.3607756421160062e-05], ['this->current_bindings();', 1.3607756421160062e-05], ['const_decls,', 1.3607756421160062e-05], ['var_init_stmt', 1.3607756421160062e-05], ['var->init();', 1.3607756421160062e-05], ['package;', 1.3607756421160062e-05], ['err', 1.3607756421160062e-05], ['this->packages_.begin();', 1.3607756421160062e-05], ['this->packages_.end();', 1.3607756421160062e-05], ['this->function_', 1.3607756421160062e-05], ['sorig)', 1.3607756421160062e-05], ['changes.', 1.3607756421160062e-05], ['snew', 1.3607756421160062e-05], ['(pshortcut', 1.3607756421160062e-05], ['pd', 1.3607756421160062e-05], ['bindings.', 1.3607756421160062e-05], ['traverse_mask', 1.3607756421160062e-05], ['(this->block_', 1.3607756421160062e-05], ['Traverse::traverse_types))', 1.3607756421160062e-05], ['(this->descriptor_', 1.3607756421160062e-05], ['imp->location());', 1.3607756421160062e-05], ['Backend::function_is_visible;', 1.3607756421160062e-05], ['this->fndecl_;', 1.3607756421160062e-05], ['this->block_,', 1.3607756421160062e-05], ['code_stmt', 1.3607756421160062e-05], ['indentation",', 1.3607756421160062e-05], ['number",', 1.3607756421160062e-05], ['lineno', 1.3607756421160062e-05], ['start_loc);', 1.3607756421160062e-05], ['(report_error)', 1.3607756421160062e-05], ['(get_index_type)', 1.3607756421160062e-05], ['this->backend_', 1.3607756421160062e-05], ['Thos', 1.0205817315870046e-05], ['Jan.', 1.0205817315870046e-05], ['NOT', 1.0205817315870046e-05], ['19', 1.0205817315870046e-05], ['by:', 1.0205817315870046e-05], ['California', 1.0205817315870046e-05], ['USA', 1.0205817315870046e-05], ['couple', 1.0205817315870046e-05], ['Reports', 1.0205817315870046e-05], ['collected', 1.0205817315870046e-05], ['outputs,', 1.0205817315870046e-05], ['minimal', 1.0205817315870046e-05], ['follows', 1.0205817315870046e-05], ['U', 1.0205817315870046e-05], ['P', 1.0205817315870046e-05], ['GMult', 1.0205817315870046e-05], ['major', 1.0205817315870046e-05], ['apart', 1.0205817315870046e-05], ['used,', 1.0205817315870046e-05], ['follows:', 1.0205817315870046e-05], ['library,', 1.0205817315870046e-05], ['<string.h>', 1.0205817315870046e-05], ['<stdlib.h>', 1.0205817315870046e-05], ['pieces', 1.0205817315870046e-05], ['need.', 1.0205817315870046e-05], ['verbose', 1.0205817315870046e-05], ['sizes.', 1.0205817315870046e-05], ['internal_max', 1.0205817315870046e-05], ['code);', 1.0205817315870046e-05], ['operator-', 1.0205817315870046e-05], ['abs', 1.0205817315870046e-05], ['(int);', 1.0205817315870046e-05], ['(&f);', 1.0205817315870046e-05], ["'-')", 1.0205817315870046e-05], ['ai,', 1.0205817315870046e-05], ['ab[64],', 1.0205817315870046e-05], ['(ab,', 1.0205817315870046e-05], ['sizeof(ab),', 1.0205817315870046e-05], ['%c', 1.0205817315870046e-05], ['ab,', 1.0205817315870046e-05], ['symbol_for_code,', 1.0205817315870046e-05], ['real_compare', 1.0205817315870046e-05], ['">";', 1.0205817315870046e-05], ['"false"));', 1.0205817315870046e-05], ['real_to_integer', 1.0205817315870046e-05], ['char,', 1.0205817315870046e-05], ['image)', 1.0205817315870046e-05], ['(image);', 1.0205817315870046e-05], ['(float', 1.0205817315870046e-05], ['(double)a,', 1.0205817315870046e-05], ['double)a,', 1.0205817315870046e-05], ['double)', 1.0205817315870046e-05], ['&f)', 1.0205817315870046e-05], ['???', 1.0205817315870046e-05], ['F', 1.0205817315870046e-05], ['long(0);', 1.0205817315870046e-05], ['z', 1.0205817315870046e-05], ['#elif', 1.0205817315870046e-05], ['(ld);', 1.0205817315870046e-05], ['ld);', 1.0205817315870046e-05], ['one;', 1.0205817315870046e-05], ['xm1;', 1.0205817315870046e-05], ['(n);', 1.0205817315870046e-05], ['sum;', 1.0205817315870046e-05], ['again', 1.0205817315870046e-05], ['20;', 1.0205817315870046e-05], ['Yes', 1.0205817315870046e-05], ['BMinusU2;', 1.0205817315870046e-05], ['TwoForty;', 1.0205817315870046e-05], ['E9;', 1.0205817315870046e-05], ['Third;', 1.0205817315870046e-05], ['HInvrse;', 1.0205817315870046e-05], ['Precision;', 1.0205817315870046e-05], ['ErrCnt[Failure]', 1.0205817315870046e-05], ['("Comparison', 1.0205817315870046e-05], ['(Four', 1.0205817315870046e-05], ['27,', 1.0205817315870046e-05], ['O.K.\\n");', 1.0205817315870046e-05], ['Zero);', 1.0205817315870046e-05], ['Radix.str());', 1.0205817315870046e-05], ['"Radix', 1.0205817315870046e-05], ['(Precision', 1.0205817315870046e-05], ['Integer', 1.0205817315870046e-05], ['minor', 1.0205817315870046e-05], ['Three)', 1.0205817315870046e-05], ['((One', 1.0205817315870046e-05], ['(Z1', 1.0205817315870046e-05], ['((Z1', 1.0205817315870046e-05], ['(X);', 1.0205817315870046e-05], ['Yes;', 1.0205817315870046e-05], ['No;', 1.0205817315870046e-05], ['"*', 1.0205817315870046e-05], ['wrong.\\n");', 1.0205817315870046e-05], ['1");', 1.0205817315870046e-05], ['(F9', 1.0205817315870046e-05], ['subtraction', 1.0205817315870046e-05], ['Other;', 1.0205817315870046e-05], ['(U2', 1.0205817315870046e-05], ['Rounded;', 1.0205817315870046e-05], ['Chopped;', 1.0205817315870046e-05], ['chopped', 1.0205817315870046e-05], ['rounded.\\n");', 1.0205817315870046e-05], ['(!((X', 1.0205817315870046e-05], ['Zero)))', 1.0205817315870046e-05], ['(RDiv', 1.0205817315870046e-05], ['(GAddSub', 1.0205817315870046e-05], ['rounds', 1.0205817315870046e-05], ['chops.\\n");', 1.0205817315870046e-05], ['Half);', 1.0205817315870046e-05], ['NoTrials);', 1.0205817315870046e-05], ['(Serious);', 1.0205817315870046e-05], ['Monot', 1.0205817315870046e-05], ['(Z);', 1.0205817315870046e-05], ['Q;', 1.0205817315870046e-05], ['Z));', 1.0205817315870046e-05], ['C;', 1.0205817315870046e-05], ['C)', 1.0205817315870046e-05], ['Underflow;', 1.0205817315870046e-05], ['PseudoZero;', 1.0205817315870046e-05], ['(I)', 1.0205817315870046e-05], ['UfThold)', 1.0205817315870046e-05], ['("X', 1.0205817315870046e-05], ['X.str(),', 1.0205817315870046e-05], ['occurs', 1.0205817315870046e-05], ['Overflow', 1.0205817315870046e-05], ['++Indx)', 1.0205817315870046e-05], ['"is', 1.0205817315870046e-05], ['5:', 1.0205817315870046e-05], ['5)', 1.0205817315870046e-05], ['=",', 1.0205817315870046e-05], ['discovered', 1.0205817315870046e-05], ['fatal', 1.0205817315870046e-05], ['conform', 1.0205817315870046e-05], ['Random1)', 1.0205817315870046e-05], ['vary', 1.0205817315870046e-05], ['>().main();', 1.0205817315870046e-05], ['stuff', 1.0205817315870046e-05], ["wasn't", 1.0205817315870046e-05], ['"dump-context.h"', 1.0205817315870046e-05], ['destinations.', 1.0205817315870046e-05], ['text;', 1.0205817315870046e-05], ['fmt;', 1.0205817315870046e-05], ['(this', 1.0205817315870046e-05], ['singleton', 1.0205817315870046e-05], ['opt_problem', 1.0205817315870046e-05], ['opt_result::success', 1.0205817315870046e-05], ['temp_dump_context', 1.0205817315870046e-05], ['(with_dumping)', 1.0205817315870046e-05], ['boolean.', 1.0205817315870046e-05], ['non-trivial', 1.0205817315870046e-05], ['%G",', 1.0205817315870046e-05], ['Simulate', 1.0205817315870046e-05], ['testing.', 1.0205817315870046e-05], ['LC_ENTER,', 1.0205817315870046e-05], ['location:', 1.0205817315870046e-05], ['line_6);', 1.0205817315870046e-05], ['(3),', 1.0205817315870046e-05], ['0;\\n");', 1.0205817315870046e-05], ['loop\\n");', 1.0205817315870046e-05], ['(using', 1.0205817315870046e-05], ['"output.h"', 1.0205817315870046e-05], ['"json.h"', 1.0205817315870046e-05], ['"gimple-pretty-print.h"', 1.0205817315870046e-05], ['m_root_tuple->append', 1.0205817315870046e-05], ['add_pass_list', 1.0205817315870046e-05], ['Choose', 1.0205817315870046e-05], ['filename,', 1.0205817315870046e-05], ['saved', 1.0205817315870046e-05], ['filename);', 1.0205817315870046e-05], ['pp_formatted_text', 1.0205817315870046e-05], ['"error', 1.0205817315870046e-05], ['written.', 1.0205817315870046e-05], ['("children",', 1.0205817315870046e-05], ['Private', 1.0205817315870046e-05], ['("file",', 1.0205817315870046e-05], ['("line",', 1.0205817315870046e-05], ['*pass)', 1.0205817315870046e-05], ['host.', 1.0205817315870046e-05], ['locations.', 1.0205817315870046e-05], ['abstract_origin', 1.0205817315870046e-05], ['*json_item', 1.0205817315870046e-05], ['Capture', 1.0205817315870046e-05], ['(json_item);', 1.0205817315870046e-05], ['(loc));', 1.0205817315870046e-05], ['(current_function_decl)', 1.0205817315870046e-05], ['description', 1.0205817315870046e-05], ['sub);', 1.0205817315870046e-05], ['tree:', 1.0205817315870046e-05], ['(json_str,', 1.0205817315870046e-05], ['ownership', 1.0205817315870046e-05], ['kind,', 1.0205817315870046e-05], ['Re-emit', 1.0205817315870046e-05], ['(dump_kind', 1.0205817315870046e-05], ['(but', 1.0205817315870046e-05], ['network', 1.0205817315870046e-05], ['3', 1.0205817315870046e-05], ['placing', 1.0205817315870046e-05], ['*c,', 1.0205817315870046e-05], ['*e0,', 1.0205817315870046e-05], ['OFFSET)', 1.0205817315870046e-05], ['(&t1,', 1.0205817315870046e-05], ['c->out', 1.0205817315870046e-05], ['offset++)', 1.0205817315870046e-05], ['5))', 1.0205817315870046e-05], ['*cmp)', 1.0205817315870046e-05], ['netsort', 1.0205817315870046e-05], ['x);', 1.0205817315870046e-05], ['e3,', 1.0205817315870046e-05], ['sz', 1.0205817315870046e-05], ['sz,', 1.0205817315870046e-05], ['c,', 1.0205817315870046e-05], ['r,', 1.0205817315870046e-05], ['SIZE;', 1.0205817315870046e-05], ['MERGE_ELTSIZE', 1.0205817315870046e-05], ['(s)', 1.0205817315870046e-05], ['deleted.', 1.0205817315870046e-05], ['(2,', 1.0205817315870046e-05], ['work.', 1.0205817315870046e-05], ['p.get', 1.0205817315870046e-05], ['integers.', 1.0205817315870046e-05], ['printing', 1.0205817315870046e-05], ['*buf)', 1.0205817315870046e-05], ['wi.to_shwi', 1.0205817315870046e-05], ['*file)', 1.0205817315870046e-05], ['val.get_precision', 1.0205817315870046e-05], ['ints.', 1.0205817315870046e-05], ['wide_int_binop', 1.0205817315870046e-05], ['-INF', 1.0205817315870046e-05], ['signs', 1.0205817315870046e-05], ['(w0.get_precision', 1.0205817315870046e-05], ['division,', 1.0205817315870046e-05], ['[LB,', 1.0205817315870046e-05], ['masks.', 1.0205817315870046e-05], ['ub;', 1.0205817315870046e-05], ['Order', 1.0205817315870046e-05], ['(w0,', 1.0205817315870046e-05], ['ordered', 1.0205817315870046e-05], ['pairs.', 1.0205817315870046e-05], ['&vr0_lb,', 1.0205817315870046e-05], ['&vr0_ub,', 1.0205817315870046e-05], ['&vr1_lb,', 1.0205817315870046e-05], ['&vr1_ub,', 1.0205817315870046e-05], ['handle.', 1.0205817315870046e-05], ['RES_UB]', 1.0205817315870046e-05], ['varying', 1.0205817315870046e-05], ['From', 1.0205817315870046e-05], ['out,', 1.0205817315870046e-05], ['min1', 1.0205817315870046e-05], ['max1', 1.0205817315870046e-05], ['(size,', 1.0205817315870046e-05], ['(prod0,', 1.0205817315870046e-05], ['canonicalized', 1.0205817315870046e-05], ['shifts', 1.0205817315870046e-05], ['tricky', 1.0205817315870046e-05], ['handle,', 1.0205817315870046e-05], ['operate', 1.0205817315870046e-05], ['involves', 1.0205817315870046e-05], ['several', 1.0205817315870046e-05], ['MAX0', 1.0205817315870046e-05], ['overflow_undefined);', 1.0205817315870046e-05], ['overflow_pos', 1.0205817315870046e-05], ['complement', 1.0205817315870046e-05], ['monotonically.', 1.0205817315870046e-05], ['ones,', 1.0205817315870046e-05], ['non-negative', 1.0205817315870046e-05], ['into:', 1.0205817315870046e-05], ['&mask)', 1.0205817315870046e-05], ['BIT_IOR_EXPR)', 1.0205817315870046e-05], ['bitwise', 1.0205817315870046e-05], ['preserved', 1.0205817315870046e-05], ['w', 1.0205817315870046e-05], ['wi::ctz', 1.0205817315870046e-05], ['Calculates', 1.0205817315870046e-05], ['&vr1_max)', 1.0205817315870046e-05], ['vr1_min;', 1.0205817315870046e-05], ['&must_be_nonzero0,', 1.0205817315870046e-05], ['&may_be_nonzero0,', 1.0205817315870046e-05], ['&must_be_nonzero1,', 1.0205817315870046e-05], ['&may_be_nonzero1)', 1.0205817315870046e-05], ['VARYING.', 1.0205817315870046e-05], ['respective', 1.0205817315870046e-05], ['got', 1.0205817315870046e-05], ['swapped', 1.0205817315870046e-05], ['around,', 1.0205817315870046e-05], ['wi::neg_p', 1.0205817315870046e-05], ['[MIN,', 1.0205817315870046e-05], ['min_value))', 1.0205817315870046e-05], ['max_value;', 1.0205817315870046e-05], ['caused', 1.0205817315870046e-05], ['(wi::gtu_p', 1.0205817315870046e-05], ['outer_prec,', 1.0205817315870046e-05], ['(outer_prec,', 1.0205817315870046e-05], ['(divisor_min,', 1.0205817315870046e-05], ['dividend_min,', 1.0205817315870046e-05], ['dividend_max,', 1.0205817315870046e-05], ['(prec),', 1.0205817315870046e-05], ['Internal', 1.0205817315870046e-05], ['otherwise,', 1.0205817315870046e-05], ['top)', 1.0205817315870046e-05], ['needed,', 1.0205817315870046e-05], ['canonize_uhwi', 1.0205817315870046e-05], ['wide_int::create', 1.0205817315870046e-05], ['words', 1.0205817315870046e-05], ['Sets', 1.0205817315870046e-05], ['RESULT', 1.0205817315870046e-05], ['SGN.', 1.0205817315870046e-05], ['&x,', 1.0205817315870046e-05], ['(excess', 1.0205817315870046e-05], ['t[len', 1.0205817315870046e-05], ['excess;', 1.0205817315870046e-05], ['mpz_import', 1.0205817315870046e-05], ['min)', 1.0205817315870046e-05], ['min);', 1.0205817315870046e-05], ['HOST_WIDE_INTs', 1.0205817315870046e-05], ['Read', 1.0205817315870046e-05], ['Zero-extend', 1.0205817315870046e-05], ['PREC', 1.0205817315870046e-05], ['ones.', 1.0205817315870046e-05], ['(-1,', 1.0205817315870046e-05], ['represented.', 1.0205817315870046e-05], ['truncation', 1.0205817315870046e-05], ['xprecision', 1.0205817315870046e-05], ['(xprecision))', 1.0205817315870046e-05], ['small_xprecision);', 1.0205817315870046e-05], ['rely', 1.0205817315870046e-05], ['relational', 1.0205817315870046e-05], ['len)', 1.0205817315870046e-05], ['Signed', 1.0205817315870046e-05], ['small_prec)', 1.0205817315870046e-05], ['operators.', 1.0205817315870046e-05], ['s1;', 1.0205817315870046e-05], ['signed.', 1.0205817315870046e-05], ['s0', 1.0205817315870046e-05], ['no-op.', 1.0205817315870046e-05], ['WIDTH', 1.0205817315870046e-05], ['(start', 1.0205817315870046e-05], ['(y,', 1.0205817315870046e-05], ['val[block]', 1.0205817315870046e-05], ['bswap', 1.0205817315870046e-05], ['(width', 1.0205817315870046e-05], ['(shift', 1.0205817315870046e-05], ['op1[l1];', 1.0205817315870046e-05], ['op1[l0];', 1.0205817315870046e-05], ['OVERFLOW', 1.0205817315870046e-05], ['*OVERFLOW', 1.0205817315870046e-05], ['*overflow)', 1.0205817315870046e-05], ['IN_LEN', 1.0205817315870046e-05], ['*result,', 1.0205817315870046e-05], ['(input,', 1.0205817315870046e-05], ['(small_prec)', 1.0205817315870046e-05], ['controls', 1.0205817315870046e-05], ['op2len,', 1.0205817315870046e-05], ['room', 1.0205817315870046e-05], ['Likewise', 1.0205817315870046e-05], ['OVF_OVERFLOW;', 1.0205817315870046e-05], ['half_blocks_needed,', 1.0205817315870046e-05], ['j]', 1.0205817315870046e-05], ['(high', 1.0205817315870046e-05], ['(op1))', 1.0205817315870046e-05], ['unsigned,', 1.0205817315870046e-05], ['wi::sub_large', 1.0205817315870046e-05], ['borrow;', 1.0205817315870046e-05], ['OVF_UNDERFLOW', 1.0205817315870046e-05], ['o1)', 1.0205817315870046e-05], ['Single', 1.0205817315870046e-05], ['j--)', 1.0205817315870046e-05], ['b_quotient[j]', 1.0205817315870046e-05], ['s));', 1.0205817315870046e-05], ['b_divisor[n-1];', 1.0205817315870046e-05], ['rhat', 1.0205817315870046e-05], ['b_dividend[j+n]', 1.0205817315870046e-05], ['remainder', 1.0205817315870046e-05], ['wi::only_sign_bit_p', 1.0205817315870046e-05], ['(signed', 1.0205817315870046e-05], ['dividend.', 1.0205817315870046e-05], ['can.', 1.0205817315870046e-05], ['(divisor))', 1.0205817315870046e-05], ['quotient[0]', 1.0205817315870046e-05], ['(quotient,', 1.0205817315870046e-05], ['(remainder,', 1.0205817315870046e-05], ['sgn);', 1.0205817315870046e-05], ['whole-block', 1.0205817315870046e-05], ['skip;', 1.0205817315870046e-05], ['rshift_large_common', 1.0205817315870046e-05], ['(xprecision', 1.0205817315870046e-05], ['wi::clz', 1.0205817315870046e-05], ['crux', 1.0205817315870046e-05], ['2.', 1.0205817315870046e-05], ['greater', 1.0205817315870046e-05], ['eventually', 1.0205817315870046e-05], ['(widest_int', 1.0205817315870046e-05], ['&ref)', 1.0205817315870046e-05], ['Specialization', 1.0205817315870046e-05], ['<>', 1.0205817315870046e-05], ['ASSERT_STREQ', 1.0205817315870046e-05], ['VALUE_TYPE.', 1.0205817315870046e-05], ['a);', 1.0205817315870046e-05], ['(7);', 1.0205817315870046e-05], ['b),', 1.0205817315870046e-05], ['(wi::les_p', 1.0205817315870046e-05], ['wi::cmps', 1.0205817315870046e-05], ['<VALUE_TYPE>', 1.0205817315870046e-05], ['conditions.', 1.0205817315870046e-05], ['31,', 1.0205817315870046e-05], ['sum,', 1.0205817315870046e-05], ['(wi::max_value', 1.0205817315870046e-05], ['-offset);', 1.0205817315870046e-05], ['m_parent.m_cf->m_current_bind_expr', 1.0205817315870046e-05], ['Restore', 1.0205817315870046e-05], ['m_parent.m_cf->m_current_bind_expr;', 1.0205817315870046e-05], ['BrigAtomicOperation8_t', 1.0205817315870046e-05], ['implementing', 1.0205817315870046e-05], ['(instr_type,', 1.0205817315870046e-05], ['(atomic_ptype,', 1.0205817315870046e-05], ['atomic_type,', 1.0205817315870046e-05], ['atomic_opcode', 1.0205817315870046e-05], ['(TYPE_ARG_TYPES', 1.0205817315870046e-05], ['instr_type,', 1.0205817315870046e-05], ['finds', 1.0205817315870046e-05], ['HSAIL_TYPE,', 1.0205817315870046e-05], ['fails', 1.0205817315870046e-05], ['BrigInstAtomic', 1.0205817315870046e-05], ['scalarized_sat_arithmetics', 1.0205817315870046e-05], ['&brig_inst)', 1.0205817315870046e-05], ['operand1);', 1.0205817315870046e-05], ['*input_mask_vals', 1.0205817315870046e-05], ['mask_element);', 1.0205817315870046e-05], ['mask_vec', 1.0205817315870046e-05], ['input_mask_vals);', 1.0205817315870046e-05], ['perm', 1.0205817315870046e-05], ['(tree_stl_vec', 1.0205817315870046e-05], ['raw', 1.0205817315870046e-05], ['ecount', 1.0205817315870046e-05], ['operands[2];', 1.0205817315870046e-05], ['semantics.', 1.0205817315870046e-05], ['pos);', 1.0205817315870046e-05], ['(BIT_NOT_EXPR,', 1.0205817315870046e-05], ['arithmetics.', 1.0205817315870046e-05], ['vectors.', 1.0205817315870046e-05], ['BRIG_TYPE', 1.0205817315870046e-05], ['OPERANDS', 1.0205817315870046e-05], ['brig_function::get_tree_code_for_hsa_opcode', 1.0205817315870046e-05], ['behavior', 1.0205817315870046e-05], ['behavior.', 1.0205817315870046e-05], ['broadcast', 1.0205817315870046e-05], ['output_count', 1.0205817315870046e-05], ["let's", 1.0205817315870046e-05], ['optimizers', 1.0205817315870046e-05], ['BRIG_OPCODE_SHUFFLE)', 1.0205817315870046e-05], ['selects', 1.0205817315870046e-05], ['remain', 1.0205817315870046e-05], ['Perhaps', 1.0205817315870046e-05], ['(arith_type),', 1.0205817315870046e-05], ['operands));', 1.0205817315870046e-05], ['WAVESIZE', 1.0205817315870046e-05], ['operands[0];', 1.0205817315870046e-05], ['(opcode,', 1.0205817315870046e-05], ['Handles', 1.0205817315870046e-05], ['wanted', 1.0205817315870046e-05], ['(operands.size', 1.0205817315870046e-05], ['BRIG_OPCODE_LASTBIT', 1.0205817315870046e-05], ['is_vec_instr', 1.0205817315870046e-05], ['element_size_bits', 1.0205817315870046e-05], ['(brig_element_type);', 1.0205817315870046e-05], ['get_tree_expr_type_for_hsa_type', 1.0205817315870046e-05], ['BRIG_KIND_INST_MOD)', 1.0205817315870046e-05], ['MULT_HIGHPART_EXPR', 1.0205817315870046e-05], ['MULHI', 1.0205817315870046e-05], ['phase', 1.0205817315870046e-05], ['m_parent.m_cf->unpack', 1.0205817315870046e-05], ['(BRIG_TYPE_U16);', 1.0205817315870046e-05], ['(BRIG_TYPE_U32);', 1.0205817315870046e-05], ['(promoted_type,', 1.0205817315870046e-05], ['(RSHIFT_EXPR,', 1.0205817315870046e-05], ['m_parent.m_cf->pack', 1.0205817315870046e-05], ['build_h2f_conversion', 1.0205817315870046e-05], ['(esize,', 1.0205817315870046e-05], ['cst);', 1.0205817315870046e-05], ['(element_type);', 1.0205817315870046e-05], ['"vec.h"', 1.0205817315870046e-05], ['(brig_inst->operands);', 1.0205817315870046e-05], ['vec_alloc', 1.0205817315870046e-05], ['elem', 1.0205817315870046e-05], ['reserved', 1.0205817315870046e-05], ['operand_entries->byteCount', 1.0205817315870046e-05], ['&operand_entries->bytes)[i];', 1.0205817315870046e-05], ['(operand_data->kind', 1.0205817315870046e-05], ['BRIG_KIND_DIRECTIVE_VARIABLE);', 1.0205817315870046e-05], ['build4', 1.0205817315870046e-05], ['group/private', 1.0205817315870046e-05], ['(DECL_EXTERNAL', 1.0205817315870046e-05], ['m_parent.m_cf->start_new_bb', 1.0205817315870046e-05], ['call_operands;', 1.0205817315870046e-05], ['Save', 1.0205817315870046e-05], ['(LT_EXPR,', 1.0205817315870046e-05], ['vectors', 1.0205817315870046e-05], ['VEC_COND_EXPR', 1.0205817315870046e-05], ['(dest_type);', 1.0205817315870046e-05], ['(SCALAR_FLOAT_TYPE_P', 1.0205817315870046e-05], ['emulated', 1.0205817315870046e-05], ['f16', 1.0205817315870046e-05], ['(ref.kind', 1.0205817315870046e-05], ['*func', 1.0205817315870046e-05], ['(var_name))', 1.0205817315870046e-05], ['BrigOperandOperandList', 1.0205817315870046e-05], ['operand;', 1.0205817315870046e-05], ['vec;', 1.0205817315870046e-05], ['&operand;', 1.0205817315870046e-05], ['BRIG_OPCODE_LDA)', 1.0205817315870046e-05], ['brig_inst).segment;', 1.0205817315870046e-05], ['BrigInstMem', 1.0205817315870046e-05], ['(arg_symbol);', 1.0205817315870046e-05], ['local_size', 1.0205817315870046e-05], ['LDA', 1.0205817315870046e-05], ['m_parent.global_variable', 1.0205817315870046e-05], ['(PHSA_HOST_DEF_PTR_PREFIX)', 1.0205817315870046e-05], ['(symbol_base', 1.0205817315870046e-05], ['build_reinterpret_to_uint', 1.0205817315870046e-05], ['mode:', 1.0205817315870046e-05], ['(addr', 1.0205817315870046e-05], ['BRIG_SEGMENT_READONLY', 1.0205817315870046e-05], ['*operand_data,', 1.0205817315870046e-05], ['tree_element_type', 1.0205817315870046e-05], ['BRIG_TYPE_F16:', 1.0205817315870046e-05], ['BRIG_TYPE_F32:', 1.0205817315870046e-05], ['next_data);', 1.0205817315870046e-05], ['build_real', 1.0205817315870046e-05], ['BRIG_TYPE_F64:', 1.0205817315870046e-05], ['BRIG_TYPE_SIG64:', 1.0205817315870046e-05], ['BRIG_TYPE_SIG32:', 1.0205817315870046e-05], ['bytes_left', 1.0205817315870046e-05], ['(bytes_left', 1.0205817315870046e-05], ['"Not', 1.0205817315870046e-05], ['brig_inner_type', 1.0205817315870046e-05], ['half_to_float', 1.0205817315870046e-05], ['build_or_analyze_operands', 1.0205817315870046e-05], ['BRIG_OPCODE_INITFBAR:', 1.0205817315870046e-05], ['BRIG_OPCODE_JOINFBAR:', 1.0205817315870046e-05], ['BRIG_OPCODE_WAITFBAR:', 1.0205817315870046e-05], ['BRIG_OPCODE_ARRIVEFBAR:', 1.0205817315870046e-05], ['BRIG_OPCODE_LEAVEFBAR:', 1.0205817315870046e-05], ['BRIG_OPCODE_RELEASEFBAR:', 1.0205817315870046e-05], ['case:', 1.0205817315870046e-05], ['(src_type)', 1.0205817315870046e-05], ['(operand_type);', 1.0205817315870046e-05], ['fp32', 1.0205817315870046e-05], ['(inst_expr))', 1.0205817315870046e-05], ['(inst_expr);', 1.0205817315870046e-05], ['func_decl', 1.0205817315870046e-05], ['conv', 1.0205817315870046e-05], ['assign;', 1.0205817315870046e-05], ['element,', 1.0205817315870046e-05], ['(operand));', 1.0205817315870046e-05], ['element_size;', 1.0205817315870046e-05], ['input_element_type', 1.0205817315870046e-05], ['(output_element_type,', 1.0205817315870046e-05], ['vector_cst', 1.0205817315870046e-05], ['readability.', 1.0205817315870046e-05], ['"vec_out");', 1.0205817315870046e-05], ['vec_tmp_assign', 1.0205817315870046e-05], ['vec);', 1.0205817315870046e-05], ['(vec_tmp_assign);', 1.0205817315870046e-05], ['output;', 1.0205817315870046e-05], ['smaller', 1.0205817315870046e-05], ['conversion_result);', 1.0205817315870046e-05], ['node)', 1.0205817315870046e-05], ['node;', 1.0205817315870046e-05], ['gccbrig_verbose;', 1.0205817315870046e-05], ['m_parent.get_string', 1.0205817315870046e-05], ['only,', 1.0205817315870046e-05], ['source_type', 1.0205817315870046e-05], ['brig_basic_inst_handler', 1.0205817315870046e-05], ['cvt', 1.0205817315870046e-05], ['BrigAluModifier8_t', 1.0205817315870046e-05], ['(src_type);', 1.0205817315870046e-05], ['REAL', 1.0205817315870046e-05], ['(CONVERT_EXPR,', 1.0205817315870046e-05], ['casted_output', 1.0205817315870046e-05], ['casted_output);', 1.0205817315870046e-05], ['m_parent.m_cf', 1.0205817315870046e-05], ['<iomanip>', 1.0205817315870046e-05], ['(is_kernel)', 1.0205817315870046e-05], ['forward', 1.0205817315870046e-05], ['restrict_void_ptr', 1.0205817315870046e-05], ['(build_qualified_type', 1.0205817315870046e-05], ["call's", 1.0205817315870046e-05], ['packet', 1.0205817315870046e-05], ['build_function_type_list', 1.0205817315870046e-05], ['enable', 1.0205817315870046e-05], ['*brigVar', 1.0205817315870046e-05], ['retval;', 1.0205817315870046e-05], ['varhandler.build_variable', 1.0205817315870046e-05], ['ret_value;', 1.0205817315870046e-05], ['restrict_char_ptr;', 1.0205817315870046e-05], ['group_local_offset_arg);', 1.0205817315870046e-05], ['set_inline', 1.0205817315870046e-05], ['fndecl);', 1.0205817315870046e-05], ["statement's", 1.0205817315870046e-05], ['built.', 1.0205817315870046e-05], ['"hsa-brig-format.h"', 1.0205817315870046e-05], ['"dumpfile.h"', 1.0205817315870046e-05], ['"profile-count.h"', 1.0205817315870046e-05], ['"brig-to-generic.h"', 1.0205817315870046e-05], ['m_is_kernel', 1.0205817315870046e-05], ['m_name', 1.0205817315870046e-05], ['m_kernarg_max_align', 1.0205817315870046e-05], ['m_has_function_calls_with_barriers', 1.0205817315870046e-05], ['label_index::const_iterator', 1.0205817315870046e-05], ['*var)', 1.0205817315870046e-05], ["kernel's", 1.0205817315870046e-05], ['align_padding', 1.0205817315870046e-05], ['align_padding;', 1.0205817315870046e-05], ['tsi_start', 1.0205817315870046e-05], ['limited', 1.0205817315870046e-05], ['expand_or_call_builtin', 1.0205817315870046e-05], ['(long_long_integer_type_node,', 1.0205817315870046e-05], ['variable;', 1.0205817315870046e-05], ['float,', 1.0205817315870046e-05], ['VIEW_CONVERT_EXPR', 1.0205817315870046e-05], ['*reg)', 1.0205817315870046e-05], ['gccbrig_reg_size', 1.0205817315870046e-05], ['gccbrig_hsa_reg_id', 1.0205817315870046e-05], ['reg_use_info', 1.0205817315870046e-05], ['std::vector<std::pair<tree,', 1.0205817315870046e-05], ['size_t>', 1.0205817315870046e-05], ['(ivar),', 1.0205817315870046e-05], ['ivar,', 1.0205817315870046e-05], ['(abs_id_var),', 1.0205817315870046e-05], ['(branch_after,', 1.0205817315870046e-05], ['calls,', 1.0205817315870046e-05], ['Have', 1.0205817315870046e-05], ['work-group', 1.0205817315870046e-05], ['trivial', 1.0205817315870046e-05], ['emits', 1.0205817315870046e-05], ['creation', 1.0205817315870046e-05], ['prefix.', 1.0205817315870046e-05], ['&stmts);', 1.0205817315870046e-05], ['stmt;', 1.0205817315870046e-05], ['tsi_stmt', 1.0205817315870046e-05], ['(entry);', 1.0205817315870046e-05], ['return_expr', 1.0205817315870046e-05], ['(name));', 1.0205817315870046e-05], ['(brig_opcode))', 1.0205817315870046e-05], ['(BRIG_OPCODE_WORKITEMABSID,', 1.0205817315870046e-05], ['sum);', 1.0205817315870046e-05], ['(BRIG_OPCODE_WORKITEMID,', 1.0205817315870046e-05], ['BRIG_OPCODE_WORKITEMABSID:', 1.0205817315870046e-05], ['BRIG_TYPE_U32;', 1.0205817315870046e-05], ['BRIG_TYPE_U64;', 1.0205817315870046e-05], ['BRIG_TYPE_U32)', 1.0205817315870046e-05], ['(builtin),', 1.0205817315870046e-05], ['(builtin', 1.0205817315870046e-05], ['(value));', 1.0205817315870046e-05], ['ELEMENTS', 1.0205817315870046e-05], ['TREE', 1.0205817315870046e-05], ['PLUS_EXPR;', 1.0205817315870046e-05], ['(gccbrig_is_float_type', 1.0205817315870046e-05], ['(brig_inner_type))', 1.0205817315870046e-05], ['RSHIFT_EXPR;', 1.0205817315870046e-05], ['id_val_map::iterator', 1.0205817315870046e-05], ['m_id_val_defs.find', 1.0205817315870046e-05], ['(reg_var);', 1.0205817315870046e-05], ['fesetround', 1.0205817315870046e-05], ['executed', 1.0205817315870046e-05], ['moment.', 1.0205817315870046e-05], ['disabled', 1.0205817315870046e-05], ['elements;', 1.0205817315870046e-05], ['(zero_cst);', 1.0205817315870046e-05], ['distinguish', 1.0205817315870046e-05], ['(operands[1]);', 1.0205817315870046e-05], ['profile', 1.0205817315870046e-05], ['inst.segment', 1.0205817315870046e-05], ['BRIG_SEGMENT_READONLY)', 1.0205817315870046e-05], ['m_analyzing', 1.0205817315870046e-05], ['m_brig', 1.0205817315870046e-05], ['removes', 1.0205817315870046e-05], ['(s_fp16_type)', 1.0205817315870046e-05], ['(2);', 1.0205817315870046e-05], ['unimplemented_entry_handler', 1.0205817315870046e-05], ['skipped', 1.0205817315870046e-05], ['brig_reg_use_analyzer', 1.0205817315870046e-05], ['BrigKind', 1.0205817315870046e-05], ['kind;', 1.0205817315870046e-05], ['processed', 1.0205817315870046e-05], ['(sec', 1.0205817315870046e-05], ['section_header;', 1.0205817315870046e-05], ['section_header->byteCount;', 1.0205817315870046e-05], ['addition', 1.0205817315870046e-05], ['brig_blob;', 1.0205817315870046e-05], ['discard', 1.0205817315870046e-05], ['m_cf;', 1.0205817315870046e-05], ['platform', 1.0205817315870046e-05], ['entry_offset);', 1.0205817315870046e-05], ['func_decl)', 1.0205817315870046e-05], ['var_decl)', 1.0205817315870046e-05], ['append_global', 1.0205817315870046e-05], ['(var_decl);', 1.0205817315870046e-05], ['call)', 1.0205817315870046e-05], ['linking', 1.0205817315870046e-05], ['produced', 1.0205817315870046e-05], ['treating', 1.0205817315870046e-05], ['src_size', 1.0205817315870046e-05], ['aligned', 1.0205817315870046e-05], ['rettype,', 1.0205817315870046e-05], ['tree[nargs];', 1.0205817315870046e-05], ['types;', 1.0205817315870046e-05], ['(decl_call);', 1.0205817315870046e-05], ['ADDR_EXPR', 1.0205817315870046e-05], ['(std::map<std::string,', 1.0205817315870046e-05], ['gimplify_function_tree', 1.0205817315870046e-05], ['*f', 1.0205817315870046e-05], ['externally', 1.0205817315870046e-05], ['destructors', 1.0205817315870046e-05], ['relies', 1.0205817315870046e-05], ['__cxa_atexit.', 1.0205817315870046e-05], ['support,', 1.0205817315870046e-05], ['hosted', 1.0205817315870046e-05], ['all.', 1.0205817315870046e-05], ['override', 1.0205817315870046e-05], ['gdb', 1.0205817315870046e-05], ['--with-cpu', 1.0205817315870046e-05], ['collect2.', 1.0205817315870046e-05], ['default_use_cxa_atexit=no', 1.0205817315870046e-05], ['Configuration', 1.0205817315870046e-05], ['release', 1.0205817315870046e-05], ['supported"', 1.0205817315870046e-05], ['i[34567]86-*-*)', 1.0205817315870046e-05], ['mmintrin.h', 1.0205817315870046e-05], ['xmmintrin.h', 1.0205817315870046e-05], ['pmmintrin.h', 1.0205817315870046e-05], ['tmmintrin.h', 1.0205817315870046e-05], ['bmi2intrin.h', 1.0205817315870046e-05], ['hppa*-*-*)', 1.0205817315870046e-05], ['mips*-*-*)', 1.0205817315870046e-05], ['fused-madd.opt', 1.0205817315870046e-05], ['sh-*-*)', 1.0205817315870046e-05], ['"x$with_multilib_list"', 1.0205817315870046e-05], ['targets,', 1.0205817315870046e-05], ['Common', 1.0205817315870046e-05], ['libraries.', 1.0205817315870046e-05], ['x86', 1.0205817315870046e-05], ['processors', 1.0205817315870046e-05], ['MUST', 1.0205817315870046e-05], ['separated', 1.0205817315870046e-05], ['x86-64', 1.0205817315870046e-05], ['tmake_file="t-slibgcc"', 1.0205817315870046e-05], ['machine-specific', 1.0205817315870046e-05], ['frv-*-*linux*', 1.0205817315870046e-05], ['targets.', 1.0205817315870046e-05], ['target_has_targetdm=yes', 1.0205817315870046e-05], ['xm_defines=POSIX', 1.0205817315870046e-05], ['newlib', 1.0205817315870046e-05], ['aarch64/aarch64-elf.h', 1.0205817315870046e-05], ['alpha/elf.h', 1.0205817315870046e-05], ['alpha/elf.opt"', 1.0205817315870046e-05], ['with_endian=little', 1.0205817315870046e-05], ['big|little)', 1.0205817315870046e-05], ['supported.";', 1.0205817315870046e-05], ['128-bit', 1.0205817315870046e-05], ['EABI', 1.0205817315870046e-05], ['arm/bpabi.h', 1.0205817315870046e-05], ['GNU/Linux', 1.0205817315870046e-05], ['"$with_float"', 1.0205817315870046e-05], ['arm/unknown-elf.h', 1.0205817315870046e-05], ['target_cpu_cname="arm7tdmi"', 1.0205817315870046e-05], ['bfin/elf.h', 1.0205817315870046e-05], ['${with_float}', 1.0205817315870046e-05], ['"x${enable_multilib}"', 1.0205817315870046e-05], ['extra_programs="${extra_programs}', 1.0205817315870046e-05], ['x$enable_as_accelerator', 1.0205817315870046e-05], ['moxie/t-moxie"', 1.0205817315870046e-05], ['target_cpu_default="MASK_PA_11"', 1.0205817315870046e-05], ['pa/pa-hpux.h', 1.0205817315870046e-05], ['pa/pa-hpux.opt', 1.0205817315870046e-05], ['tmake_file="pa/t-pa', 1.0205817315870046e-05], ['target,', 1.0205817315870046e-05], ['pa/pa64-hpux.h"', 1.0205817315870046e-05], ['hpux11.opt"', 1.0205817315870046e-05], ['m64', 1.0205817315870046e-05], ['i[34567]86-*-elfiamcu)', 1.0205817315870046e-05], ['i[34567]86-*-linux*', 1.0205817315870046e-05], ['i386/linux-common.h', 1.0205817315870046e-05], ['TARGET_BI_ARCH=1"', 1.0205817315870046e-05], ['with_cpu_64=generic', 1.0205817315870046e-05], ['"$x86_cpus', 1.0205817315870046e-05], ['x86_64-*-kfreebsd*-gnu)', 1.0205817315870046e-05], ['x86_64-*-linux*)', 1.0205817315870046e-05], ['tm-dwarf2.h', 1.0205817315870046e-05], ['vxworksae.h', 1.0205817315870046e-05], ['dbxcoff.h', 1.0205817315870046e-05], ['i386/t-cygming', 1.0205817315870046e-05], ['target_gtfiles="\\$(srcdir)/config/i386/winnt.c"', 1.0205817315870046e-05], ['i386/cygming.opt', 1.0205817315870046e-05], ['winnt.o', 1.0205817315870046e-05], ['winnt-stubs.o"', 1.0205817315870046e-05], ['winnt-cxx.o', 1.0205817315870046e-05], ['*-w64-*)', 1.0205817315870046e-05], ['target_cpu_default="0"', 1.0205817315870046e-05], ['lm32/t-lm32"', 1.0205817315870046e-05], ['fido-*-elf*)', 1.0205817315870046e-05], ['default_cf_cpu=5206', 1.0205817315870046e-05], ['default_cf_cpu=5475', 1.0205817315870046e-05], ['microblazeel-*)', 1.0205817315870046e-05], ['TARGET_BIG_ENDIAN_DEFAULT=0"', 1.0205817315870046e-05], ['microblaze-*)', 1.0205817315870046e-05], ['TARGET_BIG_ENDIAN_DEFAULT=4321"', 1.0205817315870046e-05], ['microblaze/t-microblaze"', 1.0205817315870046e-05], ['endian.', 1.0205817315870046e-05], ['mips/gnu-user.h', 1.0205817315870046e-05], ['mips/linux.h', 1.0205817315870046e-05], ['mipsisa32r6*)', 1.0205817315870046e-05], ['mipsisa32r2*)', 1.0205817315870046e-05], ['mipsisa32*)', 1.0205817315870046e-05], ['mips/n32-elf.h', 1.0205817315870046e-05], ['MIPS_ISA_DEFAULT=3', 1.0205817315870046e-05], ['rs6000/t-fprules', 1.0205817315870046e-05], ['${enable_targets}', 1.0205817315870046e-05], ['rs6000/aix.h', 1.0205817315870046e-05], ['rs6000/xcoff.h', 1.0205817315870046e-05], ['rs6000/aix-stdint.h"', 1.0205817315870046e-05], ['tmake_file="rs6000/t-aix52', 1.0205817315870046e-05], ['rs6000/aix64.opt"', 1.0205817315870046e-05], ["thread_file='aix'", 1.0205817315870046e-05], ['s390/t-s390"', 1.0205817315870046e-05], ['sh/t-sh', 1.0205817315870046e-05], ['t-sh', 1.0205817315870046e-05], ['Second', 1.0205817315870046e-05], ['endian', 1.0205817315870046e-05], ['m2', 1.0205817315870046e-05], ['m2e', 1.0205817315870046e-05], ['m3', 1.0205817315870046e-05], ['m3e', 1.0205817315870046e-05], ['m4', 1.0205817315870046e-05], ['m4-single', 1.0205817315870046e-05], ['m4-single-only', 1.0205817315870046e-05], ['m4a-single', 1.0205817315870046e-05], ['m4a-single-only', 1.0205817315870046e-05], ['m4a-nofpu', 1.0205817315870046e-05], ['m2a-single', 1.0205817315870046e-05], ['m2a-single-only', 1.0205817315870046e-05], ['tmake_file="sparc/t-sparc', 1.0205817315870046e-05], ['sparc/tso.h"', 1.0205817315870046e-05], ['extra_options="${extra_options}"', 1.0205817315870046e-05], ['omit', 1.0205817315870046e-05], ['rs6000-*-*)', 1.0205817315870046e-05], ['arch=i486', 1.0205817315870046e-05], ['${target_noncanonical}', 1.0205817315870046e-05], ['option,', 1.0205817315870046e-05], ['infer', 1.0205817315870046e-05], ['i[34567]86-*-*|x86_64-*-*)', 1.0205817315870046e-05], ['m68k*-*-*)', 1.0205817315870046e-05], ['visium-*-*)', 1.0205817315870046e-05], ['--with-arch', 1.0205817315870046e-05], ['${with_arch}', 1.0205817315870046e-05], ['elif', 1.0205817315870046e-05], ['R5900', 1.0205817315870046e-05], ['Similarly', 1.0205817315870046e-05], ['--with', 1.0205817315870046e-05], ['validating', 1.0205817315870046e-05], ['$val', 1.0205817315870046e-05], ['ext_val=`echo', 1.0205817315870046e-05], ['ARCH', 1.0205817315870046e-05], ['grep', 1.0205817315870046e-05], ['/dev/null;', 1.0205817315870046e-05], ["'s/,.*$//'`", 1.0205817315870046e-05], ['$ext_val', 1.0205817315870046e-05], [']*[^,]*,[', 1.0205817315870046e-05], ['supported_defaults="cpu', 1.0205817315870046e-05], ['supported_defaults="cpu"', 1.0205817315870046e-05], ['-v', 1.0205817315870046e-05], ['#OK', 1.0205817315870046e-05], ['"x$with_arch"', 1.0205817315870046e-05], ['--with-arch=$with_arch"', 1.0205817315870046e-05], ['tune_64;', 1.0205817315870046e-05], ['begin', 1.0205817315870046e-05], ['ilp32f', 1.0205817315870046e-05], ['lp64f', 1.0205817315870046e-05], ['lp64d)', 1.0205817315870046e-05], ['tune_64', 1.0205817315870046e-05], ['llsc', 1.0205817315870046e-05], ['synci', 1.0205817315870046e-05], ['lxc1-sxc1', 1.0205817315870046e-05], ['argument:', 1.0205817315870046e-05], ['-d', 1.0205817315870046e-05], ['VxWorks', 1.0205817315870046e-05], ['$tmake_file"', 1.0205817315870046e-05], ['target_cpu_default2="TARGET_CPU_$with_cpu"', 1.0205817315870046e-05], ['(pack_type', 1.0205817315870046e-05], ['64;', 1.0205817315870046e-05], ['BRIG_REGISTER_KIND_CONTROL:', 1.0205817315870046e-05], ['BRIG_REGISTER_KIND_SINGLE:', 1.0205817315870046e-05], ['BRIG_REGISTER_KIND_DOUBLE:', 1.0205817315870046e-05], ['BRIG_REGISTER_KIND_QUAD:', 1.0205817315870046e-05], ['accessing', 1.0205817315870046e-05], ['brigVar->modifier', 1.0205817315870046e-05], ['BRIG_VARIABLE_DEFINITION;', 1.0205817315870046e-05], ['full_size', 1.0205817315870046e-05], ['(like', 1.0205817315870046e-05], ['it2', 1.0205817315870046e-05], ['(dump,', 1.0205817315870046e-05], ['~BRIG_TYPE_ARRAY);', 1.0205817315870046e-05], ['PARM_DECL)', 1.0205817315870046e-05], ['(brigVar->type);', 1.0205817315870046e-05], ['TYPE_READONLY', 1.0205817315870046e-05], ['(var_decl,', 1.0205817315870046e-05], ['stage.', 1.0205817315870046e-05], ['var_size,', 1.0205817315870046e-05], ['build_variable', 1.0205817315870046e-05], ['underscore,', 1.0205817315870046e-05], ['name_reserved_for_implementation_p', 1.0205817315870046e-05], ['goal,', 1.0205817315870046e-05], ['"c-family/c-common.h"', 1.0205817315870046e-05], ['(with', 1.0205817315870046e-05], ["'<'", 1.0205817315870046e-05], ["'>'),", 1.0205817315870046e-05], ['get_stdlib_header_for_name', 1.0205817315870046e-05], ['{NULL,', 1.0205817315870046e-05], ['keyword', 1.0205817315870046e-05], ['{"<stdlib.h>",', 1.0205817315870046e-05], ['"<cstdlib>"}', 1.0205817315870046e-05], ['"cfgrtl.h"', 1.0205817315870046e-05], ['"emit-rtl.h"', 1.0205817315870046e-05], ['"tm_p.h"', 1.0205817315870046e-05], ['scans', 1.0205817315870046e-05], ['moment', 1.0205817315870046e-05], ['become', 1.0205817315870046e-05], ['incorrect', 1.0205817315870046e-05], ['thing.', 1.0205817315870046e-05], ['untrusted', 1.0205817315870046e-05], ['relying', 1.0205817315870046e-05], ['principle', 1.0205817315870046e-05], ['MOV', 1.0205817315870046e-05], ['epilogue', 1.0205817315870046e-05], ['nice', 1.0205817315870046e-05], ['leaf', 1.0205817315870046e-05], ['afterwards', 1.0205817315870046e-05], ['clobber', 1.0205817315870046e-05], ['need_second_pass', 1.0205817315870046e-05], ['*insn;', 1.0205817315870046e-05], ['cfun)', 1.0205817315870046e-05], ['(bb)', 1.0205817315870046e-05], ['(any_condjump_p', 1.0205817315870046e-05], ['(insn));', 1.0205817315870046e-05], ['2))', 1.0205817315870046e-05], ['(cond),', 1.0205817315870046e-05], ['*label', 1.0205817315870046e-05], ['(INSN_P', 1.0205817315870046e-05], ['(aarch64_speculation_establish_tracker', 1.0205817315870046e-05], ['(CALL_P', 1.0205817315870046e-05], ['decided', 1.0205817315870046e-05], ['RTL_PASS,', 1.0205817315870046e-05], ['OPTGROUP_NONE,', 1.0205817315870046e-05], ['ctxt)', 1.0205817315870046e-05], ['methods:', 1.0205817315870046e-05], ['(ctxt);', 1.0205817315870046e-05], ['IN_TARGET_CODE', 1.0205817315870046e-05], ['value));', 1.0205817315870046e-05], ['constp', 1.0205817315870046e-05], ['mov.l', 1.0205817315870046e-05], ['relatively', 1.0205817315870046e-05], ['bytes)', 1.0205817315870046e-05], ['copied);', 1.0205817315870046e-05], ['BLKmode,', 1.0205817315870046e-05], ['src_addr,', 1.0205817315870046e-05], ['(align', 1.0205817315870046e-05], ['r6', 1.0205817315870046e-05], ['14,', 1.0205817315870046e-05], ['tmp0', 1.0205817315870046e-05], ['tmp3', 1.0205817315870046e-05], ['*L_loop_long', 1.0205817315870046e-05], ['*L_end_loop_long', 1.0205817315870046e-05], ['addr2);', 1.0205817315870046e-05], ['(L_loop_long);', 1.0205817315870046e-05], ['addr1);', 1.0205817315870046e-05], ['(gen_cmpstr_t', 1.0205817315870046e-05], ['(L_end_loop_long));', 1.0205817315870046e-05], ['(L_loop_long));', 1.0205817315870046e-05], ['(gen_jump_compact', 1.0205817315870046e-05], ['(L_end_loop_long);', 1.0205817315870046e-05], ['-4));', 1.0205817315870046e-05], ['tmp1,', 1.0205817315870046e-05], ['copy_to_mode_reg', 1.0205817315870046e-05], ['CONST_INT_P', 1.0205817315870046e-05], ['iterations', 1.0205817315870046e-05], ['Found', 1.0205817315870046e-05], ['search.', 1.0205817315870046e-05], ['(void);', 1.0205817315870046e-05], ['recorded', 1.0205817315870046e-05], ['(machine_mode', 1.0205817315870046e-05], ['pattern,', 1.0205817315870046e-05], ['rtx,', 1.0205817315870046e-05], ['pat)', 1.0205817315870046e-05], ['values_out,', 1.0205817315870046e-05], ['std::vector<basic_block>&', 1.0205817315870046e-05], ['notes', 1.0205817315870046e-05], ['entries.', 1.0205817315870046e-05], ['values)', 1.0205817315870046e-05], ['fun)', 1.0205817315870046e-05], ['removed.', 1.0205817315870046e-05], ['(branch_target_bb', 1.0205817315870046e-05], ['NE', 1.0205817315870046e-05], ['prev_visited_bb.back', 1.0205817315870046e-05], ['(reg_set_p', 1.0205817315870046e-05], ['v.insn', 1.0205817315870046e-05], ['v.bb', 1.0205817315870046e-05], ['v.value', 1.0205817315870046e-05], ['(set_rtx,', 1.0205817315870046e-05], ['values_out.push_back', 1.0205817315870046e-05], ['none', 1.0205817315870046e-05], ['pred_bb_count', 1.0205817315870046e-05], ['ei_edge', 1.0205817315870046e-05], ['tst', 1.0205817315870046e-05], ['r1,r1', 1.0205817315870046e-05], ['177)', 1.0205817315870046e-05], ['elimination', 1.0205817315870046e-05], ['175)))', 1.0205817315870046e-05], ['individual', 1.0205817315870046e-05], ['stopped', 1.0205817315870046e-05], ['*insn)', 1.0205817315870046e-05], ['(!REG_P', 1.0205817315870046e-05], ['(result.insn))', 1.0205817315870046e-05], ['trace_reg_uses_1', 1.0205817315870046e-05], ['visited_bb,', 1.0205817315870046e-05], ['null\\n",', 1.0205817315870046e-05], ['PATTERN', 1.0205817315870046e-05], ['reachable', 1.0205817315870046e-05], ['sh_treg_combine', 1.0205817315870046e-05], ['cstore_normal', 1.0205817315870046e-05], ['branch_condition_type_t', 1.0205817315870046e-05], ['consists', 1.0205817315870046e-05], ['cbranch_trace', 1.0205817315870046e-05], ['cbranch.', 1.0205817315870046e-05], ['cond)', 1.0205817315870046e-05], ['record_return_t', 1.0205817315870046e-05], ['record_set_of_reg', 1.0205817315870046e-05], ['combined', 1.0205817315870046e-05], ['trace.', 1.0205817315870046e-05], ['combining', 1.0205817315870046e-05], ['dominating_cstore);', 1.0205817315870046e-05], ['try_eliminate_cstores', 1.0205817315870046e-05], ['try_optimize_cbranch', 1.0205817315870046e-05], ['("\\n[bb', 1.0205817315870046e-05], ['(set_not_found,', 1.0205817315870046e-05], ['new_entry.cstore_type', 1.0205817315870046e-05], ['"not', 1.0205817315870046e-05], ['ccreg\\n");', 1.0205817315870046e-05], ['anyway,', 1.0205817315870046e-05], ['irrelevant.', 1.0205817315870046e-05], ['e.cstore.insn)', 1.0205817315870046e-05], ['(!reg_dead_after_insn', 1.0205817315870046e-05], ['(i->set_src', 1.0205817315870046e-05], ['(reg_used_between_p', 1.0205817315870046e-05], ['cstore.', 1.0205817315870046e-05], ['trace.setcc.insn))', 1.0205817315870046e-05], ['e.cstore.insn,', 1.0205817315870046e-05], ['unused', 1.0205817315870046e-05], ['assumption', 1.0205817315870046e-05], ['cstore\\n");', 1.0205817315870046e-05], ['(reg_set_between_p', 1.0205817315870046e-05], ['(trace.bb', 1.0205817315870046e-05], ['comp', 1.0205817315870046e-05], ['both,', 1.0205817315870046e-05], ['trace))', 1.0205817315870046e-05], ['non-inverting', 1.0205817315870046e-05], ['cstores,', 1.0205817315870046e-05], ['(comp_op0,', 1.0205817315870046e-05], ['(i->comparison_rtx', 1.0205817315870046e-05], ['(trace))', 1.0205817315870046e-05], ['simplifies', 1.0205817315870046e-05], ['("replacing', 1.0205817315870046e-05], ['new_i', 1.0205817315870046e-05], ['i->setcc.insn));', 1.0205817315870046e-05], ['i->setcc.insn))', 1.0205817315870046e-05], ['replacement', 1.0205817315870046e-05], ['(trace.branch_condition_rtx', 1.0205817315870046e-05], ['account', 1.0205817315870046e-05], ['(*i);', 1.0205817315870046e-05], ['2011-2019', 1.0205817315870046e-05], ['add,', 1.0205817315870046e-05], ['think', 1.0205817315870046e-05], ['arbitrarily', 1.0205817315870046e-05], ['match.', 1.0205817315870046e-05], ['Maximum', 1.0205817315870046e-05], ['(y)', 1.0205817315870046e-05], ['left-shift', 1.0205817315870046e-05], ['m_binary_func', 1.0205817315870046e-05], ['expensive', 1.0205817315870046e-05], ['computed.', 1.0205817315870046e-05], ['this?', 1.0205817315870046e-05], ['sub', 1.0205817315870046e-05], ['18,', 1.0205817315870046e-05], ['(ExpressionTree', 1.0205817315870046e-05], ['find_sequences', 1.0205817315870046e-05], ['&s,', 1.0205817315870046e-05], ['*const', 1.0205817315870046e-05], ['looping', 1.0205817315870046e-05], ['op->is_unary', 1.0205817315870046e-05], ['slot.', 1.0205817315870046e-05], ['operator,', 1.0205817315870046e-05], ['("const', 1.0205817315870046e-05], ['num_ops', 1.0205817315870046e-05], ['(multiplier', 1.0205817315870046e-05], ['two.', 1.0205817315870046e-05], ['(next_pow2', 1.0205817315870046e-05], ['(next_pow10', 1.0205817315870046e-05], ['(num_ops', 1.0205817315870046e-05], ['multiplier;', 1.0205817315870046e-05], ['exclude', 1.0205817315870046e-05], ['("/*', 1.0205817315870046e-05], ['Constant', 1.0205817315870046e-05], ['ARCH,', 1.0205817315870046e-05], ['Prune', 1.0205817315870046e-05], ['Without', 1.0205817315870046e-05], ['"}"', 1.0205817315870046e-05], ['opnd0,', 1.0205817315870046e-05], ['(loc_range->m_loc);', 1.0205817315870046e-05], ['start_loc', 1.0205817315870046e-05], ['fixit_obj->set', 1.0205817315870046e-05], ['diagnostic_info', 1.0205817315870046e-05], ['(context,', 1.0205817315870046e-05], ['"alias.h"', 1.0205817315870046e-05], ['"tree-inline.h"', 1.0205817315870046e-05], ['non-null', 1.0205817315870046e-05], ['requirements.', 1.0205817315870046e-05], ['f1', 1.0205817315870046e-05], ['id)', 1.0205817315870046e-05], ['wildcard,', 1.0205817315870046e-05], ['substitute', 1.0205817315870046e-05], ['(id)', 1.0205817315870046e-05], ['matched', 1.0205817315870046e-05], ['coerced', 1.0205817315870046e-05], ['complete', 1.0205817315870046e-05], ['(DECL_TEMPLATE_PARMS', 1.0205817315870046e-05], ['(tmpl));', 1.0205817315870046e-05], ['candidates.', 1.0205817315870046e-05], ['(location_of', 1.0205817315870046e-05], ['deduced', 1.0205817315870046e-05], ['PROTO', 1.0205817315870046e-05], ['(TREE_PURPOSE', 1.0205817315870046e-05], ['(ARGUMENT_PACK_ARGS', 1.0205817315870046e-05], ['(arg),', 1.0205817315870046e-05], ['implication', 1.0205817315870046e-05], ['learning', 1.0205817315870046e-05], ['learn', 1.0205817315870046e-05], ['imply', 1.0205817315870046e-05], ['equivalent.', 1.0205817315870046e-05], ['rare', 1.0205817315870046e-05], ['Here,', 1.0205817315870046e-05], ['vice', 1.0205817315870046e-05], ['versa.', 1.0205817315870046e-05], ['learn_implication', 1.0205817315870046e-05], ['child,', 1.0205817315870046e-05], ['cxt)', 1.0205817315870046e-05], ['non-dependent', 1.0205817315870046e-05], ['(constr)', 1.0205817315870046e-05], ['CHECK_CONSTR)', 1.0205817315870046e-05], ['expanding_concept_sentinel', 1.0205817315870046e-05], ['normalize_logical_operation', 1.0205817315870046e-05], ['introduces', 1.0205817315870046e-05], ['(EXPR_CONSTR,', 1.0205817315870046e-05], ['form.', 1.0205817315870046e-05], ['auto', 1.0205817315870046e-05], ['error_mark_node,', 1.0205817315870046e-05], ['(PARM_CONSTR,', 1.0205817315870046e-05], ['(check', 1.0205817315870046e-05], ['emitted.', 1.0205817315870046e-05], ['input_location);', 1.0205817315870046e-05], ['TEMPLATE_TYPE_PARM)', 1.0205817315870046e-05], ['(!same_type_p', 1.0205817315870046e-05], ['boolean_type_node))', 1.0205817315870046e-05], ['copy_node', 1.0205817315870046e-05], ['(PACK_EXPANSION_PATTERN', 1.0205817315870046e-05], ['atomic.', 1.0205817315870046e-05], ['PRED_CONSTR_EXPR', 1.0205817315870046e-05], ['PARM_CONSTR_PARMS', 1.0205817315870046e-05], ['tmpl_constr', 1.0205817315870046e-05], ['build_constraints', 1.0205817315870046e-05], ['RECORD_TYPE)', 1.0205817315870046e-05], ['TYPE_STUB_DECL', 1.0205817315870046e-05], ['CONSTRAINED_PARM_PROTOTYPE', 1.0205817315870046e-05], ['(see', 1.0205817315870046e-05], ['(constr);', 1.0205817315870046e-05], ['decl));', 1.0205817315870046e-05], ['(check,', 1.0205817315870046e-05], ['(parms);', 1.0205817315870046e-05], ['(parm);', 1.0205817315870046e-05], ['(src_parm)', 1.0205817315870046e-05], ['error_mark_node);', 1.0205817315870046e-05], ['is_non_type', 1.0205817315870046e-05], ['(parm)', 1.0205817315870046e-05], ['PARM_DECL', 1.0205817315870046e-05], ['parm_list', 1.0205817315870046e-05], ['(parm_list,', 1.0205817315870046e-05], ['(parm_list);', 1.0205817315870046e-05], ['(check_args,', 1.0205817315870046e-05], ['Associate', 1.0205817315870046e-05], ['(c1', 1.0205817315870046e-05], ['(c1,', 1.0205817315870046e-05], ['(c2,', 1.0205817315870046e-05], ['Also,', 1.0205817315870046e-05], ['--i)', 1.0205817315870046e-05], ['targs', 1.0205817315870046e-05], ['(t0,', 1.0205817315870046e-05], ['EXPR_CONSTR_EXPR', 1.0205817315870046e-05], ['TYPE_CONSTR_TYPE', 1.0205817315870046e-05], ['ICONV_CONSTR_TYPE', 1.0205817315870046e-05], ['new_type', 1.0205817315870046e-05], ['DEDUCT_CONSTR_EXPR', 1.0205817315870046e-05], ['VARS.', 1.0205817315870046e-05], ['parms;', 1.0205817315870046e-05], ['cp_unevaluated_operand', 1.0205817315870046e-05], ['ill-formed', 1.0205817315870046e-05], ['causing', 1.0205817315870046e-05], ['boolean_type_node);', 1.0205817315870046e-05], ['(cargs,', 1.0205817315870046e-05], ['targs,', 1.0205817315870046e-05], ['succeeds.', 1.0205817315870046e-05], ['(e.g.,', 1.0205817315870046e-05], ['satisfied,', 1.0205817315870046e-05], ['satisfy_associated_constraints', 1.0205817315870046e-05], ['eval;', 1.0205817315870046e-05], ['removing', 1.0205817315870046e-05], ['specified.', 1.0205817315870046e-05], ['req', 1.0205817315870046e-05], ['STATEMENT_LIST', 1.0205817315870046e-05], ['friend', 1.0205817315870046e-05], ['constraints,', 1.0205817315870046e-05], ['d2)', 1.0205817315870046e-05], ['subsumes', 1.0205817315870046e-05], ['failures.', 1.0205817315870046e-05], ['constraint_errors', 1.0205817315870046e-05], ['elide', 1.0205817315870046e-05], ['(constraint_expression_satisfied_p', 1.0205817315870046e-05], ['cur);', 1.0205817315870046e-05], ['cur', 1.0205817315870046e-05], ['END', 1.0205817315870046e-05], ['failed",', 1.0205817315870046e-05], ['CUR', 1.0205817315870046e-05], ['constructs', 1.0205817315870046e-05], ['ERROR_MARK:', 1.0205817315870046e-05], ['CI_ASSOCIATED_CONSTRAINTS', 1.0205817315870046e-05], ['prove_implication', 1.0205817315870046e-05], ['conclusions', 1.0205817315870046e-05], ['(iterator,', 1.0205817315870046e-05], ['begin()', 1.0205817315870046e-05], ['end()', 1.0205817315870046e-05], ['supplied', 1.0205817315870046e-05], ['goals', 1.0205817315870046e-05], ['proof_state', 1.0205817315870046e-05], ['verbatim', 1.0205817315870046e-05], ['analyze_atom', 1.0205817315870046e-05], ['undecided.', 1.0205817315870046e-05], ['TS', 1.0205817315870046e-05], ['valid)', 1.0205817315870046e-05], ['assumptions.', 1.0205817315870046e-05], ['(*iter);', 1.0205817315870046e-05], ['ts.replace(i,', 1.0205817315870046e-05], ['load_assumptions', 1.0205817315870046e-05], ['enew', 1.0205817315870046e-05], ['1024;', 1.0205817315870046e-05], ['done.', 1.0205817315870046e-05], ['right)', 1.0205817315870046e-05], ['attributes.', 1.0205817315870046e-05], ['variable)', 1.0205817315870046e-05], ['mutually', 1.0205817315870046e-05], ['another.', 1.0205817315870046e-05], ['("const",', 1.0205817315870046e-05], ['("pure",', 1.0205817315870046e-05], ['("noreturn",', 1.0205817315870046e-05], ['exposed', 1.0205817315870046e-05], ["`gcc.attribute'", 1.0205817315870046e-05], ['recognized', 1.0205817315870046e-05], ['User', 1.0205817315870046e-05], ['"gcc")', 1.0205817315870046e-05], ['*string', 1.0205817315870046e-05], ['(*node))', 1.0205817315870046e-05], ['*node;', 1.0205817315870046e-05], ['lookup_attribute', 1.0205817315870046e-05], ['POINTER_TYPE);', 1.0205817315870046e-05], ['FUNCTION_TYPE);', 1.0205817315870046e-05], ['(DECL_SECTION_NAME', 1.0205817315870046e-05], ['("section', 1.0205817315870046e-05], ['%q+D', 1.0205817315870046e-05], ['("%q+D', 1.0205817315870046e-05], ['used",', 1.0205817315870046e-05], ['"dmd/attrib.h"', 1.0205817315870046e-05], ['"d-target.h"', 1.0205817315870046e-05], ['given.', 1.0205817315870046e-05], ['specially', 1.0205817315870046e-05], ['checking.', 1.0205817315870046e-05], ['Type::basic[i];', 1.0205817315870046e-05], ['TYPE_DOMAIN', 1.0205817315870046e-05], ['TYPE_MAX_VALUE', 1.0205817315870046e-05], ['(index);', 1.0205817315870046e-05], ['length));', 1.0205817315870046e-05], ['RECORD_TYPE:', 1.0205817315870046e-05], ['stub', 1.0205817315870046e-05], ['TYPE_ALIGN_UNIT', 1.0205817315870046e-05], ['sc', 1.0205817315870046e-05], ['CST', 1.0205817315870046e-05], ['Expression.', 1.0205817315870046e-05], ['CTFE', 1.0205817315870046e-05], ['(cst));', 1.0205817315870046e-05], ['TREE_REAL_CST', 1.0205817315870046e-05], ['predefined', 1.0205817315870046e-05], ['identifiers.', 1.0205817315870046e-05], ['(targetm_common.except_unwind_info', 1.0205817315870046e-05], ['(&global_options)', 1.0205817315870046e-05], ['anyway', 1.0205817315870046e-05], ['forces', 1.0205817315870046e-05], ['vec_safe_iterate', 1.0205817315870046e-05], ['D2', 1.0205817315870046e-05], ['assumed', 1.0205817315870046e-05], ['Iterate', 1.0205817315870046e-05], ['others', 1.0205817315870046e-05], ['(dsym);', 1.0205817315870046e-05], ['(ptr_mode,', 1.0205817315870046e-05], ['maybe_set_builtin_1', 1.0205817315870046e-05], ['d->isFuncDeclaration', 1.0205817315870046e-05], ['d_maybe_set_builtin', 1.0205817315870046e-05], ['TYPE_QUAL_CONST));', 1.0205817315870046e-05], ['(SIZE_TYPE,', 1.0205817315870046e-05], ['int")', 1.0205817315870046e-05], ['intmax_type_node', 1.0205817315870046e-05], ['uintmax_type_node', 1.0205817315870046e-05], ['unsigned_type_node;', 1.0205817315870046e-05], ['signed_size_type_node', 1.0205817315870046e-05], ['long_integer_type_node;', 1.0205817315870046e-05], ['long_long_integer_type_node;', 1.0205817315870046e-05], ['(size_type_node);', 1.0205817315870046e-05], ['TYPE_STRING_FLAG', 1.0205817315870046e-05], ['domain', 1.0205817315870046e-05], ['TYPE_DYNAMIC_ARRAY', 1.0205817315870046e-05], ['ICE', 1.0205817315870046e-05], ['d_define_builtins', 1.0205817315870046e-05], ['(va_list_type_node)', 1.0205817315870046e-05], ['"dmd/ctfe.h"', 1.0205817315870046e-05], ['LC_LEAVE,', 1.0205817315870046e-05], ['*decl', 1.0205817315870046e-05], ['LINKd)', 1.0205817315870046e-05], ['Lazy', 1.0205817315870046e-05], ['LINKd);', 1.0205817315870046e-05], ['TypeDelegate', 1.0205817315870046e-05], ['TypeDelegate::create', 1.0205817315870046e-05], ['(decl->type);', 1.0205817315870046e-05], ['(declaration_reference_p', 1.0205817315870046e-05], ['insert_type_modifiers', 1.0205817315870046e-05], ['(Parameter', 1.0205817315870046e-05], ['(TREE_ADDRESSABLE', 1.0205817315870046e-05], ['TOTYPE', 1.0205817315870046e-05], ['*totype)', 1.0205817315870046e-05], ['(tb', 1.0205817315870046e-05], ['.length', 1.0205817315870046e-05], ['ptr_field', 1.0205817315870046e-05], ['ce);', 1.0205817315870046e-05], ['get_array_length', 1.0205817315870046e-05], ['Tsarray:', 1.0205817315870046e-05], ['BINFO', 1.0205817315870046e-05], ['build_class_binfo', 1.0205817315870046e-05], ['(cd->type);', 1.0205817315870046e-05], ['POINTER_TYPE.', 1.0205817315870046e-05], ['integer_zero_node;', 1.0205817315870046e-05], ['(cd->baseClass)', 1.0205817315870046e-05], ['layout.', 1.0205817315870046e-05], ['build_interface_binfo', 1.0205817315870046e-05], ['*cd,', 1.0205817315870046e-05], ['*bc', 1.0205817315870046e-05], ['offset));', 1.0205817315870046e-05], ['.funcptr', 1.0205817315870046e-05], ['(TYPE_DELEGATE', 1.0205817315870046e-05], ['delegate.', 1.0205817315870046e-05], ['TYPE_DELEGATE', 1.0205817315870046e-05], ['(ctype)', 1.0205817315870046e-05], ['(ctype),', 1.0205817315870046e-05], ['extract_from_method_call', 1.0205817315870046e-05], ['(METHOD_CALL_EXPR', 1.0205817315870046e-05], ['build_typeof_null_value', 1.0205817315870046e-05], ['build_vindex_ref', 1.0205817315870046e-05], ['(result)));', 1.0205817315870046e-05], ['(fntype));', 1.0205817315870046e-05], ['lvalue.', 1.0205817315870046e-05], ['RESULT_DECL:', 1.0205817315870046e-05], ['VALUEP.', 1.0205817315870046e-05], ['lhs;', 1.0205817315870046e-05], ['SET_EXPR_LOCATION', 1.0205817315870046e-05], ['optimizer', 1.0205817315870046e-05], ['initializes', 1.0205817315870046e-05], ['gimplification.', 1.0205817315870046e-05], ['manifest', 1.0205817315870046e-05], ['compile-time', 1.0205817315870046e-05], ['purposes.', 1.0205817315870046e-05], ['MODIFY_EXPR:', 1.0205817315870046e-05], ['NOP_EXPR:', 1.0205817315870046e-05], ['CONVERT_EXPR:', 1.0205817315870046e-05], ['d_mark_read', 1.0205817315870046e-05], ['*sd)', 1.0205817315870046e-05], ['sd->fields.dim;', 1.0205817315870046e-05], ['sd->fields[i];', 1.0205817315870046e-05], ['*ts', 1.0205817315870046e-05], ['lower_struct_comparison', 1.0205817315870046e-05], ['*sd,', 1.0205817315870046e-05], ['EQ_EXPR)', 1.0205817315870046e-05], ['TRUTH_ORIF_EXPR;', 1.0205817315870046e-05], ['(BUILT_IN_MEMCMP),', 1.0205817315870046e-05], ['tmemcmp,', 1.0205817315870046e-05], ['Tvector', 1.0205817315870046e-05], ['required.', 1.0205817315870046e-05], ['(t1ref),', 1.0205817315870046e-05], ['(tcode,', 1.0205817315870046e-05], ['req,', 1.0205817315870046e-05], ['ieq);', 1.0205817315870046e-05], ['stype', 1.0205817315870046e-05], ['(level_block);', 1.0205817315870046e-05], ['(ptrtype);', 1.0205817315870046e-05], ['(t2));', 1.0205817315870046e-05], ['Decrease', 1.0205817315870046e-05], ['(POSTDECREMENT_EXPR,', 1.0205817315870046e-05], ['build_alignment_field', 1.0205817315870046e-05], ['TYPE_ALIGN', 1.0205817315870046e-05], ['layout_decl', 1.0205817315870046e-05], ['is_initialized', 1.0205817315870046e-05], ['RECORD_OR_UNION_TYPE_P', 1.0205817315870046e-05], ['(RECORD_OR_UNION_TYPE_P', 1.0205817315870046e-05], ['(vfield));', 1.0205817315870046e-05], ['ve);', 1.0205817315870046e-05], ['(constant_p)', 1.0205817315870046e-05], ['lookup_anon_field', 1.0205817315870046e-05], ['error_operand_p', 1.0205817315870046e-05], ['(object,', 1.0205817315870046e-05], ['fold_build3_loc', 1.0205817315870046e-05], ['COMPONENT_REF,', 1.0205817315870046e-05], ['RHS.', 1.0205817315870046e-05], ['(rhs)', 1.0205817315870046e-05], ['AGGREGATE_TYPE_P', 1.0205817315870046e-05], ['addressable', 1.0205817315870046e-05], ['(lhs);', 1.0205817315870046e-05], ['TARGET_EXPR', 1.0205817315870046e-05], ['rhs);', 1.0205817315870046e-05], ['warn_for_null_address', 1.0205817315870046e-05], ['(AGGREGATE_TYPE_P', 1.0205817315870046e-05], ['arg0', 1.0205817315870046e-05], ['(arg1);', 1.0205817315870046e-05], ['(arg0),', 1.0205817315870046e-05], ['COND_EXPR.', 1.0205817315870046e-05], ['build_empty_stmt', 1.0205817315870046e-05], ['(input_location);', 1.0205817315870046e-05], ['EXP,', 1.0205817315870046e-05], ['(sizetype),', 1.0205817315870046e-05], ['(sizetype));', 1.0205817315870046e-05], ['(index),', 1.0205817315870046e-05], ['plus', 1.0205817315870046e-05], ['(NEGATE_EXPR,', 1.0205817315870046e-05], ['(ptrtype));', 1.0205817315870046e-05], ['build_array_from_val', 1.0205817315870046e-05], ['void_okay_p', 1.0205817315870046e-05], ['fd->type;', 1.0205817315870046e-05], ['component.', 1.0205817315870046e-05], ['var_chain,', 1.0205817315870046e-05], ['*arguments)', 1.0205817315870046e-05], ['(tf->ty', 1.0205817315870046e-05], ['%<this%>', 1.0205817315870046e-05], ['saved_args', 1.0205817315870046e-05], ['Lagain;', 1.0205817315870046e-05], ['nparams', 1.0205817315870046e-05], ['targ', 1.0205817315870046e-05], ['(COMPOUND_EXPR,', 1.0205817315870046e-05], ['(result))', 1.0205817315870046e-05], ['libcall,', 1.0205817315870046e-05], ['File', 1.0205817315870046e-05], ['(fmodfn,', 1.0205817315870046e-05], ['basetype,', 1.0205817315870046e-05], ['build_function_type', 1.0205817315870046e-05], ['sym', 1.0205817315870046e-05], ['dsym->isFuncDeclaration', 1.0205817315870046e-05], ['fd->vthis);', 1.0205817315870046e-05], ['ffo', 1.0205817315870046e-05], ['(ffo)', 1.0205817315870046e-05], ['FRAMEINFO_STATIC_CHAIN', 1.0205817315870046e-05], ['get_framedecl', 1.0205817315870046e-05], ['&offset)', 1.0205817315870046e-05], ['d_nested_class', 1.0205817315870046e-05], ['*outer', 1.0205817315870046e-05], ['outer->isFuncDeclaration', 1.0205817315870046e-05], ['Type::tvoidptr)', 1.0205817315870046e-05], ['(FRAMEINFO_IS_CLOSURE', 1.0205817315870046e-05], ['(frame_rec_type)', 1.0205817315870046e-05], ['(fd->vthis)', 1.0205817315870046e-05], ['frame_rec_type;', 1.0205817315870046e-05], ['referencing', 1.0205817315870046e-05], ['fd->closureVars[i];', 1.0205817315870046e-05], ['(vsym);', 1.0205817315870046e-05], ['survive', 1.0205817315870046e-05], ['FD', 1.0205817315870046e-05], ['(Type::tsize_t),', 1.0205817315870046e-05], ['Set-up', 1.0205817315870046e-05], ['FRAMEINFO_IS_CLOSURE', 1.0205817315870046e-05], ['contracts', 1.0205817315870046e-05], ['referenced.', 1.0205817315870046e-05], ['ff', 1.0205817315870046e-05], ['inner;', 1.0205817315870046e-05], ['these.', 1.0205817315870046e-05], ['op0,', 1.0205817315870046e-05], ['(op0);', 1.0205817315870046e-05], ['result_type)', 1.0205817315870046e-05], ['(expr)));', 1.0205817315870046e-05], ['d_bool_type)', 1.0205817315870046e-05], ['side-effects.', 1.0205817315870046e-05], ['COMPLEX_TYPE)', 1.0205817315870046e-05], ['(t)));', 1.0205817315870046e-05], ['REAL_TYPE', 1.0205817315870046e-05], ['*etype,', 1.0205817315870046e-05], ['*ebtype', 1.0205817315870046e-05], ['*tbtype', 1.0205817315870046e-05], ['Tdelegate:', 1.0205817315870046e-05], ['conversion,', 1.0205817315870046e-05], ['Casting', 1.0205817315870046e-05], ['other.', 1.0205817315870046e-05], ['ebtype->nextOf', 1.0205817315870046e-05], ['Taarray:', 1.0205817315870046e-05], ['(TypeSArray', 1.0205817315870046e-05], ['(!POINTER_TYPE_P', 1.0205817315870046e-05], ['func);', 1.0205817315870046e-05], ['exp->type->toBasetype', 1.0205817315870046e-05], ['expand_d_format', 1.0205817315870046e-05], ['inbacktick', 1.0205817315870046e-05], ["'\\0'", 1.0205817315870046e-05], ['buf.writeByte', 1.0205817315870046e-05], ['translated', 1.0205817315870046e-05], ['front-end,', 1.0205817315870046e-05], ['xformat,', 1.0205817315870046e-05], ['(xformat);', 1.0205817315870046e-05], ['verror', 1.0205817315870046e-05], ['supplementary', 1.0205817315870046e-05], ['increase', 1.0205817315870046e-05], ['verrorSupplemental', 1.0205817315870046e-05], ['vmessage', 1.0205817315870046e-05], ['End', 1.0205817315870046e-05], ['buf.printf', 1.0205817315870046e-05], ['real_from_string3', 1.0205817315870046e-05], ['NaN.', 1.0205817315870046e-05], ['representable.', 1.0205817315870046e-05], ['buflen;', 1.0205817315870046e-05], ['(buffer);', 1.0205817315870046e-05], ['Compiler', 1.0205817315870046e-05], ['contained', 1.0205817315870046e-05], ['m->importedFrom', 1.0205817315870046e-05], ['ensured', 1.0205817315870046e-05], ['*md', 1.0205817315870046e-05], ['(md', 1.0205817315870046e-05], ['((*md->packages)[0]->toChars', 1.0205817315870046e-05], ['!strcmp', 1.0205817315870046e-05], ['anyway.', 1.0205817315870046e-05], ['maybe_set_intrinsic', 1.0205817315870046e-05], ['evaluated.', 1.0205817315870046e-05], ['Terror);', 1.0205817315870046e-05], ['*e,', 1.0205817315870046e-05], ['len))', 1.0205817315870046e-05], ['path.', 1.0205817315870046e-05], ['"opts.h"', 1.0205817315870046e-05], ['passes.', 1.0205817315870046e-05], ['doing_semantic_analysis_p', 1.0205817315870046e-05], ['<arg>', 1.0205817315870046e-05], ['compiled.', 1.0205817315870046e-05], ["main'", 1.0205817315870046e-05], ['middle-end.', 1.0205817315870046e-05], ['deps_add_target', 1.0205817315870046e-05], ["('\\\\');", 1.0205817315870046e-05], ['compiler-generated', 1.0205817315870046e-05], ['modules.', 1.0205817315870046e-05], ['global.params.useInvariants', 1.0205817315870046e-05], ['global.params.useIn', 1.0205817315870046e-05], ['global.params.useOut', 1.0205817315870046e-05], ['global.params.useSwitchError', 1.0205817315870046e-05], ['extern(C++)', 1.0205817315870046e-05], ['global.params.useDeprecated', 1.0205817315870046e-05], ['DIAGNOSTICoff;', 1.0205817315870046e-05], ['d_option.deps', 1.0205817315870046e-05], ['d_option.deps_skip_system', 1.0205817315870046e-05], ['d_option.deps_filename', 1.0205817315870046e-05], ['d_option_lang_mask', 1.0205817315870046e-05], ['Back-end', 1.0205817315870046e-05], ['main.', 1.0205817315870046e-05], ['(level);', 1.0205817315870046e-05], ['("bad', 1.0205817315870046e-05], ['global.params.doDocComments', 1.0205817315870046e-05], ['global.params.doHdrGeneration', 1.0205817315870046e-05], ['Deal', 1.0205817315870046e-05], ['filename', 1.0205817315870046e-05], ['(op))', 1.0205817315870046e-05], ['Leave', 1.0205817315870046e-05], ['empty_aggregate_p', 1.0205817315870046e-05], ['(!error_operand_p', 1.0205817315870046e-05], ['aggregates.', 1.0205817315870046e-05], ['right.', 1.0205817315870046e-05], ['side-effect,', 1.0205817315870046e-05], ['d_unsigned_type', 1.0205817315870046e-05], ['(d_option.fonly', 1.0205817315870046e-05], ['(in_fnames[i],', 1.0205817315870046e-05], ['(&buffer);', 1.0205817315870046e-05], ['modules.push', 1.0205817315870046e-05], ['Load', 1.0205817315870046e-05], ['((c', 1.0205817315870046e-05], ['File::create', 1.0205817315870046e-05], ['loaded', 1.0205817315870046e-05], ['mangleToBuffer', 1.0205817315870046e-05], ['(name[0]', 1.0205817315870046e-05], ['(d_cent_type))', 1.0205817315870046e-05], ['long_double_type_node;', 1.0205817315870046e-05], ['complex_float_type_node;', 1.0205817315870046e-05], ['complex_double_type_node;', 1.0205817315870046e-05], ['complex_long_double_type_node;', 1.0205817315870046e-05], ['(mode);', 1.0205817315870046e-05], ['mode);', 1.0205817315870046e-05], ['bits,', 1.0205817315870046e-05], ['d_signed_or_unsigned_type', 1.0205817315870046e-05], ['d_global_bindings_p', 1.0205817315870046e-05], ['aliases', 1.0205817315870046e-05], ['generator.', 1.0205817315870046e-05], ['FUNCFRAME_INFO:', 1.0205817315870046e-05], ['ggc_cleared_alloc<struct', 1.0205817315870046e-05], ['compilation,', 1.0205817315870046e-05], ['lang_decl>', 1.0205817315870046e-05], ['lang_hooks.dup_lang_specific_decl', 1.0205817315870046e-05], ['t->toBasetype', 1.0205817315870046e-05], ['t)->sym;', 1.0205817315870046e-05], ['get_cpp_typeinfo_decl', 1.0205817315870046e-05], ['a[i][k]*b[k][j];', 1.0205817315870046e-05], ['<loop_j,', 1.0205817315870046e-05], ['overall', 1.0205817315870046e-05], ['mapping', 1.0205817315870046e-05], ['(PARAM_VALUE', 1.0205817315870046e-05], ['Comparison', 1.0205817315870046e-05], ['inner/outer', 1.0205817315870046e-05], ['stmts.', 1.0205817315870046e-05], ['(3)', 1.0205817315870046e-05], ['step.', 1.0205817315870046e-05], ['Init', 1.0205817315870046e-05], ['loading', 1.0205817315870046e-05], ['dump_reduction', 1.0205817315870046e-05], ['(reduction_p', 1.0205817315870046e-05], ['Constructor.', 1.0205817315870046e-05], ['Destructor.', 1.0205817315870046e-05], ['(iv);', 1.0205817315870046e-05], ['single_use_in_loop', 1.0205817315870046e-05], ['unsupported', 1.0205817315870046e-05], ['interchange,', 1.0205817315870046e-05], ['(stmt', 1.0205817315870046e-05], ['ILOOP', 1.0205817315870046e-05], ['allowed_reduction_num', 1.0205817315870046e-05], ['(iloop', 1.0205817315870046e-05], ['gphi_iterator', 1.0205817315870046e-05], ['(!iloop', 1.0205817315870046e-05], ['header,', 1.0205817315870046e-05], ['gsi_start_phis', 1.0205817315870046e-05], ['code:', 1.0205817315870046e-05], ['a[i]', 1.0205817315870046e-05], ['(!bb', 1.0205817315870046e-05], ['as_a', 1.0205817315870046e-05], ['next_def', 1.0205817315870046e-05], ['next>', 1.0205817315870046e-05], ['general,', 1.0205817315870046e-05], ['(gassign', 1.0205817315870046e-05], ['<gassign', 1.0205817315870046e-05], ['(var))', 1.0205817315870046e-05], ['verify', 1.0205817315870046e-05], ['INIT', 1.0205817315870046e-05], ['use_phi', 1.0205817315870046e-05], ['(use_phi', 1.0205817315870046e-05], ['phi)', 1.0205817315870046e-05], ['lcssa_phi', 1.0205817315870046e-05], ['(chrec));', 1.0205817315870046e-05], ['tree_contains_chrecs', 1.0205817315870046e-05], ['(CHREC_RIGHT', 1.0205817315870046e-05], ['analyzed.', 1.0205817315870046e-05], ['chrec', 1.0205817315870046e-05], ['(e,', 1.0205817315870046e-05], ['(iloop,', 1.0205817315870046e-05], ['analyzed', 1.0205817315870046e-05], ['(gsi_stmt', 1.0205817315870046e-05], ['MEM_REF[idx];', 1.0205817315870046e-05], ['gimple_set_vuse', 1.0205817315870046e-05], ['MEM_REF', 1.0205817315870046e-05], ['stmts,', 1.0205817315870046e-05], ['(gimple_vdef', 1.0205817315870046e-05], ['(re->consumer,', 1.0205817315870046e-05], ['free_data_refs', 1.0205817315870046e-05], ['tree_loop_interchange', 1.0205817315870046e-05], ['loop_nest)', 1.0205817315870046e-05], ['vec<ddr_p>);', 1.0205817315870046e-05], ['map_inductions_to_loop', 1.0205817315870046e-05], ['indices', 1.0205817315870046e-05], ['i_idx,', 1.0205817315870046e-05], ['ddrs)', 1.0205817315870046e-05], ['*dr;', 1.0205817315870046e-05], ['(ddr);', 1.0205817315870046e-05], ['(ddr,', 1.0205817315870046e-05], ['conservative', 1.0205817315870046e-05], ['(loop_nest);', 1.0205817315870046e-05], ['(loop_preheader_edge', 1.0205817315870046e-05], ['number_of_latch_executions', 1.0205817315870046e-05], ['(loop_outer', 1.0205817315870046e-05], ['&var_after);', 1.0205817315870046e-05], ['(var_after));', 1.0205817315870046e-05], ['100;', 1.0205817315870046e-05], ['DR_REF', 1.0205817315870046e-05], ['(expected);', 1.0205817315870046e-05], ['respect', 1.0205817315870046e-05], ['num_loops)', 1.0205817315870046e-05], ['(num_loops', 1.0205817315870046e-05], ['(loop_nest', 1.0205817315870046e-05], ['flow_loop_nested_p', 1.0205817315870046e-05], ['Block', 1.0205817315870046e-05], ['true)', 1.0205817315870046e-05], ['num_old_inv_drs', 1.0205817315870046e-05], ['num_new_inv_drs', 1.0205817315870046e-05], ['(oloop_strides,', 1.0205817315870046e-05], ['access_size', 1.0205817315870046e-05], ['o_stmt_cost', 1.0205817315870046e-05], ['(i_idx,', 1.0205817315870046e-05], ['transformation', 1.0205817315870046e-05], ['exit->src', 1.0205817315870046e-05], ['bbs[i];', 1.0205817315870046e-05], ['(gimple_stmt_iterator', 1.0205817315870046e-05], ['(bbs);', 1.0205817315870046e-05], ['loop2', 1.0205817315870046e-05], ['innermost;', 1.0205817315870046e-05], ['DR_IS_WRITE', 1.0205817315870046e-05], ['b_outer_p', 1.0205817315870046e-05], ['(a_outer_p', 1.0205817315870046e-05], ['(*bb_refs);', 1.0205817315870046e-05], ['*datarefs);', 1.0205817315870046e-05], ['(number_of_loops', 1.0205817315870046e-05], ['FOR_EACH_LOOP', 1.0205817315870046e-05], ['(long_double_type_node),', 1.0205817315870046e-05], ['(bool', 1.0205817315870046e-05], ['().cl', 1.0205817315870046e-05], ['(&q,', 1.0205817315870046e-05], ['LIBSTDCXX', 1.0205817315870046e-05], ['LIBSTDCXX_PROFILE', 1.0205817315870046e-05], ['LIBPHOBOS', 1.0205817315870046e-05], ['LIBPHOBOS_PROFILE', 1.0205817315870046e-05], ['LIBDRUNTIME', 1.0205817315870046e-05], ['LIBDRUNTIME_PROFILE', 1.0205817315870046e-05], ['PHOBOS_NOLINK', 1.0205817315870046e-05], ['gave', 1.0205817315870046e-05], ['saw_profile_flag', 1.0205817315870046e-05], ['libphobos', 1.0205817315870046e-05], ['only_source_option', 1.0205817315870046e-05], ["'.');", 1.0205817315870046e-05], ['(suffix', 1.0205817315870046e-05], ['out[baselen', 1.0205817315870046e-05], ['!static_link)', 1.0205817315870046e-05], ['"0x1p%d",', 1.0205817315870046e-05], ['increment', 1.0205817315870046e-05], ['log10_2;', 1.0205817315870046e-05], ['Size', 1.0205817315870046e-05], ['*td', 1.0205817315870046e-05], ['"dmd/init.h"', 1.0205817315870046e-05], ['Symbol', 1.0205817315870046e-05], ['gcc.attribute', 1.0205817315870046e-05], ['PASSobj)', 1.0205817315870046e-05], ['d->semanticRun', 1.0205817315870046e-05], ['PASSobj;', 1.0205817315870046e-05], ['imports.', 1.0205817315870046e-05], ['(isError', 1.0205817315870046e-05], ['emitted,', 1.0205817315870046e-05], ['(!fd', 1.0205817315870046e-05], ['TemplateInstance', 1.0205817315870046e-05], ['(TemplateInstance', 1.0205817315870046e-05], ['walking', 1.0205817315870046e-05], ['Anonymous', 1.0205817315870046e-05], ['(d))', 1.0205817315870046e-05], ['d->sinit', 1.0205817315870046e-05], ['(d->sinit)', 1.0205817315870046e-05], ['(d->isInstantiated', 1.0205817315870046e-05], ['member->accept', 1.0205817315870046e-05], ['has_errors', 1.0205817315870046e-05], ['vtbl[].', 1.0205817315870046e-05], ['d->vtbl.dim;', 1.0205817315870046e-05], ['fd->toChars', 1.0205817315870046e-05], ['get_vtable_decl', 1.0205817315870046e-05], ['layout_classinfo', 1.0205817315870046e-05], ['(d->type));', 1.0205817315870046e-05], ['(EnumDeclaration', 1.0205817315870046e-05], ['(TypeEnum', 1.0205817315870046e-05], ['*ie', 1.0205817315870046e-05], ['initializerToExpression', 1.0205817315870046e-05], ['CONST_DECL', 1.0205817315870046e-05], ['non-constant', 1.0205817315870046e-05], ['(IDENTIFIER_DSYMBOL', 1.0205817315870046e-05], ['(d->loc);', 1.0205817315870046e-05], ['register_module_decl', 1.0205817315870046e-05], ['(d_function_chain->vars_in_scope,', 1.0205817315870046e-05], ['(parm_decl)', 1.0205817315870046e-05], ['(d));', 1.0205817315870046e-05], ['(param_list,', 1.0205817315870046e-05], ['restype', 1.0205817315870046e-05], ['relayout_decl', 1.0205817315870046e-05], ['DECL_HAS_VALUE_EXPR_P', 1.0205817315870046e-05], ['(init);', 1.0205817315870046e-05], ['(TRY_FINALLY_EXPR,', 1.0205817315870046e-05], ['(old_context);', 1.0205817315870046e-05], ['exist.', 1.0205817315870046e-05], ['SymbolDeclaration', 1.0205817315870046e-05], ['(decl->csym', 1.0205817315870046e-05], ['(vd', 1.0205817315870046e-05], ['STRUCTALIGN_DEFAULT)', 1.0205817315870046e-05], ['(decl->csym))', 1.0205817315870046e-05], ['DECL_VIRTUAL_P', 1.0205817315870046e-05], ['(newfntype)', 1.0205817315870046e-05], ['cgraph_node::get_create', 1.0205817315870046e-05], ['alias;', 1.0205817315870046e-05], ['(function));', 1.0205817315870046e-05], ['(thunk);', 1.0205817315870046e-05], ['thunk;', 1.0205817315870046e-05], ["`this'", 1.0205817315870046e-05], ['param);', 1.0205817315870046e-05], ['Warn', 1.0205817315870046e-05], ['(return_expr', 1.0205817315870046e-05], ['(*cd->vtblInterfaces)[i];', 1.0205817315870046e-05], ['accessible', 1.0205817315870046e-05], ['(decl->type));', 1.0205817315870046e-05], ['build_class_instance', 1.0205817315870046e-05], ['(ClassReferenceExp', 1.0205817315870046e-05], ['(get_vtable_decl', 1.0205817315870046e-05], ['classinfo', 1.0205817315870046e-05], ['bcd->vtblInterfaces->dim;', 1.0205817315870046e-05], ['csym', 1.0205817315870046e-05], ['(csym,', 1.0205817315870046e-05], ['*value', 1.0205817315870046e-05], ['analogous', 1.0205817315870046e-05], ['*sle', 1.0205817315870046e-05], ['byte[]', 1.0205817315870046e-05], ['decl->ident', 1.0205817315870046e-05], ['d_comdat_group', 1.0205817315870046e-05], ['Front-end.', 1.0205817315870046e-05], ['(eptype,', 1.0205817315870046e-05], ['*e1b', 1.0205817315870046e-05], ['(CastExp', 1.0205817315870046e-05], ['e1b;', 1.0205817315870046e-05], ['e1b', 1.0205817315870046e-05], ['assignment,', 1.0205817315870046e-05], ['Operands', 1.0205817315870046e-05], ['bring', 1.0205817315870046e-05], ['NE_EXPR;', 1.0205817315870046e-05], ['((tb1->ty', 1.0205817315870046e-05], ['Tarray))', 1.0205817315870046e-05], ['objects,', 1.0205817315870046e-05], ['tb1)->sym;', 1.0205817315870046e-05], ['TOKequal)', 1.0205817315870046e-05], ['t1len,', 1.0205817315870046e-05], ['TypeAArray', 1.0205817315870046e-05], ['Taarray);', 1.0205817315870046e-05], ['*tkey', 1.0205817315870046e-05], ['((TypeAArray', 1.0205817315870046e-05], ['tkey);', 1.0205817315870046e-05], ['(e->op)', 1.0205817315870046e-05], ["if'", 1.0205817315870046e-05], ['(e->e2->type->toBasetype', 1.0205817315870046e-05], ['void_node);', 1.0205817315870046e-05], ['~', 1.0205817315870046e-05], ['Tchar', 1.0205817315870046e-05], ['dchar', 1.0205817315870046e-05], ['offexp', 1.0205817315870046e-05], ['ptrexp', 1.0205817315870046e-05], ['Assignment', 1.0205817315870046e-05], ['(etype->size', 1.0205817315870046e-05], ['to)', 1.0205817315870046e-05], ['TOKblit);', 1.0205817315870046e-05], ['set-up', 1.0205817315870046e-05], ['(modifycode,', 1.0205817315870046e-05], ['(result));', 1.0205817315870046e-05], ['(e->loc,', 1.0205817315870046e-05], ['comma', 1.0205817315870046e-05], ['lwr_tree', 1.0205817315870046e-05], ['off,', 1.0205817315870046e-05], ['tb1->isClassHandle', 1.0205817315870046e-05], ['collector', 1.0205817315870046e-05], ['sometimes', 1.0205817315870046e-05], ['e->arguments);', 1.0205817315870046e-05], ['(e->func);', 1.0205817315870046e-05], ['Object', 1.0205817315870046e-05], ['assert_pass', 1.0205817315870046e-05], ['unittest_p', 1.0205817315870046e-05], ['(e->var);', 1.0205817315870046e-05], ['allocator.', 1.0205817315870046e-05], ['(e->allocator)', 1.0205817315870046e-05], ['Tstruct);', 1.0205817315870046e-05], ['(e->arguments', 1.0205817315870046e-05], ['(TypeDArray', 1.0205817315870046e-05], ['(TypePointer', 1.0205817315870046e-05], ['literal,', 1.0205817315870046e-05], ['String', 1.0205817315870046e-05], ['(tb->nextOf', 1.0205817315870046e-05], ['satype', 1.0205817315870046e-05], ['pointers,', 1.0205817315870046e-05], ['(satype,', 1.0205817315870046e-05], ['(e->elements->dim),', 1.0205817315870046e-05], ['mem,', 1.0205817315870046e-05], ['(key);', 1.0205817315870046e-05], ['keys,', 1.0205817315870046e-05], ['vals);', 1.0205817315870046e-05], ['DECL_RESULT.', 1.0205817315870046e-05], ['try/finally', 1.0205817315870046e-05], ['ImportVisitor', 1.0205817315870046e-05], ['(m->isym)', 1.0205817315870046e-05], ['intrinsic_code', 1.0205817315870046e-05], ['intrinsic.', 1.0205817315870046e-05], ['rettype', 1.0205817315870046e-05], ['INTRINSIC,', 1.0205817315870046e-05], ['(intrinsic_code', 1.0205817315870046e-05], ['intrinsic,', 1.0205817315870046e-05], ['ptr[bitnum', 1.0205817315870046e-05], ['copysign', 1.0205817315870046e-05], ['(to);', 1.0205817315870046e-05], ['parmn);', 1.0205817315870046e-05], ['(parmn);', 1.0205817315870046e-05], ['(parmn,', 1.0205817315870046e-05], ['(overflow);', 1.0205817315870046e-05], ['ubyte', 1.0205817315870046e-05], ['ushort', 1.0205817315870046e-05], ['ulong', 1.0205817315870046e-05], ['ptr.', 1.0205817315870046e-05], ['Most', 1.0205817315870046e-05], ['callexp;', 1.0205817315870046e-05], ['(intrinsic,', 1.0205817315870046e-05], ['callexp);', 1.0205817315870046e-05], ['`static', 1.0205817315870046e-05], ['ModuleInfo.', 1.0205817315870046e-05], ['moduleinfo_type;', 1.0205817315870046e-05], ['compiler_dso_type;', 1.0205817315870046e-05], ['dso_registry_fn;', 1.0205817315870046e-05], ['repeated', 1.0205817315870046e-05], ['get_internal_fn', 1.0205817315870046e-05], ['constructors,', 1.0205817315870046e-05], ['get_compiler_dso_type', 1.0205817315870046e-05], ['CompilerDSOData', 1.0205817315870046e-05], ['(dso_registry_fn)', 1.0205817315870046e-05], ['build_dso_cdtor_fn', 1.0205817315870046e-05], ['DECL_VISIBILITY_SPECIFIED', 1.0205817315870046e-05], ['condition);', 1.0205817315870046e-05], ['(build_vcondition', 1.0205817315870046e-05], ['(mref)', 1.0205817315870046e-05], ['*mi', 1.0205817315870046e-05], ['decl->aimports[i];', 1.0205817315870046e-05], ['decl->members->dim;', 1.0205817315870046e-05], ['(*decl->members)[i];', 1.0205817315870046e-05], ['(cd)));', 1.0205817315870046e-05], ['far.', 1.0205817315870046e-05], ['subdirectory', 1.0205817315870046e-05], ['analysis,', 1.0205817315870046e-05], ['upstream', 1.0205817315870046e-05], ['libcall_type', 1.0205817315870046e-05], ['get_libcall_type', 1.0205817315870046e-05], ['nparams,', 1.0205817315870046e-05], ['nargs);', 1.0205817315870046e-05], ['Versioning', 1.0205817315870046e-05], ['(auto', 1.0205817315870046e-05], ['::', 1.0205817315870046e-05], ['of:', 1.0205817315870046e-05], ['deciding', 1.0205817315870046e-05], ['calculation', 1.0205817315870046e-05], ['worthwhile', 1.0205817315870046e-05], ['impossible', 1.0205817315870046e-05], ['(...)', 1.0205817315870046e-05], ['calculates', 1.0205817315870046e-05], ['subloop', 1.0205817315870046e-05], ['succeeds,', 1.0205817315870046e-05], ['lv_dom_walker', 1.0205817315870046e-05], ['dom_walker', 1.0205817315870046e-05], ['FINAL', 1.0205817315870046e-05], ['OVERRIDE;', 1.0205817315870046e-05], ['name_prop', 1.0205817315870046e-05], ['acceptable_multiplier_p', 1.0205817315870046e-05], ['HOST_WIDE_INT,', 1.0205817315870046e-05], ['acceptable_type_p', 1.0205817315870046e-05], ['multiply_term_by', 1.0205817315870046e-05], ['dump_inner_likelihood', 1.0205817315870046e-05], ['analyze_stride', 1.0205817315870046e-05], ['record_address_fragment', 1.0205817315870046e-05], ['add_loop_to_queue', 1.0205817315870046e-05], ['maybe_get_stmt', 1.0205817315870046e-05], ['look_through_cast_p', 1.0205817315870046e-05], ['expression;', 1.0205817315870046e-05], ['*assign', 1.0205817315870046e-05], ['dump_address_info', 1.0205817315870046e-05], ['hash.add_int', 1.0205817315870046e-05], ['duplicating', 1.0205817315870046e-05], ['loop"', 1.0205817315870046e-05], ['loop)', 1.0205817315870046e-05], ['hoist', 1.0205817315870046e-05], ['M_MAXIMUM_SCALE.', 1.0205817315870046e-05], ['MULTIPLIER', 1.0205817315870046e-05], ['TERM.', 1.0205817315870046e-05], ['dimension\\n",', 1.0205817315870046e-05], ['term.stride);', 1.0205817315870046e-05], ['TERM,', 1.0205817315870046e-05], ['term.stride', 1.0205817315870046e-05], ['term.inner_likelihood', 1.0205817315870046e-05], ['(stride,', 1.0205817315870046e-05], ['term.multiplier);', 1.0205817315870046e-05], ["STMT's", 1.0205817315870046e-05], ['expr_invariant_in_loop_p', 1.0205817315870046e-05], ['stride];', 1.0205817315870046e-05], ['MULT_EXPR)', 1.0205817315870046e-05], ['(gimple_assign_rhs1', 1.0205817315870046e-05], ['(op2)', 1.0205817315870046e-05], ['op2);', 1.0205817315870046e-05], ['term.expr,', 1.0205817315870046e-05], ['Peel', 1.0205817315870046e-05], ['gimple_assign_rhs2', 1.0205817315870046e-05], ['strides.', 1.0205817315870046e-05], ['a(1,:)', 1.0205817315870046e-05], ['b(:,1)', 1.0205817315870046e-05], ['version_stride', 1.0205817315870046e-05], ['address->min_offset', 1.0205817315870046e-05], ['address->terms.length', 1.0205817315870046e-05], ['address->terms[i].expr', 1.0205817315870046e-05], ['dump_user_location_t::from_function_decl', 1.0205817315870046e-05], ['(m_fn->decl));', 1.0205817315870046e-05], ['&linfo', 1.0205817315870046e-05], ['(!linfo.rejected_p)', 1.0205817315870046e-05], ['bitmap_iterator', 1.0205817315870046e-05], ['EXECUTE_IF_SET_IN_BITMAP', 1.0205817315870046e-05], ['bi)', 1.0205817315870046e-05], ['ssa_name', 1.0205817315870046e-05], ['loop\\n",', 1.0205817315870046e-05], ['pass_loop_versioning', 1.0205817315870046e-05], ['ent->fwdrefs;', 1.0205817315870046e-05], ['ent->label;', 1.0205817315870046e-05], ['labels,', 1.0205817315870046e-05], ['u', 1.0205817315870046e-05], ['this->break_label_', 1.0205817315870046e-05], ['this->continue_label_', 1.0205817315870046e-05], ['(s->loc);', 1.0205817315870046e-05], ['LabelStatement', 1.0205817315870046e-05], ['(label))', 1.0205817315870046e-05], ['label));', 1.0205817315870046e-05], ['ident->toChars', 1.0205817315870046e-05], ['(this->break_label_);', 1.0205817315870046e-05], ['`scope', 1.0205817315870046e-05], ['(s->condition),', 1.0205817315870046e-05], ['s->condition->type);', 1.0205817315870046e-05], ['ifbody', 1.0205817315870046e-05], ['`for', 1.0205817315870046e-05], ['(level_loop);', 1.0205817315870046e-05], ['lcontinue', 1.0205817315870046e-05], ['this->push_continue_label', 1.0205817315870046e-05], ['this->pop_continue_label', 1.0205817315870046e-05], ['(lcontinue);', 1.0205817315870046e-05], ['(lbreak)', 1.0205817315870046e-05], ['`foreach', 1.0205817315870046e-05], ['(s->ident)', 1.0205817315870046e-05], ['this->func_->searchLabel', 1.0205817315870046e-05], ['jumps', 1.0205817315870046e-05], ['jumping', 1.0205817315870046e-05], ['this->check_goto', 1.0205817315870046e-05], ['this->define_label', 1.0205817315870046e-05], ['(s->statement)', 1.0205817315870046e-05], ['CaseStatement', 1.0205817315870046e-05], ['caselabel', 1.0205817315870046e-05], ['(s->hasVars)', 1.0205817315870046e-05], ['(s->exp);', 1.0205817315870046e-05], ['(statement);', 1.0205817315870046e-05], ['catches', 1.0205817315870046e-05], ['stmt_list;', 1.0205817315870046e-05], ['str);', 1.0205817315870046e-05], ['val));', 1.0205817315870046e-05], ['tinfo_kind', 1.0205817315870046e-05], ['(vtbl_ptr_type_node,', 1.0205817315870046e-05], ['field_type', 1.0205817315870046e-05], ['reading', 1.0205817315870046e-05], ['Type::typeinfoconst);', 1.0205817315870046e-05], ['interface;', 1.0205817315870046e-05], ['b->sym;', 1.0205817315870046e-05], ['(vtbl_interface_type_node,', 1.0205817315870046e-05], ['mirrored', 1.0205817315870046e-05], ['vtbldomain', 1.0205817315870046e-05], ['vtbltype', 1.0205817315870046e-05], ['(vtable_entry_type,', 1.0205817315870046e-05], ['vtbldomain);', 1.0205817315870046e-05], ['(vtbltype,', 1.0205817315870046e-05], ['d->tinfo->mutableOf', 1.0205817315870046e-05], ['m_init;', 1.0205817315870046e-05], ['ti->sym;', 1.0205817315870046e-05], ['(d_array_value', 1.0205817315870046e-05], ['(TypeVector', 1.0205817315870046e-05], ['*destructor;', 1.0205817315870046e-05], ['classInvariant;', 1.0205817315870046e-05], ['ClassFlags', 1.0205817315870046e-05], ['*deallocator;', 1.0205817315870046e-05], ['OffsetTypeInfo[]', 1.0205817315870046e-05], ['m_offTi;', 1.0205817315870046e-05], ['defaultConstructor;', 1.0205817315870046e-05], ['m_RTInfo;', 1.0205817315870046e-05], ['TypeInfoClassDeclaration::create', 1.0205817315870046e-05], ['common,', 1.0205817315870046e-05], ['(tid->csym)', 1.0205817315870046e-05], ['distinguished', 1.0205817315870046e-05], ['*init', 1.0205817315870046e-05], ['(t->vtinfo);', 1.0205817315870046e-05], ['MODshared', 1.0205817315870046e-05], ['0:', 1.0205817315870046e-05], ['fixup_anonymous_offset', 1.0205817315870046e-05], ['(fields);', 1.0205817315870046e-05], ['tuple.', 1.0205817315870046e-05], ['alignsize', 1.0205817315870046e-05], ['Fix', 1.0205817315870046e-05], ['TYPE_NEXT_VARIANT', 1.0205817315870046e-05], ['TypeVisitor', 1.0205817315870046e-05], ['erroneous', 1.0205817315870046e-05], ['8-bit', 1.0205817315870046e-05], ['double.', 1.0205817315870046e-05], ['(fnparams,', 1.0205817315870046e-05], ['t->ctype;', 1.0205817315870046e-05], ['building.', 1.0205817315870046e-05], ['char**', 1.0205817315870046e-05], ['this->t_;', 1.0205817315870046e-05], ['std::vector<Btyped_identifier>&);', 1.0205817315870046e-05], ['Btype*);', 1.0205817315870046e-05], ['known_valid,', 1.0205817315870046e-05], ['bimag,', 1.0205817315870046e-05], ['then_block,', 1.0205817315870046e-05], ['else_block,', 1.0205817315870046e-05], ['std::vector<std::vector<Bexpression*>', 1.0205817315870046e-05], ['bstat,', 1.0205817315870046e-05], ['undefer,', 1.0205817315870046e-05], ['libname,', 1.0205817315870046e-05], ['str)', 1.0205817315870046e-05], ['build_function_type_list(integer_type_node,', 1.0205817315870046e-05], ['const_ptr_type_node,', 1.0205817315870046e-05], ['build_function_type_list(double_type_node,', 1.0205817315870046e-05], ['build_function_type_list(long_double_type_node,', 1.0205817315870046e-05], ['__builtin_return_address', 1.0205817315870046e-05], ['recover,', 1.0205817315870046e-05], ['build_function_type_list(ptr_type_node,', 1.0205817315870046e-05], ['occur.', 1.0205817315870046e-05], ['layout_type(type);', 1.0205817315870046e-05], ['receiver,', 1.0205817315870046e-05], ['fields)', 1.0205817315870046e-05], ['permits', 1.0205817315870046e-05], ['VIEW_CONVERT_EXPR,', 1.0205817315870046e-05], ['equality.', 1.0205817315870046e-05], ['length_tree', 1.0205817315870046e-05], ['sizetype,', 1.0205817315870046e-05], ['(!name.empty())', 1.0205817315870046e-05], ['TYPE_NAME(ret)', 1.0205817315870046e-05], ['this->make_type(ret);', 1.0205817315870046e-05], ['placeholder->get_tree();', 1.0205817315870046e-05], ['typedef.', 1.0205817315870046e-05], ['copy;', 1.0205817315870046e-05], ['ft);', 1.0205817315870046e-05], ['make_node(RECORD_TYPE);', 1.0205817315870046e-05], ['occurs.', 1.0205817315870046e-05], ['build_decl(BUILTINS_LOCATION,', 1.0205817315870046e-05], ['(expr_tree', 1.0205817315870046e-05], ['get_identifier_from_string(name);', 1.0205817315870046e-05], ['DECL_INITIAL(decl)', 1.0205817315870046e-05], ['expr_tree;', 1.0205817315870046e-05], ['TREE_CONSTANT(ret)', 1.0205817315870046e-05], ['else_expr,', 1.0205817315870046e-05], ['cond_tree', 1.0205817315870046e-05], ['convert(computed_type,', 1.0205817315870046e-05], ['gofrontend', 1.0205817315870046e-05], ['right_tree', 1.0205817315870046e-05], ['OPERATOR_OROR', 1.0205817315870046e-05], ['vals.size());', 1.0205817315870046e-05], ['vals.begin();', 1.0205817315870046e-05], ['vals.end();', 1.0205817315870046e-05], ['DECL_CHAIN(field))', 1.0205817315870046e-05], ['append_to_statement_list(val,', 1.0205817315870046e-05], ['(is_constant)', 1.0205817315870046e-05], ['TREE_TYPE(init_tree)', 1.0205817315870046e-05], ['bfn,', 1.0205817315870046e-05], ['rhs_tree', 1.0205817315870046e-05], ['fntree', 1.0205817315870046e-05], ['stat_tree', 1.0205817315870046e-05], ['build2_loc(location.gcc_location(),', 1.0205817315870046e-05], ['(DECL_STRUCT_FUNCTION(decl)', 1.0205817315870046e-05], ['(std::vector<Bstatement*>::const_iterator', 1.0205817315870046e-05], ['statements.begin();', 1.0205817315870046e-05], ['statements.end();', 1.0205817315870046e-05], ['(tv', 1.0205817315870046e-05], ['std::vector<Bvariable*>&', 1.0205817315870046e-05], ['BLOCK_SUPERCONTEXT(block_tree)', 1.0205817315870046e-05], ['block_tree;', 1.0205817315870046e-05], ['(std::vector<Bvariable*>::const_iterator', 1.0205817315870046e-05], ['bblock->get_tree();', 1.0205817315870046e-05], ['gcc_assert(TREE_CODE(bind_tree)', 1.0205817315870046e-05], ['BIND_EXPR);', 1.0205817315870046e-05], ['gcc_assert(TREE_CODE(type_tree)', 1.0205817315870046e-05], ['type_tree;', 1.0205817315870046e-05], ['Bstatement**', 1.0205817315870046e-05], ['binit', 1.0205817315870046e-05], ['*pstatement', 1.0205817315870046e-05], ['recursive.', 1.0205817315870046e-05], ['resolve_unique_section(decl,', 1.0205817315870046e-05], ['func_tree', 1.0205817315870046e-05], ['label->get_tree();', 1.0205817315870046e-05], ['TREE_THIS_VOLATILE(decl)', 1.0205817315870046e-05], ["'9')", 1.0205817315870046e-05], ['blabel', 1.0205817315870046e-05], ['exists.', 1.0205817315870046e-05], ['go_preserve_from_gc(defs[i]);', 1.0205817315870046e-05], ['Backend*', 1.0205817315870046e-05], ['2011', 1.0205817315870046e-05], ['"go-linemap.h"', 1.0205817315870046e-05], ['Linemap', 1.0205817315870046e-05], ['Linemap*', 1.0205817315870046e-05], ['linemap_add(line_table,', 1.0205817315870046e-05], ['ss;', 1.0205817315870046e-05], ['"go-sha1.h"', 1.0205817315870046e-05], ['"ast-dump.h"', 1.0205817315870046e-05], ['"go-dump.h"', 1.0205817315870046e-05], ['dumps.', 1.0205817315870046e-05], ['Traverse(traverse_blocks', 1.0205817315870046e-05], ['"{"', 1.0205817315870046e-05], ['no->name();', 1.0205817315870046e-05], ['(Function::Results::const_iterator', 1.0205817315870046e-05], ['(out.fail())', 1.0205817315870046e-05], ['(uintptr_t)', 1.0205817315870046e-05], ['imported.', 1.0205817315870046e-05], ['"]";', 1.0205817315870046e-05], ['Forward_declaration_type*', 1.0205817315870046e-05], ['mt);', 1.0205817315870046e-05], ['(tag', 1.0205817315870046e-05], ['(t->classification())', 1.0205817315870046e-05], ['nt->named_object();', 1.0205817315870046e-05], ['nt->real_type();', 1.0205817315870046e-05], ['Type::TYPE_POINTER:', 1.0205817315870046e-05], ['Integer_type*', 1.0205817315870046e-05], ['"int"', 1.0205817315870046e-05], ['Type::TYPE_ARRAY:', 1.0205817315870046e-05], ['Type::TYPE_INTERFACE:', 1.0205817315870046e-05], ['st->fields();', 1.0205817315870046e-05], ['mt->key_type(),', 1.0205817315870046e-05], ['2016', 1.0205817315870046e-05], ['"go-optimize.h"', 1.0205817315870046e-05], ['dereferencing', 1.0205817315870046e-05], ['this->object();', 1.0205817315870046e-05], ["gc's", 1.0205817315870046e-05], ['no->func_value()->enclosing()', 1.0205817315870046e-05], ['"func', 1.0205817315870046e-05], ['this->expr();', 1.0205817315870046e-05], ['&ss);', 1.0205817315870046e-05], ['strip_packed_prefix(gogo,', 1.0205817315870046e-05], ['node_object', 1.0205817315870046e-05], ['(var->is_address_taken()', 1.0205817315870046e-05], ['var->is_non_escaping_address_taken());', 1.0205817315870046e-05], ['ESCAPE_MASK))', 1.0205817315870046e-05], ['Node::ESCAPE_HEAP:', 1.0205817315870046e-05], ['Node::ESCAPE_NONE:', 1.0205817315870046e-05], ['(this->state_', 1.0205817315870046e-05], ['(e->classification())', 1.0205817315870046e-05], ['Expression::EXPRESSION_CALL:', 1.0205817315870046e-05], ['Expression::EXPRESSION_ALLOCATION:', 1.0205817315870046e-05], ['this->expr()->var_expression()', 1.0205817315870046e-05], ['this->expr()->var_expression()->named_object();', 1.0205817315870046e-05], ['&size);', 1.0205817315870046e-05], ['call->args()->begin();', 1.0205817315870046e-05], ['Temporary_reference_expression*', 1.0205817315870046e-05], ['fnname', 1.0205817315870046e-05], ['rt', 1.0205817315870046e-05], ['fnname;', 1.0205817315870046e-05], ['n->state(this,', 1.0205817315870046e-05], ['Variable(p->type(),', 1.0205817315870046e-05], ['retvals', 1.0205817315870046e-05], ['tag.', 1.0205817315870046e-05], ['(saw_errors())', 1.0205817315870046e-05], ['"debug-escape-hash', 1.0205817315870046e-05], ['p->first;', 1.0205817315870046e-05], ['dsts.begin();', 1.0205817315870046e-05], ['dsts.end();', 1.0205817315870046e-05], ['NULL)))', 1.0205817315870046e-05], ['Node::ESCAPE_NONE)', 1.0205817315870046e-05], ['Traverse(traverse_functions', 1.0205817315870046e-05], ['discovery', 1.0205817315870046e-05], ['context_;', 1.0205817315870046e-05], ['s->traverse_contents(this);', 1.0205817315870046e-05], ['go_inform(s->location(),', 1.0205817315870046e-05], ['assn', 1.0205817315870046e-05], ['call->args()->end();', 1.0205817315870046e-05], ['Node::make_node(*p);', 1.0205817315870046e-05], ['(gogo->debug_escape_level()', 1.0205817315870046e-05], ['"runtime")', 1.0205817315870046e-05], ['((n->encoding()', 1.0205817315870046e-05], ['int(Node::ESCAPE_HEAP)', 1.0205817315870046e-05], ['go_inform((*pexpr)->location(),', 1.0205817315870046e-05], ['call->builtin_call_expression();', 1.0205817315870046e-05], ['appendee', 1.0205817315870046e-05], ['tce->expr()->type();', 1.0205817315870046e-05], ['tce->type();', 1.0205817315870046e-05], ['((ft->is_string_type()', 1.0205817315870046e-05], ['tt->is_slice_type())', 1.0205817315870046e-05], ['(ft->is_slice_type()', 1.0205817315870046e-05], ['tt->is_string_type())', 1.0205817315870046e-05], ['(ft->integer_type()', 1.0205817315870046e-05], ['tt->is_string_type()))', 1.0205817315870046e-05], ['string([]byte),', 1.0205817315870046e-05], ['string([]rune),', 1.0205817315870046e-05], ['[]byte(string),', 1.0205817315870046e-05], ['[]rune(string),', 1.0205817315870046e-05], ['string(rune)', 1.0205817315870046e-05], ['vals->begin();', 1.0205817315870046e-05], ['vals->end();', 1.0205817315870046e-05], ['Node::make_node(*p));', 1.0205817315870046e-05], ['struct_node', 1.0205817315870046e-05], ['Struct_construction_expression*', 1.0205817315870046e-05], ['sce', 1.0205817315870046e-05], ['Expression::EXPRESSION_ARRAY_INDEX:', 1.0205817315870046e-05], ['aie', 1.0205817315870046e-05], ['(aie->end()', 1.0205817315870046e-05], ['Expression::EXPRESSION_FIELD_REFERENCE:', 1.0205817315870046e-05], ['call_node', 1.0205817315870046e-05], ['arg_nodes.begin();', 1.0205817315870046e-05], ['untracked",', 1.0205817315870046e-05], ['(*p)->ast_format(gogo).c_str());', 1.0205817315870046e-05], ['call_node->ast_format(gogo).c_str());', 1.0205817315870046e-05], ['rcvr_node', 1.0205817315870046e-05], ['(fntype->receiver()->type()->points_to()', 1.0205817315870046e-05], ['til->end();', 1.0205817315870046e-05], ['param_no', 1.0205817315870046e-05], ['go_assert(param_no', 1.0205817315870046e-05], ['param_node', 1.0205817315870046e-05], ['Node::make_node(param_no);', 1.0205817315870046e-05], ['this->assign_from_note(note,', 1.0205817315870046e-05], ['call_state->retvals,', 1.0205817315870046e-05], ['(enc', 1.0205817315870046e-05], ['(dst->expr()', 1.0205817315870046e-05], ['Expression::EXPRESSION_VAR_REFERENCE:', 1.0205817315870046e-05], ['e->array_index_expression();', 1.0205817315870046e-05], ['(e->field_reference_expression()', 1.0205817315870046e-05], ['here;', 1.0205817315870046e-05], ['(src->expr()->classification())', 1.0205817315870046e-05], ['Expression::EXPRESSION_BOOLEAN:', 1.0205817315870046e-05], ['Expression::EXPRESSION_STRING:', 1.0205817315870046e-05], ['Expression::EXPRESSION_INTEGER:', 1.0205817315870046e-05], ['Expression::EXPRESSION_FLOAT:', 1.0205817315870046e-05], ['Expression::EXPRESSION_COMPLEX:', 1.0205817315870046e-05], ['Expression::EXPRESSION_NIL:', 1.0205817315870046e-05], ['Expression::EXPRESSION_IOTA:', 1.0205817315870046e-05], ['scalars.', 1.0205817315870046e-05], ['sink.', 1.0205817315870046e-05], ['dst_state', 1.0205817315870046e-05], ['src->state(this->context_,', 1.0205817315870046e-05], ['//go:noescape', 1.0205817315870046e-05], ['address-of', 1.0205817315870046e-05], ['root.', 1.0205817315870046e-05], ['level.value(),', 1.0205817315870046e-05], ['extra_loop_depth);', 1.0205817315870046e-05], ['src_no', 1.0205817315870046e-05], ['(src_is_param', 1.0205817315870046e-05], ['param:', 1.0205817315870046e-05], ['(std::set<Node*>::const_iterator', 1.0205817315870046e-05], ['*p,', 1.0205817315870046e-05], ['src_leaks', 1.0205817315870046e-05], ['mod_loop_depth);', 1.0205817315870046e-05], ['underlying;', 1.0205817315870046e-05], ['(src_leaks)', 1.0205817315870046e-05], ['this->flood(level.decrease(),', 1.0205817315870046e-05], ['src_leaks)', 1.0205817315870046e-05], ['e->array_index_expression()->array();', 1.0205817315870046e-05], ['Function_declaration*', 1.0205817315870046e-05], ['(p->type()->has_pointer())', 1.0205817315870046e-05], ['fntype->add_parameter_note(i,', 1.0205817315870046e-05], ['Node*>::iterator', 1.0205817315870046e-05], ['json::value.', 1.0205817315870046e-05], ['key/value', 1.0205817315870046e-05], ['json::value,', 1.0205817315870046e-05], ['m_map.begin', 1.0205817315870046e-05], ['++it)', 1.0205817315870046e-05], ['*ptr;', 1.0205817315870046e-05], ['"true");', 1.0205817315870046e-05], ['(arr,', 1.0205817315870046e-05], ['(number', 1.0205817315870046e-05], ['"export.h"', 1.0205817315870046e-05], ['Current', 1.0205817315870046e-05], ["'v',", 1.0205817315870046e-05], ["';',", 1.0205817315870046e-05], ["'\\n'", 1.0205817315870046e-05], ['operator()(const', 1.0205817315870046e-05], ['(Type::COMPARE_ERRORS', 1.0205817315870046e-05], ['Named_object', 1.0205817315870046e-05], ['locally', 1.0205817315870046e-05], ['imports,', 1.0205817315870046e-05], ['import_init_fn,', 1.0205817315870046e-05], ['Import_init_set&', 1.0205817315870046e-05], ['imported_init_fns,', 1.0205817315870046e-05], ['go_assert(!pkgpath.empty());', 1.0205817315870046e-05], ['Package*)*', 1.0205817315870046e-05], ['(type->is_void_type())', 1.0205817315870046e-05], ['Type::TYPE_INTERFACE)', 1.0205817315870046e-05], ['type->interface_type();', 1.0205817315870046e-05], ['interface_type', 1.0205817315870046e-05], ['(receiver', 1.0205817315870046e-05], ['nt->local_methods();', 1.0205817315870046e-05], ['++pm)', 1.0205817315870046e-05], ['seen.', 1.0205817315870046e-05], ['&find);', 1.0205817315870046e-05], ['type->forwarded();', 1.0205817315870046e-05], ['Package*>::const_iterator', 1.0205817315870046e-05], ['Package*>', 1.0205817315870046e-05], ['imported_init_fns.begin();', 1.0205817315870046e-05], ['imported_init_fns.end();', 1.0205817315870046e-05], ['init_idx.end());', 1.0205817315870046e-05], ['(std::set<std::string>::const_iterator', 1.0205817315870046e-05], ['ii->precursors().begin();', 1.0205817315870046e-05], ['ii->precursors().end();', 1.0205817315870046e-05], ['++pci)', 1.0205817315870046e-05], ['sink);', 1.0205817315870046e-05], ['std::vector<std::string>', 1.0205817315870046e-05], ['/|', 1.0205817315870046e-05], ['(nt->is_alias())', 1.0205817315870046e-05], ['efb->write_c_string(buf);', 1.0205817315870046e-05], ['rval', 1.0205817315870046e-05], ['"go-encode-id.h"', 1.0205817315870046e-05], ['location_(location)', 1.0205817315870046e-05], ['this->unused_value_error();', 1.0205817315870046e-05], ['rhs_type', 1.0205817315870046e-05], ['rhs->type();', 1.0205817315870046e-05], ['non-interface', 1.0205817315870046e-05], ['Expression::make_interface_value(lhs_type,', 1.0205817315870046e-05], ['already.', 1.0205817315870046e-05], ['rhs_struct_type', 1.0205817315870046e-05], ['first_field,', 1.0205817315870046e-05], ['mtable', 1.0205817315870046e-05], ['assertion', 1.0205817315870046e-05], ['lhs_type_expr,', 1.0205817315870046e-05], ['INTERFACE_INFO_OBJECT,', 1.0205817315870046e-05], ['gogo->backend()->integer_constant_expression(btype,', 1.0205817315870046e-05], ['mpc_clear(cval);', 1.0205817315870046e-05], ['"int".', 1.0205817315870046e-05], ['val_type_size', 1.0205817315870046e-05], ['ask', 1.0205817315870046e-05], ['escapes)', 1.0205817315870046e-05], ['this->statement_->type();', 1.0205817315870046e-05], ['this->expr_->determine_type(context);', 1.0205817315870046e-05], ['var_ref,', 1.0205817315870046e-05], ['Set_and_use_temporary_expression*', 1.0205817315870046e-05], ['_.', 1.0205817315870046e-05], ['this->bvar_', 1.0205817315870046e-05], ['gogo->backend()->compound_expression(decl,', 1.0205817315870046e-05], ['(this->closure_', 1.0205817315870046e-05], ['no->func_value()->type();', 1.0205817315870046e-05], ['no->func_declaration_value()->type();', 1.0205817315870046e-05], ['Call_expression.', 1.0205817315870046e-05], ['(fntype->is_builtin())', 1.0205817315870046e-05], ['%qs;', 1.0205817315870046e-05], ['closed-over', 1.0205817315870046e-05], ['is_descriptor', 1.0205817315870046e-05], ['"runtime"', 1.0205817315870046e-05], ['asm_name(go_selectively_encode_id(var_name));', 1.0205817315870046e-05], ['is_hidden', 1.0205817315870046e-05], ['function_;', 1.0205817315870046e-05], ['real;', 1.0205817315870046e-05], ['(this->is_composite_literal_key_)', 1.0205817315870046e-05], ['(!this->no_error_message_)', 1.0205817315870046e-05], ['"reference', 1.0205817315870046e-05], ['do_import(Import_expression*,', 1.0205817315870046e-05], ['do_export(Export_function_body*', 1.0205817315870046e-05], ['EXPORT_FORMAT_V3)', 1.0205817315870046e-05], ['\'"\')', 1.0205817315870046e-05], ['String_info', 1.0205817315870046e-05], ['string_info,', 1.0205817315870046e-05], ['do_issue_nil_check()', 1.0205817315870046e-05], ['mpz_t*', 1.0205817315870046e-05], ['do_export(Export_function_body*)', 1.0205817315870046e-05], ['Type::lookup_integer_type("int32");', 1.0205817315870046e-05], ['this->type_->is_error_type()))', 1.0205817315870046e-05], ['Type::lookup_integer_type("int64");', 1.0205817315870046e-05], ['Expression::backend_numeric_constant_expression(context,', 1.0205817315870046e-05], ['&nc);', 1.0205817315870046e-05], ['!this->type_->is_abstract()', 1.0205817315870046e-05], ['efb->type_context())', 1.0205817315870046e-05], ['(added_type)', 1.0205817315870046e-05], ['num.c_str());', 1.0205817315870046e-05], ['imag_str', 1.0205817315870046e-05], ['Expression::make_integer_z(&zval,', 1.0205817315870046e-05], ['ul', 1.0205817315870046e-05], ['uv', 1.0205817315870046e-05], ['set_mpz_from_int64(&zval,', 1.0205817315870046e-05], ['(!nc.set_type(this->type_,', 1.0205817315870046e-05], ['complex128', 1.0205817315870046e-05], ['found()', 1.0205817315870046e-05], ['this->found_;', 1.0205817315870046e-05], ['found_;', 1.0205817315870046e-05], ['do_lower(Gogo*,', 1.0205817315870046e-05], ['iota_value)', 1.0205817315870046e-05], ['this->no_)', 1.0205817315870046e-05], ['this->found_', 1.0205817315870046e-05], ['Parser_expression', 1.0205817315870046e-05], ['(Expression::traverse(&this->expr_,', 1.0205817315870046e-05], ['(type->is_string_type())', 1.0205817315870046e-05], ['negative.', 1.0205817315870046e-05], ['adv', 1.0205817315870046e-05], ['!this->expr_->is_variable())', 1.0205817315870046e-05], ['type->is_boolean_type()', 1.0205817315870046e-05], ['conversion->get_backend(context);', 1.0205817315870046e-05], ['imp->require_c_string(",', 1.0205817315870046e-05], ['(t->channel_type()', 1.0205817315870046e-05], ['this->escapes_', 1.0205817315870046e-05], ['EXPRESSION_UNARY)', 1.0205817315870046e-05], ['OPERATOR_PLUS', 1.0205817315870046e-05], ['this->expr_->type()->is_error_type())', 1.0205817315870046e-05], ['go_assert(this->expr_->type()->points_to()', 1.0205817315870046e-05], ['Indirecting', 1.0205817315870046e-05], ['no->is_variable()', 1.0205817315870046e-05], ['issued_error)', 1.0205817315870046e-05], ['uval;', 1.0205817315870046e-05], ['uval,', 1.0205817315870046e-05], ['uval);', 1.0205817315870046e-05], ['this->location(),', 1.0205817315870046e-05], ['Type::make_pointer_type(this->expr_->type());', 1.0205817315870046e-05], ['subtype', 1.0205817315870046e-05], ['(points_to', 1.0205817315870046e-05], ['points_to;', 1.0205817315870046e-05], ['bexpr;', 1.0205817315870046e-05], ['copy_to_heap', 1.0205817315870046e-05], ['conditional.', 1.0205817315870046e-05], ['gogo->runtime_error(RUNTIME_ERROR_NIL_DEREFERENCE,', 1.0205817315870046e-05], ['deref', 1.0205817315870046e-05], ['Type**', 1.0205817315870046e-05], ['OPERATOR_RSHIFT)', 1.0205817315870046e-05], ['(right_type->integer_type()', 1.0205817315870046e-05], ['&type))', 1.0205817315870046e-05], ['&cmp);', 1.0205817315870046e-05], ['nc);', 1.0205817315870046e-05], ['NC,', 1.0205817315870046e-05], ['(mpz_sizeinbase(val,', 1.0205817315870046e-05], ['OPERATOR_NOTEQ', 1.0205817315870046e-05], ['OPERATOR_LT', 1.0205817315870046e-05], ['OPERATOR_LE', 1.0205817315870046e-05], ['OPERATOR_GT', 1.0205817315870046e-05], ['&left_nc,', 1.0205817315870046e-05], ['&right_nc,', 1.0205817315870046e-05], ['this->right_->type(),', 1.0205817315870046e-05], ['++pf,', 1.0205817315870046e-05], ['Expression::make_unary(OPERATOR_NOT,', 1.0205817315870046e-05], ['&hash_fn,', 1.0205817315870046e-05], ['&equal_fn);', 1.0205817315870046e-05], ['Expression::make_set_and_use_temporary(temp,', 1.0205817315870046e-05], ['TYPE_INFO_SIZE);', 1.0205817315870046e-05], ['temp;', 1.0205817315870046e-05], ['is_idiv_op', 1.0205817315870046e-05], ['OPERATOR_DIV', 1.0205817315870046e-05], ['(is_shift_op)', 1.0205817315870046e-05], ['tright;', 1.0205817315870046e-05], ['(subcontext.type', 1.0205817315870046e-05], ['otype,', 1.0205817315870046e-05], ['gogo->backend()->integer_constant_expression(right_btype,', 1.0205817315870046e-05], ['zero_expr', 1.0205817315870046e-05], ['imp->require_c_string("(");', 1.0205817315870046e-05], ['right_type->interface_type()', 1.0205817315870046e-05], ['std::swap(left_type,', 1.0205817315870046e-05], ['right_type);', 1.0205817315870046e-05], ['std::swap(left,', 1.0205817315870046e-05], ['pointer_arg', 1.0205817315870046e-05], ['compare_function', 1.0205817315870046e-05], ['this->exprs_->front()->type();', 1.0205817315870046e-05], ['++pe;', 1.0205817315870046e-05], ['expression");', 1.0205817315870046e-05], ['(this->expr_type_', 1.0205817315870046e-05], ['go_assert(ins.first->second', 1.0205817315870046e-05], ['Named_object::make_erroneous_name(gogo->thunk_name());', 1.0205817315870046e-05], ['vt', 1.0205817315870046e-05], ['vt,', 1.0205817315870046e-05], ['Type::make_pointer_type(st);', 1.0205817315870046e-05], ['new_fntype,', 1.0205817315870046e-05], ['orig_params', 1.0205817315870046e-05], ['orig_fntype->parameters();', 1.0205817315870046e-05], ['(orig_params', 1.0205817315870046e-05], ['new_params', 1.0205817315870046e-05], ['new_params->begin();', 1.0205817315870046e-05], ['new_params->end();', 1.0205817315870046e-05], ['p_no', 1.0205817315870046e-05], ['go_assert(p_no', 1.0205817315870046e-05], ['p_no->is_variable()', 1.0205817315870046e-05], ['p_no->var_value()->is_parameter());', 1.0205817315870046e-05], ['args->push_back(Expression::make_var_reference(p_no,', 1.0205817315870046e-05], ['gogo->lower_block(new_no,', 1.0205817315870046e-05], ['new_no;', 1.0205817315870046e-05], ['phase,', 1.0205817315870046e-05], ['&ref);', 1.0205817315870046e-05], ['new_args', 1.0205817315870046e-05], ['(!(*pa)->is_variable()', 1.0205817315870046e-05], ['*parg;', 1.0205817315870046e-05], ['go:notinheap', 1.0205817315870046e-05], ['++parg;', 1.0205817315870046e-05], ['args->end())', 1.0205817315870046e-05], ['type_arg', 1.0205817315870046e-05], ['type_loc);', 1.0205817315870046e-05], ['append(s1,', 1.0205817315870046e-05], ['s1tmp', 1.0205817315870046e-05], ['l1tmp', 1.0205817315870046e-05], ['s2tmp', 1.0205817315870046e-05], ['(this->is_varargs())', 1.0205817315870046e-05], ['ntmp', 1.0205817315870046e-05], ['Expression::make_binary(OPERATOR_PLUS,', 1.0205817315870046e-05], ['Expression::make_temporary_reference(ntmp,', 1.0205817315870046e-05], ['unsafe_ptr_type', 1.0205817315870046e-05], ['ref2', 1.0205817315870046e-05], ['ref2,', 1.0205817315870046e-05], ['inserter->insert(assign);', 1.0205817315870046e-05], ['Block(enclosing,', 1.0205817315870046e-05], ['Expression::make_integer_ul(i,', 1.0205817315870046e-05], ['*small', 1.0205817315870046e-05], ['ebits', 1.0205817315870046e-05], ['arg_type->is_abstract())', 1.0205817315870046e-05], ['channel', 1.0205817315870046e-05], ['arg_type->points_to()->array_type()', 1.0205817315870046e-05], ['!arg_type->points_to()->is_slice_type())', 1.0205817315870046e-05], ['BUILTIN_LEN', 1.0205817315870046e-05], ['sval;', 1.0205817315870046e-05], ['&ret);', 1.0205817315870046e-05], ['inc;', 1.0205817315870046e-05], ['Type::make_empty_interface_type(Linemap::predeclared_location());', 1.0205817315870046e-05], ['(t->is_abstract())', 1.0205817315870046e-05], ['args->back()->type();', 1.0205817315870046e-05], ['trailing_arg_types', 1.0205817315870046e-05], ['(*pa)->determine_type(&subcontext);', 1.0205817315870046e-05], ['arg_type->channel_type()', 1.0205817315870046e-05], ['go_error_at(args->front()->location(),', 1.0205817315870046e-05], ['go_error_at(args->back()->location(),', 1.0205817315870046e-05], ['(*pa)->type(),', 1.0205817315870046e-05], ['*empty', 1.0205817315870046e-05], ['nc.to_unsigned_long(&val)', 1.0205817315870046e-05], ['at->element_type();', 1.0205817315870046e-05], ['package-scope', 1.0205817315870046e-05], ['Expression_list;', 1.0205817315870046e-05], ['buf[20];', 1.0205817315870046e-05], ['this->fn_->func_expression();', 1.0205817315870046e-05], ['push_empty_arg', 1.0205817315870046e-05], ['go_assert(pp', 1.0205817315870046e-05], ['(this->call_temp_', 1.0205817315870046e-05], ['(first)', 1.0205817315870046e-05], ['parameters->end())', 1.0205817315870046e-05], ['Expression::make_temporary_reference(this->call_temp_,', 1.0205817315870046e-05], ['bclosure,', 1.0205817315870046e-05], ['bref', 1.0205817315870046e-05], ['(ce->issue_error())', 1.0205817315870046e-05], ['this->start_;', 1.0205817315870046e-05], ['this->end_;', 1.0205817315870046e-05], ['this->array_->type()->array_type();', 1.0205817315870046e-05], ['!this->end_->is_nil_expression()', 1.0205817315870046e-05], ['(array_type', 1.0205817315870046e-05], ['(array_type->length()', 1.0205817315870046e-05], ['(lval_valid', 1.0205817315870046e-05], ['(ival_valid', 1.0205817315870046e-05], ['go_error_at(this->cap_->location(),', 1.0205817315870046e-05], ['this->array_,', 1.0205817315870046e-05], ['sval.length())', 1.0205817315870046e-05], ['key_type', 1.0205817315870046e-05], ['mt->key_type();', 1.0205817315870046e-05], ['wind', 1.0205817315870046e-05], ['twice', 1.0205817315870046e-05], ['(this->expr_->is_error_expression()', 1.0205817315870046e-05], ['type->points_to();', 1.0205817315870046e-05], ['"method', 1.0205817315870046e-05], ['gogo->backend()->expression_statement(bfunction,', 1.0205817315870046e-05], ['this->name_,', 1.0205817315870046e-05], ['&is_ambiguous);', 1.0205817315870046e-05], ['imethod', 1.0205817315870046e-05], ['Gogo::message_name(name).c_str(),', 1.0205817315870046e-05], ['p->location()));', 1.0205817315870046e-05], ['results;', 1.0205817315870046e-05], ['gogo->finish_function(location);', 1.0205817315870046e-05], ['(this->allocate_on_stack_)', 1.0205817315870046e-05], ['gogo->backend()->temporary_variable(fndecl,', 1.0205817315870046e-05], ['Final', 1.0205817315870046e-05], ['determination.', 1.0205817315870046e-05], ['(pv', 1.0205817315870046e-05], ['this->vals()->end())', 1.0205817315870046e-05], ['"struct', 1.0205817315870046e-05], ['this->vals()->copy()),', 1.0205817315870046e-05], ['init.push_back(gogo->backend()->zero_expression(fbtype));', 1.0205817315870046e-05], ['(*pv)->export_expression(efb);', 1.0205817315870046e-05], ['Struct_construction_expression(type,', 1.0205817315870046e-05], ['indexes;', 1.0205817315870046e-05], ['this->indexes_->begin();', 1.0205817315870046e-05], ['this->indexes(),', 1.0205817315870046e-05], ['lenval', 1.0205817315870046e-05], ['vals->size();', 1.0205817315870046e-05], ['(this->array_val_', 1.0205817315870046e-05], ['(this->slice_storage_', 1.0205817315870046e-05], ['this->vals_', 1.0205817315870046e-05], ['names,', 1.0205817315870046e-05], ['this->vals_->end())', 1.0205817315870046e-05], ['this->vals_->end());', 1.0205817315870046e-05], ['external_expr', 1.0205817315870046e-05], ['bad_key', 1.0205817315870046e-05], ['literal");', 1.0205817315870046e-05], ['keys.', 1.0205817315870046e-05], ['static_cast<const', 1.0205817315870046e-05], ['this->type_->copy_expressions(),', 1.0205817315870046e-05], ['gogo->backend()->var_expression(space_temp,', 1.0205817315870046e-05], ['this->channel_->type()->channel_type();', 1.0205817315870046e-05], ['(channel_type', 1.0205817315870046e-05], ['Type::make_type_descriptor_ptr_type();', 1.0205817315870046e-05], ['Type_info', 1.0205817315870046e-05], ['Slice_info', 1.0205817315870046e-05], ['slice_info,', 1.0205817315870046e-05], ['Interface_info', 1.0205817315870046e-05], ['iface_info,', 1.0205817315870046e-05], ['(params', 1.0205817315870046e-05], ['is_pointer,', 1.0205817315870046e-05], ['interface_methods->begin();', 1.0205817315870046e-05], ['interface_methods->end();', 1.0205817315870046e-05], ['p->location());', 1.0205817315870046e-05], ['is_public', 1.0205817315870046e-05], ['then,', 1.0205817315870046e-05], ["'(')", 1.0205817315870046e-05], ['EXPORT_FORMAT_V3', 1.0205817315870046e-05], ['(a.classification_)', 1.0205817315870046e-05], ['mpfr_init_set(this->u_.float_val,', 1.0205817315870046e-05], ['mpc_init2(this->u_.complex_val,', 1.0205817315870046e-05], ['bits))', 1.0205817315870046e-05], ['mpz_init_set(*val,', 1.0205817315870046e-05], ['mpfr_init_set(*val,', 1.0205817315870046e-05], ['Numeric_constant::To_unsigned_long', 1.0205817315870046e-05], ['truncated', 1.0205817315870046e-05], ['max_exp;', 1.0205817315870046e-05], ['expand_message(const', 1.0205817315870046e-05], ['#pragma', 1.0205817315870046e-05], ['name_(name),', 1.0205817315870046e-05], ['translate', 1.0205817315870046e-05], ['pend', 1.0205817315870046e-05], ['(strncmp(p,', 1.0205817315870046e-05], ['p+3;', 1.0205817315870046e-05], ['(strlen(digits)', 1.0205817315870046e-05], ['hex_digits_to_unicode_codepoint(digits,', 1.0205817315870046e-05], ['Lex::append_char(rune,', 1.0205817315870046e-05], ['&ret,', 1.0205817315870046e-05], ['%m",', 1.0205817315870046e-05], ['go:linkname', 1.0205817315870046e-05], ['results->push_back(Typed_identifier("",', 1.0205817315870046e-05], ['-fgo-pkgpath', 1.0205817315870046e-05], ['this->pkgpath_', 1.0205817315870046e-05], ['this->prefix_', 1.0205817315870046e-05], ['firstP', 1.0205817315870046e-05], ['this->package_->package_name();', 1.0205817315870046e-05], ['package_name)', 1.0205817315870046e-05], ['"init")', 1.0205817315870046e-05], ['ln', 1.0205817315870046e-05], ['package->package_name();', 1.0205817315870046e-05], ['"_")', 1.0205817315870046e-05], ['package));', 1.0205817315870046e-05], ['init_stmts,', 1.0205817315870046e-05], ['ptrdata', 1.0205817315870046e-05], ["variable's", 1.0205817315870046e-05], ['gcdata', 1.0205817315870046e-05], ['initfn', 1.0205817315870046e-05], ['Find_vars', 1.0205817315870046e-05], ['std::pair<Seen_objects::iterator,', 1.0205817315870046e-05], ['Variables', 1.0205817315870046e-05], ['(Var_inits::iterator', 1.0205817315870046e-05], ['++pvar)', 1.0205817315870046e-05], ['"initialization', 1.0205817315870046e-05], ['init_bfn', 1.0205817315870046e-05], ['var->location());', 1.0205817315870046e-05], ['(init_fndecl', 1.0205817315870046e-05], ['this->backend()->expression_statement(init_bfn,', 1.0205817315870046e-05], ['(Gogo::unpack_hidden_name(no->name())', 1.0205817315870046e-05], ['parsing', 1.0205817315870046e-05], ['Block(NULL,', 1.0205817315870046e-05], ['(!type->is_method())', 1.0205817315870046e-05], ['type->receiver()->type();', 1.0205817315870046e-05], ['(rtype->classification()', 1.0205817315870046e-05], ['Type::TYPE_POINTER)', 1.0205817315870046e-05], ['rtype->points_to();', 1.0205817315870046e-05], ['(rtype->is_error_type())', 1.0205817315870046e-05], ['"may', 1.0205817315870046e-05], ['(rtype->forward_declaration_type()', 1.0205817315870046e-05], ['this->functions_.back().function;', 1.0205817315870046e-05], ['declared.', 1.0205817315870046e-05], ['defined",', 1.0205817315870046e-05], ['++pb)', 1.0205817315870046e-05], ['"imported', 1.0205817315870046e-05], ['used:', 1.0205817315870046e-05], ['this->traverse(&traverse);', 1.0205817315870046e-05], ['lower_parse_tree(this,', 1.0205817315870046e-05], ['Finalize_methods', 1.0205817315870046e-05], ['(p->second->is_function_declaration())', 1.0205817315870046e-05], ['((*p)->is_variable())', 1.0205817315870046e-05], ['Check_types_traverse', 1.0205817315870046e-05], ['go_error_at(constant->location(),', 1.0205817315870046e-05], ['constant->set_error();', 1.0205817315870046e-05], ['Find_eval_ordering', 1.0205817315870046e-05], ['Statement*)', 1.0205817315870046e-05], ['Binary_expression*', 1.0205817315870046e-05], ['Order_eval', 1.0205817315870046e-05], ['orig_init', 1.0205817315870046e-05], ['(no->is_result_variable())', 1.0205817315870046e-05], ['Find_shortcut', 1.0205817315870046e-05], ['Shortcuts', 1.0205817315870046e-05], ['pshortcut);', 1.0205817315870046e-05], ['flatten(this,', 1.0205817315870046e-05], ['(orig_fntype->is_method())', 1.0205817315870046e-05], ['can_recover', 1.0205817315870046e-05], ['Named_object::make_function_declaration(name,', 1.0205817315870046e-05], ['results->empty())', 1.0205817315870046e-05], ['Inline_within_budget', 1.0205817315870046e-05], ['Named_object*>::const_iterator', 1.0205817315870046e-05], ['enclosing_(enclosing),', 1.0205817315870046e-05], ['++index)', 1.0205817315870046e-05], ['(this->closure_var_', 1.0205817315870046e-05], ['Label(label_name);', 1.0205817315870046e-05], ['traverse->traverse_mask();', 1.0205817315870046e-05], ['(Traverse::traverse_variables', 1.0205817315870046e-05], ['Traverse::traverse_constants', 1.0205817315870046e-05], ['Traverse::traverse_expressions', 1.0205817315870046e-05], ['(this->defer_stack_', 1.0205817315870046e-05], ['exp->write_string(name);', 1.0205817315870046e-05], ['(");', 1.0205817315870046e-05], ['(result_vars', 1.0205817315870046e-05], ['exp->write_c_string("\\n");', 1.0205817315870046e-05], ['pname,', 1.0205817315870046e-05], ['imp->read_name();', 1.0205817315870046e-05], ['imp->read_escape();', 1.0205817315870046e-05], ['Typed_identifier(name,', 1.0205817315870046e-05], ['rtype,', 1.0205817315870046e-05], ['*pname', 1.0205817315870046e-05], ['imp->require_semicolon_if_old_version();', 1.0205817315870046e-05], ['imp->require_c_string("\\n");', 1.0205817315870046e-05], ['is_inlinable', 1.0205817315870046e-05], ['elsewhere,', 1.0205817315870046e-05], ['this->fndecl_', 1.0205817315870046e-05], ['parm_bvar', 1.0205817315870046e-05], ['vars.push_back(bvar);', 1.0205817315870046e-05], ['parm_ref', 1.0205817315870046e-05], ['end_loc,', 1.0205817315870046e-05], ['this->defer_stack(end_loc));', 1.0205817315870046e-05], ['call->get_backend(&context);', 1.0205817315870046e-05], ['this->statements_.size());', 1.0205817315870046e-05], ['(Traverse::traverse_expressions', 1.0205817315870046e-05], ['this->bindings_->begin_definitions();', 1.0205817315870046e-05], ['this->bindings_->end_definitions();', 1.0205817315870046e-05], ['Named_object::NAMED_OBJECT_RESULT_VAR:', 1.0205817315870046e-05], ['Named_object::NAMED_OBJECT_UNKNOWN:', 1.0205817315870046e-05], ['Named_object::NAMED_OBJECT_ERRONEOUS:', 1.0205817315870046e-05], ['Named_object::NAMED_OBJECT_SINK:', 1.0205817315870046e-05], ['(body[off', 1.0205817315870046e-05], ['lineno_pos', 1.0205817315870046e-05], ['"goto', 1.0205817315870046e-05], ['(this->preinit_', 1.0205817315870046e-05], ['(this->is_global_)', 1.0205817315870046e-05], ['this->init_,', 1.0205817315870046e-05], ['(this->is_type_switch_var_', 1.0205817315870046e-05], ['this->type_->is_nil_constant_as_type())', 1.0205817315870046e-05], ['report_error)', 1.0205817315870046e-05], ['init->determine_type_no_context();', 1.0205817315870046e-05], ['decl_init', 1.0205817315870046e-05], ['*ptype', 1.0205817315870046e-05], ['backend->error_variable();', 1.0205817315870046e-05], ['is_parameter', 1.0205817315870046e-05], ['Type_declaration*', 1.0205817315870046e-05], ['go_assert(this->classification_', 1.0205817315870046e-05], ['NAMED_OBJECT_ERRONEOUS:', 1.0205817315870046e-05], ['NAMED_OBJECT_CONST:', 1.0205817315870046e-05], ['NAMED_OBJECT_TYPE:', 1.0205817315870046e-05], ['NAMED_OBJECT_TYPE_DECLARATION:', 1.0205817315870046e-05], ['NAMED_OBJECT_VAR:', 1.0205817315870046e-05], ['NAMED_OBJECT_RESULT_VAR:', 1.0205817315870046e-05], ['NAMED_OBJECT_SINK:', 1.0205817315870046e-05], ['NAMED_OBJECT_FUNC:', 1.0205817315870046e-05], ['this->bindings_.end())', 1.0205817315870046e-05], ['Aliases::const_iterator', 1.0205817315870046e-05], ['1985', 6.803878210580031e-06], ['programming', 6.803878210580031e-06], ['Standard', 6.803878210580031e-06], ['Computer', 6.803878210580031e-06], ['University', 6.803878210580031e-06], ['source.', 6.803878210580031e-06], ['facilities', 6.803878210580031e-06], ['Rather', 6.803878210580031e-06], ['style', 6.803878210580031e-06], ['languages.', 6.803878210580031e-06], ['meaningful', 6.803878210580031e-06], ['B1', 6.803878210580031e-06], ['RadixD2', 6.803878210580031e-06], ['K', 6.803878210580031e-06], ['PageNo', 6.803878210580031e-06], ['E3', 6.803878210580031e-06], ['X8', 6.803878210580031e-06], ['Q9', 6.803878210580031e-06], ['G3', 6.803878210580031e-06], ['NoTrials', 6.803878210580031e-06], ['Random9', 6.803878210580031e-06], ['Real', 6.803878210580031e-06], ['procedures', 6.803878210580031e-06], ['inserting', 6.803878210580031e-06], ['New', 6.803878210580031e-06], ['NewD', 6.803878210580031e-06], ['PrintIfNPositive', 6.803878210580031e-06], ["GCC's", 6.803878210580031e-06], ['emulation', 6.803878210580031e-06], ["I'm", 6.803878210580031e-06], ['<stddef.h>', 6.803878210580031e-06], ['<limits.h>', 6.803878210580031e-06], ['<float.h>', 6.803878210580031e-06], ['"real.h"', 6.803878210580031e-06], ['signals', 6.803878210580031e-06], ['Thus', 6.803878210580031e-06], ['setjmp', 6.803878210580031e-06], ['nothing.', 6.803878210580031e-06], ['Templated', 6.803878210580031e-06], ['128', 6.803878210580031e-06], ['from_long(l);', 6.803878210580031e-06], ['real_c_float(const', 6.803878210580031e-06], ['memcpy(image,', 6.803878210580031e-06], ['sizeof(image));', 6.803878210580031e-06], ['operator+=', 6.803878210580031e-06], ['operator-=', 6.803878210580031e-06], ['operator*=', 6.803878210580031e-06], ['operator/=', 6.803878210580031e-06], ['r(*this);', 6.803878210580031e-06], ['ldexp', 6.803878210580031e-06], ['(strcasecmp(p,', 6.803878210580031e-06], ['real_inf', 6.803878210580031e-06], ['(*s', 6.803878210580031e-06], ['NEGATE_EXPR,', 6.803878210580031e-06], ['ri;', 6.803878210580031e-06], ['(&bi,', 6.803878210580031e-06], ['&bi);', 6.803878210580031e-06], ['rb[64];', 6.803878210580031e-06], ['&bi,', 6.803878210580031e-06], ['sizeof(bb),', 6.803878210580031e-06], ['(rb,', 6.803878210580031e-06], ['sizeof(rb),', 6.803878210580031e-06], ['MULT_EXPR:', 6.803878210580031e-06], ['rb);', 6.803878210580031e-06], ['*symbol_for_code;', 6.803878210580031e-06], ['NEGATE_EXPR:', 6.803878210580031e-06], ['"-";', 6.803878210580031e-06], ['ABS_EXPR:', 6.803878210580031e-06], ['LT_EXPR:', 6.803878210580031e-06], ['"<";', 6.803878210580031e-06], ['LE_EXPR:', 6.803878210580031e-06], ['"<=";', 6.803878210580031e-06], ['EQ_EXPR:', 6.803878210580031e-06], ['"==";', 6.803878210580031e-06], ['NE_EXPR:', 6.803878210580031e-06], ['"!=";', 6.803878210580031e-06], ['GE_EXPR:', 6.803878210580031e-06], ['">=";', 6.803878210580031e-06], ['GT_EXPR:', 6.803878210580031e-06], ['.30102999566398119521', 6.803878210580031e-06], ['char[digits', 6.803878210580031e-06], ['10];', 6.803878210580031e-06], ['real_to_decimal', 6.803878210580031e-06], ['digits+10,', 6.803878210580031e-06], ['real_ldexp', 6.803878210580031e-06], ['debugging.', 6.803878210580031e-06], ['volatile', 6.803878210580031e-06], ['(T,', 6.803878210580031e-06], ['native_float(const', 6.803878210580031e-06], ['b.image;', 6.803878210580031e-06], ['r.image', 6.803878210580031e-06], ['%.*a\\n",', 6.803878210580031e-06], ['(double)b,', 6.803878210580031e-06], ['(double)r);', 6.803878210580031e-06], ['%.*La\\n",', 6.803878210580031e-06], ['double)b,', 6.803878210580031e-06], ['double)r);', 6.803878210580031e-06], ['*symbol,', 6.803878210580031e-06], ['char[50];', 6.803878210580031e-06], ['(double)', 6.803878210580031e-06], ['*=', 6.803878210580031e-06], ['one)', 6.803878210580031e-06], ['diff2', 6.803878210580031e-06], ['(z', 6.803878210580031e-06], ['diff;', 6.803878210580031e-06], ['(f.hex(),', 6.803878210580031e-06], ['log', 6.803878210580031e-06], ['Cheat.', 6.803878210580031e-06], ['POW', 6.803878210580031e-06], ['d1', 6.803878210580031e-06], ['(base.hex(),', 6.803878210580031e-06], ['(exp.hex(),', 6.803878210580031e-06], ['ld1', 6.803878210580031e-06], ['begins', 6.803878210580031e-06], ['do_pause', 6.803878210580031e-06], ['Rounding', 6.803878210580031e-06], ['Nine;', 6.803878210580031e-06], ['TwentySeven;', 6.803878210580031e-06], ['Declarations', 6.803878210580031e-06], ['Variables.', 6.803878210580031e-06], ['CInvrse;', 6.803878210580031e-06], ['E1,', 6.803878210580031e-06], ['Random9;', 6.803878210580031e-06], ['Underflow,', 6.803878210580031e-06], ['X1,', 6.803878210580031e-06], ['Random1;', 6.803878210580031e-06], ['Y1,', 6.803878210580031e-06], ['Random2;', 6.803878210580031e-06], ['Z,', 6.803878210580031e-06], ['Z9;', 6.803878210580031e-06], ['M,', 6.803878210580031e-06], ['gap', 6.803878210580031e-06], ['1.0,', 6.803878210580031e-06], ['right-hand', 6.803878210580031e-06], ['-0.0', 6.803878210580031e-06], ['"4', 6.803878210580031e-06], ['Three),', 6.803878210580031e-06], ['Four),', 6.803878210580031e-06], ['(ThirtyTwo', 6.803878210580031e-06], ['One,', 6.803878210580031e-06], ['(ErrCnt[Failure]', 6.803878210580031e-06], ['("Searching', 6.803878210580031e-06], ['("Radix', 6.803878210580031e-06], ['W)', 6.803878210580031e-06], ['U1.str());', 6.803878210580031e-06], ['F6;', 6.803878210580031e-06], ['(unknown', 6.803878210580031e-06], ['no.)', 6.803878210580031e-06], ['ulps', 6.803878210580031e-06], ['ulp', 6.803878210580031e-06], ['E1)', 6.803878210580031e-06], ['.\\n");', 6.803878210580031e-06], ['Half,', 6.803878210580031e-06], ['Integers', 6.803878210580031e-06], ['((Precision', 6.803878210580031e-06], ['(Precision))', 6.803878210580031e-06], ['One))', 6.803878210580031e-06], ['characterized', 6.803878210580031e-06], ['("of', 6.803878210580031e-06], ['solely', 6.803878210580031e-06], ['figures', 6.803878210580031e-06], ['extra-precise', 6.803878210580031e-06], ['Four);', 6.803878210580031e-06], ['Z1))', 6.803878210580031e-06], ['Two))', 6.803878210580031e-06], ['((Half', 6.803878210580031e-06], ['((X1', 6.803878210580031e-06], ['Y1)', 6.803878210580031e-06], ['among', 6.803878210580031e-06], ['this");', 6.803878210580031e-06], ['("That', 6.803878210580031e-06], ['program.\\n");', 6.803878210580031e-06], ['unusual', 6.803878210580031e-06], ['calculated', 6.803878210580031e-06], ['Radix);', 6.803878210580031e-06], ['/,', 6.803878210580031e-06], ['X");', 6.803878210580031e-06], ['"Division', 6.803878210580031e-06], ['"or', 6.803878210580031e-06], ['wrong");', 6.803878210580031e-06], ['(1-U1)', 6.803878210580031e-06], [',', 6.803878210580031e-06], ['(GMult', 6.803878210580031e-06], ['("Checking', 6.803878210580031e-06], ['AInvrse;', 6.803878210580031e-06], ['(!(Done));', 6.803878210580031e-06], ['"X', 6.803878210580031e-06], ['("Multiplication', 6.803878210580031e-06], ['chop.\\n");', 6.803878210580031e-06], ['("*', 6.803878210580031e-06], ['("Division', 6.803878210580031e-06], ['(GDiv', 6.803878210580031e-06], ['No)', 6.803878210580031e-06], ['BInvrse', 6.803878210580031e-06], ['non', 6.803878210580031e-06], ['(RAddSub', 6.803878210580031e-06], ['("Sticky', 6.803878210580031e-06], ['apparently', 6.803878210580031e-06], ['incorrectly', 6.803878210580031e-06], ['("Testing', 6.803878210580031e-06], ['pairs.\\n",', 6.803878210580031e-06], ['(3));', 6.803878210580031e-06], ['(!((I', 6.803878210580031e-06], ['(Z9', 6.803878210580031e-06], ['((U2', 6.803878210580031e-06], ['square', 6.803878210580031e-06], ['0.0,', 6.803878210580031e-06], ['(J', 6.803878210580031e-06], ['((Radix', 6.803878210580031e-06], ['NotMonot', 6.803878210580031e-06], ['Q)', 6.803878210580031e-06], ['E0.\\n");', 6.803878210580031e-06], ['Y2);', 6.803878210580031e-06], ['PseudoZero.str());', 6.803878210580031e-06], ['"Underflow', 6.803878210580031e-06], ['higher");', 6.803878210580031e-06], ['(UfThold', 6.803878210580031e-06], ['UfNGrad', 6.803878210580031e-06], ['((CInvrse', 6.803878210580031e-06], ['Y|', 6.803878210580031e-06], ['Y2.str());', 6.803878210580031e-06], ['("Underflow', 6.803878210580031e-06], ['H));', 6.803878210580031e-06], ['SERIOUS', 6.803878210580031e-06], ['("Since', 6.803878210580031e-06], ['(%s)', 6.803878210580031e-06], ['HInvrse.str(),', 6.803878210580031e-06], ['underflow\\n");', 6.803878210580031e-06], ['past', 6.803878210580031e-06], ['(HInvrse', 6.803878210580031e-06], ['HInvrse);', 6.803878210580031e-06], ['HInvrse)', 6.803878210580031e-06], ['V0;', 6.803878210580031e-06], ['("Overflow', 6.803878210580031e-06], ['traps', 6.803878210580031e-06], ['("No', 6.803878210580031e-06], ['confused', 6.803878210580031e-06], ['(Indx)', 6.803878210580031e-06], ['sqrt(Z)', 6.803878210580031e-06], ['("What', 6.803878210580031e-06], ['Trying', 6.803878210580031e-06], ['...");', 6.803878210580031e-06], ['(!setjmp', 6.803878210580031e-06], ['MyZero).str());', 6.803878210580031e-06], ['*msg[]', 6.803878210580031e-06], ['"SERIOUS', 6.803878210580031e-06], ['Defects.\\n");', 6.803878210580031e-06], ['subsequent', 6.803878210580031e-06], ['(".\\n");', 6.803878210580031e-06], ['Double', 6.803878210580031e-06], ['K,', 6.803878210580031e-06], ['*T)', 6.803878210580031e-06], ['ErrCnt[K]', 6.803878210580031e-06], ['XB;', 6.803878210580031e-06], ['MinSqEr)', 6.803878210580031e-06], ['MaxSqEr)', 6.803878210580031e-06], ['Radix)', 6.803878210580031e-06], ['X2;', 6.803878210580031e-06], ['(Q9', 6.803878210580031e-06], ['DEFECT!\\n");', 6.803878210580031e-06], ['Random2)', 6.803878210580031e-06], ['V9))', 6.803878210580031e-06], ['("Z', 6.803878210580031e-06], ['Random1.str());', 6.803878210580031e-06], ['(Random2', 6.803878210580031e-06], ['Random2.str());', 6.803878210580031e-06], ["'p':", 6.803878210580031e-06], ["'v':", 6.803878210580031e-06], ["'g':", 6.803878210580031e-06], ["'f':", 6.803878210580031e-06], ["'d':", 6.803878210580031e-06], ["'l':", 6.803878210580031e-06], ['float");', 6.803878210580031e-06], ['double");', 6.803878210580031e-06], ['main()', 6.803878210580031e-06], ["opt_problem's", 6.803878210580031e-06], ['FMT', 6.803878210580031e-06], ['destinations', 6.803878210580031e-06], ['retained', 6.803878210580031e-06], ['m_optinfo', 6.803878210580031e-06], ['s_the_problem', 6.803878210580031e-06], ['formatted', 6.803878210580031e-06], ['optinfo,', 6.803878210580031e-06], ['retrieval.', 6.803878210580031e-06], ['text_info', 6.803878210580031e-06], ['text.err_no', 6.803878210580031e-06], ['errno;', 6.803878210580031e-06], ['text.args_ptr', 6.803878210580031e-06], ['text.format_spec', 6.803878210580031e-06], ['(&pp,', 6.803878210580031e-06], ['&text);', 6.803878210580031e-06], ['clearing', 6.803878210580031e-06], ['opt_problem.', 6.803878210580031e-06], ['function_that_succeeds', 6.803878210580031e-06], ['test_opt_result_success', 6.803878210580031e-06], ['with_dumping', 6.803878210580031e-06], ['(with_dumping,', 6.803878210580031e-06], ['with_dumping,', 6.803878210580031e-06], ['MSG_ALL_KINDS', 6.803878210580031e-06], ['(!dump_enabled_p', 6.803878210580031e-06], ['(res);', 6.803878210580031e-06], ['opt_wrapper<bool>.', 6.803878210580031e-06], ['(res.get_result', 6.803878210580031e-06], ['(res.get_problem', 6.803878210580031e-06], ['dumped.', 6.803878210580031e-06], ['*info', 6.803878210580031e-06], ['tmp.get_pending_optinfo', 6.803878210580031e-06], ['(gimple_return_retval', 6.803878210580031e-06], ['opt_result::failure_at', 6.803878210580031e-06], ['<const', 6.803878210580031e-06], ['function_that_indirectly_fails', 6.803878210580031e-06], ['vectorization).', 6.803878210580031e-06], ['line_map_ordinary', 6.803878210580031e-06], ['linemap_line_start', 6.803878210580031e-06], ['linemap_position_for_column', 6.803878210580031e-06], ['gimple_build_return', 6.803878210580031e-06], ['gimple_set_location', 6.803878210580031e-06], ['MSG_PRIORITY_REEMITTED;', 6.803878210580031e-06], ['(problem,', 6.803878210580031e-06], ['().get_location_t', 6.803878210580031e-06], ['__GNUC__', 6.803878210580031e-06], ['ASSERT_IS_TEXT', 6.803878210580031e-06], ['(2),', 6.803878210580031e-06], ['dumped', 6.803878210580031e-06], ['(MSG_PRIORITY_INTERNALS', 6.803878210580031e-06], ['function_that_indirectly_fails"', 6.803878210580031e-06], ['0;\\n"', 6.803878210580031e-06], ['loop\\n"', 6.803878210580031e-06], ['disabled,', 6.803878210580031e-06], ['created,', 6.803878210580031e-06], ['"optinfo.h"', 6.803878210580031e-06], ['"optinfo-emit-json.h"', 6.803878210580031e-06], ["optrecord_json_writer's", 6.803878210580031e-06], ['in-memory', 6.803878210580031e-06], ['m_root_tuple', 6.803878210580031e-06], ['metadata->set', 6.803878210580031e-06], ['("name",', 6.803878210580031e-06], ['("target",', 6.803878210580031e-06], ['lists.', 6.803878210580031e-06], ['(records);', 6.803878210580031e-06], ['m_scopes.safe_push', 6.803878210580031e-06], ['Delete', 6.803878210580031e-06], ['emitted_error', 6.803878210580031e-06], ['*filename', 6.803878210580031e-06], ['(filename,', 6.803878210580031e-06], ['cleanup;', 6.803878210580031e-06], ['(outfile,', 6.803878210580031e-06], ['(outfile)', 6.803878210580031e-06], ['optrecord_json_writer::add_record', 6.803878210580031e-06], ['*optinfo)', 6.803878210580031e-06], ['(optinfo->get_kind', 6.803878210580031e-06], ['(m_scopes.length', 6.803878210580031e-06], ['("function",', 6.803878210580031e-06], ['UNKNOWN_LOCATION);', 6.803878210580031e-06], ['expanded_location', 6.803878210580031e-06], ['exploc', 6.803878210580031e-06], ['expand_location', 6.803878210580031e-06], ['(exploc.file));', 6.803878210580031e-06], ['(exploc.line));', 6.803878210580031e-06], ['("column",', 6.803878210580031e-06], ['(exploc.column));', 6.803878210580031e-06], ['count)', 6.803878210580031e-06], ['PASS', 6.803878210580031e-06], ['(opt_pass', 6.803878210580031e-06], ['(pass));', 6.803878210580031e-06], ['(pp_formatted_text', 6.803878210580031e-06], ['(&pp));', 6.803878210580031e-06], ['get_id_value_for_pass', 6.803878210580031e-06], ['BLOCK_ABSTRACT_ORIGIN', 6.803878210580031e-06], ['(block))', 6.803878210580031e-06], ['(ao)', 6.803878210580031e-06], ['BLOCK)', 6.803878210580031e-06], ['optinfo_kind_to_string', 6.803878210580031e-06], ['("kind",', 6.803878210580031e-06], ['("message",', 6.803878210580031e-06], ['stmt.', 6.803878210580031e-06], ['(optinfo->get_pass', 6.803878210580031e-06], ['(DECL_ASSEMBLER_NAME', 6.803878210580031e-06], ['json', 6.803878210580031e-06], ['recursing', 6.803878210580031e-06], ['(pass);', 6.803878210580031e-06], ['test_building_json_from_dump_calls', 6.803878210580031e-06], ['dump_user_location_t', 6.803878210580031e-06], ['loc;', 6.803878210580031e-06], ['sane.', 6.803878210580031e-06], ["optinfo_item's", 6.803878210580031e-06], ['Takes', 6.803878210580031e-06], ['KIND.', 6.803878210580031e-06], ['optinfo_kind', 6.803878210580031e-06], ['(kind)', 6.803878210580031e-06], ['OPTINFO_KIND_SUCCESS:', 6.803878210580031e-06], ['OPTINFO_KIND_FAILURE:', 6.803878210580031e-06], ['OPTINFO_KIND_NOTE:', 6.803878210580031e-06], ['OPTINFO_KIND_SCOPE:', 6.803878210580031e-06], ["optinfo's", 6.803878210580031e-06], ['*item;', 6.803878210580031e-06], ['(m_items,', 6.803878210580031e-06], ['item)', 6.803878210580031e-06], ['optinfo.', 6.803878210580031e-06], ['(item);', 6.803878210580031e-06], ['optinfo_kind_to_dump_flag', 6.803878210580031e-06], ['"non-immediate"', 6.803878210580031e-06], ['dump_kind', 6.803878210580031e-06], ['(dump_flags_t', 6.803878210580031e-06], ['active', 6.803878210580031e-06], ['deterministic', 6.803878210580031e-06], ['especially', 6.803878210580031e-06], ['Neither', 6.803878210580031e-06], ['stage', 6.803878210580031e-06], ['__builtin_expect', 6.803878210580031e-06], ['C-style', 6.803878210580031e-06], ['netsort.', 6.803878210580031e-06], ['C->OUT,', 6.803878210580031e-06], ['reorder23', 6.803878210580031e-06], ['(sort_ctx', 6.803878210580031e-06], ['STRIDE,', 6.803878210580031e-06], ['(&t0,', 6.803878210580031e-06], ['OFFSET;', 6.803878210580031e-06], ['3))', 6.803878210580031e-06], ['memmove', 6.803878210580031e-06], ['(TYPE));\\', 6.803878210580031e-06], ['&t0,', 6.803878210580031e-06], ['&t1,', 6.803878210580031e-06], ['(size_t)))', 6.803878210580031e-06], ['(size_t),', 6.803878210580031e-06], ['(int)))', 6.803878210580031e-06], ['(int),', 6.803878210580031e-06], ['(size_t);', 6.803878210580031e-06], ['step)', 6.803878210580031e-06], ['reorder45', 6.803878210580031e-06], ['E1.', 6.803878210580031e-06], ['cmp1', 6.803878210580031e-06], ['e1)', 6.803878210580031e-06], ['Execute', 6.803878210580031e-06], ['IN,', 6.803878210580031e-06], ['IN', 6.803878210580031e-06], ['*in,', 6.803878210580031e-06], ['*e0', 6.803878210580031e-06], ['in,', 6.803878210580031e-06], ['e1);', 6.803878210580031e-06], ['(e2,', 6.803878210580031e-06], ['OUT.', 6.803878210580031e-06], ['stable', 6.803878210580031e-06], ['(in,', 6.803878210580031e-06], ['nl,', 6.803878210580031e-06], ['in;', 6.803878210580031e-06], ['half,', 6.803878210580031e-06], ['Merge', 6.803878210580031e-06], ['mr', 6.803878210580031e-06], ['lr', 6.803878210580031e-06], ['(intptr_t)l', 6.803878210580031e-06], ['*end', 6.803878210580031e-06], ['(4);', 6.803878210580031e-06], ['gcc_qsort', 6.803878210580031e-06], ['*vbase,', 6.803878210580031e-06], ['nlim', 6.803878210580031e-06], ['bufsz', 6.803878210580031e-06], ['(base,', 6.803878210580031e-06], ['(vbase,', 6.803878210580031e-06], ['INCLUDE_UNIQUE_PTR', 6.803878210580031e-06], ['counting', 6.803878210580031e-06], ['invocations.', 6.803878210580031e-06], ['42;', 6.803878210580031e-06], ['has_default_ctor', 6.803878210580031e-06], ['inits', 6.803878210580031e-06], ['test_null_ptr', 6.803878210580031e-06], ['q;', 6.803878210580031e-06], ['test_implicit_deletion', 6.803878210580031e-06], ['unique_ptr.', 6.803878210580031e-06], ['test_overwrite_of_null', 6.803878210580031e-06], ['test_overwrite_of_non_null', 6.803878210580031e-06], ['test_overloaded_ops', 6.803878210580031e-06], ['(f,', 6.803878210580031e-06], ['g', 6.803878210580031e-06], ['g);', 6.803878210580031e-06], ['test_array_new', 6.803878210580031e-06], ['operator[]', 6.803878210580031e-06], ['gnu::unique_xmalloc_ptr', 6.803878210580031e-06], ['test_xmalloc', 6.803878210580031e-06], ['test_xmalloc_array', 6.803878210580031e-06], ['(dummy,', 6.803878210580031e-06], ['2012-2019', 6.803878210580031e-06], ['Kenneth', 6.803878210580031e-06], ['Zadeck', 6.803878210580031e-06], ['<zadeck@naturalbridge.com>', 6.803878210580031e-06], ['BLOCKS_NEEDED(PREC)', 6.803878210580031e-06], ['(((PREC)', 6.803878210580031e-06], ['*file,', 6.803878210580031e-06], ['BUF', 6.803878210580031e-06], ['((wi.get_precision', 6.803878210580031e-06], ['(wi.get_len', 6.803878210580031e-06], ['HOST_WIDE_INT_PRINT_UNSIGNED,', 6.803878210580031e-06], ['wi.to_uhwi', 6.803878210580031e-06], ['first_p', 6.803878210580031e-06], ['uhwi', 6.803878210580031e-06], ['width);', 6.803878210580031e-06], ['uhwi);', 6.803878210580031e-06], ['adjusts', 6.803878210580031e-06], ['undefined.', 6.803878210580031e-06], ['+INF', 6.803878210580031e-06], ['&w0,', 6.803878210580031e-06], ['&w1,', 6.803878210580031e-06], ['w1,', 6.803878210580031e-06], ['UB]', 6.803878210580031e-06], ['MAY_BE_NONZERO', 6.803878210580031e-06], ['MUST_BE_NONZERO', 6.803878210580031e-06], ['&lb,', 6.803878210580031e-06], ['&ub,', 6.803878210580031e-06], ['wi::minus_one', 6.803878210580031e-06], ['(lb.get_precision', 6.803878210580031e-06], ['(lb,', 6.803878210580031e-06], ['ub))', 6.803878210580031e-06], ['wi::lt_p', 6.803878210580031e-06], ['wide_int_range_order_set', 6.803878210580031e-06], ['pairs', 6.803878210580031e-06], ['(w2,', 6.803878210580031e-06], ['w3,', 6.803878210580031e-06], ['RES_UB].', 6.803878210580031e-06], ['wide_int_range_cross_product', 6.803878210580031e-06], ['cp1,', 6.803878210580031e-06], ['cp2,', 6.803878210580031e-06], ['cp3,', 6.803878210580031e-06], ['(vr0_lb,', 6.803878210580031e-06], ['vr0_ub))', 6.803878210580031e-06], ['cp1;', 6.803878210580031e-06], ['(vr1_lb,', 6.803878210580031e-06], ['vr1_ub))', 6.803878210580031e-06], ['basically', 6.803878210580031e-06], ['wide_int_range_mult_wrapping', 6.803878210580031e-06], ['2*prec', 6.803878210580031e-06], ['sizem1', 6.803878210580031e-06], ['prod0', 6.803878210580031e-06], ['min1;', 6.803878210580031e-06], ['max1;', 6.803878210580031e-06], ['prod2', 6.803878210580031e-06], ['prod3', 6.803878210580031e-06], ['products', 6.803878210580031e-06], ['(prod0', 6.803878210580031e-06], ['prod3)', 6.803878210580031e-06], ['prod3);', 6.803878210580031e-06], ['(prod2,', 6.803878210580031e-06], ['multiplicative', 6.803878210580031e-06], ['ranges:', 6.803878210580031e-06], ['[VR0_LB,', 6.803878210580031e-06], ['VR0_UB]', 6.803878210580031e-06], ['[VR1_LB,', 6.803878210580031e-06], ['VR1_LB]', 6.803878210580031e-06], ['swapped.', 6.803878210580031e-06], ['ranges,', 6.803878210580031e-06], ['prec;', 6.803878210580031e-06], ['bound_shift', 6.803878210580031e-06], ['happen,', 6.803878210580031e-06], ['low_bound', 6.803878210580031e-06], ['bound;', 6.803878210580031e-06], ['high_bound', 6.803878210580031e-06], ['complement;', 6.803878210580031e-06], ['(vr0_ub,', 6.803878210580031e-06], ['zeroes,', 6.803878210580031e-06], ['increases', 6.803878210580031e-06], ['vr0_lb))', 6.803878210580031e-06], ['decreases', 6.803878210580031e-06], ['easily', 6.803878210580031e-06], ['BIT_IOR_EXPR', 6.803878210580031e-06], ['(w,', 6.803878210580031e-06], ['lower_bound', 6.803878210580031e-06], ['upper_bound', 6.803878210580031e-06], ['Optimize', 6.803878210580031e-06], ['mask))', 6.803878210580031e-06], ['&ovf);', 6.803878210580031e-06], ['&vr1_max,', 6.803878210580031e-06], ['(wide_int_range_optimize_bit_op', 6.803878210580031e-06], ['must_be_nonzero0', 6.803878210580031e-06], ['must_be_nonzero1;', 6.803878210580031e-06], ['may_be_nonzero0', 6.803878210580031e-06], ['may_be_nonzero1;', 6.803878210580031e-06], ['(vr1_max,', 6.803878210580031e-06], ['wmax,sign))', 6.803878210580031e-06], ['vr1_max,', 6.803878210580031e-06], ['[-INF,', 6.803878210580031e-06], ['!wi::cmps', 6.803878210580031e-06], ['ABS', 6.803878210580031e-06], ['wi::smax', 6.803878210580031e-06], ['ABS_EXPR', 6.803878210580031e-06], ['MAX].', 6.803878210580031e-06], ['VR0', 6.803878210580031e-06], ['(vr0_min);', 6.803878210580031e-06], ['(vr0_max);', 6.803878210580031e-06], ['MAX.', 6.803878210580031e-06], ['&vr0_max)', 6.803878210580031e-06], ['inner_sign);', 6.803878210580031e-06], ['information,', 6.803878210580031e-06], ['divisor_min,', 6.803878210580031e-06], ['dividing', 6.803878210580031e-06], ['prec))', 6.803878210580031e-06], ['(!wide_int_range_multiplicative_op', 6.803878210580031e-06], ['Operations', 6.803878210580031e-06], ['W_TYPE_SIZE', 6.803878210580031e-06], ['(DI)));', 6.803878210580031e-06], ['UDWtype', 6.803878210580031e-06], ['divide.', 6.803878210580031e-06], ['representation,', 6.803878210580031e-06], ['top;', 6.803878210580031e-06], ['blocks_needed)', 6.803878210580031e-06], ['(top', 6.803878210580031e-06], ['extension.', 6.803878210580031e-06], ['wide_int.', 6.803878210580031e-06], ['LEN.', 6.803878210580031e-06], ['endianness', 6.803878210580031e-06], ['set;', 6.803878210580031e-06], ['buffer_len', 6.803878210580031e-06], ['result.write_val', 6.803878210580031e-06], ['bitpos', 6.803878210580031e-06], ['(buffer_len', 6.803878210580031e-06], ['(BYTES_BIG_ENDIAN)', 6.803878210580031e-06], ['byte;', 6.803878210580031e-06], ['result.set_len', 6.803878210580031e-06], ['(canonize', 6.803878210580031e-06], ['precision));', 6.803878210580031e-06], ['x.get_precision', 6.803878210580031e-06], ['(HOST_WIDE_INT,', 6.803878210580031e-06], ['t[i]', 6.803878210580031e-06], ['(const_tree', 6.803878210580031e-06], ['numb;', 6.803878210580031e-06], ['min,', 6.803878210580031e-06], ['mpz_init', 6.803878210580031e-06], ['(min);', 6.803878210580031e-06], ['(max);', 6.803878210580031e-06], ['(mpz_cmp', 6.803878210580031e-06], ['mpz_set', 6.803878210580031e-06], ['mpz_clear', 6.803878210580031e-06], ['GMP', 6.803878210580031e-06], ['numb', 6.803878210580031e-06], ['pathological', 6.803878210580031e-06], ['safer', 6.803878210580031e-06], ['(prec)', 6.803878210580031e-06], ['(count);', 6.803878210580031e-06], ['SGNed', 6.803878210580031e-06], ['SGN,', 6.803878210580031e-06], ['(PRECISION', 6.803878210580031e-06], ['(small_xprecision', 6.803878210580031e-06], ['precisions.', 6.803878210580031e-06], ['SIGN_MASK', 6.803878210580031e-06], ['1]);', 6.803878210580031e-06], ['[l0],', 6.803878210580031e-06], ['s0,', 6.803878210580031e-06], ['u0,', 6.803878210580031e-06], ['u1;', 6.803878210580031e-06], ['u0', 6.803878210580031e-06], ['u1', 6.803878210580031e-06], ['OP1,', 6.803878210580031e-06], ['compares.', 6.803878210580031e-06], ['x0;', 6.803878210580031e-06], ['x1;', 6.803878210580031e-06], ['x0', 6.803878210580031e-06], ['x1', 6.803878210580031e-06], ['Sign-extend', 6.803878210580031e-06], ['Extending', 6.803878210580031e-06], ['fewer,', 6.803878210580031e-06], ['xlen)', 6.803878210580031e-06], ['suboffset', 6.803878210580031e-06], ['(suboffset', 6.803878210580031e-06], ['suboffset);', 6.803878210580031e-06], ['START.', 6.803878210580031e-06], ['wi::shifted_mask', 6.803878210580031e-06], ['UNSIGNED),', 6.803878210580031e-06], ['bit)', 6.803878210580031e-06], ['subbit', 6.803878210580031e-06], ['affects', 6.803878210580031e-06], ['HOST_WIDE_INT_1U', 6.803878210580031e-06], ['subbit;', 6.803878210580031e-06], ['(bit', 6.803878210580031e-06], ['padding.', 6.803878210580031e-06], ['NEGATE', 6.803878210580031e-06], ['negate,', 6.803878210580031e-06], ['width;', 6.803878210580031e-06], ['~block', 6.803878210580031e-06], ['~OP1.', 6.803878210580031e-06], ['~op1[l1];', 6.803878210580031e-06], ['~op1[l0];', 6.803878210580031e-06], ['old_carry', 6.803878210580031e-06], ['mask0,', 6.803878210580031e-06], ['mask0;', 6.803878210580031e-06], ['len++;', 6.803878210580031e-06], ['-prec', 6.803878210580031e-06], ['1])', 6.803878210580031e-06], ['MSB', 6.803878210580031e-06], ['O0', 6.803878210580031e-06], ['Unpack', 6.803878210580031e-06], ['INPUT', 6.803878210580031e-06], ['RESULT.', 6.803878210580031e-06], ['filled', 6.803878210580031e-06], ['*input,', 6.803878210580031e-06], ['HOST_BITS_PER_HALF_WIDE_INT));', 6.803878210580031e-06], ['overflows.', 6.803878210580031e-06], ['Unfortunately', 6.803878210580031e-06], ['overflowed.', 6.803878210580031e-06], ['2x', 6.803878210580031e-06], ['multiply.', 6.803878210580031e-06], ['attempt', 6.803878210580031e-06], ['(op2))', 6.803878210580031e-06], ['val[0],', 6.803878210580031e-06], ['op1.ulow', 6.803878210580031e-06], ['op2.ulow', 6.803878210580031e-06], ['(val[1]', 6.803878210580031e-06], ['HWI', 6.803878210580031e-06], ['(We', 6.803878210580031e-06], ['upper;', 6.803878210580031e-06], ['+OVERFLOW.', 6.803878210580031e-06], ['op2len;', 6.803878210580031e-06], ['op1len;', 6.803878210580031e-06], ['multiplies', 6.803878210580031e-06], ['HOST_WIDE_INT)u[i]', 6.803878210580031e-06], ['(assuming', 6.803878210580031e-06], ['HOST_WIDE_INT)r[i', 6.803878210580031e-06], ['popcount_hwi', 6.803878210580031e-06], ['(x.sign_mask', 6.803878210580031e-06], ['(x.val[i]);', 6.803878210580031e-06], ['add.', 6.803878210580031e-06], ['old_borrow', 6.803878210580031e-06], ['modification', 6.803878210580031e-06], ['B_DIVIDEND', 6.803878210580031e-06], ['allocated,', 6.803878210580031e-06], ['B_DIVISOR.', 6.803878210580031e-06], ['divmod_internal_2', 6.803878210580031e-06], ['word.', 6.803878210580031e-06], ['machines.', 6.803878210580031e-06], ['qhat;', 6.803878210580031e-06], ['digits.', 6.803878210580031e-06], ['(k', 6.803878210580031e-06], ['CHECK', 6.803878210580031e-06], ['clz', 6.803878210580031e-06], ['Unlike', 6.803878210580031e-06], ['b_divisor,', 6.803878210580031e-06], ['b_divisor[i]', 6.803878210580031e-06], ['b_divisor[0]', 6.803878210580031e-06], ['b_dividend[m]', 6.803878210580031e-06], ['(b_dividend[i]', 6.803878210580031e-06], ['b_dividend[0]', 6.803878210580031e-06], ['(b_dividend[j+n]', 6.803878210580031e-06], ['b_dividend[j+n-1])', 6.803878210580031e-06], ['b_dividend[i+j]', 6.803878210580031e-06], ['b_remainder[i]', 6.803878210580031e-06], ['*remainder_len,', 6.803878210580031e-06], ['dividend_len,', 6.803878210580031e-06], ['divisor_len,', 6.803878210580031e-06], ['divisor_prec,', 6.803878210580031e-06], ['dividend_neg', 6.803878210580031e-06], ['divisor_neg', 6.803878210580031e-06], ['neg_divisor;', 6.803878210580031e-06], ['dividend_len', 6.803878210580031e-06], ['(dividend))', 6.803878210580031e-06], ['(oflow)', 6.803878210580031e-06], ['*oflow', 6.803878210580031e-06], ['dividend_len;', 6.803878210580031e-06], ['wi::fits_shwi_p', 6.803878210580031e-06], ['(dividend)', 6.803878210580031e-06], ['quotient_len;', 6.803878210580031e-06], ['did.', 6.803878210580031e-06], ['(b_quotient,', 6.803878210580031e-06], ['b_remainder,', 6.803878210580031e-06], ['Left', 6.803878210580031e-06], ['subblock', 6.803878210580031e-06], ['small_shift', 6.803878210580031e-06], ['(small_shift', 6.803878210580031e-06], ['XVAL.', 6.803878210580031e-06], ['(-small_shift', 6.803878210580031e-06], ['Right', 6.803878210580031e-06], ['xval,', 6.803878210580031e-06], ['SHIFT.', 6.803878210580031e-06], ['x.uhigh', 6.803878210580031e-06], ['-COUNT', 6.803878210580031e-06], ['-count;', 6.803878210580031e-06], ['^=', 6.803878210580031e-06], ['(x.len', 6.803878210580031e-06], ['(x.val[i]', 6.803878210580031e-06], ['base-2', 6.803878210580031e-06], ['hwi', 6.803878210580031e-06], ['(x);', 6.803878210580031e-06], ['ctz', 6.803878210580031e-06], ['clear.', 6.803878210580031e-06], ['round_down_for_mask', 6.803878210580031e-06], ['extra_bits', 6.803878210580031e-06], ['(extra_bits', 6.803878210580031e-06], ['1s', 6.803878210580031e-06], ['(extra_bits),', 6.803878210580031e-06], ['round_up_for_mask', 6.803878210580031e-06], ['EXTRA_BITS.', 6.803878210580031e-06], ['upper_mask', 6.803878210580031e-06], ['(~VAL', 6.803878210580031e-06], ['UPPER_MASK)', 6.803878210580031e-06], ['reaches', 6.803878210580031e-06], ['gt_pch_nx', 6.803878210580031e-06], ['*),', 6.803878210580031e-06], ['generic_wide_int', 6.803878210580031e-06], ['<wide_int_ref_storage', 6.803878210580031e-06], ['>::dump', 6.803878210580031e-06], ['ref.dump', 6.803878210580031e-06], ['*ptr)', 6.803878210580031e-06], ['(*ptr);', 6.803878210580031e-06], ['"<nil>\\n");', 6.803878210580031e-06], ['times,', 6.803878210580031e-06], ['offset_int', 6.803878210580031e-06], ['*expected,', 6.803878210580031e-06], ['(expected,', 6.803878210580031e-06], ['test_printing', 6.803878210580031e-06], ['(42);', 6.803878210580031e-06], ['69));', 6.803878210580031e-06], ['("0xffffffffffffffff",', 6.803878210580031e-06], ['(64,', 6.803878210580031e-06], ['<widest_int>', 6.803878210580031e-06], ['129)', 6.803878210580031e-06], ['test_ops', 6.803878210580031e-06], ['("-7",', 6.803878210580031e-06], ['(a),', 6.803878210580031e-06], ['("10",', 6.803878210580031e-06], ['("4",', 6.803878210580031e-06], ['("-4",', 6.803878210580031e-06], ['("21",', 6.803878210580031e-06], ['wi::mul', 6.803878210580031e-06], ['test_comparisons', 6.803878210580031e-06], ['(wi::ne_p', 6.803878210580031e-06], ['test_overflow', 6.803878210580031e-06], ['33,', 6.803878210580031e-06], ['63,', 6.803878210580031e-06], ['ARRAY_SIZE', 6.803878210580031e-06], ['(sum,', 6.803878210580031e-06], ['(diff,', 6.803878210580031e-06], ['test_round_for_mask', 6.803878210580031e-06], ['(0x22,', 6.803878210580031e-06], ['(0x111,', 6.803878210580031e-06], ['(101,', 6.803878210580031e-06], ['(0xfc,', 6.803878210580031e-06], ['(0x2c2,', 6.803878210580031e-06], ['(0xabd,', 6.803878210580031e-06], ['(0x1000,', 6.803878210580031e-06], ['(m_parent.m_cf->m_func_decl);', 6.803878210580031e-06], ['m_parent.m_cf->m_generating_arg_block', 6.803878210580031e-06], ['src0', 6.803878210580031e-06], ['operands[first_input', 6.803878210580031e-06], ['casted_to_ptr,', 6.803878210580031e-06], ['mem_ref,', 6.803878210580031e-06], ['src0);', 6.803878210580031e-06], ['mem_ref;', 6.803878210580031e-06], ['(built_in))));', 6.803878210580031e-06], ['if..else', 6.803878210580031e-06], ['HSAIL_TYPE)', 6.803878210580031e-06], ['(instr_expr);', 6.803878210580031e-06], ['atomic_opcode;', 6.803878210580031e-06], ['generate_tree', 6.803878210580031e-06], ['(inst->base,', 6.803878210580031e-06], ['atomic_opcode);', 6.803878210580031e-06], ['~A();', 6.803878210580031e-06], ['B:public', 6.803878210580031e-06], ['A::T;', 6.803878210580031e-06], ['brig_inst.type', 6.803878210580031e-06], ['operand1)', 6.803878210580031e-06], ['saturating', 6.803878210580031e-06], ['(operand0),', 6.803878210580031e-06], ['separately', 6.803878210580031e-06], ['vectors,', 6.803878210580031e-06], ['(element_count);', 6.803878210580031e-06], ['tightly', 6.803878210580031e-06], ['VEC_PERM_EXPR.', 6.803878210580031e-06], ['(operands[0]),', 6.803878210580031e-06], ['perm;', 6.803878210580031e-06], ['Unpacks', 6.803878210580031e-06], ['positions', 6.803878210580031e-06], ['and_mask_element', 6.803878210580031e-06], ['vec_type,', 6.803878210580031e-06], ['operands[0]),', 6.803878210580031e-06], ['mask_vec);', 6.803878210580031e-06], ['extend_int', 6.803878210580031e-06], ['src_vect', 6.803878210580031e-06], ['("scalar",', 6.803878210580031e-06], ['(pos),', 6.803878210580031e-06], ['operands[2],', 6.803878210580031e-06], ['element_width', 6.803878210580031e-06], ['bitoffset', 6.803878210580031e-06], ['bitoffset);', 6.803878210580031e-06], ['(uint64_t)', 6.803878210580031e-06], ['scalar,', 6.803878210580031e-06], ['describe', 6.803878210580031e-06], ['(arith_type));', 6.803878210580031e-06], ['element_count));', 6.803878210580031e-06], ['opcode,', 6.803878210580031e-06], ["instruction's", 6.803878210580031e-06], ['brig_type);', 6.803878210580031e-06], ['RSHIFT_EXPR', 6.803878210580031e-06], ['operands[1]', 6.803878210580031e-06], ['input_count', 6.803878210580031e-06], ['TREE_LIST)', 6.803878210580031e-06], ['emulate', 6.803878210580031e-06], ['"standard"', 6.803878210580031e-06], ['mult_res', 6.803878210580031e-06], ['mult_res,', 6.803878210580031e-06], ['BRIG_OPCODE_UNPACKLO', 6.803878210580031e-06], ['(operands);', 6.803878210580031e-06], ['BRIG_OPCODE_PACK)', 6.803878210580031e-06], ['optimizations', 6.803878210580031e-06], ['(RDIV_EXPR,', 6.803878210580031e-06], ['MODIFY_EXPR)', 6.803878210580031e-06], ['modes', 6.803878210580031e-06], ['gccbrig_tree_type_to_hsa_type', 6.803878210580031e-06], ['hsa_type_packed_p', 6.803878210580031e-06], ['element_size_bits;', 6.803878210580031e-06], ['(is_vec_instr)', 6.803878210580031e-06], ['(brig_inst_type)', 6.803878210580031e-06], ['arith_type', 6.803878210580031e-06], ['gccbrig_is_bit_operation', 6.803878210580031e-06], ['(brig_inst->base.kind', 6.803878210580031e-06], ['brig_inst)->pack;', 6.803878210580031e-06], ['build_lower_element_broadcast', 6.803878210580031e-06], ['sat_arith', 6.803878210580031e-06], ['goto_stmt', 6.803878210580031e-06], ['(goto_stmt);', 6.803878210580031e-06], ['dependent', 6.803878210580031e-06], ['Intel', 6.803878210580031e-06], ["I've", 6.803878210580031e-06], ['work,', 6.803878210580031e-06], ['operand0_elements;', 6.803878210580031e-06], ['operand0_elements);', 6.803878210580031e-06], ['operand1_elements;', 6.803878210580031e-06], ['operand1_elements);', 6.803878210580031e-06], ['result_elements;', 6.803878210580031e-06], ['short_integer_type_node;', 6.803878210580031e-06], ['promoted_type_size', 6.803878210580031e-06], ['scalar_expr', 6.803878210580031e-06], ['promoted_type,', 6.803878210580031e-06], ['result_elements.push_back', 6.803878210580031e-06], ['(convert', 6.803878210580031e-06], ['(result_elements);', 6.803878210580031e-06], ['half_storage_type', 6.803878210580031e-06], ['is_fp16_operation', 6.803878210580031e-06], ['old_value', 6.803878210580031e-06], ['(build_resize_convert_view', 6.803878210580031e-06], ['(half_storage_type,', 6.803878210580031e-06], ['picked', 6.803878210580031e-06], ['mask_inner_type', 6.803878210580031e-06], ['new_value,', 6.803878210580031e-06], ['(vec_operand));', 6.803878210580031e-06], ['vec_operand,', 6.803878210580031e-06], ['func_ref', 6.803878210580031e-06], ['operand_count', 6.803878210580031e-06], ['operand_count;', 6.803878210580031e-06], ['out_args_p', 6.803878210580031e-06], ['m_parent.m_cf->arg_variable', 6.803878210580031e-06], ['element_zero', 6.803878210580031e-06], ['(ARRAY_REF,', 6.803878210580031e-06], ['element_zero);', 6.803878210580031e-06], ['(out_args->length', 6.803878210580031e-06], ['ret_val_type', 6.803878210580031e-06], ['ret_val', 6.803878210580031e-06], ['m_parent.m_cf->m_context_arg);', 6.803878210580031e-06], ['build_call_vec', 6.803878210580031e-06], ['(call)', 6.803878210580031e-06], ['result_assign', 6.803878210580031e-06], ['(SWITCH_EXPR,', 6.803878210580031e-06], ['create_artificial_label', 6.803878210580031e-06], ['(UNKNOWN_LOCATION));', 6.803878210580031e-06], ['(cases,', 6.803878210580031e-06], ['++c)', 6.803878210580031e-06], ['(build_int_cst', 6.803878210580031e-06], ['(integer_type_node,', 6.803878210580031e-06], ['target_goto', 6.803878210580031e-06], ['if_stmt', 6.803878210580031e-06], ['target_goto,', 6.803878210580031e-06], ['m_parent.m_cf->m_has_barriers', 6.803878210580031e-06], ['(m_parent.m_cf->expand_or_call_builtin', 6.803878210580031e-06], ['BRIG_TYPE_NONE,', 6.803878210580031e-06], ['call_operands));', 6.803878210580031e-06], ['(inst_base->type', 6.803878210580031e-06], ['(cmp_type);', 6.803878210580031e-06], ['comparisons,', 6.803878210580031e-06], ['get_comparison_result_type', 6.803878210580031e-06], ['(ORDERED_EXPR,', 6.803878210580031e-06], ['(GT_EXPR,', 6.803878210580031e-06], ['(inst->sourceType', 6.803878210580031e-06], ['versions,', 6.803878210580031e-06], ['}>;', 6.803878210580031e-06], ['build_minus_one_cst', 6.803878210580031e-06], ['(dest_type)));', 6.803878210580031e-06], ['forth', 6.803878210580031e-06], ['(signed_type,', 6.803878210580031e-06], ['result_width', 6.803878210580031e-06], ['signed_type,', 6.803878210580031e-06], ['shift_amount_cst);', 6.803878210580031e-06], ['(dest_type))', 6.803878210580031e-06], ['F16', 6.803878210580031e-06], ['F32', 6.803878210580031e-06], ['(convert_to_integer', 6.803878210580031e-06], ['brig-code-entry-handler.cc', 6.803878210580031e-06], ['gccbrig', 6.803878210580031e-06], ['*brig_label', 6.803878210580031e-06], ['&ref;', 6.803878210580031e-06], ['*label_name', 6.803878210580031e-06], ['(brig_label->name);', 6.803878210580031e-06], ['label_str', 6.803878210580031e-06], ['(label_name->bytes),', 6.803878210580031e-06], ['label_name->byteCount);', 6.803878210580031e-06], ['BRIG_KIND_DIRECTIVE_FUNCTION)', 6.803878210580031e-06], ['m_parent.function_decl', 6.803878210580031e-06], ['BrigDirectiveFbarrier*', 6.803878210580031e-06], ['fbar', 6.803878210580031e-06], ['(fbar);', 6.803878210580031e-06], ['m_parent.m_cf->group_variable_segment_offset', 6.803878210580031e-06], ['local_offset', 6.803878210580031e-06], ['(m_parent.m_cf->m_local_group_variables.has_variable', 6.803878210580031e-06], ['m_parent.m_cf->m_group_local_offset_arg));', 6.803878210580031e-06], ['OPERAND_TYPE', 6.803878210580031e-06], ['dictated', 6.803878210580031e-06], ['&oplist', 6.803878210580031e-06], ['(oplist.elements);', 6.803878210580031e-06], ['*operand_element', 6.803878210580031e-06], ['*operand_element,', 6.803878210580031e-06], ['operand_type);', 6.803878210580031e-06], ['data->byteCount', 6.803878210580031e-06], ['build_code_ref', 6.803878210580031e-06], ['(*ref);', 6.803878210580031e-06], ['element;', 6.803878210580031e-06], ['m_parent.m_cf->get_m_var_declfor_reg', 6.803878210580031e-06], ['casted', 6.803878210580031e-06], ['get_tree_cst_for_hsa_operand', 6.803878210580031e-06], ['(!INTEGRAL_TYPE_P', 6.803878210580031e-06], ['BrigOperandCodeRef', 6.803878210580031e-06], ['build_address_operand', 6.803878210580031e-06], ['(brig_inst.base.kind', 6.803878210580031e-06], ['BRIG_KIND_INST_MEM)', 6.803878210580031e-06], ['BRIG_SEGMENT_KERNARG)', 6.803878210580031e-06], ['m_parent.m_cf->m_func_decl;', 6.803878210580031e-06], ['substract', 6.803878210580031e-06], ['uint32_0', 6.803878210580031e-06], ['uint32_1', 6.803878210580031e-06], ['uint32_2', 6.803878210580031e-06], ['local_size);', 6.803878210580031e-06], ['var_offset));', 6.803878210580031e-06], ['BRIG_SEGMENT_ARG)', 6.803878210580031e-06], ['arg_var_decl', 6.803878210580031e-06], ['at.', 6.803878210580031e-06], ['(argument', 6.803878210580031e-06], ['arg_var_decl);', 6.803878210580031e-06], ['(global_var_decl', 6.803878210580031e-06], ['var_name;', 6.803878210580031e-06], ['(var_offset', 6.803878210580031e-06], ['load/store', 6.803878210580031e-06], ['flattened', 6.803878210580031e-06], ['global,', 6.803878210580031e-06], ['readonly', 6.803878210580031e-06], ['is64b_offset', 6.803878210580031e-06], ['addr);', 6.803878210580031e-06], ['*brig_inst,', 6.803878210580031e-06], ['(scalar)', 6.803878210580031e-06], ['(uint16_type_node,', 6.803878210580031e-06], ['scalar_element_size', 6.803878210580031e-06], ['"(%lu', 6.803878210580031e-06], ['%lu).",', 6.803878210580031e-06], ['bytes_left,', 6.803878210580031e-06], ['build_tree_cst_element', 6.803878210580031e-06], ['(scalar_element_type,', 6.803878210580031e-06], ['next_data', 6.803878210580031e-06], ['(brig_type)', 6.803878210580031e-06], ['(brig_type);', 6.803878210580031e-06], ['source_type)', 6.803878210580031e-06], ['(source_type));', 6.803878210580031e-06], ['(element_size', 6.803878210580031e-06], ['FP16', 6.803878210580031e-06], ['conversions,', 6.803878210580031e-06], ['analyze_operands', 6.803878210580031e-06], ['&brig_inst.base;', 6.803878210580031e-06], ['mod->modifier', 6.803878210580031e-06], ['cmp->modifier', 6.803878210580031e-06], ['(brig_inst.type)', 6.803878210580031e-06], ['(brig_inst.opcode);', 6.803878210580031e-06], ['fp32,', 6.803878210580031e-06], ['*cvt_inst', 6.803878210580031e-06], ['(cvt_inst->sourceType);', 6.803878210580031e-06], ['(brig_inst.opcode)', 6.803878210580031e-06], ['(brig_inst.type', 6.803878210580031e-06], ['is_output', 6.803878210580031e-06], ['Always', 6.803878210580031e-06], ['BRIG_OPCODE_UNPACK', 6.803878210580031e-06], ['BRIG_OPCODE_SAD', 6.803878210580031e-06], ['(half_to_float)', 6.803878210580031e-06], ['(operand);', 6.803878210580031e-06], ['(operand)', 6.803878210580031e-06], ['operand_data->kind', 6.803878210580031e-06], ['BRIG_OPCODE_CMOV', 6.803878210580031e-06], ['(operand)));', 6.803878210580031e-06], ['operands.push_back', 6.803878210580031e-06], ['(variable).', 6.803878210580031e-06], ['bitcasts', 6.803878210580031e-06], ['(m_parent.m_cf->is_id_val', 6.803878210580031e-06], ['m_parent.m_cf->id_val', 6.803878210580031e-06], ['input_type', 6.803878210580031e-06], ['(func_decl));', 6.803878210580031e-06], ['(is_fp16)', 6.803878210580031e-06], ['build_f2h_conversion', 6.803878210580031e-06], ['(output_type,', 6.803878210580031e-06], ['output_type,', 6.803878210580031e-06], ['inst_expr;', 6.803878210580031e-06], ['last_assign', 6.803878210580031e-06], ["'register'", 6.803878210580031e-06], ['src_width', 6.803878210580031e-06], ['(input))', 6.803878210580031e-06], ['(input));', 6.803878210580031e-06], ['Visits', 6.803878210580031e-06], ['HANDLER', 6.803878210580031e-06], ['&handler,', 6.803878210580031e-06], ['output);', 6.803878210580031e-06], ['handler.append_statement', 6.803878210580031e-06], ['(operand0));', 6.803878210580031e-06], ['float_type_node,', 6.803878210580031e-06], ['&caller,', 6.803878210580031e-06], ['uint16_type_node,', 6.803878210580031e-06], ['(built_in)),', 6.803878210580031e-06], ['caller.append_statement', 6.803878210580031e-06], ['build_type_variant', 6.803878210580031e-06], ['extends', 6.803878210580031e-06], ['Extend', 6.803878210580031e-06], ['extended.', 6.803878210580031e-06], ['conversion_result;', 6.803878210580031e-06], ['(dest_type),', 6.803878210580031e-06], ['clipped_input);', 6.803878210580031e-06], ['D.1542', 6.803878210580031e-06], ['cast,', 6.803878210580031e-06], ['(n)', 6.803878210580031e-06], ['VIEW_CONVERT_EXPR)', 6.803878210580031e-06], ['int_cst_value', 6.803878210580031e-06], ['BrigDirectiveComment', 6.803878210580031e-06], ['(gccbrig_verbose)', 6.803878210580031e-06], ['BrigDirectiveControl', 6.803878210580031e-06], ['(1));', 6.803878210580031e-06], ['(2));', 6.803878210580031e-06], ['hint', 6.803878210580031e-06], ['sorry', 6.803878210580031e-06], ['&inst->modifier;', 6.803878210580031e-06], ['BrigRound8_t', 6.803878210580031e-06], ['&inst->round;', 6.803878210580031e-06], ['modifier', 6.803878210580031e-06], ['src_is_fp16', 6.803878210580031e-06], ['conv_dst_size', 6.803878210580031e-06], ['type&size', 6.803878210580031e-06], ['(src_is_fp16)', 6.803878210580031e-06], ['(brig_inst->type', 6.803878210580031e-06], ['(input),', 6.803878210580031e-06], ['such.', 6.803878210580031e-06], ['(gccbrig_tree_type_for_hsa_type', 6.803878210580031e-06], ['src_arith_type', 6.803878210580031e-06], ['BRIG_TYPE_F32', 6.803878210580031e-06], ['CONVERT_EXPR', 6.803878210580031e-06], ['(dst_reg_size', 6.803878210580031e-06], ['(!VECTOR_TYPE_P', 6.803878210580031e-06], ['(casted_output));', 6.803878210580031e-06], ['whatever', 6.803878210580031e-06], ['(m_parent.m_cf', 6.803878210580031e-06], ['m_parent.m_cf->m_function_scope_vars.insert', 6.803878210580031e-06], ['m_parent.add_group_variable', 6.803878210580031e-06], ['bytes_consumed', 6.803878210580031e-06], ['("brig:', 6.803878210580031e-06], ['program.', 6.803878210580031e-06], ['step,', 6.803878210580031e-06], ['(m_parent.m_analyzing)', 6.803878210580031e-06], ['(!is_definition', 6.803878210580031e-06], ['restrict_char_ptr', 6.803878210580031e-06], ['(char_type_node),', 6.803878210580031e-06], ['(void_type_node),', 6.803878210580031e-06], ['(char_type_node,', 6.803878210580031e-06], ['TYPE_QUAL_CONST)),', 6.803878210580031e-06], ['(func_name.c_str', 6.803878210580031e-06], ['func_name.size', 6.803878210580031e-06], ['arguments:', 6.803878210580031e-06], ['launcher.', 6.803878210580031e-06], ['region', 6.803878210580031e-06], ['TYPE_ADDR_SPACE', 6.803878210580031e-06], ['(argtype)', 6.803878210580031e-06], ['gccbrig_get_target_addr_space_id', 6.803878210580031e-06], ['functionality', 6.803878210580031e-06], ['ret_type', 6.803878210580031e-06], ['varhandler', 6.803878210580031e-06], ['arg_var', 6.803878210580031e-06], ['PARM_DECL);', 6.803878210580031e-06], ['(arg_var));', 6.803878210580031e-06], ['(arg_decls,', 6.803878210580031e-06], ['arg_offset', 6.803878210580031e-06], ['Delegate', 6.803878210580031e-06], ['restrict_void_ptr);', 6.803878210580031e-06], ['ids', 6.803878210580031e-06], ['context_arg', 6.803878210580031e-06], ['("__context"),', 6.803878210580031e-06], ['context_arg;', 6.803878210580031e-06], ['("__group_base_addr"),', 6.803878210580031e-06], ['bottom', 6.803878210580031e-06], ['group_local_offset_arg', 6.803878210580031e-06], ['private.', 6.803878210580031e-06], ['(ret_value', 6.803878210580031e-06], ['m_parent.m_cf->m_func_decl', 6.803878210580031e-06], ['<<retval>>', 6.803878210580031e-06], ['temp_var', 6.803878210580031e-06], ['tsi_last', 6.803878210580031e-06], ['"tree-cfg.h"', 6.803878210580031e-06], ['brig_to_generic', 6.803878210580031e-06], ['m_has_barriers', 6.803878210580031e-06], ['m_calls_analyzed', 6.803878210580031e-06], ['m_is_wg_function', 6.803878210580031e-06], ['(name.c_str', 6.803878210580031e-06], ['name.size', 6.803878210580031e-06], ['(label_decl)', 6.803878210580031e-06], ['m_func_decl;', 6.803878210580031e-06], ['label_decl;', 6.803878210580031e-06], ['*brigVar,', 6.803878210580031e-06], ['(m_func_decl', 6.803878210580031e-06], ['var_offset_table::const_iterator', 6.803878210580031e-06], ['dispatch', 6.803878210580031e-06], ['WG', 6.803878210580031e-06], ['(char)', 6.803878210580031e-06], ['((int)', 6.803878210580031e-06], ["'x'", 6.803878210580031e-06], ['(m_local_id_vars[i]),', 6.803878210580031e-06], ['cwgz_call', 6.803878210580031e-06], ['(m_cur_wg_size_vars[i]),', 6.803878210580031e-06], ['wgid_call', 6.803878210580031e-06], ['wgsize_call', 6.803878210580031e-06], ['long_long_integer_type_node,', 6.803878210580031e-06], ['DECL_NONLOCAL', 6.803878210580031e-06], ['(sometimes', 6.803878210580031e-06], ['occur', 6.803878210580031e-06], ['reg_size', 6.803878210580031e-06], ['regs_use_index', 6.803878210580031e-06], ['(*reg);', 6.803878210580031e-06], ['info.m_type_refs.begin', 6.803878210580031e-06], ['info.m_type_refs.end', 6.803878210580031e-06], ['max_refs_as_type_count', 6.803878210580031e-06], ['it->first;', 6.803878210580031e-06], ['Drop', 6.803878210580031e-06], ['m_abs_id_vars[dim];', 6.803878210580031e-06], ['m_cur_wg_size_vars[dim];', 6.803878210580031e-06], ['work-items.', 6.803878210580031e-06], ['(ivar)));', 6.803878210580031e-06], ['abs_id_var,', 6.803878210580031e-06], ['loop_body_label);', 6.803878210580031e-06], ['(PREINCREMENT_EXPR,', 6.803878210580031e-06], ['(f);', 6.803878210580031e-06], ['item', 6.803878210580031e-06], ['work-items', 6.803878210580031e-06], ['Emits', 6.803878210580031e-06], ['m_name.substr', 6.803878210580031e-06], ['strstr;', 6.803878210580031e-06], ['1"', 6.803878210580031e-06], ['(ASM_EXPR,', 6.803878210580031e-06], ['strstr.str', 6.803878210580031e-06], ['metadata', 6.803878210580031e-06], ['KernelName', 6.803878210580031e-06], ['(void*', 6.803878210580031e-06], ['group_base_addr)', 6.803878210580031e-06], ['(_KernelName,', 6.803878210580031e-06], ['group_base_addr);', 6.803878210580031e-06], ['function:', 6.803878210580031e-06], ['sees', 6.803878210580031e-06], ['(launcher),', 6.803878210580031e-06], ['push_struct_function', 6.803878210580031e-06], ['push_cfun', 6.803878210580031e-06], ['phsail_launch_kernel_call', 6.803878210580031e-06], ['kernel_func_ptr,', 6.803878210580031e-06], ['context_arg,', 6.803878210580031e-06], ['group_base_addr_arg,', 6.803878210580031e-06], ['points.', 6.803878210580031e-06], ['entry;', 6.803878210580031e-06], ['tsi_link_before', 6.803878210580031e-06], ['append_return_stmt', 6.803878210580031e-06], ['WG.', 6.803878210580031e-06], ['(m_has_allocas)', 6.803878210580031e-06], ['create_alloca_frame', 6.803878210580031e-06], ['(stmts)', 6.803878210580031e-06], ['Empty', 6.803878210580031e-06], ['(RETURN_EXPR,', 6.803878210580031e-06], ["builtin's", 6.803878210580031e-06], ['(needs_workitem_context_data', 6.803878210580031e-06], ['arg_type_chain', 6.803878210580031e-06], ['(arg_type_chain);', 6.803878210580031e-06], ['operand_types.push_back', 6.803878210580031e-06], ['(4,', 6.803878210580031e-06], ['call_operands.at', 6.803878210580031e-06], ['fnptr', 6.803878210580031e-06], ['build_call_array', 6.803878210580031e-06], ['fnptr,', 6.803878210580031e-06], ['black', 6.803878210580031e-06], ['id0', 6.803878210580031e-06], ['uint32_0);', 6.803878210580031e-06], ['id1', 6.803878210580031e-06], ['uint32_1);', 6.803878210580031e-06], ['id2', 6.803878210580031e-06], ['id2_x_max0_x_max1', 6.803878210580031e-06], ['max0);', 6.803878210580031e-06], ['z_x_wgsx_wgsy', 6.803878210580031e-06], ['wg_size_x);', 6.803878210580031e-06], ['[dim];', 6.803878210580031e-06], ['brig_opcode)', 6.803878210580031e-06], ['BRIG_OPCODE_CURRENTWORKGROUPSIZE:', 6.803878210580031e-06], ['BRIG_OPCODE_WORKITEMFLATID:', 6.803878210580031e-06], ['BRIG_OPCODE_WORKITEMID:', 6.803878210580031e-06], ['BRIG_OPCODE_WORKGROUPID:', 6.803878210580031e-06], ['BRIG_OPCODE_WORKGROUPSIZE:', 6.803878210580031e-06], ['BRIG_OPCODE_WORKITEMFLATABSID:', 6.803878210580031e-06], ['builtin,', 6.803878210580031e-06], ['opcodes', 6.803878210580031e-06], ['BRIG_OPCODE_BORROW', 6.803878210580031e-06], ['BRIG_OPCODE_CARRY', 6.803878210580031e-06], ['BRIG_OPCODE_BITINSERT)', 6.803878210580031e-06], ['BRIG_TYPE_S32)', 6.803878210580031e-06], ['BRIG_TYPE_S64)', 6.803878210580031e-06], ['BRIG_OPCODE_FLOOR:', 6.803878210580031e-06], ['BRIG_OPCODE_CEIL:', 6.803878210580031e-06], ['BRIG_OPCODE_SQRT:', 6.803878210580031e-06], ['BRIG_OPCODE_NSQRT:', 6.803878210580031e-06], ['BRIG_OPCODE_RINT:', 6.803878210580031e-06], ['BRIG_OPCODE_TRUNC:', 6.803878210580031e-06], ['BRIG_OPCODE_COPYSIGN:', 6.803878210580031e-06], ['BUILT_IN_COPYSIGN);', 6.803878210580031e-06], ['BRIG_OPCODE_NSIN:', 6.803878210580031e-06], ['BRIG_OPCODE_NLOG2:', 6.803878210580031e-06], ['BRIG_OPCODE_NEXP2:', 6.803878210580031e-06], ['BRIG_OPCODE_FMA:', 6.803878210580031e-06], ['BRIG_OPCODE_NFMA:', 6.803878210580031e-06], ['BRIG_OPCODE_NCOS:', 6.803878210580031e-06], ['BRIG_OPCODE_POPCOUNT:', 6.803878210580031e-06], ['BRIG_TYPE_S32', 6.803878210580031e-06], ['builtin_map::const_iterator', 6.803878210580031e-06], ['brig_type));', 6.803878210580031e-06], ['promoted', 6.803878210580031e-06], ['built-in.', 6.803878210580031e-06], ['vectorized', 6.803878210580031e-06], ['builtin;', 6.803878210580031e-06], ['&elements)', 6.803878210580031e-06], ['BRIG_OPCODE_DEBUGTRAP:', 6.803878210580031e-06], ['TRUNC_DIV_EXPR;', 6.803878210580031e-06], ['NEGATE_EXPR;', 6.803878210580031e-06], ['BIT_NOT_EXPR;', 6.803878210580031e-06], ['MODIFY_EXPR;', 6.803878210580031e-06], ['BRIG_OPCODE_ST:', 6.803878210580031e-06], ['BRIG_OPCODE_BR:', 6.803878210580031e-06], ['BRIG_TYPE_U64', 6.803878210580031e-06], ['TREE_LIST;', 6.803878210580031e-06], ['m_id_val_defs.end())', 6.803878210580031e-06], ['REG_VAR', 6.803878210580031e-06], ['reg_var)', 6.803878210580031e-06], ['BB,', 6.803878210580031e-06], ['jump,', 6.803878210580031e-06], ['basic_handler', 6.803878210580031e-06], ['supporting', 6.803878210580031e-06], ['restrict', 6.803878210580031e-06], ['solution', 6.803878210580031e-06], ['gcc.', 6.803878210580031e-06], ['BrigInstLane', 6.803878210580031e-06], ['use_identity', 6.803878210580031e-06], ['data)', 6.803878210580031e-06], ['is_store', 6.803878210580031e-06], ['BRIG_OPCODE_ST;', 6.803878210580031e-06], ['(data)', 6.803878210580031e-06], ['8);', 6.803878210580031e-06], ['reads', 6.803878210580031e-06], ['mem_ref);', 6.803878210580031e-06], ['(mem_inst->align', 6.803878210580031e-06], ['inputs;', 6.803878210580031e-06], ['inputs.push_back', 6.803878210580031e-06], ['address_offset', 6.803878210580031e-06], ['build_mem_access', 6.803878210580031e-06], ['required.");', 6.803878210580031e-06], ['conformance', 6.803878210580031e-06], ['suite', 6.803878210580031e-06], ['BRIGs', 6.803878210580031e-06], ['&inst_base', 6.803878210580031e-06], ['(inst_base);', 6.803878210580031e-06], ['BRIG_OPCODE_LDQUEUEWRITEINDEX', 6.803878210580031e-06], ['BRIG_OPCODE_STQUEUEWRITEINDEX', 6.803878210580031e-06], ['operands[3]);', 6.803878210580031e-06], ['m_parent.m_cf->m_group_base_arg),', 6.803878210580031e-06], ['m_parent.m_cf->m_private_base_arg),', 6.803878210580031e-06], ['(!(inst.modifier', 6.803878210580031e-06], ['BRIG_SEG_CVT_NONULL))', 6.803878210580031e-06], ['segments,', 6.803878210580031e-06], ['flat/global.', 6.803878210580031e-06], ['-1),', 6.803878210580031e-06], ['null_check', 6.803878210580031e-06], ['null_check;', 6.803878210580031e-06], ['BRIG_SEGMENT_PRIVATE)', 6.803878210580031e-06], ['BrigInstSeg', 6.803878210580031e-06], ['BrigInstSignal', 6.803878210580031e-06], ['<iostream>', 6.803878210580031e-06], ['(true),', 6.803878210580031e-06], ['m_globals', 6.803878210580031e-06], ['preferred', 6.803878210580031e-06], ['header.', 6.803878210580031e-06], ['(TDI_original,', 6.803878210580031e-06], ['generation.', 6.803878210580031e-06], ['*handler;', 6.803878210580031e-06], ['sections', 6.803878210580031e-06], ['m_data', 6.803878210580031e-06], ['m_code', 6.803878210580031e-06], ['m_operand', 6.803878210580031e-06], ['*mheader', 6.803878210580031e-06], ['sections.', 6.803878210580031e-06], ['(uint32_t', 6.803878210580031e-06], ['sec', 6.803878210580031e-06], ['(m_brig', 6.803878210580031e-06], ['(m_data', 6.803878210580031e-06], ['(m_operand', 6.803878210580031e-06], ['collecting', 6.803878210580031e-06], ['experimental', 6.803878210580031e-06], ['PRM', 6.803878210580031e-06], ['*brig_blob)', 6.803878210580031e-06], ['find_brig_sections', 6.803878210580031e-06], ['var_handler', 6.803878210580031e-06], ['brig_directive_fbarrier_handler', 6.803878210580031e-06], ['fbar_handler', 6.803878210580031e-06], ['brig_directive_function_handler', 6.803878210580031e-06], ['func_handler', 6.803878210580031e-06], ['brig_directive_module_handler', 6.803878210580031e-06], ['module_handler', 6.803878210580031e-06], ['skipped_handler', 6.803878210580031e-06], ['*csection_header', 6.803878210580031e-06], ['m_code;', 6.803878210580031e-06], ['handlers[]', 6.803878210580031e-06], ['{{BRIG_KIND_INST_BASIC,', 6.803878210580031e-06], ['{BRIG_KIND_INST_MOD,', 6.803878210580031e-06], ['{BRIG_KIND_INST_CMP,', 6.803878210580031e-06], ['{BRIG_KIND_INST_MEM,', 6.803878210580031e-06], ['{BRIG_KIND_INST_CVT,', 6.803878210580031e-06], ['{BRIG_KIND_INST_SEG_CVT,', 6.803878210580031e-06], ['{BRIG_KIND_INST_SEG,', 6.803878210580031e-06], ['{BRIG_KIND_INST_ADDR,', 6.803878210580031e-06], ['{BRIG_KIND_INST_SOURCE_TYPE,', 6.803878210580031e-06], ['{BRIG_KIND_INST_ATOMIC,', 6.803878210580031e-06], ['{BRIG_KIND_INST_SIGNAL,', 6.803878210580031e-06], ['{BRIG_KIND_INST_BR,', 6.803878210580031e-06], ['{BRIG_KIND_INST_LANE,', 6.803878210580031e-06], ['{BRIG_KIND_INST_QUEUE,', 6.803878210580031e-06], ['{BRIG_KIND_DIRECTIVE_VARIABLE,', 6.803878210580031e-06], ['&var_handler},', 6.803878210580031e-06], ['{BRIG_KIND_DIRECTIVE_FBARRIER,', 6.803878210580031e-06], ['&fbar_handler},', 6.803878210580031e-06], ['{BRIG_KIND_DIRECTIVE_KERNEL,', 6.803878210580031e-06], ['{BRIG_KIND_DIRECTIVE_MODULE,', 6.803878210580031e-06], ['&module_handler},', 6.803878210580031e-06], ['{BRIG_KIND_DIRECTIVE_FUNCTION,', 6.803878210580031e-06], ['csection_header->headerByteCount;', 6.803878210580031e-06], ['m_code_size;)', 6.803878210580031e-06], ['*entry', 6.803878210580031e-06], ['*handler', 6.803878210580031e-06], ['m_cf->m_brig_def->nextModuleEntry)', 6.803878210580031e-06], ['ended.', 6.803878210580031e-06], ['holder', 6.803878210580031e-06], ['m_cf->m_local_group_variables.size', 6.803878210580031e-06], ['(handlers)', 6.803878210580031e-06], ['(code_entry_handler_info);', 6.803878210580031e-06], ['(handlers[i].kind', 6.803878210580031e-06], ['entry->kind)', 6.803878210580031e-06], ['handlers[i].handler;', 6.803878210580031e-06], ['(*handler)', 6.803878210580031e-06], ['scan', 6.803878210580031e-06], ['&seg_inst_handler},', 6.803878210580031e-06], ['&copy_move_inst_handler},', 6.803878210580031e-06], ['are.', 6.803878210580031e-06], ['&arg_block_handler},', 6.803878210580031e-06], ['locations', 6.803878210580031e-06], ['pragmas', 6.803878210580031e-06], ['g;', 6.803878210580031e-06], ['(m_globals);', 6.803878210580031e-06], ['func_decl;', 6.803878210580031e-06], ['looked', 6.803878210580031e-06], ['(host_def_var)', 6.803878210580031e-06], ['(var_name.c_str', 6.803878210580031e-06], ['(ptr_var);', 6.803878210580031e-06], ['Mangle', 6.803878210580031e-06], ['side_effects;', 6.803878210580031e-06], ['(TREE_CODE_CLASS', 6.803878210580031e-06], ['(code);', 6.803878210580031e-06], ['side_effects', 6.803878210580031e-06], ['SOURCE', 6.803878210580031e-06], ['mismatched', 6.803878210580031e-06], ['destination_type,', 6.803878210580031e-06], ['destination_type', 6.803878210580031e-06], ['(source)', 6.803878210580031e-06], ['(source);', 6.803878210580031e-06], ['source;', 6.803878210580031e-06], ['dst_size', 6.803878210580031e-06], ['get_scalar_unsigned_int_type', 6.803878210580031e-06], ['(IDENTIFIER_POINTER', 6.803878210580031e-06], ['*>::iterator', 6.803878210580031e-06], ['book', 6.803878210580031e-06], ['segment.', 6.803878210580031e-06], ['m_cf->m_func_decl', 6.803878210580031e-06], ['(m_cf);', 6.803878210580031e-06], ['pop_cfun', 6.803878210580031e-06], ['Initializes', 6.803878210580031e-06], ['(f)', 6.803878210580031e-06], ['per-work-item', 6.803878210580031e-06], ['per_var_padding;', 6.803878210580031e-06], ['m_next_private_offset;', 6.803878210580031e-06], ['size_t>::const_iterator', 6.803878210580031e-06], ['m_private_data_sizes.find', 6.803878210580031e-06], ['m_private_data_sizes.end', 6.803878210580031e-06], ['executing', 6.803878210580031e-06], ['NARGS', 6.803878210580031e-06], ['(rettype,', 6.803878210580031e-06], ['decl_call', 6.803878210580031e-06], ['brig_function->m_func_decl', 6.803878210580031e-06], ['(decl_call,', 6.803878210580031e-06], ['rounded', 6.803878210580031e-06], ['f->m_descriptor.kernarg_segment_size', 6.803878210580031e-06], ['enabled', 6.803878210580031e-06], ['-%s\\n\\n",', 6.803878210580031e-06], ['dump_flag_name', 6.803878210580031e-06], ['(TDI_original));', 6.803878210580031e-06], ['print_generic_decl', 6.803878210580031e-06], ['global;', 6.803878210580031e-06], ['wrapup_global_declarations', 6.803878210580031e-06], ['ORIGINAL_TYPE.', 6.803878210580031e-06], ['original_type)', 6.803878210580031e-06], ['(original_type))', 6.803878210580031e-06], ['poly_uint64', 6.803878210580031e-06], ['TYPE_VECTOR_SUBPARTS', 6.803878210580031e-06], ['(original_type)', 6.803878210580031e-06], ['optimizations.', 6.803878210580031e-06], ['(!lookup_attribute', 6.803878210580031e-06], ['#GCC', 6.803878210580031e-06], ['invoked', 6.803878210580031e-06], ['autoconf-generated', 6.803878210580031e-06], ['updating', 6.803878210580031e-06], ['switches', 6.803878210580031e-06], ['variables:', 6.803878210580031e-06], ['"yes"', 6.803878210580031e-06], ['presence', 6.803878210580031e-06], ['non-standard', 6.803878210580031e-06], ['gnu', 6.803878210580031e-06], ['linker.', 6.803878210580031e-06], ['helps', 6.803878210580031e-06], ['prefixing', 6.803878210580031e-06], ['tm_p_file', 6.803878210580031e-06], ['hook', 6.803878210580031e-06], ['extra_headers', 6.803878210580031e-06], ['prefixed', 6.803878210580031e-06], ['include_next.', 6.803878210580031e-06], ['machine.', 6.803878210580031e-06], ['xm_file', 6.803878210580031e-06], ['collect2', 6.803878210580031e-06], ['dir', 6.803878210580031e-06], ['`dirname', 6.803878210580031e-06], ['configure_default_options', 6.803878210580031e-06], ['formatting', 6.803878210580031e-06], ['outgoing', 6.803878210580031e-06], ['extra_headers=', 6.803878210580031e-06], ['target_has_targetm_common=yes', 6.803878210580031e-06], ['pattern.', 6.803878210580031e-06], ['entry.', 6.803878210580031e-06], ['arm_neon.h', 6.803878210580031e-06], ['alpha*-*-*)', 6.803878210580031e-06], ['am33_2.0-*-linux*)', 6.803878210580031e-06], ['arc*-*-*)', 6.803878210580031e-06], ['avr-*-*)', 6.803878210580031e-06], ['bfin*-*)', 6.803878210580031e-06], ['extra_headers=math-68881.h', 6.803878210580031e-06], ['m68k/m68k-tables.opt"', 6.803878210580031e-06], ['cpu_type=i386', 6.803878210580031e-06], ['c_target_objs="i386-c.o"', 6.803878210580031e-06], ['cxx_target_objs="i386-c.o"', 6.803878210580031e-06], ['d_target_objs="i386-d.o"', 6.803878210580031e-06], ['extra_objs="x86-tune-sched.o', 6.803878210580031e-06], ['x86-tune-sched-bd.o', 6.803878210580031e-06], ['x86-tune-sched-atom.o', 6.803878210580031e-06], ['x86-tune-sched-core.o"', 6.803878210580031e-06], ['extra_headers="cpuid.h', 6.803878210580031e-06], ['mm3dnow.h', 6.803878210580031e-06], ['emmintrin.h', 6.803878210580031e-06], ['ammintrin.h', 6.803878210580031e-06], ['smmintrin.h', 6.803878210580031e-06], ['nmmintrin.h', 6.803878210580031e-06], ['bmmintrin.h', 6.803878210580031e-06], ['fma4intrin.h', 6.803878210580031e-06], ['wmmintrin.h', 6.803878210580031e-06], ['immintrin.h', 6.803878210580031e-06], ['x86intrin.h', 6.803878210580031e-06], ['avxintrin.h', 6.803878210580031e-06], ['xopintrin.h', 6.803878210580031e-06], ['ia32intrin.h', 6.803878210580031e-06], ['cross-stdarg.h', 6.803878210580031e-06], ['lwpintrin.h', 6.803878210580031e-06], ['popcntintrin.h', 6.803878210580031e-06], ['lzcntintrin.h', 6.803878210580031e-06], ['bmiintrin.h', 6.803878210580031e-06], ['tbmintrin.h', 6.803878210580031e-06], ['avx2intrin.h', 6.803878210580031e-06], ['avx512fintrin.h', 6.803878210580031e-06], ['fmaintrin.h', 6.803878210580031e-06], ['f16cintrin.h', 6.803878210580031e-06], ['rtmintrin.h', 6.803878210580031e-06], ['xtestintrin.h', 6.803878210580031e-06], ['rdseedintrin.h', 6.803878210580031e-06], ['prfchwintrin.h', 6.803878210580031e-06], ['adxintrin.h', 6.803878210580031e-06], ['fxsrintrin.h', 6.803878210580031e-06], ['xsaveintrin.h', 6.803878210580031e-06], ['xsaveoptintrin.h', 6.803878210580031e-06], ['avx512cdintrin.h', 6.803878210580031e-06], ['avx512erintrin.h', 6.803878210580031e-06], ['avx512pfintrin.h', 6.803878210580031e-06], ['shaintrin.h', 6.803878210580031e-06], ['clflushoptintrin.h', 6.803878210580031e-06], ['xsavecintrin.h', 6.803878210580031e-06], ['xsavesintrin.h', 6.803878210580031e-06], ['avx512dqintrin.h', 6.803878210580031e-06], ['avx512bwintrin.h', 6.803878210580031e-06], ['avx512vlintrin.h', 6.803878210580031e-06], ['avx512vlbwintrin.h', 6.803878210580031e-06], ['avx512vldqintrin.h', 6.803878210580031e-06], ['avx512ifmaintrin.h', 6.803878210580031e-06], ['avx512ifmavlintrin.h', 6.803878210580031e-06], ['avx512vbmiintrin.h', 6.803878210580031e-06], ['avx512vbmivlintrin.h', 6.803878210580031e-06], ['avx5124fmapsintrin.h', 6.803878210580031e-06], ['avx5124vnniwintrin.h', 6.803878210580031e-06], ['avx512vpopcntdqintrin.h', 6.803878210580031e-06], ['clwbintrin.h', 6.803878210580031e-06], ['mwaitxintrin.h', 6.803878210580031e-06], ['clzerointrin.h', 6.803878210580031e-06], ['pkuintrin.h', 6.803878210580031e-06], ['sgxintrin.h', 6.803878210580031e-06], ['cetintrin.h', 6.803878210580031e-06], ['gfniintrin.h', 6.803878210580031e-06], ['cet.h', 6.803878210580031e-06], ['avx512vbmi2intrin.h', 6.803878210580031e-06], ['avx512vbmi2vlintrin.h', 6.803878210580031e-06], ['avx512vnniintrin.h', 6.803878210580031e-06], ['avx512vnnivlintrin.h', 6.803878210580031e-06], ['vaesintrin.h', 6.803878210580031e-06], ['vpclmulqdqintrin.h', 6.803878210580031e-06], ['avx512vpopcntdqvlintrin.h', 6.803878210580031e-06], ['avx512bitalgintrin.h', 6.803878210580031e-06], ['pconfigintrin.h', 6.803878210580031e-06], ['wbnoinvdintrin.h', 6.803878210580031e-06], ['movdirintrin.h', 6.803878210580031e-06], ['waitpkgintrin.h', 6.803878210580031e-06], ['cldemoteintrin.h"', 6.803878210580031e-06], ['nds32*-*-linux*)', 6.803878210580031e-06], ['nds32*-*-elf*)', 6.803878210580031e-06], ['nios2-*-*)', 6.803878210580031e-06], ['or1k*-*-*)', 6.803878210580031e-06], ['extra_objs="rs6000-string.o', 6.803878210580031e-06], ['rs6000-p8swap.o"', 6.803878210580031e-06], ['htmintrin.h', 6.803878210580031e-06], ['vec_types.h', 6.803878210580031e-06], ['cpu_is_64bit=yes', 6.803878210580031e-06], ['rs6000/rs6000-tables.opt"', 6.803878210580031e-06], ['s390*-*-*)', 6.803878210580031e-06], ['tic6x-*-*)', 6.803878210580031e-06], ['arm/aarch-common-protos.h"', 6.803878210580031e-06], ['tm_file="aarch64/biarchilp32.h', 6.803878210580031e-06], ['tm_file="aarch64/biarchlp64.h', 6.803878210580031e-06], ['ilp32)', 6.803878210580031e-06], ['lp64)', 6.803878210580031e-06], ['"This', 6.803878210580031e-06], ['"x$enable_cld"', 6.803878210580031e-06], ['USE_IX86_CLD=1"', 6.803878210580031e-06], ['"x$enable_frame_pointer"', 6.803878210580031e-06], ['USE_IX86_FRAME_POINTER=1"', 6.803878210580031e-06], ['tm_file="i386/biarchx32.h', 6.803878210580031e-06], ['tm_file="i386/biarch64.h', 6.803878210580031e-06], ['x32', 6.803878210580031e-06], ['--with-arch=.', 6.803878210580031e-06], ['i386', 6.803878210580031e-06], ['atom', 6.803878210580031e-06], ['darwin9.h', 6.803878210580031e-06], ['darwin-c.o"', 6.803878210580031e-06], ['target_has_targetcm=yes', 6.803878210580031e-06], ['rpath.opt', 6.803878210580031e-06], ['Later', 6.803878210580031e-06], ['freebsd.h', 6.803878210580031e-06], ['setting.', 6.803878210580031e-06], ['FreeBSD', 6.803878210580031e-06], ['fbsd_tm_file="${fbsd_tm_file}', 6.803878210580031e-06], [':;;', 6.803878210580031e-06], ['*-*-linux*', 6.803878210580031e-06], ['*-*-kfreebsd*-gnu', 6.803878210580031e-06], ['*-*-kopensolaris*-gnu)', 6.803878210580031e-06], ['gnu-user.opt"', 6.803878210580031e-06], ['Linux', 6.803878210580031e-06], ['selection', 6.803878210580031e-06], ['uclibc', 6.803878210580031e-06], ['usable', 6.803878210580031e-06], ['*-*-*android*)', 6.803878210580031e-06], ['*-*-*uclibc*)', 6.803878210580031e-06], ['DEFAULT_LIBC=LIBC_UCLIBC"', 6.803878210580031e-06], ['DEFAULT_LIBC=LIBC_GLIBC"', 6.803878210580031e-06], ['provided.', 6.803878210580031e-06], ['glibc-c.o"', 6.803878210580031e-06], ['*-*-rtems*)', 6.803878210580031e-06], ['Solaris', 6.803878210580031e-06], ['${sol2_tm_file_tail}"', 6.803878210580031e-06], ['wrappers', 6.803878210580031e-06], ['extra_objs="$extra_objs', 6.803878210580031e-06], ['fuchsia.h"', 6.803878210580031e-06], ['aarch64_be-*)', 6.803878210580031e-06], ['aarch64_multilibs="${with_multilib_list}"', 6.803878210580031e-06], ['"$aarch64_multilibs"', 6.803878210580031e-06], ['aarch64_multilibs="lp64,ilp32"', 6.803878210580031e-06], ['aarch64_multilibs=`echo', 6.803878210580031e-06], ['$aarch64_multilibs', 6.803878210580031e-06], ['aarch64_multilib', 6.803878210580031e-06], ['${aarch64_multilibs};', 6.803878210580031e-06], ['${aarch64_multilib}', 6.803878210580031e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${aarch64_multilib}"', 6.803878210580031e-06], ['"--with-multilib-list=${aarch64_multilib}', 6.803878210580031e-06], ['aarch64/t-aarch64', 6.803878210580031e-06], ['TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1"', 6.803878210580031e-06], ['netbsd-elf.opt', 6.803878210580031e-06], ['vms/vms.h', 6.803878210580031e-06], ['tm_file="arc/arc-arch.h', 6.803878210580031e-06], ['arc/t-arc"', 6.803878210580031e-06], ['extra_gcc_objs="driver-arc.o"', 6.803878210580031e-06], ['TARGET_CPU_BUILD=PROCESSOR_$with_cpu"', 6.803878210580031e-06], ['arc*be-*-*', 6.803878210580031e-06], ['arc*eb-*-*)', 6.803878210580031e-06], ['big*)', 6.803878210580031e-06], ['tm_file="arc/big.h', 6.803878210580031e-06], ['Base', 6.803878210580031e-06], ['BPABI', 6.803878210580031e-06], ['$fbsd_major', 6.803878210580031e-06], ['-ge', 6.803878210580031e-06], ['11;', 6.803878210580031e-06], ['TARGET_FREEBSD_ARM_HARD_FLOAT=1"', 6.803878210580031e-06], ['target_cpu_cname="generic-armv7-a"', 6.803878210580031e-06], ['with_tls=${with_tls:-gnu}', 6.803878210580031e-06], ['arm/linux-gas.h', 6.803878210580031e-06], ['arm/t-arm-elf', 6.803878210580031e-06], ['target_cpu_cname="arm10tdmi"', 6.803878210580031e-06], ['arm/bpabi.h"', 6.803878210580031e-06], ['arm*-*-fuchsia*)', 6.803878210580031e-06], ['bfin/elf.h"', 6.803878210580031e-06], ['target_cpu_default=32', 6.803878210580031e-06], ['cris/elf.opt"', 6.803878210580031e-06], ['csky-*-*)', 6.803878210580031e-06], ['$target"', 6.803878210580031e-06], ['epiphany-*-rtems*)', 6.803878210580031e-06], ['mkoffload\\$(exeext)"', 6.803878210580031e-06], ['tm_file="h8300/h8300.h', 6.803878210580031e-06], ['target_cpu_default="MASK_PA_11|MASK_PA_20"', 6.803878210580031e-06], ['tm_file="pa/pa64-start.h', 6.803878210580031e-06], ['pa/pa-linux.h', 6.803878210580031e-06], ['pa/pa64-regs.h', 6.803878210580031e-06], ['pa/t-pa', 6.803878210580031e-06], ['pa/t-linux"', 6.803878210580031e-06], ['hppa1.1-*-*', 6.803878210580031e-06], ['hppa2*-*-*)', 6.803878210580031e-06], ['pa/som.h', 6.803878210580031e-06], ['pa/t-dce-thr"', 6.803878210580031e-06], ['"x$with_dwarf2"', 6.803878210580031e-06], ['"Warning:', 6.803878210580031e-06], ['dwarf2', 6.803878210580031e-06], ['--with-dwarf2', 6.803878210580031e-06], ['ignored"', 6.803878210580031e-06], ['dwarf2=no', 6.803878210580031e-06], ['target_cpu_default="${target_cpu_default}|MASK_GNU_LD"', 6.803878210580031e-06], ['pa/pa-hpux1010.h', 6.803878210580031e-06], ['pa/pa-hpux11.h"', 6.803878210580031e-06], ['*-*-hpux11.[12]*)', 6.803878210580031e-06], ['pa/pa-hpux1111.opt"', 6.803878210580031e-06], ['*-*-hpux11.[3-9]*)', 6.803878210580031e-06], ['pa/pa-hpux1131.opt"', 6.803878210580031e-06], ['pa/pa-hpux1010.opt', 6.803878210580031e-06], ['x${enable_threads}', 6.803878210580031e-06], ['*-*-hpux11.[01]*)', 6.803878210580031e-06], ['*-*-hpux11.[23]*)', 6.803878210580031e-06], ['with_cpu=${with_cpu:-core2}', 6.803878210580031e-06], ['x86_64-*-darwin*)', 6.803878210580031e-06], ['${cpu_type}/t-darwin64', 6.803878210580031e-06], ['${cpu_type}/darwin64.h"', 6.803878210580031e-06], ['i386/x86-64.h"', 6.803878210580031e-06], ['i386/rtemself.h', 6.803878210580031e-06], ['dragonfly.h', 6.803878210580031e-06], ['dragonfly-stdint.h', 6.803878210580031e-06], ['i386/dragonfly.h"', 6.803878210580031e-06], ['i386/t-crtstuff"', 6.803878210580031e-06], ['x86_64-*-dragonfly*)', 6.803878210580031e-06], ['x86_64-*-freebsd*)', 6.803878210580031e-06], ['i386/openbsdelf.h"', 6.803878210580031e-06], ['i[34567]86-*-kfreebsd*-gnu', 6.803878210580031e-06], ['i[34567]86-*-kopensolaris*-gnu)', 6.803878210580031e-06], ['i386/linux64.h"', 6.803878210580031e-06], ['i386/t-linux64"', 6.803878210580031e-06], ['x86_multilibs="${with_multilib_list}"', 6.803878210580031e-06], ['"$x86_multilibs"', 6.803878210580031e-06], ['x86_multilibs="m64,m32"', 6.803878210580031e-06], ['x86_multilibs=`echo', 6.803878210580031e-06], ['$x86_multilibs', 6.803878210580031e-06], ['x86_multilib', 6.803878210580031e-06], ['${x86_multilibs};', 6.803878210580031e-06], ['${x86_multilib}', 6.803878210580031e-06], ['m32', 6.803878210580031e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${x86_multilib}"', 6.803878210580031e-06], ['"--with-multilib-list=${x86_with_multilib}', 6.803878210580031e-06], ['kfreebsd-gnu.h', 6.803878210580031e-06], ['i[34567]86-*-gnu*)', 6.803878210580031e-06], ['lynx.h"', 6.803878210580031e-06], ['lynx.opt"', 6.803878210580031e-06], ['thread_file=lynx', 6.803878210580031e-06], ['i[34567]86-*-solaris2*', 6.803878210580031e-06], ['x86_64-*-solaris2.1[0-9]*)', 6.803878210580031e-06], ['$x86_64_archs"', 6.803878210580031e-06], ['x86_64-*)', 6.803878210580031e-06], ['*-vxworksae*)', 6.803878210580031e-06], ['i386/cygming.h', 6.803878210580031e-06], ['i386/cygwin.h', 6.803878210580031e-06], ['i386/cygwin-stdint.h"', 6.803878210580031e-06], ['xm_file=i386/xm-cygwin.h', 6.803878210580031e-06], ['i386/cygwin.opt"', 6.803878210580031e-06], ['x86_64-*-cygwin*)', 6.803878210580031e-06], ['i[34567]86-*-mingw*', 6.803878210580031e-06], ['x86_64-*-mingw*)', 6.803878210580031e-06], ['winnt-c.o"', 6.803878210580031e-06], ['target_cpu_default="${target_cpu_default}|MASK_GNU_AS"', 6.803878210580031e-06], ['target_cpu_default="MASK_GNU_AS|MASK_GNU_LD"', 6.803878210580031e-06], ['ia64/t-ia64"', 6.803878210580031e-06], ['ia64*-*-linux*)', 6.803878210580031e-06], ['m32r/little.h', 6.803878210580031e-06], ['m32r/linux.h"', 6.803878210580031e-06], ['m32r/t-linux', 6.803878210580031e-06], ['m68k/m68k-none.h', 6.803878210580031e-06], ['m68k/m68kelf.h', 6.803878210580031e-06], ['m68k/m68kemb.h', 6.803878210580031e-06], ['tmake_file="m68k/t-floatlib', 6.803878210580031e-06], ['m68k/t-m68kbare', 6.803878210580031e-06], ['multilibs', 6.803878210580031e-06], ['CHAR_FAST8=1', 6.803878210580031e-06], ['SHORT_FAST16=1"', 6.803878210580031e-06], ['Motorola', 6.803878210580031e-06], ['m68k/linux.h', 6.803878210580031e-06], ['m68k/t-floatlib', 6.803878210580031e-06], ['xno)', 6.803878210580031e-06], ['xyes)', 6.803878210580031e-06], ['enable_multilib";', 6.803878210580031e-06], ['riscv/t-riscv"', 6.803878210580031e-06], ['mips/linux-common.h', 6.803878210580031e-06], ['mips/mti-linux.h"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=37', 6.803878210580031e-06], ['with_arch_32="mips32r6"', 6.803878210580031e-06], ['with_arch_64="mips64r6"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=33', 6.803878210580031e-06], ['with_arch_32="mips32r2"', 6.803878210580031e-06], ['with_arch_64="mips64r2"', 6.803878210580031e-06], ['mips*-*-linux*)', 6.803878210580031e-06], ['mips/sde.h', 6.803878210580031e-06], ['mips/mti-elf.h"', 6.803878210580031e-06], ['mipsisa64r6*)', 6.803878210580031e-06], ['mipsisa64r2*)', 6.803878210580031e-06], ['mipsisa64*)', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=37"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=33"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=32"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=69"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=65"', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=64"', 6.803878210580031e-06], ['mips/elfoabi.h"', 6.803878210580031e-06], ['*-*-elf*)', 6.803878210580031e-06], ['MIPS_ISA_DEFAULT=64', 6.803878210580031e-06], ['x$stabs', 6.803878210580031e-06], ['dbx.h"', 6.803878210580031e-06], ['nds32*-*-*)', 6.803878210580031e-06], ['nds32/nds32_intrinsic.h"', 6.803878210580031e-06], ['"--with-multilib-list=${with_multilib_list}', 6.803878210580031e-06], ['extra_headers=altivec.h', 6.803878210580031e-06], ['rs6000/t-ppcos', 6.803878210580031e-06], ['powerpc64*)', 6.803878210580031e-06], ['rs6000/default64.h', 6.803878210580031e-06], ['rs6000/eabialtivec.h"', 6.803878210580031e-06], ['rs6000/t-ppcendian', 6.803878210580031e-06], ['rs6000/eabisim.h"', 6.803878210580031e-06], ['rs6000/eabi.h"', 6.803878210580031e-06], ['tm_file="rs6000/biarch64.h', 6.803878210580031e-06], ['rs6000/sysv4.opt', 6.803878210580031e-06], ['powerpc*le-*-*)', 6.803878210580031e-06], ['rs6000/sysv4le.h"', 6.803878210580031e-06], ['maybe_biarch=yes', 6.803878210580031e-06], ['rs6000/linux64.h', 6.803878210580031e-06], ['rs6000/t-linux"', 6.803878210580031e-06], ['rs6000/vxworks.h', 6.803878210580031e-06], ['rs6000/sysv4le.h', 6.803878210580031e-06], ['s390/linux.h"', 6.803878210580031e-06], ['tm_file="s390/s390x.h', 6.803878210580031e-06], ['s390/s390.h', 6.803878210580031e-06], ['md_file=s390/s390.md', 6.803878210580031e-06], ['extra_modes=s390/s390-modes.def', 6.803878210580031e-06], ['out_file=s390/s390.c', 6.803878210580031e-06], ['with_endian=big,little', 6.803878210580031e-06], ['sh*-*-linux*)', 6.803878210580031e-06], ['sh*-*-netbsd*)', 6.803878210580031e-06], ['x$with_libgloss', 6.803878210580031e-06], ['sh/newlib.h"', 6.803878210580031e-06], ['sh/embed-elf.h"', 6.803878210580031e-06], ['`echo', 6.803878210580031e-06], ['sh_cpu_target=sh4a-nofpu', 6.803878210580031e-06], ['sh_cpu_target=sh4-nofpu', 6.803878210580031e-06], ['sh-superh-*)', 6.803878210580031e-06], ['sh3*)', 6.803878210580031e-06], ['sh_cpu_target=sh3', 6.803878210580031e-06], ['sh_cpu_target=sh2a-nofpu', 6.803878210580031e-06], ['sh2a*)', 6.803878210580031e-06], ['sh2*)', 6.803878210580031e-06], ['sh_cpu_target=sh2', 6.803878210580031e-06], ['--without-fp', 6.803878210580031e-06], ['x$with_fp', 6.803878210580031e-06], ['sh4al', 6.803878210580031e-06], ['sh1)', 6.803878210580031e-06], ['$sh_cpu_default', 6.803878210580031e-06], ['SUPPORT_`echo', 6.803878210580031e-06], ["'s/^m/sh/'", 6.803878210580031e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_`=1"', 6.803878210580031e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_', 6.803878210580031e-06], ['m1', 6.803878210580031e-06], ['m4-nofpu', 6.803878210580031e-06], ['m4a', 6.803878210580031e-06], ['m2a', 6.803878210580031e-06], ['m2a-nofpu)', 6.803878210580031e-06], ['verbatim.', 6.803878210580031e-06], ['$sh_multilib', 6.803878210580031e-06], ['sh/elf.h', 6.803878210580031e-06], ['sh/embed-elf.h', 6.803878210580031e-06], ['sparc/t-leon"', 6.803878210580031e-06], ['sparc/t-leon3"', 6.803878210580031e-06], ['sparc/rtemself.h', 6.803878210580031e-06], ['sparc/t-linux64"', 6.803878210580031e-06], ['sparc/netbsd-elf.h"', 6.803878210580031e-06], ['with_cpu=v9', 6.803878210580031e-06], ['sparc/sp64-elf.h"', 6.803878210580031e-06], ['with_cpu=ultrasparc', 6.803878210580031e-06], ['spu-c.o"', 6.803878210580031e-06], ['c6x/elf-common.h', 6.803878210580031e-06], ['mul-tables.o"', 6.803878210580031e-06], ['tilegx-c.o"', 6.803878210580031e-06], ['extra_headers="feedback.h"', 6.803878210580031e-06], ['tilepro-c.o"', 6.803878210580031e-06], ['target_cpu_default="TARGET_CPU_generic"', 6.803878210580031e-06], ['v850/v850.h"', 6.803878210580031e-06], ['c_target_objs="v850-c.o"', 6.803878210580031e-06], ['cxx_target_objs="v850-c.o"', 6.803878210580031e-06], ['vax/elf.h', 6.803878210580031e-06], ['vax/elf.opt"', 6.803878210580031e-06], ['reasons,', 6.803878210580031e-06], ['stormy16/stormy16.h"', 6.803878210580031e-06], ['xtensa/t-xtensa"', 6.803878210580031e-06], ['c_target_objs="m32c-pragma.o"', 6.803878210580031e-06], ['cxx_target_objs="m32c-pragma.o"', 6.803878210580031e-06], ['i386/t-i386"', 6.803878210580031e-06], ['*-*-linux*)', 6.803878210580031e-06], ['default-c.o"', 6.803878210580031e-06], ['unrelated', 6.803878210580031e-06], ['options,', 6.803878210580031e-06], ['too).', 6.803878210580031e-06], ['${with_cpu}', 6.803878210580031e-06], ['value"', 6.803878210580031e-06], ['6;', 6.803878210580031e-06], ['arch=i386', 6.803878210580031e-06], ['znver1-*)', 6.803878210580031e-06], ['arch=znver1', 6.803878210580031e-06], ['cpu=znver1', 6.803878210580031e-06], ['znver2-*)', 6.803878210580031e-06], ['arch=znver2', 6.803878210580031e-06], ['cpu=znver2', 6.803878210580031e-06], ['bdver4-*)', 6.803878210580031e-06], ['arch=bdver4', 6.803878210580031e-06], ['cpu=bdver4', 6.803878210580031e-06], ['bdver3-*)', 6.803878210580031e-06], ['arch=bdver3', 6.803878210580031e-06], ['cpu=bdver3', 6.803878210580031e-06], ['bdver2-*)', 6.803878210580031e-06], ['arch=bdver2', 6.803878210580031e-06], ['cpu=bdver2', 6.803878210580031e-06], ['bdver1-*)', 6.803878210580031e-06], ['arch=bdver1', 6.803878210580031e-06], ['cpu=bdver1', 6.803878210580031e-06], ['btver1-*)', 6.803878210580031e-06], ['arch=btver1', 6.803878210580031e-06], ['cpu=btver1', 6.803878210580031e-06], ['btver2-*)', 6.803878210580031e-06], ['arch=btver2', 6.803878210580031e-06], ['cpu=btver2', 6.803878210580031e-06], ['amdfam10-*|barcelona-*)', 6.803878210580031e-06], ['arch=amdfam10', 6.803878210580031e-06], ['cpu=amdfam10', 6.803878210580031e-06], ['k8_sse3-*|opteron_sse3-*|athlon64_sse3-*)', 6.803878210580031e-06], ['arch=k8-sse3', 6.803878210580031e-06], ['cpu=k8-sse3', 6.803878210580031e-06], ['arch=k8', 6.803878210580031e-06], ['cpu=k8', 6.803878210580031e-06], ['nocona-*)', 6.803878210580031e-06], ['arch=nocona', 6.803878210580031e-06], ['cpu=nocona', 6.803878210580031e-06], ['atom-*)', 6.803878210580031e-06], ['arch=atom', 6.803878210580031e-06], ['cpu=atom', 6.803878210580031e-06], ['slm-*)', 6.803878210580031e-06], ['arch=slm', 6.803878210580031e-06], ['cpu=slm', 6.803878210580031e-06], ['core2-*)', 6.803878210580031e-06], ['arch=core2', 6.803878210580031e-06], ['cpu=core2', 6.803878210580031e-06], ['corei7-*)', 6.803878210580031e-06], ['arch=corei7', 6.803878210580031e-06], ['cpu=corei7', 6.803878210580031e-06], ['arch=pentiumpro', 6.803878210580031e-06], ['${target}.', 6.803878210580031e-06], ['"cf")', 6.803878210580031e-06], ['x$with_cpu_32', 6.803878210580031e-06], ['x$with_arch', 6.803878210580031e-06], ['i[34567]86-*-darwin*|x86_64-*-darwin*)', 6.803878210580031e-06], ['TARGET_SUBTARGET32_ISA_DEFAULT', 6.803878210580031e-06], ['TARGET_SUBTARGET64_ISA_DEFAULT', 6.803878210580031e-06], ['config/i386/darwin.h.', 6.803878210580031e-06], ['4.', 6.803878210580031e-06], ['x$with_fpmath', 6.803878210580031e-06], ['with_arch=$arch', 6.803878210580031e-06], ['x$with_arch_32', 6.803878210580031e-06], ['x$with_arch_64', 6.803878210580031e-06], ['with_arch_32=$with_arch', 6.803878210580031e-06], ['with_arch_64=x86-64', 6.803878210580031e-06], ['with_arch=', 6.803878210580031e-06], ['"Invalid', 6.803878210580031e-06], ['Override', 6.803878210580031e-06], ['besides', 6.803878210580031e-06], ['arch;', 6.803878210580031e-06], ["'s/\\+.*//'`", 6.803878210580031e-06], ['aarch64-arches.def', 6.803878210580031e-06], ['base_id=`grep', 6.803878210580031e-06], ['$ext', 6.803878210580031e-06], ["'s/,.*$//'", 6.803878210580031e-06], ["'s/).*$//'`", 6.803878210580031e-06], ['ext_mask="("$ext_mask")', 6.803878210580031e-06], ['"$ext_canon")"', 6.803878210580031e-06], ['abi', 6.803878210580031e-06], ['${srcdir}/config/arm/parsecpu.awk', 6.803878210580031e-06], ['${srcdir}/config/arm/arm-cpus.in`', 6.803878210580031e-06], ['"error"', 6.803878210580031e-06], ['"$with_abi"', 6.803878210580031e-06], ['TLS', 6.803878210580031e-06], ['"Switch', 6.803878210580031e-06], ['\\"--with-cpu\\""', 6.803878210580031e-06], ['supported_defaults=cpu', 6.803878210580031e-06], ['"$with_cpu"', 6.803878210580031e-06], ['cpu"', 6.803878210580031e-06], ['m68k_cpu_ident=m68020', 6.803878210580031e-06], ['tune_64"', 6.803878210580031e-06], ['"x$which"', 6.803878210580031e-06], ['TARGET_RISCV_ATTRIBUTE=1"', 6.803878210580031e-06], ['TARGET_RISCV_ATTRIBUTE=0"', 6.803878210580031e-06], ['rv64g*)', 6.803878210580031e-06], ['"${with_abi}"', 6.803878210580031e-06], ['ilp32d)', 6.803878210580031e-06], ['--with-abi', 6.803878210580031e-06], ['ilp32d', 6.803878210580031e-06], ['"--with-abi=${with_abi}', 6.803878210580031e-06], ['compatible.', 6.803878210580031e-06], ['nan', 6.803878210580031e-06], ['fp_32', 6.803878210580031e-06], ['odd_spreg_32', 6.803878210580031e-06], ['mips-plt', 6.803878210580031e-06], ['madd4"', 6.803878210580031e-06], ['xx', 6.803878210580031e-06], ['eabi)', 6.803878210580031e-06], ['v3', 6.803878210580031e-06], ['TARGET_ARCH_DEFAULT=0"', 6.803878210580031e-06], ['v2', 6.803878210580031e-06], ['v2j', 6.803878210580031e-06], ['v3s)', 6.803878210580031e-06], ['v3f', 6.803878210580031e-06], ['n6', 6.803878210580031e-06], ['n7', 6.803878210580031e-06], ['e8', 6.803878210580031e-06], ['s8', 6.803878210580031e-06], ['n9', 6.803878210580031e-06], ['n10', 6.803878210580031e-06], ['d10', 6.803878210580031e-06], ['n12', 6.803878210580031e-06], ['n13', 6.803878210580031e-06], ['TARGET_DEFAULT_CTOR_DTOR=1"', 6.803878210580031e-06], ['mculib', 6.803878210580031e-06], ['supported_defaults="arch"', 6.803878210580031e-06], ['-a', 6.803878210580031e-06], ['LINK_OS_EXTRA_SPEC32"', 6.803878210580031e-06], ['"\\"%(link_os_new_dtags)"', 6.803878210580031e-06], ['"-rpath', 6.803878210580031e-06], ['$prefix/lib', 6.803878210580031e-06], ['-rpath', 6.803878210580031e-06], ['"-L', 6.803878210580031e-06], ['-L', 6.803878210580031e-06], ['LINK_OS_EXTRA_SPEC64"', 6.803878210580031e-06], ['$prefix/lib64', 6.803878210580031e-06], ['LINK_OS_NEW_DTAGS_SPEC"', 6.803878210580031e-06], ['x$with_long_double_format', 6.803878210580031e-06], ['sh[123456ble]*-*-*', 6.803878210580031e-06], ['target_cpu_default2="\\\\\\"$with_cpu\\\\\\""', 6.803878210580031e-06], ['${cpu_type}-c.o"', 6.803878210580031e-06], ['sh-c.o"', 6.803878210580031e-06], ['schedule', 6.803878210580031e-06], ['$option', 6.803878210580031e-06], ['2>&1', 6.803878210580031e-06], ['"x$t"', 6.803878210580031e-06], ['\\"$option\\",', 6.803878210580031e-06], ['\\"$val\\"', 6.803878210580031e-06], ['configure_default_options="{', 6.803878210580031e-06], ['varname_offset_table::const_iterator', 6.803878210580031e-06], ['m_group_offsets.find', 6.803878210580031e-06], ['m_group_offsets.end', 6.803878210580031e-06], ['gcc-hsa', 6.803878210580031e-06], ['BRIG_TYPE_NONE:', 6.803878210580031e-06], ['BRIG_TYPE_B1:', 6.803878210580031e-06], ['BRIG_TYPE_B8:', 6.803878210580031e-06], ['BRIG_TYPE_B16:', 6.803878210580031e-06], ['BRIG_TYPE_B32:', 6.803878210580031e-06], ['BRIG_TYPE_B64:', 6.803878210580031e-06], ['BRIG_TYPE_B128:', 6.803878210580031e-06], ['(uint64_t', 6.803878210580031e-06], ["'s';", 6.803878210580031e-06], ['BRIG_TYPE_S8;', 6.803878210580031e-06], ['BRIG_TYPE_S16;', 6.803878210580031e-06], ['BRIG_TYPE_S32;', 6.803878210580031e-06], ['BRIG_TYPE_S64;', 6.803878210580031e-06], ['pack_type;', 6.803878210580031e-06], ['*brigVar)', 6.803878210580031e-06], ['(inner_brig_type);', 6.803878210580031e-06], ['(inner_type,', 6.803878210580031e-06], ['(brig_type),', 6.803878210580031e-06], ['unsigned_char_type_node;', 6.803878210580031e-06], ['strict', 6.803878210580031e-06], ['mandated', 6.803878210580031e-06], ['samplers', 6.803878210580031e-06], ['blobs', 6.803878210580031e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT', 6.803878210580031e-06], ['gccbrig_hsa_reg_name_from_id', 6.803878210580031e-06], ['stdout.', 6.803878210580031e-06], ['regs_use_index::const_iterator', 6.803878210580031e-06], ['reg_use_it', 6.803878210580031e-06], ['(brigVar->dim);', 6.803878210580031e-06], ['(is_definition', 6.803878210580031e-06], ['"Array', 6.803878210580031e-06], ['elements.");', 6.803878210580031e-06], ['(var_decltype', 6.803878210580031e-06], ['build_array_type_nelts', 6.803878210580031e-06], ['get_brig_var_alignment', 6.803878210580031e-06], ['implemented",', 6.803878210580031e-06], ['var_type;', 6.803878210580031e-06], ['(element_type));', 6.803878210580031e-06], ['var_size', 6.803878210580031e-06], ['multiplied', 6.803878210580031e-06], ['defined_alignment', 6.803878210580031e-06], ['STR', 6.803878210580031e-06], ['underscore', 6.803878210580031e-06], ['letter', 6.803878210580031e-06], ['C++,', 6.803878210580031e-06], ['*str)', 6.803878210580031e-06], ['HASHNODE', 6.803878210580031e-06], ['offered', 6.803878210580031e-06], ['(hashnode))', 6.803878210580031e-06], ['suggest', 6.803878210580031e-06], ['best_macro_match', 6.803878210580031e-06], ['find_closest_macro_cpp_cb', 6.803878210580031e-06], ['Selftests.', 6.803878210580031e-06], ['test_name_reserved_for_implementation_p', 6.803878210580031e-06], ['("foo"));', 6.803878210580031e-06], ['directives.', 6.803878210580031e-06], ['distinguishing', 6.803878210580031e-06], ['stdlibs.', 6.803878210580031e-06], ['stdlib', 6.803878210580031e-06], ['stdlib_hint', 6.803878210580031e-06], ['<assert.h>', 6.803878210580031e-06], ['{"<wchar.h>",', 6.803878210580031e-06], ['"<cwchar>"}', 6.803878210580031e-06], ["suggest_missing_header's", 6.803878210580031e-06], ['(loc),', 6.803878210580031e-06], ['(&richloc,', 6.803878210580031e-06], ['m_header_hint,', 6.803878210580031e-06], ['forget', 6.803878210580031e-06], ['ENABLE_SHARED_LIBGCC', 6.803878210580031e-06], ['mitigation', 6.803878210580031e-06], ['Ltd.', 6.803878210580031e-06], ['"basic-block.h"', 6.803878210580031e-06], ['"df.h"', 6.803878210580031e-06], ['"recog.h"', 6.803878210580031e-06], ['tracks', 6.803878210580031e-06], ['(we', 6.803878210580031e-06], ['situations', 6.803878210580031e-06], ['B.EQ', 6.803878210580031e-06], ['<dst>', 6.803878210580031e-06], ['<dst>:', 6.803878210580031e-06], ['CSEL', 6.803878210580031e-06], ['XZr,', 6.803878210580031e-06], ['ne', 6.803878210580031e-06], ['eq', 6.803878210580031e-06], ['speculating', 6.803878210580031e-06], ['implementations', 6.803878210580031e-06], ['SP,', 6.803878210580031e-06], ['pre-call', 6.803878210580031e-06], ['post-call', 6.803878210580031e-06], ['hopefully', 6.803878210580031e-06], ['sp', 6.803878210580031e-06], ['SP_REGNUM);', 6.803878210580031e-06], ['SPECULATION_TRACKER_REGNUM);', 6.803878210580031e-06], ['(scratch,', 6.803878210580031e-06], ['aarch64_speculation_establish_tracker', 6.803878210580031e-06], ['(EQ,', 6.803878210580031e-06], ['aarch64_do_track_speculation', 6.803878210580031e-06], ['NOTE_P', 6.803878210580031e-06], ['dump_insn_slim', 6.803878210580031e-06], ['fall-through', 6.803878210580031e-06], ['PC', 6.803878210580031e-06], ['rtx_code', 6.803878210580031e-06], ['reversed_comparison_code', 6.803878210580031e-06], ['(gen_speculation_tracker', 6.803878210580031e-06], ['BRANCH_EDGE', 6.803878210580031e-06], ['FALLTHRU_EDGE', 6.803878210580031e-06], ['fixups_pending++;', 6.803878210580031e-06], ['head', 6.803878210580031e-06], ['note.', 6.803878210580031e-06], ['Scan', 6.803878210580031e-06], ['(NONDEBUG_INSN_P', 6.803878210580031e-06], ['(call_insn)', 6.803878210580031e-06], ['call_insn);', 6.803878210580031e-06], ['(SIBLING_CALL_P', 6.803878210580031e-06], ['find_reg_note', 6.803878210580031e-06], ['REG_NORETURN,', 6.803878210580031e-06], ['transfer', 6.803878210580031e-06], ['putting', 6.803878210580031e-06], ['ensures', 6.803878210580031e-06], ['(bb->succs);', 6.803878210580031e-06], ['commit_edge_insertions', 6.803878210580031e-06], ['do,', 6.803878210580031e-06], ['presumably', 6.803878210580031e-06], ['seq', 6.803878210580031e-06], ['list;', 6.803878210580031e-06], ['INSN_LOCATION', 6.803878210580031e-06], ['(ENTRY_BLOCK_PTR_FOR_FN', 6.803878210580031e-06], ['pass_track_speculation', 6.803878210580031e-06], ['"expr.h"', 6.803878210580031e-06], ['guarantees', 6.803878210580031e-06], ['TARGET.', 6.803878210580031e-06], ['(CONST_INT_P', 6.803878210580031e-06], ['(constp', 6.803878210580031e-06], ['constp)', 6.803878210580031e-06], ['loads', 6.803878210580031e-06], ['(bytes,', 6.803878210580031e-06], ['r0,', 6.803878210580031e-06], ['(copied', 6.803878210580031e-06], ['(from,', 6.803878210580031e-06], ['copied),', 6.803878210580031e-06], ['fail.', 6.803878210580031e-06], ['12)', 6.803878210580031e-06], ['optimize_size)', 6.803878210580031e-06], ['6);', 6.803878210580031e-06], ['(r6,', 6.803878210580031e-06], ['((bytes', 6.803878210580031e-06], ['profile_probability::from_reg_br_prob_base', 6.803878210580031e-06], ['(REG_BR_PROB_BASE', 6.803878210580031e-06], ['.to_reg_br_prob_note', 6.803878210580031e-06], ['s1_addr', 6.803878210580031e-06], ['s2_addr', 6.803878210580031e-06], ['*L_end_loop_byte', 6.803878210580031e-06], ['addr1_alignment', 6.803878210580031e-06], ['(operands[1])', 6.803878210580031e-06], ['(gen_iorsi3', 6.803878210580031e-06], ['s2_addr));', 6.803878210580031e-06], ['(gen_andsi3', 6.803878210580031e-06], ['tmp3));', 6.803878210580031e-06], ['(HImode,', 6.803878210580031e-06], ['(low_1,', 6.803878210580031e-06], ['low_1));', 6.803878210580031e-06], ['(low_2,', 6.803878210580031e-06], ['low_2));', 6.803878210580031e-06], ['(gen_rotlsi3_16', 6.803878210580031e-06], ['(L_end_loop_byte);', 6.803878210580031e-06], ['flag_delayed_branch)', 6.803878210580031e-06], ['tmp1)));', 6.803878210580031e-06], ['lenw', 6.803878210580031e-06], ['(gen_lshrsi3', 6.803878210580031e-06], ['(2)));', 6.803878210580031e-06], ['lenw,', 6.803878210580031e-06], ['(gen_jump_compact(', 6.803878210580031e-06], ['L_end_loop_byte));', 6.803878210580031e-06], ['-GET_MODE_SIZE', 6.803878210580031e-06], ['(start_addr,', 6.803878210580031e-06], ['memset.', 6.803878210580031e-06], ['(INTVAL', 6.803878210580031e-06], ['(QImode)));', 6.803878210580031e-06], ['INCLUDE_ALGORITHM', 6.803878210580031e-06], ['INCLUDE_VECTOR', 6.803878210580031e-06], ['backwards', 6.803878210580031e-06], ['recorded,', 6.803878210580031e-06], ['log_msg(...)\\', 6.803878210580031e-06], ['log_insn(i)\\', 6.803878210580031e-06], ['print_rtl_single', 6.803878210580031e-06], ['(const_rtx)i);', 6.803878210580031e-06], ['log_rtx(r)\\', 6.803878210580031e-06], ['print_rtl', 6.803878210580031e-06], ['(const_rtx)r);', 6.803878210580031e-06], ['log_return(retval,', 6.803878210580031e-06], ['...)\\', 6.803878210580031e-06], ['log_return_void(...)\\', 6.803878210580031e-06], ['(function*', 6.803878210580031e-06], ['default_pass_data;', 6.803878210580031e-06], ['determined.', 6.803878210580031e-06], ['Might', 6.803878210580031e-06], ['const_setcc_value', 6.803878210580031e-06], ['find_last_ccreg_values', 6.803878210580031e-06], ['prev_visited_bb)', 6.803878210580031e-06], ['*cbranch_insn,', 6.803878210580031e-06], ['cbranch_insn_bb,', 6.803878210580031e-06], ['branch_target_bb)', 6.803878210580031e-06], ['all_ccreg_values_equal', 6.803878210580031e-06], ['remove_ccreg_dead_unused_notes', 6.803878210580031e-06], ['(std::vector<ccreg_value>&', 6.803878210580031e-06], ['obtained', 6.803878210580031e-06], ['m_ccreg;', 6.803878210580031e-06], ['(overwritten', 6.803878210580031e-06], ['constructor)', 6.803878210580031e-06], ['TV_OPTIMIZE,', 6.803878210580031e-06], ['(default_pass_data,', 6.803878210580031e-06], ['ctx),', 6.803878210580031e-06], ['(NULL_RTX)', 6.803878210580031e-06], ['this->name', 6.803878210580031e-06], ['ccr1', 6.803878210580031e-06], ['(targetm.fixed_condition_code_regs', 6.803878210580031e-06], ['(&ccr0,', 6.803878210580031e-06], ['&ccr1)', 6.803878210580031e-06], ['INVALID_REGNUM)', 6.803878210580031e-06], ['Initially', 6.803878210580031e-06], ['VOIDmode.', 6.803878210580031e-06], ['discovered,', 6.803878210580031e-06], ['(VOIDmode,', 6.803878210580031e-06], ['ccr0);', 6.803878210580031e-06], ['(m_ccreg', 6.803878210580031e-06], ['ccreg.\\n\\n");', 6.803878210580031e-06], ['(STORE_FLAG_VALUE', 6.803878210580031e-06], ['("ccreg:', 6.803878210580031e-06], ['Something', 6.803878210580031e-06], ['std::vector<basic_block>', 6.803878210580031e-06], ['optimized.', 6.803878210580031e-06], ['(!INSN_P', 6.803878210580031e-06], ['%u\\n",', 6.803878210580031e-06], ['"\\n\\n");', 6.803878210580031e-06], ['m)', 6.803878210580031e-06], ['PUT_MODE', 6.803878210580031e-06], ['("updated', 6.803878210580031e-06], ['("\\n\\n");', 6.803878210580031e-06], ['pc_set', 6.803878210580031e-06], ['(cbranch_insn);', 6.803878210580031e-06], ['NULL_RTX);', 6.803878210580031e-06], ['branch_if;', 6.803878210580031e-06], ['branch_if', 6.803878210580031e-06], ['(cbranch_insn_bb)->dest)', 6.803878210580031e-06], ['start_insn;', 6.803878210580031e-06], ['set_of', 6.803878210580031e-06], ['insn:\\n",', 6.803878210580031e-06], ['(v.value);', 6.803878210580031e-06], ['onlyjump_p', 6.803878210580031e-06], ['%d]:\\n",', 6.803878210580031e-06], ['CFG', 6.803878210580031e-06], ['(std::find', 6.803878210580031e-06], ['prev_visited_bb.rend', 6.803878210580031e-06], ['(ei_edge', 6.803878210580031e-06], ['("unknown', 6.803878210580031e-06], ['values.begin', 6.803878210580031e-06], ['values.end', 6.803878210580031e-06], ['(m_ccreg));', 6.803878210580031e-06], ['remove_note', 6.803878210580031e-06], ['REG_UNUSED,', 6.803878210580031e-06], ['opt_pass*', 6.803878210580031e-06], ['(ctx,', 6.803878210580031e-06], ['INCLUDE_LIST', 6.803878210580031e-06], ['@(4,r4),r1', 6.803878210580031e-06], ['.L5', 6.803878210580031e-06], ['store.', 6.803878210580031e-06], ['173))', 6.803878210580031e-06], ['inverted:', 6.803878210580031e-06], ['200)', 6.803878210580031e-06], ['(ge:SI', 6.803878210580031e-06], ['179)', 6.803878210580031e-06], ['177)))', 6.803878210580031e-06], ['176)', 6.803878210580031e-06], ['SH2A', 6.803878210580031e-06], ['subordinate', 6.803878210580031e-06], ['result.insn', 6.803878210580031e-06], ['result.set_rtx', 6.803878210580031e-06], ['SET)', 6.803878210580031e-06], ['insn)', 6.803878210580031e-06], ['(reg))', 6.803878210580031e-06], ['reg_unused_after_insn', 6.803878210580031e-06], ['abort_at_insn)', 6.803878210580031e-06], ['visited_bb.end', 6.803878210580031e-06], ['(start_insn', 6.803878210580031e-06], ['end_insn', 6.803878210580031e-06], ['(start_insn);', 6.803878210580031e-06], ['abort_at_insn);', 6.803878210580031e-06], ["'abort_at_insn'", 6.803878210580031e-06], ['trace_reg_uses', 6.803878210580031e-06], ['BLOCK_FOR_INSN', 6.803878210580031e-06], ['somehow.', 6.803878210580031e-06], ['t_reg_operand', 6.803878210580031e-06], ['(rtx,', 6.803878210580031e-06], ['machine_mode);', 6.803878210580031e-06], ['negt_reg_operand', 6.803878210580031e-06], ['cstore_inverted', 6.803878210580031e-06], ['setcc;', 6.803878210580031e-06], ['(b),', 6.803878210580031e-06], ['(is_conditional_insn', 6.803878210580031e-06], ['(cbranch_insn))', 6.803878210580031e-06], ['&XEXP', 6.803878210580031e-06], ['rtx&', 6.803878210580031e-06], ['cond);', 6.803878210580031e-06], ['branch_condition_type', 6.803878210580031e-06], ['triggering', 6.803878210580031e-06], ['make_not_reg_insn', 6.803878210580031e-06], ['dst_reg,', 6.803878210580031e-06], ['src_reg)', 6.803878210580031e-06], ["'m_touched_insns'.", 6.803878210580031e-06], ['*i);', 6.803878210580031e-06], ['(m_ccreg))', 6.803878210580031e-06], ['(cond', 6.803878210580031e-06], ['unknown_branch_condition;', 6.803878210580031e-06], ['(const_cast<rtx>', 6.803878210580031e-06], ['(x),', 6.803878210580031e-06], ['VOIDmode);', 6.803878210580031e-06], ['cstore_normal;', 6.803878210580031e-06], ['(is_inverted_ccreg', 6.803878210580031e-06], ['(set_found,', 6.803878210580031e-06], ['found\\n");', 6.803878210580031e-06], ['(volatile_insn_p', 6.803878210580031e-06], ['volatile\\n");', 6.803878210580031e-06], ['patterns', 6.803878210580031e-06], ['(cstore_pat,', 6.803878210580031e-06], ['(std::vector<set_of_reg>::const_reverse_iterator', 6.803878210580031e-06], ['i->insn))', 6.803878210580031e-06], ['(i->insn);', 6.803878210580031e-06], ['die', 6.803878210580031e-06], ['(cstore_dst,', 6.803878210580031e-06], ["bb_entry's", 6.803878210580031e-06], ['cstore_dst_use_count', 6.803878210580031e-06], ['e.cstore.insn))', 6.803878210580031e-06], ['those.', 6.803878210580031e-06], ['DImode', 6.803878210580031e-06], ['(src_reg)', 6.803878210580031e-06], ['DImode))', 6.803878210580031e-06], ['SImode)', 6.803878210580031e-06], ['m_ccreg);', 6.803878210580031e-06], ['DImode)', 6.803878210580031e-06], ['dst_reg),', 6.803878210580031e-06], ['(x_op0)', 6.803878210580031e-06], ['(y_op0))', 6.803878210580031e-06], ['(e.bb', 6.803878210580031e-06], ["entry's", 6.803878210580031e-06], ['%d]",', 6.803878210580031e-06], ['condition\\n");', 6.803878210580031e-06], ['1)),', 6.803878210580031e-06], ['comp_insn', 6.803878210580031e-06], ['completly', 6.803878210580031e-06], ['(could', 6.803878210580031e-06], ['cbranch).', 6.803878210580031e-06], ['(i_empty_count', 6.803878210580031e-06], ['"bb', 6.803878210580031e-06], ['safely.', 6.803878210580031e-06], ['(!can_remove_cstore', 6.803878210580031e-06], ['dominating_cstore', 6.803878210580031e-06], ['(i->setcc.insn);', 6.803878210580031e-06], ['!try_invert_branch_condition', 6.803878210580031e-06], ['(common_comp,', 6.803878210580031e-06], ['(emit_insn_after', 6.803878210580031e-06], ['(common_comp_insn,', 6.803878210580031e-06], ['(comp_op1))', 6.803878210580031e-06], ['(i_comp_op0)', 6.803878210580031e-06], ['(i_comp_op0,', 6.803878210580031e-06], ['(i_comp_op0));', 6.803878210580031e-06], ['(i->cstore.insn);', 6.803878210580031e-06], ['(i->cstore.empty', 6.803878210580031e-06], ['insn:\\n");', 6.803878210580031e-06], ['("removing', 6.803878210580031e-06], ['(trace.cbranch_type', 6.803878210580031e-06], ['("condition:', 6.803878210580031e-06], ['trace.setcc', 6.803878210580031e-06], ['("set', 6.803878210580031e-06], ['(!trace.can_invert_condition', 6.803878210580031e-06], ['("branch', 6.803878210580031e-06], ['branch,', 6.803878210580031e-06], ['trace.bb_entries.push_front', 6.803878210580031e-06], ['(bb_entry', 6.803878210580031e-06], ['(trace_reg,', 6.803878210580031e-06], ['trace.bb_entries.front', 6.803878210580031e-06], ['aborting', 6.803878210580031e-06], ['trace\\n");', 6.803878210580031e-06], ['(e->src),', 6.803878210580031e-06], ['cstore_normal)', 6.803878210580031e-06], ['cstore_inverted)', 6.803878210580031e-06], ['("will', 6.803878210580031e-06], ['(trace,', 6.803878210580031e-06], ['*fun)', 6.803878210580031e-06], ['(*i),', 6.803878210580031e-06], ['Walter', 6.803878210580031e-06], ['Lee', 6.803878210580031e-06], ['MAX_INSTRUCTIONS', 6.803878210580031e-06], ['linear', 6.803878210580031e-06], ['computing', 6.803878210580031e-06], ['keeps', 6.803878210580031e-06], ['architecture.', 6.803878210580031e-06], ['multiplication.', 6.803878210580031e-06], ['MUL_TYPE;', 6.803878210580031e-06], ['produce.', 6.803878210580031e-06], ['generated.', 6.803878210580031e-06], ["we'd", 6.803878210580031e-06], ['(2', 6.803878210580031e-06], ['((x)', 6.803878210580031e-06], ['*pattern,', 6.803878210580031e-06], ['binary_op_func', 6.803878210580031e-06], ['func,', 6.803878210580031e-06], ['cost)', 6.803878210580031e-06], ['m_pattern', 6.803878210580031e-06], ['(pattern),', 6.803878210580031e-06], ['m_top_index', 6.803878210580031e-06], ['(-1),', 6.803878210580031e-06], ['m_unary_func', 6.803878210580031e-06], ['(func),', 6.803878210580031e-06], ['m_cost', 6.803878210580031e-06], ['(cost),', 6.803878210580031e-06], ['m_rhs_if_unary', 6.803878210580031e-06], ['unary_op_func', 6.803878210580031e-06], ['Unary', 6.803878210580031e-06], ['apply,', 6.803878210580031e-06], ['DAG.', 6.803878210580031e-06], ['left-hand', 6.803878210580031e-06], ['How', 6.803878210580031e-06], ['(13);', 6.803878210580031e-06], ['ops[]', 6.803878210580031e-06], ['"add",', 6.803878210580031e-06], ['1040),', 6.803878210580031e-06], ['"sub",', 6.803878210580031e-06], ['1041),', 6.803878210580031e-06], ['s1a,', 6.803878210580031e-06], ['1042),', 6.803878210580031e-06], ['1043),', 6.803878210580031e-06], ['s3a,', 6.803878210580031e-06], ['1044),', 6.803878210580031e-06], ['shl', 6.803878210580031e-06], ['team', 6.803878210580031e-06], ['thinks', 6.803878210580031e-06], ['power,', 6.803878210580031e-06], ['prefer', 6.803878210580031e-06], ['shift1,', 6.803878210580031e-06], ['1001),', 6.803878210580031e-06], ['shift2,', 6.803878210580031e-06], ['1002),', 6.803878210580031e-06], ['shift3,', 6.803878210580031e-06], ['1003),', 6.803878210580031e-06], ['shift4,', 6.803878210580031e-06], ['1004),', 6.803878210580031e-06], ['shift5,', 6.803878210580031e-06], ['1005),', 6.803878210580031e-06], ['shift6,', 6.803878210580031e-06], ['1006),', 6.803878210580031e-06], ['shift7,', 6.803878210580031e-06], ['1007),', 6.803878210580031e-06], ['shift8,', 6.803878210580031e-06], ['1008),', 6.803878210580031e-06], ['shift9,', 6.803878210580031e-06], ['1009),', 6.803878210580031e-06], ['shift10,', 6.803878210580031e-06], ['1010),', 6.803878210580031e-06], ['shift11,', 6.803878210580031e-06], ['1011),', 6.803878210580031e-06], ['shift12,', 6.803878210580031e-06], ['12,', 6.803878210580031e-06], ['1012),', 6.803878210580031e-06], ['shift13,', 6.803878210580031e-06], ['13,', 6.803878210580031e-06], ['1013),', 6.803878210580031e-06], ['shift14,', 6.803878210580031e-06], ['1014),', 6.803878210580031e-06], ['shift15,', 6.803878210580031e-06], ['15,', 6.803878210580031e-06], ['1015),', 6.803878210580031e-06], ['shift16,', 6.803878210580031e-06], ['1016),', 6.803878210580031e-06], ['shift17,', 6.803878210580031e-06], ['17,', 6.803878210580031e-06], ['1017),', 6.803878210580031e-06], ['shift18,', 6.803878210580031e-06], ['1018),', 6.803878210580031e-06], ['shift19,', 6.803878210580031e-06], ['19,', 6.803878210580031e-06], ['1019),', 6.803878210580031e-06], ['shift20,', 6.803878210580031e-06], ['20,', 6.803878210580031e-06], ['1020),', 6.803878210580031e-06], ['shift21,', 6.803878210580031e-06], ['21,', 6.803878210580031e-06], ['1021),', 6.803878210580031e-06], ['shift22,', 6.803878210580031e-06], ['22,', 6.803878210580031e-06], ['1022),', 6.803878210580031e-06], ['shift23,', 6.803878210580031e-06], ['23,', 6.803878210580031e-06], ['1023),', 6.803878210580031e-06], ['shift24,', 6.803878210580031e-06], ['24,', 6.803878210580031e-06], ['1024),', 6.803878210580031e-06], ['shift25,', 6.803878210580031e-06], ['25,', 6.803878210580031e-06], ['1025),', 6.803878210580031e-06], ['shift26,', 6.803878210580031e-06], ['26,', 6.803878210580031e-06], ['1026),', 6.803878210580031e-06], ['shift27,', 6.803878210580031e-06], ['1027),', 6.803878210580031e-06], ['shift28,', 6.803878210580031e-06], ['28,', 6.803878210580031e-06], ['1028),', 6.803878210580031e-06], ['shift29,', 6.803878210580031e-06], ['29,', 6.803878210580031e-06], ['1029),', 6.803878210580031e-06], ['shift30,', 6.803878210580031e-06], ['30,', 6.803878210580031e-06], ['1030),', 6.803878210580031e-06], ['shift31,', 6.803878210580031e-06], ['other)', 6.803878210580031e-06], ['m_num_vals;', 6.803878210580031e-06], ['ExpressionTreeMap', 6.803878210580031e-06], ['s.m_num_vals', 6.803878210580031e-06], ['ops[0];', 6.803878210580031e-06], ['useless.', 6.803878210580031e-06], ['op->m_binary_func', 6.803878210580031e-06], ['hack', 6.803878210580031e-06], ['expression?', 6.803878210580031e-06], ['n.', 6.803878210580031e-06], ['ExpressionTreeMap::iterator', 6.803878210580031e-06], ['best_solution.end', 6.803878210580031e-06], ['best_solution);', 6.803878210580031e-06], ['choose', 6.803878210580031e-06], ['insn_code.', 6.803878210580031e-06], ['create_insn_code_compression_table', 6.803878210580031e-06], ['Entry', 6.803878210580031e-06], ['CODE_FOR_nothing', 6.803878210580031e-06], ['*op', 6.803878210580031e-06], ['("\\n};\\n\\n");', 6.803878210580031e-06], ['multiply_constants_used', 6.803878210580031e-06], ['XSIZE', 6.803878210580031e-06], ['bsearch', 6.803878210580031e-06], ['*key,', 6.803878210580031e-06], ['multiplier)', 6.803878210580031e-06], ['s->m_num_vals;', 6.803878210580031e-06], ['num_ops)', 6.803878210580031e-06], ['[-1024,', 6.803878210580031e-06], ['1024].', 6.803878210580031e-06], ['(abs_multiplier', 6.803878210580031e-06], ['1024)', 6.803878210580031e-06], ['(abs_multiplier));', 6.803878210580031e-06], ['next_pow2', 6.803878210580031e-06], ['ten.', 6.803878210580031e-06], ['prev_pow10;', 6.803878210580031e-06], ['next_pow10;', 6.803878210580031e-06], ['(((j', 6.803878210580031e-06], ['abs_multiplier)', 6.803878210580031e-06], ['10)))', 6.803878210580031e-06], ['next_pow10', 6.803878210580031e-06], ['ops.', 6.803878210580031e-06], ["0's", 6.803878210580031e-06], ["1's.", 6.803878210580031e-06], ['(INTMAX_MAX', 6.803878210580031e-06], ['*/\\n");', 6.803878210580031e-06], ['(s)))', 6.803878210580031e-06], ['int_min', 6.803878210580031e-06], ['{%d', 6.803878210580031e-06], ['0x%x', 6.803878210580031e-06], ['{%lldll', 6.803878210580031e-06], ['0x%llx', 6.803878210580031e-06], ['MUL_TYPE)', 6.803878210580031e-06], ['(opnd0,', 6.803878210580031e-06], ['json_from_location_range', 6.803878210580031e-06], ['location_range', 6.803878210580031e-06], ['caret_loc)', 6.803878210580031e-06], ['("start",', 6.803878210580031e-06], ['(start_loc));', 6.803878210580031e-06], ['text', 6.803878210580031e-06], ['json_from_fixit_hint', 6.803878210580031e-06], ['fixit_hint', 6.803878210580031e-06], ['*fixit_obj', 6.803878210580031e-06], ['No-op', 6.803878210580031e-06], ['*context,', 6.803878210580031e-06], ['diagnostic_t', 6.803878210580031e-06], ['(kind_text);', 6.803878210580031e-06], ['(kind_text[len', 6.803878210580031e-06], ["');", 6.803878210580031e-06], ['diag_obj', 6.803878210580031e-06], ['(diag_obj);', 6.803878210580031e-06], ['group;', 6.803878210580031e-06], ['cur_group', 6.803878210580031e-06], ['cur_children_array', 6.803878210580031e-06], ['rich_location', 6.803878210580031e-06], ['Callback', 6.803878210580031e-06], ['toplevel_array', 6.803878210580031e-06], ['CONTEXT', 6.803878210580031e-06], ['text.', 6.803878210580031e-06], ['Processing', 6.803878210580031e-06], ['Andrew', 6.803878210580031e-06], ['Sutton', 6.803878210580031e-06], ['(andrew.n.sutton@gmail.com)', 6.803878210580031e-06], ['"timevar.h"', 6.803878210580031e-06], ['"hash-set.h"', 6.803878210580031e-06], ['"machmode.h"', 6.803878210580031e-06], ['"double-int.h"', 6.803878210580031e-06], ['"input.h"', 6.803878210580031e-06], ['"symtab.h"', 6.803878210580031e-06], ['"wide-int.h"', 6.803878210580031e-06], ['"inchash.h"', 6.803878210580031e-06], ['"intl.h"', 6.803878210580031e-06], ['"flags.h"', 6.803878210580031e-06], ['"cp-tree.h"', 6.803878210580031e-06], ['"c-family/c-objc.h"', 6.803878210580031e-06], ['"cp-objcp-common.h"', 6.803878210580031e-06], ['"decl.h"', 6.803878210580031e-06], ['"type-utils.h"', 6.803878210580031e-06], ['ERROR_MARK);', 6.803878210580031e-06], ['A,', 6.803878210580031e-06], ['NULL_TREE.', 6.803878210580031e-06], ['(CONJ_CONSTR,', 6.803878210580031e-06], ['TREE_VEC.', 6.803878210580031e-06], ['CALL_EXPR);', 6.803878210580031e-06], ['OVL_FIRST', 6.803878210580031e-06], ['TEMPLATE_DECL', 6.803878210580031e-06], ['DECL_DECLARED_CONCEPT_P', 6.803878210580031e-06], ['(DECL_TEMPLATE_RESULT', 6.803878210580031e-06], ['wildcard', 6.803878210580031e-06], ['pack.', 6.803878210580031e-06], ['(args);', 6.803878210580031e-06], ['build_call_check', 6.803878210580031e-06], ['build_variable_check', 6.803878210580031e-06], ['nerrs', 6.803878210580031e-06], ['cands', 6.803878210580031e-06], ['substitution.', 6.803878210580031e-06], ['coerce_template_parms', 6.803878210580031e-06], ['CALL', 6.803878210580031e-06], ['BASELINK_FUNCTIONS', 6.803878210580031e-06], ['(target)', 6.803878210580031e-06], ['"function', 6.803878210580031e-06], ['INNERMOST_TEMPLATE_PARMS', 6.803878210580031e-06], ['deduce_concept_introduction', 6.803878210580031e-06], ['determines', 6.803878210580031e-06], ['memoize', 6.803878210580031e-06], ['C2,', 6.803878210580031e-06], ['direction', 6.803878210580031e-06], ['D<T>', 6.803878210580031e-06], ['testing,', 6.803878210580031e-06], ['C1.', 6.803878210580031e-06], ['(child,', 6.803878210580031e-06], ['(constr))', 6.803878210580031e-06], ['(cxt', 6.803878210580031e-06], ['CONSTR', 6.803878210580031e-06], ['disjunctions', 6.803878210580031e-06], ['constr)', 6.803878210580031e-06], ['(!uses_template_parms', 6.803878210580031e-06], ['get_returned_expression', 6.803878210580031e-06], ['minus', 6.803878210580031e-06], ['BIND_EXPR)', 6.803878210580031e-06], ['(body);', 6.803878210580031e-06], ['get_variable_initializer', 6.803878210580031e-06], ['expansion_level', 6.803878210580031e-06], ['specialization.', 6.803878210580031e-06], ['spec', 6.803878210580031e-06], ['(def,', 6.803878210580031e-06], ['normalize', 6.803878210580031e-06], ['norm);', 6.803878210580031e-06], ['transform', 6.803878210580031e-06], ['normalize_simple_requirement', 6.803878210580031e-06], ['normalize_type_requirement', 6.803878210580031e-06], ['(TYPE_CONSTR,', 6.803878210580031e-06], ['normalize_compound_requirement', 6.803878210580031e-06], ['given,', 6.803878210580031e-06], ['extracting', 6.803878210580031e-06], ['type_constr', 6.803878210580031e-06], ['(DEDUCT_CONSTR,', 6.803878210580031e-06], ['(ICONV_CONSTR,', 6.803878210580031e-06], ['(EXCEPT_CONSTR,', 6.803878210580031e-06], ['transforming', 6.803878210580031e-06], ['structure,', 6.803878210580031e-06], ['normalize_nested_requirement', 6.803878210580031e-06], ['normalize_requirement', 6.803878210580031e-06], ['SIMPLE_REQ:', 6.803878210580031e-06], ['TYPE_REQ:', 6.803878210580031e-06], ['COMPOUND_REQ:', 6.803878210580031e-06], ['NESTED_REQ:', 6.803878210580031e-06], ['normalize_requirements', 6.803878210580031e-06], ['constr);', 6.803878210580031e-06], ['normalize_requires_expression', 6.803878210580031e-06], ['normalize_template_id_expression', 6.803878210580031e-06], ['(fn)))', 6.803878210580031e-06], ['%qD",', 6.803878210580031e-06], ['normalize_call_expression', 6.803878210580031e-06], ['Improve', 6.803878210580031e-06], ['invalid.', 6.803878210580031e-06], ['ref.', 6.803878210580031e-06], ['COMPONENT_REF)', 6.803878210580031e-06], ['"constraint', 6.803878210580031e-06], ['(!type', 6.803878210580031e-06], ['cv_unqualified', 6.803878210580031e-06], ['pat', 6.803878210580031e-06], ['pat);', 6.803878210580031e-06], ['expansion,', 6.803878210580031e-06], ['partial', 6.803878210580031e-06], ['normalize_pack_expansion', 6.803878210580031e-06], ['normalize_any_expression', 6.803878210580031e-06], ['TRUTH_ANDIF_EXPR:', 6.803878210580031e-06], ['TRUTH_ORIF_EXPR:', 6.803878210580031e-06], ['normalize_any_statement', 6.803878210580031e-06], ['Reduction', 6.803878210580031e-06], ['normalize_any_declaration', 6.803878210580031e-06], ['T1.', 6.803878210580031e-06], ['normalize_conjunction', 6.803878210580031e-06], ['normalize_disjunction', 6.803878210580031e-06], ['specializations', 6.803878210580031e-06], ['concepts', 6.803878210580031e-06], ['normalize_predicate_constraint', 6.803878210580031e-06], ['normalize_parameterized_constraint', 6.803878210580031e-06], ['(PARM_CONSTR_OPERAND', 6.803878210580031e-06], ['comprised', 6.803878210580031e-06], ['Semantic', 6.803878210580031e-06], ['current_template_constraints', 6.803878210580031e-06], ['(!current_template_parms)', 6.803878210580031e-06], ['TEMPLATE_PARM_CONSTRAINTS', 6.803878210580031e-06], ['(tmpl_constr,', 6.803878210580031e-06], ['declaration",', 6.803878210580031e-06], ['tree_constraint_info*', 6.803878210580031e-06], ['build_constraint_info', 6.803878210580031e-06], ['REST', 6.803878210580031e-06], ['build_concept_check_arguments', 6.803878210580031e-06], ['rest)', 6.803878210580031e-06], ['(rest', 6.803878210580031e-06], ['SET_NON_DEFAULT_TEMPLATE_ARGS_COUNT', 6.803878210580031e-06], ['TARGET', 6.803878210580031e-06], ['sufficient', 6.803878210580031e-06], ['CNC.', 6.803878210580031e-06], ['(proto);', 6.803878210580031e-06], ['CONSTRAINED_PARM_CONCEPT', 6.803878210580031e-06], ['cnc;', 6.803878210580031e-06], ['CONSTRAINED_PARM_EXTRA_ARGS', 6.803878210580031e-06], ['reduced', 6.803878210580031e-06], ['finish_shorthand_constraint', 6.803878210580031e-06], ['variadic,', 6.803878210580031e-06], ['template_parameter_pack_p', 6.803878210580031e-06], ['is_decl_pack', 6.803878210580031e-06], ['template_parm_to_arg', 6.803878210580031e-06], ['(apply_to_all_p)', 6.803878210580031e-06], ['expansion.', 6.803878210580031e-06], ['process_introduction_parm', 6.803878210580031e-06], ['src_parm', 6.803878210580031e-06], ['grab', 6.803878210580031e-06], ['chained', 6.803878210580031e-06], ['(parameter_list,', 6.803878210580031e-06], ['parm;', 6.803878210580031e-06], ['TYPE_DECL)', 6.803878210580031e-06], ['(class_type_node,', 6.803878210580031e-06], ['begin_template_parm_list', 6.803878210580031e-06], ['end_template_parm_list', 6.803878210580031e-06], ['retain', 6.803878210580031e-06], ['(tmpl_decl,', 6.803878210580031e-06], ['(TREE_VEC_LENGTH', 6.803878210580031e-06], ['(parms));', 6.803878210580031e-06], ['c2)', 6.803878210580031e-06], ['(c1)', 6.803878210580031e-06], ['(c2);', 6.803878210580031e-06], ['(t1', 6.803878210580031e-06], ['C.', 6.803878210580031e-06], ['iterative_hash_template_arg', 6.803878210580031e-06], ['instantiation', 6.803878210580031e-06], ['templates.', 6.803878210580031e-06], ['S,', 6.803878210580031e-06], ['tsubst_predicate_constraint', 6.803878210580031e-06], ['tsubst_check_constraint', 6.803878210580031e-06], ['tsubst_logical_operator', 6.803878210580031e-06], ['tsubst_expr_constr', 6.803878210580031e-06], ['tsubst_type_constr', 6.803878210580031e-06], ['tsubst_implicit_conversion_constr', 6.803878210580031e-06], ['ICONV_CONSTR_EXPR', 6.803878210580031e-06], ['new_expr', 6.803878210580031e-06], ['(new_expr', 6.803878210580031e-06], ['new_expr,', 6.803878210580031e-06], ['tsubst_argument_deduction_constr', 6.803878210580031e-06], ['(pattern,', 6.803878210580031e-06], ['tsubst_exception_constr', 6.803878210580031e-06], ['PARMS', 6.803878210580031e-06], ['declare_constraint_vars', 6.803878210580031e-06], ['register_local_specialization', 6.803878210580031e-06], ['vars);', 6.803878210580031e-06], ['tsubst_parameterized_constraint', 6.803878210580031e-06], ['tsubst_simple_requirement', 6.803878210580031e-06], ['finish_simple_requirement', 6.803878210580031e-06], ['tsubst_type_requirement', 6.803878210580031e-06], ['finish_type_requirement', 6.803878210580031e-06], ['tsubst_compound_requirement', 6.803878210580031e-06], ['COMPOUND_REQ_NOEXCEPT_P', 6.803878210580031e-06], ['finish_compound_requirement', 6.803878210580031e-06], ['tsubst_nested_requirement', 6.803878210580031e-06], ['finish_nested_requirement', 6.803878210580031e-06], ['tsubst_requirement', 6.803878210580031e-06], ['tsubst_requirement_body', 6.803878210580031e-06], ['nreverse', 6.803878210580031e-06], ['reqs', 6.803878210580031e-06], ['finish_requires_expr', 6.803878210580031e-06], ['reqs);', 6.803878210580031e-06], ['decl_constr', 6.803878210580031e-06], ['satisfy_pack_expansion', 6.803878210580031e-06], ['tsubst_pack_expansion', 6.803878210580031e-06], ['(exprs', 6.803878210580031e-06], ['(exprs);', 6.803878210580031e-06], ['(exprs,', 6.803878210580031e-06], ['boolean_true_node)', 6.803878210580031e-06], ['satisfy_predicate_constraint', 6.803878210580031e-06], ['naked', 6.803878210580031e-06], ['succeeds', 6.803878210580031e-06], ['satisfy_check_constraint', 6.803878210580031e-06], ['cargs', 6.803878210580031e-06], ['Instantiate', 6.803878210580031e-06], ['(targs', 6.803878210580031e-06], ['prev', 6.803878210580031e-06], ['prev;', 6.803878210580031e-06], ['memoize_concept_satisfaction', 6.803878210580031e-06], ['satisfy_expression_constraint', 6.803878210580031e-06], ['deferring_access_check_sentinel', 6.803878210580031e-06], ['deferring;', 6.803878210580031e-06], ['(!perform_deferred_access_checks', 6.803878210580031e-06], ['satisfy_type_constraint', 6.803878210580031e-06], ['satisfy_implicit_conversion_constraint', 6.803878210580031e-06], ['satisfy_argument_deduction_constraint', 6.803878210580031e-06], ['(placeholder);', 6.803878210580031e-06], ['satisfy_exception_constraint', 6.803878210580031e-06], ['satisfy_parameterized_constraint', 6.803878210580031e-06], ["wouldn't", 6.803878210580031e-06], ['user-defined', 6.803878210580031e-06], ['satisfy_conjunction', 6.803878210580031e-06], ['(t0', 6.803878210580031e-06], ['satisfy_disjunction', 6.803878210580031e-06], ['auto_timevar', 6.803878210580031e-06], ['(true);', 6.803878210580031e-06], ['Actually', 6.803878210580031e-06], ['satisfaction.', 6.803878210580031e-06], ['evaluate_constraints', 6.803878210580031e-06], ['evaluate_constraint_expression', 6.803878210580031e-06], ['constraints_satisfied_p', 6.803878210580031e-06], ['DECL_TEMPLATE_INFO', 6.803878210580031e-06], ['TI_TEMPLATE', 6.803878210580031e-06], ['(get_constraints', 6.803878210580031e-06], ['(possibly', 6.803878210580031e-06], ['reqs)', 6.803878210580031e-06], ['(parm))', 6.803878210580031e-06], ['properties.', 6.803878210580031e-06], ['specifies', 6.803878210580031e-06], ['satisfies', 6.803878210580031e-06], ['Sometimes', 6.803878210580031e-06], ['CLEANUP_POINT_EXPR)', 6.803878210580031e-06], ['!STATEMENT_LIST_HEAD', 6.803878210580031e-06], ['(body))', 6.803878210580031e-06], ['erroneous,', 6.803878210580031e-06], ['"definition', 6.803878210580031e-06], ['FN,', 6.803878210580031e-06], ['(fn),', 6.803878210580031e-06], ['equivalent_constraints', 6.803878210580031e-06], ['(!a', 6.803878210580031e-06], ['(!b', 6.803878210580031e-06], ['cp_tree_equal', 6.803878210580031e-06], ["B's", 6.803878210580031e-06], ['(d2));', 6.803878210580031e-06], ['subsumes_constraints', 6.803878210580031e-06], ['(d1);', 6.803878210580031e-06], ['(d2);', 6.803878210580031e-06], ['(subsumes_constraints', 6.803878210580031e-06], ['c1))', 6.803878210580031e-06], ['D1', 6.803878210580031e-06], ['D2.', 6.803878210580031e-06], ['detailed', 6.803878210580031e-06], ['diagnosing', 6.803878210580031e-06], ['constraint_thresh', 6.803878210580031e-06], ['undiagnosed_constraint_failures', 6.803878210580031e-06], ['turn.', 6.803878210580031e-06], ['diagnose_trait_expression', 6.803878210580031e-06], ['assignable",', 6.803878210580031e-06], ['diagnose_other_expression', 6.803878210580031e-06], ['false",', 6.803878210580031e-06], ['diagnose_predicate_constraint', 6.803878210580031e-06], ['(cur))', 6.803878210580031e-06], ['diagnose_pack_expansion', 6.803878210580031e-06], ['diagnose_constraint.', 6.803878210580031e-06], ['diagnose_check_constraint', 6.803878210580031e-06], ['(dloc,', 6.803878210580031e-06], ['diagnose_logical_constraint', 6.803878210580031e-06], ['(!constraints_satisfied_p', 6.803878210580031e-06], ['(orig,', 6.803878210580031e-06], ['diagnose_expression_constraint', 6.803878210580031e-06], ['ill-formed",', 6.803878210580031e-06], ['"====', 6.803878210580031e-06], ['DUMP', 6.803878210580031e-06], ['====");', 6.803878210580031e-06], ['diagnose_type_constraint', 6.803878210580031e-06], ['diagnose_implicit_conversion_constraint', 6.803878210580031e-06], ['into,', 6.803878210580031e-06], ['"substitution', 6.803878210580031e-06], ['diagnose_argument_deduction_constraint', 6.803878210580031e-06], ['"unable', 6.803878210580031e-06], ['diagnose_exception_constraint', 6.803878210580031e-06], ['diagnose_parameterized_constraint', 6.803878210580031e-06], ['variables");', 6.803878210580031e-06], ['diagnose_declaration_constraints', 6.803878210580031e-06], ['(!args)', 6.803878210580031e-06], ['(DECL_P', 6.803878210580031e-06], ['iter)', 6.803878210580031e-06], ['any_p', 6.803878210580031e-06], ['Proof', 6.803878210580031e-06], ['(term_entry', 6.803878210580031e-06], ['tactics', 6.803878210580031e-06], ['manipulation', 6.803878210580031e-06], ['push_back', 6.803878210580031e-06], ['term_list::term_list', 6.803878210580031e-06], ['tab', 6.803878210580031e-06], ['(11)', 6.803878210580031e-06], ['{t};', 6.803878210580031e-06], ['(&ent);', 6.803878210580031e-06], ['proposition', 6.803878210580031e-06], ['INSERT);', 6.803878210580031e-06], ['*slot', 6.803878210580031e-06], ['(*iter));', 6.803878210580031e-06], ['term_list::replace', 6.803878210580031e-06], ['conclusions.', 6.803878210580031e-06], ['managing', 6.803878210580031e-06], ['std::list<proof_goal>', 6.803878210580031e-06], ['subgoal.', 6.803878210580031e-06], ['subgoal,', 6.803878210580031e-06], ['end());', 6.803878210580031e-06], ['(term_list::iterator', 6.803878210580031e-06], ['prove', 6.803878210580031e-06], ['invalid,', 6.803878210580031e-06], ['analyze_pack', 6.803878210580031e-06], ['(*iter)', 6.803878210580031e-06], ['search_known_subsumptions', 6.803878210580031e-06], ['searching', 6.803878210580031e-06], ['analyze_check', 6.803878210580031e-06], ['analyze_parameterized', 6.803878210580031e-06], ['analyze_conjunction', 6.803878210580031e-06], ['analyze_disjunction', 6.803878210580031e-06], ['analyze_term', 6.803878210580031e-06], ['proven', 6.803878210580031e-06], ['way;', 6.803878210580031e-06], ['check_goal', 6.803878210580031e-06], ['check_proof', 6.803878210580031e-06], ['p.end();', 6.803878210580031e-06], ['load_check_assumption', 6.803878210580031e-06], ['load_parameterized_assumption', 6.803878210580031e-06], ['load_conjunction_assumption', 6.803878210580031e-06], ['Examine', 6.803878210580031e-06], ['p.end())', 6.803878210580031e-06], ['explode_disjunction', 6.803878210580031e-06], ['gi,', 6.803878210580031e-06], ['(*ti1,', 6.803878210580031e-06], ['(ti2,', 6.803878210580031e-06], ['clone', 6.803878210580031e-06], ['explode_assumptions', 6.803878210580031e-06], ['load_disjunction_conclusion', 6.803878210580031e-06], ['Quick', 6.803878210580031e-06], ['step_max', 6.803878210580031e-06], ['(step_count', 6.803878210580031e-06], ['branch_limit)', 6.803878210580031e-06], ['subsumes_constraints_nonnull', 6.803878210580031e-06], ['(check_constraint_info', 6.803878210580031e-06], ['2015-2019', 6.803878210580031e-06], ['handle_noreturn_attribute', 6.803878210580031e-06], ['handle_leaf_attribute', 6.803878210580031e-06], ['handle_const_attribute', 6.803878210580031e-06], ['handle_malloc_attribute', 6.803878210580031e-06], ['handle_pure_attribute', 6.803878210580031e-06], ['handle_novops_attribute', 6.803878210580031e-06], ['handle_nonnull_attribute', 6.803878210580031e-06], ['handle_nothrow_attribute', 6.803878210580031e-06], ['handle_type_generic_attribute', 6.803878210580031e-06], ['handle_transaction_pure_attribute', 6.803878210580031e-06], ['handle_returns_twice_attribute', 6.803878210580031e-06], ['handle_fnspec_attribute', 6.803878210580031e-06], ['d_handle_noinline_attribute', 6.803878210580031e-06], ['d_handle_forceinline_attribute', 6.803878210580031e-06], ['d_handle_flatten_attribute', 6.803878210580031e-06], ['d_handle_target_attribute', 6.803878210580031e-06], ['d_handle_noclone_attribute', 6.803878210580031e-06], ['d_handle_section_attribute', 6.803878210580031e-06], ['d_handle_alias_attribute', 6.803878210580031e-06], ['d_handle_weak_attribute', 6.803878210580031e-06], ['("malloc",', 6.803878210580031e-06], ['("returns_twice",', 6.803878210580031e-06], ['("noinline",', 6.803878210580031e-06], ['("forceinline",', 6.803878210580031e-06], ['min_len,', 6.803878210580031e-06], ['max_len,', 6.803878210580031e-06], ['decl_req,', 6.803878210580031e-06], ['type_req,', 6.803878210580031e-06], ['fn_type_req,', 6.803878210580031e-06], ['affects_type_identity,', 6.803878210580031e-06], ['handler,', 6.803878210580031e-06], ['Table', 6.803878210580031e-06], ['attr_const_pure_exclusions),', 6.803878210580031e-06], ['("type', 6.803878210580031e-06], ['generic",', 6.803878210580031e-06], ['("noclone",', 6.803878210580031e-06], ['ATTRNAME', 6.803878210580031e-06], ['insert_type_attribute', 6.803878210580031e-06], ['*attrname,', 6.803878210580031e-06], ['(attrname);', 6.803878210580031e-06], ['merge_attributes', 6.803878210580031e-06], ['attribs);', 6.803878210580031e-06], ['(DECL_ATTRIBUTES', 6.803878210580031e-06], ['kept', 6.803878210580031e-06], ['p->name;', 6.803878210580031e-06], ['(p->name)', 6.803878210580031e-06], ['Defined', 6.803878210580031e-06], ['(attr->op', 6.803878210580031e-06], ['attr', 6.803878210580031e-06], ['TOKstring)', 6.803878210580031e-06], ['("expected', 6.803878210580031e-06], ['attribute,', 6.803878210580031e-06], ['handled.', 6.803878210580031e-06], ['warning_at', 6.803878210580031e-06], ['Chain', 6.803878210580031e-06], ['together.', 6.803878210580031e-06], ['string);', 6.803878210580031e-06], ['Built-in', 6.803878210580031e-06], ['FUNCTION_TYPE)', 6.803878210580031e-06], ['(build_type_variant', 6.803878210580031e-06], ['(type)),', 6.803878210580031e-06], ['(!TREE_PUBLIC', 6.803878210580031e-06], ['DECL_PURE_P', 6.803878210580031e-06], ['DECL_IS_NOVOPS', 6.803878210580031e-06], ['fetch', 6.803878210580031e-06], ['Argument', 6.803878210580031e-06], ['Language', 6.803878210580031e-06], ['DECL_UNINLINABLE', 6.803878210580031e-06], ['attributes))', 6.803878210580031e-06], ['attributes);', 6.803878210580031e-06], ['DECL_NO_INLINE_WARNING_P', 6.803878210580031e-06], ['(VAR_OR_FUNCTION_DECL_P', 6.803878210580031e-06], ['"section', 6.803878210580031e-06], ['string",', 6.803878210580031e-06], ['(id));', 6.803878210580031e-06], ['counts', 6.803878210580031e-06], ['symtab_node', 6.803878210580031e-06], ['d-builtins.cc', 6.803878210580031e-06], ['"dmd/cond.h"', 6.803878210580031e-06], ['re-use', 6.803878210580031e-06], ['builtin_data', 6.803878210580031e-06], ['*dtype;', 6.803878210580031e-06], ['`C', 6.803878210580031e-06], ['builtin_converted_decls.length', 6.803878210580031e-06], ['POINTER_TYPE:', 6.803878210580031e-06], ['()->addMod', 6.803878210580031e-06], ['(TypePointer::create', 6.803878210580031e-06], ['(dtype))->addMod', 6.803878210580031e-06], ['REFERENCE_TYPE:', 6.803878210580031e-06], ['REFERENCE_TYPE', 6.803878210580031e-06], ['pointerTo(),', 6.803878210580031e-06], ['BOOLEAN_TYPE:', 6.803878210580031e-06], ['INTEGER_TYPE:', 6.803878210580031e-06], ['Tuns64;', 6.803878210580031e-06], ['REAL_TYPE:', 6.803878210580031e-06], ['(dtype->size', 6.803878210580031e-06], ['COMPLEX_TYPE:', 6.803878210580031e-06], ['VOID_TYPE:', 6.803878210580031e-06], ['ARRAY_TYPE:', 6.803878210580031e-06], ['size_binop', 6.803878210580031e-06], ['size_one_node,', 6.803878210580031e-06], ['(sizetype,', 6.803878210580031e-06], ['dtype->sarrayOf', 6.803878210580031e-06], ['(TREE_INT_CST_LOW', 6.803878210580031e-06], ['VECTOR_TYPE:', 6.803878210580031e-06], ['Dsymbols;', 6.803878210580031e-06], ['varargs_p', 6.803878210580031e-06], ['(argtype);', 6.803878210580031e-06], ['STCref;', 6.803878210580031e-06], ['targ,', 6.803878210580031e-06], ['CST.', 6.803878210580031e-06], ['im', 6.803878210580031e-06], ['complex_t', 6.803878210580031e-06], ['ldouble', 6.803878210580031e-06], ['(value),', 6.803878210580031e-06], ['*elements', 6.803878210580031e-06], ['*elem', 6.803878210580031e-06], ['(cst,', 6.803878210580031e-06], ['e->type', 6.803878210580031e-06], ['global.params.is64bit', 6.803878210580031e-06], ['d_init_versions', 6.803878210580031e-06], ["`global.params.cov'", 6.803878210580031e-06], ['(global.params.useUnitTests)', 6.803878210580031e-06], ['(global.params.useAssert)', 6.803878210580031e-06], ['(global.params.useArrayBounds', 6.803878210580031e-06], ['ALIAS', 6.803878210580031e-06], ['AliasDeclaration', 6.803878210580031e-06], ['Target::loadModule.', 6.803878210580031e-06], ['d_build_builtins_module', 6.803878210580031e-06], ['(gcc_builtins_functions,', 6.803878210580031e-06], ['Built-ins', 6.803878210580031e-06], ['correspond', 6.803878210580031e-06], ["`extern(C)'", 6.803878210580031e-06], ['raise', 6.803878210580031e-06], ['exception,', 6.803878210580031e-06], ['PUREweak', 6.803878210580031e-06], ['!DECL_ASSEMBLER_NAME_SET_P', 6.803878210580031e-06], ['tf->trust', 6.803878210580031e-06], ['tf);', 6.803878210580031e-06], ['(gcc_builtins_types,', 6.803878210580031e-06], ['typeinfo,', 6.803878210580031e-06], ['demand.', 6.803878210580031e-06], ['again.', 6.803878210580031e-06], ['(long_integer_type_node);', 6.803878210580031e-06], ['(byte_mode,', 6.803878210580031e-06], ['(word_mode,', 6.803878210580031e-06], ['(mode,', 6.803878210580031e-06], ['AttribDeclaration', 6.803878210580031e-06], ['*decls', 6.803878210580031e-06], ['(decls', 6.803878210580031e-06], ['(sym);', 6.803878210580031e-06], ['(gcc_builtins_libfuncs,', 6.803878210580031e-06], ['(fd->ident', 6.803878210580031e-06], ['(!m', 6.803878210580031e-06], ['builtin-types.def', 6.803878210580031e-06], ['invoked.', 6.803878210580031e-06], ['do_build_builtin_fn', 6.803878210580031e-06], ['fncode,', 6.803878210580031e-06], ['fnclass,', 6.803878210580031e-06], ['libname', 6.803878210580031e-06], ['builtins.def.', 6.803878210580031e-06], ['d_build_c_type_nodes', 6.803878210580031e-06], ['"long', 6.803878210580031e-06], ['long_unsigned_type_node;', 6.803878210580031e-06], ['long_long_unsigned_type_node;', 6.803878210580031e-06], ['d_build_d_type_nodes', 6.803878210580031e-06], ['(64);', 6.803878210580031e-06], ['(128);', 6.803878210580031e-06], ['(float_type_node);', 6.803878210580031e-06], ['(double_type_node);', 6.803878210580031e-06], ['ModuleInfo,', 6.803878210580031e-06], ['ClassInfo,', 6.803878210580031e-06], ['(This', 6.803878210580031e-06], ['wins', 6.803878210580031e-06], ['gdb).', 6.803878210580031e-06], ['(vfunc_type)', 6.803878210580031e-06], ['(vfunc_type);', 6.803878210580031e-06], ['("length"),', 6.803878210580031e-06], ['DEF_ATTR_NULL_TREE(ENUM)', 6.803878210580031e-06], ['DEF_ATTR_INT(ENUM,', 6.803878210580031e-06], ['DEF_ATTR_STRING(ENUM,', 6.803878210580031e-06], ['DEF_ATTR_IDENT(ENUM,', 6.803878210580031e-06], ['STRING)', 6.803878210580031e-06], ['DEF_ATTR_TREE_LIST(ENUM,', 6.803878210580031e-06], ['PURPOSE,', 6.803878210580031e-06], ['VALUE,', 6.803878210580031e-06], ['CHAIN)', 6.803878210580031e-06], ['"builtin-attrs.def"', 6.803878210580031e-06], ['DEF_ATTR_NULL_TREE', 6.803878210580031e-06], ['DEF_ATTR_INT', 6.803878210580031e-06], ['DEF_ATTR_STRING', 6.803878210580031e-06], ['DEF_ATTR_IDENT', 6.803878210580031e-06], ['DEF_ATTR_TREE_LIST', 6.803878210580031e-06], ['d_init_attributes', 6.803878210580031e-06], ['VALUE);', 6.803878210580031e-06], ['d_builtin_type', 6.803878210580031e-06], ['ARG8)', 6.803878210580031e-06], ['ARG9)', 6.803878210580031e-06], ['ARG10)', 6.803878210580031e-06], ['TYPE)', 6.803878210580031e-06], ['"builtin-types.def"', 6.803878210580031e-06], ['DEF_PRIMITIVE_TYPE', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_1', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_2', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_3', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_4', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_5', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_6', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_7', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_8', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_9', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_10', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_11', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_0', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_1', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_2', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_3', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_4', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_5', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_6', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_7', 6.803878210580031e-06], ['DEF_FUNCTION_TYPE_VAR_11', 6.803878210580031e-06], ['DEF_POINTER_TYPE', 6.803878210580031e-06], ['BT_LAST', 6.803878210580031e-06], ['involved', 6.803878210580031e-06], ['(list,', 6.803878210580031e-06], ['egress;', 6.803878210580031e-06], ['build_varargs_function_type_array', 6.803878210580031e-06], ['build_function_type_array', 6.803878210580031e-06], ['ARG1);', 6.803878210580031e-06], ['ARG2);', 6.803878210580031e-06], ['ARG3);', 6.803878210580031e-06], ['ARG4);', 6.803878210580031e-06], ['ARG5);', 6.803878210580031e-06], ['ARG6);', 6.803878210580031e-06], ['ARG7);', 6.803878210580031e-06], ['ARG11);', 6.803878210580031e-06], ['CLASS,', 6.803878210580031e-06], ['BOTH_P,', 6.803878210580031e-06], ['FALLBACK_P,', 6.803878210580031e-06], ['COND)', 6.803878210580031e-06], ['d_init_builtins', 6.803878210580031e-06], ['Type.', 6.803878210580031e-06], ['gimplification', 6.803878210580031e-06], ['va_list_type_node);', 6.803878210580031e-06], ['d_register_builtin_type', 6.803878210580031e-06], ['d_builtin_function', 6.803878210580031e-06], ['gcc_location', 6.803878210580031e-06], ['(loc.filename)', 6.803878210580031e-06], ['linemap_add', 6.803878210580031e-06], ['DSYM.', 6.803878210580031e-06], ['*dsym)', 6.803878210580031e-06], ['*parent', 6.803878210580031e-06], ['NAMESPACE_DECL', 6.803878210580031e-06], ['decl->isDataseg', 6.803878210580031e-06], ['(ad->type);', 6.803878210580031e-06], ['(ad->isClassDeclaration', 6.803878210580031e-06], ['copy_list', 6.803878210580031e-06], ['newtype;', 6.803878210580031e-06], ['Treference', 6.803878210580031e-06], ['decl->storage_class', 6.803878210580031e-06], ['declaration_type', 6.803878210580031e-06], ['(tf);', 6.803878210580031e-06], ['(t->merge2', 6.803878210580031e-06], ['array->pointer', 6.803878210580031e-06], ['valist_array_p', 6.803878210580031e-06], ['*valist', 6.803878210580031e-06], ['valist', 6.803878210580031e-06], ['valist->castMod', 6.803878210580031e-06], ['(valist);', 6.803878210580031e-06], ['(arg->type);', 6.803878210580031e-06], ['ARG.', 6.803878210580031e-06], ['type_passed_as', 6.803878210580031e-06], ['(valist_array_p', 6.803878210580031e-06], ['(arg->type))', 6.803878210580031e-06], ['(argument_reference_p', 6.803878210580031e-06], ['VALUE.', 6.803878210580031e-06], ['len_field', 6.803878210580031e-06], ['ptr_field);', 6.803878210580031e-06], ['pointing', 6.803878210580031e-06], ['len_field,', 6.803878210580031e-06], ['(((TypeSArray', 6.803878210580031e-06], ['tb)->dim->toUInteger', 6.803878210580031e-06], ["InterfaceDeclaration's", 6.803878210580031e-06], ['included.', 6.803878210580031e-06], ['super,', 6.803878210580031e-06], ['binfo', 6.803878210580031e-06], ['make_tree_binfo', 6.803878210580031e-06], ['BINFO_TYPE', 6.803878210580031e-06], ['BINFO_INHERITANCE_CHAIN', 6.803878210580031e-06], ['super;', 6.803878210580031e-06], ['BINFO_OFFSET', 6.803878210580031e-06], ['BINFO_BASE_APPEND', 6.803878210580031e-06], ['binfo;', 6.803878210580031e-06], ['Target::ptrsize);', 6.803878210580031e-06], ['.object', 6.803878210580031e-06], ['OBJECT.', 6.803878210580031e-06], ['(object),', 6.803878210580031e-06], ['method);', 6.803878210580031e-06], ['ce;', 6.803878210580031e-06], ['CONSTRUCTOR_ELT', 6.803878210580031e-06], ['typeof(null)', 6.803878210580031e-06], ['nullable', 6.803878210580031e-06], ['(TYPE_ASSOCIATIVE_ARRAY', 6.803878210580031e-06], ['FNTYPE', 6.803878210580031e-06], ['build_memref', 6.803878210580031e-06], ['(fntype,', 6.803878210580031e-06], ['index));', 6.803878210580031e-06], ['temporaries,', 6.803878210580031e-06], ['COND_EXPR:', 6.803878210580031e-06], ['(lvalue_p', 6.803878210580031e-06], ['2)));', 6.803878210580031e-06], ['TARGET_EXPR:', 6.803878210580031e-06], ['(&rhs));', 6.803878210580031e-06], ['TARGET_EXPR,', 6.803878210580031e-06], ['build_target_expr', 6.803878210580031e-06], ['TARGET_EXPR.', 6.803878210580031e-06], ['va_list,', 6.803878210580031e-06], ['CONST_DECL)', 6.803878210580031e-06], ['saying', 6.803878210580031e-06], ['it;', 6.803878210580031e-06], ['CONST_DECL:', 6.803878210580031e-06], ['FUNCTION_DECL:', 6.803878210580031e-06], ['CONSTRUCTOR:', 6.803878210580031e-06], ['-Wunused', 6.803878210580031e-06], ['identity_compare_p', 6.803878210580031e-06], ['(sd->isUnionDeclaration', 6.803878210580031e-06], ['vd->type->toBasetype', 6.803878210580031e-06], ['structures.', 6.803878210580031e-06], ['((tb->ty', 6.803878210580031e-06], ['Target::realpad', 6.803878210580031e-06], ['vd->offset)', 6.803878210580031e-06], ["There's", 6.803878210580031e-06], ['hole', 6.803878210580031e-06], ['T2,', 6.803878210580031e-06], ['excessive', 6.803878210580031e-06], ['(BUILT_IN_MEMCMP);', 6.803878210580031e-06], ['(tmemcmp,', 6.803878210580031e-06], ['field-by-field', 6.803878210580031e-06], ['tcode', 6.803878210580031e-06], ['TRUTH_ANDIF_EXPR', 6.803878210580031e-06], ['(sd->fields.dim', 6.803878210580031e-06], ['tmemcmp);', 6.803878210580031e-06], ['tmemcmp;', 6.803878210580031e-06], ['(sd->structsize));', 6.803878210580031e-06], ['(vd);', 6.803878210580031e-06], ['t1ref', 6.803878210580031e-06], ['sfield);', 6.803878210580031e-06], ['t2ref', 6.803878210580031e-06], ['tcmp;', 6.803878210580031e-06], ['(t2ref));', 6.803878210580031e-06], ['ieq', 6.803878210580031e-06], ['(stype));', 6.803878210580031e-06], ['*((T*)', 6.803878210580031e-06], ['tmode', 6.803878210580031e-06], ['(mode.require', 6.803878210580031e-06], ['(tmode,', 6.803878210580031e-06], ['memcmp,', 6.803878210580031e-06], ['(&t2);', 6.803878210580031e-06], ['As', 6.803878210580031e-06], ['heuristic,', 6.803878210580031e-06], ['either.', 6.803878210580031e-06], ['(compound_expr', 6.803878210580031e-06], ['build_array_struct_comparison', 6.803878210580031e-06], ['init));', 6.803878210580031e-06], ['lentype', 6.803878210580031e-06], ['(length);', 6.803878210580031e-06], ['locals', 6.803878210580031e-06], ['Exit', 6.803878210580031e-06], ['integer_zero_node));', 6.803878210580031e-06], ['(EXIT_EXPR,', 6.803878210580031e-06], ['counter.', 6.803878210580031e-06], ['lentype,', 6.803878210580031e-06], ['integer_one_node));', 6.803878210580031e-06], ['fieldpos)', 6.803878210580031e-06], ['atype', 6.803878210580031e-06], ['fieldpos', 6.803878210580031e-06], ['SET_DECL_OFFSET_ALIGN', 6.803878210580031e-06], ['DECL_FIELD_BIT_OFFSET', 6.803878210580031e-06], ['INIT,', 6.803878210580031e-06], ['(init))', 6.803878210580031e-06], ['fillholes', 6.803878210580031e-06], ['CLASS_TYPE_P', 6.803878210580031e-06], ['(!initializer_zerop', 6.803878210580031e-06], ['idx;', 6.803878210580031e-06], ['shape', 6.803878210580031e-06], ['int_byte_position', 6.803878210580031e-06], ['(fillholes', 6.803878210580031e-06], ['pfield', 6.803878210580031e-06], ['pvalue', 6.803878210580031e-06], ['(pfield));', 6.803878210580031e-06], ['pfield,', 6.803878210580031e-06], ['pvalue);', 6.803878210580031e-06], ['vtype', 6.803878210580031e-06], ['(ANON_AGGR_TYPE_P', 6.803878210580031e-06], ['(!TREE_CONSTANT', 6.803878210580031e-06], ['unions,', 6.803878210580031e-06], ['initialized,', 6.803878210580031e-06], ['reachable.', 6.803878210580031e-06], ['FIELD', 6.803878210580031e-06], ['aggregate,', 6.803878210580031e-06], ['(DECL_CONTEXT', 6.803878210580031e-06], ['lvalue', 6.803878210580031e-06], ['(&lhs);', 6.803878210580031e-06], ['INIT_EXPR', 6.803878210580031e-06], ['(rhs))', 6.803878210580031e-06], ['aggregate_value_p', 6.803878210580031e-06], ['rhs))', 6.803878210580031e-06], ['CALL_EXPR_RETURN_SLOT_OPT', 6.803878210580031e-06], ['replaces', 6.803878210580031e-06], ['TARGET_EXPR)', 6.803878210580031e-06], ['twice.', 6.803878210580031e-06], ['(rhs,', 6.803878210580031e-06], ['TARGET_EXPR_SLOT', 6.803878210580031e-06], ['(rhs);', 6.803878210580031e-06], ['viewed', 6.803878210580031e-06], ['Building', 6.803878210580031e-06], ['decl_with_nonnull_addr_p', 6.803878210580031e-06], ['(OPT_Waddress,', 6.803878210580031e-06], ['(arg1)))', 6.803878210580031e-06], ['(arg1))', 6.803878210580031e-06], ['arg2)', 6.803878210580031e-06], ['(arg1', 6.803878210580031e-06], ['void_node)', 6.803878210580031e-06], ['arg1;', 6.803878210580031e-06], ['(arg1)', 6.803878210580031e-06], ['arg0),', 6.803878210580031e-06], ['CE,', 6.803878210580031e-06], ['ce)', 6.803878210580031e-06], ['REALPART_EXPR,', 6.803878210580031e-06], ['(ce)),', 6.803878210580031e-06], ['IMAGPART_EXPR,', 6.803878210580031e-06], ['RE', 6.803878210580031e-06], ['COMPLEX_EXPR,', 6.803878210580031e-06], ['im);', 6.803878210580031e-06], ['*(e1,', 6.803878210580031e-06], ['(index))', 6.803878210580031e-06], ['(size_exp))', 6.803878210580031e-06], ['earlier.', 6.803878210580031e-06], ['*(PTR', 6.803878210580031e-06], ['MINUS_EXPR', 6.803878210580031e-06], ['MINUS_EXPR)', 6.803878210580031e-06], ['build_array_set', 6.803878210580031e-06], ['size));', 6.803878210580031e-06], ['(type->nextOf', 6.803878210580031e-06], ['Initializing', 6.803878210580031e-06], ['(val)', 6.803878210580031e-06], ['dims', 6.803878210580031e-06], ['dims);', 6.803878210580031e-06], ['Implicitly', 6.803878210580031e-06], ['(VOID_TYPE_P', 6.803878210580031e-06], ['RangeError.', 6.803878210580031e-06], ['evaluations', 6.803878210580031e-06], ['LIBCALL_ARRAY_BOUNDS);', 6.803878210580031e-06], ['array_bounds_check', 6.803878210580031e-06], ['undeclared', 6.803878210580031e-06], ['BIND_EXPR.', 6.803878210580031e-06], ['maybe_temporary_var', 6.803878210580031e-06], ['*out_var', 6.803878210580031e-06], ['BODY', 6.803878210580031e-06], ['body)', 6.803878210580031e-06], ['(var_chain)', 6.803878210580031e-06], ['t->nextOf', 6.803878210580031e-06], ['CALLER.', 6.803878210580031e-06], ['*fd,', 6.803878210580031e-06], ['arguments);', 6.803878210580031e-06], ['(callable);', 6.803878210580031e-06], ['(tf', 6.803878210580031e-06], ['Tfunction);', 6.803878210580031e-06], ['("need', 6.803878210580031e-06], ['arguments->dim;', 6.803878210580031e-06], ['Lagain:', 6.803878210580031e-06], ['(*arguments)[i];', 6.803878210580031e-06], ['(arg->op', 6.803878210580031e-06], ['TOKcomma)', 6.803878210580031e-06], ['(CommaExp', 6.803878210580031e-06], ['(saved_args,', 6.803878210580031e-06], ['ce->e2;', 6.803878210580031e-06], ['Parameter::dim', 6.803878210580031e-06], ['(tf->linkage', 6.803878210580031e-06], ['formal', 6.803878210580031e-06], ['convert_for_argument', 6.803878210580031e-06], ['aggregates', 6.803878210580031e-06], ['!TREE_ADDRESSABLE', 6.803878210580031e-06], ['(targ)', 6.803878210580031e-06], ['(callee))', 6.803878210580031e-06], ['Enforce', 6.803878210580031e-06], ['maybe_expand_intrinsic', 6.803878210580031e-06], ['msg)', 6.803878210580031e-06], ['file;', 6.803878210580031e-06], ['(Type::tchar->arrayOf', 6.803878210580031e-06], ['line);', 6.803878210580031e-06], ['build_float_modulus', 6.803878210580031e-06], ['(basetype))', 6.803878210580031e-06], ["'vthis'", 6.803878210580031e-06], ['(basetype),', 6.803878210580031e-06], ['SYM', 6.803878210580031e-06], ['(!fd->fbody)', 6.803878210580031e-06], ['__ensure', 6.803878210580031e-06], ['fd->ident', 6.803878210580031e-06], ['thisfd;', 6.803878210580031e-06], ['NewExp', 6.803878210580031e-06], ['(fdparent', 6.803878210580031e-06], ['fd->isFuncLiteralDeclaration', 6.803878210580031e-06], ['(thisfd', 6.803878210580031e-06], ['dsym->toParent2', 6.803878210580031e-06], ['(ffo))', 6.803878210580031e-06], ['*cdo', 6.803878210580031e-06], ['()->isClassDeclaration', 6.803878210580031e-06], ['adjusted.', 6.803878210580031e-06], ['framefields', 6.803878210580031e-06], ['(ffo));', 6.803878210580031e-06], ['ve));', 6.803878210580031e-06], ['cd->toParent2', 6.803878210580031e-06], ['((fd', 6.803878210580031e-06], ['d_nested_struct', 6.803878210580031e-06], ['sd', 6.803878210580031e-06], ['OCD', 6.803878210580031e-06], ['find_this_tree', 6.803878210580031e-06], ['ad->isClassDeclaration', 6.803878210580031e-06], ['(ocd->isBaseOf', 6.803878210580031e-06], ['cd->type,', 6.803878210580031e-06], ['ocd->type);', 6.803878210580031e-06], ['Retrieve', 6.803878210580031e-06], ['decl->isStructDeclaration', 6.803878210580031e-06], ['templated', 6.803878210580031e-06], ['happened.', 6.803878210580031e-06], ['((TemplateInstance', 6.803878210580031e-06], ['outer->isClassDeclaration', 6.803878210580031e-06], ['Classes', 6.803878210580031e-06], ['build_frame_type', 6.803878210580031e-06], ['(ffi);', 6.803878210580031e-06], ['(BUILTINS_LOCATION,', 6.803878210580031e-06], ['(ptr_field)', 6.803878210580031e-06], ['DECL_NONADDRESSABLE_P', 6.803878210580031e-06], ['inheriting', 6.803878210580031e-06], ['contract.', 6.803878210580031e-06], ['((global.params.useIn', 6.803878210580031e-06], ['fd->frequire)', 6.803878210580031e-06], ['(global.params.useOut', 6.803878210580031e-06], ['fd->fensure))', 6.803878210580031e-06], ['closureVars', 6.803878210580031e-06], ['fd->closureVars.remove', 6.803878210580031e-06], ['(j);', 6.803878210580031e-06], ['fd->closureVars.insert', 6.803878210580031e-06], ['vsym', 6.803878210580031e-06], ['(v->loc),', 6.803878210580031e-06], ['(vsym));', 6.803878210580031e-06], ['nrvo', 6.803878210580031e-06], ['(frame_rec_type);', 6.803878210580031e-06], ['build_closure', 6.803878210580031e-06], ['ffi', 6.803878210580031e-06], ['(COMPLETE_TYPE_P', 6.803878210580031e-06], ['decl_ref', 6.803878210580031e-06], ['Type::tvoidptr,', 6.803878210580031e-06], ['(decl_ref,', 6.803878210580031e-06], ['DECL_LANG_FRAME_FIELD', 6.803878210580031e-06], ['d_function_chain->static_chain', 6.803878210580031e-06], ['DECL_LANG_FRAMEINFO', 6.803878210580031e-06], ['ffi;', 6.803878210580031e-06], ['Functions', 6.803878210580031e-06], ['`fd`', 6.803878210580031e-06], ['(ffo);', 6.803878210580031e-06], ['(ad->isNested', 6.803878210580031e-06], ['*inner,', 6.803878210580031e-06], ['*outer)', 6.803878210580031e-06], ['Parent', 6.803878210580031e-06], ['((ad', 6.803878210580031e-06], ['outer);', 6.803878210580031e-06], ['frame_type', 6.803878210580031e-06], ['(frame_type', 6.803878210580031e-06], ['type0', 6.803878210580031e-06], ['type0;', 6.803878210580031e-06], ['(op0))', 6.803878210580031e-06], ['Will', 6.803878210580031e-06], ['(result_type,', 6.803878210580031e-06], ['((TREE_SIDE_EFFECTS', 6.803878210580031e-06], ['TRUTH_OR_EXPR', 6.803878210580031e-06], ['TRUTH_ORIF_EXPR),', 6.803878210580031e-06], ['Distribute', 6.803878210580031e-06], ['utype', 6.803878210580031e-06], ['COMPLEX_TYPE', 6.803878210580031e-06], ['retrieving', 6.803878210580031e-06], ['*totype', 6.803878210580031e-06], ['ETYPE', 6.803878210580031e-06], ['(etype', 6.803878210580031e-06], ['etype->toBasetype', 6.803878210580031e-06], ['totype->toBasetype', 6.803878210580031e-06], ['Tstruct:', 6.803878210580031e-06], ['(totype->size', 6.803878210580031e-06], ['etype->size', 6.803878210580031e-06], ['else,', 6.803878210580031e-06], ['Tclass:', 6.803878210580031e-06], ['special.', 6.803878210580031e-06], ['(totype);', 6.803878210580031e-06], ['object),', 6.803878210580031e-06], ['no-op', 6.803878210580031e-06], ['(OPT_Wcast_result,', 6.803878210580031e-06], ['"cast', 6.803878210580031e-06], ['result",', 6.803878210580031e-06], ['totype,', 6.803878210580031e-06], ['esize)', 6.803878210580031e-06], ['(dim', 6.803878210580031e-06], ['d_uns64', 6.803878210580031e-06], ['Tpointer:', 6.803878210580031e-06], ['Taarray', 6.803878210580031e-06], ['Tvector:', 6.803878210580031e-06], ['TypeSArray', 6.803878210580031e-06], ['uinteger_t', 6.803878210580031e-06], ['addition,', 6.803878210580031e-06], ['(type->toBasetype', 6.803878210580031e-06], ['()->ty)', 6.803878210580031e-06], ['!is', 6.803878210580031e-06], ['(TRUTH_OR_EXPR,', 6.803878210580031e-06], ['*exp)', 6.803878210580031e-06], ['()->arrayOf', 6.803878210580031e-06], ['exp->type,', 6.803878210580031e-06], ['Temporary', 6.803878210580031e-06], ['*exp,', 6.803878210580031e-06], ['(tb,', 6.803878210580031e-06], ['Rewrite', 6.803878210580031e-06], ['FORMAT', 6.803878210580031e-06], ['quoted', 6.803878210580031e-06], ["'%s'", 6.803878210580031e-06], ['remaining.', 6.803878210580031e-06], ["'`')", 6.803878210580031e-06], ['specification', 6.803878210580031e-06], ['unhandled', 6.803878210580031e-06], ['(*p)', 6.803878210580031e-06], ["'\\0':", 6.803878210580031e-06], ["'-':", 6.803878210580031e-06], ['formatting.', 6.803878210580031e-06], ['(*p))', 6.803878210580031e-06], ["'0':", 6.803878210580031e-06], ["'X':", 6.803878210580031e-06], ['KIND', 6.803878210580031e-06], ['(format);', 6.803878210580031e-06], ['PREFIX1', 6.803878210580031e-06], ['PREFIX2,', 6.803878210580031e-06], ['*prefix1,', 6.803878210580031e-06], ['(!global.gag', 6.803878210580031e-06], ['*xformat;', 6.803878210580031e-06], ['(prefix2', 6.803878210580031e-06], ['prefix2,', 6.803878210580031e-06], ['(prefix1', 6.803878210580031e-06], ['vwarning', 6.803878210580031e-06], ['Warnings', 6.803878210580031e-06], ['(global.params.warnings', 6.803878210580031e-06], ['DK_WARNING,', 6.803878210580031e-06], ['vwarningSupplemental', 6.803878210580031e-06], ['deprecations', 6.803878210580031e-06], ['vdeprecation', 6.803878210580031e-06], ['!global.gag)', 6.803878210580031e-06], ['vdeprecationSupplemental', 6.803878210580031e-06], ['"dmd/statement.h"', 6.803878210580031e-06], ['flag_max_errors;', 6.803878210580031e-06], ['occured', 6.803878210580031e-06], ['gagged.', 6.803878210580031e-06], ['(this->gaggedErrors', 6.803878210580031e-06], ['oldGagged);', 6.803878210580031e-06], ['printed.', 6.803878210580031e-06], ['file/line', 6.803878210580031e-06], ['this->charnum', 6.803878210580031e-06], ['filename;', 6.803878210580031e-06], ['(":%u",', 6.803878210580031e-06], ['regard', 6.803878210580031e-06], ['Target::RealProperties::infinity;', 6.803878210580031e-06], ['little-endian', 6.803878210580031e-06], ['big-endian', 6.803878210580031e-06], ['p[0]', 6.803878210580031e-06], ['(((unsigned)', 6.803878210580031e-06], ['24)', 6.803878210580031e-06], ['p[2]', 6.803878210580031e-06], ['16)', 6.803878210580031e-06], ['R.', 6.803878210580031e-06], ['REAL_VALUE_ISNAN', 6.803878210580031e-06], ['REAL_VALUE_ISINF', 6.803878210580031e-06], ['(long_double_type_node));', 6.803878210580031e-06], ["'a'", 6.803878210580031e-06], ['fmt', 6.803878210580031e-06], ['(buffer,', 6.803878210580031e-06], ["'A':", 6.803878210580031e-06], ['buflen', 6.803878210580031e-06], ["'a':", 6.803878210580031e-06], ['seeing', 6.803878210580031e-06], ['druntime', 6.803878210580031e-06], ['*sc)', 6.803878210580031e-06], ['global.startGagging', 6.803878210580031e-06], ['Module::load', 6.803878210580031e-06], ['(errors))', 6.803878210580031e-06], ['m->importAll', 6.803878210580031e-06], ['m->semantic', 6.803878210580031e-06], ['m->semantic2', 6.803878210580031e-06], ['m->semantic3', 6.803878210580031e-06], ['d_add_entrypoint_module', 6.803878210580031e-06], ['TOKarrayliteral)', 6.803878210580031e-06], ['((ArrayLiteralExp', 6.803878210580031e-06], ['vectype', 6.803878210580031e-06], ['(vectype,', 6.803878210580031e-06], ['type->nextOf', 6.803878210580031e-06], ['native_interpret_expr', 6.803878210580031e-06], ['Normal', 6.803878210580031e-06], ['interpret', 6.803878210580031e-06], ['object:', 6.803878210580031e-06], ['Compiler::loadModule', 6.803878210580031e-06], ['ModuleDeclaration', 6.803878210580031e-06], ['create_tinfo_types', 6.803878210580031e-06], ['(md->packages->dim', 6.803878210580031e-06], ['(md->id->toChars', 6.803878210580031e-06], ['d_add_builtin_module', 6.803878210580031e-06], ['(fd->builtin', 6.803878210580031e-06], ['BUILTINunknown)', 6.803878210580031e-06], ['fd->builtin;', 6.803878210580031e-06], ['(tf,', 6.803878210580031e-06], ['(TREE_CONSTANT', 6.803878210580031e-06], ['Scope', 6.803878210580031e-06], ['directories', 6.803878210580031e-06], ['prefixed_path', 6.803878210580031e-06], ['(!strncmp', 6.803878210580031e-06], ['PATHS', 6.803878210580031e-06], ['add_globalpaths', 6.803878210580031e-06], ['(Strings', 6.803878210580031e-06], ['*paths)', 6.803878210580031e-06], ['(paths)', 6.803878210580031e-06], ['paths->dim;', 6.803878210580031e-06], ['(*paths)[i];', 6.803878210580031e-06], ['*target', 6.803878210580031e-06], ['lrealpath', 6.803878210580031e-06], ['target));', 6.803878210580031e-06], ['add_filepaths', 6.803878210580031e-06], ['add_import_paths', 6.803878210580031e-06], ['D-specific', 6.803878210580031e-06], ['suffix.', 6.803878210580031e-06], ['global.params.imppath->dim;', 6.803878210580031e-06], ['global.params.imppath->shift', 6.803878210580031e-06], ['(path)', 6.803878210580031e-06], ['(FileName::splitPath', 6.803878210580031e-06], ['(path));', 6.803878210580031e-06], ['hooks', 6.803878210580031e-06], ['"dmd/hdrgen.h"', 6.803878210580031e-06], ['"debug.h"', 6.803878210580031e-06], ['<dir>', 6.803878210580031e-06], ['-MF', 6.803878210580031e-06], ['effect.', 6.803878210580031e-06], ['global_context;', 6.803878210580031e-06], ['d_option.deps_target', 6.803878210580031e-06], ["'\\t':", 6.803878210580031e-06], ['*q', 6.803878210580031e-06], ["'\\\\';", 6.803878210580031e-06], ['deps_write', 6.803878210580031e-06], ['modlist.push', 6.803878210580031e-06], ['(module);', 6.803878210580031e-06], ['column++;', 6.803878210580031e-06], ['phony', 6.803878210580031e-06], ['dependency.', 6.803878210580031e-06], ['m->parent', 6.803878210580031e-06], ['installed', 6.803878210580031e-06], ['(m->md', 6.803878210580031e-06], ['buffer->writenl', 6.803878210580031e-06], ['d_init_options', 6.803878210580031e-06], ['global.params.useInline', 6.803878210580031e-06], ['global.params.obj', 6.803878210580031e-06], ['global.params.hdrStripPlainFunctions', 6.803878210580031e-06], ['global.params.betterC', 6.803878210580031e-06], ['global.params.allInst', 6.803878210580031e-06], ['Extra', 6.803878210580031e-06], ['d_option.fonly', 6.803878210580031e-06], ['d_option.multilib', 6.803878210580031e-06], ['d_option.prefix', 6.803878210580031e-06], ['d_option.deps_filename_user', 6.803878210580031e-06], ['d_option.deps_phony', 6.803878210580031e-06], ['d_option.stdinc', 6.803878210580031e-06], ['d_init_options_struct', 6.803878210580031e-06], ['flag.', 6.803878210580031e-06], ['says', 6.803878210580031e-06], ['d_init', 6.803878210580031e-06], ['ggc_cleared_alloc<binding_level>', 6.803878210580031e-06], ['(false);', 6.803878210580031e-06], ['Target::_init', 6.803878210580031e-06], ['d_init_ts', 6.803878210580031e-06], ['MARK_TS_TYPED', 6.803878210580031e-06], ['d_handle_option', 6.803878210580031e-06], ['scode,', 6.803878210580031e-06], ['BOUNDSCHECKon', 6.803878210580031e-06], ['BOUNDSCHECKoff;', 6.803878210580031e-06], ['BOUNDSCHECKsafeonly', 6.803878210580031e-06], ['(arg[0]))', 6.803878210580031e-06], ['integral_argument', 6.803878210580031e-06], ['(Identifier::isValidIdentifier', 6.803878210580031e-06], ['arg)))', 6.803878210580031e-06], ['OPT_fonly_:', 6.803878210580031e-06], ['global.params.release', 6.803878210580031e-06], ['global.params.vtls', 6.803878210580031e-06], ['global.params.vfield', 6.803878210580031e-06], ['global.params.vcomplex', 6.803878210580031e-06], ['global.params.useDIP25', 6.803878210580031e-06], ['OPT_MM:', 6.803878210580031e-06], ['OPT_M:', 6.803878210580031e-06], ['OPT_v:', 6.803878210580031e-06], ['DIAGNOSTICerror;', 6.803878210580031e-06], ['turning', 6.803878210580031e-06], ['d_post_options', 6.803878210580031e-06], ['considers', 6.803878210580031e-06], ['EH', 6.803878210580031e-06], ['deprecated', 6.803878210580031e-06], ['empty_modify_p', 6.803878210580031e-06], ['(op,', 6.803878210580031e-06], ['CALL_EXPR:', 6.803878210580031e-06], ['d_gimplify_expr', 6.803878210580031e-06], ['(*expr_p);', 6.803878210580031e-06], ['clever', 6.803878210580031e-06], ['(op0),', 6.803878210580031e-06], ['pre_p,', 6.803878210580031e-06], ['pre_p);', 6.803878210580031e-06], ['*expr_p', 6.803878210580031e-06], ['(nargs', 6.803878210580031e-06], ['has_side_effects', 6.803878210580031e-06], ['new_arg', 6.803878210580031e-06], ['GS_ERROR)', 6.803878210580031e-06], ['side-effects,', 6.803878210580031e-06], ['d_parse_file', 6.803878210580031e-06], ['writer', 6.803878210580031e-06], ['(debug_hooks->start_end_main_source_file)', 6.803878210580031e-06], ['name");', 6.803878210580031e-06], ['Handling', 6.803878210580031e-06], ['gcc_obstack_init', 6.803878210580031e-06], ['Identifier::generateId', 6.803878210580031e-06], ['global.params.doDocComments,', 6.803878210580031e-06], ['global.params.doHdrGeneration);', 6.803878210580031e-06], ['obstack_1grow', 6.803878210580031e-06], ['(&buffer,', 6.803878210580031e-06], ['Tell', 6.803878210580031e-06], ['strip', 6.803878210580031e-06], ['gendocfile', 6.803878210580031e-06], ["'header'", 6.803878210580031e-06], ['Module::rootModule)', 6.803878210580031e-06], ['definition");', 6.803878210580031e-06], ['(builtin_modules.dim', 6.803878210580031e-06], ['builtin_modules.pop', 6.803878210580031e-06], ['Module::runDeferredSemantic3', 6.803878210580031e-06], ['again,', 6.803878210580031e-06], ['warnings', 6.803878210580031e-06], ['(global.errors', 6.803878210580031e-06], ['((void', 6.803878210580031e-06], ['buf.data,', 6.803878210580031e-06], ['buf.offset);', 6.803878210580031e-06], ['writeFile', 6.803878210580031e-06], ['(&buf,', 6.803878210580031e-06], ['name[1]', 6.803878210580031e-06], ['(!flag_syntax_only)', 6.803878210580031e-06], ['globals.', 6.803878210580031e-06], ['d_finish_compilation', 6.803878210580031e-06], ['(mode))', 6.803878210580031e-06], ['inner_mode', 6.803878210580031e-06], ['(machine_mode)', 6.803878210580031e-06], ['GET_MODE_INNER', 6.803878210580031e-06], ['(inner_mode,', 6.803878210580031e-06], ['(inner_type', 6.803878210580031e-06], ['build_complex_type', 6.803878210580031e-06], ['d_type_for_size', 6.803878210580031e-06], ['(d_byte_type))', 6.803878210580031e-06], ['(d_short_type))', 6.803878210580031e-06], ['(d_int_type))', 6.803878210580031e-06], ['(d_long_type))', 6.803878210580031e-06], ['d_signed_type', 6.803878210580031e-06], ['d_type_promotes_to', 6.803878210580031e-06], ['get_global_context', 6.803878210580031e-06], ['current_binding_level->names;', 6.803878210580031e-06], ['d_getdecls', 6.803878210580031e-06], ['d_get_alias_set', 6.803878210580031e-06], ['(tree)', 6.803878210580031e-06], ['aliasing', 6.803878210580031e-06], ['d_types_compatible_p', 6.803878210580031e-06], ['TYPE_ASSOCIATIVE_ARRAY', 6.803878210580031e-06], ['d_finish_incomplete_decl', 6.803878210580031e-06], ['DECL_SIZE', 6.803878210580031e-06], ['size_zero_node;', 6.803878210580031e-06], ['d_classify_record', 6.803878210580031e-06], ['t->ty', 6.803878210580031e-06], ['d_tree_size', 6.803878210580031e-06], ['d_print_xnode', 6.803878210580031e-06], ['(node))', 6.803878210580031e-06], ['(node),', 6.803878210580031e-06], ['NODE', 6.803878210580031e-06], ['lang', 6.803878210580031e-06], ['lang_type', 6.803878210580031e-06], ['(yet).', 6.803878210580031e-06], ['(d', 6.803878210580031e-06], ['*ld', 6.803878210580031e-06], ['d_dup_lang_specific_decl', 6.803878210580031e-06], ['d_keep_list', 6.803878210580031e-06], ['personality', 6.803878210580031e-06], ['d_eh_personality_decl;', 6.803878210580031e-06], ['d_eh_personality', 6.803878210580031e-06], ['d_build_eh_runtime_type', 6.803878210580031e-06], ['LANG_HOOKS_NAME', 6.803878210580031e-06], ['LANG_HOOKS_INIT', 6.803878210580031e-06], ['LANG_HOOKS_INIT_TS', 6.803878210580031e-06], ['LANG_HOOKS_INIT_OPTIONS', 6.803878210580031e-06], ['LANG_HOOKS_INIT_OPTIONS_STRUCT', 6.803878210580031e-06], ['LANG_HOOKS_OPTION_LANG_MASK', 6.803878210580031e-06], ['LANG_HOOKS_HANDLE_OPTION', 6.803878210580031e-06], ['LANG_HOOKS_POST_OPTIONS', 6.803878210580031e-06], ['LANG_HOOKS_PARSE_FILE', 6.803878210580031e-06], ['LANG_HOOKS_COMMON_ATTRIBUTE_TABLE', 6.803878210580031e-06], ['LANG_HOOKS_ATTRIBUTE_TABLE', 6.803878210580031e-06], ['LANG_HOOKS_GET_ALIAS_SET', 6.803878210580031e-06], ['LANG_HOOKS_TYPES_COMPATIBLE_P', 6.803878210580031e-06], ['LANG_HOOKS_BUILTIN_FUNCTION', 6.803878210580031e-06], ['LANG_HOOKS_REGISTER_BUILTIN_TYPE', 6.803878210580031e-06], ['LANG_HOOKS_FINISH_INCOMPLETE_DECL', 6.803878210580031e-06], ['LANG_HOOKS_GIMPLIFY_EXPR', 6.803878210580031e-06], ['LANG_HOOKS_CLASSIFY_RECORD', 6.803878210580031e-06], ['LANG_HOOKS_TREE_SIZE', 6.803878210580031e-06], ['LANG_HOOKS_PRINT_XNODE', 6.803878210580031e-06], ['LANG_HOOKS_DUP_LANG_SPECIFIC_DECL', 6.803878210580031e-06], ['LANG_HOOKS_EH_PERSONALITY', 6.803878210580031e-06], ['LANG_HOOKS_EH_RUNTIME_TYPE', 6.803878210580031e-06], ['LANG_HOOKS_PUSHDECL', 6.803878210580031e-06], ['LANG_HOOKS_GETDECLS', 6.803878210580031e-06], ['LANG_HOOKS_GLOBAL_BINDINGS_P', 6.803878210580031e-06], ['LANG_HOOKS_TYPE_FOR_MODE', 6.803878210580031e-06], ['LANG_HOOKS_TYPE_FOR_SIZE', 6.803878210580031e-06], ['LANG_HOOKS_TYPE_PROMOTES_TO', 6.803878210580031e-06], ['lang_hooks', 6.803878210580031e-06], ['"ssa.h"', 6.803878210580031e-06], ['"gimple-iterator.h"', 6.803878210580031e-06], ['"gimplify-me.h"', 6.803878210580031e-06], ['"cfgloop.h"', 6.803878210580031e-06], ['"params.h"', 6.803878210580031e-06], ['"tree-scalar-evolution.h"', 6.803878210580031e-06], ['"tree-ssa-loop-ivopts.h"', 6.803878210580031e-06], ['"tree-vectorizer.h"', 6.803878210580031e-06], ['firstly', 6.803878210580031e-06], ['loop_i>', 6.803878210580031e-06], ['loop_k>.', 6.803878210580031e-06], ['<loop_i,', 6.803878210580031e-06], ['interchanged,', 6.803878210580031e-06], ['transformation.', 6.803878210580031e-06], ['profitable.', 6.803878210580031e-06], ['Interchange', 6.803878210580031e-06], ['reductions', 6.803878210580031e-06], ['INNER_STRIDE_RATIO', 6.803878210580031e-06], ['STMT_COST_RATIO', 6.803878210580031e-06], ['DR', 6.803878210580031e-06], ['reduction_type', 6.803878210580031e-06], ['UNKNOWN_RTYPE', 6.803878210580031e-06], ['Lcssa', 6.803878210580031e-06], ['Stmts', 6.803878210580031e-06], ['next.', 6.803878210580031e-06], ['*consumer;', 6.803878210580031e-06], ['re)', 6.803878210580031e-06], ['DOUBLE_RTYPE)', 6.803878210580031e-06], ['Unknown', 6.803878210580031e-06], ['IV.', 6.803878210580031e-06], ['dump_induction', 6.803878210580031e-06], ['iv->var,', 6.803878210580031e-06], ['classify_simple_reduction', 6.803878210580031e-06], ['equals', 6.803878210580031e-06], ['Basic', 6.803878210580031e-06], ['(single_exit', 6.803878210580031e-06], ['(loop)),', 6.803878210580031e-06], ['iv;', 6.803878210580031e-06], ['&iv);', 6.803878210580031e-06], ['m_reductions.iterate', 6.803878210580031e-06], ['(stmt)))', 6.803878210580031e-06], ['phi', 6.803878210580031e-06], ['re->producer', 6.803878210580031e-06], ['*iloop)', 6.803878210580031e-06], ['(m_reductions.length', 6.803878210580031e-06], ['(bb->loop_father', 6.803878210580031e-06], ['(gcall', 6.803878210580031e-06], ['*call', 6.803878210580031e-06], ['<gcall', 6.803878210580031e-06], ['!gimple_inexpensive_call_p', 6.803878210580031e-06], ['(lhs)', 6.803878210580031e-06], ['b[j][i]', 6.803878210580031e-06], ['c[j][i];', 6.803878210580031e-06], ['undoing', 6.803878210580031e-06], ['(producer);', 6.803878210580031e-06], ['(!gimple_assign_load_p', 6.803878210580031e-06], ['re->init_ref', 6.803878210580031e-06], ['(consumer);', 6.803878210580031e-06], ['Require', 6.803878210580031e-06], ['!operand_equal_p', 6.803878210580031e-06], ['re->type', 6.803878210580031e-06], ['*lcssa_phi', 6.803878210580031e-06], ['*use_phi;', 6.803878210580031e-06], ['loop_latch_edge', 6.803878210580031e-06], ['(next)', 6.803878210580031e-06], ['(next);', 6.803878210580031e-06], ['(next_def);', 6.803878210580031e-06], ['!flow_bb_inside_loop_p', 6.803878210580031e-06], ['restricted', 6.803878210580031e-06], ['reduction,', 6.803878210580031e-06], ['below:', 6.803878210580031e-06], ['+---------------------+', 6.803878210580031e-06], ['relax', 6.803878210580031e-06], ['fake', 6.803878210580031e-06], ['single_imm_use', 6.803878210580031e-06], ['&use_p,', 6.803878210580031e-06], ['flow_bb_inside_loop_p', 6.803878210580031e-06], ['(single_use)))', 6.803878210580031e-06], ['m_loop,', 6.803878210580031e-06], ['m_exit->dest', 6.803878210580031e-06], ['(use_phi,', 6.803878210580031e-06], ['m_exit)', 6.803878210580031e-06], ['use_phi;', 6.803878210580031e-06], ['(!lcssa_phi)', 6.803878210580031e-06], ['reduction);', 6.803878210580031e-06], ['re->var', 6.803878210580031e-06], ['re->init', 6.803878210580031e-06], ['re->next', 6.803878210580031e-06], ['re->phi', 6.803878210580031e-06], ['phi;', 6.803878210580031e-06], ['re->lcssa_phi', 6.803878210580031e-06], ['lcssa_phi;', 6.803878210580031e-06], ['m_reductions.safe_push', 6.803878210580031e-06], ['inner_re->type', 6.803878210580031e-06], ['Outer', 6.803878210580031e-06], ['DOUBLE_RTYPE;', 6.803878210580031e-06], ['Var', 6.803878210580031e-06], ['invariant,', 6.803878210580031e-06], ['happen.', 6.803878210580031e-06], ['(chrec))', 6.803878210580031e-06], ['*iv', 6.803878210580031e-06], ['induction);', 6.803878210580031e-06], ['iv->var', 6.803878210580031e-06], ['iv->init_val', 6.803878210580031e-06], ['iv->init_expr', 6.803878210580031e-06], ['iv->step', 6.803878210580031e-06], ['m_inductions.safe_push', 6.803878210580031e-06], ['(chrec),', 6.803878210580031e-06], ['CHREC_LEFT', 6.803878210580031e-06], ['(chrec);', 6.803878210580031e-06], ['(m_loop->header);', 6.803878210580031e-06], ['gsi.phi', 6.803878210580031e-06], ['(phi);', 6.803878210580031e-06], ['(virtual_operand_p', 6.803878210580031e-06], ['chrec);', 6.803878210580031e-06], ['var))', 6.803878210580031e-06], ['closed', 6.803878210580031e-06], ['CONSUMER', 6.803878210580031e-06], ['ssa', 6.803878210580031e-06], ['STMTS.', 6.803878210580031e-06], ['find_deps_in_bb_for_stmt', 6.803878210580031e-06], ['ssa_op_iter', 6.803878210580031e-06], ['gimple_set_plf', 6.803878210580031e-06], ['GF_PLF_1,', 6.803878210580031e-06], ['worklist.safe_push', 6.803878210580031e-06], ['SSA_OP_USE)', 6.803878210580031e-06], ['(is_a', 6.803878210580031e-06], ['(def_stmt)', 6.803878210580031e-06], ['GF_PLF_1))', 6.803878210580031e-06], ['gsi_start_nondebug_bb', 6.803878210580031e-06], ['gsi_remove', 6.803878210580031e-06], ['gsi_next_nondebug', 6.803878210580031e-06], ['(&gsi);', 6.803878210580031e-06], ['//producer', 6.803878210580031e-06], ['reduc_sum', 6.803878210580031e-06], ['MEM_REF[idx]', 6.803878210580031e-06], ['//consumer', 6.803878210580031e-06], ['bitmap', 6.803878210580031e-06], ['*stmt;', 6.803878210580031e-06], ['(re->producer);', 6.803878210580031e-06], ['(&from,', 6.803878210580031e-06], ['copy_ssa_name', 6.803878210580031e-06], ['(re->var);', 6.803878210580031e-06], ['gimple_build_assign', 6.803878210580031e-06], ['gsi_insert_seq_before', 6.803878210580031e-06], ['GSI_SAME_STMT);', 6.803878210580031e-06], ['FOR_EACH_IMM_USE_STMT', 6.803878210580031e-06], ['FOR_EACH_IMM_USE_ON_STMT', 6.803878210580031e-06], ['SET_USE', 6.803878210580031e-06], ['new_var);', 6.803878210580031e-06], ['update_stmt', 6.803878210580031e-06], ['unlink_stmt_vdef', 6.803878210580031e-06], ['(re->consumer);', 6.803878210580031e-06], ['release_ssa_name', 6.803878210580031e-06], ['gimple_set_vdef', 6.803878210580031e-06], ['(re->next));', 6.803878210580031e-06], ['&to);', 6.803878210580031e-06], ['DCE.', 6.803878210580031e-06], ['(dce_seeds,', 6.803878210580031e-06], ['(re->var));', 6.803878210580031e-06], ['free_data_refs_with_aux', 6.803878210580031e-06], ['(dr)->release', 6.803878210580031e-06], ['(vec<tree>', 6.803878210580031e-06], ['dr->aux;', 6.803878210580031e-06], ['(datarefs);', 6.803878210580031e-06], ['(loop_nest),', 6.803878210580031e-06], ['(m_dce_seeds);', 6.803878210580031e-06], ['update_data_info', 6.803878210580031e-06], ['(unsigned,', 6.803878210580031e-06], ['interchange_loops', 6.803878210580031e-06], ['move_code_to_inner_loop', 6.803878210580031e-06], ['loops,', 6.803878210580031e-06], ['middle', 6.803878210580031e-06], ['I_IDX/O_IDX', 6.803878210580031e-06], ['dependences.', 6.803878210580031e-06], ['data_dependence_relation', 6.803878210580031e-06], ['*ddr;', 6.803878210580031e-06], ['ddrs.iterate', 6.803878210580031e-06], ['&ddr);', 6.803878210580031e-06], ['chrec_known)', 6.803878210580031e-06], ['DDR_NUM_DIST_VECTS', 6.803878210580031e-06], ['lambda_vector', 6.803878210580031e-06], ['dist_vect', 6.803878210580031e-06], ['DDR_DIST_VECT', 6.803878210580031e-06], ['j);', 6.803878210580031e-06], ['m_loop_nest.length', 6.803878210580031e-06], ['--;', 6.803878210580031e-06], ['o_idx', 6.803878210580031e-06], ['Be', 6.803878210580031e-06], ['conservative,', 6.803878210580031e-06], ['i_niters,', 6.803878210580031e-06], ['o_niters,', 6.803878210580031e-06], ['var_after;', 6.803878210580031e-06], ['*loop_nest', 6.803878210580031e-06], ['(iloop.m_loop);', 6.803878210580031e-06], ['(iloop.m_loop),', 6.803878210580031e-06], ['i_niters);', 6.803878210580031e-06], ['(instantiate_below,', 6.803878210580031e-06], ['force_gimple_operand_gsi', 6.803878210580031e-06], ['GSI_CONTINUE_LINKING);', 6.803878210580031e-06], ['(oloop.m_loop);', 6.803878210580031e-06], ['(oloop.m_loop),', 6.803878210580031e-06], ['o_niters);', 6.803878210580031e-06], ["src's", 6.803878210580031e-06], ['tgt', 6.803878210580031e-06], ['(oloop.m_loop,', 6.803878210580031e-06], ['oloop);', 6.803878210580031e-06], ['create_canonical_iv', 6.803878210580031e-06], ['free_numbers_of_iterations_estimates', 6.803878210580031e-06], ['association', 6.803878210580031e-06], ['breaking', 6.803878210580031e-06], ['TGT', 6.803878210580031e-06], ['M;', 6.803878210580031e-06], ['iv->var)', 6.803878210580031e-06], ['*outer,', 6.803878210580031e-06], ['(flow_bb_inside_loop_p', 6.803878210580031e-06], ['(inner,', 6.803878210580031e-06], ['(gimple_vuse', 6.803878210580031e-06], ['compute_access_stride', 6.803878210580031e-06], ['COMPONENT_REF', 6.803878210580031e-06], ['dr->aux', 6.803878210580031e-06], ['strides;', 6.803878210580031e-06], ['chrec_contains_undetermined', 6.803878210580031e-06], ['sl', 6.803878210580031e-06], ['POLYNOMIAL_CHREC)', 6.803878210580031e-06], ['get_chrec_loop', 6.803878210580031e-06], ['(sl);', 6.803878210580031e-06], ['LOOP_NEST', 6.803878210580031e-06], ['compute_access_strides', 6.803878210580031e-06], ['(loop)', 6.803878210580031e-06], ['num_loops);', 6.803878210580031e-06], ['prune_access_strides_not_in_loop', 6.803878210580031e-06], ['*innermost,', 6.803878210580031e-06], ['(innermost)', 6.803878210580031e-06], ['DATAREFS.', 6.803878210580031e-06], ['dump_access_strides', 6.803878210580031e-06], ['profitable', 6.803878210580031e-06], ['I_IDX', 6.803878210580031e-06], ['dumps', 6.803878210580031e-06], ['iloop_strides', 6.803878210580031e-06], ['oloop_strides', 6.803878210580031e-06], ['num_resolved_not_ok_drs', 6.803878210580031e-06], ['(dump_info_p', 6.803878210580031e-06], ['dump_file', 6.803878210580031e-06], ['subloop_stride_p', 6.803878210580031e-06], ['i_idx', 6.803878210580031e-06], ['(!subloop_stride_p)', 6.803878210580031e-06], ['(iloop_stride)', 6.803878210580031e-06], ['(oloop_stride)', 6.803878210580031e-06], ['wi::to_widest', 6.803878210580031e-06], ['(multiple_of_p', 6.803878210580031e-06], ['(iloop_stride),', 6.803878210580031e-06], ['iloop_stride,', 6.803878210580031e-06], ['oloop_stride,', 6.803878210580031e-06], ['(DR_REF', 6.803878210580031e-06], ['(access_size,', 6.803878210580031e-06], ['dump_file);', 6.803878210580031e-06], ['interchage', 6.803878210580031e-06], ['strides:', 6.803878210580031e-06], ['"Stmt', 6.803878210580031e-06], ['costly.', 6.803878210580031e-06], ['all_seq_dr_after_p)', 6.803878210580031e-06], ['ddrs))', 6.803878210580031e-06], ['m_loop_nest[o_idx]);', 6.803878210580031e-06], ['(NULL)', 6.803878210580031e-06], ['(should_interchange_loops', 6.803878210580031e-06], ['"Loop_pair<outer:%d,', 6.803878210580031e-06], ['inner:%d>', 6.803878210580031e-06], ['interchanged\\n\\n",', 6.803878210580031e-06], ['oloop.m_loop->num,', 6.803878210580031e-06], ['iloop.m_loop->num);', 6.803878210580031e-06], ['ddrs);', 6.803878210580031e-06], ['(MSG_OPTIMIZED_LOCATIONS,', 6.803878210580031e-06], ['GIMPLE_PASS,', 6.803878210580031e-06], ['OPTGROUP_LOOP,', 6.803878210580031e-06], ['PROP_cfg,', 6.803878210580031e-06], ['allowed.', 6.803878210580031e-06], ['rectangle', 6.803878210580031e-06], ['(loop->inner', 6.803878210580031e-06], ['(loop->header', 6.803878210580031e-06], ['(EDGE_COUNT', 6.803878210580031e-06], ['(loop->header->preds)', 6.803878210580031e-06], ['EDGE_COUNT', 6.803878210580031e-06], ['EDGE_PRED', 6.803878210580031e-06], ['(loop->header,', 6.803878210580031e-06], ['(unsupported_edge', 6.803878210580031e-06], ['(e0)', 6.803878210580031e-06], ['(e1)', 6.803878210580031e-06], ['loop->latch', 6.803878210580031e-06], ['loop->latch)', 6.803878210580031e-06], ['EDGE_SUCC', 6.803878210580031e-06], ['(exit->src,', 6.803878210580031e-06], ['*bbs', 6.803878210580031e-06], ['niters);', 6.803878210580031e-06], ['adjacent', 6.803878210580031e-06], ['loop_nest;', 6.803878210580031e-06], ['DDRS.', 6.803878210580031e-06], ['tree_loop_interchange_compute_ddrs', 6.803878210580031e-06], ['*ddrs)', 6.803878210580031e-06], ['*innermost', 6.803878210580031e-06], ['(b))', 6.803878210580031e-06], ['ddr', 6.803878210580031e-06], ['prune_datarefs_not_in_loop', 6.803878210580031e-06], ['father', 6.803878210580031e-06], ['prepare_data_references', 6.803878210580031e-06], ['bb_refs', 6.803878210580031e-06], ['bb->aux', 6.803878210580031e-06], ['vec<loop_p>', 6.803878210580031e-06], ['*datarefs,', 6.803878210580031e-06], ['*outermost', 6.803878210580031e-06], ['(!start_loop', 6.803878210580031e-06], ['pruning', 6.803878210580031e-06], ['start_loop;', 6.803878210580031e-06], ['start_loop)', 6.803878210580031e-06], ['free_dependence_relations', 6.803878210580031e-06], ['(double_type_node),', 6.803878210580031e-06], ['wi', 6.803878210580031e-06], ['&overflow,', 6.803878210580031e-06], ['64);', 6.803878210580031e-06], ['this->rv', 6.803878210580031e-06], ['Overload', 6.803878210580031e-06], ['MINUS_EXPR,', 6.803878210580031e-06], ['RDIV_EXPR,', 6.803878210580031e-06], ['(this->rv', 6.803878210580031e-06], ['&q,', 6.803878210580031e-06], ['(real_compare', 6.803878210580031e-06], ['phobos_action', 6.803878210580031e-06], ['PHOBOS_DEFAULT', 6.803878210580031e-06], ['statically.', 6.803878210580031e-06], ['need_spec', 6.803878210580031e-06], ['saw_debug_flag', 6.803878210580031e-06], ['static_link', 6.803878210580031e-06], ['-shared-libgcc', 6.803878210580031e-06], ['phobos.', 6.803878210580031e-06], ['stuff.', 6.803878210580031e-06], ['num_args', 6.803878210580031e-06], ['saw_opt_o', 6.803878210580031e-06], ['saw_opt_c', 6.803878210580031e-06], ['saw_opt_S', 6.803878210580031e-06], ['argc', 6.803878210580031e-06], ['strcpy', 6.803878210580031e-06], ['libphobos.', 6.803878210580031e-06], ['.o', 6.803878210580031e-06], ['PHOBOS_NOLINK)', 6.803878210580031e-06], ['PHOBOS_STATIC;', 6.803878210580031e-06], ['*suffix', 6.803878210580031e-06], ['strrchr', 6.803878210580031e-06], ['(only_source_option,', 6.803878210580031e-06], ['".d")', 6.803878210580031e-06], ['(first_d_file', 6.803878210580031e-06], ['new_decoded_options[j++]', 6.803878210580031e-06], ['--j;', 6.803878210580031e-06], ['(only_source_option)', 6.803878210580031e-06], ['baselen', 6.803878210580031e-06], ['3);', 6.803878210580031e-06], ['(OPT_o,', 6.803878210580031e-06], ["Wouldn't", 6.803878210580031e-06], ['need_phobos)', 6.803878210580031e-06], ['HAVE_LD_STATIC_DYNAMIC', 6.803878210580031e-06], ['PHOBOS_DYNAMIC', 6.803878210580031e-06], ['static_link)', 6.803878210580031e-06], ['LD_DYNAMIC_OPTION,', 6.803878210580031e-06], ['PHOBOS_STATIC', 6.803878210580031e-06], ['LD_STATIC_OPTION,', 6.803878210580031e-06], ['lang_specific_pre_link', 6.803878210580031e-06], ['generate.', 6.803878210580031e-06], ['Target::classinfosize;', 6.803878210580031e-06], ['fmt->emin', 6.803878210580031e-06], ['fmt->p);', 6.803878210580031e-06], ['2**', 6.803878210580031e-06], ['(value-1)', 6.803878210580031e-06], ['10**value', 6.803878210580031e-06], ['(POINTER_SIZE', 6.803878210580031e-06], ['size_t,', 6.803878210580031e-06], ['Tsize_t', 6.803878210580031e-06], ['Tptrdiff_t', 6.803878210580031e-06], ['Type::tsize_t;', 6.803878210580031e-06], ['properties', 6.803878210580031e-06], ['(align,', 6.803878210580031e-06], ['ADJUST_FIELD_ALIGN', 6.803878210580031e-06], ['(sz', 6.803878210580031e-06], ['Type::tvoid)', 6.803878210580031e-06], ['Type::tuns8;', 6.803878210580031e-06], ['Tvector)', 6.803878210580031e-06], ['TOKpowass:', 6.803878210580031e-06], ['pow()', 6.803878210580031e-06], ['TOKmod:', 6.803878210580031e-06], ['TOKmodass:', 6.803878210580031e-06], ['TOKle:', 6.803878210580031e-06], ['TOKlt:', 6.803878210580031e-06], ['TOKge:', 6.803878210580031e-06], ['TOKgt:', 6.803878210580031e-06], ['Target::cppTypeInfoMangle', 6.803878210580031e-06], ['vendor-specific', 6.803878210580031e-06], ['Stores', 6.803878210580031e-06], ['"dmd/import.h"', 6.803878210580031e-06], ['mangle_decl', 6.803878210580031e-06], ['buflen,', 6.803878210580031e-06], ['decl->toPrettyChars', 6.803878210580031e-06], ['decl->getModule', 6.803878210580031e-06], ['build_module_tree', 6.803878210580031e-06], ['(Import', 6.803878210580031e-06], ['CONTEXT.', 6.803878210580031e-06], ['import.', 6.803878210580031e-06], ['d_module_context', 6.803878210580031e-06], ['(d->ident', 6.803878210580031e-06], ['Importing', 6.803878210580031e-06], ['debug_hooks->imported_module_or_decl', 6.803878210580031e-06], ['tuples.', 6.803878210580031e-06], ['(TupleDeclaration', 6.803878210580031e-06], ['RootObject', 6.803878210580031e-06], ['(d)', 6.803878210580031e-06], ['d->ident', 6.803878210580031e-06], ['d->ident->toChars', 6.803878210580031e-06], ['finishes.', 6.803878210580031e-06], ['(TemplateDeclaration', 6.803878210580031e-06], ['escaped', 6.803878210580031e-06], ['tb)->sym->isInstantiated', 6.803878210580031e-06], ['(d)||', 6.803878210580031e-06], ['(d->isAnonymous', 6.803878210580031e-06], ['(gcc_attribute_p', 6.803878210580031e-06], ['members,', 6.803878210580031e-06], ['d->vtblOffset', 6.803878210580031e-06], ['d->vtbl[i]->isFuncDeclaration', 6.803878210580031e-06], ['(!fd->functionSemantic', 6.803878210580031e-06], ['(fd2->loc),', 6.803878210580031e-06], ['fd2->toPrettyChars', 6.803878210580031e-06], ['(!d->members)', 6.803878210580031e-06], ['d->csym', 6.803878210580031e-06], ['layout_class_initializer', 6.803878210580031e-06], ['(d->vtblsym);', 6.803878210580031e-06], ['TypeEnum', 6.803878210580031e-06], ['d->type;', 6.803878210580031e-06], ['enum_initializer_decl', 6.803878210580031e-06], ['ENUMERAL_TYPE', 6.803878210580031e-06], ['static,', 6.803878210580031e-06], ['(VarDeclaration', 6.803878210580031e-06], ['d->toAlias', 6.803878210580031e-06], ['of,', 6.803878210580031e-06], ['(ie,', 6.803878210580031e-06], ['Duplicated', 6.803878210580031e-06], ['VarDeclarations', 6.803878210580031e-06], ['mixins', 6.803878210580031e-06], ['codegen.', 6.803878210580031e-06], ['ExpInitializer', 6.803878210580031e-06], ['TARGET_EXPR_CLEANUP', 6.803878210580031e-06], ['layout_typeinfo', 6.803878210580031e-06], ['Already', 6.803878210580031e-06], ['unittest', 6.803878210580031e-06], ['semantic.', 6.803878210580031e-06], ['(fdp', 6.803878210580031e-06], ['run.', 6.803878210580031e-06], ['FuncDeclarations', 6.803878210580031e-06], ['(d->vthis);', 6.803878210580031e-06], ['_arguments', 6.803878210580031e-06], ['(param);', 6.803878210580031e-06], ['this_tree', 6.803878210580031e-06], ['(ad->vthis);', 6.803878210580031e-06], ['cfun->language->static_chain', 6.803878210580031e-06], ['(d->v_argptr)', 6.803878210580031e-06], ['optimisation', 6.803878210580031e-06], ['RESULT_DECL', 6.803878210580031e-06], ['(d->nrvo_can)', 6.803878210580031e-06], ['(!AGGREGATE_TYPE_P', 6.803878210580031e-06], ['d->nrvo_can', 6.803878210580031e-06], ['DECL_BY_REFERENCE', 6.803878210580031e-06], ['(resdecl);', 6.803878210580031e-06], ['SET_DECL_VALUE_EXPR', 6.803878210580031e-06], ['resdecl);', 6.803878210580031e-06], ['build_function_body', 6.803878210580031e-06], ['(d->v_argptr);', 6.803878210580031e-06], ['send', 6.803878210580031e-06], ['(sd->dsym);', 6.803878210580031e-06], ['FuncAliasDeclaration', 6.803878210580031e-06], ['(decl->loc),', 6.803878210580031e-06], ['(decl->ident->toChars', 6.803878210580031e-06], ['(fd->type);', 6.803878210580031e-06], ['decl->isVarDeclaration', 6.803878210580031e-06], ['(vd));', 6.803878210580031e-06], ['(mangle_decl', 6.803878210580031e-06], ['mangled_name);', 6.803878210580031e-06], ['(decl->loc,', 6.803878210580031e-06], ['(mangled_name)', 6.803878210580031e-06], ['(decl->toPrettyChars', 6.803878210580031e-06], ['(true));', 6.803878210580031e-06], ['(decl->csym)))', 6.803878210580031e-06], ['(ad->handleType', 6.803878210580031e-06], ['(fd->isVirtual', 6.803878210580031e-06], ['(fd->isMain', 6.803878210580031e-06], ['STCfinal)', 6.803878210580031e-06], ['(decl->protection.kind', 6.803878210580031e-06], ['default,', 6.803878210580031e-06], ['override.', 6.803878210580031e-06], ['set_decl_tls_model', 6.803878210580031e-06], ['decl_default_tls_model', 6.803878210580031e-06], ['(&decl->csym,', 6.803878210580031e-06], ['IDENTIFIER_DECL_TREE', 6.803878210580031e-06], ['(current_function_decl', 6.803878210580031e-06], ['(DECL_LANG_FRAME_FIELD', 6.803878210580031e-06], ["`this'.", 6.803878210580031e-06], ['cfun', 6.803878210580031e-06], ['cfun->language->function', 6.803878210580031e-06], ['(fd,', 6.803878210580031e-06], ['(outer', 6.803878210580031e-06], ['vd->parent)', 6.803878210580031e-06], ['link.', 6.803878210580031e-06], ['outer->isAggregateDeclaration', 6.803878210580031e-06], ['Continue', 6.803878210580031e-06], ['extern.', 6.803878210580031e-06], ['modified.', 6.803878210580031e-06], ['symbols,', 6.803878210580031e-06], ['DECL_COMMON', 6.803878210580031e-06], ['make_alias_for_thunk', 6.803878210580031e-06], ['(alias,', 6.803878210580031e-06], ['finish_thunk', 6.803878210580031e-06], ['Setup', 6.803878210580031e-06], ['(TARGET_USE_LOCAL_THUNK_ALIAS_P', 6.803878210580031e-06], ['TREE_ASM_WRITTEN', 6.803878210580031e-06], ['flag_function_sections);', 6.803878210580031e-06], ['DECL_ONE_ONLY', 6.803878210580031e-06], ['(fn));', 6.803878210580031e-06], ['cloned', 6.803878210580031e-06], ['(funcn);', 6.803878210580031e-06], ['writes', 6.803878210580031e-06], ['params;', 6.803878210580031e-06], ['templates', 6.803878210580031e-06], ['(old_context)', 6.803878210580031e-06], ['restype);', 6.803878210580031e-06], ['cfun->function_end_locus', 6.803878210580031e-06], ['cfun->language', 6.803878210580031e-06], ['old_context;', 6.803878210580031e-06], ['Tie', 6.803878210580031e-06], ['unconditionally.', 6.803878210580031e-06], ['STATEMENT_LIST)', 6.803878210580031e-06], ['(bind)', 6.803878210580031e-06], ['bind;', 6.803878210580031e-06], ['node->forced_by_abi', 6.803878210580031e-06], ['interfacesize', 6.803878210580031e-06], ['(vtbl_interface_type_node);', 6.803878210580031e-06], ['interfacesize;', 6.803878210580031e-06], ['bc)', 6.803878210580031e-06], ['csymoffset;', 6.803878210580031e-06], ['*cd2', 6.803878210580031e-06], ['cd->baseClass;', 6.803878210580031e-06], ['cd2', 6.803878210580031e-06], ['cd2->baseClass)', 6.803878210580031e-06], ['*bs', 6.803878210580031e-06], ['bs)', 6.803878210580031e-06], ['decl->vtblsym;', 6.803878210580031e-06], ['However', 6.803878210580031e-06], ['vptr', 6.803878210580031e-06], ['(*bcd->vtblInterfaces)[i];', 6.803878210580031e-06], ['bc);', 6.803878210580031e-06], ['build_new_class_expr', 6.803878210580031e-06], ['*expr)', 6.803878210580031e-06], ['(expr->value->sym)', 6.803878210580031e-06], ['expr->value->sym;', 6.803878210580031e-06], ["class'", 6.803878210580031e-06], ['"__init",', 6.803878210580031e-06], ['decl->sinit', 6.803878210580031e-06], ['sd->alignment', 6.803878210580031e-06], ['StructLiteralExp::create', 6.803878210580031e-06], ['(sd->loc,', 6.803878210580031e-06], ['sd->type;', 6.803878210580031e-06], ['(sle,', 6.803878210580031e-06], ['optionally', 6.803878210580031e-06], ['artificial,', 6.803878210580031e-06], ['approximation', 6.803878210580031e-06], ['public.', 6.803878210580031e-06], ['"predict.h"', 6.803878210580031e-06], ['result_;', 6.803878210580031e-06], ['postblit.', 6.803878210580031e-06], ['t->baseElemOf', 6.803878210580031e-06], ['destructor.', 6.803878210580031e-06], ['(sd->dtor)', 6.803878210580031e-06], ['TOKslice', 6.803878210580031e-06], ['((UnaExp', 6.803878210580031e-06], ['e)->e1->isLvalue', 6.803878210580031e-06], ['relevant', 6.803878210580031e-06], ['immediately.', 6.803878210580031e-06], ['differences', 6.803878210580031e-06], ['(t0))', 6.803878210580031e-06], ['inttype', 6.803878210580031e-06], ['excess_precision_type', 6.803878210580031e-06], ['(eptype', 6.803878210580031e-06], ['arg0);', 6.803878210580031e-06], ['!COMPLEX_FLOAT_TYPE_P', 6.803878210580031e-06], ['eptype,', 6.803878210580031e-06], ['e1;', 6.803878210580031e-06], ['TOKcast)', 6.803878210580031e-06], ['CastExp', 6.803878210580031e-06], ['(ce->type,', 6.803878210580031e-06], ['ce->to));', 6.803878210580031e-06], ['ce->e1;', 6.803878210580031e-06], ['(e1b);', 6.803878210580031e-06], ['lexpr', 6.803878210580031e-06], ['lost', 6.803878210580031e-06], ['(lexpr,', 6.803878210580031e-06], ['this->binary_op', 6.803878210580031e-06], ['e1b->type,', 6.803878210580031e-06], ['this->constp_', 6.803878210580031e-06], ['this->result_;', 6.803878210580031e-06], ['interfaces,', 6.803878210580031e-06], ['(tb1,', 6.803878210580031e-06], ['tb2));', 6.803878210580031e-06], ['lengths', 6.803878210580031e-06], ['equal.', 6.803878210580031e-06], ['e1.length', 6.803878210580031e-06], ['e2.length', 6.803878210580031e-06], ['memcmp(e1.ptr,', 6.803878210580031e-06], ['e2.ptr,', 6.803878210580031e-06], ['expression:', 6.803878210580031e-06], ['t1elem->ty', 6.803878210580031e-06], ['(t1elem->ty', 6.803878210580031e-06], ['Tstruct', 6.803878210580031e-06], ['Length', 6.803878210580031e-06], ['(t1saved);', 6.803878210580031e-06], ['(t2saved);', 6.803878210580031e-06], ['inline.', 6.803878210580031e-06], ['t1ptr,', 6.803878210580031e-06], ['becomes:', 6.803878210580031e-06], ['(e1.length', 6.803878210580031e-06], ['memcmp);', 6.803878210580031e-06], ['tsizecmp,', 6.803878210580031e-06], ['tlencmp,', 6.803878210580031e-06], ['TOKnotequal)', 6.803878210580031e-06], ['exists', 6.803878210580031e-06], ['(tkey),', 6.803878210580031e-06], ['(key));', 6.803878210580031e-06], ['LE_EXPR;', 6.803878210580031e-06], ['LT_EXPR;', 6.803878210580031e-06], ['GE_EXPR;', 6.803878210580031e-06], ['GT_EXPR;', 6.803878210580031e-06], ['Type::tint32,', 6.803878210580031e-06], ['e->e2->type);', 6.803878210580031e-06], ['(BinExp', 6.803878210580031e-06], ['complex,', 6.803878210580031e-06], ['validated', 6.803878210580031e-06], ['TOKadd)', 6.803878210580031e-06], ['PLUS_EXPR', 6.803878210580031e-06], ['e->e1->type->isintegral', 6.803878210580031e-06], ['TRUNC_DIV_EXPR', 6.803878210580031e-06], ['e->e1->type->isfloating', 6.803878210580031e-06], ['FLOAT_MOD_EXPR', 6.803878210580031e-06], ['UNSIGNED_RSHIFT_EXPR;', 6.803878210580031e-06], ['(CatExp', 6.803878210580031e-06], ['tb2->nextOf', 6.803878210580031e-06], ['TOKcat)', 6.803878210580031e-06], ['ndims', 6.803878210580031e-06], ['oe', 6.803878210580031e-06], ['(oe', 6.803878210580031e-06], ['ce->e1)', 6.803878210580031e-06], ['byte[][]', 6.803878210580031e-06], ['elms;', 6.803878210580031e-06], ['(etype->ty', 6.803878210580031e-06], ['size_one_node);', 6.803878210580031e-06], ['First,', 6.803878210580031e-06], ['*ale', 6.803878210580031e-06], ['(ArrayLengthExp', 6.803878210580031e-06], ['()->nextOf', 6.803878210580031e-06], ['newlength,', 6.803878210580031e-06], ['(SliceExp', 6.803878210580031e-06], ['*stype', 6.803878210580031e-06], ['this->needs_postblit', 6.803878210580031e-06], ['this->lvalue_p', 6.803878210580031e-06], ['this->needs_dtor', 6.803878210580031e-06], ['(e->memset', 6.803878210580031e-06], ['((postblit', 6.803878210580031e-06], ['destructor)', 6.803878210580031e-06], ['TOKblit)', 6.803878210580031e-06], ['(d_array_length', 6.803878210580031e-06], ['tmemcpy', 6.803878210580031e-06], ['(BUILT_IN_MEMCPY);', 6.803878210580031e-06], ['(tmemcpy,', 6.803878210580031e-06], ['_d_arrayctor(ti,', 6.803878210580031e-06], ['TOKconstruct', 6.803878210580031e-06], ['TOKvar);', 6.803878210580031e-06], ['(e->e2->op', 6.803878210580031e-06], ['TOKint64)', 6.803878210580031e-06], ['(sd->isNested', 6.803878210580031e-06], ['(sd->vthis);', 6.803878210580031e-06], ['field),', 6.803878210580031e-06], ['e->type;', 6.803878210580031e-06], ['arrtype,', 6.803878210580031e-06], ['Index', 6.803878210580031e-06], ['(tb1->nextOf', 6.803878210580031e-06], ['tb1,', 6.803878210580031e-06], ['tb1);', 6.803878210580031e-06], ['(e->lengthVar', 6.803878210580031e-06], ['__dollar', 6.803878210580031e-06], ['(e->lengthVar)', 6.803878210580031e-06], ['e->lengthVar->csym', 6.803878210580031e-06], ['bounds.', 6.803878210580031e-06], ['length:', 6.803878210580031e-06], ['void*.', 6.803878210580031e-06], ['Our', 6.803878210580031e-06], ['(lwr_tree)', 6.803878210580031e-06], ['lwr_tree);', 6.803878210580031e-06], ['upr_tree,', 6.803878210580031e-06], ['Still', 6.803878210580031e-06], ['upr', 6.803878210580031e-06], ['upr_tree;', 6.803878210580031e-06], ['TOKvar)', 6.803878210580031e-06], ['(v', 6.803878210580031e-06], ['()->isInterfaceDeclaration', 6.803878210580031e-06], ['(telem->ty', 6.803878210580031e-06], ['contents.', 6.803878210580031e-06], ['(ts->sym->dtor)', 6.803878210580031e-06], ['*tnext', 6.803878210580031e-06], ['e->e1->toChars', 6.803878210580031e-06], ['("%qs', 6.803878210580031e-06], ['TY', 6.803878210580031e-06], ['()->ty;', 6.803878210580031e-06], ['(ty1', 6.803878210580031e-06], ['(SymOffExp', 6.803878210580031e-06], ['*field', 6.803878210580031e-06], ['(field->offset', 6.803878210580031e-06], ['Catch', 6.803878210580031e-06], ['TOKstructliteral)', 6.803878210580031e-06], ['delegates', 6.803878210580031e-06], ['DotVarExp', 6.803878210580031e-06], ['(DotVarExp', 6.803878210580031e-06], ['(StructLiteralExp', 6.803878210580031e-06], ['(tf->isref)', 6.803878210580031e-06], ['(cleanup);', 6.803878210580031e-06], ['owner->toParent', 6.803878210580031e-06], ['owner', 6.803878210580031e-06], ['object;', 6.803878210580031e-06], ['non-static', 6.803878210580031e-06], ['(e->e1->type->ty', 6.803878210580031e-06], ['Tclass', 6.803878210580031e-06], ['e->e1->op', 6.803878210580031e-06], ['e->var->isVarDeclaration', 6.803878210580031e-06], ['tmsg', 6.803878210580031e-06], ['_d_assert', 6.803878210580031e-06], ['(...))', 6.803878210580031e-06], ['assert_fail', 6.803878210580031e-06], ['!cd->isCPPclass', 6.803878210580031e-06], ['Assert', 6.803878210580031e-06], ['contract', 6.803878210580031e-06], ['(condition);', 6.803878210580031e-06], ['*tid', 6.803878210580031e-06], ['(e->obj))', 6.803878210580031e-06], ['(ti,', 6.803878210580031e-06], ['(((TypeClass', 6.803878210580031e-06], ['type)->sym->isInterfaceDeclaration', 6.803878210580031e-06], ['*ftype', 6.803878210580031e-06], ['TOKfunction;', 6.803878210580031e-06], ['(e->fd);', 6.803878210580031e-06], ['(func,', 6.803878210580031e-06], ['e->fd->type);', 6.803878210580031e-06], ['(this->result_)', 6.803878210580031e-06], ['(e->var))', 6.803878210580031e-06], ['run-time.', 6.803878210580031e-06], ['"non-constant', 6.803878210580031e-06], ['arguments;', 6.803878210580031e-06], ['allocates', 6.803878210580031e-06], ['(e->allocator,', 6.803878210580031e-06], ['e->newargs);', 6.803878210580031e-06], ['(new_call),', 6.803878210580031e-06], ['(setup_exp,', 6.803878210580031e-06], ['(e->member)', 6.803878210580031e-06], ['(e->member,', 6.803878210580031e-06], ['new_call,', 6.803878210580031e-06], ['(e->loc)', 6.803878210580031e-06], ['LIBCALL_NEWITEMT', 6.803878210580031e-06], ['LIBCALL_NEWITEMIT;', 6.803878210580031e-06], ['(e->newtype);', 6.803878210580031e-06], ['(modify_expr', 6.803878210580031e-06], ['TypeDArray', 6.803878210580031e-06], ['e->arguments->dim', 6.803878210580031e-06], ['allocations.', 6.803878210580031e-06], ['unknown.', 6.803878210580031e-06], ['dims)', 6.803878210580031e-06], ['TypePointer', 6.803878210580031e-06], ['(e->type->toBasetype', 6.803878210580031e-06], ['(e->value,', 6.803878210580031e-06], ['Tcomplex32:', 6.803878210580031e-06], ['Tcomplex64:', 6.803878210580031e-06], ['Tcomplex80:', 6.803878210580031e-06], ['(e->value),', 6.803878210580031e-06], ['terminated', 6.803878210580031e-06], ['(string,', 6.803878210580031e-06], ['*exp', 6.803878210580031e-06], ['(e->elements->dim', 6.803878210580031e-06], ['e->elements->dim);', 6.803878210580031e-06], ['e->elements->dim;', 6.803878210580031e-06], ['*expr', 6.803878210580031e-06], ['(&value);', 6.803878210580031e-06], ['initializer_constant_valid_p', 6.803878210580031e-06], ['(ctor,', 6.803878210580031e-06], ['(ctor)))', 6.803878210580031e-06], ['ctor));', 6.803878210580031e-06], ['managed', 6.803878210580031e-06], ['MEM.', 6.803878210580031e-06], ['mem);', 6.803878210580031e-06], ['(ta),', 6.803878210580031e-06], ['(kelts,', 6.803878210580031e-06], ['e->keys->dim);', 6.803878210580031e-06], ['*key', 6.803878210580031e-06], ['(velts,', 6.803878210580031e-06], ['e->values->dim);', 6.803878210580031e-06], ['e->sd->fields.dim', 6.803878210580031e-06], ['complete.', 6.803878210580031e-06], ['(e->useStaticInit', 6.803878210580031e-06], ['(e->sd);', 6.803878210580031e-06], ['this->constp_),', 6.803878210580031e-06], ['this->constp_));', 6.803878210580031e-06], ['(to', 6.803878210580031e-06], ['expression",', 6.803878210580031e-06], ['CONST_P', 6.803878210580031e-06], ['saved_vars', 6.803878210580031e-06], ['(d_function_chain->vars_in_scope);', 6.803878210580031e-06], ['(saved_vars', 6.803878210580031e-06], ['(d_function_chain->vars_in_scope))', 6.803878210580031e-06], ['fold_build_cleanup_point_expr', 6.803878210580031e-06], ['vec_safe_truncate', 6.803878210580031e-06], ['saved_vars);', 6.803878210580031e-06], ['build_return_dtor', 6.803878210580031e-06], ['system.', 6.803878210580031e-06], ['m->isym', 6.803878210580031e-06], ['imported_module_or_decl.', 6.803878210580031e-06], ['intrinsic_decl', 6.803878210580031e-06], ['ALIAS,', 6.803878210580031e-06], ['MODULE,', 6.803878210580031e-06], ['DECO,', 6.803878210580031e-06], ['##', 6.803878210580031e-06], ['INTRINSIC_VA_ARG:', 6.803878210580031e-06], ['INTRINSIC_C_VA_ARG:', 6.803878210580031e-06], ['INTRINSIC_VASTART:', 6.803878210580031e-06], ['INTRINSIC_ADDS:', 6.803878210580031e-06], ['INTRINSIC_SUBS:', 6.803878210580031e-06], ['INTRINSIC_MULS:', 6.803878210580031e-06], ['INTRINSIC_NEGS:', 6.803878210580031e-06], ['INTRINSIC_VLOAD:', 6.803878210580031e-06], ['INTRINSIC_VSTORE:', 6.803878210580031e-06], ['INTRINSIC_POW:', 6.803878210580031e-06], ['build_call_expr_loc_array', 6.803878210580031e-06], ['(EXPR_LOCATION', 6.803878210580031e-06], ['bsf', 6.803878210580031e-06], ['expand_intrinsic_bsf', 6.803878210580031e-06], ['bsr()', 6.803878210580031e-06], ['bsr', 6.803878210580031e-06], ['expand_intrinsic_bsr', 6.803878210580031e-06], ['bit,', 6.803878210580031e-06], ['expand_intrinsic_bt', 6.803878210580031e-06], ['bitsize', 6.803878210580031e-06], ['bitnum,', 6.803878210580031e-06], ['bitsize);', 6.803878210580031e-06], ['size]', 6.803878210580031e-06], ['cond;', 6.803878210580031e-06], ['INTRINSIC_BTR)', 6.803878210580031e-06], ['expand_intrinsic_bswap', 6.803878210580031e-06], ['popcnt', 6.803878210580031e-06], ['expand_intrinsic_popcnt', 6.803878210580031e-06], ['expand_intrinsic_sqrt', 6.803878210580031e-06], ['TO', 6.803878210580031e-06], ['expand_intrinsic_copysign', 6.803878210580031e-06], ['Prefer', 6.803878210580031e-06], ['BASE', 6.803878210580031e-06], ['expand_intrinsic_pow', 6.803878210580031e-06], ['(exptype)', 6.803878210580031e-06], ['va_arg(T)', 6.803878210580031e-06], ['expand_intrinsic_vaarg', 6.803878210580031e-06], ['ap', 6.803878210580031e-06], ['(parmn)', 6.803878210580031e-06], ['ADDR_EXPR);', 6.803878210580031e-06], ['VA_ARG_EXP<ap>;', 6.803878210580031e-06], ['expand_intrinsic_vastart', 6.803878210580031e-06], ['y,', 6.803878210580031e-06], ['negs', 6.803878210580031e-06], ['expand_intrinsic_checkedint', 6.803878210580031e-06], ['INTRINSIC_NEGS)', 6.803878210580031e-06], ['IFN_SUB_OVERFLOW', 6.803878210580031e-06], ['(ubyte*', 6.803878210580031e-06], ['(ushort*', 6.803878210580031e-06], ['(uint*', 6.803878210580031e-06], ['(ulong*', 6.803878210580031e-06], ['DCE)', 6.803878210580031e-06], ['reordered', 6.803878210580031e-06], ['thread.', 6.803878210580031e-06], ['expand_volatile_load', 6.803878210580031e-06], ['*(volatile', 6.803878210580031e-06], ['(ptrtype),', 6.803878210580031e-06], ['TYPE_QUAL_VOLATILE);', 6.803878210580031e-06], ['expand_volatile_store', 6.803878210580031e-06], ['ptr)', 6.803878210580031e-06], ['termination.', 6.803878210580031e-06], ['DSO', 6.803878210580031e-06], ['once,', 6.803878210580031e-06], ["`dso_initialized'", 6.803878210580031e-06], ["`minfo'", 6.803878210580031e-06], ['IDENT.', 6.803878210580031e-06], ["'*')", 6.803878210580031e-06], ['mod;', 6.803878210580031e-06], ['build_internal_fn', 6.803878210580031e-06], ['unittests,', 6.803878210580031e-06], ['var_expr', 6.803878210580031e-06], ['Functions.', 6.803878210580031e-06], ['call_expr', 6.803878210580031e-06], ['call_expr);', 6.803878210580031e-06], ['get_moduleinfo_type', 6.803878210580031e-06], ['flags;', 6.803878210580031e-06], ['(d_uint_type,', 6.803878210580031e-06], ['get_moduleinfo_decl', 6.803878210580031e-06], ['void**', 6.803878210580031e-06], ['ModuleInfo**', 6.803878210580031e-06], ['FuncTable*', 6.803878210580031e-06], ['Note,', 6.803878210580031e-06], ['finish_builtin_struct()', 6.803878210580031e-06], ['(get_moduleinfo_type', 6.803878210580031e-06], ['dso_type', 6.803878210580031e-06], ['ctor_p', 6.803878210580031e-06], ['GDC_PREFIX', 6.803878210580031e-06], ['(dso_initialized', 6.803878210580031e-06], ['dso_initialized', 6.803878210580031e-06], ['condition;', 6.803878210580031e-06], ['{1,', 6.803878210580031e-06], ['&dsoSlot,', 6.803878210580031e-06], ['&__start_minfo,', 6.803878210580031e-06], ['&__stop_minfo};', 6.803878210580031e-06], ['(&dso);', 6.803878210580031e-06], ['VISIBILITY_HIDDEN;', 6.803878210580031e-06], ['laying', 6.803878210580031e-06], ['(dso_initialized_node,', 6.803878210580031e-06], ['register_moduleinfo', 6.803878210580031e-06], ['(minfo);', 6.803878210580031e-06], ['(mref,', 6.803878210580031e-06], ['first_module', 6.803878210580031e-06], ['(GDC_PREFIX', 6.803878210580031e-06], ['moduleinfo', 6.803878210580031e-06], ['relating', 6.803878210580031e-06], ['layout_moduleinfo_fields', 6.803878210580031e-06], ['(decl->sctor)', 6.803878210580031e-06], ['(decl->sdtor)', 6.803878210580031e-06], ['(decl->ssharedctor)', 6.803878210580031e-06], ['(decl->sshareddtor)', 6.803878210580031e-06], ['(decl->sictor)', 6.803878210580031e-06], ['(decl->stest)', 6.803878210580031e-06], ['aimports_dim', 6.803878210580031e-06], ['(!mi->needmoduleinfo)', 6.803878210580031e-06], ['aimports_dim--;', 6.803878210580031e-06], ['(aimports_dim)', 6.803878210580031e-06], ['ClassDeclarations', 6.803878210580031e-06], ['aclasses;', 6.803878210580031e-06], ['member->addLocalClass', 6.803878210580031e-06], ['(&aclasses);', 6.803878210580031e-06], ['(aclasses.dim)', 6.803878210580031e-06], ['druntime.', 6.803878210580031e-06], ['layout_moduleinfo', 6.803878210580031e-06], ['d_uint_type));', 6.803878210580031e-06], ['elms));', 6.803878210580031e-06], ['(minfo)', 6.803878210580031e-06], ['current_moduleinfo', 6.803878210580031e-06], ['current_module_decl', 6.803878210580031e-06], ['switched', 6.803878210580031e-06], ['destructor,', 6.803878210580031e-06], ['*vgate', 6.803878210580031e-06], ['fd)->vgate;', 6.803878210580031e-06], ['(vgate', 6.803878210580031e-06], ['(vgate);', 6.803878210580031e-06], ['gate);', 6.803878210580031e-06], ['vec_safe_insert', 6.803878210580031e-06], ['Complete', 6.803878210580031e-06], ['thunks.', 6.803878210580031e-06], ['scopes', 6.803878210580031e-06], ['(get_file_function_name', 6.803878210580031e-06], ['DEFAULT_INIT_PRIORITY);', 6.803878210580031e-06], ['compiler,', 6.803878210580031e-06], ['cover', 6.803878210580031e-06], ['parsing,', 6.803878210580031e-06], ['merged', 6.803878210580031e-06], ['libcall_types[type];', 6.803878210580031e-06], ['Type::tint32;', 6.803878210580031e-06], ['get_object_type', 6.803878210580031e-06], ['Type::tvoid->arrayOf', 6.803878210580031e-06], ["`...'.", 6.803878210580031e-06], ['build_libcall_decl', 6.803878210580031e-06], ['nparams);', 6.803878210580031e-06], ['accepts', 6.803878210580031e-06], ['(tret,', 6.803878210580031e-06], ['future', 6.803878210580031e-06], ['get_libcall', 6.803878210580031e-06], ['(libcall_fn', 6.803878210580031e-06], ['libcall_decls[libcall];', 6.803878210580031e-06], ['simplified', 6.803878210580031e-06], ['...x[i', 6.803878210580031e-06], ['stride]...', 6.803878210580031e-06], ['[B]', 6.803878210580031e-06], ['cheaper', 6.803878210580031e-06], ['loop).', 6.803878210580031e-06], ['(4)', 6.803878210580031e-06], ['practice.', 6.803878210580031e-06], ['x(:)', 6.803878210580031e-06], ['100', 6.803878210580031e-06], ['1.0e+2;', 6.803878210580031e-06], ['remain.', 6.803878210580031e-06], ['COND', 6.803878210580031e-06], ['Enumerates', 6.803878210580031e-06], ['INNER_LIKELY', 6.803878210580031e-06], ['address_info.', 6.803878210580031e-06], ['MULTIPLIER.', 6.803878210580031e-06], ['complete,', 6.803878210580031e-06], ['offsets).', 6.803878210580031e-06], ['estimate', 6.803878210580031e-06], ['(loop_versioning', 6.803878210580031e-06], ['(basic_block)', 6.803878210580031e-06], ['established', 6.803878210580031e-06], ['max_insns_for_loop', 6.803878210580031e-06], ['version_for_unity', 6.803878210580031e-06], ['(address_term_info', 6.803878210580031e-06], ['HOST_WIDE_INT);', 6.803878210580031e-06], ['find_per_loop_multiplication', 6.803878210580031e-06], ['analyze_term_using_scevs', 6.803878210580031e-06], ['analyze_arbitrary_term', 6.803878210580031e-06], ['analyze_address_fragment', 6.803878210580031e-06], ['analyze_expr', 6.803878210580031e-06], ['vr_values', 6.803878210580031e-06], ['prune_conditions', 6.803878210580031e-06], ['merge_loop_info', 6.803878210580031e-06], ['make_versioning_decisions', 6.803878210580031e-06], ['implement_versioning_decisions', 6.803878210580031e-06], ['m_nloops;', 6.803878210580031e-06], ['started', 6.803878210580031e-06], ['FROM', 6.803878210580031e-06], ['(from))', 6.803878210580031e-06], ['MAX_NITERS', 6.803878210580031e-06], ['MAX_NITERS;', 6.803878210580031e-06], ['(assign))', 6.803878210580031e-06], ['(assign)))', 6.803878210580031e-06], ['&address)', 6.803878210580031e-06], ['%wd",', 6.803878210580031e-06], ['address.max_offset', 6.803878210580031e-06], ['dominates.', 6.803878210580031e-06], ['versioned', 6.803878210580031e-06], ['*fn)', 6.803878210580031e-06], ['(&m_bitmap_obstack);', 6.803878210580031e-06], ['(m_fn,', 6.803878210580031e-06], ['m_maximum_scale', 6.803878210580031e-06], ['PARAM_VALUE', 6.803878210580031e-06], ['STMT.', 6.803878210580031e-06], ['(li.outermost)', 6.803878210580031e-06], ['(outermost))', 6.803878210580031e-06], ['op2,', 6.803878210580031e-06], ['&term,', 6.803878210580031e-06], ['worklist[length++]', 6.803878210580031e-06], ['descriptors,', 6.803878210580031e-06], ['(term.inner_likelihood', 6.803878210580031e-06], ['INNER_LIKELY)', 6.803878210580031e-06], ['the"', 6.803878210580031e-06], ['%T"', 6.803878210580031e-06], ['opportunity.', 6.803878210580031e-06], ['term);', 6.803878210580031e-06], ['useful.', 6.803878210580031e-06], ['Although', 6.803878210580031e-06], ['(stride)', 6.803878210580031e-06], ['loop-invariant', 6.803878210580031e-06], ['SCEV', 6.803878210580031e-06], ['*mult', 6.803878210580031e-06], ['(term.expr);', 6.803878210580031e-06], ['(mult)', 6.803878210580031e-06], ['(!loop_outer', 6.803878210580031e-06], ['(gimple_assign_rhs2', 6.803878210580031e-06], ['(mult_loop,', 6.803878210580031e-06], ['"address', 6.803878210580031e-06], ['%T\\n",', 6.803878210580031e-06], ['term,', 6.803878210580031e-06], ['evolutions', 6.803878210580031e-06], ['interested', 6.803878210580031e-06], ['obviously', 6.803878210580031e-06], ['iterates', 6.803878210580031e-06], ['(term,', 6.803878210580031e-06], ['"i"', 6.803878210580031e-06], ['alt', 6.803878210580031e-06], ['realistic', 6.803878210580031e-06], ['in:', 6.803878210580031e-06], ['"don\'t', 6.803878210580031e-06], ['"likely"', 6.803878210580031e-06], ['confident', 6.803878210580031e-06], ['rated', 6.803878210580031e-06], ['programmer', 6.803878210580031e-06], ['address.terms[i])', 6.803878210580031e-06], ['(c)', 6.803878210580031e-06], ['stride]', 6.803878210580031e-06], ['b[i', 6.803878210580031e-06], ['3.', 6.803878210580031e-06], ['chosen_stride', 6.803878210580031e-06], ['address.terms[i].stride', 6.803878210580031e-06], ['address.terms[i].inner_likelihood', 6.803878210580031e-06], ['address.terms[i].stride;', 6.803878210580031e-06], ['(version_stride)', 6.803878210580031e-06], ['address->base', 6.803878210580031e-06], ['address->terms[0].multiplier', 6.803878210580031e-06], ['examine', 6.803878210580031e-06], ['heuristic', 6.803878210580031e-06], ['(address->terms.length', 6.803878210580031e-06], ['dealing', 6.803878210580031e-06], ['type_size;', 6.803878210580031e-06], ['Doing', 6.803878210580031e-06], ['"+', 6.803878210580031e-06], ['&type_size))', 6.803878210580031e-06], ['existed', 6.803878210580031e-06], ['nops', 6.803878210580031e-06], ['li.num_insns', 6.803878210580031e-06], ['LI_FROM_INNERMOST)', 6.803878210580031e-06], ['*inner', 6.803878210580031e-06], ['inner->next)', 6.803878210580031e-06], ['(get_loop_info', 6.803878210580031e-06], ['queued', 6.803878210580031e-06], ['to_remove', 6.803878210580031e-06], ['(to_remove', 6.803878210580031e-06], ['bitmap_clear_bit', 6.803878210580031e-06], ['to_remove);', 6.803878210580031e-06], ['&inner_li', 6.803878210580031e-06], ['(inner);', 6.803878210580031e-06], ['(&outer_li.unity_names,', 6.803878210580031e-06], ['weighed', 6.803878210580031e-06], ['*subloop', 6.803878210580031e-06], ['subloop;', 6.803878210580031e-06], ['subloop->next)', 6.803878210580031e-06], ['queue.', 6.803878210580031e-06], ['profile_probability::unlikely', 6.803878210580031e-06], ['profile_probability::likely', 6.803878210580031e-06], ['1\\n");', 6.803878210580031e-06], ['any_succeeded_p', 6.803878210580031e-06], ['(m_loops_to_version,', 6.803878210580031e-06], ['*ent,', 6.803878210580031e-06], ['(bl->kind', 6.803878210580031e-06], ['level_try)', 6.803878210580031e-06], ['level_catch)', 6.803878210580031e-06], ['ent->level', 6.803878210580031e-06], ['obl;', 6.803878210580031e-06], ['(d_label_use_entry', 6.803878210580031e-06], ['ref;', 6.803878210580031e-06], ['ref->next)', 6.803878210580031e-06], ['(ent->label))', 6.803878210580031e-06], ['(ent->label)', 6.803878210580031e-06], ['(level_kind', 6.803878210580031e-06], ['level->blocks;', 6.803878210580031e-06], ['(d_function_chain', 6.803878210580031e-06], ['rooted', 6.803878210580031e-06], ['avoids', 6.803878210580031e-06], ['u;', 6.803878210580031e-06], ['statement-tree.', 6.803878210580031e-06], ['void_node', 6.803878210580031e-06], ['ref);', 6.803878210580031e-06], ['ent->fwdrefs', 6.803878210580031e-06], ['d_label_use_entry', 6.803878210580031e-06], ['(from->loc),', 6.803878210580031e-06], ['(b->kind', 6.803878210580031e-06], ['"try', 6.803878210580031e-06], ['switch");', 6.803878210580031e-06], ['DECL_MODE', 6.803878210580031e-06], ['VOIDmode;', 6.803878210580031e-06], ['ent->label', 6.803878210580031e-06], ['this->lookup_bc_label', 6.803878210580031e-06], ['(s->getRelatedLabeled', 6.803878210580031e-06], ['(this->continue_label_);', 6.803878210580031e-06], ['elsebody', 6.803878210580031e-06], ["'else'", 6.803878210580031e-06], ['parts.', 6.803878210580031e-06], ['ifbody,', 6.803878210580031e-06], ['(cond);', 6.803878210580031e-06], ['generation,', 6.803878210580031e-06], ['exitcond', 6.803878210580031e-06], ['(exitcond,', 6.803878210580031e-06], ['void_node,', 6.803878210580031e-06], ['lbreak)));', 6.803878210580031e-06], ['Jump', 6.803878210580031e-06], ['(s->ident)->statement;', 6.803878210580031e-06], ['(label', 6.803878210580031e-06], ['(this->lookup_bc_label', 6.803878210580031e-06], ['(this->is_return_label', 6.803878210580031e-06], ['Tchar:', 6.803878210580031e-06], ['Twchar:', 6.803878210580031e-06], ['Tdchar:', 6.803878210580031e-06], ['*satype', 6.803878210580031e-06], ['s->cases->dim;', 6.803878210580031e-06], ['*cs', 6.803878210580031e-06], ['(*s->cases)[i];', 6.803878210580031e-06], ['(satype),', 6.803878210580031e-06], ['if-then-else', 6.803878210580031e-06], ['(caselabel)', 6.803878210580031e-06], ['LABEL_VARIABLE_CASE', 6.803878210580031e-06], ['SwitchStatement.', 6.803878210580031e-06], ['(LABEL_VARIABLE_CASE', 6.803878210580031e-06], ['casevalue', 6.803878210580031e-06], ['(caselabel);', 6.803878210580031e-06], ["'goto", 6.803878210580031e-06], ['s->exp->type->toBasetype', 6.803878210580031e-06], ['(s->statements', 6.803878210580031e-06], ['s->statements->dim;', 6.803878210580031e-06], ['*statement', 6.803878210580031e-06], ['(*s->statements)[i];', 6.803878210580031e-06], ['(statement', 6.803878210580031e-06], ['unrolled', 6.803878210580031e-06], ['cd->isInterfaceDeclaration', 6.803878210580031e-06], ['warned', 6.803878210580031e-06], ['(id', 6.803878210580031e-06], ['(level_try);', 6.803878210580031e-06], ['trybody', 6.803878210580031e-06], ['ehptr', 6.803878210580031e-06], ['(vcatch->var);', 6.803878210580031e-06], ['catchbody', 6.803878210580031e-06], ['trybody,', 6.803878210580031e-06], ['clobbers', 6.803878210580031e-06], ['(s->args)', 6.803878210580031e-06], ['*cstring', 6.803878210580031e-06], ['cstring);', 6.803878210580031e-06], ['inputs,', 6.803878210580031e-06], ['labels);', 6.803878210580031e-06], ['noutputs);', 6.803878210580031e-06], ['*constraint', 6.803878210580031e-06], ['(&constraint,', 6.803878210580031e-06], ['ninputs,', 6.803878210580031e-06], ['noutputs,', 6.803878210580031e-06], ['&allows_mem,', 6.803878210580031e-06], ["`object.d'.", 6.803878210580031e-06], ['get_typeinfo_kind', 6.803878210580031e-06], ['modifiers', 6.803878210580031e-06], ['*ident,', 6.803878210580031e-06], ['*mod)', 6.803878210580031e-06], ['("TypeInfo"),', 6.803878210580031e-06], ['ClassDeclaration::object);', 6.803878210580031e-06], ['("__cpp_type_info_ptr"),', 6.803878210580031e-06], ['TypeInfoDeclaration', 6.803878210580031e-06], ['(tinfo_types[TK_CLASSINFO_TYPE]);', 6.803878210580031e-06], ['void*[]', 6.803878210580031e-06], ['vtbl;', 6.803878210580031e-06], ['voffset', 6.803878210580031e-06], ['arrtype', 6.803878210580031e-06], ['(domain));', 6.803878210580031e-06], ['(arrtype,', 6.803878210580031e-06], ['base_vtable_offset().', 6.803878210580031e-06], ['(ed->memtype)', 6.803878210580031e-06], ['key;', 6.803878210580031e-06], ['deco;', 6.803878210580031e-06], ['d->tinfo->deco', 6.803878210580031e-06], ['Mangled', 6.803878210580031e-06], ['(d->tinfo->deco);', 6.803878210580031e-06], ['(TypeDelegate', 6.803878210580031e-06], ['(TypeInfoClassDeclaration', 6.803878210580031e-06], ['(cd->vtblInterfaces->dim)', 6.803878210580031e-06], ['this->layout_interfaces', 6.803878210580031e-06], ['(dtor);', 6.803878210580031e-06], ['ClassFlags::Type', 6.803878210580031e-06], ['ClassFlags::hasOffTi;', 6.803878210580031e-06], ['ClassFlags::isCOMclass;', 6.803878210580031e-06], ['ClassFlags::hasTypeInfo;', 6.803878210580031e-06], ['(flags));', 6.803878210580031e-06], ['implemented)', 6.803878210580031e-06], ['STCdisable))', 6.803878210580031e-06], ['(cd->getRTInfo)', 6.803878210580031e-06], ['(cd->getRTInfo,', 6.803878210580031e-06], ['(size_one_node);', 6.803878210580031e-06], ['vtables[].', 6.803878210580031e-06], ['this->layout_base_vtable', 6.803878210580031e-06], ['TypeInfo_Struct', 6.803878210580031e-06], ['hash_t', 6.803878210580031e-06], ['xtoHash;', 6.803878210580031e-06], ['xopEquals;', 6.803878210580031e-06], ['xopCmp;', 6.803878210580031e-06], ['function(const(void)*)', 6.803878210580031e-06], ['xtoString;', 6.803878210580031e-06], ['StructFlags', 6.803878210580031e-06], ['xdtor;', 6.803878210580031e-06], ['xpostblit;', 6.803878210580031e-06], ['m_align;', 6.803878210580031e-06], ['m_arg1;', 6.803878210580031e-06], ['m_arg2;', 6.803878210580031e-06], ['xgetRTInfo;', 6.803878210580031e-06], ['(sd->xhash)', 6.803878210580031e-06], ['(D)', 6.803878210580031e-06], ['m_flags', 6.803878210580031e-06], ['(sd->arg1type)', 6.803878210580031e-06], ['(sd->arg2type)', 6.803878210580031e-06], ['TypeInfo[]', 6.803878210580031e-06], ['(TypeTuple', 6.803878210580031e-06], ['(ti->arguments->dim);', 6.803878210580031e-06], ['(get_typeinfo_decl', 6.803878210580031e-06], ['added.', 6.803878210580031e-06], ['layout_classinfo_interfaces', 6.803878210580031e-06], ['id->vtbl.dim', 6.803878210580031e-06], ['tinfo_types[TK_CLASSINFO_TYPE])', 6.803878210580031e-06], ['(structsize,', 6.803878210580031e-06], ['(next->ty', 6.803878210580031e-06], ['next->mod', 6.803878210580031e-06], ['*tid)', 6.803878210580031e-06], ['tid->csym', 6.803878210580031e-06], ['(tid->csym);', 6.803878210580031e-06], ['monitor', 6.803878210580031e-06], ['type_info', 6.803878210580031e-06], ['layout_cpp_typeinfo', 6.803878210580031e-06], ['knowing', 6.803878210580031e-06], ['__cpp_type_info_ptr', 6.803878210580031e-06], ['decl->cpp_type_info_ptr_sym;', 6.803878210580031e-06], ['argtype,', 6.803878210580031e-06], ['(mod)', 6.803878210580031e-06], ['tb->accept', 6.803878210580031e-06], ['((TypeNext', 6.803878210580031e-06], ['*)t);', 6.803878210580031e-06], ['t->sym;', 6.803878210580031e-06], ['(!ti->needsCodegen', 6.803878210580031e-06], ['t->accept', 6.803878210580031e-06], ['compatibility', 6.803878210580031e-06], ['quals', 6.803878210580031e-06], ['MODconst:', 6.803878210580031e-06], ['MODwild:', 6.803878210580031e-06], ['MODwildconst:', 6.803878210580031e-06], ['TYPE_SHARED', 6.803878210580031e-06], ['member.', 6.803878210580031e-06], ['ftype', 6.803878210580031e-06], ['var->csym', 6.803878210580031e-06], ['shares', 6.803878210580031e-06], ['(!inherited_p)', 6.803878210580031e-06], ['counter', 6.803878210580031e-06], ['UNION_TYPE', 6.803878210580031e-06], ['(!id', 6.803878210580031e-06], ['alignsize,', 6.803878210580031e-06], ['*eattrs', 6.803878210580031e-06], ['(eattrs),', 6.803878210580031e-06], ['ATTR_FLAG_TYPE_IN_PLACE);', 6.803878210580031e-06], ['(structsize', 6.803878210580031e-06], ['(structsize);', 6.803878210580031e-06], ['(alignsize', 6.803878210580031e-06], ['compute_record_mode', 6.803878210580031e-06], ['TYPE_USER_ALIGN', 6.803878210580031e-06], ['ptr_type_node;', 6.803878210580031e-06], ['754', 6.803878210580031e-06], ['real.', 6.803878210580031e-06], ['(t->varargs', 6.803878210580031e-06], ['(t->next);', 6.803878210580031e-06], ['(dgtype)', 6.803878210580031e-06], ['(t->sym->memtype)', 6.803878210580031e-06], ['(t->sym->members)', 6.803878210580031e-06], ['basetype);', 6.803878210580031e-06], ['enumeration', 6.803878210580031e-06], ['CONST_DECL,', 6.803878210580031e-06], ['(t->sym,', 6.803878210580031e-06], ['t->ctype,', 6.803878210580031e-06], ['t->sym->userAttribDecl);', 6.803878210580031e-06], ['(t->sym);', 6.803878210580031e-06], ['(tv))', 6.803878210580031e-06], ['(tv)', 6.803878210580031e-06], ['TYPE_BINFO', 6.803878210580031e-06], ['(method)', 6.803878210580031e-06], ['Google.', 6.803878210580031e-06], ['"go-gcc.h"', 6.803878210580031e-06], ['this->t_', 6.803878210580031e-06], ['t_;', 6.803878210580031e-06], ['Bstatement', 6.803878210580031e-06], ['Bfunction', 6.803878210580031e-06], ['Bvariable', 6.803878210580031e-06], ['Bvariable(tree', 6.803878210580031e-06], ['t_(t),', 6.803878210580031e-06], ['build_fold_indirect_ref_loc(location.gcc_location(),', 6.803878210580031e-06], ['Gcc_backend();', 6.803878210580031e-06], ['std::vector<Btyped_identifier>&,', 6.803878210580031e-06], ['breal,', 6.803878210580031e-06], ['caller,', 6.803878210580031e-06], ['>&', 6.803878210580031e-06], ['std::vector<Bstatement*>&);', 6.803878210580031e-06], ['except_stmt,', 6.803878210580031e-06], ['finally_stmt,', 6.803878210580031e-06], ['Bblock*,', 6.803878210580031e-06], ['is_external,', 6.803878210580031e-06], ['in_unique_section,', 6.803878210580031e-06], ['std::vector<Bvariable*>&);', 6.803878210580031e-06], ['code_stmt);', 6.803878210580031e-06], ['const_p,', 6.803878210580031e-06], ['GCCGo.', 6.803878210580031e-06], ['long_integer_type_node,', 6.803878210580031e-06], ['unsigned_type_node,', 6.803878210580031e-06], ['math_function_type_two,', 6.803878210580031e-06], ['math_function_type_long_two,', 6.803878210580031e-06], ['integer_type_node,', 6.803878210580031e-06], ['"__builtin_return_address",', 6.803878210580031e-06], ['"__builtin_dwarf_cfa",', 6.803878210580031e-06], ['returns.', 6.803878210580031e-06], ['build_function_type(void_type_node,', 6.803878210580031e-06], ['void_list_node),', 6.803878210580031e-06], ['CHAR_TYPE_SIZE)', 6.803878210580031e-06], ['SHORT_TYPE_SIZE)', 6.803878210580031e-06], ['make_node(REAL_TYPE);', 6.803878210580031e-06], ['TYPE_PRECISION(type)', 6.803878210580031e-06], ['to_type)', 6.803878210580031e-06], ['to_type->get_tree();', 6.803878210580031e-06], ['Location)', 6.803878210580031e-06], ['tree_cons(NULL_TREE,', 6.803878210580031e-06], ['&TREE_CHAIN(*pp);', 6.803878210580031e-06], ['(std::vector<Btyped_identifier>::const_iterator', 6.803878210580031e-06], ['p->btype->get_tree();', 6.803878210580031e-06], ['fill,', 6.803878210580031e-06], ['fill_tree', 6.803878210580031e-06], ['fill->get_tree();', 6.803878210580031e-06], ['field_trees', 6.803878210580031e-06], ['&field_trees;', 6.803878210580031e-06], ['name_tree', 6.803878210580031e-06], ['name_tree,', 6.803878210580031e-06], ['DECL_CONTEXT(field)', 6.803878210580031e-06], ['field_trees;', 6.803878210580031e-06], ['layout_type(fill_tree);', 6.803878210580031e-06], ['SET_TYPE_STRUCTURAL_EQUALITY(fill_tree);', 6.803878210580031e-06], ['fill;', 6.803878210580031e-06], ['(pt', 6.803878210580031e-06], ['ft)', 6.803878210580031e-06], ['gcc_assert(TREE_CODE(t)', 6.803878210580031e-06], ['build_distinct_type_copy(t);', 6.803878210580031e-06], ['DECL_ORIGINAL_TYPE(TYPE_NAME(t))', 6.803878210580031e-06], ['this->make_type(copy);', 6.803878210580031e-06], ['r->get_tree()', 6.803878210580031e-06], ['(TREE_CODE(type)', 6.803878210580031e-06], ['marker', 6.803878210580031e-06], ['circular', 6.803878210580031e-06], ['BTYPE.', 6.803878210580031e-06], ['struct_tree', 6.803878210580031e-06], ['(struct_tree', 6.803878210580031e-06], ['DECL_CHAIN(field);', 6.803878210580031e-06], ['const_val', 6.803878210580031e-06], ['r1;', 6.803878210580031e-06], ['real_from_mpfr(&r1,', 6.803878210580031e-06], ['r2;', 6.803878210580031e-06], ['real_convert(&r2,', 6.803878210580031e-06], ['&r1);', 6.803878210580031e-06], ['mpc_realref(val),', 6.803878210580031e-06], ['TREE_TYPE(t),', 6.803878210580031e-06], ['TYPE_MODE(TREE_TYPE(t)),', 6.803878210580031e-06], ['mpc_imagref(val),', 6.803878210580031e-06], ['build_real(TREE_TYPE(t),', 6.803878210580031e-06], ['complex_tree', 6.803878210580031e-06], ['bcomplex->get_tree();', 6.803878210580031e-06], ['(complex_tree', 6.803878210580031e-06], ['gcc_assert(COMPLEX_FLOAT_TYPE_P(TREE_TYPE(complex_tree)));', 6.803878210580031e-06], ['TREE_TYPE(TREE_TYPE(complex_tree)),', 6.803878210580031e-06], ['complex_tree);', 6.803878210580031e-06], ['imag_tree', 6.803878210580031e-06], ['type->get_tree();', 6.803878210580031e-06], ['INTEGER_TYPE)', 6.803878210580031e-06], ['TREE_CODE(type_tree)', 6.803878210580031e-06], ['bexpr->get_tree();', 6.803878210580031e-06], ['(TREE_TYPE(field)', 6.803878210580031e-06], ['fold_build3_loc(location.gcc_location(),', 6.803878210580031e-06], ['TREE_TYPE(field),', 6.803878210580031e-06], ['BSTAT', 6.803878210580031e-06], ['bstat->get_tree();', 6.803878210580031e-06], ['condition->get_tree();', 6.803878210580031e-06], ['build3_loc(location.gcc_location(),', 6.803878210580031e-06], ['cond_tree,', 6.803878210580031e-06], ['then_tree,', 6.803878210580031e-06], ['else_tree);', 6.803878210580031e-06], ['computed_type', 6.803878210580031e-06], ['excess_precision_type(type_tree);', 6.803878210580031e-06], ['(computed_type', 6.803878210580031e-06], ['computed_type;', 6.803878210580031e-06], ['RIGHT.', 6.803878210580031e-06], ['left_tree', 6.803878210580031e-06], ['OPERATOR_ANDAND;', 6.803878210580031e-06], ['right_tree);', 6.803878210580031e-06], ['*init;', 6.803878210580031e-06], ['vec_alloc(init,', 6.803878210580031e-06], ['GIMPLE', 6.803878210580031e-06], ['side-effects', 6.803878210580031e-06], ['&sink);', 6.803878210580031e-06], ['constructor_elt', 6.803878210580031e-06], ['NULL};', 6.803878210580031e-06], ['constructor_elt*', 6.803878210580031e-06], ['elt', 6.803878210580031e-06], ['init->quick_push(empty);', 6.803878210580031e-06], ['elt->index', 6.803878210580031e-06], ['elt->value', 6.803878210580031e-06], ['build_constructor(type_tree,', 6.803878210580031e-06], ['(sink', 6.803878210580031e-06], ['sink,', 6.803878210580031e-06], ['vals.size();', 6.803878210580031e-06], ['index->get_tree();', 6.803878210580031e-06], ['index_tree);', 6.803878210580031e-06], ['index_tree,', 6.803878210580031e-06], ['array_tree,', 6.803878210580031e-06], ['fcn', 6.803878210580031e-06], ['fn_args,', 6.803878210580031e-06], ['(excess_type', 6.803878210580031e-06], ['init->get_tree();', 6.803878210580031e-06], ['ld,', 6.803878210580031e-06], ['crashes', 6.803878210580031e-06], ['DECL_EXPR,', 6.803878210580031e-06], ['(init_tree', 6.803878210580031e-06], ['init_tree,', 6.803878210580031e-06], ['TREE_TYPE(result);', 6.803878210580031e-06], ['set);', 6.803878210580031e-06], ['(DECL_STRUCT_FUNCTION(fntree)', 6.803878210580031e-06], ['push_struct_function(fntree);', 6.803878210580031e-06], ['push_cfun(DECL_STRUCT_FUNCTION(fntree));', 6.803878210580031e-06], ['EXCEPT_STMT', 6.803878210580031e-06], ['except_tree', 6.803878210580031e-06], ['finally_tree', 6.803878210580031e-06], ['stat_tree,', 6.803878210580031e-06], ['else_block', 6.803878210580031e-06], ['push_struct_function(decl);', 6.803878210580031e-06], ['push_cfun(DECL_STRUCT_FUNCTION(decl));', 6.803878210580031e-06], ['(*ps', 6.803878210580031e-06], ['create_artificial_label(loc);', 6.803878210580031e-06], ['append_to_statement_list(c,', 6.803878210580031e-06], ['pcv', 6.803878210580031e-06], ['statements)', 6.803878210580031e-06], ['block_tree', 6.803878210580031e-06], ['(enclosing', 6.803878210580031e-06], ['superblock_tree', 6.803878210580031e-06], ['superblock_tree;', 6.803878210580031e-06], ['(pp', 6.803878210580031e-06], ['&BLOCK_SUBBLOCKS(superblock_tree);', 6.803878210580031e-06], ['&BLOCK_CHAIN(*pp))', 6.803878210580031e-06], ['BLOCK);', 6.803878210580031e-06], ['(*pv)->get_decl();', 6.803878210580031e-06], ['&DECL_CHAIN(*pp);', 6.803878210580031e-06], ['bblock,', 6.803878210580031e-06], ['go_non_zero_struct;', 6.803878210580031e-06], ['ns;', 6.803878210580031e-06], ['confuse', 6.803878210580031e-06], ['(!is_hidden)', 6.803878210580031e-06], ['(var_decl', 6.803878210580031e-06], ['TREE_ADDRESSABLE(decl)', 6.803878210580031e-06], ['DECL_ARG_TYPE(decl)', 6.803878210580031e-06], ['DECL_STRUCT_FUNCTION(fndecl);', 6.803878210580031e-06], ['BLOCK_VARS(block_tree);', 6.803878210580031e-06], ['(this->type_size(btype)', 6.803878210580031e-06], ['visibility', 6.803878210580031e-06], ['weak,', 6.803878210580031e-06], ['compute_reloc_for_constant.', 6.803878210580031e-06], ['arise', 6.803878210580031e-06], ['immutable_struct_set_init', 6.803878210580031e-06], ['mark_decl_one_only.', 6.803878210580031e-06], ['implicit_variable.', 6.803878210580031e-06], ['make_decl_one_only.', 6.803878210580031e-06], ['make_decl_one_only(decl,', 6.803878210580031e-06], ['DECL_ASSEMBLER_NAME(decl));', 6.803878210580031e-06], ['rest_of_decl_compilation(decl,', 6.803878210580031e-06], ['build_qualified_type(type_tree,', 6.803878210580031e-06], ['immutable_struct', 6.803878210580031e-06], ['immutable_struct.', 6.803878210580031e-06], ['(name.empty())', 6.803878210580031e-06], ['lab);', 6.803878210580031e-06], ['(functype', 6.803878210580031e-06], ['TREE_TYPE(functype);', 6.803878210580031e-06], ['L1', 6.803878210580031e-06], ['FUNCTION.', 6.803878210580031e-06], ['defer_tree', 6.803878210580031e-06], ['catch_body', 6.803878210580031e-06], ['catch_body);', 6.803878210580031e-06], ['(func_tree', 6.803878210580031e-06], ['FUNCTION', 6.803878210580031e-06], ['code_stmt)', 6.803878210580031e-06], ['std::vector<Btype*>&', 6.803878210580031e-06], ['std::vector<Bfunction*>&', 6.803878210580031e-06], ['count_definitions', 6.803878210580031e-06], ['BUILT_IN_NORMAL,', 6.803878210580031e-06], ['(const_p)', 6.803878210580031e-06], ['(noreturn_p)', 6.803878210580031e-06], ['this->make_function(decl);', 6.803878210580031e-06], ['file_name,', 6.803878210580031e-06], ['line_begin);', 6.803878210580031e-06], ['this->in_file_', 6.803878210580031e-06], ['resolved_location', 6.803878210580031e-06], ['ss.str();', 6.803878210580031e-06], ['lineno,', 6.803878210580031e-06], ['loc.gcc_location()', 6.803878210580031e-06], ['checksum.', 6.803878210580031e-06], ['Go_sha1_helper*', 6.803878210580031e-06], ['-*-', 6.803878210580031e-06], ['<fstream>', 6.803878210580031e-06], ['-fgo-dump-ast', 6.803878210580031e-06], ['ast_dump_context_(ast_dump_context)', 6.803878210580031e-06], ['ast_dump_context_;', 6.803878210580031e-06], ['Ast_dump_traverse_statements', 6.803878210580031e-06], ['this->ast_dump_context_->print_indent();', 6.803878210580031e-06], ['go_assert(no->is_function());', 6.803878210580031e-06], ['res->begin();', 6.803878210580031e-06], ['res->end();', 6.803878210580031e-06], ['no->name()', 6.803878210580031e-06], ['go_assert(no->is_result_variable());', 6.803878210580031e-06], ['*/)', 6.803878210580031e-06], ['".dump.ast";', 6.803878210580031e-06], ['basename)', 6.803878210580031e-06], ['std::ofstream', 6.803878210580031e-06], ['gogo;', 6.803878210580031e-06], ['adtbf(this);', 6.803878210580031e-06], ['out.close();', 6.803878210580031e-06], ['(std::vector<Expression*>::const_iterator', 6.803878210580031e-06], ['(*it)->dump_expression(this);', 6.803878210580031e-06], ['"tmp."', 6.803878210580031e-06], ['"*";', 6.803878210580031e-06], ['"%";', 6.803878210580031e-06], ['"<-";', 6.803878210580031e-06], ['OPERATOR_PLUSEQ:', 6.803878210580031e-06], ['OPERATOR_MINUSEQ:', 6.803878210580031e-06], ['OPERATOR_OREQ:', 6.803878210580031e-06], ['OPERATOR_XOREQ:', 6.803878210580031e-06], ['OPERATOR_MULTEQ:', 6.803878210580031e-06], ['OPERATOR_DIVEQ:', 6.803878210580031e-06], ['OPERATOR_MODEQ:', 6.803878210580031e-06], ['OPERATOR_ANDEQ:', 6.803878210580031e-06], ['OPERATOR_BITCLEAREQ:', 6.803878210580031e-06], ['"{";', 6.803878210580031e-06], ['"[";', 6.803878210580031e-06], ['Ast_dump_context::dump_to_stream(const', 6.803878210580031e-06], ['std::ostream*', 6.803878210580031e-06], ['adc(out,', 6.803878210580031e-06], ['"<null>";', 6.803878210580031e-06], ['&std::cerr);', 6.803878210580031e-06], ['Shallow', 6.803878210580031e-06], ['"Block', 6.803878210580031e-06], ['Deep', 6.803878210580031e-06], ['adc(&std::cerr,', 6.803878210580031e-06], ['Type_dumper', 6.803878210580031e-06], ['char*,', 6.803878210580031e-06], ['Type*>', 6.803878210580031e-06], ['tbuf,', 6.803878210580031e-06], ['(ex:', 6.803878210580031e-06], ['non-NULL,', 6.803878210580031e-06], ['this->lookup(t);', 6.803878210580031e-06], ['p.second;', 6.803878210580031e-06], ['"\'"', 6.803878210580031e-06], ['"\'', 6.803878210580031e-06], ['Type::TYPE_ERROR:', 6.803878210580031e-06], ['Type::TYPE_INTEGER:', 6.803878210580031e-06], ['Type::TYPE_FLOAT:', 6.803878210580031e-06], ['Type::TYPE_COMPLEX:', 6.803878210580031e-06], ['Type::TYPE_BOOLEAN:', 6.803878210580031e-06], ['Type::TYPE_STRING:', 6.803878210580031e-06], ['Type::TYPE_NIL:', 6.803878210580031e-06], ['Type::TYPE_VOID:', 6.803878210580031e-06], ['Type::TYPE_FUNCTION:', 6.803878210580031e-06], ['Type::TYPE_MAP:', 6.803878210580031e-06], ['Type::TYPE_CHANNEL:', 6.803878210580031e-06], ['Type::TYPE_FORWARD:', 6.803878210580031e-06], ['"T"', 6.803878210580031e-06], ['tag;', 6.803878210580031e-06], ['routine,', 6.803878210580031e-06], ['go_unreachable()', 6.803878210580031e-06], ['warning/error,', 6.803878210580031e-06], ['possibility', 6.803878210580031e-06], ['((unsigned)t->classification())', 6.803878210580031e-06], ['ft->parameters();', 6.803878210580031e-06], ['[";', 6.803878210580031e-06], ['this->typeref("]', 6.803878210580031e-06], ['"map', 6.803878210580031e-06], ['(p->name().empty())', 6.803878210580031e-06], ['visit_methods(it->local_methods(),', 6.803878210580031e-06], ['{";', 6.803878210580031e-06], ['classification', 6.803878210580031e-06], ['Node.', 6.803878210580031e-06], ['reporting;', 6.803878210580031e-06], ['!this->object()->is_sink())', 6.803878210580031e-06], ['debugging;', 6.803878210580031e-06], ['obj.FmtShort.', 6.803878210580031e-06], ['literal";', 6.803878210580031e-06], ['(is_call)', 6.803878210580031e-06], ['Statement::STATEMENT_SWITCH:', 6.803878210580031e-06], ['Statement::STATEMENT_TYPE_SWITCH:', 6.803878210580031e-06], ['differently', 6.803878210580031e-06], ['is_assigned', 6.803878210580031e-06], ['class_name;', 6.803878210580031e-06], ['e->var_expression()->named_object();', 6.803878210580031e-06], ['(var->is_global())', 6.803878210580031e-06], ['"PPARAMREF";', 6.803878210580031e-06], ['(is_in_heap)', 6.803878210580031e-06], ['this->state_->loop_depth', 6.803878210580031e-06], ['Expression::EXPRESSION_BINARY:', 6.803878210580031e-06], ['"defer";', 6.803878210580031e-06], ['Statement::STATEMENT_DEFER:', 6.803878210580031e-06], ['var_node', 6.803878210580031e-06], ['this->state_', 6.803878210580031e-06], ['this->state_;', 6.803878210580031e-06], ['Node', 6.803878210580031e-06], ["object's", 6.803878210580031e-06], ['encoding.', 6.803878210580031e-06], ['this->encoding_', 6.803878210580031e-06], ['(1', 6.803878210580031e-06], ['(e->temporary_reference_expression()', 6.803878210580031e-06], ['tre', 6.803878210580031e-06], ['e->temporary_reference_expression();', 6.803878210580031e-06], ['std::map<Named_object*,', 6.803878210580031e-06], ['std::pair<Named_object*,', 6.803878210580031e-06], ['Node::ESCAPE_NONE', 6.803878210580031e-06], ['Node::ESCAPE_RETURN)', 6.803878210580031e-06], ['etype;', 6.803878210580031e-06], ['level.suffix_value()', 6.803878210580031e-06], ['Node::ESCAPE_HEAP;', 6.803878210580031e-06], ['level.value()', 6.803878210580031e-06], ['ESCAPE_RETURN_BITS;', 6.803878210580031e-06], ['ESCAPE_BITS_MASK_FOR_TAG;', 6.803878210580031e-06], ['Gogo::unpack_hidden_name(fn->name());', 6.803878210580031e-06], ['n->location();', 6.803878210580031e-06], ['Named_object::make_variable(buf,', 6.803878210580031e-06], ['this->loop_depth_;', 6.803878210580031e-06], ['ind;', 6.803878210580031e-06], ['Expression::make_unary(OPERATOR_MULT,', 6.803878210580031e-06], ['ind', 6.803878210580031e-06], ['n->set_encoding(Node::ESCAPE_NONE);', 6.803878210580031e-06], ['escapement', 6.803878210580031e-06], ['tag)', 6.803878210580031e-06], ['Node::ESCAPE_UNKNOWN;', 6.803878210580031e-06], ['go_create_sha1_helper();', 6.803878210580031e-06], ["'0';", 6.803878210580031e-06], ['Discover', 6.803878210580031e-06], ['groups', 6.803878210580031e-06], ['(!this->debug_escape_hash().empty())', 6.803878210580031e-06], ['((*fn)->is_function())', 6.803878210580031e-06], ['fntype->set_is_tagged();', 6.803878210580031e-06], ['debug_function_name(*fn)', 6.803878210580031e-06], ['connection', 6.803878210580031e-06], ['*fn);', 6.803878210580031e-06], ['dst.', 6.803878210580031e-06], ['(std::set<Node*>::iterator', 6.803878210580031e-06], ['escapes[*n]', 6.803878210580031e-06], ['(*n)->encoding();', 6.803878210580031e-06], ['this->propagate_escape(context,', 6.803878210580031e-06], ['*n);', 6.803878210580031e-06], ['(this->debug_escape_level()', 6.803878210580031e-06], ['go_inform((*n)->location(),', 6.803878210580031e-06], ['(*n)->ast_format(this).c_str());', 6.803878210580031e-06], ['Tag', 6.803878210580031e-06], ['discovering', 6.803878210580031e-06], ['components.', 6.803878210580031e-06], ['Escape_analysis_discover', 6.803878210580031e-06], ['this->visit(fn);', 6.803878210580031e-06], ['graph,', 6.803878210580031e-06], ['n+1.', 6.803878210580031e-06], ['tells', 6.803878210580031e-06], ['this->id++;', 6.803878210580031e-06], ['this->id;', 6.803878210580031e-06], ['this->component_ids_[fn]', 6.803878210580031e-06], ['std::numeric_limits<int>::max();', 6.803878210580031e-06], ['closures', 6.803878210580031e-06], ['Escape_discover_expr', 6.803878210580031e-06], ['(e->call_expression()', 6.803878210580031e-06], ['(e->func_expression()', 6.803878210580031e-06], ['e->func_expression()->closure()', 6.803878210580031e-06], ['looping.', 6.803878210580031e-06], ['Escape_analysis_loop', 6.803878210580031e-06], ['connectivity', 6.803878210580031e-06], ['Escape_analysis_assign', 6.803878210580031e-06], ['Traverse(traverse_statements', 6.803878210580031e-06], ['input-to-output', 6.803878210580031e-06], ['NOTE.', 6.803878210580031e-06], ['note,', 6.803878210580031e-06], ['std::vector<Node*>&', 6.803878210580031e-06], ['dsts,', 6.803878210580031e-06], ['*Buffer)', 6.803878210580031e-06], ['Foo()', 6.803878210580031e-06], ['b.buf', 6.803878210580031e-06], ['b.buf[n:m]', 6.803878210580031e-06], ['lve', 6.803878210580031e-06], ['String_index_expression*', 6.803878210580031e-06], ['(rarray', 6.803878210580031e-06], ['rve', 6.803878210580031e-06], ['(is_for_statement)', 6.803878210580031e-06], ['this->context_->increase_loop_depth();', 6.803878210580031e-06], ['Node::make_node(s);', 6.803878210580031e-06], ['fn_name', 6.803878210580031e-06], ['this->context_->current_function_name();', 6.803878210580031e-06], ['esc:', 6.803878210580031e-06], ['fn_name.c_str(),', 6.803878210580031e-06], ['(var->is_variable()', 6.803878210580031e-06], ['Statement::STATEMENT_ASSIGNMENT:', 6.803878210580031e-06], ['Assignment_statement*', 6.803878210580031e-06], ['this->context_->current_function_name()).c_str(),', 6.803878210580031e-06], ['Defer', 6.803878210580031e-06], ['Node::make_node(call->fn());', 6.803878210580031e-06], ['(call->args()', 6.803878210580031e-06], ['arg_node', 6.803878210580031e-06], ['arg_node);', 6.803878210580031e-06], ['runtime",', 6.803878210580031e-06], ['move_to_heap(gogo,', 6.803878210580031e-06], ['((*pexpr)->classification())', 6.803878210580031e-06], ['append(slice1,', 6.803878210580031e-06], ['escape,', 6.803878210580031e-06], ['leaks', 6.803878210580031e-06], ['appendee);', 6.803878210580031e-06], ['fe->is_runtime_function())', 6.803878210580031e-06], ['(fe->runtime_code())', 6.803878210580031e-06], ['escapes.', 6.803878210580031e-06], ['key.', 6.803878210580031e-06], ['v.(T),', 6.803878210580031e-06], ['arg2,', 6.803878210580031e-06], ['dst_node', 6.803878210580031e-06], ['Expression::EXPRESSION_STRING_CONCAT:', 6.803878210580031e-06], ['Expression::EXPRESSION_CONVERSION:', 6.803878210580031e-06], ['Expression::EXPRESSION_FIXED_ARRAY_CONSTRUCTION:', 6.803878210580031e-06], ['Expression::EXPRESSION_SLICE_CONSTRUCTION:', 6.803878210580031e-06], ['((*pexpr)->slice_literal()', 6.803878210580031e-06], ['this->assign(array_node,', 6.803878210580031e-06], ['Expression::EXPRESSION_STRUCT_CONSTRUCTION:', 6.803878210580031e-06], ['this->assign(struct_node,', 6.803878210580031e-06], ['Expression::EXPRESSION_SLICE_VALUE:', 6.803878210580031e-06], ['Expression::EXPRESSION_HEAP:', 6.803878210580031e-06], ['Expression::EXPRESSION_BOUND_METHOD:', 6.803878210580031e-06], ['Expression::EXPRESSION_MAP_CONSTRUCTION:', 6.803878210580031e-06], ['(fe->closure()', 6.803878210580031e-06], ['func_code,', 6.803878210580031e-06], ['enclosed_node', 6.803878210580031e-06], ['((*pexpr)->unary_expression()->op()', 6.803878210580031e-06], ['addr_state', 6.803878210580031e-06], ['addr_state->loop_depth', 6.803878210580031e-06], ['&x', 6.803878210580031e-06], ['loopdepth', 6.803878210580031e-06], ['Node::make_node(aie->array());', 6.803878210580031e-06], ['array_state->loop_depth;', 6.803878210580031e-06], ['Slicing', 6.803878210580031e-06], ['(fntype->is_method()', 6.803878210580031e-06], ['Node::make_node(call);', 6.803878210580031e-06], ['ifre', 6.803878210580031e-06], ['(std::vector<Node*>::iterator', 6.803878210580031e-06], ['this->context_->init_retvals(call_node,', 6.803878210580031e-06], ['retvals.begin();', 6.803878210580031e-06], ['retvals.end();', 6.803878210580031e-06], ['callee_bindings', 6.803878210580031e-06], ['++p1)', 6.803878210580031e-06], ['std::vector<Node*>::iterator', 6.803878210580031e-06], ['rcvr_no', 6.803878210580031e-06], ['go_assert(rcvr_no', 6.803878210580031e-06], ['Node::make_node(rcvr_no);', 6.803878210580031e-06], ['(*p)->expr()->type()->points_to()', 6.803878210580031e-06], ['Gccgo', 6.803878210580031e-06], ['dereferences', 6.803878210580031e-06], ['escape;', 6.803878210580031e-06], ['(til', 6.803878210580031e-06], ['call_state', 6.803878210580031e-06], ['(*p)->expr()->type(),', 6.803878210580031e-06], ['later,', 6.803878210580031e-06], ['preemptively', 6.803878210580031e-06], ['show', 6.803878210580031e-06], ['this->context_->track(*p);', 6.803878210580031e-06], ['src->details().c_str(),', 6.803878210580031e-06], ['Expression::EXPRESSION_TEMPORARY_REFERENCE:', 6.803878210580031e-06], ['tracked', 6.803878210580031e-06], ['(src->is_indirect())', 6.803878210580031e-06], ['src->expr();', 6.803878210580031e-06], ['e->call_expression();', 6.803878210580031e-06], ['(bce->code()', 6.803878210580031e-06], ['Builtin_call_expression::BUILTIN_APPEND)', 6.803878210580031e-06], ['(call->fn()->func_expression()', 6.803878210580031e-06], ['call->fn()->func_expression()->is_runtime_function())', 6.803878210580031e-06], ['(call->fn()->func_expression()->runtime_code())', 6.803878210580031e-06], ['e->conversion_expression();', 6.803878210580031e-06], ['(e->type_guard_expression()', 6.803878210580031e-06], ['e->type_guard_expression()->expr();', 6.803878210580031e-06], ['Indexing', 6.803878210580031e-06], ['(e->string_index_expression()', 6.803878210580031e-06], ['e->temporary_reference_expression()->statement();', 6.803878210580031e-06], ['this->context_->add_dereference(src));', 6.803878210580031e-06], ['(content', 6.803878210580031e-06], ['indirections.', 6.803878210580031e-06], ['dst->state(this->context_,', 6.803878210580031e-06], ['fn->func_value()->block()->bindings();', 6.803878210580031e-06], ['(fntype->receiver()', 6.803878210580031e-06], ['(p->name().empty()', 6.803878210580031e-06], ['Gogo::is_sink_name(p->name()))', 6.803878210580031e-06], ['External', 6.803878210580031e-06], ['(fn->package()', 6.803878210580031e-06], ['Escape_analysis_flood', 6.803878210580031e-06], ['context_(context)', 6.803878210580031e-06], ['hit', 6.803878210580031e-06], ['address-of,', 6.803878210580031e-06], ['escaping', 6.803878210580031e-06], ['level,', 6.803878210580031e-06], ['extra_loop_depth)', 6.803878210580031e-06], ['src_state->max_extra_loop_depth', 6.803878210580031e-06], ['level.suffix_value(),', 6.803878210580031e-06], ['dst_is_result', 6.803878210580031e-06], ['dst->encoding()', 6.803878210580031e-06], ['level={%d', 6.803878210580031e-06], ['level.copy();', 6.803878210580031e-06], ['src_state->flows.begin();', 6.803878210580031e-06], ['src_state->flows.end();', 6.803878210580031e-06], ['Node::max_encoding((src->encoding()', 6.803878210580031e-06], ['ESCAPE_CONTENT_ESCAPES),', 6.803878210580031e-06], ['content:', 6.803878210580031e-06], ['dst_state->loop_depth', 6.803878210580031e-06], ['(src_leaks', 6.803878210580031e-06], ['(e->unary_expression()', 6.803878210580031e-06], ['e->unary_expression()->op()', 6.803878210580031e-06], ['e->unary_expression()->operand();', 6.803878210580031e-06], ['src->child(),', 6.803878210580031e-06], ['behaves', 6.803878210580031e-06], ['((e->field_reference_expression()', 6.803878210580031e-06], ['e->field_reference_expression()->expr()->unary_expression()', 6.803878210580031e-06], ['Increase', 6.803878210580031e-06], ['this->flood(level.increase(),', 6.803878210580031e-06], ['Escape_analysis_tag', 6.803878210580031e-06], ['touched', 6.803878210580031e-06], ['Node::ESCAPE_RETURN:', 6.803878210580031e-06], ['tagging', 6.803878210580031e-06], ['flooded,', 6.803878210580031e-06], ['Reclaim', 6.803878210580031e-06], ['Nodes.', 6.803878210580031e-06], ['(map_t::iterator', 6.803878210580031e-06], ['m_map.end', 6.803878210580031e-06], ['<char', 6.803878210580031e-06], ['(pp);', 6.803878210580031e-06], ['*v)', 6.803878210580031e-06], ['json::array,', 6.803878210580031e-06], ['*v;', 6.803878210580031e-06], ['(m_elements,', 6.803878210580031e-06], ['(utf8);', 6.803878210580031e-06], ['\'"\');', 6.803878210580031e-06], ['"\\\\n");', 6.803878210580031e-06], ['"null");', 6.803878210580031e-06], ['test_writing_objects', 6.803878210580031e-06], ['("bar"));', 6.803878210580031e-06], ['test_writing_arrays', 6.803878210580031e-06], ['arr.append', 6.803878210580031e-06], ['test_writing_numbers', 6.803878210580031e-06], ['test_writing_strings', 6.803878210580031e-06], ['test_writing_literals', 6.803878210580031e-06], ['Type::COMPARE_TAGS', 6.803878210580031e-06], ['Type::COMPARE_EMBEDDED_INTERFACES', 6.803878210580031e-06], ['(no->is_package())', 6.803878210580031e-06], ['no->name()[0]', 6.803878210580031e-06], ['no->name()[1]', 6.803878210580031e-06], ['bindings)', 6.803878210580031e-06], ['Package*)', 6.803878210580031e-06], ['this->write_c_string("package', 6.803878210580031e-06], ['this->write_string(package_name);', 6.803878210580031e-06], ['path,', 6.803878210580031e-06], ['ideally', 6.803878210580031e-06], ['(!(*p)->is_type())', 6.803878210580031e-06], ['0xf;', 6.803878210580031e-06], ['Find_types_to_prepare', 6.803878210580031e-06], ['imports)', 6.803878210580031e-06], ['unsafe.Pointer.', 6.803878210580031e-06], ['below).', 6.803878210580031e-06], ['it->sort_embedded();', 6.803878210580031e-06], ['traversing', 6.803878210580031e-06], ['classification,', 6.803878210580031e-06], ['type->receiver();', 6.803878210580031e-06], ['type->parameters();', 6.803878210580031e-06], ['nt)', 6.803878210580031e-06], ['methods->begin_definitions();', 6.803878210580031e-06], ['methods->end_definitions();', 6.803878210580031e-06], ['(fn->export_for_inlining())', 6.803878210580031e-06], ['methods->begin_declarations();', 6.803878210580031e-06], ['methods->end_declarations();', 6.803878210580031e-06], ['mno', 6.803878210580031e-06], ['exports->begin();', 6.803878210580031e-06], ['exports->end();', 6.803878210580031e-06], ['no->const_value()->type();', 6.803878210580031e-06], ['std::pair<Type_refs::iterator,', 6.803878210580031e-06], ['packages_compare);', 6.803878210580031e-06], ['this->write_string((*p)->package_name());', 6.803878210580031e-06], ['this->write_string((*p)->pkgpath());', 6.803878210580031e-06], ['std::pair<std::string,', 6.803878210580031e-06], ['init_graph,', 6.803878210580031e-06], ['succs;', 6.803878210580031e-06], ['unsigned>::const_iterator', 6.803878210580031e-06], ['(!import_init_fn.empty())', 6.803878210580031e-06], ['(ii->init_name()', 6.803878210580031e-06], ['legacy', 6.803878210580031e-06], ['(ii->priority()', 6.803878210580031e-06], ['level_map::iterator', 6.803878210580031e-06], ['inits_at_level.end())', 6.803878210580031e-06], ['add_init_graph_edge(&init_graph,', 6.803878210580031e-06], ['scenario', 6.803878210580031e-06], ['G', 6.803878210580031e-06], ['(std::vector<std::string>::const_iterator', 6.803878210580031e-06], ['sit', 6.803878210580031e-06], ['ki', 6.803878210580031e-06], ['vi', 6.803878210580031e-06], ['(p->second', 6.803878210580031e-06], ['this->stream_', 6.803878210580031e-06], ['start_size', 6.803878210580031e-06], ['cur_size', 6.803878210580031e-06], ['"types', 6.803878210580031e-06], ['MAXP1', 6.803878210580031e-06], ['EXPORTEDP1', 6.803878210580031e-06], ['exported.', 6.803878210580031e-06], ['no->package();', 6.803878210580031e-06], ['!Gogo::is_hidden_name(no->name()))', 6.803878210580031e-06], ['"%d",', 6.803878210580031e-06], ['"%u",', 6.803878210580031e-06], ['this->type_index(type);', 6.803878210580031e-06], ['"<type', 6.803878210580031e-06], ['%d>",', 6.803878210580031e-06], ['go_assert(named_object', 6.803878210580031e-06], ['code));', 6.803878210580031e-06], ['real_type', 6.803878210580031e-06], ['"import.h"', 6.803878210580031e-06], ['"runtime.h"', 6.803878210580031e-06], ['classification_(classification),', 6.803878210580031e-06], ['TRAVERSE_SKIP_COMPONENTS)', 6.803878210580031e-06], ['children', 6.803878210580031e-06], ['lhs_type,', 6.803878210580031e-06], ['(!are_identical', 6.803878210580031e-06], ['(rhs_type->is_nil_type())', 6.803878210580031e-06], ['Expression::make_cast(lhs_type,', 6.803878210580031e-06], ['(lhs_type->points_to()', 6.803878210580031e-06], ['Expression::make_unsafe_cast(lhs_type,', 6.803878210580031e-06], ['permitted', 6.803878210580031e-06], ['Go,', 6.803878210580031e-06], ['lhs_interface_type', 6.803878210580031e-06], ['lhs_type->interface_type();', 6.803878210580031e-06], ['lhs_is_empty', 6.803878210580031e-06], ['lhs_interface_type->is_empty();', 6.803878210580031e-06], ['RHS_TYPE.', 6.803878210580031e-06], ['first_field;', 6.803878210580031e-06], ['(lhs_is_empty)', 6.803878210580031e-06], ['Expression::make_type_descriptor(rhs_type,', 6.803878210580031e-06], ['rhs_named_type', 6.803878210580031e-06], ['(rhs_named_type', 6.803878210580031e-06], ['is_pointer);', 6.803878210580031e-06], ['INTERFACE_INFO_METHODS,', 6.803878210580031e-06], ['Expression::make_dereference(mtable,', 6.803878210580031e-06], ['*lhs_type,', 6.803878210580031e-06], ['go_assert(rhs->is_variable());', 6.803878210580031e-06], ['Expression::get_interface_type_descriptor(rhs);', 6.803878210580031e-06], ['lhs_type_expr', 6.803878210580031e-06], ['Expression::make_type_descriptor(lhs_type,', 6.803878210580031e-06], ['rhs_type_expr);', 6.803878210580031e-06], ['succeed.', 6.803878210580031e-06], ['val->type();', 6.803878210580031e-06], ['fval;', 6.803878210580031e-06], ['fval);', 6.803878210580031e-06], ['mpfr_clear(fval);', 6.803878210580031e-06], ['cval);', 6.803878210580031e-06], ['val_is_unsigned', 6.803878210580031e-06], ['negative_index', 6.803878210580031e-06], ['index_overflows', 6.803878210580031e-06], ['(val_type_size', 6.803878210580031e-06], ['mpz_init_set_ui(one,', 6.803878210580031e-06], ['1UL);', 6.803878210580031e-06], ['mpz_clear(one);', 6.803878210580031e-06], ['Expression::make_binary(OPERATOR_GT,', 6.803878210580031e-06], ['do_discarding_value()', 6.803878210580031e-06], ['do_is_addressable()', 6.803878210580031e-06], ['do_traverse(Traverse*', 6.803878210580031e-06], ['Parser_expression.', 6.803878210580031e-06], ['onto', 6.803878210580031e-06], ['(!escapes)', 6.803878210580031e-06], ['this->variable_->var_value()->set_non_escaping_address_taken();', 6.803878210580031e-06], ['this->variable_->result_var_value()->set_non_escaping_address_taken();', 6.803878210580031e-06], ['this->variable_->var_value()->set_address_taken();', 6.803878210580031e-06], ['this->variable_->result_var_value()->set_address_taken();', 6.803878210580031e-06], ['(this->variable_->is_variable()', 6.803878210580031e-06], ['this->variable_->var_value()->is_in_heap())', 6.803878210580031e-06], ['Node::make_node(this->variable_)->set_encoding(Node::ESCAPE_HEAP);', 6.803878210580031e-06], ['&this->reference_);', 6.803878210580031e-06], ['this->statement_->set_is_address_taken();', 6.803878210580031e-06], ['this->statement_->get_backend_variable(context);', 6.803878210580031e-06], ['ast_dump_context->dump_temp_variable_name(this->statement_);', 6.803878210580031e-06], ['Take', 6.803878210580031e-06], ['gogo->backend()->assignment_statement(bfn,', 6.803878210580031e-06], ['type_(NULL),', 6.803878210580031e-06], ['bvar_(NULL)', 6.803878210580031e-06], ['bvar_;', 6.803878210580031e-06], ['(this->bvar_', 6.803878210580031e-06], ['called",', 6.803878210580031e-06], ['"must', 6.803878210580031e-06], ['*btype', 6.803878210580031e-06], ['this->function_->name();', 6.803878210580031e-06], ['Func_descriptor_expression::descriptor_type;', 6.803878210580031e-06], ['Func_descriptor_expression::make_func_descriptor_type();', 6.803878210580031e-06], ['this->fn_;', 6.803878210580031e-06], ['syscall', 6.803878210580031e-06], ['is_exported_runtime', 6.803878210580031e-06], ['((no->is_function()', 6.803878210580031e-06], ['binit);', 6.803878210580031e-06], ['context->ostream()', 6.803878210580031e-06], ['"]"', 6.803878210580031e-06], ['Type::make_boolean_type();', 6.803878210580031e-06], ['context->type->is_boolean_type())', 6.803878210580031e-06], ['imp->require_c_string("$");', 6.803878210580031e-06], ["'t')", 6.803878210580031e-06], ['Type::lookup_string_type();', 6.803878210580031e-06], ['int_btype', 6.803878210580031e-06], ['lenval;', 6.803878210580031e-06], ['\'"\';', 6.803878210580031e-06], ["'\\\\'", 6.803878210580031e-06], ['0x20', 6.803878210580031e-06], ['0x7f)', 6.803878210580031e-06], ["'\\\\')", 6.803878210580031e-06], ['static_cast<char>(c);', 6.803878210580031e-06], ["'9'", 6.803878210580031e-06], ['indexing,', 6.803878210580031e-06], ['bound-checking,', 6.803878210580031e-06], ['this->string_info_,', 6.803878210580031e-06], ['(this->string_info_)', 6.803878210580031e-06], ['STRING_INFO_DATA:', 6.803878210580031e-06], ['Type::make_pointer_type(byte_type);', 6.803878210580031e-06], ['STRING_INFO_LENGTH:', 6.803878210580031e-06], ['"length"', 6.803878210580031e-06], ['Type::make_abstract_character_type();', 6.803878210580031e-06], ['context->type->is_numeric_type())', 6.803878210580031e-06], ['(!nc.set_type(type,', 6.803878210580031e-06], ['this->type_->float_type()', 6.803878210580031e-06], ['this->type_->complex_type()', 6.803878210580031e-06], ['int_type->integer_type()->bits())', 6.803878210580031e-06], ['(!saw_errors())', 6.803878210580031e-06], ['Integer_expression::export_integer(efb,', 6.803878210580031e-06], ['(!num.empty()', 6.803878210580031e-06], ['num[num.length()', 6.803878210580031e-06], ['mpfr_set_ui(real,', 6.803878210580031e-06], ['num.substr(0,', 6.803878210580031e-06], ['imag;', 6.803878210580031e-06], ['real,', 6.803878210580031e-06], ['imag,', 6.803878210580031e-06], ['mpfr_clear(real);', 6.803878210580031e-06], ['mpfr_clear(imag);', 6.803878210580031e-06], ['(is_character_constant)', 6.803878210580031e-06], ['num.c_str(),', 6.803878210580031e-06], ["'\\'';", 6.803878210580031e-06], ['Integer_expression(val,', 6.803878210580031e-06], ['long.', 6.803878210580031e-06], ['mpz_init_set_ui(*zval,', 6.803878210580031e-06], ['ul);', 6.803878210580031e-06], ['mpfr_t*', 6.803878210580031e-06], ['Type::make_abstract_float_type();', 6.803878210580031e-06], ['resolved_type;', 6.803878210580031e-06], ['this->type_->integer_type()', 6.803878210580031e-06], ['reduced.', 6.803878210580031e-06], ['float64', 6.803878210580031e-06], ['exp->write_c_string(buf);', 6.803878210580031e-06], ['Float_expression::export_float(efb,', 6.803878210580031e-06], ['Complex', 6.803878210580031e-06], ['mpc_t*', 6.803878210580031e-06], ['REAL/IMAG', 6.803878210580031e-06], ['Type::make_abstract_complex_type();', 6.803878210580031e-06], ['Float_expression::export_float(exp,', 6.803878210580031e-06], ['mpc_realref(val));', 6.803878210580031e-06], ['mpc_imagref(val));', 6.803878210580031e-06], ['Complex_expression::export_complex(efb,', 6.803878210580031e-06], ['Find_named_object', 6.803878210580031e-06], ['found_(false)', 6.803878210580031e-06], ['Const_expression', 6.803878210580031e-06], ['iota', 6.803878210580031e-06], ['e->numeric_constant_value(nc);', 6.803878210580031e-06], ['this->constant_->const_value()->type();', 6.803878210580031e-06], ['nc', 6.803878210580031e-06], ['itself");', 6.803878210580031e-06], ['cetype', 6.803878210580031e-06], ['(ctype', 6.803878210580031e-06], ['this->type_->is_error())', 6.803878210580031e-06], ['this->report_error(_("constant', 6.803878210580031e-06], ['itself"));', 6.803878210580031e-06], ['!this->type_->is_error())', 6.803878210580031e-06], ['e->get_backend(context);', 6.803878210580031e-06], ['Iota_expression', 6.803878210580031e-06], ['(type->is_numeric_type())', 6.803878210580031e-06], ['nc.expression(location);', 6.803878210580031e-06], ['Unicode', 6.803878210580031e-06], ['ul;', 6.803878210580031e-06], ['nc.to_unsigned_long(&ul)', 6.803878210580031e-06], ['type->array_type()->element_type()->forwarded();', 6.803878210580031e-06], ['(element_type->integer_type()', 6.803878210580031e-06], ['s.begin();', 6.803878210580031e-06], ['s.end();', 6.803878210580031e-06], ['char>(*p);', 6.803878210580031e-06], ['vals->push_back(Expression::make_integer_ul(c,', 6.803878210580031e-06], ['s.data();', 6.803878210580031e-06], ['*pend', 6.803878210580031e-06], ['s.length();', 6.803878210580031e-06], ['(adv', 6.803878210580031e-06], ['go_warning_at(this->location(),', 6.803878210580031e-06], ['adv;', 6.803878210580031e-06], ['!type->is_string_type())', 6.803878210580031e-06], ['(!this->expr_->is_static_initializer())', 6.803878210580031e-06], ['(Type::are_identical(type,', 6.803878210580031e-06], ['((type->is_numeric_type()', 6.803878210580031e-06], ['(expr_type->is_numeric_type()', 6.803878210580031e-06], ['expr_type->is_boolean_type()', 6.803878210580031e-06], ['expr_type->points_to()', 6.803878210580031e-06], ['(type->is_error()', 6.803878210580031e-06], ['(this->may_convert_function_types_', 6.803878210580031e-06], ['expr_type->function_type()', 6.803878210580031e-06], ['(Type::are_convertible(type,', 6.803878210580031e-06], ['this->expr_->copy(),', 6.803878210580031e-06], ['expr_type->integer_type()', 6.803878210580031e-06], ['this->expr_);', 6.803878210580031e-06], ['expr_type->is_slice_type())', 6.803878210580031e-06], ['go_assert(e->integer_type()', 6.803878210580031e-06], ['go_assert(this->expr_->is_variable());', 6.803878210580031e-06], ['(e->integer_type()->is_byte())', 6.803878210580031e-06], ['go_assert(e->integer_type()->is_rune());', 6.803878210580031e-06], ['(type->is_slice_type()', 6.803878210580031e-06], ['Expression::make_unsafe_cast(type,', 6.803878210580031e-06], ['this->expr_->export_expression(efb);', 6.803878210580031e-06], ['(type->is_error_type()', 6.803878210580031e-06], ['this->expr_->is_error_expression()', 6.803878210580031e-06], ['(t->array_type()', 6.803878210580031e-06], ['(t->named_type()', 6.803878210580031e-06], ['et,', 6.803878210580031e-06], ['(t->map_type()', 6.803878210580031e-06], ['(t->points_to()', 6.803878210580031e-06], ['go_assert(et->points_to()', 6.803878210580031e-06], ['et->channel_type()', 6.803878210580031e-06], ['et->map_type()', 6.803878210580031e-06], ['et->function_type()', 6.803878210580031e-06], ['et->integer_type()', 6.803878210580031e-06], ['et->is_nil_type());', 6.803878210580031e-06], ['(t->integer_type()', 6.803878210580031e-06], ['barriers.', 6.803878210580031e-06], ['Node::make_node(this);', 6.803878210580031e-06], ['this->op_;', 6.803878210580031e-06], ['*&x', 6.803878210580031e-06], ['x.', 6.803878210580031e-06], ['(e->classification()', 6.803878210580031e-06], ['%<&%>");', 6.803878210580031e-06], ['unsafe.Pointer', 6.803878210580031e-06], ['expr->type()->points_to()', 6.803878210580031e-06], ['pointer"));', 6.803878210580031e-06], ['&nc,', 6.803878210580031e-06], ['&issued_error))', 6.803878210580031e-06], ['(issued_error)', 6.803878210580031e-06], ['(this->requires_nil_check(gogo))', 6.803878210580031e-06], ['NIL_CHECK_ERROR_ENCOUNTERED:', 6.803878210580031e-06], ['NIL_CHECK_NOT_NEEDED:', 6.803878210580031e-06], ['NIL_CHECK_NEEDED:', 6.803878210580031e-06], ['NIL_CHECK_DEFAULT:', 6.803878210580031e-06], ['no->var_value()->is_global();', 6.803878210580031e-06], ['(this->issue_nil_check_', 6.803878210580031e-06], ['NIL_CHECK_NEEDED)', 6.803878210580031e-06], ['NIL_CHECK_NEEDED;', 6.803878210580031e-06], ['NIL_CHECK_NOT_NEEDED)', 6.803878210580031e-06], ['NIL_CHECK_NOT_NEEDED;', 6.803878210580031e-06], ['this->expr_->type()->points_to();', 6.803878210580031e-06], ['type_size', 6.803878210580031e-06], ['this->issue_nil_check_', 6.803878210580031e-06], ['NC.', 6.803878210580031e-06], ['mpfr_init(val);', 6.803878210580031e-06], ['(unc->is_rune())', 6.803878210580031e-06], ['obits', 6.803878210580031e-06], ['(!utype->integer_type()->is_unsigned()', 6.803878210580031e-06], ['adj;', 6.803878210580031e-06], ['mpz_init_set_ui(adj,', 6.803878210580031e-06], ['mpz_mul_2exp(adj,', 6.803878210580031e-06], ['adj,', 6.803878210580031e-06], ['obits);', 6.803878210580031e-06], ['adj);', 6.803878210580031e-06], ['mpz_clear(adj);', 6.803878210580031e-06], ['sizeof(HOST_WIDE_INT),', 6.803878210580031e-06], ['ocount', 6.803878210580031e-06], ['mpz_sub(val,', 6.803878210580031e-06], ['nc->set_rune(NULL,', 6.803878210580031e-06], ['nc->set_int(NULL,', 6.803878210580031e-06], ['&issued_error);', 6.803878210580031e-06], ['subcontext(subtype,', 6.803878210580031e-06], ['(!this->create_temp_)', 6.803878210580031e-06], ['set-and-use-temporary', 6.803878210580031e-06], ['sut', 6.803878210580031e-06], ['this->expr_->set_and_use_temporary_expression();', 6.803878210580031e-06], ['(sut', 6.803878210580031e-06], ['sut->temporary();', 6.803878210580031e-06], ['temp->get_backend_variable(context);', 6.803878210580031e-06], ['gogo->backend()->unary_expression(this->op_,', 6.803878210580031e-06], ['expects.', 6.803878210580031e-06], ['copy_to_heap,', 6.803878210580031e-06], ['bexpr);', 6.803878210580031e-06], ['gogo->backend()->var_expression(implicit,', 6.803878210580031e-06], ['known_valid', 6.803878210580031e-06], ['pbtype', 6.803878210580031e-06], ['ubexpr', 6.803878210580031e-06], ['compare,', 6.803878210580031e-06], ['OPERATOR_PLUS;', 6.803878210580031e-06], ['OPERATOR_XOR;', 6.803878210580031e-06], ['OPERATOR_AND;', 6.803878210580031e-06], ['OPERATOR_MULT;', 6.803878210580031e-06], ['ast_dump_context->dump_operator(this->op_);', 6.803878210580031e-06], ['(docheck', 6.803878210580031e-06], ['Expression::traverse(&this->left_,', 6.803878210580031e-06], ['(ru', 6.803878210580031e-06], ['ru->op()', 6.803878210580031e-06], ['(!right_type->is_abstract()', 6.803878210580031e-06], ['(left_type->float_type()', 6.803878210580031e-06], ['result)', 6.803878210580031e-06], ['right_nc->type();', 6.803878210580031e-06], ['(!Binary_expression::operation_type(op,', 6.803878210580031e-06], ['coercing', 6.803878210580031e-06], ["operand's", 6.803878210580031e-06], ['(!left_nc->set_type(type,', 6.803878210580031e-06], ['!right_nc->set_type(type,', 6.803878210580031e-06], ['Binary_expression::cmp_to_bool(op,', 6.803878210580031e-06], ['(!left_nc->to_int(&left_val))', 6.803878210580031e-06], ['(!right_nc->to_int(&right_val))', 6.803878210580031e-06], ['mpz_clear(right_val);', 6.803878210580031e-06], ['(!left_nc->to_float(&left_val))', 6.803878210580031e-06], ['(!right_nc->to_float(&right_val))', 6.803878210580031e-06], ['(!type->is_abstract()', 6.803878210580031e-06], ['type->float_type()->bits();', 6.803878210580031e-06], ['mpfr_clear(right_val);', 6.803878210580031e-06], ['(!left_nc->to_complex(&left_val))', 6.803878210580031e-06], ['(!right_nc->to_complex(&right_val))', 6.803878210580031e-06], ['mpc_clear(right_val);', 6.803878210580031e-06], ['Issue', 6.803878210580031e-06], ['LOCATION', 6.803878210580031e-06], ['OPERATOR_RSHIFT;', 6.803878210580031e-06], ['(mpz_sgn(right_val)', 6.803878210580031e-06], ['mpz_get_ui(right_val);', 6.803878210580031e-06], ['(mpz_cmp_ui(right_val,', 6.803878210580031e-06], ['"shift', 6.803878210580031e-06], ['mpz_and(val,', 6.803878210580031e-06], ['OPERATOR_RSHIFT', 6.803878210580031e-06], ['mpfr_set_ui(val,', 6.803878210580031e-06], ['mpc_set_ui(val,', 6.803878210580031e-06], ['this->right_;', 6.803878210580031e-06], ['is_comparison', 6.803878210580031e-06], ['OPERATOR_GE);', 6.803878210580031e-06], ['Numeric', 6.803878210580031e-06], ['left_nc;', 6.803878210580031e-06], ['right_nc;', 6.803878210580031e-06], ['OPERATOR_PLUS)', 6.803878210580031e-06], ['right->type()->interface_type()', 6.803878210580031e-06], ['String_concat_expression*', 6.803878210580031e-06], ['st2', 6.803878210580031e-06], ['this->lower_compare_to_memcmp(gogo,', 6.803878210580031e-06], ['left_temp', 6.803878210580031e-06], ['right_temp', 6.803878210580031e-06], ['Expression::make_field_reference(left,', 6.803878210580031e-06], ['at2', 6.803878210580031e-06], ['hash_fn;', 6.803878210580031e-06], ['equal_fn;', 6.803878210580031e-06], ['args->push_back(this->operand_address(inserter,', 6.803878210580031e-06], ['ift', 6.803878210580031e-06], ['left_type->points_to()', 6.803878210580031e-06], ['this->left_', 6.803878210580031e-06], ['this->operand_address(inserter,', 6.803878210580031e-06], ['this->right_);', 6.803878210580031e-06], ['OPERATOR_RSHIFT);', 6.803878210580031e-06], ['OPERATOR_ANDAND)', 6.803878210580031e-06], ['sides', 6.803878210580031e-06], ['numeric,', 6.803878210580031e-06], ['subcontext(*context);', 6.803878210580031e-06], ['subcontext.may_be_abstract', 6.803878210580031e-06], ['(tleft->float_type()', 6.803878210580031e-06], ['(tleft->complex_type()', 6.803878210580031e-06], ['non-integer', 6.803878210580031e-06], ['Type::lookup_integer_type("uint");', 6.803878210580031e-06], ['floating,', 6.803878210580031e-06], ['(left_type->is_nil_type()', 6.803878210580031e-06], ['expression"));', 6.803878210580031e-06], ['(!Binary_expression::check_operator_type(this->op_,', 6.803878210580031e-06], ['(!nc.to_int(&val))', 6.803878210580031e-06], ['(mpz_sgn(val)', 6.803878210580031e-06], ['do_lower.', 6.803878210580031e-06], ['complex_code', 6.803878210580031e-06], ['gogo->backend()->integer_constant_expression(left_btype,', 6.803878210580031e-06], ['zero_expr;', 6.803878210580031e-06], ['neg_one_expr', 6.803878210580031e-06], ['neg_one);', 6.803878210580031e-06], ['neg_one_expr,', 6.803878210580031e-06], ['number,', 6.803878210580031e-06], ['OPERATOR_DIV)', 6.803878210580031e-06], ['&^', 6.803878210580031e-06], ['ast_dump_context->dump_expression(this->left_);', 6.803878210580031e-06], ['left->type();', 6.803878210580031e-06], ['zexpr', 6.803878210580031e-06], ['go_assert(op', 6.803878210580031e-06], ['OPERATOR_NOTEQ);', 6.803878210580031e-06], ['(*pe)->type();', 6.803878210580031e-06], ['(this->exprs_->size())', 6.803878210580031e-06], ['Type::make_array_type(type,', 6.803878210580031e-06], ['this->exprs_,', 6.803878210580031e-06], ['nil_arg,', 6.803878210580031e-06], ['sce->set_storage_does_not_escape();', 6.803878210580031e-06], ['this->expr_->determine_type_no_context();', 6.803878210580031e-06], ['pulls', 6.803878210580031e-06], ['demand', 6.803878210580031e-06], ['(orig_fntype', 6.803878210580031e-06], ['wrong--it', 6.803878210580031e-06], ['sfl->push_back(Struct_field(Typed_identifier("fn",', 6.803878210580031e-06], ['sfl->push_back(Struct_field(Typed_identifier("val",', 6.803878210580031e-06], ['closure_type', 6.803878210580031e-06], ['new_fntype', 6.803878210580031e-06], ['orig_fntype->copy_with_names();', 6.803878210580031e-06], ['thunk_name', 6.803878210580031e-06], ['gogo->thunk_name();', 6.803878210580031e-06], ['new_no', 6.803878210580031e-06], ['gogo->start_function(thunk_name,', 6.803878210580031e-06], ['cvar', 6.803878210580031e-06], ['Variable(closure_type,', 6.803878210580031e-06], ['cvar->set_is_used();', 6.803878210580031e-06], ['cvar->set_is_closure();', 6.803878210580031e-06], ['cp', 6.803878210580031e-06], ['Named_object::make_variable("$closure"', 6.803878210580031e-06], ['thunk_name,', 6.803878210580031e-06], ['cvar);', 6.803878210580031e-06], ['new_no->func_value()->set_closure_var(cp);', 6.803878210580031e-06], ['gogo->start_block(loc);', 6.803878210580031e-06], ['Field', 6.803878210580031e-06], ['Expression::make_var_reference(cp,', 6.803878210580031e-06], ['Expression::make_field_reference(arg,', 6.803878210580031e-06], ['orig_params->empty())', 6.803878210580031e-06], ['new_fntype->parameters();', 6.803878210580031e-06], ['orig_fntype->is_varargs(),', 6.803878210580031e-06], ['gogo->finish_block(loc);', 6.803878210580031e-06], ['gogo->flatten_block(new_no,', 6.803878210580031e-06], ['gogo->finish_function(loc);', 6.803878210580031e-06], ['*REF', 6.803878210580031e-06], ['(thunk->is_erroneous())', 6.803878210580031e-06], ['fields->push_back(Struct_field(Typed_identifier("fn",', 6.803878210580031e-06], ['thunk->func_value()->type(),', 6.803878210580031e-06], ['fields->push_back(Struct_field(Typed_identifier("val",', 6.803878210580031e-06], ['Type::make_struct_type(fields,', 6.803878210580031e-06], ['vals->push_back(Expression::make_func_code_reference(thunk,', 6.803878210580031e-06], ['vals->push_back(val);', 6.803878210580031e-06], ['Expression::make_struct_composite_literal(st,', 6.803878210580031e-06], ['Expression::make_heap_expression(ret,', 6.803878210580031e-06], ['(nil_check', 6.803878210580031e-06], ['Builtin_call_expression.', 6.803878210580031e-06], ['Call_expression(fn,', 6.803878210580031e-06], ['seen_(false),', 6.803878210580031e-06], ['BUILTIN_PRINTLN;', 6.803878210580031e-06], ['BUILTIN_RECOVER;', 6.803878210580031e-06], ['BUILTIN_OFFSETOF)', 6.803878210580031e-06], ['"of', 6.803878210580031e-06], ['arg->field_reference_expression();', 6.803878210580031e-06], ['(farg', 6.803878210580031e-06], ['(this->numeric_constant_value(&nc))', 6.803878210580031e-06], ['Type::make_empty_interface_type(loc);', 6.803878210580031e-06], ['map"));', 6.803878210580031e-06], ['args->front(),', 6.803878210580031e-06], ['args->back(),', 6.803878210580031e-06], ['Expression::make_type_descriptor(mt,', 6.803878210580031e-06], ['Passing', 6.803878210580031e-06], ['Expression::make_temporary_reference(atemp,', 6.803878210580031e-06], ['inserter->insert(s);', 6.803878210580031e-06], ['go_error_at(first_arg->location(),', 6.803878210580031e-06], ['is_slice', 6.803878210580031e-06], ['is_map', 6.803878210580031e-06], ['is_chan', 6.803878210580031e-06], ['(type->channel_type()', 6.803878210580031e-06], ['len_small', 6.803878210580031e-06], ['(parg', 6.803878210580031e-06], ['(is_slice)', 6.803878210580031e-06], ['allocating', 6.803878210580031e-06], ['slice"));', 6.803878210580031e-06], ['make");', 6.803878210580031e-06], ['cap_small', 6.803878210580031e-06], ['nclen;', 6.803878210580031e-06], ['vlen;', 6.803878210580031e-06], ['(len_arg->numeric_constant_value(&nclen)', 6.803878210580031e-06], ['nclen.to_unsigned_long(&vlen)', 6.803878210580031e-06], ['vlen', 6.803878210580031e-06], ['len_temp', 6.803878210580031e-06], ['Expression::make_temporary_reference(len_temp,', 6.803878210580031e-06], ['Expression::make_type_descriptor(et,', 6.803878210580031e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(et),', 6.803878210580031e-06], ['(!len_small)', 6.803878210580031e-06], ['Expression::make_nil(loc));', 6.803878210580031e-06], ['enclosing)', 6.803878210580031e-06], ['slice_type', 6.803878210580031e-06], ['slice_type->array_type()->element_type();', 6.803878210580031e-06], ['s2...)', 6.803878210580031e-06], ['a3,', 6.803878210580031e-06], ['lenref', 6.803878210580031e-06], ['Expression::make_func_reference(lenfn,', 6.803878210580031e-06], ['call_args->push_back(Expression::make_temporary_reference(s1tmp,', 6.803878210580031e-06], ['Expression::make_call(lenref,', 6.803878210580031e-06], ['s2', 6.803878210580031e-06], ['(++pa;', 6.803878210580031e-06], ['&sum);', 6.803878210580031e-06], ['&cap);', 6.803878210580031e-06], ['Expression::make_cast(uint_type,', 6.803878210580031e-06], ['Expression::make_temporary_reference(c1tmp,', 6.803878210580031e-06], ['Expression::make_array_index(ref,', 6.803878210580031e-06], ['&rhs);', 6.803878210580031e-06], ['Statement::make_assignment(ref,', 6.803878210580031e-06], ['&cond);', 6.803878210580031e-06], ['Statement::make_if_statement(cond,', 6.803878210580031e-06], ['inserter->insert(Statement::make_statement(call,', 6.803878210580031e-06], ['&lhs);', 6.803878210580031e-06], ['Numeric_constant::NC_UL_VALID:', 6.803878210580031e-06], ['Numeric_constant::NC_UL_NOTINT:', 6.803878210580031e-06], ['Numeric_constant::NC_UL_NEGATIVE:', 6.803878210580031e-06], ['Numeric_constant::NC_UL_BIG:', 6.803878210580031e-06], ['mpz_sizeinbase(val,', 6.803878210580031e-06], ['intbits', 6.803878210580031e-06], ['Type::lookup_integer_type("int")->integer_type()->bits();', 6.803878210580031e-06], ['float32', 6.803878210580031e-06], ['arg_type)', 6.803878210580031e-06], ['arg_type->named_type();', 6.803878210580031e-06], ['(nt->real_type()->named_type()', 6.803878210580031e-06], ['nt->real_type()->named_type();', 6.803878210580031e-06], ['Find_call_expression', 6.803878210580031e-06], ['(expr->call_expression()', 6.803878210580031e-06], ['Expression::traverse(&expr,', 6.803878210580031e-06], ['arg_type->array_type()->length()', 6.803878210580031e-06], ['arg_type->is_string_type())', 6.803878210580031e-06], ['arg->is_constant();', 6.803878210580031e-06], ['BUILTIN_CAP)', 6.803878210580031e-06], ['BUILTIN_ALIGNOF)', 6.803878210580031e-06], ['(arg->field_reference_expression()', 6.803878210580031e-06], ['nc->set_int(Type::lookup_integer_type("uintptr"),', 6.803878210580031e-06], ['zval);', 6.803878210580031e-06], ['total_offset', 6.803878210580031e-06], ['BUILTIN_REAL)', 6.803878210580031e-06], ['nc->set_float(type,', 6.803878210580031e-06], ['mpfr_clear(r);', 6.803878210580031e-06], ['discarding', 6.803878210580031e-06], ['purely', 6.803878210580031e-06], ['t->make_non_abstract_type();', 6.803878210580031e-06], ['(!this->determining_types())', 6.803878210580031e-06], ['complex.', 6.803878210580031e-06], ['(*pa)->type();', 6.803878210580031e-06], ['Type::lookup_integer_type("uint64");', 6.803878210580031e-06], ['(args->front()->is_error_expression()', 6.803878210580031e-06], ['channel,', 6.803878210580031e-06], ['(!arg_type->is_error()', 6.803878210580031e-06], ['arg_type->array_type()', 6.803878210580031e-06], ['type->channel_type()', 6.803878210580031e-06], ['type->map_type()', 6.803878210580031e-06], ['close', 6.803878210580031e-06], ['arg1_type', 6.803878210580031e-06], ['arg2_type', 6.803878210580031e-06], ['(arg2_type->is_string_type())', 6.803878210580031e-06], ['string"));', 6.803878210580031e-06], ['nil");', 6.803878210580031e-06], ['slice");', 6.803878210580031e-06], ['Type::make_array_type(element_type,', 6.803878210580031e-06], ['args->back()->type(),', 6.803878210580031e-06], ['go_error_at((*pa)->location(),', 6.803878210580031e-06], ['this->report_error(_("complex', 6.803878210580031e-06], ['types"));', 6.803878210580031e-06], ['bce->set_is_deferred();', 6.803878210580031e-06], ['bce->set_is_concurrent();', 6.803878210580031e-06], ['bce;', 6.803878210580031e-06], ['(this->is_erroneous_call())', 6.803878210580031e-06], ['STRING_INFO_LENGTH,', 6.803878210580031e-06], ['pint_type', 6.803878210580031e-06], ['Type::make_pointer_type(int_type);', 6.803878210580031e-06], ['Expression::make_unsafe_cast(pint_type,', 6.803878210580031e-06], ['Expression::make_cast(pint_type,', 6.803878210580031e-06], ['indir', 6.803878210580031e-06], ['Expression::make_conditional(cmp,', 6.803878210580031e-06], ['indir,', 6.803878210580031e-06], ['Expression::make_unsafe_cast(uintptr_type,', 6.803878210580031e-06], ['parg,', 6.803878210580031e-06], ['Expression::make_cast(itype,', 6.803878210580031e-06], ['td,', 6.803878210580031e-06], ['call->get_backend(context);', 6.803878210580031e-06], ['args->front()->get_backend(context);', 6.803878210580031e-06], ['tail', 6.803878210580031e-06], ['reshuffling', 6.803878210580031e-06], ['chance', 6.803878210580031e-06], ['!this->type_->is_error_type())', 6.803878210580031e-06], ['(!this->fn_->type()->is_error())', 6.803878210580031e-06], ['this->args_->front()->call_expression()', 6.803878210580031e-06], ['(this->is_varargs_)', 6.803878210580031e-06], ['ellipsis', 6.803878210580031e-06], ['rc;', 6.803878210580031e-06], ['Call_result', 6.803878210580031e-06], ['this->fn_,', 6.803878210580031e-06], ['this->is_varargs_,', 6.803878210580031e-06], ['(this->is_deferred_)', 6.803878210580031e-06], ['(this->is_concurrent_)', 6.803878210580031e-06], ['this->call_temp_', 6.803878210580031e-06], ['varargs_type,', 6.803878210580031e-06], ['(bme', 6.803878210580031e-06], ['bme->function();', 6.803878210580031e-06], ['first_arg,', 6.803878210580031e-06], ['mess', 6.803878210580031e-06], ['wrong.', 6.803878210580031e-06], ['fatype', 6.803878210580031e-06], ['Call_result_expressions.', 6.803878210580031e-06], ['new_args;', 6.803878210580031e-06], ['fe->named_object()->is_function_declaration()', 6.803878210580031e-06], ['((this->args_', 6.803878210580031e-06], ['builtin_return_address;', 6.803878210580031e-06], ['(this->varargs_are_lowered_)', 6.803878210580031e-06], ['go_assert(param_count', 6.803878210580031e-06], ['this->args_->size();', 6.803878210580031e-06], ['this->args_;', 6.803878210580031e-06], ['old_args->end();', 6.803878210580031e-06], ['new_args->push_back(*pa);', 6.803878210580031e-06], ['_("invalid', 6.803878210580031e-06], ['(*pa)->location();', 6.803878210580031e-06], ['__builtin_dwarf_cfa.', 6.803878210580031e-06], ['(!is_interface_method', 6.803878210580031e-06], ['args->push_back(*pa);', 6.803878210580031e-06], ['++pa;', 6.803878210580031e-06], ['++pp)', 6.803878210580031e-06], ['pp->type(),', 6.803878210580031e-06], ['this->expected_result_count_', 6.803878210580031e-06], ['fntype->receiver()->type();', 6.803878210580031e-06], ['argument_type,', 6.803878210580031e-06], ['go_error_at(argument_location,', 6.803878210580031e-06], ['(is_method)', 6.803878210580031e-06], ['receivers', 6.803878210580031e-06], ['this->args_->end())', 6.803878210580031e-06], ['this->call_;', 6.803878210580031e-06], ['interface_method', 6.803878210580031e-06], ['(has_closure)', 6.803878210580031e-06], ['fn_args.resize(1);', 6.803878210580031e-06], ['fn_args[0]', 6.803878210580031e-06], ['fn_args[i]', 6.803878210580031e-06], ['++pe,', 6.803878210580031e-06], ['params->end());', 6.803878210580031e-06], ['Type::make_pointer_type(', 6.803878210580031e-06], ['gogo->backend()->assignment_statement(bfunction,', 6.803878210580031e-06], ['bref,', 6.803878210580031e-06], ['this->call_', 6.803878210580031e-06], ['this->call_->call_expression();', 6.803878210580031e-06], ['this->report_error(_("number', 6.803878210580031e-06], ['"number', 6.803878210580031e-06], ['values"));', 6.803878210580031e-06], ['(pr', 6.803878210580031e-06], ['results->end())', 6.803878210580031e-06], ['++pr;', 6.803878210580031e-06], ['Expression::traverse(&this->cap_,', 6.803878210580031e-06], ['this->cap_;', 6.803878210580031e-06], ['(left->is_type_expression())', 6.803878210580031e-06], ['"attempt', 6.803878210580031e-06], ['3-index', 6.803878210580031e-06], ['("attempt', 6.803878210580031e-06], ['"array,', 6.803878210580031e-06], ['this->cap_);', 6.803878210580031e-06], ['(Expression::traverse(&this->start_,', 6.803878210580031e-06], ['(Expression::traverse(&this->end_,', 6.803878210580031e-06], ['index_context(Type::lookup_integer_type("int"),', 6.803878210580031e-06], ['(this->start_->is_constant())', 6.803878210580031e-06], ['this->start_->determine_type(&index_context);', 6.803878210580031e-06], ['this->start_->determine_type_no_context();', 6.803878210580031e-06], ['(this->end_->is_constant())', 6.803878210580031e-06], ['this->end_->determine_type(&index_context);', 6.803878210580031e-06], ['this->end_->determine_type_no_context();', 6.803878210580031e-06], ['!this->start_->type()->is_error()', 6.803878210580031e-06], ['(!this->start_->numeric_constant_value(&nc)', 6.803878210580031e-06], ['this->report_error(_("index', 6.803878210580031e-06], ['this->end_->type()->integer_type()', 6.803878210580031e-06], ['!this->end_->type()->is_error()', 6.803878210580031e-06], ['!this->end_->is_error_expression()', 6.803878210580031e-06], ['(!this->end_->numeric_constant_value(&nc)', 6.803878210580031e-06], ['go_assert(this->array_->type()->is_error());', 6.803878210580031e-06], ['(this->start_->numeric_constant_value(&inc)', 6.803878210580031e-06], ['inc.to_int(&ival))', 6.803878210580031e-06], ['go_error_at(this->start_->location(),', 6.803878210580031e-06], ['!this->end_->is_nil_expression())', 6.803878210580031e-06], ['eval_valid', 6.803878210580031e-06], ['(this->end_->numeric_constant_value(&enc)', 6.803878210580031e-06], ['enc.to_int(&eval))', 6.803878210580031e-06], ['(mpz_sgn(eval)', 6.803878210580031e-06], ['mpz_cmp(eval,', 6.803878210580031e-06], ['go_error_at(this->end_->location(),', 6.803878210580031e-06], ['eval)', 6.803878210580031e-06], ['this->report_error(_("inverted', 6.803878210580031e-06], ['cval)', 6.803878210580031e-06], ['index:', 6.803878210580031e-06], ['mpz_clear(eval);', 6.803878210580031e-06], ['(ival_valid)', 6.803878210580031e-06], ['value"));', 6.803878210580031e-06], ['start->is_error_expression()', 6.803878210580031e-06], ['start->type()->is_error_type()', 6.803878210580031e-06], ['(end->is_error_expression()', 6.803878210580031e-06], ['this->start_', 6.803878210580031e-06], ['this->end_', 6.803878210580031e-06], ['"uintptr"', 6.803878210580031e-06], ['this->array_);', 6.803878210580031e-06], ['capacity,', 6.803878210580031e-06], ['this->cap_->get_backend(context);', 6.803878210580031e-06], ['!Type::are_convertible(int_type,', 6.803878210580031e-06], ['this->start_->type(),', 6.803878210580031e-06], ['gogo->runtime_error(code,', 6.803878210580031e-06], ['Expression::check_bounds(this->start_,', 6.803878210580031e-06], ['start_too_large', 6.803878210580031e-06], ['start_too_large,', 6.803878210580031e-06], ['int_btype,', 6.803878210580031e-06], ['valptr', 6.803878210580031e-06], ['array_type->get_value_pointer(gogo,', 6.803878210580031e-06], ['this->is_lvalue_);', 6.803878210580031e-06], ['valptr->get_backend(context);', 6.803878210580031e-06], ['gogo->backend()->pointer_offset_expression(ptr,', 6.803878210580031e-06], ['bounds_bcheck', 6.803878210580031e-06], ['bounds_bcheck,', 6.803878210580031e-06], ['gogo->backend()->binary_expression(OPERATOR_GT,', 6.803878210580031e-06], ['(this->end_->is_nil_expression())', 6.803878210580031e-06], ['Expression::check_bounds(this->end_,', 6.803878210580031e-06], ['gogo->backend()->binary_expression(OPERATOR_MINUS,', 6.803878210580031e-06], ['this->string_;', 6.803878210580031e-06], ['this->string_,', 6.803878210580031e-06], ['(sval_valid', 6.803878210580031e-06], ['mpz_cmp_ui(ival,', 6.803878210580031e-06], ['"string', 6.803878210580031e-06], ['string_arg', 6.803878210580031e-06], ['Expression::make_string_info(this->string_,', 6.803878210580031e-06], ['ubtype', 6.803878210580031e-06], ['Type::lookup_integer_type("uint8")->get_backend(gogo);', 6.803878210580031e-06], ['index_error', 6.803878210580031e-06], ['bad_index->get_backend(context);', 6.803878210580031e-06], ['index_error,', 6.803878210580031e-06], ['this->index_->type(),', 6.803878210580031e-06], ['(this->value_pointer_', 6.803878210580031e-06], ['this->value_pointer_', 6.803878210580031e-06], ['map,', 6.803878210580031e-06], ['map_index', 6.803878210580031e-06], ['map_ref,', 6.803878210580031e-06], ['nt->named_object()->package()', 6.803878210580031e-06], ["s.push_back('.');", 6.803878210580031e-06], ['array_type->set_is_array_incomparable();', 6.803878210580031e-06], ['go_assert(struct_type', 6.803878210580031e-06], ['Gogo::unpack_hidden_name(this->name_);', 6.803878210580031e-06], ['&index);', 6.803878210580031e-06], ['(!this->expr_->is_variable())', 6.803878210580031e-06], ['(interface_type', 6.803878210580031e-06], ['interface_type->find_method(this->name_);', 6.803878210580031e-06], ['method->type();', 6.803878210580031e-06], ['interface"));', 6.803878210580031e-06], ['this->name_;', 6.803878210580031e-06], ['Type::bind_field_or_method(gogo,', 6.803878210580031e-06], ['is_ambiguous;', 6.803878210580031e-06], ['%<%s%s%>', 6.803878210580031e-06], ['"*"', 6.803878210580031e-06], ['nt->message_name().c_str(),', 6.803878210580031e-06], ['Gogo::message_name(name).c_str());', 6.803878210580031e-06], ['method_type', 6.803878210580031e-06], ['receiver_name', 6.803878210580031e-06], ['vno', 6.803878210580031e-06], ['go_assert(vno', 6.803878210580031e-06], ['bm;', 6.803878210580031e-06], ['bm', 6.803878210580031e-06], ['nt,', 6.803878210580031e-06], ['gogo->start_block(location);', 6.803878210580031e-06], ['gogo->finish_block(location);', 6.803878210580031e-06], ['gogo->lower_block(no,', 6.803878210580031e-06], ['Type::make_pointer_type(this->type_);', 6.803878210580031e-06], ['alloc', 6.803878210580031e-06], ['this->type_->backend_type_size(gogo,', 6.803878210580031e-06], ['(std::vector<unsigned', 6.803878210580031e-06], ['(this->traverse_vals(traverse)', 6.803878210580031e-06], ['!(*pv)->is_constant()', 6.803878210580031e-06], ['(!(*pv)->is_composite_literal()', 6.803878210580031e-06], ['(*pv)->is_nonconstant_composite_literal()))', 6.803878210580031e-06], ['(pf->type()->interface_type()', 6.803878210580031e-06], ['!(*pv)->is_static_initializer())', 6.803878210580031e-06], ['(*pv)->determine_type(&subcontext);', 6.803878210580031e-06], ['knockon', 6.803878210580031e-06], ['this->type_->struct_type();', 6.803878210580031e-06], ['construction",', 6.803878210580031e-06], ['("incompatible', 6.803878210580031e-06], ['(%s)"),', 6.803878210580031e-06], ['this->is_static_initializer())', 6.803878210580031e-06], ['((*pv)->is_error_expression()', 6.803878210580031e-06], ['(*pv)->type()->is_error_type())', 6.803878210580031e-06], ['(!(*pv)->is_variable())', 6.803878210580031e-06], ['*pv', 6.803878210580031e-06], ['ast_dump_context->dump_expression_list(this->vals());', 6.803878210580031e-06], ['(this->type_->array_type()->element_type()->interface_type()', 6.803878210580031e-06], ['vals;', 6.803878210580031e-06], ['pi;', 6.803878210580031e-06], ['go_assert(pi', 6.803878210580031e-06], ['this->indexes_->end());', 6.803878210580031e-06], ['val_expr', 6.803878210580031e-06], ['++pi;', 6.803878210580031e-06], ['++pi,', 6.803878210580031e-06], ['go_assert(type->array_type()', 6.803878210580031e-06], ['!type->is_slice_type());', 6.803878210580031e-06], ['Fixed_array_construction_expression(type,', 6.803878210580031e-06], ['go_assert(type->is_slice_type());', 6.803878210580031e-06], ['indexes->back()', 6.803878210580031e-06], ['go_assert(this->type()->is_error());', 6.803878210580031e-06], ['this->slice_storage_', 6.803878210580031e-06], ['this->element_count()', 6.803878210580031e-06], ['this->array_val_', 6.803878210580031e-06], ['this->create_array_val();', 6.803878210580031e-06], ['this->array_val_,', 6.803878210580031e-06], ['Slice_construction_expression(type,', 6.803878210580031e-06], ['!this->vals_->empty()', 6.803878210580031e-06], ['this->constructor_temp_', 6.803878210580031e-06], ['this->element_type_', 6.803878210580031e-06], ['Type::make_builtin_struct_type(2,', 6.803878210580031e-06], ['"__key",', 6.803878210580031e-06], ['key_type,', 6.803878210580031e-06], ['"__val",', 6.803878210580031e-06], ['*pv;', 6.803878210580031e-06], ['this->vals_->copy()),', 6.803878210580031e-06], ['ventries', 6.803878210580031e-06], ['ast_dump_context->dump_expression_list(this->vals_,', 6.803878210580031e-06], ['testsuite.', 6.803878210580031e-06], ['this->depth_;', 6.803878210580031e-06], ['++depth)', 6.803878210580031e-06], ['(this->key_path_[depth])', 6.803878210580031e-06], ['type->map_type()->key_type();', 6.803878210580031e-06], ['type->map_type()->val_type();', 6.803878210580031e-06], ['Type::TYPE_STRUCT)', 6.803878210580031e-06], ['(Expression::traverse(&*p,', 6.803878210580031e-06], ['*pt', 6.803878210580031e-06], ['literal"));', 6.803878210580031e-06], ['!this->has_keys_)', 6.803878210580031e-06], ['type->named_type()->named_object()->package()', 6.803878210580031e-06], ['"assignment', 6.803878210580031e-06], ['type->named_type()->message_name().c_str());', 6.803878210580031e-06], ['this->vals_,', 6.803878210580031e-06], ['external_no', 6.803878210580031e-06], ['go_error_at(val->location(),', 6.803878210580031e-06], ['EXPRESSION_VAR_REFERENCE:', 6.803878210580031e-06], ['EXPRESSION_ENCLOSED_VAR_REFERENCE:', 6.803878210580031e-06], ['name[0]', 6.803878210580031e-06], ['operator<(const', 6.803878210580031e-06], ['this->make_array(type,', 6.803878210580031e-06], ['indexes_out_of_order', 6.803878210580031e-06], ['(std::find(indexes->begin(),', 6.803878210580031e-06], ['indexes->end(),', 6.803878210580031e-06], ['indexes->end())', 6.803878210580031e-06], ['indexes->push_back(index);', 6.803878210580031e-06], ['std::sort(v.begin(),', 6.803878210580031e-06], ['long>();', 6.803878210580031e-06], ['v.begin();', 6.803878210580031e-06], ['v.end();', 6.803878210580031e-06], ['(indexes', 6.803878210580031e-06], ['"too', 6.803878210580031e-06], ['at;', 6.803878210580031e-06], ['std::vector<Expression*>)', 6.803878210580031e-06], ['st;', 6.803878210580031e-06], ['std::vector<Expression*>)::iterator', 6.803878210580031e-06], ['mit;', 6.803878210580031e-06], ['(mit', 6.803878210580031e-06], ['l.push_back(*p);', 6.803878210580031e-06], ['std::pair<unsigned', 6.803878210580031e-06], ['val(h,', 6.803878210580031e-06], ['l);', 6.803878210580031e-06], ['(std::vector<Expression*>::iterator', 6.803878210580031e-06], ['mit->second.begin();', 6.803878210580031e-06], ['mit->second.end();', 6.803878210580031e-06], ['lit++)', 6.803878210580031e-06], ['go_assert(ok);', 6.803878210580031e-06], ['h.', 6.803878210580031e-06], ['mit->second.push_back(*p);', 6.803878210580031e-06], ['depth,', 6.803878210580031e-06], ['has_keys,', 6.803878210580031e-06], ['all_are_names,', 6.803878210580031e-06], ['EXPRESSION_STRUCT_CONSTRUCTION:', 6.803878210580031e-06], ['EXPRESSION_FIXED_ARRAY_CONSTRUCTION:', 6.803878210580031e-06], ['EXPRESSION_SLICE_CONSTRUCTION:', 6.803878210580031e-06], ['EXPRESSION_MAP_CONSTRUCTION:', 6.803878210580031e-06], ['*pace', 6.803878210580031e-06], ['!pace->is_constant_array();', 6.803878210580031e-06], ['(this->type_->interface_type()', 6.803878210580031e-06], ['assertion:', 6.803878210580031e-06], ['etype_ptr,', 6.803878210580031e-06], ['bcall', 6.803878210580031e-06], ['channel_type->element_type();', 6.803878210580031e-06], ['Expression::make_temporary_reference(this->temp_receiver_,', 6.803878210580031e-06], ['recv_addr', 6.803878210580031e-06], ['Type::make_pointer_type(Type::lookup_integer_type("uint8"));', 6.803878210580031e-06], ['describes.', 6.803878210580031e-06], ['ptrsize,', 6.803878210580031e-06], ['uint8_type', 6.803878210580031e-06], ['type_info)', 6.803878210580031e-06], ['(this->type_info_)', 6.803878210580031e-06], ['TYPE_INFO_SIZE:', 6.803878210580031e-06], ['TYPE_INFO_BACKEND_PTRDATA:', 6.803878210580031e-06], ['TYPE_INFO_DESCRIPTOR_PTRDATA:', 6.803878210580031e-06], ['TYPE_INFO_ALIGNMENT:', 6.803878210580031e-06], ['TYPE_INFO_FIELD_ALIGNMENT:', 6.803878210580031e-06], ['this->slice_info_,', 6.803878210580031e-06], ['(this->slice_info_)', 6.803878210580031e-06], ['SLICE_INFO_VALUE_POINTER:', 6.803878210580031e-06], ['SLICE_INFO_LENGTH:', 6.803878210580031e-06], ['SLICE_INFO_CAPACITY:', 6.803878210580031e-06], ['this->slice_info_', 6.803878210580031e-06], ['vals[0]', 6.803878210580031e-06], ['vals[1]', 6.803878210580031e-06], ['valmem,', 6.803878210580031e-06], ['iface,', 6.803878210580031e-06], ['this->iface_info_,', 6.803878210580031e-06], ['(this->iface_info_)', 6.803878210580031e-06], ['INTERFACE_INFO_METHODS:', 6.803878210580031e-06], ['result_types[itype]', 6.803878210580031e-06], ['pdt;', 6.803878210580031e-06], ['INTERFACE_INFO_OBJECT:', 6.803878210580031e-06], ['this->iface_info_', 6.803878210580031e-06], ['first_value,', 6.803878210580031e-06], ['itype,', 6.803878210580031e-06], ['Interface_mtable_expression(itype,', 6.803878210580031e-06], ['this->method_table_type_;', 6.803878210580031e-06], ['interface_methods', 6.803878210580031e-06], ['this->itype_->methods();', 6.803878210580031e-06], ['go_assert(!interface_methods->empty());', 6.803878210580031e-06], ['Struct_field_list;', 6.803878210580031e-06], ['asm_name(go_selectively_encode_id(mangled_name));', 6.803878210580031e-06], ['td_type', 6.803878210580031e-06], ['Backend::Btyped_identifier', 6.803878210580031e-06], ['!is_public,', 6.803878210580031e-06], ['(Expression::traverse(&this->init_,', 6.803878210580031e-06], ['init_stmt', 6.803878210580031e-06], ['imp->peek_char();', 6.803878210580031e-06], ['(!ifb->saw_error())', 6.803878210580031e-06], ['ifb->set_saw_error();', 6.803878210580031e-06], ['a.u_.int_val);', 6.803878210580031e-06], ['a.u_.float_val,', 6.803878210580031e-06], ['mpc_set(this->u_.complex_val,', 6.803878210580031e-06], ['a.u_.complex_val,', 6.803878210580031e-06], ['!Type::are_identical(this->type_,', 6.803878210580031e-06], ['NC_INT;', 6.803878210580031e-06], ['min_exp;', 6.803878210580031e-06], ['min_exp', 6.803878210580031e-06], ['mpc_init2(*val,', 6.803878210580031e-06], ['mpc_set(*val,', 6.803878210580031e-06], ['NC_UL_NOTINT;', 6.803878210580031e-06], ['*val)', 6.803878210580031e-06], ['(!mpfr_integer_p(fval))', 6.803878210580031e-06], ['mpz_init(ival);', 6.803878210580031e-06], ['mpfr_get_z(ival,', 6.803878210580031e-06], ['int64_t*', 6.803878210580031e-06], ['(!mpfr_integer_p(this->u_.float_val))', 6.803878210580031e-06], ['mpz_init(*val);', 6.803878210580031e-06], ['mpfr_get_z(*val,', 6.803878210580031e-06], ['"floating', 6.803878210580031e-06], ['integer");', 6.803878210580031e-06], ['mpfr_get_z(val,', 6.803878210580031e-06], ['mpz_sgn(val)', 6.803878210580031e-06], ['type->bits()', 6.803878210580031e-06], ['(!ret', 6.803878210580031e-06], ['issue_error)', 6.803878210580031e-06], ['mpfr_init_set(val,', 6.803878210580031e-06], ['Round', 6.803878210580031e-06], ['mpfr_set_prec(t,', 6.803878210580031e-06], ['24);', 6.803878210580031e-06], ['53);', 6.803878210580031e-06], ['mpc_set(val,', 6.803878210580031e-06], ['max_exp)', 6.803878210580031e-06], ['mpc_init2(t,', 6.803878210580031e-06], ['seed)', 6.803878210580031e-06], ['PRIME;', 6.803878210580031e-06], ['(*c', 6.803878210580031e-06], ['c++;', 6.803878210580031e-06], ["'m':", 6.803878210580031e-06], ['mformat_value();', 6.803878210580031e-06], ['go_open_quote();', 6.803878210580031e-06], ['go_close_quote();', 6.803878210580031e-06], ["'q':", 6.803878210580031e-06], ['"%"', 6.803878210580031e-06], ['vasprintf()', 6.803878210580031e-06], ['warning:', 6.803878210580031e-06], ['well,', 6.803878210580031e-06], ['go_be_get_quotechars(&cached_open_quote,', 6.803878210580031e-06], ['&cached_close_quote);', 6.803878210580031e-06], ['dumps;', 6.803878210580031e-06], ['is_all', 6.803878210580031e-06], ['"all")', 6.803878210580031e-06], ['p->next_)', 6.803878210580031e-06], ['(is_all', 6.803878210580031e-06], ['p->name_)', 6.803878210580031e-06], ['p->is_enabled_', 6.803878210580031e-06], ['found;', 6.803878210580031e-06], ['ASCII', 6.803878210580031e-06], ['characters.', 6.803878210580031e-06], ['0x80)', 6.803878210580031e-06], ['*pc', 6.803878210580031e-06], ['&id)', 6.803878210580031e-06], ["'u'", 6.803878210580031e-06], ["'.',", 6.803878210580031e-06], ['fetch_utf8_char(p,', 6.803878210580031e-06], ['buf[16];', 6.803878210580031e-06], ['demangling', 6.803878210580031e-06], ['"_",', 6.803878210580031e-06], ['"..u",', 6.803878210580031e-06], ['"..U",', 6.803878210580031e-06], ['go_encode_id.', 6.803878210580031e-06], ['optimizations;', 6.803878210580031e-06], ['IR', 6.803878210580031e-06], ['::gogo->clear_file_scope();', 6.803878210580031e-06], ['(strcmp(filename,', 6.803878210580031e-06], ['(Lex::Linknames::const_iterator', 6.803878210580031e-06], ['Bindings(NULL)),', 6.803878210580031e-06], ['int32_type', 6.803878210580031e-06], ['int_type_size', 6.803878210580031e-06], ['int_type_size,', 6.803878210580031e-06], ['int32_type,', 6.803878210580031e-06], ['Typed_identifier_list', 6.803878210580031e-06], ['Typed_identifier_list;', 6.803878210580031e-06], ['Type::make_boolean_type(),', 6.803878210580031e-06], ['len_result,', 6.803878210580031e-06], ['print_type', 6.803878210580031e-06], ['print_type->set_is_varargs();', 6.803878210580031e-06], ['print_type->set_is_builtin();', 6.803878210580031e-06], ['print_type,', 6.803878210580031e-06], ['pkgpath)', 6.803878210580031e-06], ['go_assert(this->pkgpath_set_);', 6.803878210580031e-06], ['this->pkgpath_;', 6.803878210580031e-06], ['this->pkgpath_set_', 6.803878210580031e-06], ['this->pkgpath_symbol_;', 6.803878210580031e-06], ['-fgo-prefix', 6.803878210580031e-06], ['(*result)', 6.803878210580031e-06], ['Gogo::pkgpath_for_symbol(this->pkgpath_);', 6.803878210580031e-06], ['"go";', 6.803878210580031e-06], ['this->package_', 6.803878210580031e-06], ['local_name,', 6.803878210580031e-06], ['is_local_name_exported,', 6.803878210580031e-06], ['(pf', 6.803878210580031e-06], ['character");', 6.803878210580031e-06], ['this->current_file_imported_unsafe_', 6.803878210580031e-06], ['package->set_location(location);', 6.803878210580031e-06], ['is_ln_exported', 6.803878210580031e-06], ['(ln', 6.803878210580031e-06], ['".")', 6.803878210580031e-06], ['stream', 6.803878210580031e-06], ['init_name)', 6.803878210580031e-06], ['(Import_init_set::iterator', 6.803878210580031e-06], ['*ii', 6.803878210580031e-06], ['P1,', 6.803878210580031e-06], ['this->functions_.empty();', 6.803878210580031e-06], ['Gogo::current_bindings()', 6.803878210580031e-06], ['(!this->functions_.empty())', 6.803878210580031e-06], ['this->functions_.back().blocks.back()->bindings();', 6.803878210580031e-06], ['this->globals_;', 6.803878210580031e-06], ['std::set<const', 6.803878210580031e-06], ['succ_prior', 6.803878210580031e-06], ['this->lookup_init(*pci);', 6.803878210580031e-06], ['priorities', 6.803878210580031e-06], ['roots.', 6.803878210580031e-06], ['Import_init*>', 6.803878210580031e-06], ['empty_args;', 6.803878210580031e-06], ['(Backend::function_is_visible', 6.803878210580031e-06], ['Backend::function_is_declaration', 6.803878210580031e-06], ['Backend::function_is_inlinable);', 6.803878210580031e-06], ['empty_args,', 6.803878210580031e-06], ['uintptr', 6.803878210580031e-06], ['pvt,', 6.803878210580031e-06], ['decl_addr', 6.803878210580031e-06], ['Expression::make_type_info(decl->type(),', 6.803878210580031e-06], ['Expression::TYPE_INFO_SIZE);', 6.803878210580031e-06], ['init->push_back(size);', 6.803878210580031e-06], ['Expression::TYPE_INFO_BACKEND_PTRDATA);', 6.803878210580031e-06], ['init->push_back(ptrdata);', 6.803878210580031e-06], ['init->push_back(gcdata);', 6.803878210580031e-06], ['root_ctor', 6.803878210580031e-06], ['Expression::make_struct_composite_literal(root_type,', 6.803878210580031e-06], ['roots_init->push_back(root_ctor);', 6.803878210580031e-06], ['eloc', 6.803878210580031e-06], ['Expression::make_type_info(type,', 6.803878210580031e-06], ['this->package_->location();', 6.803878210580031e-06], ['Function(fntype,', 6.803878210580031e-06], ['initfn);', 6.803878210580031e-06], ['code_stmt))', 6.803878210580031e-06], ['const_iterator;', 6.803878210580031e-06], ['(Expression::traverse(&init,', 6.803878210580031e-06], ['preinit,', 6.803878210580031e-06], ['find_vars;', 6.803878210580031e-06], ['dep->var_value()->init();', 6.803878210580031e-06], ['(dep->var_value()->has_pre_init())', 6.803878210580031e-06], ['dep->var_value()->preinit()->traverse(&find_vars);', 6.803878210580031e-06], ['(Find_vars::const_iterator', 6.803878210580031e-06], ['find_vars.begin();', 6.803878210580031e-06], ['find_vars.end();', 6.803878210580031e-06], ['Var_init', 6.803878210580031e-06], ['refs_(NULL),', 6.803878210580031e-06], ['dep_count_(0)', 6.803878210580031e-06], ['init_(init),', 6.803878210580031e-06], ['init()', 6.803878210580031e-06], ['this->refs_;', 6.803878210580031e-06], ['resolved.', 6.803878210580031e-06], ['(this->refs_', 6.803878210580031e-06], ['this->refs_', 6.803878210580031e-06], ['Var_init&', 6.803878210580031e-06], ['std::set<Var_init*>', 6.803878210580031e-06], ['init_loop', 6.803878210580031e-06], ['pvar->var();', 6.803878210580031e-06], ['var->var_value()->init();', 6.803878210580031e-06], ['cycles.', 6.803878210580031e-06], ['pdep', 6.803878210580031e-06], ['("initialization', 6.803878210580031e-06], ['var->message_name().c_str());', 6.803878210580031e-06], ['pdepdep', 6.803878210580031e-06], ['dep->message_name().c_str());', 6.803878210580031e-06], ['Var_inits', 6.803878210580031e-06], ['itself",', 6.803878210580031e-06], ['globally', 6.803878210580031e-06], ['init_fndecl);', 6.803878210580031e-06], ['init_bfn);', 6.803878210580031e-06], ['var_inits;', 6.803878210580031e-06], ['(no->is_const()', 6.803878210580031e-06], ['func_decls);', 6.803878210580031e-06], ['is_sink', 6.803878210580031e-06], ['(var->init()', 6.803878210580031e-06], ['(is_static_initializer)', 6.803878210580031e-06], ['var_init_fn', 6.803878210580031e-06], ['func->get_or_make_decl(this,', 6.803878210580031e-06], ['go_error_at(no->location(),', 6.803878210580031e-06], ['var_binit);', 6.803878210580031e-06], ['var_inits.push_back(Var_init(no,', 6.803878210580031e-06], ['initializations,', 6.803878210580031e-06], ['func_loc);', 6.803878210580031e-06], ['(this->need_init_fn_', 6.803878210580031e-06], ['var_decls);', 6.803878210580031e-06], ['this->functions_.back().blocks.back();', 6.803878210580031e-06], ['(pfunction', 6.803878210580031e-06], ['*pfunction', 6.803878210580031e-06], ['(Gogo::is_sink_name(name))', 6.803878210580031e-06], ['Named_object::make_sink();', 6.803878210580031e-06], ['this->package_->bindings()->lookup(name);', 6.803878210580031e-06], ['go_assert(!this->functions_.back().blocks.empty());', 6.803878210580031e-06], ['*padd_to_globals', 6.803878210580031e-06], ['(alias_arg', 6.803878210580031e-06], ['real_name;', 6.803878210580031e-06], ['Variable(receiver->type(),', 6.803878210580031e-06], ['rname', 6.803878210580031e-06], ['DECL_ARGUMENTS.', 6.803878210580031e-06], ['(is_varargs', 6.803878210580031e-06], ['param->set_is_varargs_parameter();', 6.803878210580031e-06], ['p->name();', 6.803878210580031e-06], ['pname;', 6.803878210580031e-06], ['is_init', 6.803878210580031e-06], ['nested_name', 6.803878210580031e-06], ['&nested_name;', 6.803878210580031e-06], ['Invent', 6.803878210580031e-06], ['(rtype->named_type()->named_object()->package()', 6.803878210580031e-06], ['"(receiver', 6.803878210580031e-06], ['type)"));', 6.803878210580031e-06], ['Redefinition', 6.803878210580031e-06], ['parser,', 6.803878210580031e-06], ['this->functions_.back().function->func_value();', 6.803878210580031e-06], ['issue_goto_errors)', 6.803878210580031e-06], ['Bindings_snapshot*', 6.803878210580031e-06], ['go_assert(!this->functions_.empty()', 6.803878210580031e-06], ['!this->functions_.back().blocks.empty());', 6.803878210580031e-06], ['this->functions_.back().blocks.back()->add_statement(statement);', 6.803878210580031e-06], ['Typed_identifier&', 6.803878210580031e-06], ['tid,', 6.803878210580031e-06], ['(!this->in_global_scope()', 6.803878210580031e-06], ['(f->is_function())', 6.803878210580031e-06], ['f->func_value()->new_local_type_index();', 6.803878210580031e-06], ['go_name.c_str());', 6.803878210580031e-06], ['go_error_at(p->second->location(),', 6.803878210580031e-06], ['name",', 6.803878210580031e-06], ['Gogo::unpack_hidden_name(p->second->name())', 6.803878210580031e-06], ['(Packages::iterator', 6.803878210580031e-06], ['pkg_name', 6.803878210580031e-06], ['go_error_at(p1->second->location(),', 6.803878210580031e-06], ['hash_name,', 6.803878210580031e-06], ['hash_fntype,', 6.803878210580031e-06], ['equal_name,', 6.803878210580031e-06], ['Specific_type_function*', 6.803878210580031e-06], ['tsf', 6.803878210580031e-06], ['Specific_type_functions', 6.803878210580031e-06], ['(t->needs_specific_type_functions(this->gogo_))', 6.803878210580031e-06], ['t->type_functions(this->gogo_,', 6.803878210580031e-06], ['(Type::traverse(rt,', 6.803878210580031e-06], ['rt->struct_type()->fields();', 6.803878210580031e-06], ['(Packages::const_iterator', 6.803878210580031e-06], ['messages.', 6.803878210580031e-06], ['Verify_types', 6.803878210580031e-06], ['traverse;', 6.803878210580031e-06], ['(std::vector<Type*>::iterator', 6.803878210580031e-06], ['this->verify_types_.begin();', 6.803878210580031e-06], ['this->verify_types_.end();', 6.803878210580031e-06], ['traverse_constants', 6.803878210580031e-06], ['function_(function),', 6.803878210580031e-06], ['inserter_()', 6.803878210580031e-06], ['set_inserter(const', 6.803878210580031e-06], ['*inserter;', 6.803878210580031e-06], ['constant(Named_object*,', 6.803878210580031e-06], ['traversing.', 6.803878210580031e-06], ['inserter_;', 6.803878210580031e-06], ['no->var_value()->is_global())', 6.803878210580031e-06], ['no->var_value()->type();', 6.803878210580031e-06], ['go_assert(!no->var_value()->has_pre_init());', 6.803878210580031e-06], ['this->iota_value_', 6.803878210580031e-06], ['go_assert(this->function_', 6.803878210580031e-06], ['no->func_value()->traverse(this);', 6.803878210580031e-06], ['ourselves,', 6.803878210580031e-06], ['(sorig->is_block_statement())', 6.803878210580031e-06], ['hold_inserter(this->inserter_);', 6.803878210580031e-06], ['Statement_inserter(block,', 6.803878210580031e-06], ['pindex);', 6.803878210580031e-06], ['sorig->traverse_contents(this);', 6.803878210580031e-06], ['sorig;', 6.803878210580031e-06], ['(snew', 6.803878210580031e-06], ['snew;', 6.803878210580031e-06], ['block->replace_statement(*pindex,', 6.803878210580031e-06], ['(enew', 6.803878210580031e-06], ['enew;', 6.803878210580031e-06], ['bodies', 6.803878210580031e-06], ['INSERTER', 6.803878210580031e-06], ['(inserter', 6.803878210580031e-06], ['Create_function_descriptors', 6.803878210580031e-06], ['no->func_value()->descriptor(this->gogo_,', 6.803878210580031e-06], ['!no->func_declaration_value()->type()->is_method()', 6.803878210580031e-06], ['nt->finalize_methods(this->gogo_);', 6.803878210580031e-06], ['(nt->named_object()->package()', 6.803878210580031e-06], ['finalize(this);', 6.803878210580031e-06], ['((*p)->is_const())', 6.803878210580031e-06], ['(*p)->const_value()->determine_type();', 6.803878210580031e-06], ['(*p)->var_value();', 6.803878210580031e-06], ['named_object)', 6.803878210580031e-06], ['traverse(this);', 6.803878210580031e-06], ['block(Block*)', 6.803878210580031e-06], ['this->exprs_.push_back(expression_pointer);', 6.803878210580031e-06], ['traverse_statements),', 6.803878210580031e-06], ['conditionals.', 6.803878210580031e-06], ['find_eval_ordering;', 6.803878210580031e-06], ['Variable_declaration_statement*', 6.803878210580031e-06], ['vds', 6.803878210580031e-06], ['(vds', 6.803878210580031e-06], ['vds->var()->var_value()->init();', 6.803878210580031e-06], ['arg(),', 6.803878210580031e-06], ['&find_eval_ordering);', 6.803878210580031e-06], ['(Find_eval_ordering::const_iterator', 6.803878210580031e-06], ['find_eval_ordering.begin();', 6.803878210580031e-06], ['find_eval_ordering.end();', 6.803878210580031e-06], ['pexpr', 6.803878210580031e-06], ['(*pexpr)->location();', 6.803878210580031e-06], ['((*pexpr)->call_expression()', 6.803878210580031e-06], ['(*pexpr)->call_expression()->result_count()', 6.803878210580031e-06], ['*pexpr,', 6.803878210580031e-06], ['ts;', 6.803878210580031e-06], ['Statement::make_statement(*pexpr,', 6.803878210580031e-06], ['block->insert_statement_before(*pindex,', 6.803878210580031e-06], ['++*pindex;', 6.803878210580031e-06], ['orig_init)', 6.803878210580031e-06], ['vds->var()->var_value()->set_init(init);', 6.803878210580031e-06], ['(!var->is_global()', 6.803878210580031e-06], ['var->add_preinit_statement(this->gogo_,', 6.803878210580031e-06], ['var->set_init(init);', 6.803878210580031e-06], ['rules.', 6.803878210580031e-06], ['find_shortcut;', 6.803878210580031e-06], ['init->traverse(&init,', 6.803878210580031e-06], ['&find_shortcut);', 6.803878210580031e-06], ['pshortcut', 6.803878210580031e-06], ['find_shortcut.found();', 6.803878210580031e-06], ['snew);', 6.803878210580031e-06], ['&init)', 6.803878210580031e-06], ['Local', 6.803878210580031e-06], ['Statement::make_temporary(var->type(),', 6.803878210580031e-06], ['ts->set_is_address_taken();', 6.803878210580031e-06], ['var->set_toplevel_decl(ts);', 6.803878210580031e-06], ['Convert_recover', 6.803878210580031e-06], ['Build_recover_thunks', 6.803878210580031e-06], ['new_results', 6.803878210580031e-06], ['Swap', 6.803878210580031e-06], ['(now)', 6.803878210580031e-06], ['can_recover_no', 6.803878210580031e-06], ['runtime.canrecover(__builtin_return_address()).', 6.803878210580031e-06], ['param_types', 6.803878210580031e-06], ['param_types,', 6.803878210580031e-06], ['voidptr_type', 6.803878210580031e-06], ['voidptr_type,', 6.803878210580031e-06], ['Build_method_tables', 6.803878210580031e-06], ['std::vector<Interface_type*>&', 6.803878210580031e-06], ['tables', 6.803878210580031e-06], ['(std::vector<Interface_type*>::const_iterator', 6.803878210580031e-06], ['nt->interface_method_table(*p,', 6.803878210580031e-06], ['false)->get_backend(&context);', 6.803878210580031e-06], ['true)->get_backend(&context);', 6.803878210580031e-06], ['st->interface_method_table(*p,', 6.803878210580031e-06], ['Check_return_statements_traverse', 6.803878210580031e-06], ['budget.', 6.803878210580031e-06], ['(*this->available_', 6.803878210580031e-06], ['*this->available_', 6.803878210580031e-06], ['Mark_inline_candidates', 6.803878210580031e-06], ['traverse_types)', 6.803878210580031e-06], ['inlining.', 6.803878210580031e-06], ['budget_heuristic;', 6.803878210580031e-06], ['iwb(&budget);', 6.803878210580031e-06], ['func->block()->traverse(&iwb);', 6.803878210580031e-06], ['(budget', 6.803878210580031e-06], ['func->set_export_for_inlining();', 6.803878210580031e-06], ['!saw_errors())', 6.803878210580031e-06], ['Go.', 6.803878210580031e-06], ['this->c_header_.c_str());', 6.803878210580031e-06], ['types.push_back(no);', 6.803878210580031e-06], ['++pd)', 6.803878210580031e-06], ['pw', 6.803878210580031e-06], ['Convert_named_types', 6.803878210580031e-06], ['location_(location),', 6.803878210580031e-06], ['in_unique_section_(false),', 6.803878210580031e-06], ['this->type_->results();', 6.803878210580031e-06], ['this->block_;', 6.803878210580031e-06], ['gogo->pack_hidden_name(buf,', 6.803878210580031e-06], ['block->bindings()->add_result_variable(name,', 6.803878210580031e-06], ['this->results_->push_back(no);', 6.803878210580031e-06], ['go_assert(this->is_method());', 6.803878210580031e-06], ['(this->pragmas_', 6.803878210580031e-06], ['GOPRAGMA_NOINTERFACE)', 6.803878210580031e-06], ['this->pragmas_', 6.803878210580031e-06], ['GOPRAGMA_NOINTERFACE;', 6.803878210580031e-06], ['this->closure_var_;', 6.803878210580031e-06], ['lnull', 6.803878210580031e-06], ['std::pair<Labels::iterator,', 6.803878210580031e-06], ['this->labels_.insert(std::make_pair(label_name,', 6.803878210580031e-06], ['lnull));', 6.803878210580031e-06], ['"label', 6.803878210580031e-06], ['Gogo::message_name(label_name).c_str());', 6.803878210580031e-06], ['"previous', 6.803878210580031e-06], ['go_assert(this->fndecl_', 6.803878210580031e-06], ['Traverse::traverse_blocks', 6.803878210580031e-06], ['Traverse::traverse_statements', 6.803878210580031e-06], ['this->descriptor_', 6.803878210580031e-06], ['Expression::make_func_descriptor(no);', 6.803878210580031e-06], ['this->descriptor_;', 6.803878210580031e-06], ['panicing', 6.803878210580031e-06], ['defer.', 6.803878210580031e-06], ['this->defer_stack_', 6.803878210580031e-06], ['Expression::make_temporary_reference(this->defer_stack_,', 6.803878210580031e-06], ['nointerface,', 6.803878210580031e-06], ['fntype->receiver();', 6.803878210580031e-06], ['fntype->is_varargs();', 6.803878210580031e-06], ['exp->write_c_string(",', 6.803878210580031e-06], ['exp->write_c_string(")");', 6.803878210580031e-06], ['Export_function_body', 6.803878210580031e-06], ['efb(exp,', 6.803878210580031e-06], ['indent);', 6.803878210580031e-06], ['Linemap::location_to_line(loc));', 6.803878210580031e-06], ['Typed_identifier_list**', 6.803878210580031e-06], ['*nointerface', 6.803878210580031e-06], ['*preceiver', 6.803878210580031e-06], ['escape_note', 6.803878210580031e-06], ['parameters;', 6.803878210580031e-06], ['*is_varargs', 6.803878210580031e-06], ["',')", 6.803878210580031e-06], ['errno', 6.803878210580031e-06], ['llen', 6.803878210580031e-06], ['&end,', 6.803878210580031e-06], ['(*end', 6.803878210580031e-06], ['(this->fndecl_', 6.803878210580031e-06], ['is_init_fn', 6.803878210580031e-06], ['(this->enclosing_', 6.803878210580031e-06], ['asm_name;', 6.803878210580031e-06], ['(!this->asm_name_.empty())', 6.803878210580031e-06], ['gogo->function_asm_name(no->name(),', 6.803878210580031e-06], ['no->package(),', 6.803878210580031e-06], ['rtype);', 6.803878210580031e-06], ['((this->pragmas_', 6.803878210580031e-06], ['disable_split_stack', 6.803878210580031e-06], ['nointerface', 6.803878210580031e-06], ['gogo->backend()->function(functype,', 6.803878210580031e-06], ['no->get_id(gogo),', 6.803878210580031e-06], ['this->descriptor_->get_backend(&context);', 6.803878210580031e-06], ['(*p)->get_backend_variable(gogo,', 6.803878210580031e-06], ['(*p)->name()', 6.803878210580031e-06], ['parm_var', 6.803878210580031e-06], ['parm_no', 6.803878210580031e-06], ['parm_var);', 6.803878210580031e-06], ['parm_no->get_backend_variable(gogo,', 6.803878210580031e-06], ['Expression::make_var_reference(parm_no,', 6.803878210580031e-06], ['((*p)->var_value()->is_in_heap())', 6.803878210580031e-06], ['var_decls', 6.803878210580031e-06], ['defer_init', 6.803878210580031e-06], ['except,', 6.803878210580031e-06], ['Runtime::make_call(Runtime::CHECKDEFER,', 6.803878210580031e-06], ['stmts.push_back(gogo->backend()->expression_statement(this->fndecl_,', 6.803878210580031e-06], ['ret_bstmt', 6.803878210580031e-06], ['this->return_value(gogo,', 6.803878210580031e-06], ['gogo->backend()->statement_list(stmts);', 6.803878210580031e-06], ['bindings_(new', 6.803878210580031e-06], ['this->statements_.insert(this->statements_.begin()', 6.803878210580031e-06], ['e_or_t', 6.803878210580031e-06], ['Traverse::traverse_types);', 6.803878210580031e-06], ['e_or_t_or_s', 6.803878210580031e-06], ['(e_or_t', 6.803878210580031e-06], ['Traverse::traverse_statements);', 6.803878210580031e-06], ['Traverse::traverse_constants)', 6.803878210580031e-06], ['tc', 6.803878210580031e-06], ['(tc', 6.803878210580031e-06], ['Type::traverse(tc,', 6.803878210580031e-06], ['Traverse::traverse_variables)', 6.803878210580031e-06], ['Type::traverse(tv,', 6.803878210580031e-06], ['e_or_t_or_s)', 6.803878210580031e-06], ['traverse_mask);', 6.803878210580031e-06], ['(std::vector<Statement*>::const_iterator', 6.803878210580031e-06], ['this->statements_.begin();', 6.803878210580031e-06], ['this->statements_.end();', 6.803878210580031e-06], ['Import_function_body', 6.803878210580031e-06], ['sloc', 6.803878210580031e-06], ['ifb->off();', 6.803878210580031e-06], ['(off', 6.803878210580031e-06], ['body.length())', 6.803878210580031e-06], ['at_end', 6.803878210580031e-06], ['indent;', 6.803878210580031e-06], ["body.find('\\n',", 6.803878210580031e-06], ['off);', 6.803878210580031e-06], ['(nl', 6.803878210580031e-06], ['ifb->set_off(off);', 6.803878210580031e-06], ['function));', 6.803878210580031e-06], ['function->func_value()->get_or_make_decl(gogo,', 6.803878210580031e-06], ['subcontext(gogo,', 6.803878210580031e-06], ['BFROM', 6.803878210580031e-06], ['BTO', 6.803878210580031e-06], ['BFROM.', 6.803878210580031e-06], ['cto)', 6.803878210580031e-06], ['block->bindings()->end_definitions());', 6.803878210580031e-06], ['colon', 6.803878210580031e-06], ['(colon', 6.803878210580031e-06], ['outer,', 6.803878210580031e-06], ['Variable.', 6.803878210580031e-06], ['traverse,', 6.803878210580031e-06], ['gogo->var_depends_on(this);', 6.803878210580031e-06], ['dep->is_variable())', 6.803878210580031e-06], ['global_inserter;', 6.803878210580031e-06], ['global_inserter', 6.803878210580031e-06], ['Statement_inserter(gogo,', 6.803878210580031e-06], ['&global_inserter;', 6.803878210580031e-06], ['&this->init_);', 6.803878210580031e-06], ['go_assert(this->is_global_);', 6.803878210580031e-06], ['expr->type();', 6.803878210580031e-06], ['t->channel_type()->element_type();', 6.803878210580031e-06], ['Variable::type()', 6.803878210580031e-06], ['Type_guard_expression*', 6.803878210580031e-06], ['tge', 6.803878210580031e-06], ['this->init_->type_guard_expression();', 6.803878210580031e-06], ['go_assert(tge', 6.803878210580031e-06], ['tge->expr();', 6.803878210580031e-06], ['(this->type_from_init_tuple_)', 6.803878210580031e-06], ['this->type_from_tuple(init,', 6.803878210580031e-06], ['(this->type_from_range_index_', 6.803878210580031e-06], ['this->type_from_range_value_)', 6.803878210580031e-06], ['this->type_from_range(init,', 6.803878210580031e-06], ['this->type_from_range_index_,', 6.803878210580031e-06], ['(this->type_from_chan_element_)', 6.803878210580031e-06], ['this->type_from_chan_element(init,', 6.803878210580031e-06], ['type->make_non_abstract_type();', 6.803878210580031e-06], ['context(this->type_,', 6.803878210580031e-06], ['go_assert(this->preinit_', 6.803878210580031e-06], ['Expression::make_cast(this->type(),', 6.803878210580031e-06], ['pre-init', 6.803878210580031e-06], ['block_stmt', 6.803878210580031e-06], ['(this->backend_', 6.803878210580031e-06], ['gogo->backend();', 6.803878210580031e-06], ['(this->is_in_heap())', 6.803878210580031e-06], ['Type::make_pointer_type(type);', 6.803878210580031e-06], ['Gogo::unpack_hidden_name(name);', 6.803878210580031e-06], ['function->func_value()->get_decl();', 6.803878210580031e-06], ['(this->is_non_escaping_address_taken_', 6.803878210580031e-06], ['!this->is_in_heap());', 6.803878210580031e-06], ['bvar_decl', 6.803878210580031e-06], ['backend->local_variable(bfunction,', 6.803878210580031e-06], ['this->backend_;', 6.803878210580031e-06], ['this->expr_->determine_type(&context);', 6.803878210580031e-06], ['(!this->type_->is_abstract())', 6.803878210580031e-06], ['const_decl', 6.803878210580031e-06], ['this->methods_.push_back(ret);', 6.803878210580031e-06], ['this->methods_.begin();', 6.803878210580031e-06], ['this->methods_.end();', 6.803878210580031e-06], ['NAMED_OBJECT_SINK);', 6.803878210580031e-06], ['NAMED_OBJECT_UNKNOWN);', 6.803878210580031e-06], ['Unknown_name*', 6.803878210580031e-06], ['named_type', 6.803878210580031e-06], ['named_type;', 6.803878210580031e-06], ['NAMED_OBJECT_TYPE_DECLARATION);', 6.803878210580031e-06], ['NAMED_OBJECT_FUNC_DECLARATION);', 6.803878210580031e-06], ['alias,', 6.803878210580031e-06], ['Gogo::message_name(this->name_);', 6.803878210580031e-06], ['named_type)', 6.803878210580031e-06], ['NAMED_OBJECT_UNINITIALIZED:', 6.803878210580031e-06], ['NAMED_OBJECT_UNKNOWN:', 6.803878210580031e-06], ['NAMED_OBJECT_FUNC_DECLARATION:', 6.803878210580031e-06], ['this->message_name().c_str());', 6.803878210580031e-06], ['decl_name;', 6.803878210580031e-06], ['decl_name', 6.803878210580031e-06], ['(!Gogo::is_erroneous_name(this->name_))', 6.803878210580031e-06], ['this));', 6.803878210580031e-06], ['Contour::iterator', 6.803878210580031e-06], ['Contour::const_iterator', 6.803878210580031e-06], ['this->bindings_.find(name);', 6.803878210580031e-06], ['this->named_objects_.begin();', 6.803878210580031e-06], ['this->named_objects_.end();', 6.803878210580031e-06], ['new_object;', 6.803878210580031e-06], ['(new_object->is_type_declaration())', 6.803878210580031e-06], ['this->named_objects_.push_back(old_object);', 6.803878210580031e-06], ['go_error_at(new_object->location(),', 6.803878210580031e-06], ['"redefinition', 6.803878210580031e-06], ['this->begin_declarations();', 6.803878210580031e-06], ['this->end_declarations();', 6.803878210580031e-06], ['(this->blabel_', 6.803878210580031e-06], ['context->function()->func_value();', 6.803878210580031e-06], ['function->get_decl();', 6.803878210580031e-06], ['this->blabel_', 6.803878210580031e-06], ['context->backend()->label(bfunction,', 6.803878210580031e-06], ['this->blabel_;', 6.803878210580031e-06], ['dummy_label;', 6.803878210580031e-06], ['this->get_blabel(context);', 6.803878210580031e-06], ['(this->pkgpath_symbol_.empty())', 6.803878210580031e-06], ['this->aliases_.find(alias);', 6.803878210580031e-06], ['(this->fake_uses_.empty())', 6.803878210580031e-06], ['usages', 6.803878210580031e-06], ['(this->types_seen_', 6.803878210580031e-06], ['(this->expressions_seen_', 6.803878210580031e-06], ['type->classification()', 6.803878210580031e-06], ['!ins.second;', 6.803878210580031e-06], ["Kahan's", 3.4019391052900155e-06], ['Floating', 3.4019391052900155e-06], ['Point', 3.4019391052900155e-06], ['"Paranoia"', 3.4019391052900155e-06], ['Sumner,', 3.4019391052900155e-06], ['UCSF,', 3.4019391052900155e-06], ['Feb.', 3.4019391052900155e-06], ['Gay,', 3.4019391052900155e-06], ['BTL,', 3.4019391052900155e-06], ['1986', 3.4019391052900155e-06], ['rewrite', 3.4019391052900155e-06], ['Wichmann,', 3.4019391052900155e-06], ['18', 3.4019391052900155e-06], ['exhibit', 3.4019391052900155e-06], ['style).', 3.4019391052900155e-06], ['Adjusted', 3.4019391052900155e-06], ['1992', 3.4019391052900155e-06], ['(dmg);', 3.4019391052900155e-06], ['Apr', 3.4019391052900155e-06], ['1983', 3.4019391052900155e-06], ['Professor', 3.4019391052900155e-06], ['W.', 3.4019391052900155e-06], ['Kahan,', 3.4019391052900155e-06], ['567', 3.4019391052900155e-06], ['Evans', 3.4019391052900155e-06], ['Hall', 3.4019391052900155e-06], ['Electrical', 3.4019391052900155e-06], ['Engineering', 3.4019391052900155e-06], ['Science', 3.4019391052900155e-06], ['Dept.', 3.4019391052900155e-06], ['Berkeley,', 3.4019391052900155e-06], ['94720', 3.4019391052900155e-06], ['Wichmann', 3.4019391052900155e-06], ['National', 3.4019391052900155e-06], ['Physical', 3.4019391052900155e-06], ['Laboratory', 3.4019391052900155e-06], ['Teddington', 3.4019391052900155e-06], ['Middx', 3.4019391052900155e-06], ['TW11', 3.4019391052900155e-06], ['OLW', 3.4019391052900155e-06], ['UK', 3.4019391052900155e-06], ['Gay', 3.4019391052900155e-06], ['Sumner', 3.4019391052900155e-06], ['AT&T', 3.4019391052900155e-06], ['Bell', 3.4019391052900155e-06], ['Labs', 3.4019391052900155e-06], ['Center,', 3.4019391052900155e-06], ['Rm.', 3.4019391052900155e-06], ['U-76', 3.4019391052900155e-06], ['600', 3.4019391052900155e-06], ['Mountain', 3.4019391052900155e-06], ['Avenue', 3.4019391052900155e-06], ['Murray', 3.4019391052900155e-06], ['Hill,', 3.4019391052900155e-06], ['NJ', 3.4019391052900155e-06], ['07974', 3.4019391052900155e-06], ['San', 3.4019391052900155e-06], ['Francisco,', 3.4019391052900155e-06], ['CA', 3.4019391052900155e-06], ['94143', 3.4019391052900155e-06], ['simultaneous', 3.4019391052900155e-06], ['corrections', 3.4019391052900155e-06], ['(reflected', 3.4019391052900155e-06], ['netlib).', 3.4019391052900155e-06], ['[A', 3.4019391052900155e-06], ['fixes', 3.4019391052900155e-06], ['dgh', 3.4019391052900155e-06], ['sun!dhough', 3.4019391052900155e-06], ['incorporated', 3.4019391052900155e-06], ['31', 3.4019391052900155e-06], ['July', 3.4019391052900155e-06], ['1986.]', 3.4019391052900155e-06], ['Richard', 3.4019391052900155e-06], ['Karpinski', 3.4019391052900155e-06], ['Sumner.', 3.4019391052900155e-06], ['sample', 3.4019391052900155e-06], ['reports,', 3.4019391052900155e-06], ['criticisms.', 3.4019391052900155e-06], ['freely', 3.4019391052900155e-06], ['acknowledge', 3.4019391052900155e-06], ['Comments', 3.4019391052900155e-06], ['NPL,', 3.4019391052900155e-06], ['please.', 3.4019391052900155e-06], ['introductory', 3.4019391052900155e-06], ['commentary', 3.4019391052900155e-06], ["Wichmann's", 3.4019391052900155e-06], ['work:', 3.4019391052900155e-06], ['Kahan', 3.4019391052900155e-06], ['Microsoft', 3.4019391052900155e-06], ['analogy', 3.4019391052900155e-06], ['Pascal.', 3.4019391052900155e-06], ['transcription', 3.4019391052900155e-06], ['coding', 3.4019391052900155e-06], ['conventional', 3.4019391052900155e-06], ['block-structured', 3.4019391052900155e-06], ['Hence', 3.4019391052900155e-06], ['structured', 3.4019391052900155e-06], ['mnemonic', 3.4019391052900155e-06], ['significance),', 3.4019391052900155e-06], ['[Note:', 3.4019391052900155e-06], ['C]:', 3.4019391052900155e-06], ['AInverse', 3.4019391052900155e-06], ['J0', 3.4019391052900155e-06], ['[Failure]', 3.4019391052900155e-06], ['BInverse', 3.4019391052900155e-06], ['J1', 3.4019391052900155e-06], ['B2', 3.4019391052900155e-06], ['[SeriousDefect]', 3.4019391052900155e-06], ['T5', 3.4019391052900155e-06], ['B9', 3.4019391052900155e-06], ['J2', 3.4019391052900155e-06], ['T7', 3.4019391052900155e-06], ['[Defect]', 3.4019391052900155e-06], ['T8', 3.4019391052900155e-06], ['CInverse', 3.4019391052900155e-06], ['J3', 3.4019391052900155e-06], ['[Flaw]', 3.4019391052900155e-06], ['U0', 3.4019391052900155e-06], ['UnderflowThreshold', 3.4019391052900155e-06], ['D4', 3.4019391052900155e-06], ['FourD', 3.4019391052900155e-06], ['L', 3.4019391052900155e-06], ['E2', 3.4019391052900155e-06], ['Exp2', 3.4019391052900155e-06], ['N1', 3.4019391052900155e-06], ['V8', 3.4019391052900155e-06], ['E5', 3.4019391052900155e-06], ['O', 3.4019391052900155e-06], ['E6', 3.4019391052900155e-06], ['O1', 3.4019391052900155e-06], ['E7', 3.4019391052900155e-06], ['O2', 3.4019391052900155e-06], ['E8', 3.4019391052900155e-06], ['O3', 3.4019391052900155e-06], ['O4', 3.4019391052900155e-06], ['F1', 3.4019391052900155e-06], ['O5', 3.4019391052900155e-06], ['X9', 3.4019391052900155e-06], ['F2', 3.4019391052900155e-06], ['O8', 3.4019391052900155e-06], ['F3', 3.4019391052900155e-06], ['O9', 3.4019391052900155e-06], ['Y9', 3.4019391052900155e-06], ['G1', 3.4019391052900155e-06], ['Q8', 3.4019391052900155e-06], ['G2', 3.4019391052900155e-06], ['Z0', 3.4019391052900155e-06], ['R1', 3.4019391052900155e-06], ['H1', 3.4019391052900155e-06], ['HInverse', 3.4019391052900155e-06], ['R2', 3.4019391052900155e-06], ['R3', 3.4019391052900155e-06], ['IO', 3.4019391052900155e-06], ['R4', 3.4019391052900155e-06], ['RSqrt', 3.4019391052900155e-06], ['I3', 3.4019391052900155e-06], ['R9', 3.4019391052900155e-06], ['SqRWrng', 3.4019391052900155e-06], ['consequence,', 3.4019391052900155e-06], ['"constants"', 3.4019391052900155e-06], ['glossary', 3.4019391052900155e-06], ['helpful).', 3.4019391052900155e-06], ['identifiersis', 3.4019391052900155e-06], ['wherehelpful.', 3.4019391052900155e-06], ['introduced.', 3.4019391052900155e-06], ['correspondence', 3.4019391052900155e-06], ['lines', 3.4019391052900155e-06], ['90-', 3.4019391052900155e-06], ['140', 3.4019391052900155e-06], ['170-', 3.4019391052900155e-06], ['250', 3.4019391052900155e-06], ['Instructions', 3.4019391052900155e-06], ['380-', 3.4019391052900155e-06], ['460', 3.4019391052900155e-06], ['Heading', 3.4019391052900155e-06], ['480-', 3.4019391052900155e-06], ['670', 3.4019391052900155e-06], ['Characteristics', 3.4019391052900155e-06], ['690-', 3.4019391052900155e-06], ['870', 3.4019391052900155e-06], ['History', 3.4019391052900155e-06], ['2940-2950', 3.4019391052900155e-06], ['3710-3740', 3.4019391052900155e-06], ['4040-4080', 3.4019391052900155e-06], ['DoesYequalX', 3.4019391052900155e-06], ['4090-4110', 3.4019391052900155e-06], ['4640-4850', 3.4019391052900155e-06], ['TestPartialUnderflow', 3.4019391052900155e-06], ['paranoia', 3.4019391052900155e-06], ['software', 3.4019391052900155e-06], ['sanity', 3.4019391052900155e-06], ['overloading', 3.4019391052900155e-06], ['damned', 3.4019391052900155e-06], ['<math.h>', 3.4019391052900155e-06], ['<unistd.h>', 3.4019391052900155e-06], ['awful', 3.4019391052900155e-06], ['prepared', 3.4019391052900155e-06], ['C++.', 3.4019391052900155e-06], ['biggest', 3.4019391052900155e-06], ['stickler', 3.4019391052900155e-06], ['GTY(x)', 3.4019391052900155e-06], ['"ansidecl.h"', 3.4019391052900155e-06], ['"auto-host.h"', 3.4019391052900155e-06], ['"hwint.h"', 3.4019391052900155e-06], ['EXTRA_MODES_FILE', 3.4019391052900155e-06], ['rtx_def;', 3.4019391052900155e-06], ['rtx_def', 3.4019391052900155e-06], ['*rtx;', 3.4019391052900155e-06], ['rtvec_def;', 3.4019391052900155e-06], ['rtvec_def', 3.4019391052900155e-06], ['*rtvec;', 3.4019391052900155e-06], ['tree_node;', 3.4019391052900155e-06], ['tree_node', 3.4019391052900155e-06], ['*tree;', 3.4019391052900155e-06], ['DEFTREECODE(SYM,', 3.4019391052900155e-06], ['STRING,', 3.4019391052900155e-06], ['NARGS)', 3.4019391052900155e-06], ['SYM,', 3.4019391052900155e-06], ['"tree.def"', 3.4019391052900155e-06], ['LAST_AND_UNUSED_TREE_CODE', 3.4019391052900155e-06], ['DEFTREECODE', 3.4019391052900155e-06], ['klass', 3.4019391052900155e-06], ['setjmp(x)', 3.4019391052900155e-06], ['verbose_index', 3.4019391052900155e-06], ["gcc's", 3.4019391052900155e-06], ['real.c.', 3.4019391052900155e-06], ['I.e.', 3.4019391052900155e-06], ['exercise.', 3.4019391052900155e-06], ['fp', 3.4019391052900155e-06], ['MODE', 3.4019391052900155e-06], ['SFmode;', 3.4019391052900155e-06], ['external_max', 3.4019391052900155e-06], ['(REAL_VALUE_TYPE)', 3.4019391052900155e-06], ['(long)', 3.4019391052900155e-06], ['(long);', 3.4019391052900155e-06], ['image[external_max', 3.4019391052900155e-06], ['external_max];', 3.4019391052900155e-06], ['from_long(long);', 3.4019391052900155e-06], ['from_str(const', 3.4019391052900155e-06], ['binop(int', 3.4019391052900155e-06], ['real_c_float&);', 3.4019391052900155e-06], ['unop(int', 3.4019391052900155e-06], ['cmp(int', 3.4019391052900155e-06], ['real_c_float&)', 3.4019391052900155e-06], ['real_c_float()', 3.4019391052900155e-06], ['real_c_float(long', 3.4019391052900155e-06], ['binop(PLUS_EXPR,', 3.4019391052900155e-06], ['binop(MINUS_EXPR,', 3.4019391052900155e-06], ['binop(MULT_EXPR,', 3.4019391052900155e-06], ['binop(RDIV_EXPR,', 3.4019391052900155e-06], ['r.unop(NEGATE_EXPR);', 3.4019391052900155e-06], ['r.unop(ABS_EXPR);', 3.4019391052900155e-06], ['cmp(LT_EXPR,', 3.4019391052900155e-06], ['cmp(LE_EXPR,', 3.4019391052900155e-06], ['cmp(EQ_EXPR,', 3.4019391052900155e-06], ['cmp(NE_EXPR,', 3.4019391052900155e-06], ['cmp(GE_EXPR,', 3.4019391052900155e-06], ['cmp(GT_EXPR,', 3.4019391052900155e-06], ['real_c_float::from_long', 3.4019391052900155e-06], ['MODE,', 3.4019391052900155e-06], ['real_c_float::from_str', 3.4019391052900155e-06], ["'+')", 3.4019391052900155e-06], ['"inf")', 3.4019391052900155e-06], ['"nan")', 3.4019391052900155e-06], ['real_c_float::binop', 3.4019391052900155e-06], ['bi,', 3.4019391052900155e-06], ['bb[64],', 3.4019391052900155e-06], ['symbol_for_code;', 3.4019391052900155e-06], ['PLUS_EXPR:', 3.4019391052900155e-06], ["'+';", 3.4019391052900155e-06], ['MINUS_EXPR:', 3.4019391052900155e-06], ["'-';", 3.4019391052900155e-06], ["'*';", 3.4019391052900155e-06], ['RDIV_EXPR:', 3.4019391052900155e-06], ["'/';", 3.4019391052900155e-06], ['real_c_float::unop', 3.4019391052900155e-06], ['"abs', 3.4019391052900155e-06], ['%s%s', 3.4019391052900155e-06], ['real_c_float::cmp', 3.4019391052900155e-06], ['bb[64];', 3.4019391052900155e-06], ['real_c_float::str()', 3.4019391052900155e-06], ['int(fmt->p', 3.4019391052900155e-06], ['real_c_float::hex()', 3.4019391052900155e-06], ['real_c_float::integer()', 3.4019391052900155e-06], ['real_c_float::exp()', 3.4019391052900155e-06], ['real_exponent', 3.4019391052900155e-06], ['real_c_float::ldexp', 3.4019391052900155e-06], ['ai;', 3.4019391052900155e-06], ['arithmetic.', 3.4019391052900155e-06], ['Exists', 3.4019391052900155e-06], ['intermediate', 3.4019391052900155e-06], ['image;', 3.4019391052900155e-06], ['from_str', 3.4019391052900155e-06], ['do_abs', 3.4019391052900155e-06], ['(T);', 3.4019391052900155e-06], ['verbose_binop', 3.4019391052900155e-06], ['verbose_unop', 3.4019391052900155e-06], ['verbose_cmp', 3.4019391052900155e-06], ['native_float()', 3.4019391052900155e-06], ['native_float(long', 3.4019391052900155e-06], ["'+',", 3.4019391052900155e-06], ["'-',", 3.4019391052900155e-06], ["'*',", 3.4019391052900155e-06], ["'/',", 3.4019391052900155e-06], ['verbose_unop("-",', 3.4019391052900155e-06], ['-image);', 3.4019391052900155e-06], ['verbose_unop("abs', 3.4019391052900155e-06], ['do_abs(image));', 3.4019391052900155e-06], ['"<",', 3.4019391052900155e-06], ['"<=",', 3.4019391052900155e-06], ['"==",', 3.4019391052900155e-06], ['"!=",', 3.4019391052900155e-06], ['">=",', 3.4019391052900155e-06], ['">",', 3.4019391052900155e-06], ['long(image);', 3.4019391052900155e-06], ['native_float<T>::from_str', 3.4019391052900155e-06], ['native_float<float>::from_str', 3.4019391052900155e-06], ['strtof', 3.4019391052900155e-06], ['native_float<double>::from_str', 3.4019391052900155e-06], ['native_float<T>::do_abs', 3.4019391052900155e-06], ['fabsl', 3.4019391052900155e-06], ['native_float<float>::do_abs', 3.4019391052900155e-06], ['fabsf', 3.4019391052900155e-06], ['native_float<double>::do_abs', 3.4019391052900155e-06], ['fabs', 3.4019391052900155e-06], ['native_float<T>::verbose_binop', 3.4019391052900155e-06], ['native_float<T>::verbose_unop', 3.4019391052900155e-06], ['%s%.*a', 3.4019391052900155e-06], ['%s%.*La', 3.4019391052900155e-06], ['native_float<T>::verbose_cmp', 3.4019391052900155e-06], ['native_float<T>::str()', 3.4019391052900155e-06], ['"%.*e",', 3.4019391052900155e-06], ['"%.*Le",', 3.4019391052900155e-06], ['native_float<T>::hex()', 3.4019391052900155e-06], ['"%.*a",', 3.4019391052900155e-06], ['"%.*La",', 3.4019391052900155e-06], ['native_float<T>::exp()', 3.4019391052900155e-06], ['frexp', 3.4019391052900155e-06], ['&e);', 3.4019391052900155e-06], ['native_float<T>::ldexp', 3.4019391052900155e-06], ['ldexpl', 3.4019391052900155e-06], ['native_float<float>::ldexp', 3.4019391052900155e-06], ['ldexpf', 3.4019391052900155e-06], ['native_float<double>::ldexp', 3.4019391052900155e-06], ['::ldexp', 3.4019391052900155e-06], ['libm', 3.4019391052900155e-06], ['f.abs();', 3.4019391052900155e-06], ['operator+', 3.4019391052900155e-06], ['operator*', 3.4019391052900155e-06], ['operator/', 3.4019391052900155e-06], ['/=', 3.4019391052900155e-06], ['f.integer();', 3.4019391052900155e-06], ['diff,', 3.4019391052900155e-06], ['diff2;', 3.4019391052900155e-06], ['z,', 3.4019391052900155e-06], ['z.ldexp', 3.4019391052900155e-06], ['(-f.exp()', 3.4019391052900155e-06], ['(diff2', 3.4019391052900155e-06], ['(two', 3.4019391052900155e-06], ['z))', 3.4019391052900155e-06], ['two);', 3.4019391052900155e-06], ['(diff', 3.4019391052900155e-06], ['diff2)', 3.4019391052900155e-06], ['z;', 3.4019391052900155e-06], ['defined(NO_LONG_DOUBLE)', 3.4019391052900155e-06], ['sqrtl', 3.4019391052900155e-06], ['x.exp()', 3.4019391052900155e-06], ['x.ldexp(-exp);', 3.4019391052900155e-06], ['xm1', 3.4019391052900155e-06], ['term;', 3.4019391052900155e-06], ['(next', 3.4019391052900155e-06], ['sum)', 3.4019391052900155e-06], ['(++n', 3.4019391052900155e-06], ['1000)', 3.4019391052900155e-06], ['FLOAT(".69314718055994530941");', 3.4019391052900155e-06], ['(NO_LONG_DOUBLE)', 3.4019391052900155e-06], ['logl', 3.4019391052900155e-06], ['expl', 3.4019391052900155e-06], ['&base,', 3.4019391052900155e-06], ['&exp)', 3.4019391052900155e-06], ['d2;', 3.4019391052900155e-06], ['d2', 3.4019391052900155e-06], ['(d1,', 3.4019391052900155e-06], ['d2);', 3.4019391052900155e-06], ['d1);', 3.4019391052900155e-06], ['ld1,', 3.4019391052900155e-06], ['ld2;', 3.4019391052900155e-06], ['ld2', 3.4019391052900155e-06], ['powl', 3.4019391052900155e-06], ['(ld1,', 3.4019391052900155e-06], ['ld2);', 3.4019391052900155e-06], ['ld1);', 3.4019391052900155e-06], ['/*Number', 3.4019391052900155e-06], ['commutativity.', 3.4019391052900155e-06], ['No,', 3.4019391052900155e-06], ['Other,', 3.4019391052900155e-06], ['Rounded,', 3.4019391052900155e-06], ['Chopped', 3.4019391052900155e-06], ['Failure,', 3.4019391052900155e-06], ['Serious,', 3.4019391052900155e-06], ['Defect,', 3.4019391052900155e-06], ['Flaw', 3.4019391052900155e-06], ['Radix,', 3.4019391052900155e-06], ['BInvrse,', 3.4019391052900155e-06], ['RadixD2,', 3.4019391052900155e-06], ['Small', 3.4019391052900155e-06], ['Four;', 3.4019391052900155e-06], ['Five;', 3.4019391052900155e-06], ['Eight;', 3.4019391052900155e-06], ['ThirtyTwo;', 3.4019391052900155e-06], ['MinusOne;', 3.4019391052900155e-06], ['Indx;', 3.4019391052900155e-06], ['ch[8];', 3.4019391052900155e-06], ['AInvrse,', 3.4019391052900155e-06], ['FourD;', 3.4019391052900155e-06], ['E0,', 3.4019391052900155e-06], ['Exp2,', 3.4019391052900155e-06], ['E3,', 3.4019391052900155e-06], ['MinSqEr;', 3.4019391052900155e-06], ['SqEr,', 3.4019391052900155e-06], ['MaxSqEr,', 3.4019391052900155e-06], ['F6,', 3.4019391052900155e-06], ['H,', 3.4019391052900155e-06], ['I;', 3.4019391052900155e-06], ['StickyBit,', 3.4019391052900155e-06], ['J;', 3.4019391052900155e-06], ['MyZero;', 3.4019391052900155e-06], ['Q,', 3.4019391052900155e-06], ['Q9;', 3.4019391052900155e-06], ['R,', 3.4019391052900155e-06], ['OneUlp,', 3.4019391052900155e-06], ['UfThold,', 3.4019391052900155e-06], ['U1,', 3.4019391052900155e-06], ['V,', 3.4019391052900155e-06], ['V0,', 3.4019391052900155e-06], ['X2,', 3.4019391052900155e-06], ['X8,', 3.4019391052900155e-06], ['Y,', 3.4019391052900155e-06], ['Y2,', 3.4019391052900155e-06], ['PseudoZero,', 3.4019391052900155e-06], ['Z1,', 3.4019391052900155e-06], ['Z2,', 3.4019391052900155e-06], ['ErrCnt[4];', 3.4019391052900155e-06], ['Milestone;', 3.4019391052900155e-06], ['PageNo;', 3.4019391052900155e-06], ['N,', 3.4019391052900155e-06], ['N1;', 3.4019391052900155e-06], ['GMult,', 3.4019391052900155e-06], ['GDiv,', 3.4019391052900155e-06], ['GAddSub;', 3.4019391052900155e-06], ['RMult,', 3.4019391052900155e-06], ['RDiv,', 3.4019391052900155e-06], ['RAddSub,', 3.4019391052900155e-06], ['RSqrt;', 3.4019391052900155e-06], ['Break,', 3.4019391052900155e-06], ['Done,', 3.4019391052900155e-06], ['NotMonot,', 3.4019391052900155e-06], ['Monot,', 3.4019391052900155e-06], ['Anomaly,', 3.4019391052900155e-06], ['IEEE,', 3.4019391052900155e-06], ['SqRWrng,', 3.4019391052900155e-06], ['UfNGrad;', 3.4019391052900155e-06], ['Computed', 3.4019391052900155e-06], ['/*U1', 3.4019391052900155e-06], ['1.0-U1', 3.4019391052900155e-06], ['/*U2', 3.4019391052900155e-06], ['1.0+U2', 3.4019391052900155e-06], ['Sign', 3.4019391052900155e-06], ['(FLOAT);', 3.4019391052900155e-06], ['IsYeqX', 3.4019391052900155e-06], ['SR3750', 3.4019391052900155e-06], ['Pretend', 3.4019391052900155e-06], ['bss.', 3.4019391052900155e-06], ['Paranoia()', 3.4019391052900155e-06], ['memset(this,', 3.4019391052900155e-06], ['(*this));', 3.4019391052900155e-06], ['Paranoia<FLOAT>::main()', 3.4019391052900155e-06], ['sides.', 3.4019391052900155e-06], ['long(1);', 3.4019391052900155e-06], ['long(2);', 3.4019391052900155e-06], ['long(3);', 3.4019391052900155e-06], ['long(4);', 3.4019391052900155e-06], ['long(5);', 3.4019391052900155e-06], ['long(8);', 3.4019391052900155e-06], ['long(9);', 3.4019391052900155e-06], ['long(27);', 3.4019391052900155e-06], ['long(32);', 3.4019391052900155e-06], ['long(240);', 3.4019391052900155e-06], ['long(-1);', 3.4019391052900155e-06], ['"0x1p-1";', 3.4019391052900155e-06], ['"0x3p-1";', 3.4019391052900155e-06], ['ErrCnt[Flaw]', 3.4019391052900155e-06], ['("Program', 3.4019391052900155e-06], ['RUNNING', 3.4019391052900155e-06], ['integers:\\n");', 3.4019391052900155e-06], ['"0+0', 3.4019391052900155e-06], ['"1-1', 3.4019391052900155e-06], ['"1', 3.4019391052900155e-06], ['Two),', 3.4019391052900155e-06], ['"1+1', 3.4019391052900155e-06], ['2");', 3.4019391052900155e-06], ['-Zero;', 3.4019391052900155e-06], ['Non-zero!\\n");', 3.4019391052900155e-06], ['"0.001";', 3.4019391052900155e-06], ['(Three', 3.4019391052900155e-06], ['"3', 3.4019391052900155e-06], ['2+1");', 3.4019391052900155e-06], ['3+1");', 3.4019391052900155e-06], ['(-Two)', 3.4019391052900155e-06], ['2*(-2)', 3.4019391052900155e-06], ['"4-3-1', 3.4019391052900155e-06], ['One)),', 3.4019391052900155e-06], ['"-1', 3.4019391052900155e-06], ['0-1");', 3.4019391052900155e-06], ['"-1+1', 3.4019391052900155e-06], ['"1+(-1)', 3.4019391052900155e-06], ['(One)', 3.4019391052900155e-06], ['"-1+abs(1)', 3.4019391052900155e-06], ['"-1+(-1)*(-1)', 3.4019391052900155e-06], ['"1/2', 3.4019391052900155e-06], ['(-1)', 3.4019391052900155e-06], ['(Nine', 3.4019391052900155e-06], ['"9', 3.4019391052900155e-06], ['3*3");', 3.4019391052900155e-06], ['(TwentySeven', 3.4019391052900155e-06], ['"27', 3.4019391052900155e-06], ['9*3");', 3.4019391052900155e-06], ['(Eight', 3.4019391052900155e-06], ['"8', 3.4019391052900155e-06], ['4+4");', 3.4019391052900155e-06], ['"32', 3.4019391052900155e-06], ['8*4");', 3.4019391052900155e-06], ['"32-27-4-1', 3.4019391052900155e-06], ['"5', 3.4019391052900155e-06], ['4+1");', 3.4019391052900155e-06], ['Four,', 3.4019391052900155e-06], ['"240', 3.4019391052900155e-06], ['4*5*3*4");', 3.4019391052900155e-06], ['"240/3', 3.4019391052900155e-06], ['4*4*5', 3.4019391052900155e-06], ['"240/4', 3.4019391052900155e-06], ['5*3*4', 3.4019391052900155e-06], ['"240/5', 3.4019391052900155e-06], ['4*3*4', 3.4019391052900155e-06], ['("-1,', 3.4019391052900155e-06], ['1/2,', 3.4019391052900155e-06], ['240', 3.4019391052900155e-06], ['Precision.\\n");', 3.4019391052900155e-06], ['(Y)', 3.4019391052900155e-06], ['/*..', 3.4019391052900155e-06], ['|((W+1)-W)-1|', 3.4019391052900155e-06], ['Radix^Precision', 3.4019391052900155e-06], ['barely', 3.4019391052900155e-06], ['(W+1)-W', 3.4019391052900155e-06], ['("Closest', 3.4019391052900155e-06], ['.\\n\\n",', 3.4019391052900155e-06], ['("Recalculating', 3.4019391052900155e-06], ['radix', 3.4019391052900155e-06], ['precision\\n', 3.4019391052900155e-06], ['/*save', 3.4019391052900155e-06], ['Third);', 3.4019391052900155e-06], ['1+...', 3.4019391052900155e-06], ['(!((U2', 3.4019391052900155e-06], ['F6);', 3.4019391052900155e-06], ['-...', 3.4019391052900155e-06], ['(!((U1', 3.4019391052900155e-06], ['(U1', 3.4019391052900155e-06], ['("confirms', 3.4019391052900155e-06], ['("gets', 3.4019391052900155e-06], ['("0.01")', 3.4019391052900155e-06], ['U1);', 3.4019391052900155e-06], ['confirmed.\\n");', 3.4019391052900155e-06], ['("MYSTERY:', 3.4019391052900155e-06], ['recalculated', 3.4019391052900155e-06], ['Eight,', 3.4019391052900155e-06], ['big:', 3.4019391052900155e-06], ['roundoff', 3.4019391052900155e-06], ['problems");', 3.4019391052900155e-06], ['10");', 3.4019391052900155e-06], ['"(1-U1)-1/2', 3.4019391052900155e-06], ['FALSE,', 3.4019391052900155e-06], ['prog.', 3.4019391052900155e-06], ['fails?");', 3.4019391052900155e-06], ['"Comparison', 3.4019391052900155e-06], ['fuzzy,X=1', 3.4019391052900155e-06], ['X-1/2-1/2', 3.4019391052900155e-06], ['25;', 3.4019391052900155e-06], ['nextafter(Radix,', 3.4019391052900155e-06], ['(BMinusU2', 3.4019391052900155e-06], ['Purify', 3.4019391052900155e-06], ['-TwoForty', 3.4019391052900155e-06], ['(U1)', 3.4019391052900155e-06], ['(Radix);', 3.4019391052900155e-06], ['X);', 3.4019391052900155e-06], ['Precision);', 3.4019391052900155e-06], ['("Precision', 3.4019391052900155e-06], ['number\\n");', 3.4019391052900155e-06], ['but,', 3.4019391052900155e-06], ['flaw.\\n");', 3.4019391052900155e-06], ['("logarithmic', 3.4019391052900155e-06], ['U1.\\n");', 3.4019391052900155e-06], ['Precision.str());', 3.4019391052900155e-06], ['"Precision', 3.4019391052900155e-06], ['worse', 3.4019391052900155e-06], ['30;', 3.4019391052900155e-06], ['(((Four', 3.4019391052900155e-06], ['Four)', 3.4019391052900155e-06], ['Z2))', 3.4019391052900155e-06], ['(!((Z2', 3.4019391052900155e-06], ['((Three', 3.4019391052900155e-06], ['(!((Z1', 3.4019391052900155e-06], ['Y1))', 3.4019391052900155e-06], ['(!((Y1', 3.4019391052900155e-06], ['X1)', 3.4019391052900155e-06], ['F9)', 3.4019391052900155e-06], ['(!((X1', 3.4019391052900155e-06], ['(X1', 3.4019391052900155e-06], ['"Disagreements', 3.4019391052900155e-06], ['Z1,\\n");', 3.4019391052900155e-06], ['("respectively', 3.4019391052900155e-06], ['%s,\\n",', 3.4019391052900155e-06], ['X1.str(),', 3.4019391052900155e-06], ['Y1.str(),', 3.4019391052900155e-06], ['Z1.str());', 3.4019391052900155e-06], ['("are', 3.4019391052900155e-06], ['symptoms', 3.4019391052900155e-06], ['inconsistencies', 3.4019391052900155e-06], ['introduced\\n");', 3.4019391052900155e-06], ['("by', 3.4019391052900155e-06], ['subexpressions.\\n");', 3.4019391052900155e-06], ['("Possibly', 3.4019391052900155e-06], ['U1))', 3.4019391052900155e-06], ['("Precision");', 3.4019391052900155e-06], ['("\\tU1', 3.4019391052900155e-06], ['U1.str(),', 3.4019391052900155e-06], ['U1).str());', 3.4019391052900155e-06], ['("\\tU2', 3.4019391052900155e-06], ['U2.str(),', 3.4019391052900155e-06], ['U2).str());', 3.4019391052900155e-06], ['("Because', 3.4019391052900155e-06], ['(",', 3.4019391052900155e-06], ['rational', 3.4019391052900155e-06], ['result\\n");', 3.4019391052900155e-06], ['("Z1', 3.4019391052900155e-06], ['Z1.str(),', 3.4019391052900155e-06], ['Z2.str());', 3.4019391052900155e-06], ['an\\nextra-precision");', 3.4019391052900155e-06], ['-LOG', 3.4019391052900155e-06], ['("Some', 3.4019391052900155e-06], ['"extra', 3.4019391052900155e-06], ['precisely\\n");', 3.4019391052900155e-06], ['("with', 3.4019391052900155e-06], ['B-digits,', 3.4019391052900155e-06], ['i.e.\\n",', 3.4019391052900155e-06], ['(Radix)).str());', 3.4019391052900155e-06], ['("roughly', 3.4019391052900155e-06], ['decimals.\\n",', 3.4019391052900155e-06], ['(10))).str());', 3.4019391052900155e-06], ['35;', 3.4019391052900155e-06], ['U2,', 3.4019391052900155e-06], ['"Subtraction', 3.4019391052900155e-06], ['X=Y,X+Z', 3.4019391052900155e-06], ['Y+Z!");', 3.4019391052900155e-06], ['("Subtraction', 3.4019391052900155e-06], ['normalized,', 3.4019391052900155e-06], ['be.");', 3.4019391052900155e-06], ['("\\nChecking', 3.4019391052900155e-06], ['-.\\n");', 3.4019391052900155e-06], ['1*X', 3.4019391052900155e-06], ['exceed', 3.4019391052900155e-06], ['ulp\\n"', 3.4019391052900155e-06], ['1/3', 3.4019391052900155e-06], ['3/9', 3.4019391052900155e-06], ['9/27', 3.4019391052900155e-06], ['disagree");', 3.4019391052900155e-06], ['X/1', 3.4019391052900155e-06], ['"Computed', 3.4019391052900155e-06], ['1/1.000..1', 3.4019391052900155e-06], ['"-', 3.4019391052900155e-06], ['cancellation', 3.4019391052900155e-06], ['obscured");', 3.4019391052900155e-06], ['"comparison', 3.4019391052900155e-06], ['although\\n");', 3.4019391052900155e-06], ['thereby', 3.4019391052900155e-06], ['vitiating\\n");', 3.4019391052900155e-06], ['precautions', 3.4019391052900155e-06], ['as\\n");', 3.4019391052900155e-06], ['1.0)', 3.4019391052900155e-06], ['{.....}', 3.4019391052900155e-06], ['{.../(X-1.0)...}\\n");', 3.4019391052900155e-06], ['should.\\n");', 3.4019391052900155e-06], ['40;', 3.4019391052900155e-06], ['multiply,', 3.4019391052900155e-06], ['add/subtract.\\n");', 3.4019391052900155e-06], ['(!(FLOOR', 3.4019391052900155e-06], ['(AInvrse)', 3.4019391052900155e-06], ['AInvrse));', 3.4019391052900155e-06], ['(A1', 3.4019391052900155e-06], ['Three);', 3.4019391052900155e-06], ['(!Done)', 3.4019391052900155e-06], ['(1/X)', 3.4019391052900155e-06], ['StickyBit;', 3.4019391052900155e-06], ['((RMult', 3.4019391052900155e-06], ['No))', 3.4019391052900155e-06], ['("Multiplication");', 3.4019391052900155e-06], ['45;', 3.4019391052900155e-06], ['OneAndHalf)', 3.4019391052900155e-06], ['("Division");', 3.4019391052900155e-06], ['Other)', 3.4019391052900155e-06], ['("/', 3.4019391052900155e-06], ['(BInvrse', 3.4019391052900155e-06], ['Half),', 3.4019391052900155e-06], ['50;', 3.4019391052900155e-06], ['((F9', 3.4019391052900155e-06], ['((BMinusU2', 3.4019391052900155e-06], ['"Incomplete', 3.4019391052900155e-06], ['carry-propagation', 3.4019391052900155e-06], ['Addition");', 3.4019391052900155e-06], ['("Add/Subtract', 3.4019391052900155e-06], ['chopped.\\n");', 3.4019391052900155e-06], ['("Add/Subtract");', 3.4019391052900155e-06], ['"(X', 3.4019391052900155e-06], ['zero!\\n");', 3.4019391052900155e-06], ['((GMult', 3.4019391052900155e-06], ['(RMult', 3.4019391052900155e-06], ['(FLOOR', 3.4019391052900155e-06], ['(RadixD2)', 3.4019391052900155e-06], ['RadixD2))', 3.4019391052900155e-06], ['sticky', 3.4019391052900155e-06], ['bit.\\n");', 3.4019391052900155e-06], ['((T', 3.4019391052900155e-06], ['all.\\n");', 3.4019391052900155e-06], ['!(GMult', 3.4019391052900155e-06], ['Other),', 3.4019391052900155e-06], ['"lack(s)', 3.4019391052900155e-06], ['failure(s)', 3.4019391052900155e-06], ['chop\\n\\', 3.4019391052900155e-06], ['(noted', 3.4019391052900155e-06], ['above)', 3.4019391052900155e-06], ['flaw', 3.4019391052900155e-06], ['tally', 3.4019391052900155e-06], ['below");', 3.4019391052900155e-06], ['60;', 3.4019391052900155e-06], ['("Does', 3.4019391052900155e-06], ['Multiplication', 3.4019391052900155e-06], ['commute?', 3.4019391052900155e-06], ['random', 3.4019391052900155e-06], ['trial', 3.4019391052900155e-06], ['fails.\\n");', 3.4019391052900155e-06], ['70;', 3.4019391052900155e-06], ['("\\nRunning', 3.4019391052900155e-06], ['root(x).\\n");', 3.4019391052900155e-06], ['(Zero))', 3.4019391052900155e-06], ['(-Zero', 3.4019391052900155e-06], ['(-Zero))', 3.4019391052900155e-06], ['(One)),', 3.4019391052900155e-06], ['"Square', 3.4019391052900155e-06], ['sqrt(X', 3.4019391052900155e-06], ['X.\\n",', 3.4019391052900155e-06], ['(!((Y', 3.4019391052900155e-06], ['NoTrials)));', 3.4019391052900155e-06], ['(Defect);', 3.4019391052900155e-06], ['("Test', 3.4019391052900155e-06], ['monotonicity.\\n");', 3.4019391052900155e-06], ['(!(NotMonot', 3.4019391052900155e-06], ['Monot))', 3.4019391052900155e-06], ['(Y);', 3.4019391052900155e-06], ['Z))', 3.4019391052900155e-06], ['(!(I', 3.4019391052900155e-06], ['Q))', 3.4019391052900155e-06], ['(Monot)', 3.4019391052900155e-06], ['("sqrt', 3.4019391052900155e-06], ['Monotonicity.\\n");', 3.4019391052900155e-06], ['("sqrt(X)', 3.4019391052900155e-06], ['non-monotonic', 3.4019391052900155e-06], ['110;', 3.4019391052900155e-06], ['("Seeking', 3.4019391052900155e-06], ['thresholds', 3.4019391052900155e-06], ['1/Radix', 3.4019391052900155e-06], ['1/HInvrse', 3.4019391052900155e-06], ['Min(1/Radix,', 3.4019391052900155e-06], ['1/2)', 3.4019391052900155e-06], ['...1/Radix^(BIG', 3.4019391052900155e-06], ['Integer)', 3.4019391052900155e-06], ['1/C', 3.4019391052900155e-06], ['((E0', 3.4019391052900155e-06], ['"multiplication', 3.4019391052900155e-06], ['((UfThold', 3.4019391052900155e-06], ['Y2))', 3.4019391052900155e-06], ['((Underflow', 3.4019391052900155e-06], ['PseudoZero)', 3.4019391052900155e-06], ['PseudoZero));', 3.4019391052900155e-06], ['Comment', 3.4019391052900155e-06], ['4530', 3.4019391052900155e-06], ['..', 3.4019391052900155e-06], ['4560', 3.4019391052900155e-06], ['"phoney-', 3.4019391052900155e-06], ['zero"', 3.4019391052900155e-06], ['violates', 3.4019391052900155e-06], ['"Positive', 3.4019391052900155e-06], ['an\\n");', 3.4019391052900155e-06], ['("allegedly', 3.4019391052900155e-06], ['value\\n");', 3.4019391052900155e-06], ['("PseudoZero', 3.4019391052900155e-06], ['-PseudoZero;', 3.4019391052900155e-06], ['("But', 3.4019391052900155e-06], ['-PseudoZero,', 3.4019391052900155e-06], ['be\\n");', 3.4019391052900155e-06], ['("positive,', 3.4019391052900155e-06], ["isn't;", 3.4019391052900155e-06], ['stick', 3.4019391052900155e-06], ['allegedly', 3.4019391052900155e-06], ['positive\\n");', 3.4019391052900155e-06], ['("value', 3.4019391052900155e-06], ['120;', 3.4019391052900155e-06], ['(CInvrse', 3.4019391052900155e-06], ['(!((E1', 3.4019391052900155e-06], ['E0)))', 3.4019391052900155e-06], ['("Products', 3.4019391052900155e-06], ['differences.\\n");', 3.4019391052900155e-06], ['E1;', 3.4019391052900155e-06], ['("Difference', 3.4019391052900155e-06], ['underflows', 3.4019391052900155e-06], ['products.\\n");', 3.4019391052900155e-06], ['("Smallest', 3.4019391052900155e-06], ['E0.str());', 3.4019391052900155e-06], ['S))', 3.4019391052900155e-06], ['"Either', 3.4019391052900155e-06], ['accuracy', 3.4019391052900155e-06], ['deteriorates', 3.4019391052900155e-06], ['numbers\\n");', 3.4019391052900155e-06], ['("approach', 3.4019391052900155e-06], ['coming', 3.4019391052900155e-06], ['C.str());', 3.4019391052900155e-06], ['confuses', 3.4019391052900155e-06], ['Comparison,', 3.4019391052900155e-06], ['that\\n");', 3.4019391052900155e-06], ['("Q', 3.4019391052900155e-06], ['denying', 3.4019391052900155e-06], ['|Q', 3.4019391052900155e-06], ['values\\n");', 3.4019391052900155e-06], ['("print', 3.4019391052900155e-06], ['Q.str(),', 3.4019391052900155e-06], ['("|Q', 3.4019391052900155e-06], ['Y2).str());', 3.4019391052900155e-06], ['((Q', 3.4019391052900155e-06], ['E1))', 3.4019391052900155e-06], ['gradual;', 3.4019391052900155e-06], ['incurs', 3.4019391052900155e-06], ['Absolute', 3.4019391052900155e-06], ['=\\n");', 3.4019391052900155e-06], ['("(roundoff', 3.4019391052900155e-06], ['E0);', 3.4019391052900155e-06], ['(UfNGrad)', 3.4019391052900155e-06], ['failed!\\n");', 3.4019391052900155e-06], ['(Underflow', 3.4019391052900155e-06], ['UfThold);', 3.4019391052900155e-06], ['(R', 3.4019391052900155e-06], ['H)', 3.4019391052900155e-06], ['%s\\n\\tis', 3.4019391052900155e-06], ['("yet', 3.4019391052900155e-06], ['Z9.str());', 3.4019391052900155e-06], ['("this', 3.4019391052900155e-06], ['DEFECT\\nthat', 3.4019391052900155e-06], ['("confusion', 3.4019391052900155e-06], ['innocent', 3.4019391052900155e-06], ['like\\n");;', 3.4019391052900155e-06], ['else");', 3.4019391052900155e-06], ['(f(X)', 3.4019391052900155e-06], ['f(Z))', 3.4019391052900155e-06], ['...\\n");', 3.4019391052900155e-06], ['("encounter', 3.4019391052900155e-06], ['actually\\n");', 3.4019391052900155e-06], ['fails!\\n");', 3.4019391052900155e-06], ['Half).str());', 3.4019391052900155e-06], ['which\\n",', 3.4019391052900155e-06], ['("calculation', 3.4019391052900155e-06], ['suffer', 3.4019391052900155e-06], ['Relative', 3.4019391052900155e-06], ['("merely', 3.4019391052900155e-06], ['roundoff.\\n");', 3.4019391052900155e-06], ['("Range', 3.4019391052900155e-06], ['narrow;', 3.4019391052900155e-06], ['U1^%d', 3.4019391052900155e-06], ['Underflows.\\n",', 3.4019391052900155e-06], ['I);', 3.4019391052900155e-06], ['130;', 3.4019391052900155e-06], ['-FLOOR', 3.4019391052900155e-06], ['(UfThold)', 3.4019391052900155e-06], ['(HInvrse))', 3.4019391052900155e-06], ['threshold\\n");', 3.4019391052900155e-06], ['("UfThold', 3.4019391052900155e-06], ['(%s)\\nonly', 3.4019391052900155e-06], ['("should', 3.4019391052900155e-06], ['afflict', 3.4019391052900155e-06], ['expression\\n\\t(%s)', 3.4019391052900155e-06], ['(%s);\\n",', 3.4019391052900155e-06], ['("actually', 3.4019391052900155e-06], ['calculating', 3.4019391052900155e-06], ['yields:");', 3.4019391052900155e-06], ['"trap', 3.4019391052900155e-06], ['underflow.\\n");', 3.4019391052900155e-06], ['(HInvrse,', 3.4019391052900155e-06], ['(!((V9', 3.4019391052900155e-06], ['UfThold)))', 3.4019391052900155e-06], ['(!(V9', 3.4019391052900155e-06], ['E9)))', 3.4019391052900155e-06], ['160;', 3.4019391052900155e-06], ['threshold:\\n");', 3.4019391052900155e-06], ['error.\\n");', 3.4019391052900155e-06], ['-CInvrse;', 3.4019391052900155e-06], ['Y);', 3.4019391052900155e-06], ['overflow:', 3.4019391052900155e-06], ['("Can', 3.4019391052900155e-06], ['`Z', 3.4019391052900155e-06], ["-Y'", 3.4019391052900155e-06], ['overflow?\\n");', 3.4019391052900155e-06], ['("Trying', 3.4019391052900155e-06], ['-Y;', 3.4019391052900155e-06], ['(V', 3.4019391052900155e-06], ['("Seems', 3.4019391052900155e-06], ['("finds', 3.4019391052900155e-06], ['"-(-Y)', 3.4019391052900155e-06], ['Y.\\n");', 3.4019391052900155e-06], ['("overflow', 3.4019391052900155e-06], ['%s\\n\\tshrinks', 3.4019391052900155e-06], ['Y.str(),', 3.4019391052900155e-06], ['(V0', 3.4019391052900155e-06], ['V.str());', 3.4019391052900155e-06], ['saturates', 3.4019391052900155e-06], ['V0.str());', 3.4019391052900155e-06], ['("There', 3.4019391052900155e-06], ['saturation', 3.4019391052900155e-06], ['overflow.\\n");', 3.4019391052900155e-06], ['signaled', 3.4019391052900155e-06], ['%s.\\n",', 3.4019391052900155e-06], ['("Any', 3.4019391052900155e-06], ['separating', 3.4019391052900155e-06], ['one\\n");', 3.4019391052900155e-06], ['("above', 3.4019391052900155e-06], ['DEFECT.\\n");', 3.4019391052900155e-06], ['170;', 3.4019391052900155e-06], ['(!(-V', 3.4019391052900155e-06], ['-V0', 3.4019391052900155e-06], ['-UfThold', 3.4019391052900155e-06], ['V))', 3.4019391052900155e-06], ['"Comparisons', 3.4019391052900155e-06], ['involving', 3.4019391052900155e-06], ['("+-%s,', 3.4019391052900155e-06], ['+-%s\\nand', 3.4019391052900155e-06], ['+-%s', 3.4019391052900155e-06], ['Overflow.",', 3.4019391052900155e-06], ['V.str(),', 3.4019391052900155e-06], ['V0.str(),', 3.4019391052900155e-06], ['175;', 3.4019391052900155e-06], ['dgh:', 3.4019391052900155e-06], ['-->', 3.4019391052900155e-06], ['180;', 3.4019391052900155e-06], ['(((V9', 3.4019391052900155e-06], ['Z)))', 3.4019391052900155e-06], ['190;', 3.4019391052900155e-06], ['"Badly");', 3.4019391052900155e-06], ['unbalanced', 3.4019391052900155e-06], ['range;', 3.4019391052900155e-06], ['%s\\n\\t%s\\n",', 3.4019391052900155e-06], ['1.\\n");', 3.4019391052900155e-06], ['200;', 3.4019391052900155e-06], ['-U1', 3.4019391052900155e-06], ['instead,', 3.4019391052900155e-06], ['210;', 3.4019391052900155e-06], ['MyZero', 3.4019391052900155e-06], ['produce?\\n");', 3.4019391052900155e-06], ['("\\n', 3.4019391052900155e-06], ['220;', 3.4019391052900155e-06], ['"FAILUREs', 3.4019391052900155e-06], ['DEFECTs', 3.4019391052900155e-06], ['"DEFECTs', 3.4019391052900155e-06], ['"FLAWs', 3.4019391052900155e-06], ['="', 3.4019391052900155e-06], ['(ErrCnt[i])', 3.4019391052900155e-06], ['%-29s', 3.4019391052900155e-06], ['%d.\\n",', 3.4019391052900155e-06], ['msg[i],', 3.4019391052900155e-06], ['ErrCnt[i]);', 3.4019391052900155e-06], ['ErrCnt[Flaw])', 3.4019391052900155e-06], ['(ErrCnt[Flaw]', 3.4019391052900155e-06], ['("Satisfactory', 3.4019391052900155e-06], ['flawed.\\n");', 3.4019391052900155e-06], ['(ErrCnt[Defect]', 3.4019391052900155e-06], ['Acceptable\\n");', 3.4019391052900155e-06], ['("despite', 3.4019391052900155e-06], ['inconvenient', 3.4019391052900155e-06], ['ErrCnt[Serious])', 3.4019391052900155e-06], ['("unacceptable', 3.4019391052900155e-06], ['Serious', 3.4019391052900155e-06], ['("Potentially', 3.4019391052900155e-06], ['FAILURE', 3.4019391052900155e-06], ['spoiled', 3.4019391052900155e-06], ["program's", 3.4019391052900155e-06], ['diagnoses.\\n");', 3.4019391052900155e-06], ['failures,', 3.4019391052900155e-06], ['defects', 3.4019391052900155e-06], ['flaws', 3.4019391052900155e-06], ['discovered.\\n");', 3.4019391052900155e-06], ['(!((RMult', 3.4019391052900155e-06], ['(RSqrt', 3.4019391052900155e-06], ['Rounded)))', 3.4019391052900155e-06], ['Satisfactory.\\n");', 3.4019391052900155e-06], ['("Rounding', 3.4019391052900155e-06], ['("the', 3.4019391052900155e-06], ['proposed', 3.4019391052900155e-06], ['P");', 3.4019391052900155e-06], ['("754");', 3.4019391052900155e-06], ['("854");', 3.4019391052900155e-06], ['(IEEE)', 3.4019391052900155e-06], ['(",\\nexcept', 3.4019391052900155e-06], ['Rounding");', 3.4019391052900155e-06], ['Gradual', 3.4019391052900155e-06], ['Underflow.\\n");', 3.4019391052900155e-06], ['Excellent!\\n");', 3.4019391052900155e-06], ['("END', 3.4019391052900155e-06], ['OF', 3.4019391052900155e-06], ['TEST.\\n");', 3.4019391052900155e-06], ['Paranoia<FLOAT>::Sign', 3.4019391052900155e-06], ['(0))', 3.4019391052900155e-06], ['Paranoia<FLOAT>::Pause', 3.4019391052900155e-06], ['(do_pause)', 3.4019391052900155e-06], ['("Press', 3.4019391052900155e-06], ['return...",', 3.4019391052900155e-06], ['stdout);', 3.4019391052900155e-06], ['fflush', 3.4019391052900155e-06], ['(stdout);', 3.4019391052900155e-06], ['getchar();', 3.4019391052900155e-06], ['("\\nDiagnosis', 3.4019391052900155e-06], ['resumes', 3.4019391052900155e-06], ['milestone', 3.4019391052900155e-06], ['Milestone);', 3.4019391052900155e-06], ['Page:', 3.4019391052900155e-06], ['%d\\n\\n",', 3.4019391052900155e-06], ['PageNo);', 3.4019391052900155e-06], ['++Milestone;', 3.4019391052900155e-06], ['++PageNo;', 3.4019391052900155e-06], ['Paranoia<FLOAT>::TstCond', 3.4019391052900155e-06], ['Valid,', 3.4019391052900155e-06], ['(!Valid)', 3.4019391052900155e-06], ['(K,', 3.4019391052900155e-06], ['Paranoia<FLOAT>::BadCond', 3.4019391052900155e-06], ['"FAILURE",', 3.4019391052900155e-06], ['DEFECT",', 3.4019391052900155e-06], ['"DEFECT",', 3.4019391052900155e-06], ['"FLAW"', 3.4019391052900155e-06], ['("%s:', 3.4019391052900155e-06], ['msg[K],', 3.4019391052900155e-06], ['(Random1', 3.4019391052900155e-06], ['Random9)^5', 3.4019391052900155e-06], ['FLOOR(X)', 3.4019391052900155e-06], ['0.000005', 3.4019391052900155e-06], ['Random1.', 3.4019391052900155e-06], ['Paranoia<FLOAT>::Random', 3.4019391052900155e-06], ['("0.000005");', 3.4019391052900155e-06], ['(Random1);', 3.4019391052900155e-06], ['Paranoia<FLOAT>::SqXMinX', 3.4019391052900155e-06], ['ErrKind)', 3.4019391052900155e-06], ['XA,', 3.4019391052900155e-06], ['XB', 3.4019391052900155e-06], ['XA', 3.4019391052900155e-06], ['((SQRT', 3.4019391052900155e-06], ['XB)', 3.4019391052900155e-06], ['XA)', 3.4019391052900155e-06], ['OneUlp;', 3.4019391052900155e-06], ['(ErrKind,', 3.4019391052900155e-06], ['("sqrt(%s)', 3.4019391052900155e-06], ['X).str(),', 3.4019391052900155e-06], ['(OneUlp', 3.4019391052900155e-06], ['SqEr).str());', 3.4019391052900155e-06], ['("\\tinstead', 3.4019391052900155e-06], ['Paranoia<FLOAT>::NewD', 3.4019391052900155e-06], ['-Z;', 3.4019391052900155e-06], ['-Z1;', 3.4019391052900155e-06], ['Paranoia<FLOAT>::SR3750', 3.4019391052900155e-06], ['Z2)))', 3.4019391052900155e-06], ['D);', 3.4019391052900155e-06], ['(X2', 3.4019391052900155e-06], ['Z2)', 3.4019391052900155e-06], ['Z2);', 3.4019391052900155e-06], ['X2);', 3.4019391052900155e-06], ['Paranoia<FLOAT>::IsYeqX', 3.4019391052900155e-06], ['("WARNING:', 3.4019391052900155e-06], ['computing\\n");', 3.4019391052900155e-06], ['"computing\\n");', 3.4019391052900155e-06], ['("\\t(%s)', 3.4019391052900155e-06], ['(%s)\\n",', 3.4019391052900155e-06], ['Z.str(),', 3.4019391052900155e-06], ['Q.str());', 3.4019391052900155e-06], ['("\\tyielded', 3.4019391052900155e-06], ['%s;\\n",', 3.4019391052900155e-06], ['("\\twhich', 3.4019391052900155e-06], ['unequal', 3.4019391052900155e-06], [';\\n",', 3.4019391052900155e-06], ['("\\t\\tthey', 3.4019391052900155e-06], ['X).str());', 3.4019391052900155e-06], ['discrepancies.', 3.4019391052900155e-06], ['Paranoia<FLOAT>::PrintIfNPositive', 3.4019391052900155e-06], ['("Similar', 3.4019391052900155e-06], ['discrepancies', 3.4019391052900155e-06], ['times.\\n",', 3.4019391052900155e-06], ['N);', 3.4019391052900155e-06], ['Paranoia<FLOAT>::TstPtUf', 3.4019391052900155e-06], ['denies', 3.4019391052900155e-06], ['("(Z', 3.4019391052900155e-06], ['safe.\\n");', 3.4019391052900155e-06], ['very_serious;', 3.4019391052900155e-06], ['Q9.str());', 3.4019391052900155e-06], ['O.K.,', 3.4019391052900155e-06], ['Over/Underflow");', 3.4019391052900155e-06], ['signaled.\\n");', 3.4019391052900155e-06], ['((Q9', 3.4019391052900155e-06], ['very_serious:', 3.4019391052900155e-06], ['VERY', 3.4019391052900155e-06], ['"What', 3.4019391052900155e-06], ['("%s\\n\\tcompares', 3.4019391052900155e-06], ['(!((Z', 3.4019391052900155e-06], ['Random1)))', 3.4019391052900155e-06], ['("1', 3.4019391052900155e-06], ['(!(Z', 3.4019391052900155e-06], ['"Multiplication', 3.4019391052900155e-06], ['commute!\\n");', 3.4019391052900155e-06], ['("\\tComparison', 3.4019391052900155e-06], ['("\\tdiffers', 3.4019391052900155e-06], ['Paranoia<FLOAT>::notify', 3.4019391052900155e-06], ['inconsistent...\\n",', 3.4019391052900155e-06], ['PLEASE', 3.4019391052900155e-06], ['NOTIFY', 3.4019391052900155e-06], ['KARPINKSI!\\n");', 3.4019391052900155e-06], ['main(int', 3.4019391052900155e-06], ['ac,', 3.4019391052900155e-06], ['**av)', 3.4019391052900155e-06], ['setbuf(stdout,', 3.4019391052900155e-06], ['setbuf(stderr,', 3.4019391052900155e-06], ['(getopt', 3.4019391052900155e-06], ['(ac,', 3.4019391052900155e-06], ['av,', 3.4019391052900155e-06], ['"pvg:fdl"))', 3.4019391052900155e-06], ['-1:', 3.4019391052900155e-06], ['*fmt;', 3.4019391052900155e-06], ['fmts[]', 3.4019391052900155e-06], ['F(x)', 3.4019391052900155e-06], ['#x,', 3.4019391052900155e-06], ['&x##_format', 3.4019391052900155e-06], ['F(ieee_single),', 3.4019391052900155e-06], ['F(ieee_double),', 3.4019391052900155e-06], ['F(ieee_extended_motorola),', 3.4019391052900155e-06], ['F(ieee_extended_intel_96),', 3.4019391052900155e-06], ['F(ieee_extended_intel_128),', 3.4019391052900155e-06], ['F(ibm_extended),', 3.4019391052900155e-06], ['F(ieee_quad),', 3.4019391052900155e-06], ['F(vax_f),', 3.4019391052900155e-06], ['F(vax_d),', 3.4019391052900155e-06], ['F(vax_g),', 3.4019391052900155e-06], ['F(i370_single),', 3.4019391052900155e-06], ['F(i370_double),', 3.4019391052900155e-06], ['F(real_internal),', 3.4019391052900155e-06], ['(fmts)/sizeof(*fmts);', 3.4019391052900155e-06], ['(fmts[i].name,', 3.4019391052900155e-06], ['optarg)', 3.4019391052900155e-06], ['("Unknown', 3.4019391052900155e-06], ['\\"%s\\";', 3.4019391052900155e-06], ['"available', 3.4019391052900155e-06], ['implementations:\\n",', 3.4019391052900155e-06], ['optarg);', 3.4019391052900155e-06], ['("\\t%s\\n",', 3.4019391052900155e-06], ['fmts[i].name);', 3.4019391052900155e-06], ['cheat', 3.4019391052900155e-06], ['real_format_for_mode[int(real_c_float::MODE)', 3.4019391052900155e-06], ['int(QFmode)]', 3.4019391052900155e-06], ['fmts[i].fmt;', 3.4019391052900155e-06], ['Paranoia<real_c_float>().main();', 3.4019391052900155e-06], ['native_float<float>', 3.4019391052900155e-06], ['native_float<double>', 3.4019391052900155e-06], ['native_float<long', 3.4019391052900155e-06], ['double>', 3.4019391052900155e-06], ["'?':", 3.4019391052900155e-06], ['("-p\\tpause', 3.4019391052900155e-06], ['pages");', 3.4019391052900155e-06], ['("-g<FMT>\\treal.c', 3.4019391052900155e-06], ['FMT");', 3.4019391052900155e-06], ['("-f\\tnative', 3.4019391052900155e-06], ['("-d\\tnative', 3.4019391052900155e-06], ['("-l\\tnative', 3.4019391052900155e-06], ['real.o.', 3.4019391052900155e-06], ['fancy_abort', 3.4019391052900155e-06], ['target_flags', 3.4019391052900155e-06], ['floor_log2_wide', 3.4019391052900155e-06], ['log++,', 3.4019391052900155e-06], ['log;', 3.4019391052900155e-06], ['savepos', 3.4019391052900155e-06], ['sizeof(*savepos)', 3.4019391052900155e-06], ['out!', 3.4019391052900155e-06], ['printf("size', 3.4019391052900155e-06], ['thingy', 3.4019391052900155e-06], ['sizeof(*savepos));', 3.4019391052900155e-06], ['Rich', 3.4019391052900155e-06], ['"opt-problem.h"', 3.4019391052900155e-06], ['AP', 3.4019391052900155e-06], ['via:', 3.4019391052900155e-06], ['instances', 3.4019391052900155e-06], ['replayed', 3.4019391052900155e-06], ['handled,', 3.4019391052900155e-06], ['opt_problem::opt_problem', 3.4019391052900155e-06], ['dump_location_t', 3.4019391052900155e-06], ['&loc,', 3.4019391052900155e-06], ['*fmt,', 3.4019391052900155e-06], ['*ap)', 3.4019391052900155e-06], ['OPTINFO_KIND_FAILURE,', 3.4019391052900155e-06], ['current_pass)', 3.4019391052900155e-06], ['bothering', 3.4019391052900155e-06], ['singleton.', 3.4019391052900155e-06], ['s_the_problem;', 3.4019391052900155e-06], ['dump_context', 3.4019391052900155e-06], ['&dc', 3.4019391052900155e-06], ['dc.dump_loc', 3.4019391052900155e-06], ['loc.get_user_location', 3.4019391052900155e-06], ['dump_pretty_printer', 3.4019391052900155e-06], ['(&dump_context::get', 3.4019391052900155e-06], ['MSG_MISSED_OPTIMIZATION);', 3.4019391052900155e-06], ['i18n', 3.4019391052900155e-06], ['performed.', 3.4019391052900155e-06], ['Phases', 3.4019391052900155e-06], ['pp_format.', 3.4019391052900155e-06], ['pp_format', 3.4019391052900155e-06], ['Phase', 3.4019391052900155e-06], ['pp.emit_items', 3.4019391052900155e-06], ['(&m_optinfo);', 3.4019391052900155e-06], ['opt_problem::emit_and_clear', 3.4019391052900155e-06], ['s_the_problem);', 3.4019391052900155e-06], ['m_optinfo.emit_for_opt_problem', 3.4019391052900155e-06], ['*.', 3.4019391052900155e-06], ['*opt_problem::s_the_problem;', 3.4019391052900155e-06], ['twice,', 3.4019391052900155e-06], ['MSG_ALL_PRIORITIES);', 3.4019391052900155e-06], ['"success"', 3.4019391052900155e-06], ['(info,', 3.4019391052900155e-06], ['pre-canned', 3.4019391052900155e-06], ['("function_that_fails",', 3.4019391052900155e-06], ['(stmt)),', 3.4019391052900155e-06], ['static_cast', 3.4019391052900155e-06], ['("function_that_indirectly_fails",', 3.4019391052900155e-06], ['(!res)', 3.4019391052900155e-06], ['whilst', 3.4019391052900155e-06], ['considering', 3.4019391052900155e-06], ['notionally', 3.4019391052900155e-06], ['(as', 3.4019391052900155e-06], ['microcosm', 3.4019391052900155e-06], ['problematic', 3.4019391052900155e-06], ['test_opt_result_failure_at', 3.4019391052900155e-06], ['line_table_case', 3.4019391052900155e-06], ['&case_)', 3.4019391052900155e-06], ['line_table_test', 3.4019391052900155e-06], ['ltt', 3.4019391052900155e-06], ['(case_);', 3.4019391052900155e-06], ['*ord_map', 3.4019391052900155e-06], ['linemap_check_ordinary', 3.4019391052900155e-06], ['(linemap_add', 3.4019391052900155e-06], ['"test.c",', 3.4019391052900155e-06], ['100);', 3.4019391052900155e-06], ['"test.c:5:10".', 3.4019391052900155e-06], ['line_5', 3.4019391052900155e-06], ['Another', 3.4019391052900155e-06], ['"test.c:6:12".', 3.4019391052900155e-06], ['line_6', 3.4019391052900155e-06], ['linemap_position_for_line_and_column', 3.4019391052900155e-06], ['ord_map,', 3.4019391052900155e-06], ['12);', 3.4019391052900155e-06], ['(line_6', 3.4019391052900155e-06], ['LINE_MAP_MAX_LOCATION_WITH_COLS)', 3.4019391052900155e-06], ['"line_5"', 3.4019391052900155e-06], ['"line_6"', 3.4019391052900155e-06], ['*stmt_at_5', 3.4019391052900155e-06], ['(integer_one_node);', 3.4019391052900155e-06], ['(stmt_at_5,', 3.4019391052900155e-06], ['line_5);', 3.4019391052900155e-06], ['*stmt_at_6', 3.4019391052900155e-06], ['(integer_zero_node);', 3.4019391052900155e-06], ['(stmt_at_6,', 3.4019391052900155e-06], ['MSG_PRIORITY_INTERNALS', 3.4019391052900155e-06], ['MSG_PRIORITY_REEMITTED.', 3.4019391052900155e-06], ['MSG_PRIORITY_USER_FACING;', 3.4019391052900155e-06], ['MSG_PRIORITY_INTERNALS;', 3.4019391052900155e-06], ['filter);', 3.4019391052900155e-06], ['attempting', 3.4019391052900155e-06], ['"stmt_at_6".', 3.4019391052900155e-06], ['(stmt_at_6);', 3.4019391052900155e-06], ['"failure"', 3.4019391052900155e-06], ['"false"', 3.4019391052900155e-06], ['*problem', 3.4019391052900155e-06], ['res.get_problem', 3.4019391052900155e-06], ['(problem->get_dump_location', 3.4019391052900155e-06], ['(__GNUC__', 3.4019391052900155e-06], ['__GNUC_MINOR__', 3.4019391052900155e-06], ['captures', 3.4019391052900155e-06], ['dump_impl_location_t', 3.4019391052900155e-06], ['&impl_location', 3.4019391052900155e-06], ['problem->get_dump_location', 3.4019391052900155e-06], ['().get_impl_location', 3.4019391052900155e-06], ['(impl_location.m_function,', 3.4019391052900155e-06], ['"function_that_fails");', 3.4019391052900155e-06], ['problem->get_optinfo', 3.4019391052900155e-06], ['(info.get_dump_location', 3.4019391052900155e-06], ['(info.num_items', 3.4019391052900155e-06], ['ASSERT_IS_TREE', 3.4019391052900155e-06], ['UNKNOWN_LOCATION,', 3.4019391052900155e-06], ['"int");', 3.4019391052900155e-06], ['ASSERT_IS_GIMPLE', 3.4019391052900155e-06], ['line_6,', 3.4019391052900155e-06], ['"return', 3.4019391052900155e-06], ['...but', 3.4019391052900155e-06], ["dump_context's", 3.4019391052900155e-06], ['pending_optinfo.', 3.4019391052900155e-06], ['(tmp.get_pending_optinfo', 3.4019391052900155e-06], ['high-level', 3.4019391052900155e-06], ['summary', 3.4019391052900155e-06], ['message,', 3.4019391052900155e-06], ['problem.', 3.4019391052900155e-06], ['stmt_at_5,', 3.4019391052900155e-06], ['problem->emit_and_clear', 3.4019391052900155e-06], ['(when', 3.4019391052900155e-06], ['occurred).', 3.4019391052900155e-06], ['C++98).', 3.4019391052900155e-06], ['effective_filter', 3.4019391052900155e-06], ['MSG_PRIORITY_REEMITTED);', 3.4019391052900155e-06], ['MSG_PRIORITY_REEMITTED))', 3.4019391052900155e-06], ['-fopt-info-internals', 3.4019391052900155e-06], ['MSG_PRIORITY_INTERNALS)', 3.4019391052900155e-06], ['MSG_PRIORITY_REEMITTED)', 3.4019391052900155e-06], ['-fopt-info', 3.4019391052900155e-06], ['opt_problem_cc_tests', 3.4019391052900155e-06], ['for_each_line_table_case', 3.4019391052900155e-06], ['(test_opt_result_failure_at);', 3.4019391052900155e-06], ['"profile.h"', 3.4019391052900155e-06], ['"version.h"', 3.4019391052900155e-06], ['"context.h"', 3.4019391052900155e-06], ['"pass_manager.h"', 3.4019391052900155e-06], ['<zlib.h>', 3.4019391052900155e-06], ['optrecord_json_writer::optrecord_json_writer', 3.4019391052900155e-06], ['m_scopes', 3.4019391052900155e-06], ['metadata;', 3.4019391052900155e-06], ['toplev.c:', 3.4019391052900155e-06], ['print_version.', 3.4019391052900155e-06], ['*metadata', 3.4019391052900155e-06], ['(metadata);', 3.4019391052900155e-06], ['("format",', 3.4019391052900155e-06], ['("1"));', 3.4019391052900155e-06], ['*generator', 3.4019391052900155e-06], ['("generator",', 3.4019391052900155e-06], ['generator);', 3.4019391052900155e-06], ['(lang_hooks.name));', 3.4019391052900155e-06], ['("pkgversion",', 3.4019391052900155e-06], ['(pkgversion_string));', 3.4019391052900155e-06], ['("version",', 3.4019391052900155e-06], ['(version_string));', 3.4019391052900155e-06], ['TARGET_NAME', 3.4019391052900155e-06], ['Makefile.', 3.4019391052900155e-06], ['(TARGET_NAME));', 3.4019391052900155e-06], ['command-line?', 3.4019391052900155e-06], ['gen_producer_string', 3.4019391052900155e-06], ['dwarf2out.c', 3.4019391052900155e-06], ['(currently', 3.4019391052900155e-06], ['static).', 3.4019391052900155e-06], ['"any', 3.4019391052900155e-06], ['plugins?"', 3.4019391052900155e-06], ['plugins', 3.4019391052900155e-06], ['themselves).', 3.4019391052900155e-06], ['*passes', 3.4019391052900155e-06], ['(passes);', 3.4019391052900155e-06], ['DEF_PASS_LIST(LIST)', 3.4019391052900155e-06], ['(passes,', 3.4019391052900155e-06], ['g->get_passes', 3.4019391052900155e-06], ['()->LIST);', 3.4019391052900155e-06], ['GCC_PASS_LISTS', 3.4019391052900155e-06], ['DEF_PASS_LIST', 3.4019391052900155e-06], ['*records', 3.4019391052900155e-06], ['optrecord_json_writer::~optrecord_json_writer', 3.4019391052900155e-06], ['m_root_tuple;', 3.4019391052900155e-06], ['optrecord_json_writer::write', 3.4019391052900155e-06], ['m_root_tuple->print', 3.4019391052900155e-06], ['(dump_base_name,', 3.4019391052900155e-06], ['".opt-record.json.gz",', 3.4019391052900155e-06], ['gzFile', 3.4019391052900155e-06], ['outfile', 3.4019391052900155e-06], ['gzopen', 3.4019391052900155e-06], ['"w");', 3.4019391052900155e-06], ['(outfile', 3.4019391052900155e-06], ['records",', 3.4019391052900155e-06], ['info?', 3.4019391052900155e-06], ['(gzputs', 3.4019391052900155e-06], ['(&pp))', 3.4019391052900155e-06], ['gzerror', 3.4019391052900155e-06], ['&tmp));', 3.4019391052900155e-06], ['cleanup:', 3.4019391052900155e-06], ['(gzclose', 3.4019391052900155e-06], ['Z_OK)', 3.4019391052900155e-06], ['(!emitted_error)', 3.4019391052900155e-06], ['closing', 3.4019391052900155e-06], ['(filename);', 3.4019391052900155e-06], ['OPTINFO', 3.4019391052900155e-06], ['optinfo_to_json', 3.4019391052900155e-06], ['(optinfo);', 3.4019391052900155e-06], ['add_record', 3.4019391052900155e-06], ['Potentially', 3.4019391052900155e-06], ['OPTINFO_KIND_SCOPE)', 3.4019391052900155e-06], ['*children', 3.4019391052900155e-06], ['children);', 3.4019391052900155e-06], ['(children);', 3.4019391052900155e-06], ['optrecord_json_writer.', 3.4019391052900155e-06], ['OBJ', 3.4019391052900155e-06], ['(json::object', 3.4019391052900155e-06], ['*obj)', 3.4019391052900155e-06], ['m_scopes[m_scopes.length', 3.4019391052900155e-06], ['1]->append', 3.4019391052900155e-06], ['optrecord_json_writer::pop_scope', 3.4019391052900155e-06], ['m_scopes.pop', 3.4019391052900155e-06], ['optrecord_json_writer::impl_location_to_json', 3.4019391052900155e-06], ['(dump_impl_location_t', 3.4019391052900155e-06], ['(loc.m_file));', 3.4019391052900155e-06], ['(loc.m_line));', 3.4019391052900155e-06], ['(loc.m_function)', 3.4019391052900155e-06], ['(loc.m_function));', 3.4019391052900155e-06], ['optrecord_json_writer::location_to_json', 3.4019391052900155e-06], ['(loc)', 3.4019391052900155e-06], ['COUNT.', 3.4019391052900155e-06], ['optrecord_json_writer::profile_count_to_json', 3.4019391052900155e-06], ['(profile_count', 3.4019391052900155e-06], ['("value",', 3.4019391052900155e-06], ['(count.to_gcov_type', 3.4019391052900155e-06], ['("quality",', 3.4019391052900155e-06], ['(profile_quality_as_string', 3.4019391052900155e-06], ['(count.quality', 3.4019391052900155e-06], ['())));', 3.4019391052900155e-06], ['records.', 3.4019391052900155e-06], ['optrecord_json_writer::get_id_value_for_pass', 3.4019391052900155e-06], ['host-dependent,', 3.4019391052900155e-06], ['pp_pointer', 3.4019391052900155e-06], ['static_cast<void', 3.4019391052900155e-06], ['PASS.', 3.4019391052900155e-06], ['optrecord_json_writer::pass_to_json', 3.4019391052900155e-06], ['(pass->type)', 3.4019391052900155e-06], ['GIMPLE_PASS:', 3.4019391052900155e-06], ['"gimple";', 3.4019391052900155e-06], ['RTL_PASS:', 3.4019391052900155e-06], ['"rtl";', 3.4019391052900155e-06], ['SIMPLE_IPA_PASS:', 3.4019391052900155e-06], ['"simple_ipa";', 3.4019391052900155e-06], ['IPA_PASS:', 3.4019391052900155e-06], ['"ipa";', 3.4019391052900155e-06], ['("id",', 3.4019391052900155e-06], ['("type",', 3.4019391052900155e-06], ['(pass->name));', 3.4019391052900155e-06], ['Represent', 3.4019391052900155e-06], ['optgroup', 3.4019391052900155e-06], ['*optgroups', 3.4019391052900155e-06], ['("optgroups",', 3.4019391052900155e-06], ['optgroups);', 3.4019391052900155e-06], ['kv_pair<optgroup_flags_t>', 3.4019391052900155e-06], ['*optgroup', 3.4019391052900155e-06], ['optgroup_options;', 3.4019391052900155e-06], ['optgroup->name', 3.4019391052900155e-06], ['optgroup++)', 3.4019391052900155e-06], ['(optgroup->value', 3.4019391052900155e-06], ['OPTGROUP_ALL', 3.4019391052900155e-06], ['(pass->optinfo_flags', 3.4019391052900155e-06], ['optgroup->value))', 3.4019391052900155e-06], ['optgroups->append', 3.4019391052900155e-06], ['(optgroup->name));', 3.4019391052900155e-06], ['("num",', 3.4019391052900155e-06], ['(pass->static_pass_number));', 3.4019391052900155e-06], ['lhd_print_error_function', 3.4019391052900155e-06], ['cp_print_error_function.', 3.4019391052900155e-06], ['optrecord_json_writer::inlining_chain_to_json', 3.4019391052900155e-06], ['*array', 3.4019391052900155e-06], ['LOCATION_BLOCK', 3.4019391052900155e-06], ['(abstract_origin)', 3.4019391052900155e-06], ['*locus;', 3.4019391052900155e-06], ['abstract_origin;', 3.4019391052900155e-06], ['locus', 3.4019391052900155e-06], ['&BLOCK_SOURCE_LOCATION', 3.4019391052900155e-06], ['ao', 3.4019391052900155e-06], ['ao;', 3.4019391052900155e-06], ['*printable_name', 3.4019391052900155e-06], ['lang_hooks.decl_printable_name', 3.4019391052900155e-06], ['("fndecl",', 3.4019391052900155e-06], ['(printable_name));', 3.4019391052900155e-06], ['(*locus)', 3.4019391052900155e-06], ['("site",', 3.4019391052900155e-06], ['(*locus));', 3.4019391052900155e-06], ['array->append', 3.4019391052900155e-06], ['array;', 3.4019391052900155e-06], ['OPTINFO.', 3.4019391052900155e-06], ['optrecord_json_writer::optinfo_to_json', 3.4019391052900155e-06], ['("impl_location",', 3.4019391052900155e-06], ['impl_location_to_json', 3.4019391052900155e-06], ['(optinfo->get_impl_location', 3.4019391052900155e-06], ['*kind_str', 3.4019391052900155e-06], ['(kind_str));', 3.4019391052900155e-06], ['*message', 3.4019391052900155e-06], ['message);', 3.4019391052900155e-06], ['optinfo->num_items', 3.4019391052900155e-06], ['*item', 3.4019391052900155e-06], ['optinfo->get_item', 3.4019391052900155e-06], ['(item->get_kind', 3.4019391052900155e-06], ['OPTINFO_ITEM_KIND_TEXT:', 3.4019391052900155e-06], ['OPTINFO_ITEM_KIND_TREE:', 3.4019391052900155e-06], ['("expr",', 3.4019391052900155e-06], ['OPTINFO_ITEM_KIND_GIMPLE:', 3.4019391052900155e-06], ['("stmt",', 3.4019391052900155e-06], ['OPTINFO_ITEM_KIND_SYMTAB_NODE:', 3.4019391052900155e-06], ['("symtab_node",', 3.4019391052900155e-06], ['("pass",', 3.4019391052900155e-06], ['profile_count', 3.4019391052900155e-06], ['optinfo->get_count', 3.4019391052900155e-06], ['(count.initialized_p', 3.4019391052900155e-06], ['("count",', 3.4019391052900155e-06], ['profile_count_to_json', 3.4019391052900155e-06], ['(count));', 3.4019391052900155e-06], ['UNKNOWN_LOCATION', 3.4019391052900155e-06], ['optinfo->get_location_t', 3.4019391052900155e-06], ['(get_pure_location', 3.4019391052900155e-06], ['TOOD:', 3.4019391052900155e-06], ['(just', 3.4019391052900155e-06], ['caret', 3.4019391052900155e-06], ['now)', 3.4019391052900155e-06], ['start/finish', 3.4019391052900155e-06], ['also?', 3.4019391052900155e-06], ['*fnname', 3.4019391052900155e-06], ['(current_function_decl));', 3.4019391052900155e-06], ['(fnname));', 3.4019391052900155e-06], ['(loc', 3.4019391052900155e-06], ['("inlining_chain",', 3.4019391052900155e-06], ['inlining_chain_to_json', 3.4019391052900155e-06], ['siblings', 3.4019391052900155e-06], ['ARR,', 3.4019391052900155e-06], ['(adding', 3.4019391052900155e-06], ['descriptions', 3.4019391052900155e-06], ['array).', 3.4019391052900155e-06], ['optrecord_json_writer::add_pass_list', 3.4019391052900155e-06], ['(json::array', 3.4019391052900155e-06], ['*arr,', 3.4019391052900155e-06], ['*pass_obj', 3.4019391052900155e-06], ['pass_to_json', 3.4019391052900155e-06], ['arr->append', 3.4019391052900155e-06], ['(pass_obj);', 3.4019391052900155e-06], ['(pass->sub)', 3.4019391052900155e-06], ['*sub', 3.4019391052900155e-06], ['pass_obj->set', 3.4019391052900155e-06], ['(sub,', 3.4019391052900155e-06], ['pass->sub);', 3.4019391052900155e-06], ['pass->next;', 3.4019391052900155e-06], ['dump_*', 3.4019391052900155e-06], ['(true,', 3.4019391052900155e-06], ['MSG_NOTE);', 3.4019391052900155e-06], ['"test', 3.4019391052900155e-06], ['dump_generic_expr', 3.4019391052900155e-06], ['TDF_SLIM,', 3.4019391052900155e-06], ['(info->num_items', 3.4019391052900155e-06], ['optrecord_json_writer', 3.4019391052900155e-06], ['writer;', 3.4019391052900155e-06], ['*json_obj', 3.4019391052900155e-06], ['writer.optinfo_to_json', 3.4019391052900155e-06], ['(json_obj', 3.4019391052900155e-06], ['json_obj->print', 3.4019391052900155e-06], ['*json_str', 3.4019391052900155e-06], ['"impl_location");', 3.4019391052900155e-06], ['"\\"kind\\":', 3.4019391052900155e-06], ['\\"note\\"");', 3.4019391052900155e-06], ['"\\"message\\":', 3.4019391052900155e-06], ['[\\"test', 3.4019391052900155e-06], ['\\",', 3.4019391052900155e-06], ['{\\"expr\\":', 3.4019391052900155e-06], ['\\"0\\"}]");', 3.4019391052900155e-06], ['json_obj;', 3.4019391052900155e-06], ['optinfo_emit_json_cc_tests', 3.4019391052900155e-06], ['Optimization', 3.4019391052900155e-06], ['TEXT.', 3.4019391052900155e-06], ['optinfo_item::optinfo_item', 3.4019391052900155e-06], ['optinfo_item_kind', 3.4019391052900155e-06], ['*text)', 3.4019391052900155e-06], ['(kind),', 3.4019391052900155e-06], ['m_location', 3.4019391052900155e-06], ['(location),', 3.4019391052900155e-06], ['m_text', 3.4019391052900155e-06], ['(text)', 3.4019391052900155e-06], ['optinfo_item::~optinfo_item', 3.4019391052900155e-06], ['(m_text);', 3.4019391052900155e-06], ['"success";', 3.4019391052900155e-06], ['"failure";', 3.4019391052900155e-06], ['"note";', 3.4019391052900155e-06], ['"scope";', 3.4019391052900155e-06], ['optinfo::~optinfo', 3.4019391052900155e-06], ['Cleanup.', 3.4019391052900155e-06], ['item;', 3.4019391052900155e-06], ['ITEM', 3.4019391052900155e-06], ['optinfo::add_item', 3.4019391052900155e-06], ['(optinfo_item', 3.4019391052900155e-06], ['*item)', 3.4019391052900155e-06], ['m_items.safe_push', 3.4019391052900155e-06], ['MSG_*', 3.4019391052900155e-06], ['MSG_OPTIMIZED_LOCATIONS;', 3.4019391052900155e-06], ['MSG_MISSED_OPTIMIZATION;', 3.4019391052900155e-06], ['MSG_NOTE;', 3.4019391052900155e-06], ['*and*', 3.4019391052900155e-06], ['optinfo::emit_for_opt_problem', 3.4019391052900155e-06], ['(get_kind', 3.4019391052900155e-06], ['().dump_loc_immediate', 3.4019391052900155e-06], ['(dump_kind,', 3.4019391052900155e-06], ['get_user_location', 3.4019391052900155e-06], ['().emit_item', 3.4019391052900155e-06], ['(item,', 3.4019391052900155e-06], ['dump_kind);', 3.4019391052900155e-06], ['().emit_optinfo', 3.4019391052900155e-06], ['DUMP_KIND.', 3.4019391052900155e-06], ['optinfo::handle_dump_file_kind', 3.4019391052900155e-06], ['dump_kind)', 3.4019391052900155e-06], ['"scope"', 3.4019391052900155e-06], ['(m_kind', 3.4019391052900155e-06], ['OPTINFO_KIND_SCOPE);', 3.4019391052900155e-06], ['MSG_OPTIMIZED_LOCATIONS)', 3.4019391052900155e-06], ['OPTINFO_KIND_SUCCESS;', 3.4019391052900155e-06], ['MSG_MISSED_OPTIMIZATION)', 3.4019391052900155e-06], ['OPTINFO_KIND_FAILURE;', 3.4019391052900155e-06], ['MSG_NOTE)', 3.4019391052900155e-06], ['OPTINFO_KIND_NOTE;', 3.4019391052900155e-06], ['preserved).', 3.4019391052900155e-06], ['optinfo_wants_inlining_info_p', 3.4019391052900155e-06], ['().optimization_records_enabled_p', 3.4019391052900155e-06], ['Platform-independent', 3.4019391052900155e-06], ['Alexander', 3.4019391052900155e-06], ['Monakov.', 3.4019391052900155e-06], ['cases:', 3.4019391052900155e-06], ['signature-compatible', 3.4019391052900155e-06], ['qsort,', 3.4019391052900155e-06], ['relaxed', 3.4019391052900155e-06], ['contract:', 3.4019391052900155e-06], ['stable)', 3.4019391052900155e-06], ['fast,', 3.4019391052900155e-06], ['(0-5', 3.4019391052900155e-06], ['trading', 3.4019391052900155e-06], ['mispredictions.', 3.4019391052900155e-06], ['GENERATOR_FILE', 3.4019391052900155e-06], ['"bconfig.h"', 3.4019391052900155e-06], ['likely(cond)', 3.4019391052900155e-06], ['((cond),', 3.4019391052900155e-06], ['((__noinline__))', 3.4019391052900155e-06], ['qsort', 3.4019391052900155e-06], ['read-mostly', 3.4019391052900155e-06], ['(read-only', 3.4019391052900155e-06], ['netsort)', 3.4019391052900155e-06], ['*cmp;', 3.4019391052900155e-06], ['*out;', 3.4019391052900155e-06], ['nlim;', 3.4019391052900155e-06], ['Permute,', 3.4019391052900155e-06], ['in-place,', 3.4019391052900155e-06], ['elements,', 3.4019391052900155e-06], ['C->OUT', 3.4019391052900155e-06], ['C->SIZE,', 3.4019391052900155e-06], ['REORDER_23(TYPE,', 3.4019391052900155e-06], ['2*STRIDE,', 3.4019391052900155e-06], ['reorder23,', 3.4019391052900155e-06], ['permute', 3.4019391052900155e-06], ['*e2,', 3.4019391052900155e-06], ['*e3,', 3.4019391052900155e-06], ['*e4)', 3.4019391052900155e-06], ['REORDER_45(TYPE,', 3.4019391052900155e-06], ['t3;', 3.4019391052900155e-06], ['(&t2,', 3.4019391052900155e-06], ['(&t3,', 3.4019391052900155e-06], ['4*STRIDE,', 3.4019391052900155e-06], ['e4', 3.4019391052900155e-06], ['&t2,', 3.4019391052900155e-06], ['&t3,', 3.4019391052900155e-06], ['(likely(c->size', 3.4019391052900155e-06], ['Invoke', 3.4019391052900155e-06], ['E0^E1', 3.4019391052900155e-06], ['growth', 3.4019391052900155e-06], ['confine', 3.4019391052900155e-06], ['invocation', 3.4019391052900155e-06], ['site,', 3.4019391052900155e-06], ['assisting', 3.4019391052900155e-06], ['prediction.', 3.4019391052900155e-06], ['(intptr_t)e0', 3.4019391052900155e-06], ['(intptr_t)e1;', 3.4019391052900155e-06], ['(cmp', 3.4019391052900155e-06], ['31);', 3.4019391052900155e-06], ['C->OUT.', 3.4019391052900155e-06], ['*c)', 3.4019391052900155e-06], ['CMP(e0,', 3.4019391052900155e-06], ['c->cmp);', 3.4019391052900155e-06], ['*)((intptr_t)e0', 3.4019391052900155e-06], ['*)((intptr_t)e1', 3.4019391052900155e-06], ['*e1', 3.4019391052900155e-06], ['*e2', 3.4019391052900155e-06], ['*e3', 3.4019391052900155e-06], ['*e4', 3.4019391052900155e-06], ['(e3,', 3.4019391052900155e-06], ['OUT,', 3.4019391052900155e-06], ['TMP', 3.4019391052900155e-06], ['*out,', 3.4019391052900155e-06], ['*tmp)', 3.4019391052900155e-06], ['c->nlim))', 3.4019391052900155e-06], ['c->n', 3.4019391052900155e-06], ['nr', 3.4019391052900155e-06], ['*mid', 3.4019391052900155e-06], ['*r', 3.4019391052900155e-06], ['*l', 3.4019391052900155e-06], ['outputting', 3.4019391052900155e-06], ['(mid,', 3.4019391052900155e-06], ['nr,', 3.4019391052900155e-06], ['OUT', 3.4019391052900155e-06], ['free.', 3.4019391052900155e-06], ['mid);', 3.4019391052900155e-06], ['halves', 3.4019391052900155e-06], ['L,', 3.4019391052900155e-06], ['[OUT,', 3.4019391052900155e-06], ['END).', 3.4019391052900155e-06], ['MERGE_ELTSIZE(SIZE)', 3.4019391052900155e-06], ['c->cmp', 3.4019391052900155e-06], ['31;', 3.4019391052900155e-06], ['(intptr_t)r;', 3.4019391052900155e-06], ['(lr', 3.4019391052900155e-06], ['mr);', 3.4019391052900155e-06], ['*)memcpy', 3.4019391052900155e-06], ['*)lr,', 3.4019391052900155e-06], ['SIZE);', 3.4019391052900155e-06], ['~mr', 3.4019391052900155e-06], ['(c->cmp(r,', 3.4019391052900155e-06], ['c->size)', 3.4019391052900155e-06], ['(size_t)', 3.4019391052900155e-06], ['8))', 3.4019391052900155e-06], ['4))', 3.4019391052900155e-06], ['(c->size);', 3.4019391052900155e-06], ['out);', 3.4019391052900155e-06], ['(ssize_t)', 3.4019391052900155e-06], ['(stable)', 3.4019391052900155e-06], ['~size;', 3.4019391052900155e-06], ['*)vbase;', 3.4019391052900155e-06], ['{cmp,', 3.4019391052900155e-06], ['nlim};', 3.4019391052900155e-06], ['scratch[32];', 3.4019391052900155e-06], ['xmalloc', 3.4019391052900155e-06], ['(bufsz);', 3.4019391052900155e-06], ['&c,', 3.4019391052900155e-06], ['*)buf);', 3.4019391052900155e-06], ['(buf', 3.4019391052900155e-06], ['scratch)', 3.4019391052900155e-06], ['qsort_chk', 3.4019391052900155e-06], ['gcc_stablesort', 3.4019391052900155e-06], ['~size,', 3.4019391052900155e-06], ['Unit', 3.4019391052900155e-06], ['unique-ptr.h.', 3.4019391052900155e-06], ['ctor_count', 3.4019391052900155e-06], ['dtor_count', 3.4019391052900155e-06], ['ctor_count;', 3.4019391052900155e-06], ['dtor_count;', 3.4019391052900155e-06], ['"stats"', 3.4019391052900155e-06], ['(stats', 3.4019391052900155e-06], ['&s)', 3.4019391052900155e-06], ['m_s', 3.4019391052900155e-06], ['++m_s.ctor_count;', 3.4019391052900155e-06], ['~foo', 3.4019391052900155e-06], ['++m_s.dtor_count;', 3.4019391052900155e-06], ['example_method', 3.4019391052900155e-06], ['foo&);', 3.4019391052900155e-06], ['&m_s;', 3.4019391052900155e-06], ['unique_ptr<T[]>.', 3.4019391052900155e-06], ['m_field', 3.4019391052900155e-06], ['(42)', 3.4019391052900155e-06], ['m_field;', 3.4019391052900155e-06], ['unique_xmalloc_ptr.', 3.4019391052900155e-06], ['ptrs', 3.4019391052900155e-06], ['gnu::unique_ptr<void', 3.4019391052900155e-06], ['p);', 3.4019391052900155e-06], ['gnu::unique_xmalloc_ptr<void', 3.4019391052900155e-06], ['q);', 3.4019391052900155e-06], ['deletion', 3.4019391052900155e-06], ['unique_ptr', 3.4019391052900155e-06], ['2nd', 3.4019391052900155e-06], ["unique_ptr's", 3.4019391052900155e-06], ['f->example_method', 3.4019391052900155e-06], ['(*f).example_method', 3.4019391052900155e-06], ['f.get', 3.4019391052900155e-06], ['gnu::unique_ptr', 3.4019391052900155e-06], ['T[]', 3.4019391052900155e-06], ['gnu::unique_ptr<has_default_ctor[]>', 3.4019391052900155e-06], ['has_default_ctor[num]);', 3.4019391052900155e-06], ['works,', 3.4019391052900155e-06], ['p[i].m_field);', 3.4019391052900155e-06], ['gnu::unique_xmalloc_ptr<dummy>', 3.4019391052900155e-06], ['(XNEW', 3.4019391052900155e-06], ['(dummy));', 3.4019391052900155e-06], ['T[].', 3.4019391052900155e-06], ['gnu::unique_xmalloc_ptr<dummy[]>', 3.4019391052900155e-06], ['(XNEWVEC', 3.4019391052900155e-06], ['num));', 3.4019391052900155e-06], ['p[i].field', 3.4019391052900155e-06], ['p[i].field);', 3.4019391052900155e-06], ['unique_ptr_tests_cc_tests', 3.4019391052900155e-06], ['Printing', 3.4019391052900155e-06], ['*buf,', 3.4019391052900155e-06], ['(wi))', 3.4019391052900155e-06], ['"-"', 3.4019391052900155e-06], ['-(unsigned', 3.4019391052900155e-06], ['HOST_WIDE_INT_PRINT_DEC,', 3.4019391052900155e-06], ['!wi::neg_p', 3.4019391052900155e-06], ['(wi)))', 3.4019391052900155e-06], ['"0x0");', 3.4019391052900155e-06], ['"0x");', 3.4019391052900155e-06], ['ROUND_DOWN', 3.4019391052900155e-06], ['(val.get_precision', 3.4019391052900155e-06], ['wi::extract_uhwi', 3.4019391052900155e-06], ['(!first_p)', 3.4019391052900155e-06], ['HOST_WIDE_INT_PRINT_PADDED_HEX,', 3.4019391052900155e-06], ['(uhwi', 3.4019391052900155e-06], ['HOST_WIDE_INT_PRINT_HEX_PURE,', 3.4019391052900155e-06], ['FILE.', 3.4019391052900155e-06], ['assemblers', 3.4019391052900155e-06], ['modes.', 3.4019391052900155e-06], ['"wide-int-range.h"', 3.4019391052900155e-06], ['Wrapper', 3.4019391052900155e-06], ['undefined),', 3.4019391052900155e-06], ['VAL1', 3.4019391052900155e-06], ['VAL2.', 3.4019391052900155e-06], ['*RES.', 3.4019391052900155e-06], ['indeterminate.', 3.4019391052900155e-06], ['wide_int_binop_overflow', 3.4019391052900155e-06], ['&res,', 3.4019391052900155e-06], ['(!wide_int_binop', 3.4019391052900155e-06], ['(res,', 3.4019391052900155e-06], ['w0,', 3.4019391052900155e-06], ['&overflow))', 3.4019391052900155e-06], ['overflowed', 3.4019391052900155e-06], ['multiplication,', 3.4019391052900155e-06], ['w0.sign_mask', 3.4019391052900155e-06], ['w1.sign_mask', 3.4019391052900155e-06], ['TRUNC_DIV_EXPR:', 3.4019391052900155e-06], ['FLOOR_DIV_EXPR:', 3.4019391052900155e-06], ['CEIL_DIV_EXPR:', 3.4019391052900155e-06], ['EXACT_DIV_EXPR:', 3.4019391052900155e-06], ['ROUND_DIV_EXPR:', 3.4019391052900155e-06], ['+INF.', 3.4019391052900155e-06], ['!overflow;', 3.4019391052900155e-06], ['unset,', 3.4019391052900155e-06], ['wide_int_range_set_zero_nonzero_bits', 3.4019391052900155e-06], ['(signop', 3.4019391052900155e-06], ['&may_be_nonzero,', 3.4019391052900155e-06], ['&must_be_nonzero)', 3.4019391052900155e-06], ['lb;', 3.4019391052900155e-06], ['may_be_nonzero;', 3.4019391052900155e-06], ['(ub,', 3.4019391052900155e-06], ['xor_mask', 3.4019391052900155e-06], ['(xor_mask', 3.4019391052900155e-06], ['(wi::floor_log2', 3.4019391052900155e-06], ['(xor_mask),', 3.4019391052900155e-06], ['may_be_nonzero.get_precision', 3.4019391052900155e-06], ['(must_be_nonzero,', 3.4019391052900155e-06], ['(w0/w1,', 3.4019391052900155e-06], ['w2/w3)', 3.4019391052900155e-06], ['MIN/MAX', 3.4019391052900155e-06], ['&w2,', 3.4019391052900155e-06], ['&w3,', 3.4019391052900155e-06], ['w0,w1', 3.4019391052900155e-06], ['w2,w3.', 3.4019391052900155e-06], ['w1);', 3.4019391052900155e-06], ['w3);', 3.4019391052900155e-06], ['w2,', 3.4019391052900155e-06], ['(w1,', 3.4019391052900155e-06], ['(VR0', 3.4019391052900155e-06], ['VR1)', 3.4019391052900155e-06], ['SIGN.', 3.4019391052900155e-06], ['OVERFLOW_UNDEFINED', 3.4019391052900155e-06], ['product.', 3.4019391052900155e-06], ['cp4;', 3.4019391052900155e-06], ['bailing', 3.4019391052900155e-06], ['(cp1,', 3.4019391052900155e-06], ['cp3', 3.4019391052900155e-06], ['(cp3,', 3.4019391052900155e-06], ['cp2', 3.4019391052900155e-06], ['(cp2,', 3.4019391052900155e-06], ['cp4', 3.4019391052900155e-06], ['cp2;', 3.4019391052900155e-06], ['(cp4,', 3.4019391052900155e-06], ['cp4,', 3.4019391052900155e-06], ['TYPE_OVERFLOW_WRAPS:', 3.4019391052900155e-06], ['[MIN0,', 3.4019391052900155e-06], ['MAX0]', 3.4019391052900155e-06], ['[MIN1,', 3.4019391052900155e-06], ['MAX1]', 3.4019391052900155e-06], ['fancy', 3.4019391052900155e-06], ['drop', 3.4019391052900155e-06], ['[-3,-1]*[-3,-1].', 3.4019391052900155e-06], ['&min0_,', 3.4019391052900155e-06], ['&max0_,', 3.4019391052900155e-06], ['&min1_,', 3.4019391052900155e-06], ['&max1_)', 3.4019391052900155e-06], ['Therefore,', 3.4019391052900155e-06], ['PREC2.', 3.4019391052900155e-06], ['everthing', 3.4019391052900155e-06], ['were.', 3.4019391052900155e-06], ['(min0_,', 3.4019391052900155e-06], ['(max0_,', 3.4019391052900155e-06], ['(min1_,', 3.4019391052900155e-06], ['(max1_,', 3.4019391052900155e-06], ['<widest2_int>', 3.4019391052900155e-06], ['Canonicalize', 3.4019391052900155e-06], ['intervals.', 3.4019391052900155e-06], ['max0))', 3.4019391052900155e-06], ['max1))', 3.4019391052900155e-06], ['prod1', 3.4019391052900155e-06], ['prod3.', 3.4019391052900155e-06], ['min0min1', 3.4019391052900155e-06], ['max0max1', 3.4019391052900155e-06], ['min0max1', 3.4019391052900155e-06], ['max0min1', 3.4019391052900155e-06], ['(prod1', 3.4019391052900155e-06], ['prod2)', 3.4019391052900155e-06], ['(prod1,', 3.4019391052900155e-06], ['prod2);', 3.4019391052900155e-06], ['prod1)', 3.4019391052900155e-06], ['prod1);', 3.4019391052900155e-06], ['(prod2', 3.4019391052900155e-06], ['min.', 3.4019391052900155e-06], ['prod0;', 3.4019391052900155e-06], ['(wi::geu_p', 3.4019391052900155e-06], ['sizem1))', 3.4019391052900155e-06], ['covers', 3.4019391052900155e-06], ['res_lb', 3.4019391052900155e-06], ['res_ub', 3.4019391052900155e-06], ['(prod3,', 3.4019391052900155e-06], ['.CODE.', 3.4019391052900155e-06], ['!TYPE_OVERFLOW_UNDEFINED,', 3.4019391052900155e-06], ['Multiplications,', 3.4019391052900155e-06], ['divisions', 3.4019391052900155e-06], ['mix', 3.4019391052900155e-06], ['variations', 3.4019391052900155e-06], ['compare_values', 3.4019391052900155e-06], ['convoluted.', 3.4019391052900155e-06], ['(MIN0', 3.4019391052900155e-06], ['MIN1,', 3.4019391052900155e-06], ['MIN0', 3.4019391052900155e-06], ['MAX1,', 3.4019391052900155e-06], ['MIN1', 3.4019391052900155e-06], ['MAX1)', 3.4019391052900155e-06], ['!overflow_undefined)', 3.4019391052900155e-06], ['vr1_ub);', 3.4019391052900155e-06], ['wide_int_range_lshift', 3.4019391052900155e-06], ['multiplies.', 3.4019391052900155e-06], ['vr1_ub.to_uhwi', 3.4019391052900155e-06], ['(shift,', 3.4019391052900155e-06], ['/*overflow_undefined=*/false);', 3.4019391052900155e-06], ['vr1_ub.to_shwi', 3.4019391052900155e-06], ['HOST_BITS_PER_WIDE_INT,', 3.4019391052900155e-06], ['llshift', 3.4019391052900155e-06], ['vr1.max', 3.4019391052900155e-06], ['vr1', 3.4019391052900155e-06], ['LSHIFT_EXPR', 3.4019391052900155e-06], ['if-clause.', 3.4019391052900155e-06], ['(bound_shift,', 3.4019391052900155e-06], ['~(bound', 3.4019391052900155e-06], ['low_bound,', 3.4019391052900155e-06], ['high_bound;', 3.4019391052900155e-06], ['low_bound))', 3.4019391052900155e-06], ['[5,', 3.4019391052900155e-06], ['6]', 3.4019391052900155e-06], ['[10,', 3.4019391052900155e-06], ['24].', 3.4019391052900155e-06], ['(high_bound,', 3.4019391052900155e-06], ['[0xffffff00,', 3.4019391052900155e-06], ['0xffffffff]', 3.4019391052900155e-06], ['[0xfffffc00,', 3.4019391052900155e-06], ['0xfffffffe].', 3.4019391052900155e-06], ['[-1,', 3.4019391052900155e-06], ['[-4,', 3.4019391052900155e-06], ['4].', 3.4019391052900155e-06], ['high_bound)', 3.4019391052900155e-06], ['wi::lts_p', 3.4019391052900155e-06], ['(low_bound,', 3.4019391052900155e-06], ['monotomically.', 3.4019391052900155e-06], ['(in_bounds)', 3.4019391052900155e-06], ['LSHIFT_EXPR,', 3.4019391052900155e-06], ['Basically,', 3.4019391052900155e-06], ['optimize:', 3.4019391052900155e-06], ['[LB', 3.4019391052900155e-06], ['UB', 3.4019391052900155e-06], ['Z]', 3.4019391052900155e-06], ['folding', 3.4019391052900155e-06], ['wide_int_range_can_optimize_bit_op', 3.4019391052900155e-06], ['not)', 3.4019391052900155e-06], ['n))', 3.4019391052900155e-06], ['(y', 3.4019391052900155e-06], ['n)).', 3.4019391052900155e-06], ['~w;', 3.4019391052900155e-06], ['(w);', 3.4019391052900155e-06], ['~(w', 3.4019391052900155e-06], ['(w)', 3.4019391052900155e-06], ['new_mask', 3.4019391052900155e-06], ['((new_mask', 3.4019391052900155e-06], ['lb)', 3.4019391052900155e-06], ['(new_mask', 3.4019391052900155e-06], ['wide_int_range_optimize_bit_op.', 3.4019391052900155e-06], ['ranges.', 3.4019391052900155e-06], ['wide_int_range_get_mask_and_bounds', 3.4019391052900155e-06], ['&mask,', 3.4019391052900155e-06], ['&lower_bound,', 3.4019391052900155e-06], ['&upper_bound,', 3.4019391052900155e-06], ['vr0_max))', 3.4019391052900155e-06], ['vr1_max;', 3.4019391052900155e-06], ['(BIT_AND_EXPR', 3.4019391052900155e-06], ['wide_int_range_optimize_bit_op', 3.4019391052900155e-06], ['BIT_IOR_EXPR);', 3.4019391052900155e-06], ['(!wide_int_range_get_mask_and_bounds', 3.4019391052900155e-06], ['(mask,', 3.4019391052900155e-06], ['(wide_int_range_can_optimize_bit_op', 3.4019391052900155e-06], ['ovf;', 3.4019391052900155e-06], ['(res_ub,', 3.4019391052900155e-06], ['XOR', 3.4019391052900155e-06], ['wide_int_range_bit_xor', 3.4019391052900155e-06], ['result_zero_bits', 3.4019391052900155e-06], ['((must_be_nonzero0', 3.4019391052900155e-06], ['must_be_nonzero1)', 3.4019391052900155e-06], ['~(may_be_nonzero0', 3.4019391052900155e-06], ['may_be_nonzero1));', 3.4019391052900155e-06], ['result_one_bits', 3.4019391052900155e-06], ['(wi::bit_and_not', 3.4019391052900155e-06], ['(must_be_nonzero0,', 3.4019391052900155e-06], ['may_be_nonzero1)', 3.4019391052900155e-06], ['(must_be_nonzero1,', 3.4019391052900155e-06], ['may_be_nonzero0));', 3.4019391052900155e-06], ['~result_zero_bits;', 3.4019391052900155e-06], ['result_one_bits;', 3.4019391052900155e-06], ['IOR', 3.4019391052900155e-06], ['wide_int_range_bit_ior', 3.4019391052900155e-06], ['BIT_IOR_EXPR,', 3.4019391052900155e-06], ['minima.', 3.4019391052900155e-06], ['wide_int_range_bit_and', 3.4019391052900155e-06], ['BIT_AND_EXPR,', 3.4019391052900155e-06], ['maxima.', 3.4019391052900155e-06], ['PR68217:', 3.4019391052900155e-06], ['sign-bit-CST', 3.4019391052900155e-06], ['0]', 3.4019391052900155e-06], ['INF].', 3.4019391052900155e-06], ['sign_bit', 3.4019391052900155e-06], ['((wi::eq_p', 3.4019391052900155e-06], ['vr0_max)', 3.4019391052900155e-06], ['sign_bit))', 3.4019391052900155e-06], ['vr1_max)', 3.4019391052900155e-06], ['sign_bit))))', 3.4019391052900155e-06], ['TRUNC_MOD_EXPR', 3.4019391052900155e-06], ['wide_int_range_trunc_mod', 3.4019391052900155e-06], ['(A', 3.4019391052900155e-06], ['B)', 3.4019391052900155e-06], ['(B)', 3.4019391052900155e-06], ['vr1_max', 3.4019391052900155e-06], ['-wmax;', 3.4019391052900155e-06], ['(tmp))', 3.4019391052900155e-06], ['wide_int_range_abs', 3.4019391052900155e-06], ['-TYPE_MIN_VALUE', 3.4019391052900155e-06], ['flag_wrapv', 3.4019391052900155e-06], ['min_value', 3.4019391052900155e-06], ['max_value', 3.4019391052900155e-06], ['(!overflow_undefined', 3.4019391052900155e-06], ['wi::eq_p', 3.4019391052900155e-06], ['flip', 3.4019391052900155e-06], ['(wi::le_p', 3.4019391052900155e-06], ['reversed,', 3.4019391052900155e-06], ['(MIN', 3.4019391052900155e-06], ['MAX),', 3.4019391052900155e-06], ['around.', 3.4019391052900155e-06], ['positive.', 3.4019391052900155e-06], ['ABSU_EXPR', 3.4019391052900155e-06], ['wide_int_range_absu', 3.4019391052900155e-06], ['max))', 3.4019391052900155e-06], ['[VR0_MIN,', 3.4019391052900155e-06], ['VR0_MAX]', 3.4019391052900155e-06], ['INNER_SIGN', 3.4019391052900155e-06], ['INNER_PREC,', 3.4019391052900155e-06], ['MAX]', 3.4019391052900155e-06], ['OUTER_SIGN', 3.4019391052900155e-06], ['OUTER_PREC.', 3.4019391052900155e-06], ['Caller', 3.4019391052900155e-06], ['responsible', 3.4019391052900155e-06], ['canonicalizing', 3.4019391052900155e-06], ['wide_int_range_convert', 3.4019391052900155e-06], ['inner_sign,', 3.4019391052900155e-06], ['inner_prec,', 3.4019391052900155e-06], ['outer_sign,', 3.4019391052900155e-06], ['truncating', 3.4019391052900155e-06], ['canonicalize', 3.4019391052900155e-06], ['represent.', 3.4019391052900155e-06], ['(outer_prec', 3.4019391052900155e-06], ['inner_prec', 3.4019391052900155e-06], ['wi::rshift', 3.4019391052900155e-06], ['(wi::sub', 3.4019391052900155e-06], ['vr0_min),', 3.4019391052900155e-06], ['wi::uhwi', 3.4019391052900155e-06], ['inner_prec),', 3.4019391052900155e-06], ['inner_sign)', 3.4019391052900155e-06], ['(!wi::eq_p', 3.4019391052900155e-06], ['outer_sign))', 3.4019391052900155e-06], ['!wi::eq_p', 3.4019391052900155e-06], ['(max,', 3.4019391052900155e-06], ['outer_sign)));', 3.4019391052900155e-06], ['[WMIN,', 3.4019391052900155e-06], ['WMAX]', 3.4019391052900155e-06], ['[EXTRA_MIN,', 3.4019391052900155e-06], ['EXTRA_MAX].', 3.4019391052900155e-06], ['EXTRA_RANGE_P', 3.4019391052900155e-06], ['return,', 3.4019391052900155e-06], ['EXTRA_MIN/EXTRA_MAX', 3.4019391052900155e-06], ['wide_int_range_div', 3.4019391052900155e-06], ['&dividend_min,', 3.4019391052900155e-06], ['&dividend_max,', 3.4019391052900155e-06], ['&divisor_min,', 3.4019391052900155e-06], ['&divisor_max,', 3.4019391052900155e-06], ['overflow_undefined,', 3.4019391052900155e-06], ['&extra_range_p,', 3.4019391052900155e-06], ['&extra_min,', 3.4019391052900155e-06], ['&extra_max)', 3.4019391052900155e-06], ['division.', 3.4019391052900155e-06], ['(!wide_int_range_includes_zero_p', 3.4019391052900155e-06], ['flag_non_call_exceptions,', 3.4019391052900155e-06], ['(cfun->can_throw_non_call_exceptions)', 3.4019391052900155e-06], ['definitely', 3.4019391052900155e-06], ['(wide_int_range_zero_p', 3.4019391052900155e-06], ['parts,', 3.4019391052900155e-06], ['-1]', 3.4019391052900155e-06], ['UB],', 3.4019391052900155e-06], ['(divisor_max,', 3.4019391052900155e-06], ['(extra_range_p', 3.4019391052900155e-06], ['extra_min', 3.4019391052900155e-06], ['wmin,', 3.4019391052900155e-06], ['extra_max', 3.4019391052900155e-06], ['wi::one', 3.4019391052900155e-06], ['HOST_BITS_PER_LONG', 3.4019391052900155e-06], ['HOST_BITS_PER_INT', 3.4019391052900155e-06], ['#error', 3.4019391052900155e-06], ['Please', 3.4019391052900155e-06], ['longlong.h', 3.4019391052900155e-06], ['clang-based.', 3.4019391052900155e-06], ['PR61146.', 3.4019391052900155e-06], ['GCC_VERSION', 3.4019391052900155e-06], ['3000', 3.4019391052900155e-06], ['(W_TYPE_SIZE', 3.4019391052900155e-06], ['(__SIZEOF_INT128__))', 3.4019391052900155e-06], ['!defined(__clang__)', 3.4019391052900155e-06], ['UHWtype;', 3.4019391052900155e-06], ['UWtype;', 3.4019391052900155e-06], ['UQItype', 3.4019391052900155e-06], ['(QI)));', 3.4019391052900155e-06], ['USItype', 3.4019391052900155e-06], ['(SI)));', 3.4019391052900155e-06], ['UDItype', 3.4019391052900155e-06], ['(TI)));', 3.4019391052900155e-06], ['"longlong.h"', 3.4019391052900155e-06], ['zeros[WIDE_INT_MAX_ELTS]', 3.4019391052900155e-06], ['{};', 3.4019391052900155e-06], ['Quantities', 3.4019391052900155e-06], ['HALF_INT_MASK', 3.4019391052900155e-06], ['((HOST_WIDE_INT_1', 3.4019391052900155e-06], ['BLOCK_OF(TARGET)', 3.4019391052900155e-06], ['((TARGET)', 3.4019391052900155e-06], ['(PREC', 3.4019391052900155e-06], ['SIGN_MASK(X)', 3.4019391052900155e-06], ['(X)', 3.4019391052900155e-06], ['VAL[I]', 3.4019391052900155e-06], ['LEN,', 3.4019391052900155e-06], ['HOST_WIDE_INT_M1', 3.4019391052900155e-06], ['form,', 3.4019391052900155e-06], ['represents.', 3.4019391052900155e-06], ['blocks_needed;', 3.4019391052900155e-06], ['(top,', 3.4019391052900155e-06], ['(HOST_WIDE_INT)-1)', 3.4019391052900155e-06], ['val[i];', 3.4019391052900155e-06], ['(SIGN_MASK', 3.4019391052900155e-06], ['VAL[0]', 3.4019391052900155e-06], ['Canonize', 3.4019391052900155e-06], ['(val[0]', 3.4019391052900155e-06], ['val[1]', 3.4019391052900155e-06], ['NEED_CANON,', 3.4019391052900155e-06], ['PRECISION.', 3.4019391052900155e-06], ['(after', 3.4019391052900155e-06], ['canonization.', 3.4019391052900155e-06], ['wi::from_array', 3.4019391052900155e-06], ['need_canon)', 3.4019391052900155e-06], ['BUFFER_LEN', 3.4019391052900155e-06], ['cleared.', 3.4019391052900155e-06], ['wi::from_buffer', 3.4019391052900155e-06], ['buffer_len)', 3.4019391052900155e-06], ['ourself,', 3.4019391052900155e-06], ['merely', 3.4019391052900155e-06], ['buffer_len;', 3.4019391052900155e-06], ['byte++)', 3.4019391052900155e-06], ['UNITS_PER_WORD)', 3.4019391052900155e-06], ['(WORDS_BIG_ENDIAN)', 3.4019391052900155e-06], ['(words', 3.4019391052900155e-06], ['word;', 3.4019391052900155e-06], ['(UNITS_PER_WORD', 3.4019391052900155e-06], ['(byte', 3.4019391052900155e-06], ['UNITS_PER_WORD);', 3.4019391052900155e-06], ['BYTES_BIG_ENDIAN', 3.4019391052900155e-06], ['buffer[offset];', 3.4019391052900155e-06], ['val[index]', 3.4019391052900155e-06], ['(bitpos', 3.4019391052900155e-06], ['wi::to_mpz', 3.4019391052900155e-06], ['x.get_len', 3.4019391052900155e-06], ['x.get_val', 3.4019391052900155e-06], ['sgn))', 3.4019391052900155e-06], ['-x80..0', 3.4019391052900155e-06], ['~v[i];', 3.4019391052900155e-06], ['mpz_com', 3.4019391052900155e-06], ['v[i];', 3.4019391052900155e-06], ['v[len', 3.4019391052900155e-06], ['WRAP', 3.4019391052900155e-06], ['out-of-range', 3.4019391052900155e-06], ['wrapped;', 3.4019391052900155e-06], ['bound.', 3.4019391052900155e-06], ['wi::from_mpz', 3.4019391052900155e-06], ['wrap)', 3.4019391052900155e-06], ['(!wrap)', 3.4019391052900155e-06], ['max;', 3.4019391052900155e-06], ['get_type_static_bounds', 3.4019391052900155e-06], ['max)', 3.4019391052900155e-06], ['extracted', 3.4019391052900155e-06], ['manual,', 3.4019391052900155e-06], ['"Integer', 3.4019391052900155e-06], ['Export":', 3.4019391052900155e-06], ['http://gmplib.org/manual/Integer-Import-and-Export.html', 3.4019391052900155e-06], ['(HOST_WIDE_INT);', 3.4019391052900155e-06], ['(mpz_sizeinbase', 3.4019391052900155e-06], ['res.write_val', 3.4019391052900155e-06], ['mpz_tdiv_r_2exp', 3.4019391052900155e-06], ['situation', 3.4019391052900155e-06], ['mpz', 3.4019391052900155e-06], ['*valres', 3.4019391052900155e-06], ['mpz_export', 3.4019391052900155e-06], ['WIDE_INT_MAX_ELTS', 3.4019391052900155e-06], ['&count,', 3.4019391052900155e-06], ['(count,', 3.4019391052900155e-06], ['(prec));', 3.4019391052900155e-06], ['(valres', 3.4019391052900155e-06], ['valres,', 3.4019391052900155e-06], ['(HOST_WIDE_INT));', 3.4019391052900155e-06], ['(valres);', 3.4019391052900155e-06], ['val[count', 3.4019391052900155e-06], ['val[count++]', 3.4019391052900155e-06], ['res.set_len', 3.4019391052900155e-06], ['(mpz_sgn', 3.4019391052900155e-06], ['-res;', 3.4019391052900155e-06], ['Largest', 3.4019391052900155e-06], ['double_int', 3.4019391052900155e-06], ['era', 3.4019391052900155e-06], ['trys', 3.4019391052900155e-06], ["int's", 3.4019391052900155e-06], ['wide_ints', 3.4019391052900155e-06], ['int-csts.', 3.4019391052900155e-06], ['shwi', 3.4019391052900155e-06], ['XVAL,', 3.4019391052900155e-06], ['XPRECISION,', 3.4019391052900155e-06], ['XPRECISION)', 3.4019391052900155e-06], ['XPRECISION).', 3.4019391052900155e-06], ['wi::force_to_size', 3.4019391052900155e-06], ['xprecision)', 3.4019391052900155e-06], ['small_xprecision', 3.4019391052900155e-06], ['Expanding.', 3.4019391052900155e-06], ['(small_xprecision)', 3.4019391052900155e-06], ['hides', 3.4019391052900155e-06], ['comparisions', 3.4019391052900155e-06], ['a[index];', 3.4019391052900155e-06], ['sgn', 3.4019391052900155e-06], ['(a[len', 3.4019391052900155e-06], ['(small_prec', 3.4019391052900155e-06], ['small_prec));', 3.4019391052900155e-06], ['top_bit_of', 3.4019391052900155e-06], ['a[len', 3.4019391052900155e-06], ['Comparisons,', 3.4019391052900155e-06], ['inherently', 3.4019391052900155e-06], ['wi::eq_p_large', 3.4019391052900155e-06], ['zext', 3.4019391052900155e-06], ['sext', 3.4019391052900155e-06], ['(zext_hwi', 3.4019391052900155e-06], ['(op0', 3.4019391052900155e-06], ['small_prec))', 3.4019391052900155e-06], ['(op0[l0]', 3.4019391052900155e-06], ['op1[l0])', 3.4019391052900155e-06], ['wi::lts_p_large', 3.4019391052900155e-06], ['wi::cmps_large', 3.4019391052900155e-06], ['wi::ltu_p_large', 3.4019391052900155e-06], ['wi::cmpu_large', 3.4019391052900155e-06], ['Extension.', 3.4019391052900155e-06], ['wi::sext_large', 3.4019391052900155e-06], ['signs.', 3.4019391052900155e-06], ['(xval[len],', 3.4019391052900155e-06], ['wi::zext_large', 3.4019391052900155e-06], ['xval[xlen', 3.4019391052900155e-06], ['xval[i]', 3.4019391052900155e-06], ['xval[len]', 3.4019391052900155e-06], ['Masking,', 3.4019391052900155e-06], ['inserting,', 3.4019391052900155e-06], ['shifting,', 3.4019391052900155e-06], ['rotating.', 3.4019391052900155e-06], ['wi::insert', 3.4019391052900155e-06], ['&y,', 3.4019391052900155e-06], ['width)', 3.4019391052900155e-06], ['(start,', 3.4019391052900155e-06], ['(wide_int::from', 3.4019391052900155e-06], ['start);', 3.4019391052900155e-06], ['BIT.', 3.4019391052900155e-06], ['wi::set_bit_large', 3.4019391052900155e-06], ['msb', 3.4019391052900155e-06], ['THIS.', 3.4019391052900155e-06], ['wide_int_storage::bswap', 3.4019391052900155e-06], ['get_len', 3.4019391052900155e-06], ['*xval', 3.4019391052900155e-06], ['get_val', 3.4019391052900155e-06], ['8.', 3.4019391052900155e-06], ['((precision', 3.4019391052900155e-06], ['0x7)', 3.4019391052900155e-06], ['precision;', 3.4019391052900155e-06], ['(safe_uhwi', 3.4019391052900155e-06], ['0xff;', 3.4019391052900155e-06], ['~last', 3.4019391052900155e-06], ['last;', 3.4019391052900155e-06], ['START', 3.4019391052900155e-06], ['start)', 3.4019391052900155e-06], ['(shift)', 3.4019391052900155e-06], ['000111000', 3.4019391052900155e-06], ['...111000', 3.4019391052900155e-06], ['~block;', 3.4019391052900155e-06], ['1111111', 3.4019391052900155e-06], ['000011111', 3.4019391052900155e-06], ['wi::and_large', 3.4019391052900155e-06], ['wi::and_not_large', 3.4019391052900155e-06], ['wi::or_large', 3.4019391052900155e-06], ['wi::or_not_large', 3.4019391052900155e-06], ['wi::xor_large', 3.4019391052900155e-06], ['op1mask;', 3.4019391052900155e-06], ['wi::add_large', 3.4019391052900155e-06], ['op0[i]', 3.4019391052900155e-06], ['op1[i]', 3.4019391052900155e-06], ['o0;', 3.4019391052900155e-06], ['carry)', 3.4019391052900155e-06], ['o1);', 3.4019391052900155e-06], ['wi::OVF_UNDERFLOW;', 3.4019391052900155e-06], ['wi::OVF_OVERFLOW;', 3.4019391052900155e-06], ['(old_carry)', 3.4019391052900155e-06], ['Subroutines', 3.4019391052900155e-06], ['HOST_HALF_WIDE_INTs', 3.4019391052900155e-06], ['uncompressing', 3.4019391052900155e-06], ['INPUT[IN_LEN', 3.4019391052900155e-06], ['1].', 3.4019391052900155e-06], ['out_len,', 3.4019391052900155e-06], ['Smear', 3.4019391052900155e-06], ['out_len)', 3.4019391052900155e-06], ['inverse', 3.4019391052900155e-06], ['wi_unpack.', 3.4019391052900155e-06], ['in_len)', 3.4019391052900155e-06], ['input[i]', 3.4019391052900155e-06], ['input[i', 3.4019391052900155e-06], ['in_len', 3.4019391052900155e-06], ['odd.', 3.4019391052900155e-06], ['extend.', 3.4019391052900155e-06], ['(in_len', 3.4019391052900155e-06], ['input[i];', 3.4019391052900155e-06], ['Op1', 3.4019391052900155e-06], ['Op2.', 3.4019391052900155e-06], ['SGN', 3.4019391052900155e-06], ['implemented.', 3.4019391052900155e-06], ['wi::mul_internal', 3.4019391052900155e-06], ['*op1val,', 3.4019391052900155e-06], ['*op2val,', 3.4019391052900155e-06], ['*overflow,', 3.4019391052900155e-06], ['high)', 3.4019391052900155e-06], ['o0,', 3.4019391052900155e-06], ['o1,', 3.4019391052900155e-06], ['k,', 3.4019391052900155e-06], ['scaled', 3.4019391052900155e-06], ['yielding', 3.4019391052900155e-06], ['4x', 3.4019391052900155e-06], ['vpn.', 3.4019391052900155e-06], ['u[4', 3.4019391052900155e-06], ['v[4', 3.4019391052900155e-06], ["'2'", 3.4019391052900155e-06], ["'R'", 3.4019391052900155e-06], ['r[2', 3.4019391052900155e-06], ['((HOST_WIDE_INT)1', 3.4019391052900155e-06], ['needs_overflow', 3.4019391052900155e-06], ['(op1val,', 3.4019391052900155e-06], ['(op2val,', 3.4019391052900155e-06], ['surprisingly', 3.4019391052900155e-06], ['HWIs', 3.4019391052900155e-06], ['HWIs,', 3.4019391052900155e-06], ['(val[1],', 3.4019391052900155e-06], ['val[2]', 3.4019391052900155e-06], ['HWI,', 3.4019391052900155e-06], ['needed.)', 3.4019391052900155e-06], ['(upper,', 3.4019391052900155e-06], ['(upper', 3.4019391052900155e-06], ['multiplications', 3.4019391052900155e-06], ['(op2,', 3.4019391052900155e-06], ['op2val[i];', 3.4019391052900155e-06], ['(op2', 3.4019391052900155e-06], ['op1val[i];', 3.4019391052900155e-06], ['((high', 3.4019391052900155e-06], ['needs_overflow)', 3.4019391052900155e-06], ['HOST_BITS_PER_HALF_WIDE_INT))', 3.4019391052900155e-06], ['op1.to_shwi', 3.4019391052900155e-06], ['op2.to_shwi', 3.4019391052900155e-06], ['op1.to_uhwi', 3.4019391052900155e-06], ['op2.to_uhwi', 3.4019391052900155e-06], ['OVF_UNKNOWN;', 3.4019391052900155e-06], ['((r', 3.4019391052900155e-06], ['mul', 3.4019391052900155e-06], ['(u,', 3.4019391052900155e-06], ['op1val,', 3.4019391052900155e-06], ['op2val,', 3.4019391052900155e-06], ['mult.', 3.4019391052900155e-06], ['CHAR_BIT);', 3.4019391052900155e-06], ['HOST_WIDE_INT)v[j]', 3.4019391052900155e-06], ['k);', 3.4019391052900155e-06], ['r[j', 3.4019391052900155e-06], ['that).', 3.4019391052900155e-06], ['needs_overflow))', 3.4019391052900155e-06], ['HOST_WIDE_INT)v[i]', 3.4019391052900155e-06], ['signed,', 3.4019391052900155e-06], ['r[(half_blocks_needed)', 3.4019391052900155e-06], ['(((HOST_WIDE_INT)(r[i]', 3.4019391052900155e-06], ['wi::OVF_UNKNOWN;', 3.4019391052900155e-06], ['r_offset', 3.4019391052900155e-06], ['&r[r_offset],', 3.4019391052900155e-06], ['population', 3.4019391052900155e-06], ['wi::popcount', 3.4019391052900155e-06], ['HOST_BITS_PER_WIDE_INT.', 3.4019391052900155e-06], ['popcount', 3.4019391052900155e-06], ['x.len;', 3.4019391052900155e-06], ['(x.uhigh', 3.4019391052900155e-06], ['-count);', 3.4019391052900155e-06], ['stop;', 3.4019391052900155e-06], ['Negation', 3.4019391052900155e-06], ['Subtract', 3.4019391052900155e-06], ['HOST_WIDE_INT)op0[i]', 3.4019391052900155e-06], ['HOST_WIDE_INT)op1[i]', 3.4019391052900155e-06], ['borrow)', 3.4019391052900155e-06], ['o0);', 3.4019391052900155e-06], ['OVF_UNDERFLOW;', 3.4019391052900155e-06], ['(old_borrow)', 3.4019391052900155e-06], ['Mod', 3.4019391052900155e-06], ['B_QUOTIENT', 3.4019391052900155e-06], ['B_REMAINDER', 3.4019391052900155e-06], ['B_DIVIDEND/B_DIVISOR.', 3.4019391052900155e-06], ["Hacker's", 3.4019391052900155e-06], ['Delight', 3.4019391052900155e-06], ['Warren,', 3.4019391052900155e-06], ["Knuth's", 3.4019391052900155e-06], ['algorithm.', 3.4019391052900155e-06], ['*b_quotient,', 3.4019391052900155e-06], ['*b_remainder,', 3.4019391052900155e-06], ['*b_dividend,', 3.4019391052900155e-06], ['*b_divisor,', 3.4019391052900155e-06], ['"digits"', 3.4019391052900155e-06], ['HOST_WIDE_INT)1', 3.4019391052900155e-06], ['Estimate', 3.4019391052900155e-06], ['digit.', 3.4019391052900155e-06], ['rhat;', 3.4019391052900155e-06], ['remainder.', 3.4019391052900155e-06], ['Product', 3.4019391052900155e-06], ['divisor.', 3.4019391052900155e-06], ['b_dividend[j])/b_divisor[0];', 3.4019391052900155e-06], ['((k', 3.4019391052900155e-06], ['b_dividend[j])', 3.4019391052900155e-06], ['HOST_WIDE_INT)b_quotient[j]', 3.4019391052900155e-06], ['HOST_WIDE_INT)b_divisor[0]));', 3.4019391052900155e-06], ['b_remainder[0]', 3.4019391052900155e-06], ['(b_divisor[n-1])', 3.4019391052900155e-06], ['algorithm,', 3.4019391052900155e-06], ['b_dividend', 3.4019391052900155e-06], ['(b_divisor[i]', 3.4019391052900155e-06], ['(b_divisor[i-1]', 3.4019391052900155e-06], ['b_dividend[m-1]', 3.4019391052900155e-06], ['b_dividend[i]', 3.4019391052900155e-06], ['(b_dividend[i-1]', 3.4019391052900155e-06], ['again:', 3.4019391052900155e-06], ['(qhat', 3.4019391052900155e-06], ['b_divisor[n-2]', 3.4019391052900155e-06], ['b_dividend[j+n-2])', 3.4019391052900155e-06], ['(rhat', 3.4019391052900155e-06], ['again;', 3.4019391052900155e-06], ['subtract.', 3.4019391052900155e-06], ['b_divisor[i];', 3.4019391052900155e-06], ['HALF_INT_MASK);', 3.4019391052900155e-06], ['b_dividend[i', 3.4019391052900155e-06], ['((p', 3.4019391052900155e-06], ['(HOST_WIDE_INT)b_dividend[i+j]', 3.4019391052900155e-06], ['(b_dividend[i+1]', 3.4019391052900155e-06], ['b_dividend[i];', 3.4019391052900155e-06], ['Divide', 3.4019391052900155e-06], ['DIVIDEND', 3.4019391052900155e-06], ['DIVISOR,', 3.4019391052900155e-06], ['QUOTIENT', 3.4019391052900155e-06], ['REMAINDER', 3.4019391052900155e-06], ['*REMAINDER_LEN.', 3.4019391052900155e-06], ['OFLOW', 3.4019391052900155e-06], ['*OFLOW', 3.4019391052900155e-06], ['wi::divmod_internal', 3.4019391052900155e-06], ['*quotient,', 3.4019391052900155e-06], ['*remainder,', 3.4019391052900155e-06], ['*dividend_val,', 3.4019391052900155e-06], ['*divisor_val,', 3.4019391052900155e-06], ['*oflow)', 3.4019391052900155e-06], ['dividend_blocks_needed', 3.4019391052900155e-06], ['(dividend_prec);', 3.4019391052900155e-06], ['divisor_blocks_needed', 3.4019391052900155e-06], ['(divisor_prec);', 3.4019391052900155e-06], ['b_quotient[4', 3.4019391052900155e-06], ['b_remainder[4', 3.4019391052900155e-06], ['b_dividend[(4', 3.4019391052900155e-06], ['b_divisor[4', 3.4019391052900155e-06], ['neg_dividend,', 3.4019391052900155e-06], ['(dividend_val,', 3.4019391052900155e-06], ['(divisor_val,', 3.4019391052900155e-06], ['divisor_prec);', 3.4019391052900155e-06], ['(divisor', 3.4019391052900155e-06], ['speed', 3.4019391052900155e-06], ['correctness.', 3.4019391052900155e-06], ['(dividend_prec)', 3.4019391052900155e-06], ['Viewed', 3.4019391052900155e-06], ['orignal', 3.4019391052900155e-06], ['traditionally', 3.4019391052900155e-06], ['act', 3.4019391052900155e-06], ['quotient[i]', 3.4019391052900155e-06], ['dividend_val[i];', 3.4019391052900155e-06], ['dividend.to_shwi', 3.4019391052900155e-06], ['divisor.to_shwi', 3.4019391052900155e-06], ['HOST_WIDE_INT_MIN', 3.4019391052900155e-06], ['(dividend_prec', 3.4019391052900155e-06], ['HOST_WIDE_INT_MIN;', 3.4019391052900155e-06], ['quotient[1]', 3.4019391052900155e-06], ['dividend.to_uhwi', 3.4019391052900155e-06], ['divisor.to_uhwi', 3.4019391052900155e-06], ['neg_dividend', 3.4019391052900155e-06], ['-dividend;', 3.4019391052900155e-06], ['neg_dividend;', 3.4019391052900155e-06], ['neg_divisor', 3.4019391052900155e-06], ['-divisor;', 3.4019391052900155e-06], ['(b_dividend,', 3.4019391052900155e-06], ['dividend.get_val', 3.4019391052900155e-06], ['dividend.get_len', 3.4019391052900155e-06], ['dividend_blocks_needed,', 3.4019391052900155e-06], ['(b_divisor,', 3.4019391052900155e-06], ['divisor.get_val', 3.4019391052900155e-06], ['divisor.get_len', 3.4019391052900155e-06], ['divisor_blocks_needed,', 3.4019391052900155e-06], ['dividend_blocks_needed;', 3.4019391052900155e-06], ['b_dividend[m', 3.4019391052900155e-06], ['m--;', 3.4019391052900155e-06], ['divisor_blocks_needed;', 3.4019391052900155e-06], ['b_divisor[n', 3.4019391052900155e-06], ['n--;', 3.4019391052900155e-06], ['(b_quotient));', 3.4019391052900155e-06], ['b_dividend,', 3.4019391052900155e-06], ['b_quotient,', 3.4019391052900155e-06], ['neg', 3.4019391052900155e-06], ['neg.', 3.4019391052900155e-06], ['(dividend_neg', 3.4019391052900155e-06], ['divisor_neg)', 3.4019391052900155e-06], ['quotient,', 3.4019391052900155e-06], ['quotient_len,', 3.4019391052900155e-06], ['(dividend_neg)', 3.4019391052900155e-06], ['remainder,', 3.4019391052900155e-06], ['Shifting,', 3.4019391052900155e-06], ['rotating', 3.4019391052900155e-06], ['extraction.', 3.4019391052900155e-06], ['wi::lshift_large', 3.4019391052900155e-06], ['fills', 3.4019391052900155e-06], ['unfilled', 3.4019391052900155e-06], ['small_shift)', 3.4019391052900155e-06], ['(excluding', 3.4019391052900155e-06], ['signs).', 3.4019391052900155e-06], ['small_shift;', 3.4019391052900155e-06], ['Logically', 3.4019391052900155e-06], ['wi::lrshift_large', 3.4019391052900155e-06], ['Arithmetically', 3.4019391052900155e-06], ['wi::arshift_large', 3.4019391052900155e-06], ['(upper)', 3.4019391052900155e-06], ['-count)', 3.4019391052900155e-06], ['nonzero;', 3.4019391052900155e-06], ['(high);', 3.4019391052900155e-06], ['(That', 3.4019391052900155e-06], ['bit.)', 3.4019391052900155e-06], ['wi::clrsb', 3.4019391052900155e-06], ['1s.', 3.4019391052900155e-06], ['(lower)', 3.4019391052900155e-06], ['x.ulow', 3.4019391052900155e-06], ['x.precision;', 3.4019391052900155e-06], ['Having', 3.4019391052900155e-06], ['dealt', 3.4019391052900155e-06], ['ctz_hwi', 3.4019391052900155e-06], ['logarithm,', 3.4019391052900155e-06], ['wi::exact_log2', 3.4019391052900155e-06], ['Reject', 3.4019391052900155e-06], ['x.sign_mask', 3.4019391052900155e-06], ['CRUX', 3.4019391052900155e-06], ['nonzero.', 3.4019391052900155e-06], ['any)', 3.4019391052900155e-06], ['(crux', 3.4019391052900155e-06], ['x.val[crux]', 3.4019391052900155e-06], ['crux;', 3.4019391052900155e-06], ['zero-extended', 3.4019391052900155e-06], ['CRUX.', 3.4019391052900155e-06], ['x.val[crux];', 3.4019391052900155e-06], ['((crux', 3.4019391052900155e-06], ['x.precision)', 3.4019391052900155e-06], ['(hwi,', 3.4019391052900155e-06], ['::exact_log2', 3.4019391052900155e-06], ['(hwi);', 3.4019391052900155e-06], ['logarithm', 3.4019391052900155e-06], ['down.', 3.4019391052900155e-06], ['wi::floor_log2', 3.4019391052900155e-06], ['(lowest)', 3.4019391052900155e-06], ['wi::ffs', 3.4019391052900155e-06], ['eq_p', 3.4019391052900155e-06], ['sign-extending', 3.4019391052900155e-06], ['only_sign_bit_p', 3.4019391052900155e-06], ['x.precision);', 3.4019391052900155e-06], ['17.', 3.4019391052900155e-06], ['EXTRA_BITS', 3.4019391052900155e-06], ['lower_mask', 3.4019391052900155e-06], ['MASK,', 3.4019391052900155e-06], ['mask)', 3.4019391052900155e-06], ['(mask', 3.4019391052900155e-06], ['lower_mask);', 3.4019391052900155e-06], ['32.', 3.4019391052900155e-06], ['Conceptually', 3.4019391052900155e-06], ['propagate', 3.4019391052900155e-06], ['(upper_mask,', 3.4019391052900155e-06], ['tmp)', 3.4019391052900155e-06], ['-tmp;', 3.4019391052900155e-06], ['gt_ggc_mx', 3.4019391052900155e-06], ['(*)', 3.4019391052900155e-06], ['wide_int::dump', 3.4019391052900155e-06], ['<false>', 3.4019391052900155e-06], ['<true>', 3.4019391052900155e-06], ['offset_int::dump', 3.4019391052900155e-06], ['widest_int::dump', 3.4019391052900155e-06], ['::dump', 3.4019391052900155e-06], ['Besides,', 3.4019391052900155e-06], ['Selftests', 3.4019391052900155e-06], ['Specializations', 3.4019391052900155e-06], ['fixture', 3.4019391052900155e-06], ['wide-int', 3.4019391052900155e-06], ['offset_int.', 3.4019391052900155e-06], ['widest_int.', 3.4019391052900155e-06], ['(WI,', 3.4019391052900155e-06], ['...,', 3.4019391052900155e-06], ['SGN)', 3.4019391052900155e-06], ['10).', 3.4019391052900155e-06], ['16.', 3.4019391052900155e-06], ['&wi)', 3.4019391052900155e-06], ['("42",', 3.4019391052900155e-06], ['("0x2a",', 3.4019391052900155e-06], ['("0x1fffffffffffffffff",', 3.4019391052900155e-06], ['(WIDE_INT_MAX_PRECISION', 3.4019391052900155e-06], ['128)', 3.4019391052900155e-06], ['("0x20000000000000000fffffffffffffffe",', 3.4019391052900155e-06], ['("0x200000000000004000123456789abcdef",', 3.4019391052900155e-06], ['74)', 3.4019391052900155e-06], ['(0x1234567,', 3.4019391052900155e-06], ['0x89abcdef);', 3.4019391052900155e-06], ['VALUE_TYPE,', 3.4019391052900155e-06], ['binary,', 3.4019391052900155e-06], ['syntax,', 3.4019391052900155e-06], ['overloaded-operators.', 3.4019391052900155e-06], ['wi::neg', 3.4019391052900155e-06], ['a),', 3.4019391052900155e-06], ['-a,', 3.4019391052900155e-06], ['selftests,', 3.4019391052900155e-06], ['precs[]', 3.4019391052900155e-06], ['65,', 3.4019391052900155e-06], ['127,', 3.4019391052900155e-06], ['offsets[]', 3.4019391052900155e-06], ['(precs);', 3.4019391052900155e-06], ['(offsets);', 3.4019391052900155e-06], ['precs[i];', 3.4019391052900155e-06], ['offsets[j];', 3.4019391052900155e-06], ['round_{down,up}_for_mask', 3.4019391052900155e-06], ['18;', 3.4019391052900155e-06], ['(16,', 3.4019391052900155e-06], ['(32,', 3.4019391052900155e-06], ['(0x011,', 3.4019391052900155e-06], ['(0x100,', 3.4019391052900155e-06], ['(100,', 3.4019391052900155e-06], ['(104,', 3.4019391052900155e-06], ['(0x2bc,', 3.4019391052900155e-06], ['(0x800,', 3.4019391052900155e-06], ['wide_int_cc_tests', 3.4019391052900155e-06], ['<wide_int>', 3.4019391052900155e-06], ['<offset_int>', 3.4019391052900155e-06], ['brig-arg-block-handler.cc', 3.4019391052900155e-06], ['start/end', 3.4019391052900155e-06], ['brig_directive_arg_block_handler::operator', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_ARG_BLOCK_START)', 3.4019391052900155e-06], ['Initiate', 3.4019391052900155e-06], ['site.', 3.4019391052900155e-06], ['BIND_EXPR_BLOCK', 3.4019391052900155e-06], ['block_id', 3.4019391052900155e-06], ['BLOCK_NUMBER', 3.4019391052900155e-06], ['block_id++;', 3.4019391052900155e-06], ['m_parentblock', 3.4019391052900155e-06], ['m_parentblock;', 3.4019391052900155e-06], ['(BLOCK_SUBBLOCKS', 3.4019391052900155e-06], ['(m_parentblock),', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_ARG_BLOCK_END)', 3.4019391052900155e-06], ['new_bind_expr', 3.4019391052900155e-06], ['(new_bind_expr);', 3.4019391052900155e-06], ['brig-atomic-inst-handler.cc', 3.4019391052900155e-06], ['brig_atomic_inst_handler::brig_atomic_inst_handler', 3.4019391052900155e-06], ['brig_atomic_inst_handler::generate_tree', 3.4019391052900155e-06], ['&inst,', 3.4019391052900155e-06], ['atomic_opcode)', 3.4019391052900155e-06], ['(inst);', 3.4019391052900155e-06], ['first_input', 3.4019391052900155e-06], ['(inst.opcode,', 3.4019391052900155e-06], ['(inst.type);', 3.4019391052900155e-06], ['Utilize', 3.4019391052900155e-06], ['(from', 3.4019391052900155e-06], ['C++11', 3.4019391052900155e-06], ['support)', 3.4019391052900155e-06], ['atomic_type', 3.4019391052900155e-06], ['TYPE_QUAL_ATOMIC);', 3.4019391052900155e-06], ['(atomic_type', 3.4019391052900155e-06], ['signal_handle', 3.4019391052900155e-06], ['operands[first_input];', 3.4019391052900155e-06], ['atomic_ptype', 3.4019391052900155e-06], ['(atomic_type);', 3.4019391052900155e-06], ['casted_to_ptr', 3.4019391052900155e-06], ['signal_handle);', 3.4019391052900155e-06], ['BRIG_ATOMIC_LD)', 3.4019391052900155e-06], ['operands[first_input]);', 3.4019391052900155e-06], ['BRIG_ATOMIC_ST)', 3.4019391052900155e-06], ['BRIG_ATOMIC_LD', 3.4019391052900155e-06], ['BRIG_ATOMIC_WAIT_EQ', 3.4019391052900155e-06], ['BRIG_ATOMIC_WAITTIMEOUT_GTE))', 3.4019391052900155e-06], ['signal_wait*', 3.4019391052900155e-06], ['spuriously', 3.4019391052900155e-06], ['Therefore', 3.4019391052900155e-06], ['away.', 3.4019391052900155e-06], ['sleep-wait.', 3.4019391052900155e-06], ['BRIG_ATOMIC_CAS)', 3.4019391052900155e-06], ['CAS', 3.4019391052900155e-06], ['args.', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_8);', 3.4019391052900155e-06], ['src1', 3.4019391052900155e-06], ['2];', 3.4019391052900155e-06], ['src0_type', 3.4019391052900155e-06], ['src1_type', 3.4019391052900155e-06], ['(built_in)))));', 3.4019391052900155e-06], ['src0_type,', 3.4019391052900155e-06], ['src0,', 3.4019391052900155e-06], ['src1_type,', 3.4019391052900155e-06], ['src1);', 3.4019391052900155e-06], ['automagically', 3.4019391052900155e-06], ['DEF_HSAIL_ATOMIC_BUILTIN(ENUM,', 3.4019391052900155e-06], ['ATOMIC_OPCODE,', 3.4019391052900155e-06], ['ATOMIC_OPCODE', 3.4019391052900155e-06], ['inst.type', 3.4019391052900155e-06], ['(atomic_opcode)', 3.4019391052900155e-06], ['BRIG_ATOMIC_ADD:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_ADD_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_ADD_8);', 3.4019391052900155e-06], ['BRIG_ATOMIC_SUB:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_SUB_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_SUB_8);', 3.4019391052900155e-06], ['BRIG_ATOMIC_AND:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_AND_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_AND_8);', 3.4019391052900155e-06], ['BRIG_ATOMIC_XOR:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_XOR_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_XOR_8);', 3.4019391052900155e-06], ['BRIG_ATOMIC_OR:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_OR_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_FETCH_AND_OR_8);', 3.4019391052900155e-06], ['BRIG_ATOMIC_EXCH:', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_LOCK_TEST_AND_SET_4);', 3.4019391052900155e-06], ['(BUILT_IN_SYNC_LOCK_TEST_AND_SET_8);', 3.4019391052900155e-06], ['(built_in', 3.4019391052900155e-06], ['arg0_type', 3.4019391052900155e-06], ['arg0_type,', 3.4019391052900155e-06], ['gimplifier', 3.4019391052900155e-06], ['drops', 3.4019391052900155e-06], ['signed)', 3.4019391052900155e-06], ['(arg0_type,', 3.4019391052900155e-06], ['"builtin_out");', 3.4019391052900155e-06], ['tmp_assign', 3.4019391052900155e-06], ['(tmp_assign);', 3.4019391052900155e-06], ['(first_input', 3.4019391052900155e-06], ['(inst,', 3.4019391052900155e-06], ['inst.base.byteCount;', 3.4019391052900155e-06], ['brig_atomic_inst_handler::operator', 3.4019391052900155e-06], ['inst->atomicOperation;', 3.4019391052900155e-06], ['brig-basic-inst-handler.cc', 3.4019391052900155e-06], ['brig_basic_inst_handler::brig_basic_inst_handler', 3.4019391052900155e-06], ['tree_element_binary_visitor', 3.4019391052900155e-06], ['m_brig_inst', 3.4019391052900155e-06], ['(brig_inst)', 3.4019391052900155e-06], ['DEF_HSAIL_SAT_BUILTIN(ENUM,', 3.4019391052900155e-06], ['BRIG_OPCODE,', 3.4019391052900155e-06], ['m_builtin', 3.4019391052900155e-06], ['simplest', 3.4019391052900155e-06], ['built-ins.', 3.4019391052900155e-06], ['(m_builtin,', 3.4019391052900155e-06], ['(operand1),', 3.4019391052900155e-06], ['&m_brig_inst;', 3.4019391052900155e-06], ['m_builtin;', 3.4019391052900155e-06], ['shuffle.', 3.4019391052900155e-06], ['OPERAND[1]', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_shuffle', 3.4019391052900155e-06], ['(operands[0])));', 3.4019391052900155e-06], ['Offsets', 3.4019391052900155e-06], ['spanning', 3.4019391052900155e-06], ['"full', 3.4019391052900155e-06], ['shuffle"', 3.4019391052900155e-06], ['originate', 3.4019391052900155e-06], ['*mask_offset_vals', 3.4019391052900155e-06], ['input_mask_element_size', 3.4019391052900155e-06], ['exact_log2', 3.4019391052900155e-06], ['BIT_FIELD_REFs', 3.4019391052900155e-06], ['understood', 3.4019391052900155e-06], ['mask_operand', 3.4019391052900155e-06], ['("shuffle_mask",', 3.4019391052900155e-06], ['mask_element_type', 3.4019391052900155e-06], ['(input_mask_element_size,', 3.4019391052900155e-06], ['mask_element_type,', 3.4019391052900155e-06], ['mask_operand,', 3.4019391052900155e-06], ['(input_mask_element_size),', 3.4019391052900155e-06], ['input_mask_element_size));', 3.4019391052900155e-06], ['(mask_offset_vals,', 3.4019391052900155e-06], ['offset_vec', 3.4019391052900155e-06], ['mask_offset_vals);', 3.4019391052900155e-06], ['mask_vec_type,', 3.4019391052900155e-06], ['mask_vec,', 3.4019391052900155e-06], ['offset_vec);', 3.4019391052900155e-06], ['(extracts)', 3.4019391052900155e-06], ['OPERANDS[0].', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_unpack', 3.4019391052900155e-06], ['unpacked', 3.4019391052900155e-06], ['dest.', 3.4019391052900155e-06], ['uppermost', 3.4019391052900155e-06], ['src_element_type', 3.4019391052900155e-06], ['(src_element_type);', 3.4019391052900155e-06], ['*and_mask_vals', 3.4019391052900155e-06], ['mask_element;', 3.4019391052900155e-06], ['and_mask_element;', 3.4019391052900155e-06], ['(and_mask_vals,', 3.4019391052900155e-06], ['and_mask_element);', 3.4019391052900155e-06], ['and_mask_vec', 3.4019391052900155e-06], ['and_mask_vals);', 3.4019391052900155e-06], ['perm,', 3.4019391052900155e-06], ['and_mask_vec);', 3.4019391052900155e-06], ['(cleared))', 3.4019391052900155e-06], ['raw_type', 3.4019391052900155e-06], ['as_int', 3.4019391052900155e-06], ['(raw_type,', 3.4019391052900155e-06], ['cleared);', 3.4019391052900155e-06], ['(src_element_type)', 3.4019391052900155e-06], ['(src_element_type))', 3.4019391052900155e-06], ['(as_int,', 3.4019391052900155e-06], ['src_element_type);', 3.4019391052900155e-06], ['as_int;', 3.4019391052900155e-06], ['Packs', 3.4019391052900155e-06], ['(inserts)', 3.4019391052900155e-06], ['OPERANDS[2].', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_pack', 3.4019391052900155e-06], ['insertion.', 3.4019391052900155e-06], ['Reuse', 3.4019391052900155e-06], ["'bitinsert'", 3.4019391052900155e-06], ['vecsize', 3.4019391052900155e-06], ['(operands[0]))', 3.4019391052900155e-06], ['wide_type', 3.4019391052900155e-06], ['(vecsize,', 3.4019391052900155e-06], ['("src_vect",', 3.4019391052900155e-06], ['src_vect);', 3.4019391052900155e-06], ['scalar));', 3.4019391052900155e-06], ['garbage.', 3.4019391052900155e-06], ['well-defined', 3.4019391052900155e-06], ['("pos",', 3.4019391052900155e-06], ['ewidth', 3.4019391052900155e-06], ['element_width);', 3.4019391052900155e-06], ['ewidth,', 3.4019391052900155e-06], ['("offset",', 3.4019391052900155e-06], ['mask_int', 3.4019391052900155e-06], ['((uint64_t)', 3.4019391052900155e-06], ['element_width)', 3.4019391052900155e-06], ['mask_int);', 3.4019391052900155e-06], ['("mask",', 3.4019391052900155e-06], ['mask));', 3.4019391052900155e-06], ['clearing_mask', 3.4019391052900155e-06], ['bitoffset));', 3.4019391052900155e-06], ['zeroed_element', 3.4019391052900155e-06], ['src_vect,', 3.4019391052900155e-06], ['clearing_mask);', 3.4019391052900155e-06], ['necessary:', 3.4019391052900155e-06], ['zero?', 3.4019391052900155e-06], ['element_in_position', 3.4019391052900155e-06], ['mask),', 3.4019391052900155e-06], ['zeroed_element,', 3.4019391052900155e-06], ['element_in_position);', 3.4019391052900155e-06], ['inserted;', 3.4019391052900155e-06], ['unpack{lo,hi}.', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_unpack_lo_or_hi', 3.4019391052900155e-06], ['BRIG_OPCODE_UNPACKLO)', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_inst_expr', 3.4019391052900155e-06], ['instr_inner_type', 3.4019391052900155e-06], ['arith_type;', 3.4019391052900155e-06], ['LSHIFT_EXPR)', 3.4019391052900155e-06], ['modulo/clipping', 3.4019391052900155e-06], ['amounts', 3.4019391052900155e-06], ['tree.def', 3.4019391052900155e-06], ['scalar_mask', 3.4019391052900155e-06], ['(instr_inner_type,', 3.4019391052900155e-06], ['(inner_type)', 3.4019391052900155e-06], ['scalar_mask)', 3.4019391052900155e-06], ['scalar_mask;', 3.4019391052900155e-06], ['(arith_type))', 3.4019391052900155e-06], ['instruction;', 3.4019391052900155e-06], ['BRIG_OPCODE_MAD', 3.4019391052900155e-06], ['BRIG_OPCODE_MAD24)', 3.4019391052900155e-06], ['MAD', 3.4019391052900155e-06], ['method).', 3.4019391052900155e-06], ['WIDEN_MULT_EXPR', 3.4019391052900155e-06], ['close,', 3.4019391052900155e-06], ['BRIG_OPCODE_MAD24HI)', 3.4019391052900155e-06], ['(MULT_HIGHPART_EXPR,', 3.4019391052900155e-06], ['build_shuffle', 3.4019391052900155e-06], ['BRIG_OPCODE_UNPACKHI)', 3.4019391052900155e-06], ['build_unpack_lo_or_hi', 3.4019391052900155e-06], ['BRIG_OPCODE_UNPACK)', 3.4019391052900155e-06], ['build_unpack', 3.4019391052900155e-06], ['build_pack', 3.4019391052900155e-06], ['BRIG_OPCODE_NRSQRT)', 3.4019391052900155e-06], ['1.0/sqrt', 3.4019391052900155e-06], ['compliant.', 3.4019391052900155e-06], ['(BRIG_OPCODE_SQRT,', 3.4019391052900155e-06], ['BRIG_OPCODE_NRCP)', 3.4019391052900155e-06], ['1.0/x', 3.4019391052900155e-06], ['BRIG_OPCODE_LANEID', 3.4019391052900155e-06], ['BRIG_OPCODE_MAXWAVEID', 3.4019391052900155e-06], ['BRIG_OPCODE_WAVEID)', 3.4019391052900155e-06], ['now),', 3.4019391052900155e-06], ['LANEID,', 3.4019391052900155e-06], ['WAVEID', 3.4019391052900155e-06], ['MAXWAVEID', 3.4019391052900155e-06], ['Deals', 3.4019391052900155e-06], ['packing', 3.4019391052900155e-06], ['unpacking/packing', 3.4019391052900155e-06], ['Delegates', 3.4019391052900155e-06], ['build_inst_expr().', 3.4019391052900155e-06], ['brig_basic_inst_handler::operator', 3.4019391052900155e-06], ['BRIG_OPCODE_NOP)', 3.4019391052900155e-06], ['output_count);', 3.4019391052900155e-06], ['tree_stl_vec::iterator', 3.4019391052900155e-06], ['first_input_i', 3.4019391052900155e-06], ['operands.begin', 3.4019391052900155e-06], ['++first_input_i;', 3.4019391052900155e-06], ['in_operands;', 3.4019391052900155e-06], ['in_operands.assign', 3.4019391052900155e-06], ['(first_input_i,', 3.4019391052900155e-06], ['operands.end', 3.4019391052900155e-06], ['brig_inst->type;', 3.4019391052900155e-06], ['BRIG_OPCODE_FIRSTBIT', 3.4019391052900155e-06], ['BRIG_OPCODE_SAD)', 3.4019391052900155e-06], ['HSAIL,', 3.4019391052900155e-06], ["argument's", 3.4019391052900155e-06], ['instruction/builtin.', 3.4019391052900155e-06], ['(in_operands[0]));', 3.4019391052900155e-06], ['(!instr_type)', 3.4019391052900155e-06], ["opcode's", 3.4019391052900155e-06], ['storage-only', 3.4019391052900155e-06], ['f16.', 3.4019391052900155e-06], ['(brig_inst->opcode)', 3.4019391052900155e-06], ['BrigPack8_t', 3.4019391052900155e-06], ['BRIG_PACK_NONE;', 3.4019391052900155e-06], ['BRIG_PACK_PS', 3.4019391052900155e-06], ['BRIG_PACK_PSSAT)', 3.4019391052900155e-06], ['in_operands[1]', 3.4019391052900155e-06], ['(in_operands[1]);', 3.4019391052900155e-06], ['BRIG_PACK_SP', 3.4019391052900155e-06], ['BRIG_PACK_SPSAT)', 3.4019391052900155e-06], ['in_operands[0]', 3.4019391052900155e-06], ['(in_operands[0]);', 3.4019391052900155e-06], ['brig_inst_type);', 3.4019391052900155e-06], ['BRIG_PACK_PPSAT', 3.4019391052900155e-06], ['BRIG_PACK_PSAT)', 3.4019391052900155e-06], ['in_operands[0],', 3.4019391052900155e-06], ['in_operands[1]);', 3.4019391052900155e-06], ['(m_parent.m_cf->m_is_kernel)', 3.4019391052900155e-06], ['m_parent.m_cf->m_exit_label);', 3.4019391052900155e-06], ['m_parent.m_cf->append_return_stmt', 3.4019391052900155e-06], ['scalarization', 3.4019391052900155e-06], ['promotion', 3.4019391052900155e-06], ['MUL.', 3.4019391052900155e-06], ['2x64b', 3.4019391052900155e-06], ['CPUs', 3.4019391052900155e-06], ['128b', 3.4019391052900155e-06], ['modular', 3.4019391052900155e-06], ['frontend,', 3.4019391052900155e-06], ['legalization', 3.4019391052900155e-06], ['datatype.', 3.4019391052900155e-06], ['promote', 3.4019391052900155e-06], ['s8x8', 3.4019391052900155e-06], ['s16x8', 3.4019391052900155e-06], ['my', 3.4019391052900155e-06], ['x86-64.', 3.4019391052900155e-06], ['(in_operands[0],', 3.4019391052900155e-06], ['(in_operands[1],', 3.4019391052900155e-06], ['scalar_type', 3.4019391052900155e-06], ['(BRIG_TYPE_S16);', 3.4019391052900155e-06], ['(BRIG_TYPE_S32);', 3.4019391052900155e-06], ['(BRIG_TYPE_S64);', 3.4019391052900155e-06], ['(promoted_type)', 3.4019391052900155e-06], ['operand0', 3.4019391052900155e-06], ['operand0_elements.at', 3.4019391052900155e-06], ['operand1', 3.4019391052900155e-06], ['operand1_elements.at', 3.4019391052900155e-06], ['scalar_expr,', 3.4019391052900155e-06], ['(scalar_type,', 3.4019391052900155e-06], ['scalar_expr));', 3.4019391052900155e-06], ["'class'", 3.4019391052900155e-06], ['b1', 3.4019391052900155e-06], ['BRIG_OPCODE_CLASS)', 3.4019391052900155e-06], ['base)->sourceType;', 3.4019391052900155e-06], ['build_inst_expr', 3.4019391052900155e-06], ['brig_inst_type,', 3.4019391052900155e-06], ['in_operands);', 3.4019391052900155e-06], ['(instr_expr', 3.4019391052900155e-06], ['BRIG_PACK_SS', 3.4019391052900155e-06], ['BRIG_PACK_S', 3.4019391052900155e-06], ['BRIG_PACK_SSSAT', 3.4019391052900155e-06], ['BRIG_PACK_SSAT)', 3.4019391052900155e-06], ['_s_', 3.4019391052900155e-06], ['_ss_,', 3.4019391052900155e-06], ['datapaths.', 3.4019391052900155e-06], ['old_value;', 3.4019391052900155e-06], ['(brig_inst_type', 3.4019391052900155e-06], ['(brig_inst->opcode);', 3.4019391052900155e-06], ['(is_fp16_operation)', 3.4019391052900155e-06], ['operands[0]));', 3.4019391052900155e-06], ['permutation', 3.4019391052900155e-06], ['old_value.', 3.4019391052900155e-06], ['new_value', 3.4019391052900155e-06], ['"new_output");', 3.4019391052900155e-06], ['old_value,', 3.4019391052900155e-06], ['lower_output', 3.4019391052900155e-06], ['"s_output");', 3.4019391052900155e-06], ['assign_lower', 3.4019391052900155e-06], ['lower_output,', 3.4019391052900155e-06], ['(assign_lower);', 3.4019391052900155e-06], ['lower_output;', 3.4019391052900155e-06], ['broadcasts', 3.4019391052900155e-06], ['VEC_OPERAND', 3.4019391052900155e-06], ['brig_basic_inst_handler::build_lower_element_broadcast', 3.4019391052900155e-06], ['vec_operand)', 3.4019391052900155e-06], ['(vec_operand),', 3.4019391052900155e-06], ['brig-branch-inst-handler.cc', 3.4019391052900155e-06], ['brig_branch_inst_handler::operator', 3.4019391052900155e-06], ['BRIG_OPCODE_CALL)', 3.4019391052900155e-06], ['*out_args;', 3.4019391052900155e-06], ['(out_args,', 3.4019391052900155e-06], ['*in_args;', 3.4019391052900155e-06], ['Ten', 3.4019391052900155e-06], ['initially,', 3.4019391052900155e-06], ['(operand_count', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CODE_REF);', 3.4019391052900155e-06], ['*operand_data);', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CODE_LIST);', 3.4019391052900155e-06], ['*codelist', 3.4019391052900155e-06], ['operand_data;', 3.4019391052900155e-06], ['(codelist->elements);', 3.4019391052900155e-06], ['*code_element', 3.4019391052900155e-06], ['(code_element->kind', 3.4019391052900155e-06], ['*brig_var', 3.4019391052900155e-06], ['code_element;', 3.4019391052900155e-06], ['(brig_var);', 3.4019391052900155e-06], ['(brig_var->type', 3.4019391052900155e-06], ['(out_args_p', 3.4019391052900155e-06], ['out_args', 3.4019391052900155e-06], ['in_args,', 3.4019391052900155e-06], ['(func_ref', 3.4019391052900155e-06], ['out_args->length', 3.4019391052900155e-06], ['(*out_args)[0];', 3.4019391052900155e-06], ['(ret_val);', 3.4019391052900155e-06], ['group_local_offset', 3.4019391052900155e-06], ['("group_local_offset",', 3.4019391052900155e-06], ['m_parent.m_cf->', 3.4019391052900155e-06], ['m_local_group_variables.size()));', 3.4019391052900155e-06], ["callee's", 3.4019391052900155e-06], ['aligned!', 3.4019391052900155e-06], ['m_parent.m_cf->m_group_base_arg);', 3.4019391052900155e-06], ['group_local_offset);', 3.4019391052900155e-06], ['m_parent.m_cf->m_private_base_arg);', 3.4019391052900155e-06], ['(ret_val_type,', 3.4019391052900155e-06], ['(func_ref),', 3.4019391052900155e-06], ['in_args);', 3.4019391052900155e-06], ['(func_ref)', 3.4019391052900155e-06], ['(ret_val', 3.4019391052900155e-06], ['(ret_val)', 3.4019391052900155e-06], ['(ret_val),', 3.4019391052900155e-06], ['ret_val,', 3.4019391052900155e-06], ['(result_assign);', 3.4019391052900155e-06], ['m_parent.m_cf->m_called_functions.push_back', 3.4019391052900155e-06], ['(func_ref);', 3.4019391052900155e-06], ['(func_ref))', 3.4019391052900155e-06], ['m_parent.add_decl_call', 3.4019391052900155e-06], ['BRIG_OPCODE_BR)', 3.4019391052900155e-06], ['BRIG_OPCODE_SBR)', 3.4019391052900155e-06], ['switch_expr', 3.4019391052900155e-06], ['(select),', 3.4019391052900155e-06], ['select,', 3.4019391052900155e-06], ['default_case', 3.4019391052900155e-06], ['(default_case,', 3.4019391052900155e-06], ['default_jump', 3.4019391052900155e-06], ['(default_jump,', 3.4019391052900155e-06], ['(cases);', 3.4019391052900155e-06], ['case_label', 3.4019391052900155e-06], ['c),', 3.4019391052900155e-06], ['(case_label,', 3.4019391052900155e-06], ['c));', 3.4019391052900155e-06], ['(switch_expr);', 3.4019391052900155e-06], ['BRIG_OPCODE_CBR)', 3.4019391052900155e-06], ['Represents', 3.4019391052900155e-06], ['(condition)?(goto', 3.4019391052900155e-06], ['foo):(goto', 3.4019391052900155e-06], ['bar).', 3.4019391052900155e-06], ['(if_stmt);', 3.4019391052900155e-06], ['BRIG_OPCODE_WAVEBARRIER)', 3.4019391052900155e-06], ['WAVEBARRIER', 3.4019391052900155e-06], ['NOP', 3.4019391052900155e-06], ['BRIG_OPCODE_BARRIER)', 3.4019391052900155e-06], ['(are', 3.4019391052900155e-06], ['gcc?)', 3.4019391052900155e-06], ['duplicated', 3.4019391052900155e-06], ["'noduplicate'", 3.4019391052900155e-06], ['LLVM.', 3.4019391052900155e-06], ['fbarriers.', 3.4019391052900155e-06], ['BRIG_OPCODE_ARRIVEFBAR', 3.4019391052900155e-06], ['BRIG_OPCODE_WAITFBAR)', 3.4019391052900155e-06], ['brig-cmp-inst-handler.cc', 3.4019391052900155e-06], ['brig_cmp_inst_handler::operator', 3.4019391052900155e-06], ['*inst_base', 3.4019391052900155e-06], ['cmp_type', 3.4019391052900155e-06], ['(inst->sourceType);', 3.4019391052900155e-06], ['(inst_base->type);', 3.4019391052900155e-06], ['is_fp16_dest', 3.4019391052900155e-06], ['is_boolean_dest', 3.4019391052900155e-06], ['BRIG_TYPE_B1;', 3.4019391052900155e-06], ['is_int_cmp', 3.4019391052900155e-06], ['(cmp_type)', 3.4019391052900155e-06], ['(cmp_type))', 3.4019391052900155e-06], ['extend/convert', 3.4019391052900155e-06], ['(*inst_base);', 3.4019391052900155e-06], ['(inst->compare)', 3.4019391052900155e-06], ['BRIG_COMPARE_SEQ:', 3.4019391052900155e-06], ['BRIG_COMPARE_EQ:', 3.4019391052900155e-06], ['BRIG_COMPARE_SNE:', 3.4019391052900155e-06], ['BRIG_COMPARE_NE:', 3.4019391052900155e-06], ['(!is_int_cmp)', 3.4019391052900155e-06], ['operands[2]));', 3.4019391052900155e-06], ['BRIG_COMPARE_SLT:', 3.4019391052900155e-06], ['BRIG_COMPARE_LT:', 3.4019391052900155e-06], ['BRIG_COMPARE_SLE:', 3.4019391052900155e-06], ['BRIG_COMPARE_LE:', 3.4019391052900155e-06], ['(LE_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SGT:', 3.4019391052900155e-06], ['BRIG_COMPARE_GT:', 3.4019391052900155e-06], ['BRIG_COMPARE_SGE:', 3.4019391052900155e-06], ['BRIG_COMPARE_GE:', 3.4019391052900155e-06], ['(GE_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SEQU:', 3.4019391052900155e-06], ['BRIG_COMPARE_EQU:', 3.4019391052900155e-06], ['(UNEQ_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SNEU:', 3.4019391052900155e-06], ['BRIG_COMPARE_NEU:', 3.4019391052900155e-06], ['BRIG_COMPARE_SLTU:', 3.4019391052900155e-06], ['BRIG_COMPARE_LTU:', 3.4019391052900155e-06], ['(UNLT_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SLEU:', 3.4019391052900155e-06], ['BRIG_COMPARE_LEU:', 3.4019391052900155e-06], ['(UNLE_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SGTU:', 3.4019391052900155e-06], ['BRIG_COMPARE_GTU:', 3.4019391052900155e-06], ['(UNGT_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SGEU:', 3.4019391052900155e-06], ['BRIG_COMPARE_GEU:', 3.4019391052900155e-06], ['(UNGE_EXPR,', 3.4019391052900155e-06], ['BRIG_COMPARE_SNUM:', 3.4019391052900155e-06], ['BRIG_COMPARE_NUM:', 3.4019391052900155e-06], ['BRIG_COMPARE_SNAN:', 3.4019391052900155e-06], ['BRIG_COMPARE_NAN:', 3.4019391052900155e-06], ['(UNORDERED_EXPR,', 3.4019391052900155e-06], ['(is_fp16_dest)', 3.4019391052900155e-06], ['ANY_INTEGRAL_TYPE_P', 3.4019391052900155e-06], ['!is_boolean_dest', 3.4019391052900155e-06], ['4.9.1.', 3.4019391052900155e-06], ["'true'", 3.4019391052900155e-06], ['HSA.', 3.4019391052900155e-06], ['<a', 3.4019391052900155e-06], ['all_ones', 3.4019391052900155e-06], ['all_zeroes', 3.4019391052900155e-06], ['(VEC_COND_EXPR,', 3.4019391052900155e-06], ['all_ones,', 3.4019391052900155e-06], ['all_zeroes);', 3.4019391052900155e-06], ['!is_boolean_dest)', 3.4019391052900155e-06], ['all-ones', 3.4019391052900155e-06], ['propagating', 3.4019391052900155e-06], ['signed_type', 3.4019391052900155e-06], ['signed_type_for', 3.4019391052900155e-06], ['signed_result', 3.4019391052900155e-06], ['shift_amount_cst', 3.4019391052900155e-06], ['shift_left_result', 3.4019391052900155e-06], ['signed_result,', 3.4019391052900155e-06], ['shift_left_result,', 3.4019391052900155e-06], ['S32', 3.4019391052900155e-06], ['S16s', 3.4019391052900155e-06], ['ints).', 3.4019391052900155e-06], ['("wide_cmp_result",', 3.4019391052900155e-06], ['wide_elements;', 3.4019391052900155e-06], ['shrunk_elements;', 3.4019391052900155e-06], ['wide_elements);', 3.4019391052900155e-06], ['wide_elements.size', 3.4019391052900155e-06], ['wide_elements.at', 3.4019391052900155e-06], ['shrunk_elements.push_back', 3.4019391052900155e-06], ['(short_integer_type_node,', 3.4019391052900155e-06], ['wide));', 3.4019391052900155e-06], ['(shrunk_elements);', 3.4019391052900155e-06], ['(*inst_base,', 3.4019391052900155e-06], ['brig_code_entry_handler::brig_code_entry_handler', 3.4019391052900155e-06], ['brig_entry_handler', 3.4019391052900155e-06], ['piece', 3.4019391052900155e-06], ['REF', 3.4019391052900155e-06], ['brig_code_entry_handler::build_code_ref', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_LABEL)', 3.4019391052900155e-06], ['(label_str);', 3.4019391052900155e-06], ['(m_parent.get_mangled_name', 3.4019391052900155e-06], ['(func));', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_FBARRIER)', 3.4019391052900155e-06], ['BrigDirectiveFbarrier*)&ref;', 3.4019391052900155e-06], ['local_offset,', 3.4019391052900155e-06], ['local_offset;', 3.4019391052900155e-06], ['OPERAND.', 3.4019391052900155e-06], ['BrigBase.', 3.4019391052900155e-06], ['IS_INPUT', 3.4019391052900155e-06], ['brig_code_entry_handler::build_tree_operand', 3.4019391052900155e-06], ['&operand,', 3.4019391052900155e-06], ['is_input)', 3.4019391052900155e-06], ['(operand.kind)', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST:', 3.4019391052900155e-06], ['unpack/pack', 3.4019391052900155e-06], ['fp16-fp32', 3.4019391052900155e-06], ['().', 3.4019391052900155e-06], ['(is_input', 3.4019391052900155e-06], ['(element)', 3.4019391052900155e-06], ['operand_type)', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CODE_LIST:', 3.4019391052900155e-06], ['case_index', 3.4019391052900155e-06], ['(case_index', 3.4019391052900155e-06], ['case_index)', 3.4019391052900155e-06], ['case_index++;', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_REGISTER:', 3.4019391052900155e-06], ['*brig_reg', 3.4019391052900155e-06], ['(brig_reg);', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CONSTANT_BYTES:', 3.4019391052900155e-06], ['*brigConst', 3.4019391052900155e-06], ['(brigConst,', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_WAVESIZE:', 3.4019391052900155e-06], ['(operand_type))', 3.4019391052900155e-06], ['gccbrig_get_target_wavesize', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CODE_REF:', 3.4019391052900155e-06], ['*brig_code_ref', 3.4019391052900155e-06], ['(brig_code_ref->ref);', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_ADDRESS:', 3.4019391052900155e-06], ['ADDR_OPERAND.', 3.4019391052900155e-06], ['brig_code_entry_handler::build_address_operand', 3.4019391052900155e-06], ['&addr_operand)', 3.4019391052900155e-06], ['BrigSegment8_t', 3.4019391052900155e-06], ['BRIG_SEGMENT_GLOBAL;', 3.4019391052900155e-06], ['BrigInstAddr', 3.4019391052900155e-06], ['BRIG_KIND_INST_ATOMIC)', 3.4019391052900155e-06], ['(addr_operand.symbol', 3.4019391052900155e-06], ['*arg_symbol', 3.4019391052900155e-06], ['(addr_operand.symbol);', 3.4019391052900155e-06], ['__args', 3.4019391052900155e-06], ['m_parent.m_cf->kernel_arg_offset', 3.4019391052900155e-06], ['const_offset,', 3.4019391052900155e-06], ['m_parent.private_variable_segment_offset', 3.4019391052900155e-06], ["item's", 3.4019391052900155e-06], ['copy:', 3.4019391052900155e-06], ['single-wi-offset', 3.4019391052900155e-06], ['wiflatid', 3.4019391052900155e-06], ['varsize', 3.4019391052900155e-06], ['segment,', 3.4019391052900155e-06], ['helping', 3.4019391052900155e-06], ['achieve', 3.4019391052900155e-06], ['autovectorization', 3.4019391052900155e-06], ['loads/stores', 3.4019391052900155e-06], ['uint32_0),', 3.4019391052900155e-06], ['uint32_1));', 3.4019391052900155e-06], ['uint32_2),', 3.4019391052900155e-06], ['var_region', 3.4019391052900155e-06], ['offset),', 3.4019391052900155e-06], ['m_parent.private_variable_size', 3.4019391052900155e-06], ['(var_name)),', 3.4019391052900155e-06], ['(BRIG_OPCODE_WORKITEMFLATID,', 3.4019391052900155e-06], ['var_region,', 3.4019391052900155e-06], ['mem-related', 3.4019391052900155e-06], ['(private', 3.4019391052900155e-06], ['group)', 3.4019391052900155e-06], ['group_var_offset.', 3.4019391052900155e-06], ['("priv_var_offset",', 3.4019391052900155e-06], ['arg_var_decl;', 3.4019391052900155e-06], ['(m_parent.m_cf->m_ret_value_brig_var', 3.4019391052900155e-06], ['arg_symbol)', 3.4019391052900155e-06], ['m_parent.m_cf->m_ret_temp;', 3.4019391052900155e-06], ['(arg_var_decl', 3.4019391052900155e-06], ['(arg_symbol->type', 3.4019391052900155e-06], ['segment),', 3.4019391052900155e-06], ['(arg_var_decl)))', 3.4019391052900155e-06], ['site),', 3.4019391052900155e-06], ['(arg_var_decl)),', 3.4019391052900155e-06], ['arg_var_decl,', 3.4019391052900155e-06], ['global_var_decl', 3.4019391052900155e-06], ['(yet),', 3.4019391052900155e-06], ['host_ptr_name', 3.4019391052900155e-06], ['host_defined_ptr', 3.4019391052900155e-06], ['(host_ptr_name);', 3.4019391052900155e-06], ['(host_defined_ptr', 3.4019391052900155e-06], ['host_defined_ptr;', 3.4019391052900155e-06], ['global_var_decl);', 3.4019391052900155e-06], ['lda_*', 3.4019391052900155e-06], ['perhaps', 3.4019391052900155e-06], ['segments', 3.4019391052900155e-06], ['now).', 3.4019391052900155e-06], ['m_parent.m_cf->m_group_base_arg;', 3.4019391052900155e-06], ['m_parent.m_cf->m_private_base_arg,', 3.4019391052900155e-06], ['symbol_base);', 3.4019391052900155e-06], ['m_parent.m_cf->m_private_base_arg;', 3.4019391052900155e-06], ['(addr_operand.reg', 3.4019391052900155e-06], ['*mem_base_reg', 3.4019391052900155e-06], ['(addr_operand.reg);', 3.4019391052900155e-06], ['base_reg_var', 3.4019391052900155e-06], ['(mem_base_reg);', 3.4019391052900155e-06], ['as_uint', 3.4019391052900155e-06], ['(base_reg_var);', 3.4019391052900155e-06], ['as_uint);', 3.4019391052900155e-06], ['target/data', 3.4019391052900155e-06], ['(ptype', 3.4019391052900155e-06], ['addressing', 3.4019391052900155e-06], ['[+', 3.4019391052900155e-06], ['offset].', 3.4019391052900155e-06], ['symbol_base),', 3.4019391052900155e-06], ['var_offset;', 3.4019391052900155e-06], ['symbol_base;', 3.4019391052900155e-06], ['(const_offset', 3.4019391052900155e-06], ['module-scope', 3.4019391052900155e-06], ['const_offset.', 3.4019391052900155e-06], ['Group', 3.4019391052900155e-06], ['const_offset;', 3.4019391052900155e-06], ['const_offset));', 3.4019391052900155e-06], ['codes', 3.4019391052900155e-06], ['Thus,', 3.4019391052900155e-06], ['offs', 3.4019391052900155e-06], ['(addr_operand.offset);', 3.4019391052900155e-06], ['(offs', 3.4019391052900155e-06], ['32bits', 3.4019391052900155e-06], ['See:', 3.4019391052900155e-06], ['http://www.hsafoundation.com/html_spec111/HSA_Library.htm', 3.4019391052900155e-06], ['#PRM/Topics/02_ProgModel/small_and_large_machine_models.htm', 3.4019391052900155e-06], ['#table_machine_model_data_sizes', 3.4019391052900155e-06], ['BRIG_SEGMENT_KERNARG;', 3.4019391052900155e-06], ['const_offset_2', 3.4019391052900155e-06], ['offs)', 3.4019391052900155e-06], ['(long_integer_type_node,', 3.4019391052900155e-06], ['offs));', 3.4019391052900155e-06], ['const_offset_2;', 3.4019391052900155e-06], ['Addr', 3.4019391052900155e-06], ['addr),', 3.4019391052900155e-06], ['const_offset_2));', 3.4019391052900155e-06], ['OPERAND_INDEX', 3.4019391052900155e-06], ['OPERAND_TYPE.', 3.4019391052900155e-06], ['brig_code_entry_handler::build_tree_operand_from_brig', 3.4019391052900155e-06], ['operand_index)', 3.4019391052900155e-06], ['&operand_entries->bytes)[operand_index];', 3.4019391052900155e-06], ['inputp', 3.4019391052900155e-06], ['!gccbrig_hsa_opcode_op_output_p', 3.4019391052900155e-06], ['operand_index);', 3.4019391052900155e-06], ['inputp);', 3.4019391052900155e-06], ['ELEMENT_TYPE', 3.4019391052900155e-06], ['NEXT_DATA.', 3.4019391052900155e-06], ['brig_code_entry_handler::build_tree_cst_element', 3.4019391052900155e-06], ['*next_data)', 3.4019391052900155e-06], ['uint16_t', 3.4019391052900155e-06], ['ieee_single_format.decode', 3.4019391052900155e-06], ['(&ieee_single_format,', 3.4019391052900155e-06], ['data[2];', 3.4019391052900155e-06], ['data[0]', 3.4019391052900155e-06], ['data[1]', 3.4019391052900155e-06], ['(next_data', 3.4019391052900155e-06], ['ieee_double_format.decode', 3.4019391052900155e-06], ['(&ieee_double_format,', 3.4019391052900155e-06], ['(BRIG_CONST).', 3.4019391052900155e-06], ['BRIG_CONST.', 3.4019391052900155e-06], ['brig_code_entry_handler::get_tree_cst_for_hsa_operand', 3.4019391052900155e-06], ['*brig_const,', 3.4019391052900155e-06], ['(brig_const->bytes);', 3.4019391052900155e-06], ['(brig_const->type);', 3.4019391052900155e-06], ['scalar_element_type', 3.4019391052900155e-06], ['brig_const->type', 3.4019391052900155e-06], ['*next_data', 3.4019391052900155e-06], ['(scalar_element_type)', 3.4019391052900155e-06], ['(tree_element_type))', 3.4019391052900155e-06], ['sole', 3.4019391052900155e-06], ['vectors),', 3.4019391052900155e-06], ['(tree_element_type);', 3.4019391052900155e-06], ['element_count)', 3.4019391052900155e-06], ['(scalar_element_size', 3.4019391052900155e-06], ['*vec_els', 3.4019391052900155e-06], ['(vec_els,', 3.4019391052900155e-06], ['vec_els);', 3.4019391052900155e-06], ['scalar_element_size)', 3.4019391052900155e-06], ['scalar_element_size);', 3.4019391052900155e-06], ['BRIG_TYPE.', 3.4019391052900155e-06], ['aritmethics', 3.4019391052900155e-06], ['contrast', 3.4019391052900155e-06], ['type).', 3.4019391052900155e-06], ['brig_code_entry_handler::get_tree_expr_type_for_hsa_type', 3.4019391052900155e-06], ['m_parent.s_fp32_type;', 3.4019391052900155e-06], ['(m_parent.s_fp32_type,', 3.4019391052900155e-06], ['SOURCE_TYPE.', 3.4019391052900155e-06], ['brig_code_entry_handler::get_comparison_result_type', 3.4019391052900155e-06], ['(source_type))', 3.4019391052900155e-06], ['(build_nonstandard_boolean_type', 3.4019391052900155e-06], ['BITS_PER_UNIT),', 3.4019391052900155e-06], ['(BRIG_TYPE_B1);', 3.4019391052900155e-06], ['brig_code_entry_handler::build_f2h_conversion', 3.4019391052900155e-06], ['float_to_half', 3.4019391052900155e-06], ['brig_code_entry_handler::build_h2f_conversion', 3.4019391052900155e-06], ['"normalizes"', 3.4019391052900155e-06], ['execution;', 3.4019391052900155e-06], ['flush', 3.4019391052900155e-06], ['applicable).', 3.4019391052900155e-06], ['brig_code_entry_handler::build_operands', 3.4019391052900155e-06], ['brig_code_entry_handler::analyze_operands', 3.4019391052900155e-06], ['tandem.', 3.4019391052900155e-06], ['Performs', 3.4019391052900155e-06], ['ANALYZE', 3.4019391052900155e-06], ['brig_to_generic::m_fn_regs_use_index.', 3.4019391052900155e-06], ['brig_code_entry_handler::', 3.4019391052900155e-06], ['analyze)', 3.4019391052900155e-06], ['dest_type;', 3.4019391052900155e-06], ['*cmp_inst', 3.4019391052900155e-06], ['(cmp_inst->sourceType);', 3.4019391052900155e-06], ['(cmp_inst->sourceType', 3.4019391052900155e-06], ['BRIG_KIND_INST_SOURCE_TYPE)', 3.4019391052900155e-06], ['*src_type_inst', 3.4019391052900155e-06], ['(src_type_inst->sourceType);', 3.4019391052900155e-06], ['(src_type_inst->sourceType', 3.4019391052900155e-06], ['BRIG_KIND_INST_SEG_CVT)', 3.4019391052900155e-06], ['*seg_cvt_inst', 3.4019391052900155e-06], ['(seg_cvt_inst->sourceType);', 3.4019391052900155e-06], ['load/stores', 3.4019391052900155e-06], ['BRIG_KIND_INST_CVT)', 3.4019391052900155e-06], ['Halfs', 3.4019391052900155e-06], ['"storage', 3.4019391052900155e-06], ['format"', 3.4019391052900155e-06], ['u16,', 3.4019391052900155e-06], ['are...', 3.4019391052900155e-06], ['(brig_inst.operands);', 3.4019391052900155e-06], ['(brig_inst.opcode,', 3.4019391052900155e-06], ['is_fp16_arith;', 3.4019391052900155e-06], ['((brig_inst.opcode', 3.4019391052900155e-06], ['BRIG_OPCODE_SHL', 3.4019391052900155e-06], ['brig_inst.opcode', 3.4019391052900155e-06], ['BRIG_OPCODE_SHR)', 3.4019391052900155e-06], ['scalar.', 3.4019391052900155e-06], ['ints', 3.4019391052900155e-06], ['extensions/negative', 3.4019391052900155e-06], ['masks,', 3.4019391052900155e-06], ['shuffles', 3.4019391052900155e-06], ['"raw', 3.4019391052900155e-06], ['operation".', 3.4019391052900155e-06], ['(dest_type));', 3.4019391052900155e-06], ['BRIG_OPCODE_CLASS', 3.4019391052900155e-06], ['BRIG_OPCODE_ACTIVELANEPERMUTE', 3.4019391052900155e-06], ['half_storage_type;', 3.4019391052900155e-06], ['(analyze)', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_REGISTER)', 3.4019391052900155e-06], ['&brig_reg', 3.4019391052900155e-06], ['*operand_data;', 3.4019391052900155e-06], ['m_parent.add_reg_used_as_type', 3.4019391052900155e-06], ['(brig_reg,', 3.4019391052900155e-06], ['!is_output);', 3.4019391052900155e-06], ['Cast/convert', 3.4019391052900155e-06], ['(!is_output)', 3.4019391052900155e-06], ['operand));', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_ADDRESS', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST)', 3.4019391052900155e-06], ['vectors)', 3.4019391052900155e-06], ['CMOV', 3.4019391052900155e-06], ['likes', 3.4019391052900155e-06], ["'operand", 3.4019391052900155e-06], ["0'.", 3.4019391052900155e-06], ['cmp_res_type', 3.4019391052900155e-06], ['cmp_res_type,', 3.4019391052900155e-06], ['(ftz)', 3.4019391052900155e-06], ['(is_fp16_arith)', 3.4019391052900155e-06], ['"register"', 3.4019391052900155e-06], ['OUTPUT', 3.4019391052900155e-06], ['variable/register,', 3.4019391052900155e-06], ['INST_EXPR', 3.4019391052900155e-06], ['Required', 3.4019391052900155e-06], ['brig_code_entry_handler::build_output_assignment', 3.4019391052900155e-06], ['inst_expr)', 3.4019391052900155e-06], ['result/input', 3.4019391052900155e-06], ['(can', 3.4019391052900155e-06], ['get_m_var_declfor_reg', 3.4019391052900155e-06], ['@', 3.4019391052900155e-06], ['brig-function.cc).', 3.4019391052900155e-06], ['output_type', 3.4019391052900155e-06], ['is_fp16', 3.4019391052900155e-06], ['brig_inst.base.kind', 3.4019391052900155e-06], ['BRIG_KIND_INST_MEM', 3.4019391052900155e-06], ['m_parent.m_cf->add_reg_var_update', 3.4019391052900155e-06], ['(output,', 3.4019391052900155e-06], ['(inst_expr)', 3.4019391052900155e-06], ['(inst_expr,', 3.4019391052900155e-06], ['(ftz', 3.4019391052900155e-06], ['(VECTOR_FLOAT_TYPE_P', 3.4019391052900155e-06], ['is_fp16))', 3.4019391052900155e-06], ['("before_ftz",', 3.4019391052900155e-06], ['("before_f2h",', 3.4019391052900155e-06], ['f2h_output', 3.4019391052900155e-06], ['f2h_output);', 3.4019391052900155e-06], ['conv);', 3.4019391052900155e-06], ['(output_type)', 3.4019391052900155e-06], ['(output)', 3.4019391052900155e-06], ['Expand/unpack', 3.4019391052900155e-06], ['FOR_EACH_CONSTRUCTOR_VALUE', 3.4019391052900155e-06], ['(CONSTRUCTOR_ELTS', 3.4019391052900155e-06], ['element)', 3.4019391052900155e-06], ['element_ref', 3.4019391052900155e-06], ['(element_type),', 3.4019391052900155e-06], ['element_ref);', 3.4019391052900155e-06], ['last_assign;', 3.4019391052900155e-06], ['bitcast', 3.4019391052900155e-06], ['Mainly', 3.4019391052900155e-06], ['differing', 3.4019391052900155e-06], ['bitwidths.', 3.4019391052900155e-06], ['(input_type);', 3.4019391052900155e-06], ['dst_width', 3.4019391052900155e-06], ['(output_type);', 3.4019391052900155e-06], ['inst_expr.', 3.4019391052900155e-06], ['dst_width)', 3.4019391052900155e-06], ['unsigned_p', 3.4019391052900155e-06], ['resized_type', 3.4019391052900155e-06], ['(dst_width', 3.4019391052900155e-06], ['unsigned_p);', 3.4019391052900155e-06], ['(resized_type,', 3.4019391052900155e-06], ['(STMT)', 3.4019391052900155e-06], ['brig_code_entry_handler::append_statement', 3.4019391052900155e-06], ['element(s)', 3.4019391052900155e-06], ['OPERAND,', 3.4019391052900155e-06], ['tree_element_unary_visitor::operator', 3.4019391052900155e-06], ['(operand)))', 3.4019391052900155e-06], ['pair(s)', 3.4019391052900155e-06], ['OPERAND0', 3.4019391052900155e-06], ['OPERAND1,', 3.4019391052900155e-06], ['tree_element_binary_visitor::operator', 3.4019391052900155e-06], ['(operand0)))', 3.4019391052900155e-06], ['(operand1)));', 3.4019391052900155e-06], ['(operand0)));', 3.4019391052900155e-06], ['element0', 3.4019391052900155e-06], ['element1', 3.4019391052900155e-06], ['operand1,', 3.4019391052900155e-06], ['element0,', 3.4019391052900155e-06], ['element1);', 3.4019391052900155e-06], ['flushes', 3.4019391052900155e-06], ['flush_to_zero::visit_element', 3.4019391052900155e-06], ['(m_fp16)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_FTZ_F32_F16)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_FTZ_F32);', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_FTZ_F64),', 3.4019391052900155e-06], ['float_to_half::visit_element', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_F32_TO_F16);', 3.4019391052900155e-06], ['casted_operand', 3.4019391052900155e-06], ['casted_operand);', 3.4019391052900155e-06], ['"fp16out");', 3.4019391052900155e-06], ['half_to_float::visit_element', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_F16_TO_F32);', 3.4019391052900155e-06], ['truncated_source', 3.4019391052900155e-06], ['truncated_source);', 3.4019391052900155e-06], ['const_fp32_type', 3.4019391052900155e-06], ['(const_fp32_type,', 3.4019391052900155e-06], ['"fp32out");', 3.4019391052900155e-06], ['casted_result', 3.4019391052900155e-06], ['casted_result);', 3.4019391052900155e-06], ['Treats', 3.4019391052900155e-06], ['SRC_TYPE', 3.4019391052900155e-06], ['DEST_TYPE.', 3.4019391052900155e-06], ['brig_code_entry_handler::extend_int', 3.4019391052900155e-06], ['src_type)', 3.4019391052900155e-06], ["destination's", 3.4019391052900155e-06], ['ext', 3.4019391052900155e-06], ['clip', 3.4019391052900155e-06], ['clipped_input', 3.4019391052900155e-06], ['(unsigned_type_for', 3.4019391052900155e-06], ['(signed_type_for', 3.4019391052900155e-06], ['width.', 3.4019391052900155e-06], ['register:', 3.4019391052900155e-06], ['D.1541', 3.4019391052900155e-06], ['char)', 3.4019391052900155e-06], ['short)', 3.4019391052900155e-06], ['D.1541;', 3.4019391052900155e-06], ['brig_code_entry_handler::int_constant_value', 3.4019391052900155e-06], ['brig-comment-handler.cc', 3.4019391052900155e-06], ['brig_directive_comment_handler::operator', 3.4019391052900155e-06], ['*brig_comment', 3.4019391052900155e-06], ['cmnt', 3.4019391052900155e-06], ['(brig_comment->name);', 3.4019391052900155e-06], ['"brig:', 3.4019391052900155e-06], ['Comment:', 3.4019391052900155e-06], ['\'%s\'\\n",', 3.4019391052900155e-06], ['cmnt.c_str());', 3.4019391052900155e-06], ['brig-control-handler.cc', 3.4019391052900155e-06], ['brig_directive_control_handler::operator', 3.4019391052900155e-06], ['(inst->operands);', 3.4019391052900155e-06], ['(inst->control', 3.4019391052900155e-06], ['BRIG_CONTROL_REQUIREDGRIDSIZE', 3.4019391052900155e-06], ['inst->control', 3.4019391052900155e-06], ['BRIG_CONTROL_MAXFLATGRIDSIZE)', 3.4019391052900155e-06], ['uint64_type_node', 3.4019391052900155e-06], ['(build_tree_operand', 3.4019391052900155e-06], ['(*(const', 3.4019391052900155e-06], ['BrigInstBase*)inst,', 3.4019391052900155e-06], ['operand_type));', 3.4019391052900155e-06], ['(inst->control)', 3.4019391052900155e-06], ['BRIG_CONTROL_MAXDYNAMICGROUPSIZE:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.max_dynamic_group_size', 3.4019391052900155e-06], ['BRIG_CONTROL_MAXFLATGRIDSIZE:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.max_flat_grid_size', 3.4019391052900155e-06], ['BRIG_CONTROL_MAXFLATWORKGROUPSIZE:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.max_flat_workgroup_size', 3.4019391052900155e-06], ['BRIG_CONTROL_REQUIREDDIM:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_dim', 3.4019391052900155e-06], ['BRIG_CONTROL_REQUIREDGRIDSIZE:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[0]', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[1]', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_grid_size[2]', 3.4019391052900155e-06], ['BRIG_CONTROL_REQUIREDWORKGROUPSIZE:', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[0]', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[1]', 3.4019391052900155e-06], ['m_parent.m_cf->m_descriptor.required_workgroup_size[2]', 3.4019391052900155e-06], ['BRIG_CONTROL_REQUIRENOPARTIALWORKGROUPS:', 3.4019391052900155e-06], ['Performance', 3.4019391052900155e-06], ['BRIG_CONTROL_ENABLEBREAKEXCEPTIONS:', 3.4019391052900155e-06], ['BRIG_CONTROL_ENABLEDETECTEXCEPTIONS:', 3.4019391052900155e-06], ['Unimplemented.', 3.4019391052900155e-06], ['("Unsupported', 3.4019391052900155e-06], ['%x.\\n",', 3.4019391052900155e-06], ['inst->control);', 3.4019391052900155e-06], ['brig-copy-move-inst-handler.cc', 3.4019391052900155e-06], ['copy/move', 3.4019391052900155e-06], ['brig_copy_move_inst_handler::handle_lda', 3.4019391052900155e-06], ['*brig_inst)', 3.4019391052900155e-06], ['brig_inst->base.byteCount;', 3.4019391052900155e-06], ['brig_copy_move_inst_handler::operator', 3.4019391052900155e-06], ['handle_lda', 3.4019391052900155e-06], ['(brig_inst);', 3.4019391052900155e-06], ['*inst_src_type', 3.4019391052900155e-06], ['(inst_src_type->sourceType);', 3.4019391052900155e-06], ['source_type,', 3.4019391052900155e-06], ['BRIG_OPCODE_COMBINE)', 3.4019391052900155e-06], ['combine,', 3.4019391052900155e-06], ['casted);', 3.4019391052900155e-06], ['BRIG_OPCODE_EXPAND)', 3.4019391052900155e-06], ['brig-cvt-inst-handler.cc', 3.4019391052900155e-06], ['(convert)', 3.4019391052900155e-06], ['brig_cvt_inst_handler::modifier', 3.4019391052900155e-06], ['brig_cvt_inst_handler::round', 3.4019391052900155e-06], ['brig_cvt_inst_handler::generate', 3.4019391052900155e-06], ['involved:', 3.4019391052900155e-06], ['*inst_modifier', 3.4019391052900155e-06], ['FTZ', 3.4019391052900155e-06], ['inst_modifier', 3.4019391052900155e-06], ['(*inst_modifier)', 3.4019391052900155e-06], ['cvt_inst->sourceType', 3.4019391052900155e-06], ['dest_is_fp16', 3.4019391052900155e-06], ['brig_inst->type', 3.4019391052900155e-06], ['(!dest_type', 3.4019391052900155e-06], ['!src_type)', 3.4019391052900155e-06], ['&input', 3.4019391052900155e-06], ['&output', 3.4019391052900155e-06], ['conv_src_size', 3.4019391052900155e-06], ['src_reg_size', 3.4019391052900155e-06], ['(src_reg_size', 3.4019391052900155e-06], ['conv_src_size)', 3.4019391052900155e-06], ['unsigned_type_for', 3.4019391052900155e-06], ["'ftz'.", 3.4019391052900155e-06], ['(FTZ', 3.4019391052900155e-06], ['BRIG_TYPE_B1)', 3.4019391052900155e-06], ['b1,', 3.4019391052900155e-06], ["'ztest'", 3.4019391052900155e-06], ['similarly', 3.4019391052900155e-06], ['(!=', 3.4019391052900155e-06], ['0.0f)', 3.4019391052900155e-06], ['floats.', 3.4019391052900155e-06], ['ztest', 3.4019391052900155e-06], ['+-', 3.4019391052900155e-06], ['0.0f.', 3.4019391052900155e-06], ['masking', 3.4019391052900155e-06], ['absf', 3.4019391052900155e-06], ['(NaN', 3.4019391052900155e-06], ['cvt).', 3.4019391052900155e-06], ['Bit', 3.4019391052900155e-06], ['battern', 3.4019391052900155e-06], ['0x7FFF);', 3.4019391052900155e-06], ['0x7FFFFFFF);', 3.4019391052900155e-06], ['0x7FFFFFFFFFFFFFFF);', 3.4019391052900155e-06], ['masked_input', 3.4019391052900155e-06], ['unsigned_int_type,', 3.4019391052900155e-06], ['casted_input,', 3.4019391052900155e-06], ['and_mask);', 3.4019391052900155e-06], ['(masked_input),', 3.4019391052900155e-06], ['masked_input,', 3.4019391052900155e-06], ['(BRIG_TYPE_B1),', 3.4019391052900155e-06], ['(dest_is_fp16)', 3.4019391052900155e-06], ['(FTZ)', 3.4019391052900155e-06], ['(conversion_result);', 3.4019391052900155e-06], ['src_type);', 3.4019391052900155e-06], ['(cvt_inst->round', 3.4019391052900155e-06], ['BRIG_ROUND_INTEGER_ZERO_SAT)', 3.4019391052900155e-06], ['(BrigType16_t)', 3.4019391052900155e-06], ['cvt_inst->sourceType;', 3.4019391052900155e-06], ['DEF_HSAIL_CVT_ZEROI_SAT_BUILTIN(ENUM,', 3.4019391052900155e-06], ['HSAIL_DST_TYPE,', 3.4019391052900155e-06], ['HSAIL_SRC_TYPE,', 3.4019391052900155e-06], ['HSAIL_DST_TYPE', 3.4019391052900155e-06], ['HSAIL_SRC_TYPE)', 3.4019391052900155e-06], ['src_type,', 3.4019391052900155e-06], ['dst_reg_size', 3.4019391052900155e-06], ['(output));', 3.4019391052900155e-06], ['reinterpret_cast.', 3.4019391052900155e-06], ['(casted_output)))', 3.4019391052900155e-06], ['resized_int_type', 3.4019391052900155e-06], ['resized_int_type,', 3.4019391052900155e-06], ['brig-fbarrier-handler.cc', 3.4019391052900155e-06], ['fbarrier', 3.4019391052900155e-06], ['fbarrier.', 3.4019391052900155e-06], ['FBARRIER_STRUCT_SIZE', 3.4019391052900155e-06], ['brig_directive_fbarrier_handler::operator', 3.4019391052900155e-06], ['fbarriers', 3.4019391052900155e-06], ['BrigDirectiveFbarrier*)base;', 3.4019391052900155e-06], ['FBARRIER_STRUCT_SIZE,', 3.4019391052900155e-06], ['brig_directive_function_handler::operator', 3.4019391052900155e-06], ['(!m_parent.m_analyzing)', 3.4019391052900155e-06], ['m_parent.finish_function', 3.4019391052900155e-06], ['*exec', 3.4019391052900155e-06], ['(exec->name).c_str());', 3.4019391052900155e-06], ['inargs', 3.4019391052900155e-06], ['outargs', 3.4019391052900155e-06], ['exec->inArgCount,', 3.4019391052900155e-06], ['exec->outArgCount,', 3.4019391052900155e-06], ['exec->name);', 3.4019391052900155e-06], ['exec->modifier', 3.4019391052900155e-06], ['BRIG_EXECUTABLE_DEFINITION;', 3.4019391052900155e-06], ['is_kernel', 3.4019391052900155e-06], ['base->kind', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_KERNEL;', 3.4019391052900155e-06], ['(is_kernel', 3.4019391052900155e-06], ['!is_definition)', 3.4019391052900155e-06], ['(exec);', 3.4019391052900155e-06], ['("_")', 3.4019391052900155e-06], ['(exec,', 3.4019391052900155e-06], ['&m_parent);', 3.4019391052900155e-06], ['m_parent.m_cf->m_name', 3.4019391052900155e-06], ['m_parent.m_cf->m_is_kernel', 3.4019391052900155e-06], ['is_kernel;', 3.4019391052900155e-06], ['(func_name)', 3.4019391052900155e-06], ['registers.', 3.4019391052900155e-06], ['restrict_const_char_ptr', 3.4019391052900155e-06], ['restrict_const_void_ptr', 3.4019391052900155e-06], ['phsail-finalizer', 3.4019391052900155e-06], ['hsa', 3.4019391052900155e-06], ['work-group.', 3.4019391052900155e-06], ['restrict_const_char_ptr,', 3.4019391052900155e-06], ['name_identifier);', 3.4019391052900155e-06], ['typelist', 3.4019391052900155e-06], ['(typelist);', 3.4019391052900155e-06], ['(BRIG_SEGMENT_KERNARG);', 3.4019391052900155e-06], ['arg_arg', 3.4019391052900155e-06], ['("__args"),', 3.4019391052900155e-06], ['restrict_const_char_ptr);', 3.4019391052900155e-06], ['arg_arg;', 3.4019391052900155e-06], ['restrict_const_char_ptr;', 3.4019391052900155e-06], ['Aggressive', 3.4019391052900155e-06], ['offlined', 3.4019391052900155e-06], ['enchance', 3.4019391052900155e-06], ['SIMD', 3.4019391052900155e-06], ['GPUs', 3.4019391052900155e-06], ['units.', 3.4019391052900155e-06], ['("flatten"),', 3.4019391052900155e-06], ['fingerprint', 3.4019391052900155e-06], ['fit.', 3.4019391052900155e-06], ['m_parent.m_cf->m_arg_variables.clear', 3.4019391052900155e-06], ['arg_handler', 3.4019391052900155e-06], ['*args;', 3.4019391052900155e-06], ['(exec->outArgCount', 3.4019391052900155e-06], ['*retval', 3.4019391052900155e-06], ['base->byteCount);', 3.4019391052900155e-06], ['(retval->kind', 3.4019391052900155e-06], ['(arg_decls', 3.4019391052900155e-06], ['arg_var;', 3.4019391052900155e-06], ['RESULT_DECL);', 3.4019391052900155e-06], ['m_parent.m_cf->m_ret_value', 3.4019391052900155e-06], ['(ret_value);', 3.4019391052900155e-06], ['m_parent.m_cf->m_ret_value_brig_var', 3.4019391052900155e-06], ['brigVar;', 3.4019391052900155e-06], ['retval->byteCount;', 3.4019391052900155e-06], ['(exec->inArgCount', 3.4019391052900155e-06], ['exec->firstInArg;', 3.4019391052900155e-06], ['exec->inArgCount;', 3.4019391052900155e-06], ['++arg)', 3.4019391052900155e-06], ['(arg_offset);', 3.4019391052900155e-06], ['(brigVar->base.kind', 3.4019391052900155e-06], ['brig_directive_variable_handler.', 3.4019391052900155e-06], ['brigVar->base.byteCount;', 3.4019391052900155e-06], ['build_function_type_vec', 3.4019391052900155e-06], ['(ret_type,', 3.4019391052900155e-06], ['arg_decls;', 3.4019391052900155e-06], ['__context', 3.4019391052900155e-06], ['WI-specific', 3.4019391052900155e-06], ['context_arg_type', 3.4019391052900155e-06], ['restrict_const_void_ptr;', 3.4019391052900155e-06], ['context_arg_type);', 3.4019391052900155e-06], ['context_arg);', 3.4019391052900155e-06], ['context_arg_type;', 3.4019391052900155e-06], ['m_parent.m_cf->m_context_arg', 3.4019391052900155e-06], ['group_base_arg', 3.4019391052900155e-06], ['group_base_arg);', 3.4019391052900155e-06], ['m_parent.m_cf->m_group_base_arg', 3.4019391052900155e-06], ['group_base_arg;', 3.4019391052900155e-06], ['(non-kernel)', 3.4019391052900155e-06], ['group_base_ptr.', 3.4019391052900155e-06], ['substracted', 3.4019391052900155e-06], ['chunk.', 3.4019391052900155e-06], ['("__group_local_offset"),', 3.4019391052900155e-06], ['m_parent.m_cf->m_group_local_offset_arg', 3.4019391052900155e-06], ['group_local_offset_arg;', 3.4019391052900155e-06], ['private_base_arg', 3.4019391052900155e-06], ['("__private_base_addr"),', 3.4019391052900155e-06], ['private_base_arg);', 3.4019391052900155e-06], ['m_parent.m_cf->m_private_base_arg', 3.4019391052900155e-06], ['private_base_arg;', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_KERNEL)', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_SIGNATURE)', 3.4019391052900155e-06], ['BRIG_KIND_DIRECTIVE_INDIRECT_FUNCTION)', 3.4019391052900155e-06], ['initial_block', 3.4019391052900155e-06], ['initial_block;', 3.4019391052900155e-06], ['(fndecl))', 3.4019391052900155e-06], ['m_parent.add_function_decl', 3.4019391052900155e-06], ['(func_name,', 3.4019391052900155e-06], ['m_parent.append_global', 3.4019391052900155e-06], ['(!is_definition)', 3.4019391052900155e-06], ['m_parent.start_function', 3.4019391052900155e-06], ['trunk.', 3.4019391052900155e-06], ['m_parent.m_cf->m_ret_temp', 3.4019391052900155e-06], ['m_parent.m_cf->add_local_variable', 3.4019391052900155e-06], ['("_retvalue_temp",', 3.4019391052900155e-06], ['(ret_value));', 3.4019391052900155e-06], ['(temp_var)', 3.4019391052900155e-06], ['m_parent.m_cf->add_id_variables', 3.4019391052900155e-06], ['m_parent.m_cf->m_entry_label_stmt', 3.4019391052900155e-06], ['("__kernel_entry"));', 3.4019391052900155e-06], ['(m_parent.m_cf->m_entry_label_stmt);', 3.4019391052900155e-06], ['m_parent.m_cf->m_kernel_entry', 3.4019391052900155e-06], ['gotos', 3.4019391052900155e-06], ['m_parent.m_cf->m_exit_label', 3.4019391052900155e-06], ['("__kernel_exit");', 3.4019391052900155e-06], ['brig-function.cc', 3.4019391052900155e-06], ['"brig-function.h"', 3.4019391052900155e-06], ['brig_function::builtin_map', 3.4019391052900155e-06], ['brig_function::s_custom_builtins;', 3.4019391052900155e-06], ['brig_function::brig_function', 3.4019391052900155e-06], ['*exec,', 3.4019391052900155e-06], ['*parent)', 3.4019391052900155e-06], ['m_brig_def', 3.4019391052900155e-06], ['(exec),', 3.4019391052900155e-06], ['m_is_finished', 3.4019391052900155e-06], ['(""),', 3.4019391052900155e-06], ['m_current_bind_expr', 3.4019391052900155e-06], ['m_func_decl', 3.4019391052900155e-06], ['m_context_arg', 3.4019391052900155e-06], ['m_group_base_arg', 3.4019391052900155e-06], ['m_private_base_arg', 3.4019391052900155e-06], ['m_ret_value', 3.4019391052900155e-06], ['m_ret_value_brig_var', 3.4019391052900155e-06], ['m_has_allocas', 3.4019391052900155e-06], ['m_generating_arg_block', 3.4019391052900155e-06], ['m_parent', 3.4019391052900155e-06], ['(m_regs,', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT', 3.4019391052900155e-06], ['(BrigOperandRegister', 3.4019391052900155e-06], ['*));', 3.4019391052900155e-06], ['(&m_descriptor,', 3.4019391052900155e-06], ['(phsa_descriptor));', 3.4019391052900155e-06], ['(s_custom_builtins.size', 3.4019391052900155e-06], ['DEF_HSAIL_BUILTIN(ENUM,', 3.4019391052900155e-06], ['HSAIL_OPCODE,', 3.4019391052900155e-06], ['s_custom_builtins[std::make_pair', 3.4019391052900155e-06], ['(HSAIL_OPCODE,', 3.4019391052900155e-06], ['HSAIL_TYPE)]', 3.4019391052900155e-06], ['brig_function::~brig_function', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT;', 3.4019391052900155e-06], ['(m_regs[i]', 3.4019391052900155e-06], ['m_regs[i];', 3.4019391052900155e-06], ['m_regs[i]', 3.4019391052900155e-06], ['brig_function::label', 3.4019391052900155e-06], ['m_label_index.find', 3.4019391052900155e-06], ['m_label_index.end', 3.4019391052900155e-06], ['label_decl', 3.4019391052900155e-06], ['m_label_index[name]', 3.4019391052900155e-06], ['brig_function::add_arg_variable', 3.4019391052900155e-06], ['treeDecl)', 3.4019391052900155e-06], ['m_arg_variables[brigVar]', 3.4019391052900155e-06], ['treeDecl;', 3.4019391052900155e-06], ['brig_function::arg_variable', 3.4019391052900155e-06], ['variable_index::const_iterator', 3.4019391052900155e-06], ['m_arg_variables.find', 3.4019391052900155e-06], ['m_arg_variables.end', 3.4019391052900155e-06], ['brig_function::append_kernel_arg', 3.4019391052900155e-06], ['*var,', 3.4019391052900155e-06], ['(m_is_kernel);', 3.4019391052900155e-06], ['m_kernarg_offsets[var]', 3.4019391052900155e-06], ['m_next_kernarg_offset;', 3.4019391052900155e-06], ['m_kernarg_max_align;', 3.4019391052900155e-06], ['brig_function::kernel_arg_offset', 3.4019391052900155e-06], ['m_kernarg_offsets.find', 3.4019391052900155e-06], ['m_kernarg_offsets.end', 3.4019391052900155e-06], ['brig_function::add_id_variables', 3.4019391052900155e-06], ['ids.', 3.4019391052900155e-06], ['m_kernel_entry', 3.4019391052900155e-06], ['dim_char', 3.4019391052900155e-06], ['16b', 3.4019391052900155e-06], ['32b).', 3.4019391052900155e-06], ['m_local_id_vars[i]', 3.4019391052900155e-06], ['("__local_")', 3.4019391052900155e-06], ['workitemid_call', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_WORKITEMID),', 3.4019391052900155e-06], ['id_init', 3.4019391052900155e-06], ['m_local_id_vars[i],', 3.4019391052900155e-06], ['workitemid_call));', 3.4019391052900155e-06], ['(id_init);', 3.4019391052900155e-06], ['m_cur_wg_size_vars[i]', 3.4019391052900155e-06], ['("__cur_wg_size_")', 3.4019391052900155e-06], ['cwgz_call;', 3.4019391052900155e-06], ['(BRIG_OPCODE_CURRENTWORKGROUPSIZE,', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_CURRENTWORKGROUPSIZE),', 3.4019391052900155e-06], ['limit_init', 3.4019391052900155e-06], ['m_cur_wg_size_vars[i],', 3.4019391052900155e-06], ['cwgz_call));', 3.4019391052900155e-06], ['(limit_init);', 3.4019391052900155e-06], ['m_wg_id_vars[i]', 3.4019391052900155e-06], ['("__workgroupid_")', 3.4019391052900155e-06], ['wgid_call;', 3.4019391052900155e-06], ['(BRIG_OPCODE_WORKGROUPID,', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_WORKGROUPID),', 3.4019391052900155e-06], ['wgid_init', 3.4019391052900155e-06], ['(m_wg_id_vars[i]),', 3.4019391052900155e-06], ['m_wg_id_vars[i],', 3.4019391052900155e-06], ['wgid_call);', 3.4019391052900155e-06], ['(wgid_init);', 3.4019391052900155e-06], ['m_wg_size_vars[i]', 3.4019391052900155e-06], ['("__workgroupsize_")', 3.4019391052900155e-06], ['wgsize_call;', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_WORKGROUPSIZE),', 3.4019391052900155e-06], ['wgsize_init', 3.4019391052900155e-06], ['(m_wg_size_vars[i]),', 3.4019391052900155e-06], ['m_wg_size_vars[i],', 3.4019391052900155e-06], ['wgsize_call);', 3.4019391052900155e-06], ['(wgsize_init);', 3.4019391052900155e-06], ['m_grid_size_vars[i]', 3.4019391052900155e-06], ['("__gridsize_")', 3.4019391052900155e-06], ['gridsize_call', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_GRIDSIZE),', 3.4019391052900155e-06], ['gridsize_init', 3.4019391052900155e-06], ['(m_grid_size_vars[i]),', 3.4019391052900155e-06], ['m_grid_size_vars[i],', 3.4019391052900155e-06], ['gridsize_call);', 3.4019391052900155e-06], ['(gridsize_init);', 3.4019391052900155e-06], ['m_abs_id_base_vars[i]', 3.4019391052900155e-06], ['("__abs_id_base_")', 3.4019391052900155e-06], ['m_abs_id_vars[i]', 3.4019391052900155e-06], ['("__abs_id_")', 3.4019391052900155e-06], ['abs_id_base', 3.4019391052900155e-06], ['m_wg_id_vars[i]),', 3.4019391052900155e-06], ['m_wg_size_vars[i]));', 3.4019391052900155e-06], ['abs_id', 3.4019391052900155e-06], ['abs_id_base,', 3.4019391052900155e-06], ['m_local_id_vars[i]));', 3.4019391052900155e-06], ['abs_id_base_init', 3.4019391052900155e-06], ['(m_abs_id_base_vars[i]),', 3.4019391052900155e-06], ['m_abs_id_base_vars[i],', 3.4019391052900155e-06], ['abs_id_base);', 3.4019391052900155e-06], ['(abs_id_base_init);', 3.4019391052900155e-06], ['abs_id_init', 3.4019391052900155e-06], ['(m_abs_id_vars[i]),', 3.4019391052900155e-06], ['m_abs_id_vars[i],', 3.4019391052900155e-06], ['abs_id);', 3.4019391052900155e-06], ['(abs_id_init);', 3.4019391052900155e-06], ['brig_function::add_local_variable', 3.4019391052900155e-06], ['(m_func_decl);', 3.4019391052900155e-06], ['(scalar,', 3.4019391052900155e-06], ['etc.)', 3.4019391052900155e-06], ['unoptimizable)', 3.4019391052900155e-06], ['(seems', 3.4019391052900155e-06], ['BB).', 3.4019391052900155e-06], ['brig_function::get_tree_type_for_hsa_reg', 3.4019391052900155e-06], ['(reg_size,', 3.4019391052900155e-06], ['(m_parent->m_fn_regs_use_index.count', 3.4019391052900155e-06], ['(m_name)', 3.4019391052900155e-06], ['&index', 3.4019391052900155e-06], ['m_parent->m_fn_regs_use_index[m_name];', 3.4019391052900155e-06], ['reg_id', 3.4019391052900155e-06], ['(index.count', 3.4019391052900155e-06], ['(reg_id)', 3.4019391052900155e-06], ['index.find', 3.4019391052900155e-06], ['(reg_id)->second;', 3.4019391052900155e-06], ['it_end', 3.4019391052900155e-06], ['it_end;', 3.4019391052900155e-06], ['type_bit_size', 3.4019391052900155e-06], ['(it->first)', 3.4019391052900155e-06], ['(type_bit_size', 3.4019391052900155e-06], ['reg_size)', 3.4019391052900155e-06], ['(it->second', 3.4019391052900155e-06], ['max_refs_as_type_count)', 3.4019391052900155e-06], ['DECL_VAR', 3.4019391052900155e-06], ['generated,', 3.4019391052900155e-06], ['brig_function::get_m_var_declfor_reg', 3.4019391052900155e-06], ['reg_decl_index_entry', 3.4019391052900155e-06], ['*regEntry', 3.4019391052900155e-06], ['m_regs[offset];', 3.4019391052900155e-06], ['(regEntry', 3.4019391052900155e-06], ['(reg_size', 3.4019391052900155e-06], ['get_tree_type_for_hsa_reg', 3.4019391052900155e-06], ['qualifier', 3.4019391052900155e-06], ['nonconst_type', 3.4019391052900155e-06], ['regEntry', 3.4019391052900155e-06], ['reg_decl_index_entry;', 3.4019391052900155e-06], ['regEntry->m_var_decl', 3.4019391052900155e-06], ['(gccbrig_reg_name', 3.4019391052900155e-06], ['(reg),', 3.4019391052900155e-06], ['nonconst_type);', 3.4019391052900155e-06], ['m_regs[offset]', 3.4019391052900155e-06], ['regEntry;', 3.4019391052900155e-06], ['regEntry->m_var_decl;', 3.4019391052900155e-06], ['do..while', 3.4019391052900155e-06], ['DIM.', 3.4019391052900155e-06], ['HEADER_ENTRY', 3.4019391052900155e-06], ['starts.', 3.4019391052900155e-06], ['BRANCH_AFTER', 3.4019391052900155e-06], ['appended.', 3.4019391052900155e-06], ['brig_function::add_wi_loop', 3.4019391052900155e-06], ['dim,', 3.4019391052900155e-06], ['*header_entry,', 3.4019391052900155e-06], ['*branch_after)', 3.4019391052900155e-06], ['ivar', 3.4019391052900155e-06], ['m_local_id_vars[dim];', 3.4019391052900155e-06], ['abs_id_base_var', 3.4019391052900155e-06], ['m_abs_id_base_vars[dim];', 3.4019391052900155e-06], ['abs_id_var', 3.4019391052900155e-06], ['ivar_max', 3.4019391052900155e-06], ['*header_entry;', 3.4019391052900155e-06], ['"register', 3.4019391052900155e-06], ['variables"', 3.4019391052900155e-06], ['ivar_init', 3.4019391052900155e-06], ['ivar_init,', 3.4019391052900155e-06], ['abs_id_var_init', 3.4019391052900155e-06], ['abs_id_base_var));', 3.4019391052900155e-06], ['abs_id_var_init,', 3.4019391052900155e-06], ['loop_body_label', 3.4019391052900155e-06], ['("__wi_loop_")', 3.4019391052900155e-06], ['dim));', 3.4019391052900155e-06], ['loop_body_label_stmt', 3.4019391052900155e-06], ['loop_body_label_stmt,', 3.4019391052900155e-06], ['(m_has_unexpanded_dp_builtins)', 3.4019391052900155e-06], ['(!flag_assume_phsa)', 3.4019391052900155e-06], ['id_set_builtin', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_SETWORKITEMID);', 3.4019391052900155e-06], ['wi-loop', 3.4019391052900155e-06], ['id_set_call', 3.4019391052900155e-06], ['(id_set_builtin,', 3.4019391052900155e-06], ['dim),', 3.4019391052900155e-06], ['ivar),', 3.4019391052900155e-06], ['id_set_call,', 3.4019391052900155e-06], ['ivar));', 3.4019391052900155e-06], ['assign,', 3.4019391052900155e-06], ['incr', 3.4019391052900155e-06], ['incr,', 3.4019391052900155e-06], ['...and', 3.4019391052900155e-06], ['abs_id_incr', 3.4019391052900155e-06], ['(abs_id_var)));', 3.4019391052900155e-06], ['abs_id_incr,', 3.4019391052900155e-06], ['goto.', 3.4019391052900155e-06], ['ivar_max);', 3.4019391052900155e-06], ['if_stmt,', 3.4019391052900155e-06], ['analyzes', 3.4019391052900155e-06], ['callees', 3.4019391052900155e-06], ['brig_function::analyze_calls', 3.4019391052900155e-06], ['(m_calls_analyzed)', 3.4019391052900155e-06], ['stuck', 3.4019391052900155e-06], ['graphs.', 3.4019391052900155e-06], ['m_called_functions.size', 3.4019391052900155e-06], ['m_called_functions[i];', 3.4019391052900155e-06], ['*called_f', 3.4019391052900155e-06], ['m_parent->get_finished_function', 3.4019391052900155e-06], ['(called_f', 3.4019391052900155e-06], ['Unfinished', 3.4019391052900155e-06], ['(only', 3.4019391052900155e-06], ['BRIGs)', 3.4019391052900155e-06], ['CG', 3.4019391052900155e-06], ['safety.', 3.4019391052900155e-06], ['called_f->analyze_calls', 3.4019391052900155e-06], ['reanalyze', 3.4019391052900155e-06], ['called_f->m_has_barriers;', 3.4019391052900155e-06], ['opposite,', 3.4019391052900155e-06], ['omitted.', 3.4019391052900155e-06], ['called_f->m_has_unexpanded_dp_builtins;', 3.4019391052900155e-06], ['Tries', 3.4019391052900155e-06], ['successful.', 3.4019391052900155e-06], ['brig_function::convert_to_wg_function', 3.4019391052900155e-06], ['(!m_calls_analyzed)', 3.4019391052900155e-06], ['analyze_calls', 3.4019391052900155e-06], ['(m_has_barriers', 3.4019391052900155e-06], ['m_has_function_calls_with_barriers)', 3.4019391052900155e-06], ['barriers', 3.4019391052900155e-06], ['function_exit', 3.4019391052900155e-06], ['add_wi_loop', 3.4019391052900155e-06], ['&m_kernel_entry,', 3.4019391052900155e-06], ['&function_exit);', 3.4019391052900155e-06], ['utilized', 3.4019391052900155e-06], ['brig_function::emit_metadata', 3.4019391052900155e-06], ['stmt_list)', 3.4019391052900155e-06], ['disgusting,', 3.4019391052900155e-06], ['life', 3.4019391052900155e-06], [';)', 3.4019391052900155e-06], ['m_name;', 3.4019391052900155e-06], ['".pushsection', 3.4019391052900155e-06], ['PHSA_DESC_SECTION_PREFIX', 3.4019391052900155e-06], ['"\\t.p2align', 3.4019391052900155e-06], ['"\\t.byte', 3.4019391052900155e-06], ['(phsa_descriptor);', 3.4019391052900155e-06], ['"0x"', 3.4019391052900155e-06], ['std::setw', 3.4019391052900155e-06], ['std::setfill', 3.4019391052900155e-06], ["('0')", 3.4019391052900155e-06], ['std::hex', 3.4019391052900155e-06], ['*((unsigned', 3.4019391052900155e-06], ['&m_descriptor', 3.4019391052900155e-06], ['(phsa_descriptor))', 3.4019391052900155e-06], ['".popsection"', 3.4019391052900155e-06], ['metadata_asm', 3.4019391052900155e-06], ['(strstr.str', 3.4019391052900155e-06], ['().size', 3.4019391052900155e-06], ['().c_str', 3.4019391052900155e-06], ['(metadata_asm,', 3.4019391052900155e-06], ['metadata_asm;', 3.4019391052900155e-06], ['device-side', 3.4019391052900155e-06], ['C:', 3.4019391052900155e-06], ['__hsail_launch_kernel', 3.4019391052900155e-06], ['or,', 3.4019391052900155e-06], ['successful', 3.4019391052900155e-06], ['__hsail_launch_wg_function', 3.4019391052900155e-06], ['user/host', 3.4019391052900155e-06], ['outside.', 3.4019391052900155e-06], ['_KernelName.', 3.4019391052900155e-06], ['brig_function::emit_launcher_and_metadata', 3.4019391052900155e-06], ['(kern_name.c_str', 3.4019391052900155e-06], ['kern_name.size', 3.4019391052900155e-06], ['restrict_void_ptr;', 3.4019391052900155e-06], ['group_base_addr_arg', 3.4019391052900155e-06], ['group_base_addr_arg);', 3.4019391052900155e-06], ['(launcher))', 3.4019391052900155e-06], ['(launcher));', 3.4019391052900155e-06], ['kernel_func_ptr', 3.4019391052900155e-06], ['m_func_decl);', 3.4019391052900155e-06], ['phsail_launch_kernel_call;', 3.4019391052900155e-06], ['group_local_offset_temp', 3.4019391052900155e-06], ['"group_local_offset");', 3.4019391052900155e-06], ['group_local_offset_temp,', 3.4019391052900155e-06], ['m_parent->m_module_group_variables.size()));', 3.4019391052900155e-06], ['(m_is_wg_function)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_LAUNCH_WG_FUNC),', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_LAUNCH_KERNEL),', 3.4019391052900155e-06], ['(phsail_launch_kernel_call,', 3.4019391052900155e-06], ['emit_metadata', 3.4019391052900155e-06], ['(stmt_list);', 3.4019391052900155e-06], ['brig_function::append_statement', 3.4019391052900155e-06], ['"alloca', 3.4019391052900155e-06], ['frame"', 3.4019391052900155e-06], ['injecting', 3.4019391052900155e-06], ['brig_function::create_alloca_frame', 3.4019391052900155e-06], ['m_kernel_entry;', 3.4019391052900155e-06], ['push_frame_builtin', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_PUSH_FRAME);', 3.4019391052900155e-06], ['push_frame_call', 3.4019391052900155e-06], ['(push_frame_builtin,', 3.4019391052900155e-06], ['push_frame_call,', 3.4019391052900155e-06], ['pop_frame_builtin', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_POP_FRAME);', 3.4019391052900155e-06], ['pop_frame_call', 3.4019391052900155e-06], ['(pop_frame_builtin,', 3.4019391052900155e-06], ['pop_frame_call,', 3.4019391052900155e-06], ['TSI_SAME_STMT);', 3.4019391052900155e-06], ['tsi_next', 3.4019391052900155e-06], ['(&entry);', 3.4019391052900155e-06], ['(!tsi_end_p', 3.4019391052900155e-06], ['(entry));', 3.4019391052900155e-06], ['Finishes', 3.4019391052900155e-06], ['appeneded', 3.4019391052900155e-06], ['brig_function::finish', 3.4019391052900155e-06], ['brig_function::finish_kernel', 3.4019391052900155e-06], ['Kernel', 3.4019391052900155e-06], ['(build_stmt', 3.4019391052900155e-06], ['m_exit_label));', 3.4019391052900155e-06], ['convert_to_wg_function', 3.4019391052900155e-06], ['brig_function::append_return_stmt', 3.4019391052900155e-06], ['(m_current_bind_expr', 3.4019391052900155e-06], ['(m_current_bind_expr);', 3.4019391052900155e-06], ['(STATEMENT_LIST_TAIL', 3.4019391052900155e-06], ['last_stmt', 3.4019391052900155e-06], ['(tsi_last', 3.4019391052900155e-06], ['(stmts));', 3.4019391052900155e-06], ['(last_stmt)', 3.4019391052900155e-06], ['(m_ret_value', 3.4019391052900155e-06], ['(m_ret_value),', 3.4019391052900155e-06], ['m_ret_value,', 3.4019391052900155e-06], ['m_ret_temp);', 3.4019391052900155e-06], ['(result_assign),', 3.4019391052900155e-06], ['result_assign);', 3.4019391052900155e-06], ['(return_expr,', 3.4019391052900155e-06], ['return_stmt', 3.4019391052900155e-06], ['(return_stmt,', 3.4019391052900155e-06], ['brig_function::has_function_scope_var', 3.4019391052900155e-06], ['BrigBase*', 3.4019391052900155e-06], ['m_function_scope_vars.find', 3.4019391052900155e-06], ['m_function_scope_vars.end', 3.4019391052900155e-06], ['brig_function::group_variable_segment_offset', 3.4019391052900155e-06], ['(m_local_group_variables.has_variable', 3.4019391052900155e-06], ['m_local_group_variables.segment_offset', 3.4019391052900155e-06], ['(m_parent->m_module_group_variables.has_variable', 3.4019391052900155e-06], ['m_parent->m_module_group_variables.segment_offset', 3.4019391052900155e-06], ['opcode/type,', 3.4019391052900155e-06], ['brig_function::expand_or_call_builtin', 3.4019391052900155e-06], ['(can_expand_builtin', 3.4019391052900155e-06], ['get_builtin_for_hsa_opcode', 3.4019391052900155e-06], ['(built_in)))', 3.4019391052900155e-06], ['BRIG_OPCODE_LERP', 3.4019391052900155e-06], ['BRIG_OPCODE_PACKCVT', 3.4019391052900155e-06], ['BRIG_OPCODE_SADHI)', 3.4019391052900155e-06], ['(operand0_elements.size', 3.4019391052900155e-06], ['(operand0_elements.at', 3.4019391052900155e-06], ['(operand1_elements.size', 3.4019391052900155e-06], ['(operand1_elements.at', 3.4019391052900155e-06], ['(expand_or_call_builtin', 3.4019391052900155e-06], ['operand_types;', 3.4019391052900155e-06], ['(built_in));', 3.4019391052900155e-06], ['operands[i]));', 3.4019391052900155e-06], ['(m_context_arg);', 3.4019391052900155e-06], ['(ptr_type_node);', 3.4019391052900155e-06], ['call_operands.size', 3.4019391052900155e-06], ['call_operands.resize', 3.4019391052900155e-06], ['operand_types.resize', 3.4019391052900155e-06], ['(operand_types.at', 3.4019391052900155e-06], ['(built_in);', 3.4019391052900155e-06], ['operand_count,', 3.4019391052900155e-06], ['&call_operands[0]);', 3.4019391052900155e-06], ['mechanism', 3.4019391052900155e-06], ['beneficial', 3.4019391052900155e-06], ['identification', 3.4019391052900155e-06], ['unanalyzable', 3.4019391052900155e-06], ['box', 3.4019391052900155e-06], ['vectorizable', 3.4019391052900155e-06], ['multi', 3.4019391052900155e-06], ['work-groups.', 3.4019391052900155e-06], ['identifies', 3.4019391052900155e-06], ['brig_function::expand_builtin', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKITEMFLATABSID)', 3.4019391052900155e-06], ['id0);', 3.4019391052900155e-06], ['id1);', 3.4019391052900155e-06], ['uint32_2);', 3.4019391052900155e-06], ['id2);', 3.4019391052900155e-06], ['m_grid_size_vars[0]);', 3.4019391052900155e-06], ['m_grid_size_vars[1]);', 3.4019391052900155e-06], ['id2,', 3.4019391052900155e-06], ['id2_x_max0_x_max1,', 3.4019391052900155e-06], ['max1);', 3.4019391052900155e-06], ['id1_x_max0', 3.4019391052900155e-06], ['id1,', 3.4019391052900155e-06], ['id0,', 3.4019391052900155e-06], ['id1_x_max0);', 3.4019391052900155e-06], ['id2_x_max0_x_max1);', 3.4019391052900155e-06], ['("workitemflatabsid",', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKITEMABSID)', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKITEMFLATID)', 3.4019391052900155e-06], ['wg_size_x', 3.4019391052900155e-06], ['wg_size_y', 3.4019391052900155e-06], ['uint32_2)),', 3.4019391052900155e-06], ['z_x_wgsx_wgsy,', 3.4019391052900155e-06], ['wg_size_y);', 3.4019391052900155e-06], ['y_x_wgsx', 3.4019391052900155e-06], ['uint32_1)),', 3.4019391052900155e-06], ['y_x_wgsx,', 3.4019391052900155e-06], ['z_x_wgsx_wgsy);', 3.4019391052900155e-06], ['uint32_0)),', 3.4019391052900155e-06], ['("workitemflatid",', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKGROUPSIZE)', 3.4019391052900155e-06], ['PHSA_CONTEXT_WG_SIZES', 3.4019391052900155e-06], ['("wgsize_x");', 3.4019391052900155e-06], ['phsa', 3.4019391052900155e-06], ['temps', 3.4019391052900155e-06], ['LICM', 3.4019391052900155e-06], ['m_wg_size_vars[dim];', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKITEMID)', 3.4019391052900155e-06], ['m_local_id_vars', 3.4019391052900155e-06], ['PHSA_CONTEXT_OFFS_WI_IDS', 3.4019391052900155e-06], ['("wiid_x");', 3.4019391052900155e-06], ['BRIG_OPCODE_WORKGROUPID)', 3.4019391052900155e-06], ['PHSA_CONTEXT_OFFS_WG_IDS', 3.4019391052900155e-06], ['("wgid_x");', 3.4019391052900155e-06], ['m_wg_id_vars', 3.4019391052900155e-06], ['BRIG_OPCODE_CURRENTWORKGROUPSIZE)', 3.4019391052900155e-06], ['PHSA_CONTEXT_CURRENT_WG_SIZES', 3.4019391052900155e-06], ['("curwgsize_x");', 3.4019391052900155e-06], ['brig_function::can_expand_builtin', 3.4019391052900155e-06], ['flag_assume_phsa;', 3.4019391052900155e-06], ['m_is_kernel;', 3.4019391052900155e-06], ['brig_function::get_builtin_for_hsa_opcode', 3.4019391052900155e-06], ['BrigOpcode16_t', 3.4019391052900155e-06], ['BUILT_IN_FLOOR);', 3.4019391052900155e-06], ['BUILT_IN_CEIL);', 3.4019391052900155e-06], ['BUILT_IN_SQRT);', 3.4019391052900155e-06], ['BUILT_IN_RINT);', 3.4019391052900155e-06], ['BUILT_IN_TRUNC);', 3.4019391052900155e-06], ['BUILT_IN_SIN);', 3.4019391052900155e-06], ['BUILT_IN_LOG2);', 3.4019391052900155e-06], ['BUILT_IN_EXP2);', 3.4019391052900155e-06], ['BUILT_IN_FMA);', 3.4019391052900155e-06], ['BUILT_IN_COS);', 3.4019391052900155e-06], ['Popcount', 3.4019391052900155e-06], ['u32).', 3.4019391052900155e-06], ['b64', 3.4019391052900155e-06], ['b32', 3.4019391052900155e-06], ['(BUILT_IN_POPCOUNTL);', 3.4019391052900155e-06], ['BRIG_OPCODE_BORROW:', 3.4019391052900155e-06], ['Borrow', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_BORROW_U32);', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_BORROW_U64);', 3.4019391052900155e-06], ['BRIG_OPCODE_CARRY:', 3.4019391052900155e-06], ['Carry', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_CARRY_U32);', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_CARRY_U64);', 3.4019391052900155e-06], ["'case'", 3.4019391052900155e-06], ['brig_inner_type));', 3.4019391052900155e-06], ['BRIG_TYPE_F32));', 3.4019391052900155e-06], ['mathfn', 3.4019391052900155e-06], ['builtin?', 3.4019391052900155e-06], ['vec_builtin', 3.4019391052900155e-06], ['targetm.vectorize.builtin_vectorized_function', 3.4019391052900155e-06], ['(builtin_mathfn_code', 3.4019391052900155e-06], ['(vec_builtin', 3.4019391052900155e-06], ['vec_builtin;', 3.4019391052900155e-06], ['references)', 3.4019391052900155e-06], ['ELEMENTS.', 3.4019391052900155e-06], ['brig_function::unpack', 3.4019391052900155e-06], ['(value)))', 3.4019391052900155e-06], ['("unpack_input",', 3.4019391052900155e-06], ['bitsize_int(i', 3.4019391052900155e-06], ['element_size));', 3.4019391052900155e-06], ['(element);', 3.4019391052900155e-06], ['Pack', 3.4019391052900155e-06], ['brig_function::pack', 3.4019391052900155e-06], ['elements.size', 3.4019391052900155e-06], ['(element_count', 3.4019391052900155e-06], ['(elements.at', 3.4019391052900155e-06], ['elements.at', 3.4019391052900155e-06], ['brig_function::needs_workitem_context_data', 3.4019391052900155e-06], ['BRIG_OPCODE_CURRENTWORKITEMFLATID:', 3.4019391052900155e-06], ['BRIG_OPCODE_GRIDGROUPS:', 3.4019391052900155e-06], ['BRIG_OPCODE_GRIDSIZE:', 3.4019391052900155e-06], ['BRIG_OPCODE_DIM:', 3.4019391052900155e-06], ['BRIG_OPCODE_PACKETID:', 3.4019391052900155e-06], ['BRIG_OPCODE_PACKETCOMPLETIONSIG:', 3.4019391052900155e-06], ['BRIG_OPCODE_BARRIER:', 3.4019391052900155e-06], ['BRIG_OPCODE_WAVEBARRIER:', 3.4019391052900155e-06], ['BRIG_OPCODE_CUID:', 3.4019391052900155e-06], ['BRIG_OPCODE_MAXCUID:', 3.4019391052900155e-06], ['BRIG_OPCODE_GROUPBASEPTR:', 3.4019391052900155e-06], ['BRIG_OPCODE_KERNARGBASEPTR:', 3.4019391052900155e-06], ['BRIG_OPCODE_ALLOCA:', 3.4019391052900155e-06], ['accompanying', 3.4019391052900155e-06], ['brig_function::add_temp_var', 3.4019391052900155e-06], ['name.c_str', 3.4019391052900155e-06], ['(temp_var),', 3.4019391052900155e-06], ['temp_var,', 3.4019391052900155e-06], ['temp_var;', 3.4019391052900155e-06], ['(BRIG_OPCODE)', 3.4019391052900155e-06], ['(BRIG_TYPE).', 3.4019391052900155e-06], ['nodes)', 3.4019391052900155e-06], ['BRIG_OPCODE_NOP:', 3.4019391052900155e-06], ['NOP_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_ADD:', 3.4019391052900155e-06], ['BRIG_OPCODE_CMOV:', 3.4019391052900155e-06], ['COND_EXPR;', 3.4019391052900155e-06], ['VEC_COND_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_SUB:', 3.4019391052900155e-06], ['BRIG_OPCODE_MUL:', 3.4019391052900155e-06], ['BRIG_OPCODE_MUL24:', 3.4019391052900155e-06], ['BRIG_OPCODE_MULHI:', 3.4019391052900155e-06], ['BRIG_OPCODE_MUL24HI:', 3.4019391052900155e-06], ['MULT_HIGHPART_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_DIV:', 3.4019391052900155e-06], ['BRIG_OPCODE_NEG:', 3.4019391052900155e-06], ['BRIG_OPCODE_MIN:', 3.4019391052900155e-06], ['MIN_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_MAX:', 3.4019391052900155e-06], ['MAX_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_ABS:', 3.4019391052900155e-06], ['ABS_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_SHL:', 3.4019391052900155e-06], ['BRIG_OPCODE_SHR:', 3.4019391052900155e-06], ['BRIG_OPCODE_OR:', 3.4019391052900155e-06], ['BRIG_OPCODE_XOR:', 3.4019391052900155e-06], ['BRIG_OPCODE_AND:', 3.4019391052900155e-06], ['BRIG_OPCODE_NOT:', 3.4019391052900155e-06], ['BRIG_OPCODE_RET:', 3.4019391052900155e-06], ['RETURN_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_MOV:', 3.4019391052900155e-06], ['BRIG_OPCODE_LDF:', 3.4019391052900155e-06], ['BRIG_OPCODE_LD:', 3.4019391052900155e-06], ['MEM_REF;', 3.4019391052900155e-06], ['GOTO_EXPR;', 3.4019391052900155e-06], ['BRIG_OPCODE_REM:', 3.4019391052900155e-06], ['BRIG_OPCODE_NRCP:', 3.4019391052900155e-06], ['BRIG_OPCODE_NRSQRT:', 3.4019391052900155e-06], ['1/f', 3.4019391052900155e-06], ['(x).', 3.4019391052900155e-06], ['available,', 3.4019391052900155e-06], ['BRIG_OPCODE_CLASS:', 3.4019391052900155e-06], ['(s_custom_builtins.find', 3.4019391052900155e-06], ['brig_inner_type))', 3.4019391052900155e-06], ['BRIG_TYPE_F32))', 3.4019391052900155e-06], ['Emulate', 3.4019391052900155e-06], ['Inform', 3.4019391052900155e-06], ['REG_VAR.', 3.4019391052900155e-06], ['brig_function::add_reg_var_update', 3.4019391052900155e-06], ['reg_var,', 3.4019391052900155e-06], ['m_abs_id_vars[0]', 3.4019391052900155e-06], ['m_abs_id_vars[1]', 3.4019391052900155e-06], ['m_abs_id_vars[2]', 3.4019391052900155e-06], ['m_local_id_vars[0]', 3.4019391052900155e-06], ['m_local_id_vars[1]', 3.4019391052900155e-06], ['m_local_id_vars[2])', 3.4019391052900155e-06], ['m_id_val_defs', 3.4019391052900155e-06], ['[reg_var]', 3.4019391052900155e-06], ['Possible', 3.4019391052900155e-06], ['m_id_val_defs.erase', 3.4019391052900155e-06], ['brig_function::is_id_val', 3.4019391052900155e-06], ['m_id_val_defs.end();', 3.4019391052900155e-06], ['brig_function::id_val', 3.4019391052900155e-06], ['Informs', 3.4019391052900155e-06], ['brig_function::start_new_bb', 3.4019391052900155e-06], ['m_id_val_defs.clear', 3.4019391052900155e-06], ['brig-inst-mod-handler.cc', 3.4019391052900155e-06], ['moded', 3.4019391052900155e-06], ['brig_inst_mod_handler::generate', 3.4019391052900155e-06], ['brig_inst_mod_handler::modifier', 3.4019391052900155e-06], ['brig_inst_mod_handler::round', 3.4019391052900155e-06], ['inject', 3.4019391052900155e-06], ['motions', 3.4019391052900155e-06], ['brig_inst_mod_handler::operator', 3.4019391052900155e-06], ['brig-label-handler.cc', 3.4019391052900155e-06], ['brig_directive_label_handler::operator', 3.4019391052900155e-06], ['(label_str));', 3.4019391052900155e-06], ['brig-lane-inst-handler.cc', 3.4019391052900155e-06], ['lane', 3.4019391052900155e-06], ['brig_lane_inst_handler::brig_lane_inst_handler', 3.4019391052900155e-06], ['brig_lane_inst_handler::operator', 3.4019391052900155e-06], ['(inst.base);', 3.4019391052900155e-06], ['BRIG_OPCODE_ACTIVELANECOUNT)', 3.4019391052900155e-06], ['wave,', 3.4019391052900155e-06], ['(uint32_type_node),', 3.4019391052900155e-06], ['BRIG_OPCODE_ACTIVELANEID)', 3.4019391052900155e-06], ['BRIG_OPCODE_ACTIVELANEMASK)', 3.4019391052900155e-06], ['u64_type', 3.4019391052900155e-06], ['zero_cst', 3.4019391052900155e-06], ['(u64_type);', 3.4019391052900155e-06], ['u64_type,', 3.4019391052900155e-06], ['zero_cst,', 3.4019391052900155e-06], ['(elements);', 3.4019391052900155e-06], ['BRIG_OPCODE_ACTIVELANEPERMUTE)', 3.4019391052900155e-06], ['operands[3];', 3.4019391052900155e-06], ['operands[4];', 3.4019391052900155e-06], ["'identity'", 3.4019391052900155e-06], ['(use_identity),', 3.4019391052900155e-06], ['use_identity);', 3.4019391052900155e-06], ['(src),', 3.4019391052900155e-06], ['identity,', 3.4019391052900155e-06], ['(inst.base,', 3.4019391052900155e-06], ['brig-mem-inst-handler.cc', 3.4019391052900155e-06], ['inst', 3.4019391052900155e-06], ['brig_mem_inst_handler::build_mem_access', 3.4019391052900155e-06], ['is_load', 3.4019391052900155e-06], ['BRIG_OPCODE_LD;', 3.4019391052900155e-06], ['(!is_load', 3.4019391052900155e-06], ['!is_store)', 3.4019391052900155e-06], ['{ld,st}_v{2,4}.', 3.4019391052900155e-06], ['as).', 3.4019391052900155e-06], ['(data))', 3.4019391052900155e-06], ['(data);', 3.4019391052900155e-06], ['unaligned', 3.4019391052900155e-06], ['exploit', 3.4019391052900155e-06], ['modifier,', 3.4019391052900155e-06], ['faster', 3.4019391052900155e-06], ['unaligned_type', 3.4019391052900155e-06], ['build_aligned_type', 3.4019391052900155e-06], ['unaligned_type,', 3.4019391052900155e-06], ['(is_load)', 3.4019391052900155e-06], ['unpack.', 3.4019391052900155e-06], ['("mem_read",', 3.4019391052900155e-06], ['(mem_ref),', 3.4019391052900155e-06], ['brig_mem_inst_handler::operator', 3.4019391052900155e-06], ['BRIG_OPCODE_ALLOCA)', 3.4019391052900155e-06], ['*mem_inst', 3.4019391052900155e-06], ['brig_inst;', 3.4019391052900155e-06], ['BRIG_ALIGNMENT_NONE)', 3.4019391052900155e-06], ['align_opr', 3.4019391052900155e-06], ['(align_opr);', 3.4019391052900155e-06], ['builtin_call', 3.4019391052900155e-06], ['(BRIG_OPCODE_ALLOCA,', 3.4019391052900155e-06], ['inputs);', 3.4019391052900155e-06], ['builtin_call);', 3.4019391052900155e-06], ['m_parent.m_cf->m_has_allocas', 3.4019391052900155e-06], ['data_operand_offset;', 3.4019391052900155e-06], ['(&data_operand_offset,', 3.4019391052900155e-06], ['&operand_entries->bytes,', 3.4019391052900155e-06], ['*operand', 3.4019391052900155e-06], ['(data_operand_offset);', 3.4019391052900155e-06], ['*operandData', 3.4019391052900155e-06], ['is_three_element_vector_access', 3.4019391052900155e-06], ['operand->kind', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_OPERAND_LIST', 3.4019391052900155e-06], ['(operandData', 3.4019391052900155e-06], ['(((const', 3.4019391052900155e-06], ['operand)->elements))', 3.4019391052900155e-06], ['operandData->byteCount', 3.4019391052900155e-06], ['(is_three_element_vector_access)', 3.4019391052900155e-06], ['scalarize', 3.4019391052900155e-06], ['3-element', 3.4019391052900155e-06], ['datatypes', 3.4019391052900155e-06], ['internally.', 3.4019391052900155e-06], ['operandData->byteCount;', 3.4019391052900155e-06], ['operandData->bytes;', 3.4019391052900155e-06], ['addr_operand_offset;', 3.4019391052900155e-06], ['(&addr_operand_offset,', 3.4019391052900155e-06], ['&operand_entries->bytes', 3.4019391052900155e-06], ['*addr_operand', 3.4019391052900155e-06], ['(addr_operand_offset);', 3.4019391052900155e-06], ['address_base', 3.4019391052900155e-06], ['*addr_operand);', 3.4019391052900155e-06], ['instr_type);', 3.4019391052900155e-06], ['ptr_offset', 3.4019391052900155e-06], ['address_offset);', 3.4019391052900155e-06], ['(address_base),', 3.4019391052900155e-06], ['address_base,', 3.4019391052900155e-06], ['ptr_offset);', 3.4019391052900155e-06], ['(is_store', 3.4019391052900155e-06], ['instr_type)', 3.4019391052900155e-06], ['&data', 3.4019391052900155e-06], ['&addr', 3.4019391052900155e-06], ['brig-module-handler.cc', 3.4019391052900155e-06], ['brig_directive_module_handler::operator', 3.4019391052900155e-06], ['BrigDirectiveModule*', 3.4019391052900155e-06], ['BrigDirectiveModule*)base;', 3.4019391052900155e-06], ['m_parent.m_module_name', 3.4019391052900155e-06], ['(mod->name).substr', 3.4019391052900155e-06], ['(mod->hsailMajor', 3.4019391052900155e-06], ['mod->hsailMinor', 3.4019391052900155e-06], ['"HSAIL', 3.4019391052900155e-06], ['(mod->machineModel', 3.4019391052900155e-06], ['BRIG_MACHINE_LARGE)', 3.4019391052900155e-06], ['"Only', 3.4019391052900155e-06], ["'large'", 3.4019391052900155e-06], ['supported.");', 3.4019391052900155e-06], ["'full'", 3.4019391052900155e-06], ['FE.', 3.4019391052900155e-06], ['brig-queue-inst-handler.cc', 3.4019391052900155e-06], ['brig_queue_inst_handler::brig_queue_inst_handler', 3.4019391052900155e-06], ['brig_queue_inst_handler::operator', 3.4019391052900155e-06], ['BRIG_OPCODE_LDQUEUEREADINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_LDQUEUEWRITEINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_LDQUEUEREADINDEX);', 3.4019391052900155e-06], ['BRIG_OPCODE_STQUEUEREADINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_STQUEUEWRITEINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_STQUEUEREADINDEX);', 3.4019391052900155e-06], ['BRIG_OPCODE_ADDQUEUEWRITEINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_ADDQUEUEWRITEINDEX);', 3.4019391052900155e-06], ['BRIG_OPCODE_CASQUEUEWRITEINDEX)', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_CASQUEUEWRITEINDEX);', 3.4019391052900155e-06], ['brig-seg-inst-handler.cc', 3.4019391052900155e-06], ['brig_seg_inst_handler::brig_seg_inst_handler', 3.4019391052900155e-06], ['brig_seg_inst_handler::operator', 3.4019391052900155e-06], ['BRIG_OPCODE_STOF)', 3.4019391052900155e-06], ['BRIG_OPCODE_FTOS)', 3.4019391052900155e-06], ['BRIG_OPCODE_NULLPTR)', 3.4019391052900155e-06], ['BRIG_SEGMENT_FLAT', 3.4019391052900155e-06], ['BRIG_OPCODE_SEGMENTP)', 3.4019391052900155e-06], ['(inst.segment)', 3.4019391052900155e-06], ['BRIG_SEGMENT_GLOBAL:', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_SEGMENTP_GLOBAL);', 3.4019391052900155e-06], ['BRIG_SEGMENT_GROUP:', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_SEGMENTP_GROUP);', 3.4019391052900155e-06], ['BRIG_SEGMENT_PRIVATE:', 3.4019391052900155e-06], ['(BUILT_IN_HSAIL_SEGMENTP_PRIVATE);', 3.4019391052900155e-06], ['brig-signal-inst-handler.cc', 3.4019391052900155e-06], ['brig_signal_inst_handler::operator', 3.4019391052900155e-06], ['inst->signalOperation;', 3.4019391052900155e-06], ['brig2tree.cc', 3.4019391052900155e-06], ['generic/gimple', 3.4019391052900155e-06], ['<cassert>', 3.4019391052900155e-06], ['brig_to_generic::s_fp16_type;', 3.4019391052900155e-06], ['brig_to_generic::s_fp32_type;', 3.4019391052900155e-06], ['brig_to_generic::s_fp64_type;', 3.4019391052900155e-06], ['brig_to_generic::brig_to_generic', 3.4019391052900155e-06], ['natively.', 3.4019391052900155e-06], ['(handle', 3.4019391052900155e-06], ['only),', 3.4019391052900155e-06], ['row).', 3.4019391052900155e-06], ['s_fp16_type', 3.4019391052900155e-06], ['(REAL_TYPE);', 3.4019391052900155e-06], ['(s_fp16_type,', 3.4019391052900155e-06], ['(s_fp16_type);', 3.4019391052900155e-06], ['s_fp32_type', 3.4019391052900155e-06], ['(BRIG_TYPE_F32);', 3.4019391052900155e-06], ['s_fp64_type', 3.4019391052900155e-06], ['(BRIG_TYPE_F64);', 3.4019391052900155e-06], ['(machine)query', 3.4019391052900155e-06], ['redefined', 3.4019391052900155e-06], ['m_default_float_rounding_mode', 3.4019391052900155e-06], ['BRIG_ROUND_FLOAT_ZERO;', 3.4019391052900155e-06], ['m_dump_file', 3.4019391052900155e-06], ['dump_begin', 3.4019391052900155e-06], ['&m_dump_flags);', 3.4019391052900155e-06], ['Handler', 3.4019391052900155e-06], ['are)', 3.4019391052900155e-06], ['pairing', 3.4019391052900155e-06], ['BrigCodeEntryHandler', 3.4019391052900155e-06], ['Finds', 3.4019391052900155e-06], ['brig_to_generic::find_brig_sections', 3.4019391052900155e-06], ['m_brig;', 3.4019391052900155e-06], ['mheader->sectionCount;', 3.4019391052900155e-06], ['++sec)', 3.4019391052900155e-06], ['mheader->sectionIndex))[sec];', 3.4019391052900155e-06], ['*section_header', 3.4019391052900155e-06], ['(&section_header->name),', 3.4019391052900155e-06], ['section_header->nameLength);', 3.4019391052900155e-06], ['BRIG_SECTION_INDEX_DATA', 3.4019391052900155e-06], ['"hsa_data")', 3.4019391052900155e-06], ['m_data_size', 3.4019391052900155e-06], ['BRIG_SECTION_INDEX_CODE', 3.4019391052900155e-06], ['"hsa_code")', 3.4019391052900155e-06], ['m_code_size', 3.4019391052900155e-06], ['BRIG_SECTION_INDEX_OPERAND', 3.4019391052900155e-06], ['"hsa_operand")', 3.4019391052900155e-06], ['m_operand_size', 3.4019391052900155e-06], ['scope).', 3.4019391052900155e-06], ['brig_to_generic::analyze', 3.4019391052900155e-06], ['(strncmp', 3.4019391052900155e-06], ['(mheader->identification,', 3.4019391052900155e-06], ['"HSA', 3.4019391052900155e-06], ['BRIG",', 3.4019391052900155e-06], ['"Unrecognized', 3.4019391052900155e-06], ['format.");', 3.4019391052900155e-06], ['(mheader->brigMajor', 3.4019391052900155e-06], ['mheader->brigMinor', 3.4019391052900155e-06], ['"BRIG', 3.4019391052900155e-06], ['reg_use_analyzer', 3.4019391052900155e-06], ['grabbing', 3.4019391052900155e-06], ['&func_handler}};', 3.4019391052900155e-06], ['&skipped_handler;', 3.4019391052900155e-06], ['bytes_processed', 3.4019391052900155e-06], ['(bytes_processed', 3.4019391052900155e-06], ['PHSA_ERROR_PREFIX_CORRUPTED_MODULE', 3.4019391052900155e-06], ['"Element', 3.4019391052900155e-06], ['bytes.");', 3.4019391052900155e-06], ['bytes_processed;', 3.4019391052900155e-06], ['m_module_group_variables.size', 3.4019391052900155e-06], ['Parses', 3.4019391052900155e-06], ['blob.', 3.4019391052900155e-06], ['brig_to_generic::parse', 3.4019391052900155e-06], ['inst_handler', 3.4019391052900155e-06], ['brig_branch_inst_handler', 3.4019391052900155e-06], ['branch_inst_handler', 3.4019391052900155e-06], ['brig_cvt_inst_handler', 3.4019391052900155e-06], ['cvt_inst_handler', 3.4019391052900155e-06], ['brig_seg_inst_handler', 3.4019391052900155e-06], ['seg_inst_handler', 3.4019391052900155e-06], ['brig_copy_move_inst_handler', 3.4019391052900155e-06], ['copy_move_inst_handler', 3.4019391052900155e-06], ['brig_signal_inst_handler', 3.4019391052900155e-06], ['signal_inst_handler', 3.4019391052900155e-06], ['brig_atomic_inst_handler', 3.4019391052900155e-06], ['atomic_inst_handler', 3.4019391052900155e-06], ['brig_cmp_inst_handler', 3.4019391052900155e-06], ['cmp_inst_handler', 3.4019391052900155e-06], ['brig_mem_inst_handler', 3.4019391052900155e-06], ['mem_inst_handler', 3.4019391052900155e-06], ['brig_inst_mod_handler', 3.4019391052900155e-06], ['inst_mod_handler', 3.4019391052900155e-06], ['brig_directive_label_handler', 3.4019391052900155e-06], ['label_handler', 3.4019391052900155e-06], ['brig_directive_comment_handler', 3.4019391052900155e-06], ['comment_handler', 3.4019391052900155e-06], ['brig_directive_control_handler', 3.4019391052900155e-06], ['control_handler', 3.4019391052900155e-06], ['brig_directive_arg_block_handler', 3.4019391052900155e-06], ['arg_block_handler', 3.4019391052900155e-06], ['brig_lane_inst_handler', 3.4019391052900155e-06], ['lane_inst_handler', 3.4019391052900155e-06], ['brig_queue_inst_handler', 3.4019391052900155e-06], ['queue_inst_handler', 3.4019391052900155e-06], ['unimplemented_handler', 3.4019391052900155e-06], ['fast', 3.4019391052900155e-06], ['average.', 3.4019391052900155e-06], ['&inst_handler},', 3.4019391052900155e-06], ['&cmp_inst_handler},', 3.4019391052900155e-06], ['&mem_inst_handler},', 3.4019391052900155e-06], ['&inst_mod_handler},', 3.4019391052900155e-06], ['&cvt_inst_handler},', 3.4019391052900155e-06], ['&atomic_inst_handler},', 3.4019391052900155e-06], ['&signal_inst_handler},', 3.4019391052900155e-06], ['&branch_inst_handler},', 3.4019391052900155e-06], ['&lane_inst_handler},', 3.4019391052900155e-06], ['&queue_inst_handler},', 3.4019391052900155e-06], ['fences', 3.4019391052900155e-06], ['porting', 3.4019391052900155e-06], ['{BRIG_KIND_INST_MEM_FENCE,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_LABEL,', 3.4019391052900155e-06], ['&label_handler},', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_ARG_BLOCK_START,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_ARG_BLOCK_END,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_COMMENT,', 3.4019391052900155e-06], ['&comment_handler},', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_SIGNATURE,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_INDIRECT_FUNCTION,', 3.4019391052900155e-06], ['Skipping', 3.4019391052900155e-06], ['conformance.', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_LOC,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_PRAGMA,', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_CONTROL,', 3.4019391052900155e-06], ['&control_handler},', 3.4019391052900155e-06], ['{BRIG_KIND_DIRECTIVE_EXTENSION,', 3.4019391052900155e-06], ['BRIG_KIND_NONE', 3.4019391052900155e-06], ['anywhere.', 3.4019391052900155e-06], ['patching', 3.4019391052900155e-06], ['finalization.', 3.4019391052900155e-06], ['{BRIG_KIND_NONE,', 3.4019391052900155e-06], ['&skipped_handler}};', 3.4019391052900155e-06], ['&unimplemented_handler;', 3.4019391052900155e-06], ['brig_to_generic::get_brig_data_entry', 3.4019391052900155e-06], ['brig_to_generic::get_brig_operand_entry', 3.4019391052900155e-06], ['brig_to_generic::get_brig_code_entry', 3.4019391052900155e-06], ['brig_to_generic::append_global', 3.4019391052900155e-06], ['(m_globals', 3.4019391052900155e-06], ['tree_last', 3.4019391052900155e-06], ['(last)', 3.4019391052900155e-06], ['brig_to_generic::global_variable', 3.4019391052900155e-06], ['m_global_variables.find', 3.4019391052900155e-06], ['m_global_variables.end', 3.4019391052900155e-06], ['DirectiveFunction', 3.4019391052900155e-06], ['similar.', 3.4019391052900155e-06], ['brig_to_generic::function_decl', 3.4019391052900155e-06], ['m_function_index.find', 3.4019391052900155e-06], ['m_function_index.end', 3.4019391052900155e-06], ['brig_to_generic::add_function_decl', 3.4019391052900155e-06], ['m_function_index[name]', 3.4019391052900155e-06], ['(because', 3.4019391052900155e-06], ['variable),', 3.4019391052900155e-06], ['brig_to_generic::add_global_variable', 3.4019391052900155e-06], ['m_global_variables[name]', 3.4019391052900155e-06], ['host_def_var_name', 3.4019391052900155e-06], ['host_def_var', 3.4019391052900155e-06], ['global_variable', 3.4019391052900155e-06], ['(host_def_var_name);', 3.4019391052900155e-06], ['(host_def_var', 3.4019391052900155e-06], ['(var_decl));', 3.4019391052900155e-06], ['var_addr', 3.4019391052900155e-06], ['var_addr;', 3.4019391052900155e-06], ['(host_def_var);', 3.4019391052900155e-06], ['host-defined', 3.4019391052900155e-06], ['brig_to_generic::add_host_def_var_ptr', 3.4019391052900155e-06], ['ptr_var', 3.4019391052900155e-06], ['(var_decl)));', 3.4019391052900155e-06], ['m_global_variables[var_name]', 3.4019391052900155e-06], ['ptr_var;', 3.4019391052900155e-06], ['brig_to_generic::add_decl_call', 3.4019391052900155e-06], ['m_decl_call.push_back', 3.4019391052900155e-06], ['"mangled', 3.4019391052900155e-06], ['name"', 3.4019391052900155e-06], ['Program', 3.4019391052900155e-06], ['(except', 3.4019391052900155e-06], ['dropping', 3.4019391052900155e-06], ['&),', 3.4019391052900155e-06], ['brig_to_generic::get_mangled_name', 3.4019391052900155e-06], ['*func)', 3.4019391052900155e-06], ['&.', 3.4019391052900155e-06], ['get_string', 3.4019391052900155e-06], ['(func->name).substr', 3.4019391052900155e-06], ['(func->linkage', 3.4019391052900155e-06], ['BRIG_LINKAGE_MODULE)', 3.4019391052900155e-06], ['queried', 3.4019391052900155e-06], ['binary.', 3.4019391052900155e-06], ['"gccbrig."', 3.4019391052900155e-06], ['m_module_name', 3.4019391052900155e-06], ['brig_to_generic::get_string', 3.4019391052900155e-06], ['*data_item', 3.4019391052900155e-06], ['get_brig_data_entry', 3.4019391052900155e-06], ['(entry_offset);', 3.4019391052900155e-06], ['&data_item->bytes,', 3.4019391052900155e-06], ['data_item->byteCount);', 3.4019391052900155e-06], ['Adapted', 3.4019391052900155e-06], ['c-semantics.c.', 3.4019391052900155e-06], ['variably-sized', 3.4019391052900155e-06], ['tcc_vl_exp);', 3.4019391052900155e-06], ['TREE_CODE_LENGTH', 3.4019391052900155e-06], ['!TYPE_P', 3.4019391052900155e-06], ['(ret,', 3.4019391052900155e-06], ['(p);', 3.4019391052900155e-06], ['untyped,', 3.4019391052900155e-06], ['sizes,', 3.4019391052900155e-06], ['casting:', 3.4019391052900155e-06], ['narrower', 3.4019391052900155e-06], ['clipped', 3.4019391052900155e-06], ['(source', 3.4019391052900155e-06], ['(source,', 3.4019391052900155e-06], ['(destination_type', 3.4019391052900155e-06], ['(source_type);', 3.4019391052900155e-06], ['(destination_type);', 3.4019391052900155e-06], ['(src_size', 3.4019391052900155e-06], ['dst_size)', 3.4019391052900155e-06], ['resized', 3.4019391052900155e-06], ['(get_scalar_unsigned_int_type', 3.4019391052900155e-06], ['(destination_type),', 3.4019391052900155e-06], ['(source));', 3.4019391052900155e-06], ['((size_t)int_size_in_bytes', 3.4019391052900155e-06], ['(resized))', 3.4019391052900155e-06], ['dst_size);', 3.4019391052900155e-06], ['(destination_type,', 3.4019391052900155e-06], ['resized);', 3.4019391052900155e-06], ['Reinterprets', 3.4019391052900155e-06], ['orignal.', 3.4019391052900155e-06], ['FUNC_DECL,', 3.4019391052900155e-06], ['brig_to_generic::get_finished_function', 3.4019391052900155e-06], ['identifier_to_locale', 3.4019391052900155e-06], ['(func_decl)));', 3.4019391052900155e-06], ['m_finished_functions.find', 3.4019391052900155e-06], ['(func_name);', 3.4019391052900155e-06], ['m_finished_functions.end', 3.4019391052900155e-06], ['brig_to_generic::add_group_variable', 3.4019391052900155e-06], ['function_scope)', 3.4019391052900155e-06], ['feature.', 3.4019391052900155e-06], ['populated', 3.4019391052900155e-06], ["'analyze()'", 3.4019391052900155e-06], ['prepass.', 3.4019391052900155e-06], ['(!function_scope)', 3.4019391052900155e-06], ['(!m_module_group_variables.has_variable', 3.4019391052900155e-06], ['m_module_group_variables.add', 3.4019391052900155e-06], ['(!m_cf->m_local_group_variables.has_variable', 3.4019391052900155e-06], ['m_cf->m_local_group_variables.add', 3.4019391052900155e-06], ['Finalizes', 3.4019391052900155e-06], ['brig_to_generic::finish_function', 3.4019391052900155e-06], ['fingerprint,', 3.4019391052900155e-06], ['m_func_decl.', 3.4019391052900155e-06], ['(!m_cf->m_is_kernel)', 3.4019391052900155e-06], ['m_cf->m_current_bind_expr;', 3.4019391052900155e-06], ['m_cf->finish', 3.4019391052900155e-06], ['m_cf->emit_metadata', 3.4019391052900155e-06], ['m_cf);', 3.4019391052900155e-06], ['m_kernels.push_back', 3.4019391052900155e-06], ['m_finished_functions[m_cf->m_name]', 3.4019391052900155e-06], ['brig_to_generic::start_function', 3.4019391052900155e-06], ['f)', 3.4019391052900155e-06], ['(f));', 3.4019391052900155e-06], ['brig_to_generic::append_private_variable', 3.4019391052900155e-06], ['addresses.', 3.4019391052900155e-06], ["work-item's", 3.4019391052900155e-06], ['offset:', 3.4019391052900155e-06], ['aligned.', 3.4019391052900155e-06], ['per_var_padding', 3.4019391052900155e-06], ['m_private_data_sizes[name]', 3.4019391052900155e-06], ['m_private_offsets[name]', 3.4019391052900155e-06], ['brig_to_generic::private_variable_segment_offset', 3.4019391052900155e-06], ['m_private_offsets.find', 3.4019391052900155e-06], ['m_private_offsets.end', 3.4019391052900155e-06], ['brig_to_generic::has_private_variable', 3.4019391052900155e-06], ['brig_to_generic::private_variable_size', 3.4019391052900155e-06], ['brig_to_generic::private_segment_size', 3.4019391052900155e-06], ['Cached', 3.4019391052900155e-06], ['tree>', 3.4019391052900155e-06], ['builtin_index;', 3.4019391052900155e-06], ['builtin_index', 3.4019391052900155e-06], ['builtin_cache_;', 3.4019391052900155e-06], ['PDECL', 3.4019391052900155e-06], ['RETTYPE', 3.4019391052900155e-06], ['pdecl,', 3.4019391052900155e-06], ['(rettype', 3.4019391052900155e-06], ['*types', 3.4019391052900155e-06], ['rettype);', 3.4019391052900155e-06], ['types[i]', 3.4019391052900155e-06], ['(types[i],', 3.4019391052900155e-06], ['(types[i]', 3.4019391052900155e-06], ['(pdecl);', 3.4019391052900155e-06], ['fed', 3.4019391052900155e-06], ['brig_to_generic::write_globals', 3.4019391052900155e-06], ['m_decl_call.size();', 3.4019391052900155e-06], ['m_decl_call.at(i);', 3.4019391052900155e-06], ['get_callee_fndecl', 3.4019391052900155e-06], ['*brig_function', 3.4019391052900155e-06], ['get_finished_function', 3.4019391052900155e-06], ['(func_decl);', 3.4019391052900155e-06], ['(brig_function', 3.4019391052900155e-06], ['(brig_function->m_func_decl)', 3.4019391052900155e-06], ['(decl_call)', 3.4019391052900155e-06], ['brig_function->m_func_decl;', 3.4019391052900155e-06], ['m_finished_functions.begin(),', 3.4019391052900155e-06], ['m_finished_functions.end();', 3.4019391052900155e-06], ['*brig_f', 3.4019391052900155e-06], ['(brig_f->m_is_kernel)', 3.4019391052900155e-06], ['cgraph', 3.4019391052900155e-06], ['(brig_f->m_func_decl);', 3.4019391052900155e-06], ['(brig_f->m_func_decl,', 3.4019391052900155e-06], ['processed,', 3.4019391052900155e-06], ['m_kernels.size', 3.4019391052900155e-06], ['m_kernels[i];', 3.4019391052900155e-06], ['graphs', 3.4019391052900155e-06], ['f->finish_kernel', 3.4019391052900155e-06], ['(f->m_func_decl);', 3.4019391052900155e-06], ['(f->m_func_decl,', 3.4019391052900155e-06], ['f->m_descriptor.is_kernel', 3.4019391052900155e-06], ['overly', 3.4019391052900155e-06], ['pessimistic', 3.4019391052900155e-06], ['f->m_descriptor.group_segment_size', 3.4019391052900155e-06], ['m_total_group_segment_usage;', 3.4019391052900155e-06], ['f->m_descriptor.private_segment_size', 3.4019391052900155e-06], ['private_segment_size', 3.4019391052900155e-06], ['specs.', 3.4019391052900155e-06], ['f->m_next_kernarg_offset;', 3.4019391052900155e-06], ['(f->m_descriptor.kernarg_segment_size', 3.4019391052900155e-06], ['f->m_next_kernarg_offset', 3.4019391052900155e-06], ['f->m_descriptor.kernarg_max_align', 3.4019391052900155e-06], ['f->m_kernarg_max_align;', 3.4019391052900155e-06], ['f->emit_launcher_and_metadata', 3.4019391052900155e-06], ['(m_dump_file)', 3.4019391052900155e-06], ['f->m_name.substr', 3.4019391052900155e-06], ['kern_name.c_str());', 3.4019391052900155e-06], ['launcher,', 3.4019391052900155e-06], ['(launcher,', 3.4019391052900155e-06], ['no_globals', 3.4019391052900155e-06], ['list_length', 3.4019391052900155e-06], ['*vec', 3.4019391052900155e-06], ['tree[no_globals];', 3.4019391052900155e-06], ['m_globals;', 3.4019391052900155e-06], ['(global)', 3.4019391052900155e-06], ['vec[i]', 3.4019391052900155e-06], ['(global);', 3.4019391052900155e-06], ['no_globals);', 3.4019391052900155e-06], ['(original_type);', 3.4019391052900155e-06], ['(build_nonstandard_integer_type', 3.4019391052900155e-06], ['ecount);', 3.4019391052900155e-06], ['("externally_visible",', 3.4019391052900155e-06], ['("externally_visible"),', 3.4019391052900155e-06], ['("inline",', 3.4019391052900155e-06], ['("inline"),', 3.4019391052900155e-06], ['*dump_file,', 3.4019391052900155e-06], ['*f)', 3.4019391052900155e-06], ['BRIG-specific', 3.4019391052900155e-06], ['f->m_name.c_str', 3.4019391052900155e-06], ['f->m_func_decl,', 3.4019391052900155e-06], ['f->m_current_bind_expr,', 3.4019391052900155e-06], ['Records', 3.4019391052900155e-06], ['BRIG_REG', 3.4019391052900155e-06], ['brig_to_generic::add_reg_used_as_type', 3.4019391052900155e-06], ['&brig_reg,', 3.4019391052900155e-06], ['m_fn_regs_use_index[m_cf->m_name][gccbrig_hsa_reg_id', 3.4019391052900155e-06], ['(brig_reg)];', 3.4019391052900155e-06], ['(info.m_type_refs_lookup.count', 3.4019391052900155e-06], ['info.m_type_refs[info.m_type_refs_lookup[type]].second++;', 3.4019391052900155e-06], ['info.m_type_refs.push_back', 3.4019391052900155e-06], ['info.m_type_refs_lookup[type]', 3.4019391052900155e-06], ['info.m_type_refs.size', 3.4019391052900155e-06], ['1997-2019', 3.4019391052900155e-06], ['#This', 3.4019391052900155e-06], ['#the', 3.4019391052900155e-06], ['#Software', 3.4019391052900155e-06], ['#version.', 3.4019391052900155e-06], ['#ANY', 3.4019391052900155e-06], ['#FITNESS', 3.4019391052900155e-06], ['#for', 3.4019391052900155e-06], ['#You', 3.4019391052900155e-06], ['#along', 3.4019391052900155e-06], ['#<http://www.gnu.org/licenses/>.', 3.4019391052900155e-06], ['system-specific', 3.4019391052900155e-06], ['script.', 3.4019391052900155e-06], ['Putting', 3.4019391052900155e-06], ['autoconf', 3.4019391052900155e-06], ['modifying', 3.4019391052900155e-06], ['switches,', 3.4019391052900155e-06], ['../libgcc/config.host', 3.4019391052900155e-06], ['${target},', 3.4019391052900155e-06], ['with_*', 3.4019391052900155e-06], ['Various', 3.4019391052900155e-06], ['configure.', 3.4019391052900155e-06], ['enable_threads', 3.4019391052900155e-06], ['threads', 3.4019391052900155e-06], ['default_use_cxa_atexit', 3.4019391052900155e-06], ['$enable___cxa_atexit', 3.4019391052900155e-06], ['enable___cxa_atexit', 3.4019391052900155e-06], ['$default_use_cxa_atexit', 3.4019391052900155e-06], ['default_gnu_indirect_function', 3.4019391052900155e-06], ['$enable_gnu_indirect_function', 3.4019391052900155e-06], ['enable_gnu_indirect_function', 3.4019391052900155e-06], ['ifunc', 3.4019391052900155e-06], ['assembler,', 3.4019391052900155e-06], ['$default_gnu_indirect_function', 3.4019391052900155e-06], ['gas_flag', 3.4019391052900155e-06], ['gnu_ld_flag', 3.4019391052900155e-06], ['script:', 3.4019391052900155e-06], ['cpu_type', 3.4019391052900155e-06], ['cpu,', 3.4019391052900155e-06], ['chunk', 3.4019391052900155e-06], ['tm_defines', 3.4019391052900155e-06], ['compilations.', 3.4019391052900155e-06], ['"$cpu_type/$cpu_type.h".', 3.4019391052900155e-06], ['Usually', 3.4019391052900155e-06], ['${cpu_type.h}/elf.h"', 3.4019391052900155e-06], ['"${cpu_type}/${cpu_type.h}"', 3.4019391052900155e-06], ['elfos.h,', 3.4019391052900155e-06], ['specializing', 3.4019391052900155e-06], ['${cpu_type.h}/elf.h', 3.4019391052900155e-06], ['${cpu_type}/${cpu_type.h}.', 3.4019391052900155e-06], ['automatically-generated', 3.4019391052900155e-06], ['build-directory', 3.4019391052900155e-06], ['"./".', 3.4019391052900155e-06], ['$srcdir/config.', 3.4019391052900155e-06], ['$out_file.', 3.4019391052900155e-06], ['tm_d_file', 3.4019391052900155e-06], ['out_file', 3.4019391052900155e-06], ['"$cpu_type/$cpu_type.c".', 3.4019391052900155e-06], ['common_out_file', 3.4019391052900155e-06], ['driver.', 3.4019391052900155e-06], ['md_file', 3.4019391052900155e-06], ['machine-description', 3.4019391052900155e-06], ['"$cpu_type/$cpu_type.md".', 3.4019391052900155e-06], ['tmake_file', 3.4019391052900155e-06], ['machine-description-specific', 3.4019391052900155e-06], ['makefile-fragments,', 3.4019391052900155e-06], ['"$cpu_type/t-$cpu_type".', 3.4019391052900155e-06], ['extra_modes', 3.4019391052900155e-06], ['modes,', 3.4019391052900155e-06], ['"$cpu_type/$cpu_type-modes.def".', 3.4019391052900155e-06], ['extra_objs', 3.4019391052900155e-06], ['(cc1,', 3.4019391052900155e-06], ['cc1obj,', 3.4019391052900155e-06], ['cc1plus)', 3.4019391052900155e-06], ['extra_gcc_objs', 3.4019391052900155e-06], ['(gcc)', 3.4019391052900155e-06], ['directory', 3.4019391052900155e-06], ['config/${cpu_type}.', 3.4019391052900155e-06], ['user_headers_inc_next_pre', 3.4019391052900155e-06], ['user_headers_inc_next_post', 3.4019391052900155e-06], ['postfixed', 3.4019391052900155e-06], ['use_gcc_tgmath', 3.4019391052900155e-06], ['tgmath.h', 3.4019391052900155e-06], ['use_gcc_stdint', 3.4019391052900155e-06], ['"wrap",', 3.4019391052900155e-06], ['install', 3.4019391052900155e-06], ['stdint.h', 3.4019391052900155e-06], ["system's", 3.4019391052900155e-06], ['compilations;', 3.4019391052900155e-06], ['"provide",', 3.4019391052900155e-06], ['header;', 3.4019391052900155e-06], ['"none",', 3.4019391052900155e-06], ['extra_programs', 3.4019391052900155e-06], ['executables', 3.4019391052900155e-06], ['machine,', 3.4019391052900155e-06], ['extra_options', 3.4019391052900155e-06], ['.opt', 3.4019391052900155e-06], ['c_target_objs', 3.4019391052900155e-06], ['cxx_target_objs', 3.4019391052900155e-06], ['d_target_objs', 3.4019391052900155e-06], ['fortran_target_objs', 3.4019391052900155e-06], ['fortran', 3.4019391052900155e-06], ['target_gtfiles', 3.4019391052900155e-06], ['xm_defines', 3.4019391052900155e-06], ['use_collect2', 3.4019391052900155e-06], ['target_cpu_default', 3.4019391052900155e-06], ['gdb_needs_out_file_path', 3.4019391052900155e-06], ['$out_file`.', 3.4019391052900155e-06], ['thread_file', 3.4019391052900155e-06], ['gas', 3.4019391052900155e-06], ['as.', 3.4019391052900155e-06], ['configargs.h,', 3.4019391052900155e-06], ['cetera.', 3.4019391052900155e-06], ['native_system_header_dir', 3.4019391052900155e-06], ['Where', 3.4019391052900155e-06], ['/usr/include.', 3.4019391052900155e-06], ['--with-sysroot', 3.4019391052900155e-06], ['--sysroot', 3.4019391052900155e-06], ['sysroot.', 3.4019391052900155e-06], ['target_type_format_char', 3.4019391052900155e-06], ['.type', 3.4019391052900155e-06], ['symbol_name,', 3.4019391052900155e-06], ['${t_t_f_c}<property>', 3.4019391052900155e-06], ['case-construct', 3.4019391052900155e-06], ['gnu_ld', 3.4019391052900155e-06], ['ld.', 3.4019391052900155e-06], ['target_has_targetcm', 3.4019391052900155e-06], ['targetcm.', 3.4019391052900155e-06], ['target_has_targetm_common', 3.4019391052900155e-06], ['targetm_common.', 3.4019391052900155e-06], ['target_has_targetdm', 3.4019391052900155e-06], ['targetdm.', 3.4019391052900155e-06], ['out_file=', 3.4019391052900155e-06], ['common_out_file=', 3.4019391052900155e-06], ['tmake_file=', 3.4019391052900155e-06], ['user_headers_inc_next_pre=', 3.4019391052900155e-06], ['user_headers_inc_next_post=', 3.4019391052900155e-06], ['use_gcc_tgmath=yes', 3.4019391052900155e-06], ['use_gcc_stdint=none', 3.4019391052900155e-06], ['extra_programs=', 3.4019391052900155e-06], ['extra_objs=', 3.4019391052900155e-06], ['extra_gcc_objs=', 3.4019391052900155e-06], ['extra_options=', 3.4019391052900155e-06], ['c_target_objs=', 3.4019391052900155e-06], ['cxx_target_objs=', 3.4019391052900155e-06], ['d_target_objs=', 3.4019391052900155e-06], ['fortran_target_objs=', 3.4019391052900155e-06], ['target_has_targetcm=no', 3.4019391052900155e-06], ['target_has_targetdm=no', 3.4019391052900155e-06], ['tm_defines=', 3.4019391052900155e-06], ['xm_defines=', 3.4019391052900155e-06], ['installation', 3.4019391052900155e-06], ['use_collect2=', 3.4019391052900155e-06], ['target_cpu_default=', 3.4019391052900155e-06], ['$out_file`', 3.4019391052900155e-06], ['gdb_needs_out_file_path=', 3.4019391052900155e-06], ['thread_file=', 3.4019391052900155e-06], ['Reinitialize', 3.4019391052900155e-06], ['gas="$gas_flag"', 3.4019391052900155e-06], ['gnu_ld="$gnu_ld_flag"', 3.4019391052900155e-06], ['default_gnu_indirect_function=no', 3.4019391052900155e-06], ['target_gtfiles=', 3.4019391052900155e-06], ['need_64bit_isa=', 3.4019391052900155e-06], ['native_system_header_dir=/usr/include', 3.4019391052900155e-06], ["target_type_format_char='@'", 3.4019391052900155e-06], ['build->host->target.', 3.4019391052900155e-06], ['Please.', 3.4019391052900155e-06], ['xm_file=', 3.4019391052900155e-06], ['md_file=', 3.4019391052900155e-06], ['Obsolete', 3.4019391052900155e-06], ['configurations.', 3.4019391052900155e-06], ['*-*-solaris2.10*', 3.4019391052900155e-06], ['tile*-*-*', 3.4019391052900155e-06], ['"x$enable_obsolete"', 3.4019391052900155e-06], ['obsolete."', 3.4019391052900155e-06], ['Specify', 3.4019391052900155e-06], ['--enable-obsolete', 3.4019391052900155e-06], ['anyway."', 3.4019391052900155e-06], ['REMOVED', 3.4019391052900155e-06], ['GCC,"', 3.4019391052900155e-06], ['maintainer', 3.4019391052900155e-06], ['forward."', 3.4019391052900155e-06], ['fi;;', 3.4019391052900155e-06], ['Unsupported', 3.4019391052900155e-06], ['permissive', 3.4019391052900155e-06], ['alphabetical', 3.4019391052900155e-06], ['obsolete', 3.4019391052900155e-06], ['arm*-*-*eabi*', 3.4019391052900155e-06], ['arm*-wince-pe*', 3.4019391052900155e-06], ['arm*-*-ecos-elf', 3.4019391052900155e-06], ['arm*-*-elf', 3.4019391052900155e-06], ['arm*-*-linux*', 3.4019391052900155e-06], ['arm*-*-uclinux*', 3.4019391052900155e-06], ['i[34567]86-go32-*', 3.4019391052900155e-06], ['i[34567]86-*-go32*', 3.4019391052900155e-06], ['m68k-*-uclinuxoldabi*', 3.4019391052900155e-06], ['mips64orion*-*-rtems*', 3.4019391052900155e-06], ['pdp11-*-bsd', 3.4019391052900155e-06], ['powerpc*-*-linux*paired*', 3.4019391052900155e-06], ['powerpc*-*-*spe*', 3.4019391052900155e-06], ['sparc-hal-solaris2*', 3.4019391052900155e-06], ['thumb-*-*', 3.4019391052900155e-06], ['*-*-freebsd[12]', 3.4019391052900155e-06], ['*-*-freebsd[1234].*', 3.4019391052900155e-06], ['*-*-freebsd*aout*', 3.4019391052900155e-06], ['*-*-linux*aout*', 3.4019391052900155e-06], ['*-*-linux*coff*', 3.4019391052900155e-06], ['*-*-linux*libc1*', 3.4019391052900155e-06], ['*-*-linux*oldld*', 3.4019391052900155e-06], ['*-*-rtemsaout*', 3.4019391052900155e-06], ['*-*-rtemscoff*', 3.4019391052900155e-06], ['*-*-solaris2', 3.4019391052900155e-06], ['*-*-solaris2.[0-9]', 3.4019391052900155e-06], ['*-*-solaris2.[0-9].*', 3.4019391052900155e-06], ['*-*-sysv*', 3.4019391052900155e-06], ['vax-*-vms*', 3.4019391052900155e-06], ['cpu_type,', 3.4019391052900155e-06], ['tm_file,', 3.4019391052900155e-06], ['tm_p_file=', 3.4019391052900155e-06], ['cpu_type=`echo', 3.4019391052900155e-06], ["'s/-.*$//'`", 3.4019391052900155e-06], ['cpu_is_64bit=', 3.4019391052900155e-06], ['m32c*-*-*)', 3.4019391052900155e-06], ['cpu_type=m32c', 3.4019391052900155e-06], ['tmake_file=m32c/t-m32c', 3.4019391052900155e-06], ['cpu_type=aarch64', 3.4019391052900155e-06], ['extra_headers="arm_fp16.h', 3.4019391052900155e-06], ['arm_acle.h"', 3.4019391052900155e-06], ['c_target_objs="aarch64-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="aarch64-c.o"', 3.4019391052900155e-06], ['d_target_objs="aarch64-d.o"', 3.4019391052900155e-06], ['extra_objs="aarch64-builtins.o', 3.4019391052900155e-06], ['aarch-common.o', 3.4019391052900155e-06], ['cortex-a57-fma-steering.o', 3.4019391052900155e-06], ['aarch64-speculation.o', 3.4019391052900155e-06], ['falkor-tag-collision-avoidance.o', 3.4019391052900155e-06], ['aarch64-bti-insert.o"', 3.4019391052900155e-06], ['target_gtfiles="\\$(srcdir)/config/aarch64/aarch64-builtins.c"', 3.4019391052900155e-06], ['cpu_type=alpha', 3.4019391052900155e-06], ['amdgcn*)', 3.4019391052900155e-06], ['cpu_type=gcn', 3.4019391052900155e-06], ['cpu_type=mn10300', 3.4019391052900155e-06], ['cpu_type=arc', 3.4019391052900155e-06], ['c_target_objs="arc-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="arc-c.o"', 3.4019391052900155e-06], ['arc/arc-tables.opt', 3.4019391052900155e-06], ['extra_headers="arc-simd.h"', 3.4019391052900155e-06], ['cpu_type=arm', 3.4019391052900155e-06], ['extra_objs="arm-builtins.o', 3.4019391052900155e-06], ['aarch-common.o"', 3.4019391052900155e-06], ['extra_headers="mmintrin.h', 3.4019391052900155e-06], ['arm_acle.h', 3.4019391052900155e-06], ['arm_fp16.h', 3.4019391052900155e-06], ['arm_cmse.h"', 3.4019391052900155e-06], ["target_type_format_char='%'", 3.4019391052900155e-06], ['c_target_objs="arm-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="arm-c.o"', 3.4019391052900155e-06], ['d_target_objs="arm-d.o"', 3.4019391052900155e-06], ['arm/arm-tables.opt"', 3.4019391052900155e-06], ['target_gtfiles="\\$(srcdir)/config/arm/arm-builtins.c"', 3.4019391052900155e-06], ['cpu_type=avr', 3.4019391052900155e-06], ['c_target_objs="avr-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="avr-c.o"', 3.4019391052900155e-06], ['cpu_type=bfin', 3.4019391052900155e-06], ['crisv32-*)', 3.4019391052900155e-06], ['cpu_type=cris', 3.4019391052900155e-06], ['frv*)', 3.4019391052900155e-06], ['cpu_type=frv', 3.4019391052900155e-06], ['ft32*)', 3.4019391052900155e-06], ['cpu_type=ft32', 3.4019391052900155e-06], ['moxie*)', 3.4019391052900155e-06], ['cpu_type=moxie', 3.4019391052900155e-06], ['fido-*-*)', 3.4019391052900155e-06], ['cpu_type=m68k', 3.4019391052900155e-06], ['ia64-*-*)', 3.4019391052900155e-06], ['extra_headers=ia64intrin.h', 3.4019391052900155e-06], ['cpu_type=pa', 3.4019391052900155e-06], ['lm32*)', 3.4019391052900155e-06], ['m32r*-*-*)', 3.4019391052900155e-06], ['cpu_type=m32r', 3.4019391052900155e-06], ['m68k-*-*)', 3.4019391052900155e-06], ['microblaze*-*-*)', 3.4019391052900155e-06], ['cpu_type=microblaze', 3.4019391052900155e-06], ['cpu_type=mips', 3.4019391052900155e-06], ['d_target_objs="mips-d.o"', 3.4019391052900155e-06], ['extra_headers="loongson.h', 3.4019391052900155e-06], ['loongson-mmiintrin.h', 3.4019391052900155e-06], ['msa.h"', 3.4019391052900155e-06], ['extra_objs="frame-header-opt.o"', 3.4019391052900155e-06], ['mips/mips-tables.opt"', 3.4019391052900155e-06], ['nds32*)', 3.4019391052900155e-06], ['cpu_type=nds32', 3.4019391052900155e-06], ['extra_headers="nds32_intrinsic.h', 3.4019391052900155e-06], ['nds32_isr.h', 3.4019391052900155e-06], ['nds32_init.inc"', 3.4019391052900155e-06], ['nds32/nds32-linux.opt"', 3.4019391052900155e-06], ['nds32/nds32-elf.opt"', 3.4019391052900155e-06], ['extra_objs="nds32-cost.o', 3.4019391052900155e-06], ['nds32-intrinsic.o', 3.4019391052900155e-06], ['nds32-isr.o', 3.4019391052900155e-06], ['nds32-md-auxiliary.o', 3.4019391052900155e-06], ['nds32-pipelines-auxiliary.o', 3.4019391052900155e-06], ['nds32-predicates.o', 3.4019391052900155e-06], ['nds32-memory-manipulation.o', 3.4019391052900155e-06], ['nds32-fp-as-gp.o', 3.4019391052900155e-06], ['nds32-relax-opt.o', 3.4019391052900155e-06], ['nds32-utils.o"', 3.4019391052900155e-06], ['cpu_type=nios2', 3.4019391052900155e-06], ['nvptx-*-*)', 3.4019391052900155e-06], ['cpu_type=nvptx', 3.4019391052900155e-06], ['cpu_type=or1k', 3.4019391052900155e-06], ['powerpc*-*-*)', 3.4019391052900155e-06], ['cpu_type=rs6000', 3.4019391052900155e-06], ['extra_headers="ppc-asm.h', 3.4019391052900155e-06], ['altivec.h', 3.4019391052900155e-06], ['htmxlintrin.h"', 3.4019391052900155e-06], ['bmiintrin.h"', 3.4019391052900155e-06], ['mm_malloc.h', 3.4019391052900155e-06], ['emmintrin.h"', 3.4019391052900155e-06], ['x86intrin.h"', 3.4019391052900155e-06], ['smmintrin.h"', 3.4019391052900155e-06], ['ppu_intrinsics.h', 3.4019391052900155e-06], ['spu2vmx.h', 3.4019391052900155e-06], ['si2vmx.h"', 3.4019391052900155e-06], ['amo.h"', 3.4019391052900155e-06], ['xpowerpc64|xdefault64|x6[23]0|x970|xG5|xpower[3456789]|xpower6x|xrs64a|xcell|xa2|xe500mc64|xe5500|xe6500)', 3.4019391052900155e-06], ['riscv*)', 3.4019391052900155e-06], ['cpu_type=riscv', 3.4019391052900155e-06], ['extra_objs="riscv-builtins.o', 3.4019391052900155e-06], ['riscv-c.o"', 3.4019391052900155e-06], ['d_target_objs="riscv-d.o"', 3.4019391052900155e-06], ['rs6000*-*-*)', 3.4019391052900155e-06], ['cpu_type=sparc', 3.4019391052900155e-06], ['c_target_objs="sparc-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="sparc-c.o"', 3.4019391052900155e-06], ['d_target_objs="sparc-d.o"', 3.4019391052900155e-06], ['extra_headers="visintrin.h"', 3.4019391052900155e-06], ['spu*-*-*)', 3.4019391052900155e-06], ['cpu_type=spu', 3.4019391052900155e-06], ['cpu_type=s390', 3.4019391052900155e-06], ['d_target_objs="s390-d.o"', 3.4019391052900155e-06], ['extra_headers="s390intrin.h', 3.4019391052900155e-06], ['htmxlintrin.h', 3.4019391052900155e-06], ['vecintrin.h"', 3.4019391052900155e-06], ["'l';", 3.4019391052900155e-06], ['"shle"', 3.4019391052900155e-06], ['"shl".', 3.4019391052900155e-06], ['sh[123456789lbe]*-*-*', 3.4019391052900155e-06], ['cpu_type=sh', 3.4019391052900155e-06], ['sh_treg_combine.o', 3.4019391052900155e-06], ['sh-mem.o', 3.4019391052900155e-06], ['sh_optimize_sett_clrt.o"', 3.4019391052900155e-06], ['cpu_type=v850', 3.4019391052900155e-06], ['cpu_type=c6x', 3.4019391052900155e-06], ['extra_headers="c6x_intrinsics.h"', 3.4019391052900155e-06], ['c6x/c6x-tables.opt"', 3.4019391052900155e-06], ['xtensa*-*-*)', 3.4019391052900155e-06], ['tilegx*-*-*)', 3.4019391052900155e-06], ['cpu_type=tilegx', 3.4019391052900155e-06], ['tilepro*-*-*)', 3.4019391052900155e-06], ['cpu_type=tilepro', 3.4019391052900155e-06], ['tm_file=${cpu_type}/${cpu_type}.h', 3.4019391052900155e-06], ['tm_d_file=${cpu_type}/${cpu_type}.h', 3.4019391052900155e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}-protos.h', 3.4019391052900155e-06], ['tm_p_file=${cpu_type}/${cpu_type}-protos.h', 3.4019391052900155e-06], ['tm_d_file="${tm_d_file}', 3.4019391052900155e-06], ['${cpu_type}/${cpu_type}-protos.h"', 3.4019391052900155e-06], ['extra_modes=', 3.4019391052900155e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}-modes.def', 3.4019391052900155e-06], ['extra_modes=${cpu_type}/${cpu_type}-modes.def', 3.4019391052900155e-06], ['${srcdir}/config/${cpu_type}/${cpu_type}.opt', 3.4019391052900155e-06], ['${cpu_type}/${cpu_type}.opt"', 3.4019391052900155e-06], ['xilp32;', 3.4019391052900155e-06], ['"x$with_abi"', 3.4019391052900155e-06], ['--with-abi."', 3.4019391052900155e-06], ['xmx32;', 3.4019391052900155e-06], ['m64)', 3.4019391052900155e-06], ['tm_p_file="arm/arm-flags.h', 3.4019391052900155e-06], ['${tm_p_file}', 3.4019391052900155e-06], ['a.out', 3.4019391052900155e-06], ['*-*-*aout*)', 3.4019391052900155e-06], ['LIBC_GLIBC=1', 3.4019391052900155e-06], ['LIBC_UCLIBC=2', 3.4019391052900155e-06], ['LIBC_BIONIC=3', 3.4019391052900155e-06], ['LIBC_MUSL=4"', 3.4019391052900155e-06], ['x86_archs="athlon', 3.4019391052900155e-06], ['athlon-4', 3.4019391052900155e-06], ['athlon-fx', 3.4019391052900155e-06], ['athlon-mp', 3.4019391052900155e-06], ['athlon-tbird', 3.4019391052900155e-06], ['athlon-xp', 3.4019391052900155e-06], ['k6', 3.4019391052900155e-06], ['k6-2', 3.4019391052900155e-06], ['k6-3', 3.4019391052900155e-06], ['geode', 3.4019391052900155e-06], ['c3', 3.4019391052900155e-06], ['c3-2', 3.4019391052900155e-06], ['winchip-c6', 3.4019391052900155e-06], ['winchip2', 3.4019391052900155e-06], ['i486', 3.4019391052900155e-06], ['i586', 3.4019391052900155e-06], ['i686', 3.4019391052900155e-06], ['pentium', 3.4019391052900155e-06], ['pentium-m', 3.4019391052900155e-06], ['pentium-mmx', 3.4019391052900155e-06], ['pentium2', 3.4019391052900155e-06], ['pentium3', 3.4019391052900155e-06], ['pentium3m', 3.4019391052900155e-06], ['pentium4', 3.4019391052900155e-06], ['pentium4m', 3.4019391052900155e-06], ['pentiumpro', 3.4019391052900155e-06], ['prescott', 3.4019391052900155e-06], ['lakemont"', 3.4019391052900155e-06], ['x86_64_archs="amdfam10', 3.4019391052900155e-06], ['athlon64', 3.4019391052900155e-06], ['athlon64-sse3', 3.4019391052900155e-06], ['barcelona', 3.4019391052900155e-06], ['bdver1', 3.4019391052900155e-06], ['bdver2', 3.4019391052900155e-06], ['bdver3', 3.4019391052900155e-06], ['bdver4', 3.4019391052900155e-06], ['znver1', 3.4019391052900155e-06], ['znver2', 3.4019391052900155e-06], ['btver1', 3.4019391052900155e-06], ['btver2', 3.4019391052900155e-06], ['k8', 3.4019391052900155e-06], ['k8-sse3', 3.4019391052900155e-06], ['opteron', 3.4019391052900155e-06], ['opteron-sse3', 3.4019391052900155e-06], ['nocona', 3.4019391052900155e-06], ['core2', 3.4019391052900155e-06], ['corei7', 3.4019391052900155e-06], ['corei7-avx', 3.4019391052900155e-06], ['core-avx-i', 3.4019391052900155e-06], ['core-avx2', 3.4019391052900155e-06], ['slm', 3.4019391052900155e-06], ['nehalem', 3.4019391052900155e-06], ['westmere', 3.4019391052900155e-06], ['sandybridge', 3.4019391052900155e-06], ['ivybridge', 3.4019391052900155e-06], ['haswell', 3.4019391052900155e-06], ['broadwell', 3.4019391052900155e-06], ['bonnell', 3.4019391052900155e-06], ['silvermont', 3.4019391052900155e-06], ['knl', 3.4019391052900155e-06], ['knm', 3.4019391052900155e-06], ['skylake-avx512', 3.4019391052900155e-06], ['cannonlake', 3.4019391052900155e-06], ['icelake-client', 3.4019391052900155e-06], ['icelake-server', 3.4019391052900155e-06], ['skylake', 3.4019391052900155e-06], ['goldmont', 3.4019391052900155e-06], ['goldmont-plus', 3.4019391052900155e-06], ['tremont', 3.4019391052900155e-06], ['cascadelake', 3.4019391052900155e-06], ['native"', 3.4019391052900155e-06], ['Additional', 3.4019391052900155e-06], ['--with-cpu=.', 3.4019391052900155e-06], ['x86_cpus="generic', 3.4019391052900155e-06], ['intel"', 3.4019391052900155e-06], ['widely', 3.4019391052900155e-06], ['ported', 3.4019391052900155e-06], ['systems.', 3.4019391052900155e-06], ['*-*-darwin*)', 3.4019391052900155e-06], ['tmake_file="t-darwin', 3.4019391052900155e-06], ['${cpu_type}/t-darwin"', 3.4019391052900155e-06], ['darwin.h"', 3.4019391052900155e-06], ['*-*-darwin9*)', 3.4019391052900155e-06], ['darwin9.h"', 3.4019391052900155e-06], ['*-*-darwin[1][01]*)', 3.4019391052900155e-06], ['darwin10.h"', 3.4019391052900155e-06], ['*-*-darwin[1][2-9]*', 3.4019391052900155e-06], ['*-*-darwin[2][0-9]*)', 3.4019391052900155e-06], ['darwin10.h', 3.4019391052900155e-06], ['darwin12.h"', 3.4019391052900155e-06], ['${cpu_type}/darwin.h"', 3.4019391052900155e-06], ['darwin-protos.h"', 3.4019391052900155e-06], ['target_gtfiles="\\$(srcdir)/config/darwin.c"', 3.4019391052900155e-06], ['darwin.opt"', 3.4019391052900155e-06], ['fortran_target_objs="darwin-f.o"', 3.4019391052900155e-06], ['darwin.o"', 3.4019391052900155e-06], ['extra_gcc_objs="darwin-driver.o"', 3.4019391052900155e-06], ['*-*-dragonfly*)', 3.4019391052900155e-06], ['single)', 3.4019391052900155e-06], ['non-posix', 3.4019391052900155e-06], ['selections', 3.4019391052900155e-06], ['DragonFly', 3.4019391052900155e-06], ["BSD'", 3.4019391052900155e-06], ['dragonfly.opt"', 3.4019391052900155e-06], ['*-*-freebsd*)', 3.4019391052900155e-06], ['FreeBSD.', 3.4019391052900155e-06], ['refine', 3.4019391052900155e-06], ['configuration.', 3.4019391052900155e-06], ['Due', 3.4019391052900155e-06], ['architectures,', 3.4019391052900155e-06], ['fbsd_tm_file', 3.4019391052900155e-06], ['dictate', 3.4019391052900155e-06], ['freebsd<version_number>.h', 3.4019391052900155e-06], ['[freebsd-<conf_option>.h', 3.4019391052900155e-06], ['...]', 3.4019391052900155e-06], ['tamper', 3.4019391052900155e-06], ['pleases', 3.4019391052900155e-06], ['core', 3.4019391052900155e-06], ['fbsd_major=`echo', 3.4019391052900155e-06], ["'s/.*freebsd//g'", 3.4019391052900155e-06], ["'s/\\..*//g'`", 3.4019391052900155e-06], ['"$fbsd_major"', 3.4019391052900155e-06], ['"Specify', 3.4019391052900155e-06], ['targeted', 3.4019391052900155e-06], ['release"', 3.4019391052900155e-06], ['"like', 3.4019391052900155e-06], ['--target=amd64-unknown-freebsd10.1"', 3.4019391052900155e-06], ['FBSD_MAJOR=${fbsd_major}"', 3.4019391052900155e-06], ['freebsd-nthr.h"', 3.4019391052900155e-06], ["FreeBSD'", 3.4019391052900155e-06], ['freebsd-stdint.h"', 3.4019391052900155e-06], ['freebsd.opt"', 3.4019391052900155e-06], ['*-*-freebsd[345].*)', 3.4019391052900155e-06], ['default_use_cxa_atexit=yes;;', 3.4019391052900155e-06], ['*-*-fuchsia*)', 3.4019391052900155e-06], ['*-*-gnu*', 3.4019391052900155e-06], ['*-*-gnu*)', 3.4019391052900155e-06], ['switch:', 3.4019391052900155e-06], ['bionic.', 3.4019391052900155e-06], ['bionic', 3.4019391052900155e-06], ['GNU/Hurd', 3.4019391052900155e-06], ['GNU/k*BSD.', 3.4019391052900155e-06], ['*linux*)', 3.4019391052900155e-06], ['linux-protos.h"', 3.4019391052900155e-06], ['t-linux"', 3.4019391052900155e-06], ['linux.o"', 3.4019391052900155e-06], ['linux.opt"', 3.4019391052900155e-06], ['DEFAULT_LIBC=LIBC_BIONIC"', 3.4019391052900155e-06], ['*-*-*musl*)', 3.4019391052900155e-06], ['DEFAULT_LIBC=LIBC_MUSL"', 3.4019391052900155e-06], ['uClibc', 3.4019391052900155e-06], ['Bionic', 3.4019391052900155e-06], ['use_gcc_tgmath=no', 3.4019391052900155e-06], ['Android', 3.4019391052900155e-06], ['*android*', 3.4019391052900155e-06], ['ANDROID_DEFAULT=1"', 3.4019391052900155e-06], ['ANDROID_DEFAULT=0"', 3.4019391052900155e-06], ['glibc-d.o"', 3.4019391052900155e-06], ['t-glibc"', 3.4019391052900155e-06], ['*-*-netbsd*)', 3.4019391052900155e-06], ['netbsd-protos.h"', 3.4019391052900155e-06], ['tmake_file="t-netbsd', 3.4019391052900155e-06], ['netbsd.o"', 3.4019391052900155e-06], ['netbsd-d.o"', 3.4019391052900155e-06], ['nbsd_tm_file="netbsd.h', 3.4019391052900155e-06], ['netbsd-stdint.h', 3.4019391052900155e-06], ['netbsd-elf.h"', 3.4019391052900155e-06], ['*-*-openbsd*)', 3.4019391052900155e-06], ['tmake_file="t-openbsd"', 3.4019391052900155e-06], ['*-*-openbsd4.[3-9]|*-*-openbsd[5-9]*)', 3.4019391052900155e-06], ['*-*-phoenix*)', 3.4019391052900155e-06], ['rtems)', 3.4019391052900155e-06], ["thread_file='rtems'", 3.4019391052900155e-06], ["RTEMS'", 3.4019391052900155e-06], ['t-rtems"', 3.4019391052900155e-06], ['rtems.opt"', 3.4019391052900155e-06], ['*-*-uclinux*)', 3.4019391052900155e-06], ['DEFAULT_LIBC=LIBC_UCLIBC', 3.4019391052900155e-06], ['SINGLE_LIBC"', 3.4019391052900155e-06], ['*-*-rdos*)', 3.4019391052900155e-06], ['*-*-solaris2*)', 3.4019391052900155e-06], ['i?86-*-solaris2*', 3.4019391052900155e-06], ['sol2_tm_file_head="dbxelf.h', 3.4019391052900155e-06], ['${cpu_type}/sysv4.h"', 3.4019391052900155e-06], ['sol2_tm_file_tail="${cpu_type}/sol2.h', 3.4019391052900155e-06], ['sol2.h"', 3.4019391052900155e-06], ['sol2_tm_file="${sol2_tm_file_head}', 3.4019391052900155e-06], ['*-*-solaris2.1[1-9]*)', 3.4019391052900155e-06], ['11.4.', 3.4019391052900155e-06], ['tm_file="usegld.h', 3.4019391052900155e-06], ['tm_file="usegas.h', 3.4019391052900155e-06], ['sol2-protos.h"', 3.4019391052900155e-06], ['t-sol2', 3.4019391052900155e-06], ['sol2-c.o"', 3.4019391052900155e-06], ['sol2-c.o', 3.4019391052900155e-06], ['sol2-cxx.o"', 3.4019391052900155e-06], ['sol2-d.o"', 3.4019391052900155e-06], ['sol2.o', 3.4019391052900155e-06], ['sol2-stubs.o"', 3.4019391052900155e-06], ['sol2.opt"', 3.4019391052900155e-06], ['${enable_threads}:${have_pthread_h}:${have_thread_h}', 3.4019391052900155e-06], ['"":yes:*', 3.4019391052900155e-06], ['yes:yes:*', 3.4019391052900155e-06], ['*-*-*vms*)', 3.4019391052900155e-06], ['vms/vms.opt"', 3.4019391052900155e-06], ['xmake_file=vms/x-vms', 3.4019391052900155e-06], ['tmake_file="vms/t-vms', 3.4019391052900155e-06], ['extra_objs="vms.o"', 3.4019391052900155e-06], ['target_gtfiles="$target_gtfiles', 3.4019391052900155e-06], ['\\$(srcdir)/config/vms/vms.c"', 3.4019391052900155e-06], ['vms/vms-protos.h"', 3.4019391052900155e-06], ['xm_file="vms/xm-vms.h"', 3.4019391052900155e-06], ['c_target_objs="vms-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="vms-c.o"', 3.4019391052900155e-06], ['fortran_target_objs="vms-f.o"', 3.4019391052900155e-06], ['vms/vms-stdint.h"', 3.4019391052900155e-06], ['extra_programs="ld\\$(exeext)', 3.4019391052900155e-06], ['ar\\$(exeext)"', 3.4019391052900155e-06], ['vms/t-vmsnative"', 3.4019391052900155e-06], ['*-*-vxworks*)', 3.4019391052900155e-06], ['tmake_file=t-vxworks', 3.4019391052900155e-06], ['vxworks.opt"', 3.4019391052900155e-06], ['vxworks.o"', 3.4019391052900155e-06], ['vxworks-stdint.h"', 3.4019391052900155e-06], ['vxworks)', 3.4019391052900155e-06], ["thread_file='vxworks'", 3.4019391052900155e-06], ["VxWorks';", 3.4019391052900155e-06], ['*-*-vxworks7*)', 3.4019391052900155e-06], ['TARGET_VXWORKS7=1"', 3.4019391052900155e-06], ['*64-*-vxworks*)', 3.4019391052900155e-06], ['TARGET_VXWORKS64=1"', 3.4019391052900155e-06], ['*-*-elf|arc*-*-elf*)', 3.4019391052900155e-06], ['aarch64*-*-elf', 3.4019391052900155e-06], ['aarch64*-*-fuchsia*', 3.4019391052900155e-06], ['aarch64*-*-rtems*)', 3.4019391052900155e-06], ['aarch64/aarch64-elf-raw.h"', 3.4019391052900155e-06], ['aarch64/t-aarch64"', 3.4019391052900155e-06], ['aarch64-*-elf*)', 3.4019391052900155e-06], ['aarch64-*-fuchsia*)', 3.4019391052900155e-06], ['aarch64-*-rtems*)', 3.4019391052900155e-06], ['aarch64/rtems.h"', 3.4019391052900155e-06], ['aarch64*-*-freebsd*)', 3.4019391052900155e-06], ['${fbsd_tm_file}"', 3.4019391052900155e-06], ['aarch64/aarch64-freebsd.h"', 3.4019391052900155e-06], ['aarch64/t-aarch64-freebsd"', 3.4019391052900155e-06], ['aarch64*-*-linux*)', 3.4019391052900155e-06], ['aarch64/aarch64-linux.h"', 3.4019391052900155e-06], ['aarch64/t-aarch64-linux"', 3.4019391052900155e-06], ['ILP32', 3.4019391052900155e-06], ['mature.', 3.4019391052900155e-06], ['aarch64_multilibs="lp64"', 3.4019391052900155e-06], ['alpha*-*-linux*)', 3.4019391052900155e-06], ['alpha/linux.h', 3.4019391052900155e-06], ['alpha/linux-elf.h', 3.4019391052900155e-06], ['alpha/t-linux', 3.4019391052900155e-06], ['alpha*-*-netbsd*)', 3.4019391052900155e-06], ['alpha/netbsd.h"', 3.4019391052900155e-06], ['alpha*-*-openbsd*)', 3.4019391052900155e-06], ['OBSD_HAS_DECLARE_FUNCTION_NAME', 3.4019391052900155e-06], ['OBSD_HAS_DECLARE_FUNCTION_SIZE', 3.4019391052900155e-06], ['OBSD_HAS_DECLARE_OBJECT"', 3.4019391052900155e-06], ['alpha/alpha.h', 3.4019391052900155e-06], ['alpha/openbsd.h', 3.4019391052900155e-06], ['openbsd-libpthread.h"', 3.4019391052900155e-06], ['openbsd.opt', 3.4019391052900155e-06], ['x-alpha', 3.4019391052900155e-06], ['dec-osf.', 3.4019391052900155e-06], ['alpha*-dec-*vms*)', 3.4019391052900155e-06], ['alpha/vms.h"', 3.4019391052900155e-06], ['alpha/t-vms', 3.4019391052900155e-06], ['arc*-*-elf*)', 3.4019391052900155e-06], ['arc/elf.h', 3.4019391052900155e-06], ['tmake_file="arc/t-multilib', 3.4019391052900155e-06], ['arc*-*-linux*)', 3.4019391052900155e-06], ['arc/linux.h', 3.4019391052900155e-06], ['arc/t-multilib-linux', 3.4019391052900155e-06], ['arm-wrs-vxworks|arm-wrs-vxworks7)', 3.4019391052900155e-06], ['arm/vxworks.opt"', 3.4019391052900155e-06], ['arm/t-vxworks"', 3.4019391052900155e-06], ['*-vxworks7)', 3.4019391052900155e-06], ['VxWorks7', 3.4019391052900155e-06], ['adheres', 3.4019391052900155e-06], ['Platform', 3.4019391052900155e-06], ['tm_file="arm/bpabi.h', 3.4019391052900155e-06], ['divmod', 3.4019391052900155e-06], ['r0-r3.', 3.4019391052900155e-06], ['need_64bit_hwint=yes', 3.4019391052900155e-06], ['arm/vxworks.h"', 3.4019391052900155e-06], ['target_cpu_cname="arm8"', 3.4019391052900155e-06], ['arm*-*-freebsd*)', 3.4019391052900155e-06], ['arm/elf.h"', 3.4019391052900155e-06], ['arm*b-*-freebsd*)', 3.4019391052900155e-06], ['arm/freebsd.h', 3.4019391052900155e-06], ['armv6*-*-freebsd*)', 3.4019391052900155e-06], ['target_cpu_cname="arm1176jzf-s"', 3.4019391052900155e-06], ['armv7*-*-freebsd*)', 3.4019391052900155e-06], ['target_cpu_cname="arm9"', 3.4019391052900155e-06], ['arm*-*-netbsdelf*)', 3.4019391052900155e-06], ['arm/netbsd-elf.h"', 3.4019391052900155e-06], ['arm/t-arm"', 3.4019391052900155e-06], ['target_cpu_cname="strongarm"', 3.4019391052900155e-06], ['arm*-*-linux-*)', 3.4019391052900155e-06], ['arm/linux-elf.h"', 3.4019391052900155e-06], ['arm*b-*-linux*)', 3.4019391052900155e-06], ['arm/t-linux-eabi"', 3.4019391052900155e-06], ['arm/linux-eabi.h', 3.4019391052900155e-06], ['Generation', 3.4019391052900155e-06], ['ARMv5te.', 3.4019391052900155e-06], ['"hard"', 3.4019391052900155e-06], ['"softfp"', 3.4019391052900155e-06], ['target_cpu_cname="arm10e"', 3.4019391052900155e-06], ['arm-linux-androideabi.', 3.4019391052900155e-06], ['*-androideabi)', 3.4019391052900155e-06], ['arm/t-linux-androideabi"', 3.4019391052900155e-06], ['arm*-*-uclinux*eabi*)', 3.4019391052900155e-06], ['ucLinux', 3.4019391052900155e-06], ['arm/uclinux-elf.h', 3.4019391052900155e-06], ['arm/uclinux-eabi.h', 3.4019391052900155e-06], ['arm*-*-phoenix*)', 3.4019391052900155e-06], ['phoenix.h"', 3.4019391052900155e-06], ['arm/t-phoenix"', 3.4019391052900155e-06], ['arm*-*-eabi*', 3.4019391052900155e-06], ['arm*-*-symbianelf*', 3.4019391052900155e-06], ['arm*-*-rtems*', 3.4019391052900155e-06], ['arm*eb-*-eabi*)', 3.4019391052900155e-06], ['arm/t-arm-elf"', 3.4019391052900155e-06], ['arm*-*-eabi*)', 3.4019391052900155e-06], ['fuchsia.h', 3.4019391052900155e-06], ['arm/fuchsia-elf.h', 3.4019391052900155e-06], ['arm/t-fuchsia"', 3.4019391052900155e-06], ['arm*-*-rtems*)', 3.4019391052900155e-06], ['arm/rtems.h', 3.4019391052900155e-06], ['arm/t-rtems"', 3.4019391052900155e-06], ['arm*-*-symbianelf*)', 3.4019391052900155e-06], ['arm/symbian.h"', 3.4019391052900155e-06], ['t-bpabi', 3.4019391052900155e-06], ['Symbian', 3.4019391052900155e-06], ['arm/t-symbian"', 3.4019391052900155e-06], ['avr/elf.h', 3.4019391052900155e-06], ['avr/avr-arch.h', 3.4019391052900155e-06], ['avr/avr.h', 3.4019391052900155e-06], ['avr/specs.h', 3.4019391052900155e-06], ['avr/avr-stdint.h"', 3.4019391052900155e-06], ['x${with_avrlibc}', 3.4019391052900155e-06], ['${cpu_type}/avrlibc.h"', 3.4019391052900155e-06], ['WITH_AVRLIBC"', 3.4019391052900155e-06], ['avr/t-avr', 3.4019391052900155e-06], ['avr/t-multilib"', 3.4019391052900155e-06], ['extra_gcc_objs="driver-avr.o', 3.4019391052900155e-06], ['avr-devices.o"', 3.4019391052900155e-06], ['extra_objs="avr-devices.o', 3.4019391052900155e-06], ['avr-log.o"', 3.4019391052900155e-06], ['bfin*-elf*)', 3.4019391052900155e-06], ['tmake_file=bfin/t-bfin-elf', 3.4019391052900155e-06], ['bfin*-uclinux*)', 3.4019391052900155e-06], ['bfin/uclinux.h"', 3.4019391052900155e-06], ['tmake_file=bfin/t-bfin-uclinux', 3.4019391052900155e-06], ['bfin*-linux-uclibc*)', 3.4019391052900155e-06], ['bfin/linux.h', 3.4019391052900155e-06], ['./linux-sysroot-suffix.h"', 3.4019391052900155e-06], ['bfin/t-bfin-linux"', 3.4019391052900155e-06], ['bfin*-rtems*)', 3.4019391052900155e-06], ['bfin/rtems.h', 3.4019391052900155e-06], ['bfin/t-rtems"', 3.4019391052900155e-06], ['cr16-*-elf)', 3.4019391052900155e-06], ['cr16/t-cr16', 3.4019391052900155e-06], ['crisv32-*-elf', 3.4019391052900155e-06], ['crisv32-*-none)', 3.4019391052900155e-06], ['tmake_file="cris/t-cris"', 3.4019391052900155e-06], ['cris-*-elf', 3.4019391052900155e-06], ['cris-*-none)', 3.4019391052900155e-06], ['tmake_file="cris/t-cris', 3.4019391052900155e-06], ['cris/t-elfmulti"', 3.4019391052900155e-06], ['crisv32-*-linux*', 3.4019391052900155e-06], ['cris-*-linux*)', 3.4019391052900155e-06], ['cris/linux.h"', 3.4019391052900155e-06], ['cris/t-cris', 3.4019391052900155e-06], ['cris/t-linux"', 3.4019391052900155e-06], ['cris/linux.opt"', 3.4019391052900155e-06], ['cris-*-*)', 3.4019391052900155e-06], ['target_cpu_default=10', 3.4019391052900155e-06], ['crisv32-*-*)', 3.4019391052900155e-06], ['x${with_float}', 3.4019391052900155e-06], ['tm_file="csky/csky.h"', 3.4019391052900155e-06], ['md_file="csky/csky.md"', 3.4019391052900155e-06], ['out_file="csky/csky.c"', 3.4019391052900155e-06], ['csky/csky-protos.h"', 3.4019391052900155e-06], ['csky/csky_tables.opt"', 3.4019391052900155e-06], ['x${enable_tpf_debug}', 3.4019391052900155e-06], ['ENABLE_TPF_DEBUG"', 3.4019391052900155e-06], ['csky-*-elf*)', 3.4019391052900155e-06], ['csky/csky-elf.h"', 3.4019391052900155e-06], ['tmake_file="csky/t-csky', 3.4019391052900155e-06], ['csky/t-csky-elf"', 3.4019391052900155e-06], ['csky-*-linux*)', 3.4019391052900155e-06], ['csky/csky-linux-elf.h"', 3.4019391052900155e-06], ['csky/t-csky', 3.4019391052900155e-06], ['csky/t-csky-linux"', 3.4019391052900155e-06], ['csky/t-sysroot-suffix"', 3.4019391052900155e-06], ['csky-*-linux-gnu*)', 3.4019391052900155e-06], ['csky-*-linux-uclibc*)', 3.4019391052900155e-06], ['epiphany-*-elf', 3.4019391052900155e-06], ['epiphany/t-epiphany"', 3.4019391052900155e-06], ['epiphany/rtems.h', 3.4019391052900155e-06], ['mode-switch-use.o', 3.4019391052900155e-06], ['resolve-sw-modes.o"', 3.4019391052900155e-06], ['EPIPHANY_STACK_OFFSET=${with_stack_offset:-8}"', 3.4019391052900155e-06], ['extra_headers="epiphany_intrinsics.h"', 3.4019391052900155e-06], ['fr30-*-elf)', 3.4019391052900155e-06], ['frv-*-elf)', 3.4019391052900155e-06], ['tmake_file=frv/t-frv', 3.4019391052900155e-06], ['frv-*-*linux*)', 3.4019391052900155e-06], ['frv/linux.h"', 3.4019391052900155e-06], ['frv/t-frv', 3.4019391052900155e-06], ['frv/t-linux"', 3.4019391052900155e-06], ['ft32-*-elf)', 3.4019391052900155e-06], ['ft32/t-ft32"', 3.4019391052900155e-06], ['amdgcn-*-amdhsa)', 3.4019391052900155e-06], ['gcn/gcn-hsa.h', 3.4019391052900155e-06], ['gcn/gcn.h', 3.4019391052900155e-06], ['tmake_file="gcn/t-gcn-hsa"', 3.4019391052900155e-06], ['extra_modes=gcn/gcn-modes.def', 3.4019391052900155e-06], ['gcn-tree.o"', 3.4019391052900155e-06], ['extra_gcc_objs="driver-gcn.o"', 3.4019391052900155e-06], ['"$host"', 3.4019391052900155e-06], ['x86_64*-*-linux-gnu', 3.4019391052900155e-06], ['"$ac_cv_search_dlopen"', 3.4019391052900155e-06], ['gcn-run\\$(exeext)"', 3.4019391052900155e-06], ['gcn/offload.h"', 3.4019391052900155e-06], ['moxie-*-elf)', 3.4019391052900155e-06], ['moxie-*-uclinux*)', 3.4019391052900155e-06], ['moxie/uclinux.h"', 3.4019391052900155e-06], ['moxie-*-rtems*)', 3.4019391052900155e-06], ['tm_file="moxie/moxie.h', 3.4019391052900155e-06], ['moxie/rtems.h', 3.4019391052900155e-06], ['moxie-*-moxiebox*)', 3.4019391052900155e-06], ['moxie/moxiebox.h', 3.4019391052900155e-06], ['moxie/t-moxiebox"', 3.4019391052900155e-06], ['h8300-*-elf*)', 3.4019391052900155e-06], ['tmake_file="h8300/t-h8300"', 3.4019391052900155e-06], ['h8300/elf.h"', 3.4019391052900155e-06], ['h8300-*-linux*)', 3.4019391052900155e-06], ['h8300/t-h8300', 3.4019391052900155e-06], ['h8300/t-linux"', 3.4019391052900155e-06], ['h8300/linux.h"', 3.4019391052900155e-06], ['hppa*64*-*-linux*)', 3.4019391052900155e-06], ['pa/pa64-linux.h"', 3.4019391052900155e-06], ['hppa*-*-linux*)', 3.4019391052900155e-06], ['target_cpu_default="MASK_PA_11|MASK_NO_SPACE_REGS|MASK_CALLER_COPIES"', 3.4019391052900155e-06], ['pa/pa32-linux.h"', 3.4019391052900155e-06], ['hppa*-*-openbsd*)', 3.4019391052900155e-06], ['pa/pa-openbsd.h', 3.4019391052900155e-06], ['pa/pa32-openbsd.h"', 3.4019391052900155e-06], ['tmake_file="pa/t-pa"', 3.4019391052900155e-06], ['hppa[12]*-*-hpux10*)', 3.4019391052900155e-06], ['pa/pa-hpux10.h"', 3.4019391052900155e-06], ['pa/pa-hpux10.opt"', 3.4019391052900155e-06], ['*-*-hpux10.[1-9]*)', 3.4019391052900155e-06], ['pa/pa-hpux1010.h"', 3.4019391052900155e-06], ['pa/pa-hpux1010.opt"', 3.4019391052900155e-06], ['x$have_pthread_h', 3.4019391052900155e-06], ['dce)', 3.4019391052900155e-06], ['hppa*64*-*-hpux11*)', 3.4019391052900155e-06], ['pa/pa-hpux1111.h', 3.4019391052900155e-06], ['pa/pa-hpux1131.h', 3.4019391052900155e-06], ['pa/pa64-hpux.opt', 3.4019391052900155e-06], ['hppa[12]*-*-hpux11*)', 3.4019391052900155e-06], ['pa/pa-hpux1111.h"', 3.4019391052900155e-06], ['pa/pa-hpux1131.h"', 3.4019391052900155e-06], ['i[34567]86-*-darwin*)', 3.4019391052900155e-06], ['Baseline', 3.4019391052900155e-06], ['choice', 3.4019391052900155e-06], ['i386/iamcu.h"', 3.4019391052900155e-06], ['i[34567]86-*-elf*)', 3.4019391052900155e-06], ['i386/i386elf.h"', 3.4019391052900155e-06], ['x86_64-*-elf*)', 3.4019391052900155e-06], ['x86_64-*-rtems*)', 3.4019391052900155e-06], ['i[34567]86-*-rdos*)', 3.4019391052900155e-06], ['i386/rdos.h"', 3.4019391052900155e-06], ['x86_64-*-rdos*)', 3.4019391052900155e-06], ['i386/rdos.h', 3.4019391052900155e-06], ['i386/rdos64.h"', 3.4019391052900155e-06], ['tmake_file="i386/t-i386elf', 3.4019391052900155e-06], ['t-svr4"', 3.4019391052900155e-06], ['i[34567]86-*-dragonfly*)', 3.4019391052900155e-06], ['i[34567]86-*-freebsd*)', 3.4019391052900155e-06], ['i386/freebsd.h"', 3.4019391052900155e-06], ['i386/freebsd.h', 3.4019391052900155e-06], ['i386/freebsd64.h"', 3.4019391052900155e-06], ['i[34567]86-*-netbsdelf*)', 3.4019391052900155e-06], ['i386/netbsd-elf.h"', 3.4019391052900155e-06], ['x86_64-*-netbsd*)', 3.4019391052900155e-06], ['i386/netbsd64.h"', 3.4019391052900155e-06], ['i[34567]86-*-openbsd*)', 3.4019391052900155e-06], ['x86_64-*-openbsd*)', 3.4019391052900155e-06], ['i[34567]86-*-gnu*', 3.4019391052900155e-06], ["80386's", 3.4019391052900155e-06], ['GNU/*', 3.4019391052900155e-06], ['i[34567]86-*-linux*)', 3.4019391052900155e-06], ['linux-android.h"', 3.4019391052900155e-06], ['i386/gnu-user64.h', 3.4019391052900155e-06], ['i386/linux.h"', 3.4019391052900155e-06], ['i[34567]86-*-kfreebsd*-gnu)', 3.4019391052900155e-06], ['i386/kfreebsd-gnu.h"', 3.4019391052900155e-06], ['kopensolaris-gnu.h', 3.4019391052900155e-06], ['i386/kopensolaris-gnu.h"', 3.4019391052900155e-06], ['gnu.h', 3.4019391052900155e-06], ['i386/gnu.h"', 3.4019391052900155e-06], ['x86_64-*-linux*', 3.4019391052900155e-06], ['i386/gnu-user64.h"', 3.4019391052900155e-06], ['i386/kfreebsd-gnu64.h"', 3.4019391052900155e-06], ['x86_multilibs="mx32"', 3.4019391052900155e-06], ['i[34567]86-pc-msdosdjgpp*)', 3.4019391052900155e-06], ['xm_file=i386/xm-djgpp.h', 3.4019391052900155e-06], ['tm_file="dbxcoff.h', 3.4019391052900155e-06], ['i386/djgpp.h', 3.4019391052900155e-06], ['i386/djgpp-stdint.h"', 3.4019391052900155e-06], ['native_system_header_dir=/dev/env/DJDIR/include', 3.4019391052900155e-06], ['i386/djgpp.opt"', 3.4019391052900155e-06], ['i[34567]86-*-lynxos*)', 3.4019391052900155e-06], ['i386/lynx.h', 3.4019391052900155e-06], ['t-lynx"', 3.4019391052900155e-06], ['i[34567]86-*-nto-qnx*)', 3.4019391052900155e-06], ['i386/nto.h"', 3.4019391052900155e-06], ['i386/nto.opt"', 3.4019391052900155e-06], ['i[34567]86-*-rtems*)', 3.4019391052900155e-06], ['i386/t-rtems"', 3.4019391052900155e-06], ['pentium4,', 3.4019391052900155e-06], ['config.guess', 3.4019391052900155e-06], ['i386-pc-solaris2*.', 3.4019391052900155e-06], ['with_arch_32=${with_arch_32:-pentium4}', 3.4019391052900155e-06], ['with_tune_32=${with_tune_32:-generic}', 3.4019391052900155e-06], ['${sol2_tm_file_head}', 3.4019391052900155e-06], ['i386/t-sol2"', 3.4019391052900155e-06], ['i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae|i[4567]86-wrs-vxworks7|x86_64-wrs-vxworks7)', 3.4019391052900155e-06], ['vx-common.h"', 3.4019391052900155e-06], ['i386/vxworks.h', 3.4019391052900155e-06], ['i386/vxworksae.h"', 3.4019391052900155e-06], ['i386/t-vxworks', 3.4019391052900155e-06], ['i386/t-vxworksae"', 3.4019391052900155e-06], ['i386/vxworks.h"', 3.4019391052900155e-06], ['i386/t-vxworks"', 3.4019391052900155e-06], ['i[34567]86-*-cygwin*)', 3.4019391052900155e-06], ['i386/cygwin-w64.h', 3.4019391052900155e-06], ['t-slibgcc', 3.4019391052900155e-06], ['i386/t-cygwin-w64"', 3.4019391052900155e-06], ['TARGET_CYGWIN64=1"', 3.4019391052900155e-06], ['i386/cygming.h"', 3.4019391052900155e-06], ['xm_file=i386/xm-mingw32.h', 3.4019391052900155e-06], ['target_has_targetcm="yes"', 3.4019391052900155e-06], ['x86_64-*-*', 3.4019391052900155e-06], ['i386/mingw-pthread.h"', 3.4019391052900155e-06], ['i386/mingw32.h"', 3.4019391052900155e-06], ["mingw's", 3.4019391052900155e-06], ['w64', 3.4019391052900155e-06], ['user_headers_inc_next_post="${user_headers_inc_next_post}', 3.4019391052900155e-06], ['float.h"', 3.4019391052900155e-06], ['user_headers_inc_next_pre="${user_headers_inc_next_pre}', 3.4019391052900155e-06], ['stddef.h', 3.4019391052900155e-06], ['stdarg.h"', 3.4019391052900155e-06], ['i386/mingw-w64.h"', 3.4019391052900155e-06], ['i386/mingw-stdint.h"', 3.4019391052900155e-06], ['t-winnt', 3.4019391052900155e-06], ['x86_64-w64-*)', 3.4019391052900155e-06], ['i386/t-mingw-w64"', 3.4019391052900155e-06], ['i[34567]86-w64-*)', 3.4019391052900155e-06], ['i386/t-mingw-w32"', 3.4019391052900155e-06], ['native_system_header_dir=/mingw/include', 3.4019391052900155e-06], ['i386/mingw.opt"', 3.4019391052900155e-06], ['i386/mingw-w64.opt"', 3.4019391052900155e-06], ['win32)', 3.4019391052900155e-06], ["thread_file='win32'", 3.4019391052900155e-06], ['*mingw32crt*)', 3.4019391052900155e-06], ['i386/crtdll.h"', 3.4019391052900155e-06], ['*mingw32msv*', 3.4019391052900155e-06], ['*mingw*)', 3.4019391052900155e-06], ['x86_64-*-fuchsia*)', 3.4019391052900155e-06], ['i386/t-x86_64-elf"', 3.4019391052900155e-06], ['ia64*-*-elf*)', 3.4019391052900155e-06], ['ia64/elf.h"', 3.4019391052900155e-06], ['tmake_file="ia64/t-ia64"', 3.4019391052900155e-06], ['ia64*-*-freebsd*)', 3.4019391052900155e-06], ['ia64/freebsd.h"', 3.4019391052900155e-06], ['ia64/linux.h"', 3.4019391052900155e-06], ['ia64/t-ia64', 3.4019391052900155e-06], ['ia64/t-linux', 3.4019391052900155e-06], ['t-libunwind"', 3.4019391052900155e-06], ['ia64*-*-hpux*)', 3.4019391052900155e-06], ['ia64/hpux.h"', 3.4019391052900155e-06], ['tmake_file="ia64/t-ia64', 3.4019391052900155e-06], ['ia64/t-hpux', 3.4019391052900155e-06], ['target_cpu_default="MASK_GNU_AS"', 3.4019391052900155e-06], ['c_target_objs="ia64-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="ia64-c.o"', 3.4019391052900155e-06], ['ia64/ilp32.opt', 3.4019391052900155e-06], ['*-*-hpux11.3*)', 3.4019391052900155e-06], ['ia64/hpux-unix2003.h"', 3.4019391052900155e-06], ['ia64-hp-*vms*)', 3.4019391052900155e-06], ['ia64/vms.h"', 3.4019391052900155e-06], ['ia64/vms.opt"', 3.4019391052900155e-06], ['iq2000*-*-elf*)', 3.4019391052900155e-06], ['iq2000/iq2000.h"', 3.4019391052900155e-06], ['out_file=iq2000/iq2000.c', 3.4019391052900155e-06], ['md_file=iq2000/iq2000.md', 3.4019391052900155e-06], ['lm32-*-elf*)', 3.4019391052900155e-06], ['lm32-*-rtems*)', 3.4019391052900155e-06], ['lm32/rtems.h', 3.4019391052900155e-06], ['lm32/t-rtems"', 3.4019391052900155e-06], ['lm32-*-uclinux*)', 3.4019391052900155e-06], ['lm32/uclinux-elf.h"', 3.4019391052900155e-06], ['m32r-*-elf*)', 3.4019391052900155e-06], ['m32rle-*-elf*)', 3.4019391052900155e-06], ['m32r-*-linux*)', 3.4019391052900155e-06], ['m32rle-*-linux*)', 3.4019391052900155e-06], ['m68k-*-elf*', 3.4019391052900155e-06], ['sense.', 3.4019391052900155e-06], ['"fidoa")', 3.4019391052900155e-06], ['with_cpu=fidoa', 3.4019391052900155e-06], ['m68k/m68020-elf.h"', 3.4019391052900155e-06], ['m68k/t-m68kelf"', 3.4019391052900155e-06], ['fido.', 3.4019391052900155e-06], ['m68k*-*-netbsdelf*)', 3.4019391052900155e-06], ['m68k/netbsd-elf.h"', 3.4019391052900155e-06], ['MOTOROLA=1', 3.4019391052900155e-06], ['m68k*-*-openbsd*)', 3.4019391052900155e-06], ['unconfuse', 3.4019391052900155e-06], ['OBSD_OLD_GAS"', 3.4019391052900155e-06], ['m68k/openbsd.h"', 3.4019391052900155e-06], ['tmake_file="t-openbsd', 3.4019391052900155e-06], ['m68k/t-openbsd"', 3.4019391052900155e-06], ['fixed...', 3.4019391052900155e-06], ['m68k-*-uclinux*)', 3.4019391052900155e-06], ['m68k/ColdFire', 3.4019391052900155e-06], ['uClinux', 3.4019391052900155e-06], ['uClibc,', 3.4019391052900155e-06], ['GNU/Linux-style', 3.4019391052900155e-06], ['flat.h', 3.4019391052900155e-06], ['m68k/uclinux.h', 3.4019391052900155e-06], ['m68k/uclinux.opt"', 3.4019391052900155e-06], ['m68k/t-uclinux', 3.4019391052900155e-06], ['m68k-*-linux*)', 3.4019391052900155e-06], ["m68k's", 3.4019391052900155e-06], ['aka', 3.4019391052900155e-06], ['6.', 3.4019391052900155e-06], ['with_arch=${with_arch:-m68k}', 3.4019391052900155e-06], ['m68k/ieee.opt"', 3.4019391052900155e-06], ['m68k/t-linux', 3.4019391052900155e-06], ['m68k-*-rtems*)', 3.4019391052900155e-06], ['m68k/t-crtstuff', 3.4019391052900155e-06], ['m68k/t-rtems', 3.4019391052900155e-06], ['m68k/m68020-elf.h', 3.4019391052900155e-06], ['m68k/rtemself.h', 3.4019391052900155e-06], ['mcore-*-elf)', 3.4019391052900155e-06], ['mcore/mcore-elf.h"', 3.4019391052900155e-06], ['tmake_file=mcore/t-mcore', 3.4019391052900155e-06], ['inhibit_libc=true', 3.4019391052900155e-06], ['microblaze*-linux*)', 3.4019391052900155e-06], ['microblaze/linux.h"', 3.4019391052900155e-06], ['microblaze/t-microblaze-linux"', 3.4019391052900155e-06], ['microblaze*-*-rtems*)', 3.4019391052900155e-06], ['dbxelf.h"', 3.4019391052900155e-06], ['microblaze/rtems.h', 3.4019391052900155e-06], ['microblaze/t-rtems"', 3.4019391052900155e-06], ['microblaze*-*-elf)', 3.4019391052900155e-06], ['riscv*-*-linux*)', 3.4019391052900155e-06], ['riscv/linux.h"', 3.4019391052900155e-06], ['riscv/t-linux-multilib"', 3.4019391052900155e-06], ['riscv/t-riscv', 3.4019391052900155e-06], ['riscv/t-linux"', 3.4019391052900155e-06], ['riscv*-*-elf*', 3.4019391052900155e-06], ['riscv*-*-rtems*)', 3.4019391052900155e-06], ['riscv/elf.h"', 3.4019391052900155e-06], ['riscv/rtems.h"', 3.4019391052900155e-06], ['riscv/t-rtems"', 3.4019391052900155e-06], ['riscv/t-elf-multilib"', 3.4019391052900155e-06], ['riscv*-*-freebsd*)', 3.4019391052900155e-06], ['riscv/freebsd.h"', 3.4019391052900155e-06], ['mips*-*-netbsd*)', 3.4019391052900155e-06], ['NetBSD/mips,', 3.4019391052900155e-06], ['target_cpu_default="MASK_ABICALLS"', 3.4019391052900155e-06], ['mips/netbsd.h"', 3.4019391052900155e-06], ['mips*-img-linux*)', 3.4019391052900155e-06], ['mips/t-img-linux"', 3.4019391052900155e-06], ['mips*-mti-linux*)', 3.4019391052900155e-06], ['mips/t-mti-linux"', 3.4019391052900155e-06], ['MIPS,', 3.4019391052900155e-06], ['mips/linux-common.h"', 3.4019391052900155e-06], ['default_mips_arch=mips32r6', 3.4019391052900155e-06], ['default_mips_arch=mips32r2', 3.4019391052900155e-06], ['default_mips_arch=mips32', 3.4019391052900155e-06], ['mips64el-st-linux-gnu)', 3.4019391052900155e-06], ['mips/st.h"', 3.4019391052900155e-06], ['mips/t-st"', 3.4019391052900155e-06], ['mips64octeon*-*-linux*)', 3.4019391052900155e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"octeon\\\\\\""', 3.4019391052900155e-06], ['target_cpu_default=MASK_SOFT_FLOAT_ABI', 3.4019391052900155e-06], ['mipsisa64r6*-*-linux*)', 3.4019391052900155e-06], ['default_mips_arch=mips64r6', 3.4019391052900155e-06], ['mipsisa64r2*-*-linux*)', 3.4019391052900155e-06], ['default_mips_arch=mips64r2', 3.4019391052900155e-06], ['mips64*-*-linux*', 3.4019391052900155e-06], ['mipsisa64*-*-linux*)', 3.4019391052900155e-06], ['x$enable_mips_multilibs', 3.4019391052900155e-06], ['mips/t-linux64"', 3.4019391052900155e-06], ['mips*-mti-elf*)', 3.4019391052900155e-06], ['tmake_file="mips/t-mti-elf"', 3.4019391052900155e-06], ['mips*-img-elf*)', 3.4019391052900155e-06], ['tmake_file="mips/t-img-elf"', 3.4019391052900155e-06], ['mips*-sde-elf*)', 3.4019391052900155e-06], ['mips/sde.h"', 3.4019391052900155e-06], ['tmake_file="mips/t-sde"', 3.4019391052900155e-06], ['mips/sde.opt"', 3.4019391052900155e-06], ['"${with_newlib}"', 3.4019391052900155e-06], ['libgloss.', 3.4019391052900155e-06], ['MIPS', 3.4019391052900155e-06], ['toolkit', 3.4019391052900155e-06], ['mips/sdemtk.h"', 3.4019391052900155e-06], ['mips/t-sdemtk"', 3.4019391052900155e-06], ['mipssde)', 3.4019391052900155e-06], ["thread_file='mipssde'", 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=37', 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=33', 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=32', 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=69', 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=65', 3.4019391052900155e-06], ['tm_defines="MIPS_ISA_DEFAULT=64', 3.4019391052900155e-06], ['mipsisa32-*-elf*', 3.4019391052900155e-06], ['mipsisa32el-*-elf*', 3.4019391052900155e-06], ['mipsisa32r2-*-elf*', 3.4019391052900155e-06], ['mipsisa32r2el-*-elf*', 3.4019391052900155e-06], ['mipsisa32r6-*-elf*', 3.4019391052900155e-06], ['mipsisa32r6el-*-elf*', 3.4019391052900155e-06], ['mipsisa64-*-elf*', 3.4019391052900155e-06], ['mipsisa64el-*-elf*', 3.4019391052900155e-06], ['mipsisa64r2-*-elf*', 3.4019391052900155e-06], ['mipsisa64r2el-*-elf*', 3.4019391052900155e-06], ['mipsisa64r6-*-elf*', 3.4019391052900155e-06], ['mipsisa64r6el-*-elf*)', 3.4019391052900155e-06], ['tmake_file="mips/t-isa3264"', 3.4019391052900155e-06], ['mipsisa32*-*-elfoabi*)', 3.4019391052900155e-06], ['mipsisa64*-*-elfoabi*)', 3.4019391052900155e-06], ['mipsisa64sr71k-*-elf*)', 3.4019391052900155e-06], ['tmake_file=mips/t-sr71k', 3.4019391052900155e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"sr71000\\\\\\"', 3.4019391052900155e-06], ['mipsisa64sb1-*-elf*', 3.4019391052900155e-06], ['mipsisa64sb1el-*-elf*)', 3.4019391052900155e-06], ['tmake_file="mips/t-elf', 3.4019391052900155e-06], ['mips/t-sb1"', 3.4019391052900155e-06], ['MIPS_CPU_STRING_DEFAULT=\\\\\\"sb1\\\\\\"', 3.4019391052900155e-06], ['mips-*-elf*', 3.4019391052900155e-06], ['mipsel-*-elf*', 3.4019391052900155e-06], ['mipsr5900-*-elf*', 3.4019391052900155e-06], ['mipsr5900el-*-elf*)', 3.4019391052900155e-06], ['mips64r5900-*-elf*', 3.4019391052900155e-06], ['mips64r5900el-*-elf*)', 3.4019391052900155e-06], ['mips/n32-elf.h"', 3.4019391052900155e-06], ['mips64-*-elf*', 3.4019391052900155e-06], ['mips64el-*-elf*)', 3.4019391052900155e-06], ['mips64vr-*-elf*', 3.4019391052900155e-06], ['mips64vrel-*-elf*)', 3.4019391052900155e-06], ['mips/vr.h', 3.4019391052900155e-06], ['tmake_file=mips/t-vr', 3.4019391052900155e-06], ['mips64orion-*-elf*', 3.4019391052900155e-06], ['mips64orionel-*-elf*)', 3.4019391052900155e-06], ['mips/elforion.h', 3.4019391052900155e-06], ['mips*-*-rtems*)', 3.4019391052900155e-06], ['mips/rtems.h', 3.4019391052900155e-06], ['mips/t-elf', 3.4019391052900155e-06], ['mips/t-rtems"', 3.4019391052900155e-06], ['mips-wrs-vxworks)', 3.4019391052900155e-06], ['mips/vxworks.h"', 3.4019391052900155e-06], ['mips/t-vxworks"', 3.4019391052900155e-06], ['mipstx39-*-elf*', 3.4019391052900155e-06], ['mipstx39el-*-elf*)', 3.4019391052900155e-06], ['mips/r3900.h', 3.4019391052900155e-06], ['tmake_file="mips/t-r3900"', 3.4019391052900155e-06], ['mmix-knuth-mmixware)', 3.4019391052900155e-06], ['mn10300-*-*)', 3.4019391052900155e-06], ['msp430*-*-*)', 3.4019391052900155e-06], ['c_target_objs="msp430-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="msp430-c.o"', 3.4019391052900155e-06], ['msp430/t-msp430"', 3.4019391052900155e-06], ['extra_gcc_objs="driver-msp430.o"', 3.4019391052900155e-06], ['tm_defines="${tm_defines}"', 3.4019391052900155e-06], ['nds32le*-*-*)', 3.4019391052900155e-06], ['nds32be-*-*)', 3.4019391052900155e-06], ['target_cpu_default="${target_cpu_default}|MASK_BIG_ENDIAN"', 3.4019391052900155e-06], ['nds32/elf.h', 3.4019391052900155e-06], ['tmake_file="nds32/t-nds32', 3.4019391052900155e-06], ['nds32/t-elf"', 3.4019391052900155e-06], ['nds32/linux.h', 3.4019391052900155e-06], ['nds32/t-nds32', 3.4019391052900155e-06], ['nds32/t-linux"', 3.4019391052900155e-06], ['--enable-default-relax', 3.4019391052900155e-06], ['x${enable_default_relax}', 3.4019391052900155e-06], ['TARGET_DEFAULT_RELAX=1"', 3.4019391052900155e-06], ['--with-ext-dsp', 3.4019391052900155e-06], ['x${with_ext_dsp}', 3.4019391052900155e-06], ['TARGET_DEFAULT_EXT_DSP=1"', 3.4019391052900155e-06], ['nios2/t-nios2"', 3.4019391052900155e-06], ['nios2-*-linux*)', 3.4019391052900155e-06], ['nios2/linux.h', 3.4019391052900155e-06], ['nios2-*-elf*)', 3.4019391052900155e-06], ['nios2/elf.h"', 3.4019391052900155e-06], ['nios2/elf.opt"', 3.4019391052900155e-06], ['nios2-*-rtems*)', 3.4019391052900155e-06], ['nios2/rtems.h', 3.4019391052900155e-06], ['t-rtems', 3.4019391052900155e-06], ['nios2/t-rtems"', 3.4019391052900155e-06], ['nvptx-*)', 3.4019391052900155e-06], ['tmake_file="nvptx/t-nvptx"', 3.4019391052900155e-06], ['nvptx/offload.h"', 3.4019391052900155e-06], ['or1k/t-or1k"', 3.4019391052900155e-06], ['--with-multilib-list=...', 3.4019391052900155e-06], ['or1k_multilibs="${with_multilib_list}"', 3.4019391052900155e-06], ['"$or1k_multilibs"', 3.4019391052900155e-06], ['or1k_multilibs="mcmov,msoft-mul,msoft-div"', 3.4019391052900155e-06], ['or1k_multilibs=`echo', 3.4019391052900155e-06], ['$or1k_multilibs', 3.4019391052900155e-06], ['or1k_multilib', 3.4019391052900155e-06], ['${or1k_multilibs};', 3.4019391052900155e-06], ['${or1k_multilib}', 3.4019391052900155e-06], ['mcmov', 3.4019391052900155e-06], ['msext', 3.4019391052900155e-06], ['msfimm', 3.4019391052900155e-06], ['mhard-div', 3.4019391052900155e-06], ['mhard-mul', 3.4019391052900155e-06], ['msoft-div', 3.4019391052900155e-06], ['msoft-mul', 3.4019391052900155e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG},${or1k_multilib}"', 3.4019391052900155e-06], ['or1k*-*-linux*)', 3.4019391052900155e-06], ['or1k/linux.h"', 3.4019391052900155e-06], ['or1k*-*-elf*)', 3.4019391052900155e-06], ['or1k/elf.h"', 3.4019391052900155e-06], ['or1k/elf.opt"', 3.4019391052900155e-06], ['or1k*-*-rtems*)', 3.4019391052900155e-06], ['or1k/rtems.h', 3.4019391052900155e-06], ['or1k/t-rtems"', 3.4019391052900155e-06], ['pdp11-*-*)', 3.4019391052900155e-06], ['contributed', 3.4019391052900155e-06], ['#powerpc-*-openbsd*)', 3.4019391052900155e-06], ['rs6000/t-fprules"', 3.4019391052900155e-06], ['powerpc-*-darwin*)', 3.4019391052900155e-06], ['rs6000/darwin.opt"', 3.4019391052900155e-06], ['*-darwin1[0-9]*', 3.4019391052900155e-06], ['*-darwin[8-9]*)', 3.4019391052900155e-06], ['rs6000/t-darwin8"', 3.4019391052900155e-06], ['rs6000/darwin8.h"', 3.4019391052900155e-06], ['*-darwin7*)', 3.4019391052900155e-06], ['rs6000/darwin7.h"', 3.4019391052900155e-06], ['*-darwin[0-6]*)', 3.4019391052900155e-06], ['powerpc64-*-darwin*)', 3.4019391052900155e-06], ['${cpu_type}/darwin.opt"', 3.4019391052900155e-06], ['${cpu_type}/darwin8.h', 3.4019391052900155e-06], ['powerpc*-*-freebsd*)', 3.4019391052900155e-06], ['${tmake_file}', 3.4019391052900155e-06], ['rs6000/freebsd64.h"', 3.4019391052900155e-06], ['rs6000/t-freebsd64"', 3.4019391052900155e-06], ['rs6000/freebsd.h"', 3.4019391052900155e-06], ['powerpc-*-netbsd*)', 3.4019391052900155e-06], ['rs6000/netbsd.h"', 3.4019391052900155e-06], ['rs6000/t-netbsd"', 3.4019391052900155e-06], ['powerpc-*-eabisimaltivec*)', 3.4019391052900155e-06], ['rs6000/eabisim.h', 3.4019391052900155e-06], ['powerpc-*-eabisim*)', 3.4019391052900155e-06], ['powerpc-*-elf*)', 3.4019391052900155e-06], ['powerpc-*-eabialtivec*)', 3.4019391052900155e-06], ['powerpc-*-eabi*)', 3.4019391052900155e-06], ['powerpc-*-rtems*)', 3.4019391052900155e-06], ['rs6000/rtems.h', 3.4019391052900155e-06], ['rs6000/t-rtems', 3.4019391052900155e-06], ['powerpc*-*-linux*)', 3.4019391052900155e-06], ['rs6000-linux.o"', 3.4019391052900155e-06], ['${target}:${with_cpu}', 3.4019391052900155e-06], ['powerpc64*:', 3.4019391052900155e-06], ['powerpc64*:native)', 3.4019391052900155e-06], ['maybe_biarch=${cpu_is_64bit}', 3.4019391052900155e-06], ['*powerpc64*)', 3.4019391052900155e-06], ['all)', 3.4019391052900155e-06], ['${target}:${enable_targets}:${maybe_biarch}', 3.4019391052900155e-06], ['powerpc64-*', 3.4019391052900155e-06], ['powerpc-*:*:yes', 3.4019391052900155e-06], ['*:*powerpc64-*:yes', 3.4019391052900155e-06], ['*:all:yes', 3.4019391052900155e-06], ['powerpc64le*:*powerpcle*', 3.4019391052900155e-06], ['powerpc64le*:*powerpc-*', 3.4019391052900155e-06], ['powerpcle-*:*powerpc64le*:yes)', 3.4019391052900155e-06], ['x$cpu_is_64bit', 3.4019391052900155e-06], ['rs6000/default64.h"', 3.4019391052900155e-06], ['rs6000/t-linux64"', 3.4019391052900155e-06], ['rs6000/t-linux64le"', 3.4019391052900155e-06], ['*powerpc64-*', 3.4019391052900155e-06], ['*powerpc-*)', 3.4019391052900155e-06], ['rs6000/t-linux64lebe"', 3.4019391052900155e-06], ['*powerpc64le-*', 3.4019391052900155e-06], ['*powerpcle-*)', 3.4019391052900155e-06], ['rs6000/t-linux64bele"', 3.4019391052900155e-06], ['rs6000/linux.h', 3.4019391052900155e-06], ['powerpc*-*-linux*ppc476*)', 3.4019391052900155e-06], ['rs6000/476.h"', 3.4019391052900155e-06], ['rs6000/476.opt"', 3.4019391052900155e-06], ['powerpc*-*-linux*altivec*)', 3.4019391052900155e-06], ['rs6000/linuxaltivec.h"', 3.4019391052900155e-06], ['*-linux*-musl*)', 3.4019391052900155e-06], ['enable_secureplt=yes', 3.4019391052900155e-06], ['x${enable_secureplt}', 3.4019391052900155e-06], ['tm_file="rs6000/secureplt.h', 3.4019391052900155e-06], ['powerpc-wrs-vxworks*)', 3.4019391052900155e-06], ['rs6000/t-ppccomm', 3.4019391052900155e-06], ['rs6000/t-vxworks"', 3.4019391052900155e-06], ['extra_headers=ppc-asm.h', 3.4019391052900155e-06], ['*-vxworksmils*)', 3.4019391052900155e-06], ['rs6000/vxworksmils.h"', 3.4019391052900155e-06], ['rs6000/t-vxworksmils"', 3.4019391052900155e-06], ['rs6000/vxworksae.h"', 3.4019391052900155e-06], ['rs6000/t-vxworksae"', 3.4019391052900155e-06], ['*-vxworks*)', 3.4019391052900155e-06], ['rs6000/vxworks.h"', 3.4019391052900155e-06], ['powerpc-*-lynxos*)', 3.4019391052900155e-06], ['rs6000/lynx.h', 3.4019391052900155e-06], ['tmake_file="t-lynx', 3.4019391052900155e-06], ['rs6000/t-lynx"', 3.4019391052900155e-06], ['powerpcle-*-elf*)', 3.4019391052900155e-06], ['powerpcle-*-eabisim*)', 3.4019391052900155e-06], ['powerpcle-*-eabi*)', 3.4019391052900155e-06], ['rs6000-ibm-aix6.*', 3.4019391052900155e-06], ['powerpc-ibm-aix6.*)', 3.4019391052900155e-06], ['rs6000/aix61.h', 3.4019391052900155e-06], ['rs6000-ibm-aix7.1.*', 3.4019391052900155e-06], ['powerpc-ibm-aix7.1.*)', 3.4019391052900155e-06], ['rs6000/aix71.h', 3.4019391052900155e-06], ['rs6000-ibm-aix[789].*', 3.4019391052900155e-06], ['powerpc-ibm-aix[789].*)', 3.4019391052900155e-06], ['rs6000/aix72.h', 3.4019391052900155e-06], ['rl78-*-elf*)', 3.4019391052900155e-06], ['c_target_objs="rl78-c.o"', 3.4019391052900155e-06], ['cxx_target_objs="rl78-c.o"', 3.4019391052900155e-06], ['rl78/t-rl78"', 3.4019391052900155e-06], ['rx-*-elf*)', 3.4019391052900155e-06], ['rx/t-rx"', 3.4019391052900155e-06], ['s390-*-linux*)', 3.4019391052900155e-06], ['tm_file="s390/s390.h', 3.4019391052900155e-06], ['s390/t-linux64"', 3.4019391052900155e-06], ['s390x-*-linux*)', 3.4019391052900155e-06], ['tm_p_file="linux-protos.h', 3.4019391052900155e-06], ['s390/s390-protos.h"', 3.4019391052900155e-06], ['s390/t-linux64', 3.4019391052900155e-06], ['s390x-ibm-tpf*)', 3.4019391052900155e-06], ['s390/tpf.h"', 3.4019391052900155e-06], ['tm_p_file=s390/s390-protos.h', 3.4019391052900155e-06], ["thread_file='tpf'", 3.4019391052900155e-06], ['s390/tpf.opt"', 3.4019391052900155e-06], ['sh-*-elf*', 3.4019391052900155e-06], ['sh[12346l]*-*-elf*', 3.4019391052900155e-06], ['sh-*-linux*', 3.4019391052900155e-06], ['sh[2346lbe]*-*-linux*', 3.4019391052900155e-06], ['sh-*-netbsdelf*', 3.4019391052900155e-06], ['shl*-*-netbsdelf*)', 3.4019391052900155e-06], ['sh/t-elf"', 3.4019391052900155e-06], ['sh[1234]*be-*-*', 3.4019391052900155e-06], ['sh[1234]*eb-*-*)', 3.4019391052900155e-06], ['shbe-*-*', 3.4019391052900155e-06], ['sheb-*-*)', 3.4019391052900155e-06], ['sh[1234]l*', 3.4019391052900155e-06], ['sh[34]*-*-linux*)', 3.4019391052900155e-06], ['shl*', 3.4019391052900155e-06], ['sh*-*-linux*', 3.4019391052900155e-06], ['sh-superh-elf)', 3.4019391052900155e-06], ['with_endian=little,big', 3.4019391052900155e-06], ['sh[1234]*-*-*)', 3.4019391052900155e-06], ['TM_ENDIAN_CONFIG', 3.4019391052900155e-06], ['multilibs.', 3.4019391052900155e-06], ['word:', 3.4019391052900155e-06], ['secondary', 3.4019391052900155e-06], ['(optional).', 3.4019391052900155e-06], ['big)', 3.4019391052900155e-06], ['TM_ENDIAN_CONFIG=mb', 3.4019391052900155e-06], ['little)', 3.4019391052900155e-06], ['TM_ENDIAN_CONFIG=ml', 3.4019391052900155e-06], ['big,little)', 3.4019391052900155e-06], ['TM_ENDIAN_CONFIG="mb', 3.4019391052900155e-06], ['ml"', 3.4019391052900155e-06], ['little,big)', 3.4019391052900155e-06], ['TM_ENDIAN_CONFIG="ml', 3.4019391052900155e-06], ['mb"', 3.4019391052900155e-06], ['little*)', 3.4019391052900155e-06], ['tm_file="sh/little.h', 3.4019391052900155e-06], ['sh/elf.h"', 3.4019391052900155e-06], ['sh/t-linux"', 3.4019391052900155e-06], ['x$enable_fdpic', 3.4019391052900155e-06], ['FDPIC_DEFAULT=1"', 3.4019391052900155e-06], ['sh/linux.h"', 3.4019391052900155e-06], ['sh/netbsd-elf.h"', 3.4019391052900155e-06], ['sh*-superh-elf)', 3.4019391052900155e-06], ['with_libgloss=yes', 3.4019391052900155e-06], ['sh/superh.h"', 3.4019391052900155e-06], ['sh/superh.opt"', 3.4019391052900155e-06], ['x$with_newlib', 3.4019391052900155e-06], ['*-*-netbsd)', 3.4019391052900155e-06], ['el/eb', 3.4019391052900155e-06], ['suffixes', 3.4019391052900155e-06], ['sh[23]e', 3.4019391052900155e-06], ["'s/e[lb]-/-/'`", 3.4019391052900155e-06], ['sh4a_single_only*)', 3.4019391052900155e-06], ['sh_cpu_target=sh4a-single-only', 3.4019391052900155e-06], ['sh4a_single*)', 3.4019391052900155e-06], ['sh_cpu_target=sh4a-single', 3.4019391052900155e-06], ['sh4a_nofpu*)', 3.4019391052900155e-06], ['sh4al)', 3.4019391052900155e-06], ['sh_cpu_target=sh4al', 3.4019391052900155e-06], ['sh4a*)', 3.4019391052900155e-06], ['sh_cpu_target=sh4a', 3.4019391052900155e-06], ['sh4_single_only*)', 3.4019391052900155e-06], ['sh_cpu_target=sh4-single-only', 3.4019391052900155e-06], ['sh4_single*)', 3.4019391052900155e-06], ['sh_cpu_target=sh4-single', 3.4019391052900155e-06], ['sh4_nofpu*)', 3.4019391052900155e-06], ['sh4*', 3.4019391052900155e-06], ['sh_cpu_target=sh4', 3.4019391052900155e-06], ['sh3e*)', 3.4019391052900155e-06], ['sh_cpu_target=sh3e', 3.4019391052900155e-06], ['sh*-*-netbsd*', 3.4019391052900155e-06], ['sh2a_single_only*)', 3.4019391052900155e-06], ['sh_cpu_target=sh2a-single-only', 3.4019391052900155e-06], ['sh2a_single*)', 3.4019391052900155e-06], ['sh_cpu_target=sh2a-single', 3.4019391052900155e-06], ['sh2a_nofpu*)', 3.4019391052900155e-06], ['sh_cpu_target=sh2a', 3.4019391052900155e-06], ['sh2e*)', 3.4019391052900155e-06], ['sh_cpu_target=sh2e', 3.4019391052900155e-06], ['sh_cpu_target=sh1', 3.4019391052900155e-06], ['${sh_cpu_target}', 3.4019391052900155e-06], ['sh4a*', 3.4019391052900155e-06], ['sh4*)', 3.4019391052900155e-06], ['$target:', 3.4019391052900155e-06], ['STRICT_NOFPU=1"', 3.4019391052900155e-06], ['sh_cpu_default="`echo', 3.4019391052900155e-06], ['$with_cpu|sed', 3.4019391052900155e-06], ['s/^m/sh/|tr', 3.4019391052900155e-06], ['A-Z_', 3.4019391052900155e-06], ['a-z-`"', 3.4019391052900155e-06], ['sh2a-single-only', 3.4019391052900155e-06], ['sh2a-single', 3.4019391052900155e-06], ['sh2a-nofpu', 3.4019391052900155e-06], ['sh2a', 3.4019391052900155e-06], ['sh4a-single-only', 3.4019391052900155e-06], ['sh4a-single', 3.4019391052900155e-06], ['sh4a-nofpu', 3.4019391052900155e-06], ['sh4a', 3.4019391052900155e-06], ['sh4-single-only', 3.4019391052900155e-06], ['sh4-single', 3.4019391052900155e-06], ['sh4-nofpu', 3.4019391052900155e-06], ['sh4', 3.4019391052900155e-06], ['sh4-300', 3.4019391052900155e-06], ['sh3e', 3.4019391052900155e-06], ['sh3', 3.4019391052900155e-06], ['sh2e', 3.4019391052900155e-06], ['sh2', 3.4019391052900155e-06], ['sh_cpu_default=${sh_cpu_target}', 3.4019391052900155e-06], ['"with_cpu=$with_cpu', 3.4019391052900155e-06], ['supported";', 3.4019391052900155e-06], ['sh_multilibs=${with_multilib_list}', 3.4019391052900155e-06], ['"$sh_multilibs"', 3.4019391052900155e-06], ['"default"', 3.4019391052900155e-06], ['sh[1234]*)', 3.4019391052900155e-06], ['sh_multilibs=${sh_cpu_target}', 3.4019391052900155e-06], ['sh_multilibs=m4,m4-single,m4-single-only,m4-nofpu', 3.4019391052900155e-06], ['sh_multilibs=m1,m2,m2a,m3e,m4', 3.4019391052900155e-06], ['sh_multilibs=m3,m3e,m4', 3.4019391052900155e-06], ['sh_multilibs=m1,m2,m2e,m4,m4-single,m4-single-only,m2a,m2a-single', 3.4019391052900155e-06], ['sh_multilibs="`echo', 3.4019391052900155e-06], ['$sh_multilibs|sed', 3.4019391052900155e-06], ['s/m4/sh4-nofpu/', 3.4019391052900155e-06], ['s/,m4-[^,]*//g', 3.4019391052900155e-06], ['s/,m[23]e//', 3.4019391052900155e-06], ['s/m2a,m2a-single/m2a-nofpu/', 3.4019391052900155e-06], ['s/m5-..m....,//g`"', 3.4019391052900155e-06], ['target_cpu_default=SELECT_`echo', 3.4019391052900155e-06], ['${sh_cpu_default}|tr', 3.4019391052900155e-06], ['ABCDEFGHIJKLMNOPQRSTUVWXYZ_`', 3.4019391052900155e-06], ["tm_defines=${tm_defines}'", 3.4019391052900155e-06], ['SH_MULTILIB_CPU_DEFAULT=\\"\'`echo', 3.4019391052900155e-06], ['$sh_cpu_default|sed', 3.4019391052900155e-06], ['s/sh/m/`\'\\"\'', 3.4019391052900155e-06], ['sh_multilibs=`echo', 3.4019391052900155e-06], ['$sh_multilibs', 3.4019391052900155e-06], ["/g'", 3.4019391052900155e-06], ["'s/^[Ss][Hh]/m/'", 3.4019391052900155e-06], ["'s/", 3.4019391052900155e-06], ['[Ss][Hh]/', 3.4019391052900155e-06], ["m/g'", 3.4019391052900155e-06], ['abcdefghijklmnopqrstuvwxyz-`', 3.4019391052900155e-06], ['sh_multilib', 3.4019391052900155e-06], ['${sh_multilibs};', 3.4019391052900155e-06], ['${sh_multilib}', 3.4019391052900155e-06], ['m4-300', 3.4019391052900155e-06], ['|\\', 3.4019391052900155e-06], ['m4al', 3.4019391052900155e-06], ['TM_MULTILIB_CONFIG', 3.4019391052900155e-06], ['non-endian', 3.4019391052900155e-06], ['MULTIILIB_OPTIONS', 3.4019391052900155e-06], ['TM_MULTILIB_CONFIG="${TM_MULTILIB_CONFIG}/${sh_multilib}"', 3.4019391052900155e-06], ['\\!*)', 3.4019391052900155e-06], ['TM_MULTILIB_EXCEPTIONS_CONFIG', 3.4019391052900155e-06], ['MULTILIB_EXCEPTIONS', 3.4019391052900155e-06], ['TM_MULTILIB_EXCEPTIONS_CONFIG="${TM_MULTILIB_EXCEPTIONS_CONFIG}', 3.4019391052900155e-06], ['\'s/^!//\'`"', 3.4019391052900155e-06], ['"with_multilib_list=${sh_multilib}', 3.4019391052900155e-06], ["'s:^/::'`", 3.4019391052900155e-06], ['x${enable_incomplete_targets}', 3.4019391052900155e-06], ['SUPPORT_SH1=1', 3.4019391052900155e-06], ['SUPPORT_SH2E=1', 3.4019391052900155e-06], ['SUPPORT_SH4=1', 3.4019391052900155e-06], ['SUPPORT_SH4_SINGLE=1', 3.4019391052900155e-06], ['SUPPORT_SH2A=1', 3.4019391052900155e-06], ['SUPPORT_SH2A_SINGLE=1"', 3.4019391052900155e-06], ['t-sysroot-suffix"', 3.4019391052900155e-06], ['sh-*-rtems*)', 3.4019391052900155e-06], ['sh/t-rtems"', 3.4019391052900155e-06], ['sh/rtemself.h', 3.4019391052900155e-06], ['sh-wrs-vxworks)', 3.4019391052900155e-06], ['sh/t-vxworks"', 3.4019391052900155e-06], ['sh/vxworks.h"', 3.4019391052900155e-06], ['sparc-*-elf*)', 3.4019391052900155e-06], ['sparc/sp-elf.h"', 3.4019391052900155e-06], ['sparc/t-elf"', 3.4019391052900155e-06], ['sparc-*-rtems*)', 3.4019391052900155e-06], ['sparc/sp-elf.h', 3.4019391052900155e-06], ['sparc/t-rtems"', 3.4019391052900155e-06], ['sparc-*-linux*)', 3.4019391052900155e-06], ['sparc/linux64.h"', 3.4019391052900155e-06], ['sparc/linux.h"', 3.4019391052900155e-06], ['sparc/t-linux"', 3.4019391052900155e-06], ['sparc-*-netbsdelf*)', 3.4019391052900155e-06], ['sparc*-*-solaris2*)', 3.4019391052900155e-06], ['${sol2_tm_file}', 3.4019391052900155e-06], ['sparc64-*-*', 3.4019391052900155e-06], ['sparcv9-*-*)', 3.4019391052900155e-06], ['tm_file="sparc/default64.h', 3.4019391052900155e-06], ['sparc/t-sol2"', 3.4019391052900155e-06], ['sparc-wrs-vxworks)', 3.4019391052900155e-06], ['sparc/vxworks.h"', 3.4019391052900155e-06], ['sparc/t-vxworks"', 3.4019391052900155e-06], ['sparc64-*-elf*)', 3.4019391052900155e-06], ['sparc64-*-rtems*)', 3.4019391052900155e-06], ['sparc/sp64-elf.h', 3.4019391052900155e-06], ['sparc/t-rtems-64"', 3.4019391052900155e-06], ['sparc64-*-linux*)', 3.4019391052900155e-06], ['sparc/default64.h', 3.4019391052900155e-06], ['sparc/linux64.h', 3.4019391052900155e-06], ['sparc64-*-freebsd*|ultrasparc-*-freebsd*)', 3.4019391052900155e-06], ['sparc/freebsd.h"', 3.4019391052900155e-06], ['xultrasparc)', 3.4019391052900155e-06], ['"$with_cpu', 3.4019391052900155e-06], ['freebsd', 3.4019391052900155e-06], ['target";', 3.4019391052900155e-06], ['sparc64-*-netbsd*)', 3.4019391052900155e-06], ['sparc/t-netbsd64"', 3.4019391052900155e-06], ['sparc64-*-openbsd*)', 3.4019391052900155e-06], ['tm_file="sparc/openbsd1-64.h', 3.4019391052900155e-06], ['sparc/openbsd64.h"', 3.4019391052900155e-06], ['spu-*-elf*)', 3.4019391052900155e-06], ['spu/spu-elf.h', 3.4019391052900155e-06], ['spu/spu.h', 3.4019391052900155e-06], ['tmake_file="spu/t-spu-elf"', 3.4019391052900155e-06], ['extra_headers="spu_intrinsics.h', 3.4019391052900155e-06], ['spu_internals.h', 3.4019391052900155e-06], ['vmx2spu.h', 3.4019391052900155e-06], ['spu_mfcio.h', 3.4019391052900155e-06], ['spu_cache.h"', 3.4019391052900155e-06], ['extra_modes=spu/spu-modes.def', 3.4019391052900155e-06], ['tic6x-*-elf)', 3.4019391052900155e-06], ['c6x/elf.h"', 3.4019391052900155e-06], ['tmake_file="c6x/t-c6x', 3.4019391052900155e-06], ['c6x/t-c6x-elf"', 3.4019391052900155e-06], ['tic6x-*-uclinux)', 3.4019391052900155e-06], ['c6x/uclinux-elf.h"', 3.4019391052900155e-06], ['tmake_file="t-sysroot-suffix', 3.4019391052900155e-06], ['c6x/t-c6x', 3.4019391052900155e-06], ['c6x/t-c6x-elf', 3.4019391052900155e-06], ['c6x/t-c6x-uclinux"', 3.4019391052900155e-06], ['tilegx*-*-linux*)', 3.4019391052900155e-06], ['tilegx/linux.h', 3.4019391052900155e-06], ['tilegx/t-tilegx"', 3.4019391052900155e-06], ['tilegxbe-*)', 3.4019391052900155e-06], ['tilepro*-*-linux*)', 3.4019391052900155e-06], ['tilepro/linux.h', 3.4019391052900155e-06], ['tilepro/t-tilepro"', 3.4019391052900155e-06], ['v850-*-rtems*)', 3.4019391052900155e-06], ['v850/rtems.h', 3.4019391052900155e-06], ['v850/t-v850"', 3.4019391052900155e-06], ['v850/t-rtems"', 3.4019391052900155e-06], ['v850e3v5-*-*)', 3.4019391052900155e-06], ['target_cpu_default="TARGET_CPU_v850e3v5"', 3.4019391052900155e-06], ['v850e2v3-*-*)', 3.4019391052900155e-06], ['target_cpu_default="TARGET_CPU_v850e2v3"', 3.4019391052900155e-06], ['v850e2-*-*)', 3.4019391052900155e-06], ['target_cpu_default="TARGET_CPU_v850e2"', 3.4019391052900155e-06], ['v850e1-*-*', 3.4019391052900155e-06], ['v850es-*-*)', 3.4019391052900155e-06], ['target_cpu_default="TARGET_CPU_v850e1"', 3.4019391052900155e-06], ['v850e-*-*)', 3.4019391052900155e-06], ['target_cpu_default="TARGET_CPU_v850e"', 3.4019391052900155e-06], ['v850-*-*)', 3.4019391052900155e-06], ['vax-*-linux*)', 3.4019391052900155e-06], ['vax/linux.h"', 3.4019391052900155e-06], ['vax-*-netbsdelf*)', 3.4019391052900155e-06], ['vax/netbsd-elf.h"', 3.4019391052900155e-06], ['vax-*-openbsd*)', 3.4019391052900155e-06], ['tm_file="vax/vax.h', 3.4019391052900155e-06], ['vax/openbsd1.h', 3.4019391052900155e-06], ['vax/openbsd.h"', 3.4019391052900155e-06], ['visium-*-elf*)', 3.4019391052900155e-06], ['visium/elf.h', 3.4019391052900155e-06], ['tmake_file="visium/t-visium', 3.4019391052900155e-06], ['visium/t-crtstuff"', 3.4019391052900155e-06], ['xstormy16-*-elf)', 3.4019391052900155e-06], ['historical', 3.4019391052900155e-06], ["'x'.", 3.4019391052900155e-06], ['tm_p_file=stormy16/stormy16-protos.h', 3.4019391052900155e-06], ['tm_d_file="elfos.h', 3.4019391052900155e-06], ['md_file=stormy16/stormy16.md', 3.4019391052900155e-06], ['out_file=stormy16/stormy16.c', 3.4019391052900155e-06], ['extra_options=stormy16/stormy16.opt', 3.4019391052900155e-06], ['tmake_file="stormy16/t-stormy16"', 3.4019391052900155e-06], ['xtensa*-*-elf*)', 3.4019391052900155e-06], ['xtensa/elf.h"', 3.4019391052900155e-06], ['xtensa/elf.opt"', 3.4019391052900155e-06], ['xtensa*-*-linux*)', 3.4019391052900155e-06], ['xtensa/linux.h"', 3.4019391052900155e-06], ['xtensa*-*-uclinux*)', 3.4019391052900155e-06], ['xtensa/uclinux.h"', 3.4019391052900155e-06], ['xtensa/uclinux.opt"', 3.4019391052900155e-06], ['tm_file="mn10300/mn10300.h', 3.4019391052900155e-06], ['mn10300/linux.h"', 3.4019391052900155e-06], ['m32c-*-rtems*)', 3.4019391052900155e-06], ['m32c/rtems.h', 3.4019391052900155e-06], ['m32c-*-elf*)', 3.4019391052900155e-06], ['i386/t-pmm_malloc', 3.4019391052900155e-06], ['i386/t-gmm_malloc', 3.4019391052900155e-06], ['${cpu_type}/option-defaults.h"', 3.4019391052900155e-06], ['non-glibc', 3.4019391052900155e-06], ['*-linux-musl*)', 3.4019391052900155e-06], ['t-musl"', 3.4019391052900155e-06], ['*-linux-uclibc*)', 3.4019391052900155e-06], ['t-uclibc"', 3.4019391052900155e-06], ['existence', 3.4019391052900155e-06], ['resolver', 3.4019391052900155e-06], ['*-*-linux*android*|*-*-linux*uclibc*|*-*-linux*musl*)', 3.4019391052900155e-06], ['aarch64*-*', 3.4019391052900155e-06], ['arm*-*', 3.4019391052900155e-06], ['i[34567]86-*', 3.4019391052900155e-06], ['powerpc*-*', 3.4019391052900155e-06], ['s390*-*', 3.4019391052900155e-06], ['sparc*-*', 3.4019391052900155e-06], ['default_gnu_indirect_function=yes', 3.4019391052900155e-06], ['mkoffload', 3.4019391052900155e-06], ['tool', 3.4019391052900155e-06], ['*-intelmic-*', 3.4019391052900155e-06], ['*-intelmicemul-*)', 3.4019391052900155e-06], ['i386/t-intelmic"', 3.4019391052900155e-06], ['i386/intelmic-offload.h"', 3.4019391052900155e-06], ['"$target_has_targetcm"', 3.4019391052900155e-06], ['c_target_objs="$c_target_objs', 3.4019391052900155e-06], ['cxx_target_objs="$cxx_target_objs', 3.4019391052900155e-06], ['"$common_out_file"', 3.4019391052900155e-06], ['"$target_has_targetm_common"', 3.4019391052900155e-06], ['common_out_file="$cpu_type/$cpu_type-common.c"', 3.4019391052900155e-06], ['common_out_file="default-common.c"', 3.4019391052900155e-06], ['"$target_has_targetdm"', 3.4019391052900155e-06], ['d_target_objs="$d_target_objs', 3.4019391052900155e-06], ['default-d.o"', 3.4019391052900155e-06], ['"--with-cpu', 3.4019391052900155e-06], ['${target_noncanonical}.', 3.4019391052900155e-06], ['scheduler', 3.4019391052900155e-06], ['arch=', 3.4019391052900155e-06], ['cpu=', 3.4019391052900155e-06], ['arch_without_sse2=no', 3.4019391052900155e-06], ['arch_without_64bit=no', 3.4019391052900155e-06], ['i386-*-freebsd*)', 3.4019391052900155e-06], ['i386-*-netbsd*)', 3.4019391052900155e-06], ['i386-*-*)', 3.4019391052900155e-06], ['cpu=i386', 3.4019391052900155e-06], ['i486-*-*)', 3.4019391052900155e-06], ['cpu=i486', 3.4019391052900155e-06], ['i586-*-*)', 3.4019391052900155e-06], ['k6_2-*)', 3.4019391052900155e-06], ['arch=k6-2', 3.4019391052900155e-06], ['cpu=k6-2', 3.4019391052900155e-06], ['k6_3-*)', 3.4019391052900155e-06], ['arch=k6-3', 3.4019391052900155e-06], ['cpu=k6-3', 3.4019391052900155e-06], ['k6-*)', 3.4019391052900155e-06], ['arch=k6', 3.4019391052900155e-06], ['cpu=k6', 3.4019391052900155e-06], ['pentium_mmx-*|winchip_c6-*|winchip2-*|c3-*)', 3.4019391052900155e-06], ['arch=pentium-mmx', 3.4019391052900155e-06], ['cpu=pentium-mmx', 3.4019391052900155e-06], ['arch=pentium', 3.4019391052900155e-06], ['cpu=pentium', 3.4019391052900155e-06], ['i686-*-*', 3.4019391052900155e-06], ['i786-*-*)', 3.4019391052900155e-06], ['k8-*|opteron-*|athlon64-*|athlon_fx-*)', 3.4019391052900155e-06], ['athlon_xp-*|athlon_mp-*|athlon_4-*)', 3.4019391052900155e-06], ['arch=athlon-4', 3.4019391052900155e-06], ['cpu=athlon-4', 3.4019391052900155e-06], ['athlon_tbird-*|athlon-*)', 3.4019391052900155e-06], ['arch=athlon', 3.4019391052900155e-06], ['cpu=athlon', 3.4019391052900155e-06], ['geode-*)', 3.4019391052900155e-06], ['arch=geode', 3.4019391052900155e-06], ['cpu=geode', 3.4019391052900155e-06], ['pentium2-*)', 3.4019391052900155e-06], ['arch=pentium2', 3.4019391052900155e-06], ['cpu=pentium2', 3.4019391052900155e-06], ['pentium3-*|pentium3m-*)', 3.4019391052900155e-06], ['arch=pentium3', 3.4019391052900155e-06], ['cpu=pentium3', 3.4019391052900155e-06], ['pentium4-*|pentium4m-*)', 3.4019391052900155e-06], ['arch=pentium4', 3.4019391052900155e-06], ['cpu=pentium4', 3.4019391052900155e-06], ['prescott-*)', 3.4019391052900155e-06], ['arch=prescott', 3.4019391052900155e-06], ['cpu=prescott', 3.4019391052900155e-06], ['corei7_avx-*)', 3.4019391052900155e-06], ['arch=corei7-avx', 3.4019391052900155e-06], ['cpu=corei7-avx', 3.4019391052900155e-06], ['pentium_m-*)', 3.4019391052900155e-06], ['arch=pentium-m', 3.4019391052900155e-06], ['cpu=pentium-m', 3.4019391052900155e-06], ['pentiumpro-*)', 3.4019391052900155e-06], ['cpu=pentiumpro', 3.4019391052900155e-06], ['k8-*|opteron-*|athlon_64-*)', 3.4019391052900155e-06], ['arch=x86-64', 3.4019391052900155e-06], ['with_cpu.', 3.4019391052900155e-06], ['with_cpu=lakemont', 3.4019391052900155e-06], ['with_cpu=$cpu', 3.4019391052900155e-06], ['alphaev6[78]*-*-*)', 3.4019391052900155e-06], ['with_cpu=ev67', 3.4019391052900155e-06], ['alphaev6*-*-*)', 3.4019391052900155e-06], ['with_cpu=ev6', 3.4019391052900155e-06], ['alphapca56*-*-*)', 3.4019391052900155e-06], ['with_cpu=pca56', 3.4019391052900155e-06], ['alphaev56*-*-*)', 3.4019391052900155e-06], ['with_cpu=ev56', 3.4019391052900155e-06], ['alphaev5*-*-*)', 3.4019391052900155e-06], ['with_cpu=ev5', 3.4019391052900155e-06], ['frv400-*-*linux*)', 3.4019391052900155e-06], ['with_cpu=fr400', 3.4019391052900155e-06], ['frv550-*-*linux*)', 3.4019391052900155e-06], ['with_cpu=fr550', 3.4019391052900155e-06], ['with_cpu=${default_cf_cpu}', 3.4019391052900155e-06], ['"m68k")', 3.4019391052900155e-06], ['with_cpu=m${default_m68k_cpu}', 3.4019391052900155e-06], ['with_cpu=leon', 3.4019391052900155e-06], ['with_cpu=leon3', 3.4019391052900155e-06], ['*-leon[3-9]v7*)', 3.4019391052900155e-06], ['with_cpu=leon3v7', 3.4019391052900155e-06], ['with_cpu="`echo', 3.4019391052900155e-06], ['\'s/-.*$//\'`"', 3.4019391052900155e-06], ['with_cpu=gr5', 3.4019391052900155e-06], ['--with-cpu-32', 3.4019391052900155e-06], ['--with-cpu-64', 3.4019391052900155e-06], ['with_cpu_32=$with_cpu', 3.4019391052900155e-06], ['with_cpu_64=$with_cpu', 3.4019391052900155e-06], ['with_cpu=', 3.4019391052900155e-06], ['"--with-arch', 3.4019391052900155e-06], ['$with_arch', 3.4019391052900155e-06], ['with_arch.', 3.4019391052900155e-06], ['with_arch=lakemont', 3.4019391052900155e-06], ['--with-fpmath', 3.4019391052900155e-06], ['SSE2,', 3.4019391052900155e-06], ['Pentium', 3.4019391052900155e-06], ['$arch_without_sse2', 3.4019391052900155e-06], ['with_arch=pentium4', 3.4019391052900155e-06], ['with_arch=r5900', 3.4019391052900155e-06], ['mips*-*-vxworks)', 3.4019391052900155e-06], ['with_arch=mips2', 3.4019391052900155e-06], ['--with-arch-32', 3.4019391052900155e-06], ['--with-arch-64', 3.4019391052900155e-06], ['$arch_without_64bit', 3.4019391052900155e-06], ['yes;', 3.4019391052900155e-06], ['64bit.', 3.4019391052900155e-06], ['with_arch_64=$with_arch', 3.4019391052900155e-06], ['$arch_without_64bit$need_64bit_isa', 3.4019391052900155e-06], ['yesyes;', 3.4019391052900155e-06], ['ISA.', 3.4019391052900155e-06], ['--with-float.', 3.4019391052900155e-06], ['x$with_float', 3.4019391052900155e-06], ['comply', 3.4019391052900155e-06], ['754.', 3.4019391052900155e-06], ['with_float=soft', 3.4019391052900155e-06], ['--with-fpu.', 3.4019391052900155e-06], ['x$with_fpu', 3.4019391052900155e-06], ['FPU', 3.4019391052900155e-06], ['with_fpu=single', 3.4019391052900155e-06], ['--with-fpmath.', 3.4019391052900155e-06], ['${with_fpmath}', 3.4019391052900155e-06], ['avx)', 3.4019391052900155e-06], ['i386/avxmath.h"', 3.4019391052900155e-06], ['sse)', 3.4019391052900155e-06], ['i386/ssemath.h"', 3.4019391052900155e-06], ['--with-fpmath=$with_fpmath"', 3.4019391052900155e-06], ['"--with-fpmath', 3.4019391052900155e-06], ['$target."', 3.4019391052900155e-06], ['--with-schedule.', 3.4019391052900155e-06], ['x$with_schedule', 3.4019391052900155e-06], ['hppa1*)', 3.4019391052900155e-06], ['PA8000', 3.4019391052900155e-06], ['scheduling', 3.4019391052900155e-06], ['with_schedule=7100LC', 3.4019391052900155e-06], ['--with-llsc.', 3.4019391052900155e-06], ['x$with_llsc', 3.4019391052900155e-06], ['emulates', 3.4019391052900155e-06], ['LL', 3.4019391052900155e-06], ['SC', 3.4019391052900155e-06], ['with_llsc=yes', 3.4019391052900155e-06], ['LL(D)', 3.4019391052900155e-06], ['SC(D).', 3.4019391052900155e-06], ['with_llsc=no', 3.4019391052900155e-06], ['Validate', 3.4019391052900155e-06], ['supported_defaults;', 3.4019391052900155e-06], ['optional.', 3.4019391052900155e-06], ['supported_defaults.', 3.4019391052900155e-06], ['supported_defaults=', 3.4019391052900155e-06], ['arch"', 3.4019391052900155e-06], ['base_val=`echo', 3.4019391052900155e-06], ["'s/[a-z0-9.-]\\+//'`", 3.4019391052900155e-06], ['def=aarch64-arches.def', 3.4019391052900155e-06], ['pattern=AARCH64_ARCH', 3.4019391052900155e-06], ['def=aarch64-cores.def', 3.4019391052900155e-06], ['pattern=AARCH64_CORE', 3.4019391052900155e-06], ['ext_mask=AARCH64_CPU_DEFAULT_FLAGS', 3.4019391052900155e-06], ['aarch64-cores.def', 3.4019391052900155e-06], ['x"$base_val"', 3.4019391052900155e-06], ['ext_mask=`grep', 3.4019391052900155e-06], ["'s/)$//'", 3.4019391052900155e-06], ["'s/^.*,//'`", 3.4019391052900155e-06], ['x"$ext_val"', 3.4019391052900155e-06], ["'s/\\+//'`", 3.4019391052900155e-06], ['ext=`echo', 3.4019391052900155e-06], ['base_ext=`echo', 3.4019391052900155e-06], ["'s/^no//'`", 3.4019391052900155e-06], ['x"$base_ext"', 3.4019391052900155e-06], ['ext_canon=`grep', 3.4019391052900155e-06], ['ext_on=`grep', 3.4019391052900155e-06], ['ext_off=`grep', 3.4019391052900155e-06], ['$base_ext', 3.4019391052900155e-06], ['Adding', 3.4019391052900155e-06], ['("$ext_on"', 3.4019391052900155e-06], ['Removing', 3.4019391052900155e-06], ['~("$ext_off"', 3.4019391052900155e-06], ["'s/[a-z0-9]\\+//'`", 3.4019391052900155e-06], ['ext_mask="(("$ext_mask")', 3.4019391052900155e-06], ['6)"', 3.4019391052900155e-06], ['x"$base_id"', 3.4019391052900155e-06], ['target_cpu_cname="TARGET_CPU_$base_id', 3.4019391052900155e-06], ['$ext_mask"', 3.4019391052900155e-06], ['"$val"', 3.4019391052900155e-06], ['ev4', 3.4019391052900155e-06], ['ev45', 3.4019391052900155e-06], ['21064', 3.4019391052900155e-06], ['ev5', 3.4019391052900155e-06], ['21164', 3.4019391052900155e-06], ['ev56', 3.4019391052900155e-06], ['21164a', 3.4019391052900155e-06], ['pca56', 3.4019391052900155e-06], ['21164PC', 3.4019391052900155e-06], ['21164pc', 3.4019391052900155e-06], ['ev6', 3.4019391052900155e-06], ['21264', 3.4019391052900155e-06], ['ev67', 3.4019391052900155e-06], ['21264a)', 3.4019391052900155e-06], ['x"$with_cpu"', 3.4019391052900155e-06], ['"^ARC_CPU', 3.4019391052900155e-06], ['($with_cpu,"', 3.4019391052900155e-06], ['${srcdir}/config/arc/arc-cpus.def', 3.4019391052900155e-06], ['Ok', 3.4019391052900155e-06], ['float"', 3.4019391052900155e-06], ['tls"', 3.4019391052900155e-06], ['x"$val"', 3.4019391052900155e-06], ['cpu=`awk', 3.4019391052900155e-06], ['cmd="chk$which', 3.4019391052900155e-06], ['$val"', 3.4019391052900155e-06], ['"$cpu"', 3.4019391052900155e-06], ['new_val=$cpu', 3.4019391052900155e-06], ['"target_${which}_cname=$new_val"', 3.4019391052900155e-06], ['"For', 3.4019391052900155e-06], ['$new_val"', 3.4019391052900155e-06], ['softfp)', 3.4019391052900155e-06], ['--with-fpu', 3.4019391052900155e-06], ['FPUs', 3.4019391052900155e-06], ['x"$with_fpu"', 3.4019391052900155e-06], ['fpu=`awk', 3.4019391052900155e-06], ['cmd="chkfpu', 3.4019391052900155e-06], ['$with_fpu"', 3.4019391052900155e-06], ['"$fpu"', 3.4019391052900155e-06], ['"error"]', 3.4019391052900155e-06], ['apcs-gnu', 3.4019391052900155e-06], ['atpcs', 3.4019391052900155e-06], ['aapcs', 3.4019391052900155e-06], ['iwmmxt', 3.4019391052900155e-06], ['aapcs-linux', 3.4019391052900155e-06], ['"$with_mode"', 3.4019391052900155e-06], ['arm', 3.4019391052900155e-06], ['thumb', 3.4019391052900155e-06], ['--with-mode=$with_mode"', 3.4019391052900155e-06], ['"$with_tls"', 3.4019391052900155e-06], ['gnu2)', 3.4019391052900155e-06], ['--with-tls=$with_tls"', 3.4019391052900155e-06], ['\\"--with-arch\\"', 3.4019391052900155e-06], ['"x$with_tune"', 3.4019391052900155e-06], ['\\"--with-tune\\"', 3.4019391052900155e-06], ['ml=', 3.4019391052900155e-06], ['arm_multilibs=`echo', 3.4019391052900155e-06], ['$with_multilib_list', 3.4019391052900155e-06], ['"x${arm_multilibs}"', 3.4019391052900155e-06], ['xdefault', 3.4019391052900155e-06], ['arm_multilib', 3.4019391052900155e-06], ['${arm_multilibs};', 3.4019391052900155e-06], ['${arm_multilib}', 3.4019391052900155e-06], ['aprofile|rmprofile)', 3.4019391052900155e-06], ['tmake_profile_file="arm/t-multilib"', 3.4019391052900155e-06], ['@*)', 3.4019391052900155e-06], ['ml=`echo', 3.4019391052900155e-06], ['"X$arm_multilib"', 3.4019391052900155e-06], ["'1s,^X@,,'`", 3.4019391052900155e-06], ['"${srcdir}/config/arm/${ml}";', 3.4019391052900155e-06], ['arm/${ml}"', 3.4019391052900155e-06], ['${ml}', 3.4019391052900155e-06], ['${srcdir}/config/arm"', 3.4019391052900155e-06], ['--with-multilib-list=${with_multilib_list}', 3.4019391052900155e-06], ['"x${tmake_profile_file}"', 3.4019391052900155e-06], ['arm/t-aprofile', 3.4019391052900155e-06], ['arm/t-rmprofile', 3.4019391052900155e-06], ['designed', 3.4019391052900155e-06], ['with-cpu,', 3.4019391052900155e-06], ['with-arch,', 3.4019391052900155e-06], ['with-mode,', 3.4019391052900155e-06], ['with-fpu', 3.4019391052900155e-06], ['with-float', 3.4019391052900155e-06], ['"x$with_float"', 3.4019391052900155e-06], ['"x$with_fpu"', 3.4019391052900155e-06], ['"x$with_mode"', 3.4019391052900155e-06], ['--with-arch/cpu/fpu/float/mode', 3.4019391052900155e-06], ['--with-multilib-list=${with_multilib_list}"', 3.4019391052900155e-06], ['"x$ml"', 3.4019391052900155e-06], ['profiles', 3.4019391052900155e-06], ['ones"', 3.4019391052900155e-06], ['float-abi', 3.4019391052900155e-06], ['with_float="soft"', 3.4019391052900155e-06], ['${tmake_profile_file}"', 3.4019391052900155e-06], ['TM_MULTILIB_CONFIG="$with_multilib_list"', 3.4019391052900155e-06], ['target_cpu_cname=${target_cpu_cname:-arm7tdmi}', 3.4019391052900155e-06], ['with_cpu=${with_cpu:-$target_cpu_cname}', 3.4019391052900155e-06], ['fr*-*-*linux*)', 3.4019391052900155e-06], ['fr400)', 3.4019391052900155e-06], ['fr550)', 3.4019391052900155e-06], ['fido-*-*', 3.4019391052900155e-06], ['"m68k"|', 3.4019391052900155e-06], ['m68k_arch_family="$with_arch"', 3.4019391052900155e-06], ['"m68000"', 3.4019391052900155e-06], ['"m68010"', 3.4019391052900155e-06], ['"m68020"', 3.4019391052900155e-06], ['"m68030"', 3.4019391052900155e-06], ['"m68040"', 3.4019391052900155e-06], ['"m68060")', 3.4019391052900155e-06], ['m68k_cpu_ident=$with_cpu', 3.4019391052900155e-06], ['"m68020-40")', 3.4019391052900155e-06], ['M68K_DEFAULT_TUNE=u68020_40"', 3.4019391052900155e-06], ['"m68020-60")', 3.4019391052900155e-06], ['M68K_DEFAULT_TUNE=u68020_60"', 3.4019391052900155e-06], ['m68k_cpu_ident=`awk', 3.4019391052900155e-06], ['arg="\\"$with_cpu\\""', 3.4019391052900155e-06], ["'BEGIN", 3.4019391052900155e-06], ['FS="[', 3.4019391052900155e-06], ['\\t]*[,()][', 3.4019391052900155e-06], ['\\t]*"', 3.4019391052900155e-06], ['$1', 3.4019391052900155e-06], ['"M68K_DEVICE"', 3.4019391052900155e-06], ['$2', 3.4019391052900155e-06], ['$3', 3.4019391052900155e-06], ["}'", 3.4019391052900155e-06], ['${srcdir}/config/m68k/m68k-devices.def`', 3.4019391052900155e-06], ['x"$m68k_cpu_ident"', 3.4019391052900155e-06], ['with_cpu="mcpu=$with_cpu"', 3.4019391052900155e-06], ['amdgcn-*-*)', 3.4019391052900155e-06], ['carrizo', 3.4019391052900155e-06], ['fiji', 3.4019391052900155e-06], ['gfx900', 3.4019391052900155e-06], ['with_arch=fiji', 3.4019391052900155e-06], ['schedule"', 3.4019391052900155e-06], ['1.1', 3.4019391052900155e-06], ['2.0)', 3.4019391052900155e-06], ['"$with_schedule"', 3.4019391052900155e-06], ['700', 3.4019391052900155e-06], ['7100', 3.4019391052900155e-06], ['7100LC', 3.4019391052900155e-06], ['7200', 3.4019391052900155e-06], ['7300', 3.4019391052900155e-06], ['8000)', 3.4019391052900155e-06], ['--with-schedule=$with_schedule."', 3.4019391052900155e-06], ['*_32)', 3.4019391052900155e-06], ['"CPU', 3.4019391052900155e-06], ['--with-$which=$val', 3.4019391052900155e-06], ['mode."', 3.4019391052900155e-06], ['x${val}', 3.4019391052900155e-06], ['--with-cpu=/--with-tune=', 3.4019391052900155e-06], ['xcpu*|xtune*)', 3.4019391052900155e-06], ['riscv*-*-*)', 3.4019391052900155e-06], ['riscv_attribute"', 3.4019391052900155e-06], ['riscv-*', 3.4019391052900155e-06], ['riscv32*)', 3.4019391052900155e-06], ['xlen=32', 3.4019391052900155e-06], ['riscv64*)', 3.4019391052900155e-06], ['xlen=64', 3.4019391052900155e-06], ['RISC-V', 3.4019391052900155e-06], ['${target}"', 3.4019391052900155e-06], ['1>&2;', 3.4019391052900155e-06], ['"${with_riscv_attribute}"', 3.4019391052900155e-06], ['""|default)', 3.4019391052900155e-06], ['riscv*-*-elf*)', 3.4019391052900155e-06], ['"--with-riscv-attribute=${with_riscv_attribute}', 3.4019391052900155e-06], ['yes,', 3.4019391052900155e-06], ['default."', 3.4019391052900155e-06], ['--with-arch,', 3.4019391052900155e-06], ['--target,', 3.4019391052900155e-06], ['--with-abi.', 3.4019391052900155e-06], ['rv32e*', 3.4019391052900155e-06], ['rv32i*', 3.4019391052900155e-06], ['rv32g*', 3.4019391052900155e-06], ['rv64i*', 3.4019391052900155e-06], ['XLEN,', 3.4019391052900155e-06], ['GC.', 3.4019391052900155e-06], ['ilp32e)', 3.4019391052900155e-06], ['with_arch="rv32e"', 3.4019391052900155e-06], ['with_arch="rv32gc"', 3.4019391052900155e-06], ['with_arch="rv64gc"', 3.4019391052900155e-06], ['with_arch="rv${xlen}gc"', 3.4019391052900155e-06], ['"--with-arch=${with_arch}', 3.4019391052900155e-06], ['rv32e,', 3.4019391052900155e-06], ['rv32i,', 3.4019391052900155e-06], ['rv32g,', 3.4019391052900155e-06], ['rv64i,', 3.4019391052900155e-06], ['rv64g."', 3.4019391052900155e-06], ['ISA,', 3.4019391052900155e-06], ['preferring', 3.4019391052900155e-06], ['soft-float', 3.4019391052900155e-06], ['present.', 3.4019391052900155e-06], ['ilp32e', 3.4019391052900155e-06], ['rv32*d*', 3.4019391052900155e-06], ['rv32g*)', 3.4019391052900155e-06], ['with_abi=ilp32d', 3.4019391052900155e-06], ['rv32e*)', 3.4019391052900155e-06], ['with_abi=ilp32e', 3.4019391052900155e-06], ['rv32*)', 3.4019391052900155e-06], ['with_abi=ilp32', 3.4019391052900155e-06], ['rv64*d*', 3.4019391052900155e-06], ['with_abi=lp64d', 3.4019391052900155e-06], ['rv64*)', 3.4019391052900155e-06], ['with_abi=lp64', 3.4019391052900155e-06], ['"${with_abi},${with_arch}"', 3.4019391052900155e-06], ['ilp32,rv32*', 3.4019391052900155e-06], ['ilp32e,rv32e*', 3.4019391052900155e-06], ['ilp32f,rv32*f*', 3.4019391052900155e-06], ['ilp32f,rv32g*', 3.4019391052900155e-06], ['ilp32d,rv32*d*', 3.4019391052900155e-06], ['ilp32d,rv32g*', 3.4019391052900155e-06], ['lp64,rv64*', 3.4019391052900155e-06], ['lp64f,rv64*f*', 3.4019391052900155e-06], ['lp64f,rv64g*', 3.4019391052900155e-06], ['lp64d,rv64*d*', 3.4019391052900155e-06], ['lp64d,rv64g*)', 3.4019391052900155e-06], ['${with_arch}"', 3.4019391052900155e-06], ['--with-multilib-list.', 3.4019391052900155e-06], ['"x${with_multilib_list}"', 3.4019391052900155e-06], ['xdefault;', 3.4019391052900155e-06], ['riscv/withmultilib.h"', 3.4019391052900155e-06], ['riscv/t-withmultilib"', 3.4019391052900155e-06], ['${with_multilib_list}', 3.4019391052900155e-06], ['lp64d', 3.4019391052900155e-06], ['TM_MULTILIB_CONFIG="${with_arch},${with_multilib_list}"', 3.4019391052900155e-06], ['multilib.', 3.4019391052900155e-06], ['rv32gc)', 3.4019391052900155e-06], ['TARGET_MLIB_ARCH=1"', 3.4019391052900155e-06], ['rv64gc)', 3.4019391052900155e-06], ['TARGET_MLIB_ARCH=2"', 3.4019391052900155e-06], ['--with-multilib-list"', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=1"', 3.4019391052900155e-06], ['ilp32f)', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=2"', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=3"', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=4"', 3.4019391052900155e-06], ['lp64f)', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=5"', 3.4019391052900155e-06], ['TARGET_MLIB_ABI=6"', 3.4019391052900155e-06], ['--with-multilib"', 3.4019391052900155e-06], ['${with_fpu}', 3.4019391052900155e-06], ['--with-fpu=$with_fpu"', 3.4019391052900155e-06], ['${with_nan}', 3.4019391052900155e-06], ['2008', 3.4019391052900155e-06], ['legacy)', 3.4019391052900155e-06], ['--with-nan=$with_nan"', 3.4019391052900155e-06], ['${with_fp_32}', 3.4019391052900155e-06], ['--with-fp-32=$with_fp_32"', 3.4019391052900155e-06], ['${with_odd_spreg_32}', 3.4019391052900155e-06], ['with_odd_spreg_32="odd-spreg"', 3.4019391052900155e-06], ['with_odd_spreg_32="no-odd-spreg"', 3.4019391052900155e-06], ['odd-spreg-32', 3.4019391052900155e-06], ['--with-odd-spreg-32=$with_odd_spreg_32"', 3.4019391052900155e-06], ['o64', 3.4019391052900155e-06], ['n32', 3.4019391052900155e-06], ['${with_divide}', 3.4019391052900155e-06], ['breaks', 3.4019391052900155e-06], ['traps)', 3.4019391052900155e-06], ['--with-divide=$with_divide"', 3.4019391052900155e-06], ['${with_llsc}', 3.4019391052900155e-06], ['with_llsc=llsc', 3.4019391052900155e-06], ['with_llsc="no-llsc"', 3.4019391052900155e-06], ['--with-llsc"', 3.4019391052900155e-06], ['${with_mips_plt}', 3.4019391052900155e-06], ['with_mips_plt=plt', 3.4019391052900155e-06], ['with_mips_plt=no-plt', 3.4019391052900155e-06], ['--with-mips-plt', 3.4019391052900155e-06], ['$with_mips_plt"', 3.4019391052900155e-06], ['${with_synci}', 3.4019391052900155e-06], ['with_synci=synci', 3.4019391052900155e-06], ['with_synci=no-synci', 3.4019391052900155e-06], ['--with-synci"', 3.4019391052900155e-06], ['${with_lxc1_sxc1}', 3.4019391052900155e-06], ['with_lxc1_sxc1=lxc1-sxc1', 3.4019391052900155e-06], ['with_lxc1_sxc1=no-lxc1-sxc1', 3.4019391052900155e-06], ['--with-lxc1-sxc1"', 3.4019391052900155e-06], ['${with_madd4}', 3.4019391052900155e-06], ['with_madd4=madd4', 3.4019391052900155e-06], ['with_madd4=no-madd4', 3.4019391052900155e-06], ['madd4', 3.4019391052900155e-06], ['--with-madd4"', 3.4019391052900155e-06], ['nds32_lib', 3.4019391052900155e-06], ['fpu_config"', 3.4019391052900155e-06], ['v3m)', 3.4019391052900155e-06], ['v3f)', 3.4019391052900155e-06], ['TARGET_ARCH_DEFAULT=1"', 3.4019391052900155e-06], ['TARGET_ARCH_DEFAULT=2"', 3.4019391052900155e-06], ['--with-arch=$with_arch,', 3.4019391052900155e-06], ['v3m', 3.4019391052900155e-06], ['v3s"', 3.4019391052900155e-06], ['"${with_cpu}"', 3.4019391052900155e-06], ['with_cpu=n9', 3.4019391052900155e-06], ['|n8', 3.4019391052900155e-06], ['n15)', 3.4019391052900155e-06], ['n8', 3.4019391052900155e-06], ['n15"', 3.4019391052900155e-06], ['--with-nds32-lib', 3.4019391052900155e-06], ['"${with_nds32_lib}"', 3.4019391052900155e-06], ['with_nds32_lib=ulibc', 3.4019391052900155e-06], ['with_nds32_lib=glibc', 3.4019391052900155e-06], ['with_nds32_lib=newlib', 3.4019391052900155e-06], ['newlib)', 3.4019391052900155e-06], ['mculib)', 3.4019391052900155e-06], ['arch=v3f', 3.4019391052900155e-06], ['arch=v3s', 3.4019391052900155e-06], ['toolchain,', 3.4019391052900155e-06], ['-fno-math-errno', 3.4019391052900155e-06], ['TARGET_DEFAULT_NO_MATH_ERRNO=1"', 3.4019391052900155e-06], ['uclibc)', 3.4019391052900155e-06], ['--with-nds32-lib=$with_nds32_lib,', 3.4019391052900155e-06], ['uclibc"', 3.4019391052900155e-06], ['--with-float', 3.4019391052900155e-06], ['"${with_float}"', 3.4019391052900155e-06], ['--with-float=$with_float,', 3.4019391052900155e-06], ['hard"', 3.4019391052900155e-06], ['--with-config-fpu', 3.4019391052900155e-06], ['"${with_config_fpu}"', 3.4019391052900155e-06], ['--with-config-fpu=$with_config_fpu,', 3.4019391052900155e-06], ['7"', 3.4019391052900155e-06], ['nios2*-*-*)', 3.4019391052900155e-06], ['r2)', 3.4019391052900155e-06], ['advance_toolchain"', 3.4019391052900155e-06], ['default32', 3.4019391052900155e-06], ['default64)', 3.4019391052900155e-06], ['tune)', 3.4019391052900155e-06], ['"$val', 3.4019391052900155e-06], ['--with-tune."', 3.4019391052900155e-06], ['with_which="with_$which"', 3.4019391052900155e-06], ['$with_which=', 3.4019391052900155e-06], ['405cr)', 3.4019391052900155e-06], ['CONFIG_PPC405CR"', 3.4019391052900155e-06], ['"with_$which=405"', 3.4019391052900155e-06], ['power[3456789]', 3.4019391052900155e-06], ['power5+', 3.4019391052900155e-06], ['power6x', 3.4019391052900155e-06], ['powerpc', 3.4019391052900155e-06], ['powerpc64', 3.4019391052900155e-06], ['powerpc64le', 3.4019391052900155e-06], ['rs64', 3.4019391052900155e-06], ['401', 3.4019391052900155e-06], ['403', 3.4019391052900155e-06], ['405', 3.4019391052900155e-06], ['405fp', 3.4019391052900155e-06], ['440', 3.4019391052900155e-06], ['440fp', 3.4019391052900155e-06], ['464', 3.4019391052900155e-06], ['464fp', 3.4019391052900155e-06], ['476', 3.4019391052900155e-06], ['476fp', 3.4019391052900155e-06], ['505', 3.4019391052900155e-06], ['601', 3.4019391052900155e-06], ['602', 3.4019391052900155e-06], ['603', 3.4019391052900155e-06], ['603e', 3.4019391052900155e-06], ['ec603e', 3.4019391052900155e-06], ['604', 3.4019391052900155e-06], ['604e', 3.4019391052900155e-06], ['620', 3.4019391052900155e-06], ['630', 3.4019391052900155e-06], ['740', 3.4019391052900155e-06], ['750', 3.4019391052900155e-06], ['7400', 3.4019391052900155e-06], ['7450', 3.4019391052900155e-06], ['e300c[23]', 3.4019391052900155e-06], ['854[08]', 3.4019391052900155e-06], ['e500mc', 3.4019391052900155e-06], ['e500mc64', 3.4019391052900155e-06], ['e5500', 3.4019391052900155e-06], ['e6500', 3.4019391052900155e-06], ['titan', 3.4019391052900155e-06], ['801', 3.4019391052900155e-06], ['821', 3.4019391052900155e-06], ['823', 3.4019391052900155e-06], ['860', 3.4019391052900155e-06], ['970', 3.4019391052900155e-06], ['G4', 3.4019391052900155e-06], ['G5', 3.4019391052900155e-06], ['cell)', 3.4019391052900155e-06], ['elfv1', 3.4019391052900155e-06], ['elfv2', 3.4019391052900155e-06], ['"x$with_advance_toolchain"', 3.4019391052900155e-06], ['"/opt/$with_advance_toolchain/."', 3.4019391052900155e-06], ['"/opt/$with_advance_toolchain/bin/."', 3.4019391052900155e-06], ['"/opt/$with_advance_toolchain/include/.";', 3.4019391052900155e-06], ['./advance-toolchain.h"', 3.4019391052900155e-06], ['(at="/opt/$with_advance_toolchain"', 3.4019391052900155e-06], ['"/*', 3.4019391052900155e-06], ['Advance', 3.4019391052900155e-06], ['Toolchain', 3.4019391052900155e-06], ['$at', 3.4019391052900155e-06], ['*/"', 3.4019391052900155e-06], ['$at/lib"', 3.4019391052900155e-06], ['$at/lib\\""', 3.4019391052900155e-06], ['$at/lib64"', 3.4019391052900155e-06], ['$at/lib64\\""', 3.4019391052900155e-06], ['"\\"--enable-new-dtags\\""', 3.4019391052900155e-06], ['DYNAMIC_LINKER_PREFIX"', 3.4019391052900155e-06], ['DYNAMIC_LINKER_PREFIX', 3.4019391052900155e-06], ['\\"$at\\""', 3.4019391052900155e-06], ['MD_EXEC_PREFIX"', 3.4019391052900155e-06], ['MD_EXEC_PREFIX', 3.4019391052900155e-06], ['\\"$at/bin/\\""', 3.4019391052900155e-06], ['MD_STARTFILE_PREFIX"', 3.4019391052900155e-06], ['MD_STARTFILE_PREFIX', 3.4019391052900155e-06], ['\\"$at/lib/\\"")', 3.4019391052900155e-06], ['advance-toolchain.h', 3.4019391052900155e-06], ['advance-toolchain', 3.4019391052900155e-06], ['$with_advance_toolchain"', 3.4019391052900155e-06], ['xieee;', 3.4019391052900155e-06], ['TARGET_IEEEQUAD_DEFAULT=1"', 3.4019391052900155e-06], ['xibm;', 3.4019391052900155e-06], ['TARGET_IEEEQUAD_DEFAULT=0"', 3.4019391052900155e-06], ['z900', 3.4019391052900155e-06], ['z990', 3.4019391052900155e-06], ['z9-109', 3.4019391052900155e-06], ['z9-ec', 3.4019391052900155e-06], ['z10', 3.4019391052900155e-06], ['z196', 3.4019391052900155e-06], ['zEC12', 3.4019391052900155e-06], ['z13', 3.4019391052900155e-06], ['z14', 3.4019391052900155e-06], ['arch5', 3.4019391052900155e-06], ['arch6', 3.4019391052900155e-06], ['arch7', 3.4019391052900155e-06], ['arch8', 3.4019391052900155e-06], ['arch9', 3.4019391052900155e-06], ['arch10', 3.4019391052900155e-06], ['arch11', 3.4019391052900155e-06], ['arch12)', 3.4019391052900155e-06], ['${with_mode}', 3.4019391052900155e-06], ['esa', 3.4019391052900155e-06], ['zarch)', 3.4019391052900155e-06], ['--with-mode=$with_mode."', 3.4019391052900155e-06], ['"`echo', 3.4019391052900155e-06], ['s/sh/m/`"', 3.4019391052900155e-06], ['m4al)', 3.4019391052900155e-06], ['"m1', 3.4019391052900155e-06], ['m4-nofpu"', 3.4019391052900155e-06], ['"m4a', 3.4019391052900155e-06], ['m4al"', 3.4019391052900155e-06], ['"m2a', 3.4019391052900155e-06], ['m2a-nofpu"', 3.4019391052900155e-06], ['sparc', 3.4019391052900155e-06], ['sparcv9', 3.4019391052900155e-06], ['sparc64', 3.4019391052900155e-06], ['v7', 3.4019391052900155e-06], ['cypress', 3.4019391052900155e-06], ['v8', 3.4019391052900155e-06], ['supersparc', 3.4019391052900155e-06], ['hypersparc', 3.4019391052900155e-06], ['leon', 3.4019391052900155e-06], ['leon3', 3.4019391052900155e-06], ['leon3v7', 3.4019391052900155e-06], ['sparclite', 3.4019391052900155e-06], ['f930', 3.4019391052900155e-06], ['f934', 3.4019391052900155e-06], ['sparclite86x', 3.4019391052900155e-06], ['sparclet', 3.4019391052900155e-06], ['tsc701', 3.4019391052900155e-06], ['v9', 3.4019391052900155e-06], ['ultrasparc', 3.4019391052900155e-06], ['ultrasparc3', 3.4019391052900155e-06], ['niagara', 3.4019391052900155e-06], ['niagara2', 3.4019391052900155e-06], ['niagara3', 3.4019391052900155e-06], ['niagara4', 3.4019391052900155e-06], ['niagara7', 3.4019391052900155e-06], ['m8)', 3.4019391052900155e-06], ['spu-*-*)', 3.4019391052900155e-06], ['cell', 3.4019391052900155e-06], ['celledp)', 3.4019391052900155e-06], ['c62x', 3.4019391052900155e-06], ['c64x', 3.4019391052900155e-06], ['c64x+', 3.4019391052900155e-06], ['c67x', 3.4019391052900155e-06], ['c67x+', 3.4019391052900155e-06], ['c674x)', 3.4019391052900155e-06], ['--with-arch=$with_arch."', 3.4019391052900155e-06], ['v850e', 3.4019391052900155e-06], ['v850e1', 3.4019391052900155e-06], ['v850e2', 3.4019391052900155e-06], ['v850es', 3.4019391052900155e-06], ['v850e2v3', 3.4019391052900155e-06], ['v850e3v5)', 3.4019391052900155e-06], ['gr5', 3.4019391052900155e-06], ['gr6)', 3.4019391052900155e-06], ['Targets', 3.4019391052900155e-06], ['vxworks-dummy.h', 3.4019391052900155e-06], ['TARGET_VXWORKS', 3.4019391052900155e-06], ['markers', 3.4019391052900155e-06], ['port,', 3.4019391052900155e-06], ['vxworks*.h', 3.4019391052900155e-06], ['7', 3.4019391052900155e-06], ['64).', 3.4019391052900155e-06], ['arm*-*-*', 3.4019391052900155e-06], ['mips*-*-*', 3.4019391052900155e-06], ['sh*-*-*', 3.4019391052900155e-06], ['sparc*-*-*', 3.4019391052900155e-06], ['tm_file="vxworks-dummy.h', 3.4019391052900155e-06], ['miscellaneous', 3.4019391052900155e-06], ['target_cpu_default2=', 3.4019391052900155e-06], ['x"$target_cpu_cname"', 3.4019391052900155e-06], ['target_cpu_default2=$target_cpu_cname', 3.4019391052900155e-06], ['"Don\'t', 3.4019391052900155e-06], ['target_cpu_default2="MASK_GAS"', 3.4019391052900155e-06], ['fido*-*-*', 3.4019391052900155e-06], ['target_cpu_default2=$m68k_cpu_ident', 3.4019391052900155e-06], ['tmake_file="m68k/t-opts', 3.4019391052900155e-06], ['x"$m68k_arch_family"', 3.4019391052900155e-06], ['tmake_file="m68k/t-$m68k_arch_family', 3.4019391052900155e-06], ['i[34567]86-*-darwin*', 3.4019391052900155e-06], ['cet.o"', 3.4019391052900155e-06], ['i386/t-linux', 3.4019391052900155e-06], ['i386/t-cet"', 3.4019391052900155e-06], ['i386/t-kfreebsd"', 3.4019391052900155e-06], ['i386/t-gnu"', 3.4019391052900155e-06], ['i[34567]86-*-msdosdjgpp*)', 3.4019391052900155e-06], ['i386/t-djgpp"', 3.4019391052900155e-06], ['i[34567]86-*-cygwin*', 3.4019391052900155e-06], ['i[34567]86-*-dragonfly*', 3.4019391052900155e-06], ['i[34567]86-*-freebsd*', 3.4019391052900155e-06], ['target_cpu_default2="MASK_SPLIT_ADDRESSES"', 3.4019391052900155e-06], ['mips*el-*-*)', 3.4019391052900155e-06], ['tm_defines="TARGET_ENDIAN_DEFAULT=0', 3.4019391052900155e-06], ['$tm_defines"', 3.4019391052900155e-06], ['default_mips_arch=$with_arch', 3.4019391052900155e-06], ['x$with_abi', 3.4019391052900155e-06], ['default_mips_abi=$with_abi', 3.4019391052900155e-06], ['${default_mips_arch}', 3.4019391052900155e-06], ['mips1)', 3.4019391052900155e-06], ['MIPS_ISA_DEFAULT=1"', 3.4019391052900155e-06], ['mips2)', 3.4019391052900155e-06], ['MIPS_ISA_DEFAULT=2"', 3.4019391052900155e-06], ['mips3)', 3.4019391052900155e-06], ['MIPS_ISA_DEFAULT=3"', 3.4019391052900155e-06], ['mips4)', 3.4019391052900155e-06], ['MIPS_ISA_DEFAULT=4"', 3.4019391052900155e-06], ['mips32)', 3.4019391052900155e-06], ['mips32r2)', 3.4019391052900155e-06], ['mips32r6)', 3.4019391052900155e-06], ['mips64)', 3.4019391052900155e-06], ['mips64r2)', 3.4019391052900155e-06], ['mips64r6)', 3.4019391052900155e-06], ['${default_mips_abi}', 3.4019391052900155e-06], ['o64)', 3.4019391052900155e-06], ['n32)', 3.4019391052900155e-06], ['MIPS_ABI_DEFAULT=ABI_64"', 3.4019391052900155e-06], ['tmake_file="mips/t-mips', 3.4019391052900155e-06], ['PowerPC', 3.4019391052900155e-06], ['cosmetic.', 3.4019391052900155e-06], ['out_file="${cpu_type}/${cpu_type}.c"', 3.4019391052900155e-06], ['${cpu_type}-d.o"', 3.4019391052900155e-06], ['tmake_file="${cpu_type}/t-${cpu_type}', 3.4019391052900155e-06], ['${tmake_file}"', 3.4019391052900155e-06], ['xsparc)', 3.4019391052900155e-06], ['with_cpu=v7', 3.4019391052900155e-06], ['xsparcv9', 3.4019391052900155e-06], ['xsparc64)', 3.4019391052900155e-06], ['x$with_tune', 3.4019391052900155e-06], ['with_tune=leon', 3.4019391052900155e-06], ['with_tune=leon3', 3.4019391052900155e-06], ['SPARC', 3.4019391052900155e-06], ['xv850e', 3.4019391052900155e-06], ['xv850e1', 3.4019391052900155e-06], ['xv850e2', 3.4019391052900155e-06], ['xv850e2v3', 3.4019391052900155e-06], ['xv850e3v5)', 3.4019391052900155e-06], ['xv850es)', 3.4019391052900155e-06], ['target_cpu_default2="TARGET_CPU_v850e1"', 3.4019391052900155e-06], ['t=', 3.4019391052900155e-06], ['all_defaults="abi', 3.4019391052900155e-06], ['tls', 3.4019391052900155e-06], ['$all_defaults', 3.4019391052900155e-06], ['"val=\\$with_"`echo', 3.4019391052900155e-06], ['s/-/_/g`', 3.4019391052900155e-06], ['-n', 3.4019391052900155e-06], ['"$val";', 3.4019391052900155e-06], ['$supported_defaults', 3.4019391052900155e-06], ['--with-$option."', 3.4019391052900155e-06], ['"Valid', 3.4019391052900155e-06], ['$supported_defaults"', 3.4019391052900155e-06], ['t="{', 3.4019391052900155e-06], ['t="${t},', 3.4019391052900155e-06], ['NULL}', 3.4019391052900155e-06], ['${t}', 3.4019391052900155e-06], ['"$target_cpu_default2"', 3.4019391052900155e-06], ['"$target_cpu_default"', 3.4019391052900155e-06], ['target_cpu_default="(${target_cpu_default}|${target_cpu_default2})"', 3.4019391052900155e-06], ['target_cpu_default=$target_cpu_default2', 3.4019391052900155e-06], ['extra_programs="mkoffload\\$(exeext)"', 3.4019391052900155e-06], ['brig-util.cc', 3.4019391052900155e-06], ['utility', 3.4019391052900155e-06], ['"stdint.h"', 3.4019391052900155e-06], ['group_variable_offset_index::has_variable', 3.4019391052900155e-06], ['group_variable_offset_index::add', 3.4019391052900155e-06], ['m_group_offsets[name]', 3.4019391052900155e-06], ['m_next_group_offset;', 3.4019391052900155e-06], ['group_variable_offset_index::segment_offset', 3.4019391052900155e-06], ['OPNUM', 3.4019391052900155e-06], ['OPCODE', 3.4019391052900155e-06], ['False', 3.4019391052900155e-06], ['input.', 3.4019391052900155e-06], ['reused', 3.4019391052900155e-06], ['Martin', 3.4019391052900155e-06], ["Jambor's", 3.4019391052900155e-06], ['opnum)', 3.4019391052900155e-06], ['(opcode)', 3.4019391052900155e-06], ['BRIG_OPCODE_SBR:', 3.4019391052900155e-06], ['BRIG_OPCODE_CBR:', 3.4019391052900155e-06], ['BRIG_OPCODE_ATOMICNORET:', 3.4019391052900155e-06], ['BRIG_OPCODE_SIGNALNORET:', 3.4019391052900155e-06], ['opnum', 3.4019391052900155e-06], ['~BRIG_TYPE_BASE_MASK;', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_32)', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_64)', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_128)', 3.4019391052900155e-06], ['BRIG_TYPE_U8X4:', 3.4019391052900155e-06], ['BRIG_TYPE_U16X2:', 3.4019391052900155e-06], ['BRIG_TYPE_S8X4:', 3.4019391052900155e-06], ['BRIG_TYPE_S16X2:', 3.4019391052900155e-06], ['BRIG_TYPE_F16X2:', 3.4019391052900155e-06], ['BRIG_TYPE_U8X8:', 3.4019391052900155e-06], ['BRIG_TYPE_U16X4:', 3.4019391052900155e-06], ['BRIG_TYPE_U32X2:', 3.4019391052900155e-06], ['BRIG_TYPE_S8X8:', 3.4019391052900155e-06], ['BRIG_TYPE_S16X4:', 3.4019391052900155e-06], ['BRIG_TYPE_S32X2:', 3.4019391052900155e-06], ['BRIG_TYPE_F16X4:', 3.4019391052900155e-06], ['BRIG_TYPE_F32X2:', 3.4019391052900155e-06], ['BRIG_TYPE_U8X16:', 3.4019391052900155e-06], ['BRIG_TYPE_U16X8:', 3.4019391052900155e-06], ['BRIG_TYPE_U32X4:', 3.4019391052900155e-06], ['BRIG_TYPE_U64X2:', 3.4019391052900155e-06], ['BRIG_TYPE_S8X16:', 3.4019391052900155e-06], ['BRIG_TYPE_S16X8:', 3.4019391052900155e-06], ['BRIG_TYPE_S32X4:', 3.4019391052900155e-06], ['BRIG_TYPE_S64X2:', 3.4019391052900155e-06], ['BRIG_TYPE_F16X8:', 3.4019391052900155e-06], ['BRIG_TYPE_F32X4:', 3.4019391052900155e-06], ['BRIG_TYPE_F64X2:', 3.4019391052900155e-06], ['("HMM', 3.4019391052900155e-06], ['%x\\n",', 3.4019391052900155e-06], ['borrowed', 3.4019391052900155e-06], ['ENDS.', 3.4019391052900155e-06], ['BrigUInt64', 3.4019391052900155e-06], ['&brig_type)', 3.4019391052900155e-06], ['(brig_type.hi)', 3.4019391052900155e-06], ['(brig_type.lo);', 3.4019391052900155e-06], ['*brig_reg)', 3.4019391052900155e-06], ['(brig_reg->regKind)', 3.4019391052900155e-06], ['gccbrig_reg_name', 3.4019391052900155e-06], ['(reg->regKind)', 3.4019391052900155e-06], ["'c';", 3.4019391052900155e-06], ["'d';", 3.4019391052900155e-06], ["'q';", 3.4019391052900155e-06], ['reg->regNum;', 3.4019391052900155e-06], ['gccbrig_type_name', 3.4019391052900155e-06], ['"u8";', 3.4019391052900155e-06], ['"u16";', 3.4019391052900155e-06], ['"u32";', 3.4019391052900155e-06], ['"u64";', 3.4019391052900155e-06], ['"s8";', 3.4019391052900155e-06], ['"s16";', 3.4019391052900155e-06], ['"s32";', 3.4019391052900155e-06], ['"s64";', 3.4019391052900155e-06], ['gccbrig_segment_name', 3.4019391052900155e-06], ['(BrigSegment8_t', 3.4019391052900155e-06], ['segment)', 3.4019391052900155e-06], ['BRIG_SEGMENT_GLOBAL)', 3.4019391052900155e-06], ['"global";', 3.4019391052900155e-06], ['"group";', 3.4019391052900155e-06], ['"private";', 3.4019391052900155e-06], ['gccbrig_is_float_type', 3.4019391052900155e-06], ['BRIG_TYPE_F64', 3.4019391052900155e-06], ['BRIG_TYPE_F16);', 3.4019391052900155e-06], ['tree_type)', 3.4019391052900155e-06], ['BRIG_TYPE_U8;', 3.4019391052900155e-06], ['BRIG_TYPE_U16;', 3.4019391052900155e-06], ['(tree_type);', 3.4019391052900155e-06], ['brig_element_type;', 3.4019391052900155e-06], ['(element_size)', 3.4019391052900155e-06], ['BRIG_TYPE_U8', 3.4019391052900155e-06], ['16:', 3.4019391052900155e-06], ['BRIG_TYPE_U16', 3.4019391052900155e-06], ['BRIG_TYPE_U32', 3.4019391052900155e-06], ['(tree_type)', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_32;', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_64;', 3.4019391052900155e-06], ['BRIG_TYPE_PACK_128;', 3.4019391052900155e-06], ['"bit', 3.4019391052900155e-06], ['level"', 3.4019391052900155e-06], ['semantical', 3.4019391052900155e-06], ['differences.', 3.4019391052900155e-06], ['opcode)', 3.4019391052900155e-06], ['BRIG_OPCODE_SHUFFLE', 3.4019391052900155e-06], ['BRIG_OPCODE_UNPACKHI', 3.4019391052900155e-06], ['BRIG_OPCODE_ST', 3.4019391052900155e-06], ['BRIG_OPCODE_PACK;', 3.4019391052900155e-06], ['treatment:', 3.4019391052900155e-06], ['__gccbrig_ptr_variable_name.', 3.4019391052900155e-06], ['definition)', 3.4019391052900155e-06], ['gccbrig_might_be_host_defined_var_p', 3.4019391052900155e-06], ['!is_definition', 3.4019391052900155e-06], ['brigVar->linkage', 3.4019391052900155e-06], ['BRIG_LINKAGE_PROGRAM', 3.4019391052900155e-06], ['(brigVar->allocation', 3.4019391052900155e-06], ['BRIG_ALLOCATION_PROGRAM', 3.4019391052900155e-06], ['brigVar->allocation', 3.4019391052900155e-06], ['BRIG_ALLOCATION_AGENT);', 3.4019391052900155e-06], ['HSA/BRIG', 3.4019391052900155e-06], ['(hsa_type_packed_p', 3.4019391052900155e-06], ['(brig_type))', 3.4019391052900155e-06], ['inner_brig_type', 3.4019391052900155e-06], ['(inner_brig_type', 3.4019391052900155e-06], ['(BRIG_TYPE_U16),', 3.4019391052900155e-06], ['inner_size', 3.4019391052900155e-06], ['inner_size;', 3.4019391052900155e-06], ['uint16_type_node;', 3.4019391052900155e-06], ['HSA,', 3.4019391052900155e-06], ['HSA).', 3.4019391052900155e-06], ['BRIG_TYPE_SAMP:', 3.4019391052900155e-06], ['BRIG_TYPE_ROIMG:', 3.4019391052900155e-06], ['BRIG_TYPE_WOIMG:', 3.4019391052900155e-06], ['BRIG_TYPE_RWIMG:', 3.4019391052900155e-06], ['images', 3.4019391052900155e-06], ['Images', 3.4019391052900155e-06], ['who', 3.4019391052900155e-06], ['initialized?', 3.4019391052900155e-06], ['void_ptr', 3.4019391052900155e-06], ['(void_type_node);', 3.4019391052900155e-06], ['void_ptr;', 3.4019391052900155e-06], ['qualifiers.', 3.4019391052900155e-06], ['tree_type;', 3.4019391052900155e-06], ['REG.', 3.4019391052900155e-06], ['Returned', 3.4019391052900155e-06], ['[0,', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_TOTAL_REG_COUNT].', 3.4019391052900155e-06], ['&reg)', 3.4019391052900155e-06], ['reg.regNum;', 3.4019391052900155e-06], ['(reg.regKind)', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT', 3.4019391052900155e-06], ['reg_id)', 3.4019391052900155e-06], ['reg_name[32];', 3.4019391052900155e-06], ['reg_id;', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_C_REG_COUNT)', 3.4019391052900155e-06], ['"$c%lu",', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT)', 3.4019391052900155e-06], ['"$s%lu",', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_S_REG_COUNT;', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT)', 3.4019391052900155e-06], ['"$d%lu",', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_D_REG_COUNT;', 3.4019391052900155e-06], ['BRIG_2_TREE_HSAIL_Q_REG_COUNT)', 3.4019391052900155e-06], ['"$q%lu",', 3.4019391052900155e-06], ['"$??";', 3.4019391052900155e-06], ['Prints', 3.4019391052900155e-06], ['statistics', 3.4019391052900155e-06], ['gccbrig_print_reg_use_info', 3.4019391052900155e-06], ['*dump,', 3.4019391052900155e-06], ['&info)', 3.4019391052900155e-06], ['begin_it', 3.4019391052900155e-06], ['info.begin', 3.4019391052900155e-06], ['end_it', 3.4019391052900155e-06], ['info.end', 3.4019391052900155e-06], ['(regs_use_index::const_iterator', 3.4019391052900155e-06], ['begin_it;', 3.4019391052900155e-06], ['end_it;', 3.4019391052900155e-06], ['hsa_reg', 3.4019391052900155e-06], ['(it->first);', 3.4019391052900155e-06], ['("%s:\\n",', 3.4019391052900155e-06], ['hsa_reg.c_str', 3.4019391052900155e-06], ['reg_use_it;', 3.4019391052900155e-06], ['begin_it2', 3.4019391052900155e-06], ['end_it2', 3.4019391052900155e-06], ['(reg_use_it', 3.4019391052900155e-06], ['begin_it2;', 3.4019391052900155e-06], ['end_it2;', 3.4019391052900155e-06], ['it2++)', 3.4019391052900155e-06], ['"(%lu)', 3.4019391052900155e-06], ['it2->second);', 3.4019391052900155e-06], ['print_node_brief', 3.4019391052900155e-06], ['it2->first,', 3.4019391052900155e-06], ['brig-variable-handler.cc', 3.4019391052900155e-06], ['brig_directive_variable_handler::build_variable', 3.4019391052900155e-06], ['var_decltype)', 3.4019391052900155e-06], ['BRIG_SEGMENT_KERNARG', 3.4019391052900155e-06], ['(brigVar->modifier', 3.4019391052900155e-06], ['BRIG_VARIABLE_CONST))', 3.4019391052900155e-06], ['(brigVar->segment);', 3.4019391052900155e-06], ['var_decltype,', 3.4019391052900155e-06], ['alignments.', 3.4019391052900155e-06], ['(is_definition)', 3.4019391052900155e-06], ['(brigVar->init', 3.4019391052900155e-06], ['BRIG_SEGMENT_GLOBAL);', 3.4019391052900155e-06], ['*cst_operand_data', 3.4019391052900155e-06], ['(brigVar->init);', 3.4019391052900155e-06], ['(cst_operand_data->kind', 3.4019391052900155e-06], ['BRIG_KIND_OPERAND_CONSTANT_BYTES)', 3.4019391052900155e-06], ['cst_operand_data,', 3.4019391052900155e-06], ['("variable', 3.4019391052900155e-06], ['%x', 3.4019391052900155e-06], ['cst_operand_data->kind);', 3.4019391052900155e-06], ['(initializer', 3.4019391052900155e-06], ['initializer;', 3.4019391052900155e-06], ['brig_directive_variable_handler::operator', 3.4019391052900155e-06], ['var_size;', 3.4019391052900155e-06], ['(var_type))', 3.4019391052900155e-06], ['function_scope', 3.4019391052900155e-06], ['(function_scope)', 3.4019391052900155e-06], ['Non-kernel', 3.4019391052900155e-06], ["'analyze'", 3.4019391052900155e-06], ['function_scope);', 3.4019391052900155e-06], ['analyze,', 3.4019391052900155e-06], ['(module', 3.4019391052900155e-06], ['scope)', 3.4019391052900155e-06], ['m_parent.m_cf->append_kernel_arg', 3.4019391052900155e-06], ['accessed.', 3.4019391052900155e-06], ['(!m_parent.has_private_variable', 3.4019391052900155e-06], ['m_parent.append_private_variable', 3.4019391052900155e-06], ['(gccbrig_might_be_host_defined_var_p', 3.4019391052900155e-06], ['(brigVar))', 3.4019391052900155e-06], ['m_parent.add_host_def_var_ptr', 3.4019391052900155e-06], ['Runtime', 3.4019391052900155e-06], ['API.', 3.4019391052900155e-06], ['m_parent.add_global_variable', 3.4019391052900155e-06], ['(m_parent.m_cf->m_generating_arg_block)', 3.4019391052900155e-06], ['brig-function-handler.cc.', 3.4019391052900155e-06], ['brig_directive_variable_handler::get_brig_var_alignment', 3.4019391052900155e-06], ['brigVar->align', 3.4019391052900155e-06], ['BRIG_ALIGNMENT_NONE', 3.4019391052900155e-06], ['(brigVar->align', 3.4019391052900155e-06], ['natural_alignment;', 3.4019391052900155e-06], ['defined_alignment;', 3.4019391052900155e-06], ['near-matches', 3.4019391052900155e-06], ['macros.', 3.4019391052900155e-06], ['"cpplib.h"', 3.4019391052900155e-06], ['"spellcheck-tree.h"', 3.4019391052900155e-06], ['"c-family/c-spellcheck.h"', 3.4019391052900155e-06], ['thus,', 3.4019391052900155e-06], ['(str[0]', 3.4019391052900155e-06], ["'_')", 3.4019391052900155e-06], ['(str[1]', 3.4019391052900155e-06], ['ISUPPER(str[1]));', 3.4019391052900155e-06], ['suggestion', 3.4019391052900155e-06], ['misspelling.', 3.4019391052900155e-06], ['should_suggest_as_macro_p', 3.4019391052900155e-06], ['(cpp_hashnode', 3.4019391052900155e-06], ['*hashnode)', 3.4019391052900155e-06], ['(!cpp_macro_p', 3.4019391052900155e-06], ['implementation,', 3.4019391052900155e-06], ['__FILE__,', 3.4019391052900155e-06], ['__LINE__', 3.4019391052900155e-06], ['(cpp_user_macro_p', 3.4019391052900155e-06], ['(hashnode)', 3.4019391052900155e-06], ['*)hashnode->ident.str))', 3.4019391052900155e-06], ['callback', 3.4019391052900155e-06], ['cpp_forall_identifiers,', 3.4019391052900155e-06], ["best_macro_match's", 3.4019391052900155e-06], ['USER_DATA.', 3.4019391052900155e-06], ['(cpp_reader', 3.4019391052900155e-06], ['cpp_hashnode', 3.4019391052900155e-06], ['*hashnode,', 3.4019391052900155e-06], ['*user_data)', 3.4019391052900155e-06], ['(!should_suggest_as_macro_p', 3.4019391052900155e-06], ['*bmm', 3.4019391052900155e-06], ['(best_macro_match', 3.4019391052900155e-06], ['*)user_data;', 3.4019391052900155e-06], ['bmm->consider', 3.4019391052900155e-06], ['(hashnode);', 3.4019391052900155e-06], ['iterating.', 3.4019391052900155e-06], ['Constructor', 3.4019391052900155e-06], ['best_macro_match.', 3.4019391052900155e-06], ['distance', 3.4019391052900155e-06], ['best_distance_so_far.', 3.4019391052900155e-06], ['best_macro_match::best_macro_match', 3.4019391052900155e-06], ['edit_distance_t', 3.4019391052900155e-06], ['best_distance_so_far,', 3.4019391052900155e-06], ['cpp_reader', 3.4019391052900155e-06], ['*reader)', 3.4019391052900155e-06], ['best_match', 3.4019391052900155e-06], ['<goal_t,', 3.4019391052900155e-06], ['candidate_t>', 3.4019391052900155e-06], ['(goal,', 3.4019391052900155e-06], ['best_distance_so_far)', 3.4019391052900155e-06], ['cpp_forall_identifiers', 3.4019391052900155e-06], ['(reader,', 3.4019391052900155e-06], ['find_closest_macro_cpp_cb,', 3.4019391052900155e-06], ['(""));', 3.4019391052900155e-06], ['("_"));', 3.4019391052900155e-06], ['("_foo"));', 3.4019391052900155e-06], ['("_42"));', 3.4019391052900155e-06], ['("_Foo"));', 3.4019391052900155e-06], ['("__"));', 3.4019391052900155e-06], ['("__foo"));', 3.4019391052900155e-06], ['c_spellcheck_cc_tests', 3.4019391052900155e-06], ['suggestions', 3.4019391052900155e-06], ['"c-family/name-hint.h"', 3.4019391052900155e-06], ['"c-family/known-headers.h"', 3.4019391052900155e-06], ['"gcc-rich-location.h"', 3.4019391052900155e-06], ['STDLIB_C,', 3.4019391052900155e-06], ['STDLIB_CPLUSPLUS,', 3.4019391052900155e-06], ['NUM_STDLIBS', 3.4019391052900155e-06], ['associating', 3.4019391052900155e-06], ['locate', 3.4019391052900155e-06], ['stdlibs', 3.4019391052900155e-06], ['stdlib).', 3.4019391052900155e-06], ['*header[NUM_STDLIBS];', 3.4019391052900155e-06], ['subset', 3.4019391052900155e-06], ['lib)', 3.4019391052900155e-06], ['(lib', 3.4019391052900155e-06], ['NUM_STDLIBS);', 3.4019391052900155e-06], ['hints[]', 3.4019391052900155e-06], ['<cassert>.', 3.4019391052900155e-06], ['{"assert",', 3.4019391052900155e-06], ['{"<assert.h>",', 3.4019391052900155e-06], ['"<cassert>"}', 3.4019391052900155e-06], ['<errno.h>', 3.4019391052900155e-06], ['<cerrno>.', 3.4019391052900155e-06], ['{"errno",', 3.4019391052900155e-06], ['{"<errno.h>",', 3.4019391052900155e-06], ['"<cerrno>"}', 3.4019391052900155e-06], ['<climits>.', 3.4019391052900155e-06], ['{"CHAR_BIT",', 3.4019391052900155e-06], ['{"CHAR_MAX",', 3.4019391052900155e-06], ['{"CHAR_MIN",', 3.4019391052900155e-06], ['{"INT_MAX",', 3.4019391052900155e-06], ['{"INT_MIN",', 3.4019391052900155e-06], ['{"LLONG_MAX",', 3.4019391052900155e-06], ['{"LLONG_MIN",', 3.4019391052900155e-06], ['{"LONG_MAX",', 3.4019391052900155e-06], ['{"LONG_MIN",', 3.4019391052900155e-06], ['{"MB_LEN_MAX",', 3.4019391052900155e-06], ['{"SCHAR_MAX",', 3.4019391052900155e-06], ['{"SCHAR_MIN",', 3.4019391052900155e-06], ['{"SHRT_MAX",', 3.4019391052900155e-06], ['{"SHRT_MIN",', 3.4019391052900155e-06], ['{"UCHAR_MAX",', 3.4019391052900155e-06], ['{"UINT_MAX",', 3.4019391052900155e-06], ['{"ULLONG_MAX",', 3.4019391052900155e-06], ['{"ULONG_MAX",', 3.4019391052900155e-06], ['{"USHRT_MAX",', 3.4019391052900155e-06], ['<cfloat>.', 3.4019391052900155e-06], ['{"DBL_MAX",', 3.4019391052900155e-06], ['{"DBL_MIN",', 3.4019391052900155e-06], ['{"FLT_MAX",', 3.4019391052900155e-06], ['{"FLT_MIN",', 3.4019391052900155e-06], ['{"LDBL_MAX",', 3.4019391052900155e-06], ['{"LDBL_MIN",', 3.4019391052900155e-06], ['<stdarg.h>', 3.4019391052900155e-06], ['<cstdarg>.', 3.4019391052900155e-06], ['{"va_list",', 3.4019391052900155e-06], ['{"<stdarg.h>",', 3.4019391052900155e-06], ['"<cstdarg>"}', 3.4019391052900155e-06], ['<cstddef>.', 3.4019391052900155e-06], ['{"NULL",', 3.4019391052900155e-06], ['{"nullptr_t",', 3.4019391052900155e-06], ['{"offsetof",', 3.4019391052900155e-06], ['{"ptrdiff_t",', 3.4019391052900155e-06], ['{"size_t",', 3.4019391052900155e-06], ['{"wchar_t",', 3.4019391052900155e-06], ['*/}', 3.4019391052900155e-06], ['<cstdio>.', 3.4019391052900155e-06], ['{"BUFSIZ",', 3.4019391052900155e-06], ['{"EOF",', 3.4019391052900155e-06], ['{"FILE",', 3.4019391052900155e-06], ['{"FILENAME_MAX",', 3.4019391052900155e-06], ['{"fopen",', 3.4019391052900155e-06], ['{"fpos_t",', 3.4019391052900155e-06], ['{"getchar",', 3.4019391052900155e-06], ['{"printf",', 3.4019391052900155e-06], ['{"snprintf",', 3.4019391052900155e-06], ['{"sprintf",', 3.4019391052900155e-06], ['{"stderr",', 3.4019391052900155e-06], ['{"stdin",', 3.4019391052900155e-06], ['{"stdout",', 3.4019391052900155e-06], ['<cstdlib>.', 3.4019391052900155e-06], ['{"free",', 3.4019391052900155e-06], ['{"malloc",', 3.4019391052900155e-06], ['{"realloc",', 3.4019391052900155e-06], ['<cstring>.', 3.4019391052900155e-06], ['{"memchr",', 3.4019391052900155e-06], ['{"memcmp",', 3.4019391052900155e-06], ['{"memcpy",', 3.4019391052900155e-06], ['{"memmove",', 3.4019391052900155e-06], ['{"memset",', 3.4019391052900155e-06], ['{"strcat",', 3.4019391052900155e-06], ['{"strchr",', 3.4019391052900155e-06], ['{"strcmp",', 3.4019391052900155e-06], ['{"strcpy",', 3.4019391052900155e-06], ['{"strlen",', 3.4019391052900155e-06], ['{"strncat",', 3.4019391052900155e-06], ['{"strncmp",', 3.4019391052900155e-06], ['{"strncpy",', 3.4019391052900155e-06], ['{"strrchr",', 3.4019391052900155e-06], ['{"strspn",', 3.4019391052900155e-06], ['{"strstr",', 3.4019391052900155e-06], ['<stdint.h>.', 3.4019391052900155e-06], ['{"PTRDIFF_MAX",', 3.4019391052900155e-06], ['{"PTRDIFF_MIN",', 3.4019391052900155e-06], ['{"SIG_ATOMIC_MAX",', 3.4019391052900155e-06], ['{"SIG_ATOMIC_MIN",', 3.4019391052900155e-06], ['{"SIZE_MAX",', 3.4019391052900155e-06], ['{"WINT_MAX",', 3.4019391052900155e-06], ['{"WINT_MIN",', 3.4019391052900155e-06], ['<wchar.h>.', 3.4019391052900155e-06], ['{"WCHAR_MAX",', 3.4019391052900155e-06], ['{"WCHAR_MIN",', 3.4019391052900155e-06], ['num_hints', 3.4019391052900155e-06], ['(hints)', 3.4019391052900155e-06], ['(hints[0]);', 3.4019391052900155e-06], ['num_hints;', 3.4019391052900155e-06], ['hints[i].name)', 3.4019391052900155e-06], ['hints[i].header[lib];', 3.4019391052900155e-06], ['get_c_stdlib_header_for_name', 3.4019391052900155e-06], ['STDLIB_C);', 3.4019391052900155e-06], ['get_cp_stdlib_header_for_name', 3.4019391052900155e-06], ['STDLIB_CPLUSPLUS);', 3.4019391052900155e-06], ['suggest_missing_header.', 3.4019391052900155e-06], ['suggest_missing_header::suggest_missing_header', 3.4019391052900155e-06], ['*header_hint)', 3.4019391052900155e-06], ['deferred_diagnostic', 3.4019391052900155e-06], ['m_name_str', 3.4019391052900155e-06], ['m_header_hint', 3.4019391052900155e-06], ['(header_hint)', 3.4019391052900155e-06], ['(header_hint);', 3.4019391052900155e-06], ['suggest_missing_header::~suggest_missing_header', 3.4019391052900155e-06], ['(is_suppressed_p', 3.4019391052900155e-06], ['gcc_rich_location', 3.4019391052900155e-06], ['richloc', 3.4019391052900155e-06], ['(get_location', 3.4019391052900155e-06], ['maybe_add_include_fixit', 3.4019391052900155e-06], ['%qs;"', 3.4019391052900155e-06], ['%<#include', 3.4019391052900155e-06], ['%s%>?",', 3.4019391052900155e-06], ['m_name_str,', 3.4019391052900155e-06], ['m_header_hint);', 3.4019391052900155e-06], ['Cause', 3.4019391052900155e-06], ['gcc/Makefile.in', 3.4019391052900155e-06], ['(DRIVER_DEFINES).', 3.4019391052900155e-06], ['SHLIB', 3.4019391052900155e-06], ['Speculation', 3.4019391052900155e-06], ['CVE', 3.4019391052900155e-06], ['2017-5753)', 3.4019391052900155e-06], ['AArch64.', 3.4019391052900155e-06], ['"cfgbuild.h"', 3.4019391052900155e-06], ['"print-rtl.h"', 3.4019391052900155e-06], ['"insn-attr.h"', 3.4019391052900155e-06], ['"insn-config.h"', 3.4019391052900155e-06], ['re-organisation', 3.4019391052900155e-06], ['aim', 3.4019391052900155e-06], ['places', 3.4019391052900155e-06], ['reserve', 3.4019391052900155e-06], ['call-clobbered', 3.4019391052900155e-06], ['(so', 3.4019391052900155e-06], ['prologue)', 3.4019391052900155e-06], ['subject', 3.4019391052900155e-06], ['true).', 3.4019391052900155e-06], ['predicted', 3.4019391052900155e-06], ['diverges', 3.4019391052900155e-06], ['architectural', 3.4019391052900155e-06], ['behavior,', 3.4019391052900155e-06], ['otherwise).', 3.4019391052900155e-06], ['guarding', 3.4019391052900155e-06], ['speculation.', 3.4019391052900155e-06], ['ways,', 3.4019391052900155e-06], ['trusted', 3.4019391052900155e-06], ['speculating,', 3.4019391052900155e-06], ['correctly,', 3.4019391052900155e-06], ['unchanged,', 3.4019391052900155e-06], ['clamped', 3.4019391052900155e-06], ['scenarios', 3.4019391052900155e-06], ['alternate', 3.4019391052900155e-06], ['CSDB', 3.4019391052900155e-06], ['speculation,', 3.4019391052900155e-06], ['protecting', 3.4019391052900155e-06], ['vulnerable', 3.4019391052900155e-06], ['CSDB:', 3.4019391052900155e-06], ['updated.', 3.4019391052900155e-06], ['boundaries,', 3.4019391052900155e-06], ['communicate', 3.4019391052900155e-06], ['callee.', 3.4019391052900155e-06], ['programs', 3.4019391052900155e-06], ['boundary;', 3.4019391052900155e-06], ['encode', 3.4019391052900155e-06], ['BL', 3.4019391052900155e-06], ['<callee>', 3.4019391052900155e-06], ['#0', 3.4019391052900155e-06], ['CSETM', 3.4019391052900155e-06], ['prologue', 3.4019391052900155e-06], ['re-encode', 3.4019391052900155e-06], ['property', 3.4019391052900155e-06], ['hence', 3.4019391052900155e-06], ['need:', 3.4019391052900155e-06], ['ability', 3.4019391052900155e-06], ['architecturally', 3.4019391052900155e-06], ['Tracking', 3.4019391052900155e-06], ['quite', 3.4019391052900155e-06], ['expensive,', 3.4019391052900155e-06], ['employ', 3.4019391052900155e-06], ['tricks', 3.4019391052900155e-06], ['tracker)', 3.4019391052900155e-06], ['tracker:', 3.4019391052900155e-06], ['duration', 3.4019391052900155e-06], ['tail-call.', 3.4019391052900155e-06], ['Back-to-back', 3.4019391052900155e-06], ['re-establish', 3.4019391052900155e-06], ['Again,', 3.4019391052900155e-06], ['period', 3.4019391052900155e-06], ['reorganization', 3.4019391052900155e-06], ['insertion', 3.4019391052900155e-06], ['reorg', 3.4019391052900155e-06], ['horrible.', 3.4019391052900155e-06], ['incorreclty.', 3.4019391052900155e-06], ['SPECULATION_SCRATCH_REGNUM);', 3.4019391052900155e-06], ['sp));', 3.4019391052900155e-06], ['(gen_anddi3', 3.4019391052900155e-06], ['scratch,', 3.4019391052900155e-06], ['tracker));', 3.4019391052900155e-06], ['(sp,', 3.4019391052900155e-06], ['scratch));', 3.4019391052900155e-06], ['cc', 3.4019391052900155e-06], ['aarch64_gen_compare_reg', 3.4019391052900155e-06], ['sp,', 3.4019391052900155e-06], ['(gen_cstoredi_neg', 3.4019391052900155e-06], ['(tracker,', 3.4019391052900155e-06], ['gen_rtx_NE', 3.4019391052900155e-06], ['(CCmode,', 3.4019391052900155e-06], ['cc,', 3.4019391052900155e-06], ['const0_rtx),', 3.4019391052900155e-06], ['cc));', 3.4019391052900155e-06], ['fixups_pending', 3.4019391052900155e-06], ['"Basic', 3.4019391052900155e-06], ['%d:\\n",', 3.4019391052900155e-06], ['(control_flow_insn_p', 3.4019391052900155e-06], ['condjump\\n");', 3.4019391052900155e-06], ['SET_SRC', 3.4019391052900155e-06], ['(pc_set', 3.4019391052900155e-06], ['PC;', 3.4019391052900155e-06], ['instructions).', 3.4019391052900155e-06], ['!inverted))', 3.4019391052900155e-06], ['PC);', 3.4019391052900155e-06], ['(COMPARISON_P', 3.4019391052900155e-06], ['CC_REGNUM', 3.4019391052900155e-06], ['inv_cond_code', 3.4019391052900155e-06], ['(inv_cond_code', 3.4019391052900155e-06], ['UNKNOWN);', 3.4019391052900155e-06], ['inv_cond', 3.4019391052900155e-06], ['(inv_cond_code,', 3.4019391052900155e-06], ['(inverted)', 3.4019391052900155e-06], ['inv_cond);', 3.4019391052900155e-06], ['(inv_cond),', 3.4019391052900155e-06], ['(needs_tracking', 3.4019391052900155e-06], ['need_second_pass)', 3.4019391052900155e-06], ['(find_reg_note', 3.4019391052900155e-06], ['REG_NON_LOCAL_GOTO,', 3.4019391052900155e-06], ['NULL_RTX))', 3.4019391052900155e-06], ['other\\n");', 3.4019391052900155e-06], ['*call_insn', 3.4019391052900155e-06], ['(bb->flags', 3.4019391052900155e-06], ['BB_NON_LOCAL_GOTO_TARGET)', 3.4019391052900155e-06], ['fixup', 3.4019391052900155e-06], ['(LABEL_P', 3.4019391052900155e-06], ['Never', 3.4019391052900155e-06], ['(NOTE_INSN_BASIC_BLOCK_P', 3.4019391052900155e-06], ['restore', 3.4019391052900155e-06], ['transfers', 3.4019391052900155e-06], ['eliminate,', 3.4019391052900155e-06], ['recog_memoized', 3.4019391052900155e-06], ['(get_attr_speculation_barrier', 3.4019391052900155e-06], ['SPECULATION_BARRIER_TRUE))', 3.4019391052900155e-06], ['tailcall', 3.4019391052900155e-06], ['NULL_RTX));', 3.4019391052900155e-06], ['Tailcalls', 3.4019391052900155e-06], ['returns,', 3.4019391052900155e-06], ['tracking.', 3.4019391052900155e-06], ['(tailcall', 3.4019391052900155e-06], ['(need_second_pass', 3.4019391052900155e-06], ['!needs_tracking))', 3.4019391052900155e-06], ['sequences.', 3.4019391052900155e-06], ['(!call_insn)', 3.4019391052900155e-06], ['(aarch64_speculation_clobber_sp', 3.4019391052900155e-06], ['Tail-calls', 3.4019391052900155e-06], ['no-return', 3.4019391052900155e-06], ['reestablishment', 3.4019391052900155e-06], ['tracker.', 3.4019391052900155e-06], ['tailcall)', 3.4019391052900155e-06], ['behaviour', 3.4019391052900155e-06], ['placement', 3.4019391052900155e-06], ['non-debug', 3.4019391052900155e-06], ['builds.', 3.4019391052900155e-06], ['call_insn;', 3.4019391052900155e-06], ['DEBUG_INSN_P', 3.4019391052900155e-06], ['(NEXT_INSN', 3.4019391052900155e-06], ['find_fallthru_edge', 3.4019391052900155e-06], ['careful', 3.4019391052900155e-06], ['exceptions,', 3.4019391052900155e-06], ['easiest', 3.4019391052900155e-06], ['commit', 3.4019391052900155e-06], ['Sometimes,', 3.4019391052900155e-06], ['eg', 3.4019391052900155e-06], ['OMP,', 3.4019391052900155e-06], ['(e)', 3.4019391052900155e-06], ['INSN_P', 3.4019391052900155e-06], ['(seq))', 3.4019391052900155e-06], ['(seq);', 3.4019391052900155e-06], ['*list', 3.4019391052900155e-06], ['(list))', 3.4019391052900155e-06], ['(list)', 3.4019391052900155e-06], ['(call_insn);', 3.4019391052900155e-06], ['(needs_tracking)', 3.4019391052900155e-06], ['(need_second_pass)', 3.4019391052900155e-06], ['((control_flow_insn_p', 3.4019391052900155e-06], ['NULL_RTX))))', 3.4019391052900155e-06], ['fixups_pending--;', 3.4019391052900155e-06], ['(fixups_pending', 3.4019391052900155e-06], ['single_succ_edge', 3.4019391052900155e-06], ['(cfun)));', 3.4019391052900155e-06], ['pass_data_aarch64_track_speculation', 3.4019391052900155e-06], ['"speculation",', 3.4019391052900155e-06], ['optinfo_flags.', 3.4019391052900155e-06], ['TV_MACH_DEP,', 3.4019391052900155e-06], ['tv_id.', 3.4019391052900155e-06], ['properties_required.', 3.4019391052900155e-06], ['properties_provided.', 3.4019391052900155e-06], ['properties_destroyed.', 3.4019391052900155e-06], ['todo_flags_start.', 3.4019391052900155e-06], ['todo_flags_finish.', 3.4019391052900155e-06], ['pass_track_speculation(gcc::context', 3.4019391052900155e-06], ['rtl_opt_pass(pass_data_aarch64_track_speculation,', 3.4019391052900155e-06], ['aarch64_track_speculation;', 3.4019391052900155e-06], ['pass_track_speculation.', 3.4019391052900155e-06], ['make_pass_track_speculation', 3.4019391052900155e-06], ['"explow.h"', 3.4019391052900155e-06], ['force_operand,', 3.4019391052900155e-06], ['target)', 3.4019391052900155e-06], ['force_operand', 3.4019391052900155e-06], ['target);', 3.4019391052900155e-06], ['target))', 3.4019391052900155e-06], ['expand_block_move', 3.4019391052900155e-06], ['(operands[2]));', 3.4019391052900155e-06], ['word-aligned,', 3.4019391052900155e-06], ['movua.l', 3.4019391052900155e-06], ['sequence.', 3.4019391052900155e-06], ['(TARGET_SH4A', 3.4019391052900155e-06], ['(operands[0])', 3.4019391052900155e-06], ['can_move_by_pieces', 3.4019391052900155e-06], ['32))', 3.4019391052900155e-06], ['pseudos', 3.4019391052900155e-06], ['word,', 3.4019391052900155e-06], ['movua', 3.4019391052900155e-06], ['pointless.', 3.4019391052900155e-06], ['src_addr', 3.4019391052900155e-06], ['set_mem_size', 3.4019391052900155e-06], ['(gen_movua', 3.4019391052900155e-06], ['(temp,', 3.4019391052900155e-06], ['from));', 3.4019391052900155e-06], ['(src_addr,', 3.4019391052900155e-06], ['(to,', 3.4019391052900155e-06], ['temp);', 3.4019391052900155e-06], ['move_by_pieces', 3.4019391052900155e-06], ['(adjust_address', 3.4019391052900155e-06], ['copied,', 3.4019391052900155e-06], ['align,', 3.4019391052900155e-06], ['RETURN_BEGIN);', 3.4019391052900155e-06], ['(TARGET_HARD_SH4)', 3.4019391052900155e-06], ['"__movmemSI12_i4",', 3.4019391052900155e-06], ['(gen_block_move_real_i4', 3.4019391052900155e-06], ['"__movmem_i4_odd"', 3.4019391052900155e-06], ['"__movmem_i4_even",', 3.4019391052900155e-06], ['dwords', 3.4019391052900155e-06], ['(dwords', 3.4019391052900155e-06], ['(gen_block_lump_real_i4', 3.4019391052900155e-06], ['entry[30];', 3.4019391052900155e-06], ['(entry,', 3.4019391052900155e-06], ['"__movmemSI%d",', 3.4019391052900155e-06], ['bytes);', 3.4019391052900155e-06], ['entry,', 3.4019391052900155e-06], ['(gen_block_move_real', 3.4019391052900155e-06], ['occasionally', 3.4019391052900155e-06], ['final_switch,', 3.4019391052900155e-06], ['while_loop;', 3.4019391052900155e-06], ['"__movmem",', 3.4019391052900155e-06], ['decremented', 3.4019391052900155e-06], ['moved.', 3.4019391052900155e-06], ['e.g.,', 3.4019391052900155e-06], ['72', 3.4019391052900155e-06], ['size(r6)', 3.4019391052900155e-06], ['-2', 3.4019391052900155e-06], ['part.', 3.4019391052900155e-06], ['final_switch', 3.4019391052900155e-06], ['while_loop', 3.4019391052900155e-06], ['(while_loop', 3.4019391052900155e-06], ['final_switch)));', 3.4019391052900155e-06], ['(gen_block_lump_real', 3.4019391052900155e-06], ['prob_unlikely', 3.4019391052900155e-06], ['prob_likely', 3.4019391052900155e-06], ['strcmp.', 3.4019391052900155e-06], ['sh_expand_cmpstr', 3.4019391052900155e-06], ['tmp3);', 3.4019391052900155e-06], ['tmp3,', 3.4019391052900155e-06], ['Fallthu,', 3.4019391052900155e-06], ['words.', 3.4019391052900155e-06], ['(TARGET_LITTLE_ENDIAN)', 3.4019391052900155e-06], ['low_1', 3.4019391052900155e-06], ['tmp1);', 3.4019391052900155e-06], ['low_2', 3.4019391052900155e-06], ['tmp2);', 3.4019391052900155e-06], ['strncmp.', 3.4019391052900155e-06], ['OPERANDS[4]', 3.4019391052900155e-06], ['sh_expand_cmpnstr', 3.4019391052900155e-06], ['(operands[3])', 3.4019391052900155e-06], ['witers', 3.4019391052900155e-06], ['(witers', 3.4019391052900155e-06], ['tmp2,', 3.4019391052900155e-06], ['sbytes', 3.4019391052900155e-06], ['Reached', 3.4019391052900155e-06], ['iterations.', 3.4019391052900155e-06], ['(sbytes', 3.4019391052900155e-06], ['Remaining', 3.4019391052900155e-06], ['(sbytes--)', 3.4019391052900155e-06], ['Restart', 3.4019391052900155e-06], ['byte.', 3.4019391052900155e-06], ['thru.', 3.4019391052900155e-06], ['(bytes--)', 3.4019391052900155e-06], ['strlen.', 3.4019391052900155e-06], ['sh_expand_strlen', 3.4019391052900155e-06], ['current_addr', 3.4019391052900155e-06], ['start_addr', 3.4019391052900155e-06], ['(-1));', 3.4019391052900155e-06], ['current_addr);', 3.4019391052900155e-06], ['unroll', 3.4019391052900155e-06], ['start_addr,', 3.4019391052900155e-06], ['(1)));', 3.4019391052900155e-06], ['start_addr));', 3.4019391052900155e-06], ['sh_expand_setmem', 3.4019391052900155e-06], ['*L_loop_word', 3.4019391052900155e-06], ['dest_addr', 3.4019391052900155e-06], ['(operands[1]))', 3.4019391052900155e-06], ['(L_loop_word);', 3.4019391052900155e-06], ['(L_loop_word));', 3.4019391052900155e-06], ['(count--)', 3.4019391052900155e-06], ["BB's", 3.4019391052900155e-06], ['clrt.', 3.4019391052900155e-06], ['hit,', 3.4019391052900155e-06], ['Insns', 3.4019391052900155e-06], ['(simple', 3.4019391052900155e-06], ['etc)', 3.4019391052900155e-06], ['recorded.', 3.4019391052900155e-06], ['Conditional', 3.4019391052900155e-06], ['leads', 3.4019391052900155e-06], ['eliminated.', 3.4019391052900155e-06], ['~sh_optimize_sett_clrt', 3.4019391052900155e-06], ['(function*);', 3.4019391052900155e-06], ['fun);', 3.4019391052900155e-06], ['discovered.', 3.4019391052900155e-06], ['NULL_RTX,', 3.4019391052900155e-06], ['known,', 3.4019391052900155e-06], ['clobbered).', 3.4019391052900155e-06], ['STORE_FLAG_VALUE.', 3.4019391052900155e-06], ['jumping/falling', 3.4019391052900155e-06], ['sh_cbranch_ccreg_value', 3.4019391052900155e-06], ['values);', 3.4019391052900155e-06], ['REG_DEAD', 3.4019391052900155e-06], ['REG_UNUSED', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::default_pass_data', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::sh_optimize_sett_clrt', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::~sh_optimize_sett_clrt', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::gate', 3.4019391052900155e-06], ['(function*)', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::execute', 3.4019391052900155e-06], ['(!df_regs_ever_live_p', 3.4019391052900155e-06], ['(ccr0))', 3.4019391052900155e-06], ['"ccreg', 3.4019391052900155e-06], ['live\\n\\n");', 3.4019391052900155e-06], ['find_known_ccreg_values.', 3.4019391052900155e-06], ['std::vector<ccreg_value>', 3.4019391052900155e-06], ['ccreg_values;', 3.4019391052900155e-06], ['ccreg_values.reserve', 3.4019391052900155e-06], ['recursion.', 3.4019391052900155e-06], ['visited_bbs;', 3.4019391052900155e-06], ['visited_bbs.reserve', 3.4019391052900155e-06], ['FOR_EACH_BB_REVERSE_FN', 3.4019391052900155e-06], ['*next_i,', 3.4019391052900155e-06], ['next_i)', 3.4019391052900155e-06], ['next_i', 3.4019391052900155e-06], ['!NONDEBUG_INSN_P', 3.4019391052900155e-06], ['setcc_val', 3.4019391052900155e-06], ['(setcc_val', 3.4019391052900155e-06], ['("\\n\\nfound', 3.4019391052900155e-06], ['%d]:', 3.4019391052900155e-06], ['\\n",', 3.4019391052900155e-06], ['ccreg_values.clear', 3.4019391052900155e-06], ['visited_bbs.clear', 3.4019391052900155e-06], ['(PREV_INSN', 3.4019391052900155e-06], ['ccreg_values,', 3.4019391052900155e-06], ['visited_bbs);', 3.4019391052900155e-06], ['("number', 3.4019391052900155e-06], ['collected:', 3.4019391052900155e-06], ['int)ccreg_values.size', 3.4019391052900155e-06], ['(ok', 3.4019391052900155e-06], ['(ccreg_values)', 3.4019391052900155e-06], ['(ccreg_values.front', 3.4019391052900155e-06], ['().value,', 3.4019391052900155e-06], ['setcc_val))', 3.4019391052900155e-06], ['("all', 3.4019391052900155e-06], ['(setcc_val);', 3.4019391052900155e-06], ['(ccreg_values);', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::update_ccreg_mode', 3.4019391052900155e-06], ['sh_optimize_sett_clrt::const_setcc_value', 3.4019391052900155e-06], ['(pat)', 3.4019391052900155e-06], ['STORE_FLAG_VALUE))', 3.4019391052900155e-06], ['::sh_cbranch_ccreg_value', 3.4019391052900155e-06], ['pc_set_rtx', 3.4019391052900155e-06], ['(pc_set_rtx', 3.4019391052900155e-06], ['(pc_set_rtx,', 3.4019391052900155e-06], ['!branch_if;', 3.4019391052900155e-06], ['::find_last_ccreg_values', 3.4019391052900155e-06], ['CFGs', 3.4019391052900155e-06], ['unnecessarily', 3.4019391052900155e-06], ['re-visit', 3.4019391052900155e-06], ['visited,', 3.4019391052900155e-06], ['container', 3.4019391052900155e-06], ['re-visits.', 3.4019391052900155e-06], ['("looking', 3.4019391052900155e-06], ['(!prev_visited_bb.empty', 3.4019391052900155e-06], ['("(prev', 3.4019391052900155e-06], ['%d])",', 3.4019391052900155e-06], ['(set_rtx)', 3.4019391052900155e-06], ['("\\nccreg', 3.4019391052900155e-06], ['value:', 3.4019391052900155e-06], ['!prev_visited_bb.empty', 3.4019391052900155e-06], ['branching/falling', 3.4019391052900155e-06], ['successor', 3.4019391052900155e-06], ['came', 3.4019391052900155e-06], ['(sh_cbranch_ccreg_value', 3.4019391052900155e-06], ['walked', 3.4019391052900155e-06], ['(prev_visited_bb.rbegin', 3.4019391052900155e-06], ['prev_visited_bb.push_back', 3.4019391052900155e-06], ['(bb->preds);', 3.4019391052900155e-06], ['(ei)->flags', 3.4019391052900155e-06], ['EDGE_COMPLEX)', 3.4019391052900155e-06], ['"aborting', 3.4019391052900155e-06], ['edge\\n");', 3.4019391052900155e-06], ['pred_bb', 3.4019391052900155e-06], ['(ei)->src;', 3.4019391052900155e-06], ['(!find_last_ccreg_values', 3.4019391052900155e-06], ['(pred_bb),', 3.4019391052900155e-06], ['pred_bb,', 3.4019391052900155e-06], ['prev_visited_bb))', 3.4019391052900155e-06], ['prev_visited_bb.pop_back', 3.4019391052900155e-06], ['("loop', 3.4019391052900155e-06], ['detected', 3.4019391052900155e-06], ['bb->index,', 3.4019391052900155e-06], ['pred_bb_count);', 3.4019391052900155e-06], ['(pred_bb_count', 3.4019391052900155e-06], ['::all_ccreg_values_equal', 3.4019391052900155e-06], ['(values.empty', 3.4019391052900155e-06], ['last_value', 3.4019391052900155e-06], ['values.front', 3.4019391052900155e-06], ['().value;', 3.4019391052900155e-06], ['(last_value', 3.4019391052900155e-06], ['(std::vector<ccreg_value>::const_iterator', 3.4019391052900155e-06], ['(i->value', 3.4019391052900155e-06], ['!rtx_equal_p', 3.4019391052900155e-06], ['(last_value,', 3.4019391052900155e-06], ['i->value))', 3.4019391052900155e-06], ['::remove_ccreg_dead_unused_notes', 3.4019391052900155e-06], ['(std::vector<ccreg_value>::iterator', 3.4019391052900155e-06], ['(i->insn', 3.4019391052900155e-06], ['make_pass_sh_optimize_sett_clrt', 3.4019391052900155e-06], ['"optabs.h"', 3.4019391052900155e-06], ['movt', 3.4019391052900155e-06], ['bt/s', 3.4019391052900155e-06], ['simpler:', 3.4019391052900155e-06], ['bf/s', 3.4019391052900155e-06], ['redunant', 3.4019391052900155e-06], ['compensation', 3.4019391052900155e-06], ['compensate', 3.4019391052900155e-06], ['[BB', 3.4019391052900155e-06], ['179)))', 3.4019391052900155e-06], ['factored', 3.4019391052900155e-06], ['175))', 3.4019391052900155e-06], ['177))', 3.4019391052900155e-06], ['179))', 3.4019391052900155e-06], ['200)))', 3.4019391052900155e-06], ['combined,', 3.4019391052900155e-06], ['5].', 3.4019391052900155e-06], ['utilize', 3.4019391052900155e-06], ["'nott'", 3.4019391052900155e-06], ['following:', 3.4019391052900155e-06], ['(comparisons)', 3.4019391052900155e-06], ['(inverting', 3.4019391052900155e-06], ['non-inverting)', 3.4019391052900155e-06], ['(create', 3.4019391052900155e-06], ['pseudo', 3.4019391052900155e-06], ['regs).', 3.4019391052900155e-06], ['reason,', 3.4019391052900155e-06], ['extending', 3.4019391052900155e-06], ['forward.', 3.4019391052900155e-06], ["they're", 3.4019391052900155e-06], ['Notice', 3.4019391052900155e-06], ['parallel.', 3.4019391052900155e-06], ['set_rtx;', 3.4019391052900155e-06], ['set_src', 3.4019391052900155e-06], ['set_dst', 3.4019391052900155e-06], ['(result.insn', 3.4019391052900155e-06], ['(BARRIER_P', 3.4019391052900155e-06], ['(!NONJUMP_INSN_P', 3.4019391052900155e-06], ['result.insn))', 3.4019391052900155e-06], ['result.insn);', 3.4019391052900155e-06], ['(result.set_rtx', 3.4019391052900155e-06], ['(result.set_rtx)', 3.4019391052900155e-06], ['adjacent,', 3.4019391052900155e-06], ['is_adjacent_bb', 3.4019391052900155e-06], ['bb0[]', 3.4019391052900155e-06], ['bb1[]', 3.4019391052900155e-06], ['(bb0[i]->succs);', 3.4019391052900155e-06], ['(ei)->dest', 3.4019391052900155e-06], ['bb1[i])', 3.4019391052900155e-06], ['trace_reg_uses.', 3.4019391052900155e-06], ['int&', 3.4019391052900155e-06], ['(visited_bb.begin', 3.4019391052900155e-06], ['visited\\n",', 3.4019391052900155e-06], ['visited_bb.push_back', 3.4019391052900155e-06], ['start_insn', 3.4019391052900155e-06], ['(end_insn', 3.4019391052900155e-06], ['end_insn;', 3.4019391052900155e-06], ['(reg_overlap_mentioned_p', 3.4019391052900155e-06], ['find_reg_fusage', 3.4019391052900155e-06], ['USE,', 3.4019391052900155e-06], ['reg))))', 3.4019391052900155e-06], ['dies', 3.4019391052900155e-06], ['(abort_at_insn', 3.4019391052900155e-06], ['abort_at_insn', 3.4019391052900155e-06], ['succ_bb', 3.4019391052900155e-06], ['(ei)->dest;', 3.4019391052900155e-06], ['(succ_bb),', 3.4019391052900155e-06], ['succ_bb,', 3.4019391052900155e-06], ['Trace', 3.4019391052900155e-06], ['counted.', 3.4019391052900155e-06], ['("\\ntrace_reg_uses\\nreg', 3.4019391052900155e-06], ['("\\nstart_insn', 3.4019391052900155e-06], ['visited_bb;', 3.4019391052900155e-06], ['visited_bb.reserve', 3.4019391052900155e-06], ['start_insn,', 3.4019391052900155e-06], ['(start_insn),', 3.4019391052900155e-06], ['is_conditional_insn', 3.4019391052900155e-06], ['(rtx_insn*', 3.4019391052900155e-06], ['NONDEBUG_INSN_P', 3.4019391052900155e-06], ['(i)))', 3.4019391052900155e-06], ['(p)', 3.4019391052900155e-06], ['IF_THEN_ELSE;', 3.4019391052900155e-06], ['~sh_treg_combine', 3.4019391052900155e-06], ['cstore_unknown', 3.4019391052900155e-06], ['branch_if_true', 3.4019391052900155e-06], ['branch_if_false', 3.4019391052900155e-06], ['unknown_branch_condition', 3.4019391052900155e-06], ['(usually', 3.4019391052900155e-06], ['comparison)', 3.4019391052900155e-06], ['cstore;', 3.4019391052900155e-06], ['cstore_type;', 3.4019391052900155e-06], ['std::vector<set_of_reg>', 3.4019391052900155e-06], ['cstore_reg_reg_copies;', 3.4019391052900155e-06], ['cstore_type', 3.4019391052900155e-06], ['(cstore_unknown)', 3.4019391052900155e-06], ['comparison_rtx', 3.4019391052900155e-06], ['setcc.set_src', 3.4019391052900155e-06], ['*cbranch_insn;', 3.4019391052900155e-06], ['rtx*', 3.4019391052900155e-06], ['condition_rtx_in_insn;', 3.4019391052900155e-06], ['cbranch_type;', 3.4019391052900155e-06], ['std::list<bb_entry>', 3.4019391052900155e-06], ['bb_entries;', 3.4019391052900155e-06], ['cbranch_insn', 3.4019391052900155e-06], ['(insn),', 3.4019391052900155e-06], ['cbranch_type', 3.4019391052900155e-06], ['(unknown_branch_condition),', 3.4019391052900155e-06], ['(cbranch_insn),', 3.4019391052900155e-06], ['branch_condition_rtx', 3.4019391052900155e-06], ['*condition_rtx_in_insn', 3.4019391052900155e-06], ['branch_condition_rtx_ref', 3.4019391052900155e-06], ['Before', 3.4019391052900155e-06], ['(condition_rtx_in_insn', 3.4019391052900155e-06], ['*condition_rtx_in_insn;', 3.4019391052900155e-06], ['can_invert_condition', 3.4019391052900155e-06], ['(branch_condition_rtx', 3.4019391052900155e-06], ['cbranch_insn);', 3.4019391052900155e-06], ['m_split_insns;', 3.4019391052900155e-06], ['Newly', 3.4019391052900155e-06], ['std::vector<rtx>', 3.4019391052900155e-06], ['m_touched_insns;', 3.4019391052900155e-06], ['is_cmp_eq_zero', 3.4019391052900155e-06], ['rtx.', 3.4019391052900155e-06], ['negated', 3.4019391052900155e-06], ['is_normal_ccreg', 3.4019391052900155e-06], ['is_inverted_ccreg', 3.4019391052900155e-06], ['ended', 3.4019391052900155e-06], ['NULL_RTX.', 3.4019391052900155e-06], ['set_found,', 3.4019391052900155e-06], ['set_not_found,', 3.4019391052900155e-06], ['other_set_found', 3.4019391052900155e-06], ['can_remove_cstore', 3.4019391052900155e-06], ['can_remove_comparison', 3.4019391052900155e-06], ['can_combine_comparisons', 3.4019391052900155e-06], ['can_extend_ccreg_usage', 3.4019391052900155e-06], ['(test', 3.4019391052900155e-06], ['src_reg', 3.4019391052900155e-06], ['dst_reg.', 3.4019391052900155e-06], ['inverts', 3.4019391052900155e-06], ['*make_inv_ccreg_insn', 3.4019391052900155e-06], ['try_invert_branch_condition', 3.4019391052900155e-06], ['trace);', 3.4019391052900155e-06], ['try_combine_comparisons', 3.4019391052900155e-06], ['sh_treg_combine::default_pass_data', 3.4019391052900155e-06], ['TODO_df_finish', 3.4019391052900155e-06], ['TODO_df_verify', 3.4019391052900155e-06], ['sh_treg_combine::sh_treg_combine', 3.4019391052900155e-06], ['m_split_insns', 3.4019391052900155e-06], ['(split_insns),', 3.4019391052900155e-06], ['sh_treg_combine::~sh_treg_combine', 3.4019391052900155e-06], ['sh_treg_combine::update_ccreg_mode', 3.4019391052900155e-06], ['sh_treg_combine::is_cmp_eq_zero', 3.4019391052900155e-06], ['const0_rtx;', 3.4019391052900155e-06], ['sh_treg_combine::branch_condition_type_t', 3.4019391052900155e-06], ['sh_treg_combine::branch_condition_type', 3.4019391052900155e-06], ['branch_if_true;', 3.4019391052900155e-06], ['branch_if_false;', 3.4019391052900155e-06], ['sh_treg_combine::is_normal_ccreg', 3.4019391052900155e-06], ['sh_treg_combine::is_inverted_ccreg', 3.4019391052900155e-06], ['sh_treg_combine::record_return_t', 3.4019391052900155e-06], ['sh_treg_combine::record_set_of_reg', 3.4019391052900155e-06], ['new_entry)', 3.4019391052900155e-06], ['new_entry.bb->index);', 3.4019391052900155e-06], ['BB?\\n");', 3.4019391052900155e-06], ['cstore_unknown;', 3.4019391052900155e-06], ['new_entry.cstore', 3.4019391052900155e-06], ['(cstore)\\n");', 3.4019391052900155e-06], ['(new_entry.cstore.insn);', 3.4019391052900155e-06], ['(is_normal_ccreg', 3.4019391052900155e-06], ['("normal', 3.4019391052900155e-06], ['("inverted', 3.4019391052900155e-06], ['cstore_inverted;', 3.4019391052900155e-06], ['new_entry.cstore_reg_reg_copies.push_back', 3.4019391052900155e-06], ['(new_entry.cstore);', 3.4019391052900155e-06], ['new_entry.cstore.set_src', 3.4019391052900155e-06], ['new_entry.cstore.insn;', 3.4019391052900155e-06], ['("reg-reg', 3.4019391052900155e-06], ['tracing', 3.4019391052900155e-06], ['(other_set_found,', 3.4019391052900155e-06], ['(new_entry.cstore_type', 3.4019391052900155e-06], ['cstore_unknown);', 3.4019391052900155e-06], ['("tracing', 3.4019391052900155e-06], ['new_entry.setcc', 3.4019391052900155e-06], ['(new_entry.cstore.insn));', 3.4019391052900155e-06], ['(new_entry.setcc.set_src', 3.4019391052900155e-06], ['(new_entry.setcc.set_rtx)', 3.4019391052900155e-06], ['ccreg,', 3.4019391052900155e-06], ['insns,', 3.4019391052900155e-06], ['clobbers.', 3.4019391052900155e-06], ['(new_entry.setcc.insn);', 3.4019391052900155e-06], ['set_found;', 3.4019391052900155e-06], ['sh_treg_combine::can_remove_cstore', 3.4019391052900155e-06], ['(e.cstore.insn)))', 3.4019391052900155e-06], ['cstore_pat', 3.4019391052900155e-06], ['(cstore_pat)', 3.4019391052900155e-06], ['PARALLEL)', 3.4019391052900155e-06], ['XVECLEN', 3.4019391052900155e-06], ['XVECEXP', 3.4019391052900155e-06], ['e.cstore.set_rtx', 3.4019391052900155e-06], ['reg_referenced_p', 3.4019391052900155e-06], ['x))', 3.4019391052900155e-06], ['negc)', 3.4019391052900155e-06], ['(modified_in_p', 3.4019391052900155e-06], ['!(reg_dead_after_insn', 3.4019391052900155e-06], ['e.cstore.insn)))', 3.4019391052900155e-06], ['*prev_insn', 3.4019391052900155e-06], ['e.cstore.insn;', 3.4019391052900155e-06], ['e.cstore_reg_reg_copies.rbegin', 3.4019391052900155e-06], ['e.cstore_reg_reg_copies.rend', 3.4019391052900155e-06], ['die\\n");', 3.4019391052900155e-06], ['prev_insn,', 3.4019391052900155e-06], ['used\\n",', 3.4019391052900155e-06], ['prev_insn', 3.4019391052900155e-06], ['i->insn;', 3.4019391052900155e-06], ['cbranch,', 3.4019391052900155e-06], ['recent', 3.4019391052900155e-06], ['e.cstore_reg_reg_copies.empty', 3.4019391052900155e-06], ['e.cstore.set_dst', 3.4019391052900155e-06], ['e.cstore_reg_reg_copies.front', 3.4019391052900155e-06], ['().set_dst', 3.4019391052900155e-06], ['"after', 3.4019391052900155e-06], ['trace.setcc.insn\\n",', 3.4019391052900155e-06], ['(cstore_dst));', 3.4019391052900155e-06], ['dies.', 3.4019391052900155e-06], ['(i.e.', 3.4019391052900155e-06], ['copies)', 3.4019391052900155e-06], ['trace.setcc.insn);', 3.4019391052900155e-06], ['(cstore_dst_use_count', 3.4019391052900155e-06], ['places\\n",', 3.4019391052900155e-06], ['(cstore_dst),', 3.4019391052900155e-06], ['sh_treg_combine::can_remove_comparison', 3.4019391052900155e-06], ['cbranch_trace&/*', 3.4019391052900155e-06], ['trace*/)', 3.4019391052900155e-06], ['cstore,', 3.4019391052900155e-06], ['e.setcc.insn,', 3.4019391052900155e-06], ['(e.setcc.insn);', 3.4019391052900155e-06], ['otherwise\\n");', 3.4019391052900155e-06], ['!reg_unused_after_insn', 3.4019391052900155e-06], ['afterwards\\n");', 3.4019391052900155e-06], ['"shll".', 3.4019391052900155e-06], ['(multiple_sets', 3.4019391052900155e-06], ['(e.setcc.insn))', 3.4019391052900155e-06], ['set\\n");', 3.4019391052900155e-06], ['sh_treg_combine::make_not_reg_insn', 3.4019391052900155e-06], ['src_reg,', 3.4019391052900155e-06], ['const0_rtx)));', 3.4019391052900155e-06], ['(dst_reg,', 3.4019391052900155e-06], ['(gen_lowpart', 3.4019391052900155e-06], ['(gen_highpart', 3.4019391052900155e-06], ['sh_treg_combine::make_inv_ccreg_insn', 3.4019391052900155e-06], ['(XOR,', 3.4019391052900155e-06], ['(m_ccreg),', 3.4019391052900155e-06], ['m_ccreg,', 3.4019391052900155e-06], ['const1_rtx)));', 3.4019391052900155e-06], ['sh_treg_combine::touched_insn', 3.4019391052900155e-06], ['m_touched_insns.push_back', 3.4019391052900155e-06], ['sh_treg_combine::can_combine_comparisons', 3.4019391052900155e-06], ['x_op0', 3.4019391052900155e-06], ['x_op1', 3.4019391052900155e-06], ['y_op0', 3.4019391052900155e-06], ['y_op1', 3.4019391052900155e-06], ['!REG_P', 3.4019391052900155e-06], ['(x_op1))', 3.4019391052900155e-06], ['(y_op1)', 3.4019391052900155e-06], ['(x_op1)', 3.4019391052900155e-06], ['(y_op1);', 3.4019391052900155e-06], ['(x_op1,', 3.4019391052900155e-06], ['y_op1);', 3.4019391052900155e-06], ['sh_treg_combine::can_extend_ccreg_usage', 3.4019391052900155e-06], ['insins', 3.4019391052900155e-06], ['setcc,', 3.4019391052900155e-06], ["trace.cbranch_insn's", 3.4019391052900155e-06], ['!is_adjacent_bb', 3.4019391052900155e-06], ['(e.bb,', 3.4019391052900155e-06], ['adjacent\\n",', 3.4019391052900155e-06], ['e.bb->index,', 3.4019391052900155e-06], ['(e.cstore.empty', 3.4019391052900155e-06], ['e.cstore.insn', 3.4019391052900155e-06], ['"and', 3.4019391052900155e-06], ['trace.setcc.insn");', 3.4019391052900155e-06], ['(e.bb))))', 3.4019391052900155e-06], ['e.bb->index);', 3.4019391052900155e-06], ['())),', 3.4019391052900155e-06], ['sh_treg_combine::try_invert_branch_condition', 3.4019391052900155e-06], ['("inverting', 3.4019391052900155e-06], ['trace.branch_condition_rtx_ref', 3.4019391052900155e-06], ['rev_cmp_code', 3.4019391052900155e-06], ['trace.cbranch_insn);', 3.4019391052900155e-06], ['(rev_cmp_code', 3.4019391052900155e-06], ['UNKNOWN)', 3.4019391052900155e-06], ['"reversed_comparison_code', 3.4019391052900155e-06], ['UNKNOWN\\n");', 3.4019391052900155e-06], ['validate_change', 3.4019391052900155e-06], ['(trace.cbranch_insn,', 3.4019391052900155e-06], ['&comp,', 3.4019391052900155e-06], ['(rev_cmp_code,', 3.4019391052900155e-06], ['(comp),', 3.4019391052900155e-06], ['(verify_changes', 3.4019391052900155e-06], ['(num_validated_changes', 3.4019391052900155e-06], ['confirm_change_group', 3.4019391052900155e-06], ['"verify_changed', 3.4019391052900155e-06], ['failed\\n");', 3.4019391052900155e-06], ['(trace.cbranch_insn);', 3.4019391052900155e-06], ['sh_treg_combine::try_combine_comparisons', 3.4019391052900155e-06], ['("\\ntry_combine_comparisons\\n");', 3.4019391052900155e-06], ['pseudos.', 3.4019391052900155e-06], ['(!can_create_pseudo_p', 3.4019391052900155e-06], ['pseudos\\n");', 3.4019391052900155e-06], ['ccset', 3.4019391052900155e-06], ['i_empty_count', 3.4019391052900155e-06], ['i->setcc.empty', 3.4019391052900155e-06], ['pair\\n");', 3.4019391052900155e-06], ['other_comp', 3.4019391052900155e-06], ['i->comparison_rtx', 3.4019391052900155e-06], ['(!COMPARISON_P', 3.4019391052900155e-06], ['(other_comp))', 3.4019391052900155e-06], ['("setcc', 3.4019391052900155e-06], ['comparison:\\n");', 3.4019391052900155e-06], ['(other_comp);', 3.4019391052900155e-06], ['(comp_insn', 3.4019391052900155e-06], ['other_comp;', 3.4019391052900155e-06], ['i->setcc.insn;', 3.4019391052900155e-06], ['(!can_combine_comparisons', 3.4019391052900155e-06], ['other_comp))', 3.4019391052900155e-06], ['!can_remove_comparison', 3.4019391052900155e-06], ['prohibits', 3.4019391052900155e-06], ['div0s', 3.4019391052900155e-06], ['(lt:SI', 3.4019391052900155e-06], ['(reg:SI)', 3.4019391052900155e-06], ['(reg:SI)))', 3.4019391052900155e-06], ['("comparison', 3.4019391052900155e-06], ['0\\n");', 3.4019391052900155e-06], ['"\\nis', 3.4019391052900155e-06], ['reg\\n");', 3.4019391052900155e-06], ['comp_op0', 3.4019391052900155e-06], ['comp_op1', 3.4019391052900155e-06], ['eliminated', 3.4019391052900155e-06], ['inverted.', 3.4019391052900155e-06], ['canonicalized.', 3.4019391052900155e-06], ['though,', 3.4019391052900155e-06], ['nott', 3.4019391052900155e-06], ['(inv_cstore_count', 3.4019391052900155e-06], ['(make_not_reg_insn', 3.4019391052900155e-06], ['comp_op0)', 3.4019391052900155e-06], ['"make_not_reg_insn', 3.4019391052900155e-06], ['failed.\\n");', 3.4019391052900155e-06], ['!is_cmp_eq_zero', 3.4019391052900155e-06], ['0))\\n");', 3.4019391052900155e-06], ['patterns,', 3.4019391052900155e-06], ['SH,', 3.4019391052900155e-06], ['FPSCR.', 3.4019391052900155e-06], ['("installing', 3.4019391052900155e-06], ['common_comp_pat', 3.4019391052900155e-06], ['(comp_insn));', 3.4019391052900155e-06], ['common_comp', 3.4019391052900155e-06], ['const_cast<rtx>', 3.4019391052900155e-06], ['(set_of', 3.4019391052900155e-06], ['common_comp_pat));', 3.4019391052900155e-06], ['(common_comp', 3.4019391052900155e-06], ['comp_op0;', 3.4019391052900155e-06], ['comp_op1;', 3.4019391052900155e-06], ['(common_comp_pat);', 3.4019391052900155e-06], ['common_comp_insn', 3.4019391052900155e-06], ['(common_comp_pat,', 3.4019391052900155e-06], ['trace.setcc.insn));', 3.4019391052900155e-06], ['(comp_op0))', 3.4019391052900155e-06], ['(comp_op0));', 3.4019391052900155e-06], ['(comp_op1));', 3.4019391052900155e-06], ['moves', 3.4019391052900155e-06], ['i_comp_op0', 3.4019391052900155e-06], ['i_comp_op1', 3.4019391052900155e-06], ['i_comp_op0),', 3.4019391052900155e-06], ['const_int', 3.4019391052900155e-06], ['(comp_op1,', 3.4019391052900155e-06], ['i_comp_op1),', 3.4019391052900155e-06], ['(reg_dead_after_insn', 3.4019391052900155e-06], ['(i_comp_op1,', 3.4019391052900155e-06], ['(i_comp_op1));', 3.4019391052900155e-06], ['i_comp_op0);', 3.4019391052900155e-06], ['sh_treg_combine::try_eliminate_cstores', 3.4019391052900155e-06], ['("\\ntry_eliminate_cstores\\n");', 3.4019391052900155e-06], ['(!can_extend_ccreg_usage', 3.4019391052900155e-06], ['modified_in_p', 3.4019391052900155e-06], ['i->cstore.insn))', 3.4019391052900155e-06], ['"cstore', 3.4019391052900155e-06], ['(cstore_count', 3.4019391052900155e-06], ['make_inv_ccreg_insn', 3.4019391052900155e-06], ['(recog_memoized', 3.4019391052900155e-06], ['("failed', 3.4019391052900155e-06], ['"\\naborting\\n");', 3.4019391052900155e-06], ['Eliminate', 3.4019391052900155e-06], ['(make_inv_ccreg_insn', 3.4019391052900155e-06], ['i->cstore.insn));', 3.4019391052900155e-06], ['(can_remove_cstore', 3.4019391052900155e-06], ['cbranch\\n");', 3.4019391052900155e-06], ['sh_treg_combine::try_optimize_cbranch', 3.4019391052900155e-06], ['("\\n\\n--------------------------------------\\n");', 3.4019391052900155e-06], ['trace.cbranch_type', 3.4019391052900155e-06], ['branch_if_true)', 3.4019391052900155e-06], ['true\\n");', 3.4019391052900155e-06], ['branch_if_false)', 3.4019391052900155e-06], ['false\\n");', 3.4019391052900155e-06], ['(reg', 3.4019391052900155e-06], ['ccreg)', 3.4019391052900155e-06], ['("could', 3.4019391052900155e-06], ['BB\\n");', 3.4019391052900155e-06], ['(!is_cmp_eq_zero', 3.4019391052900155e-06], ['!is_inverted_ccreg', 3.4019391052900155e-06], ['("unsupported', 3.4019391052900155e-06], ['BB:', 3.4019391052900155e-06], ['trace_reg', 3.4019391052900155e-06], ['ccreg:\\n");', 3.4019391052900155e-06], ['trace.setcc.insn,', 3.4019391052900155e-06], ['trace.cbranch_insn))', 3.4019391052900155e-06], ['("ccreg', 3.4019391052900155e-06], ['(trace.setcc.insn)))', 3.4019391052900155e-06], ['("\\nbecause', 3.4019391052900155e-06], ['(try_invert_branch_condition', 3.4019391052900155e-06], ['formed,', 3.4019391052900155e-06], ['register,', 3.4019391052900155e-06], ['obtained.', 3.4019391052900155e-06], ['("\\ntracing', 3.4019391052900155e-06], ['(trace_reg);', 3.4019391052900155e-06], ['(trace.setcc.insn),', 3.4019391052900155e-06], ['other_set_found)', 3.4019391052900155e-06], ['("other', 3.4019391052900155e-06], ['set_not_found)', 3.4019391052900155e-06], ['()->preds);', 3.4019391052900155e-06], ['(e->src));', 3.4019391052900155e-06], ['set_found)', 3.4019391052900155e-06], ['("\\ncbranch', 3.4019391052900155e-06], ['summary:\\n");', 3.4019391052900155e-06], ['(!i->setcc.empty', 3.4019391052900155e-06], ['(i->setcc.set_rtx);', 3.4019391052900155e-06], ['(!i->cstore.empty', 3.4019391052900155e-06], ['(i->cstore.set_rtx);', 3.4019391052900155e-06], ['i->cstore_reg_reg_copies.rbegin', 3.4019391052900155e-06], ['i->cstore_reg_reg_copies.rend', 3.4019391052900155e-06], ['(j->set_rtx);', 3.4019391052900155e-06], ['(trace.setcc.set_rtx);', 3.4019391052900155e-06], ['(trace.cbranch_insn));', 3.4019391052900155e-06], ['i->bb', 3.4019391052900155e-06], ['aborting.\\n",', 3.4019391052900155e-06], ['probabilities', 3.4019391052900155e-06], ['("cstore', 3.4019391052900155e-06], ['inv_cstore_count);', 3.4019391052900155e-06], ['(try_combine_comparisons', 3.4019391052900155e-06], ['dominating_cstore))', 3.4019391052900155e-06], ['sh_treg_combine::gate', 3.4019391052900155e-06], ['sh_treg_combine::execute', 3.4019391052900155e-06], ['rtx_insn*', 3.4019391052900155e-06], ['(bb)))', 3.4019391052900155e-06], ['already,', 3.4019391052900155e-06], ['ourselves', 3.4019391052900155e-06], ['Multi-word', 3.4019391052900155e-06], ['insns)', 3.4019391052900155e-06], ['though.', 3.4019391052900155e-06], ['(m_split_insns)', 3.4019391052900155e-06], ['(std::vector<rtx>::const_iterator', 3.4019391052900155e-06], ['m_touched_insns.begin', 3.4019391052900155e-06], ['m_touched_insns.end', 3.4019391052900155e-06], ['("trying', 3.4019391052900155e-06], ['try_split', 3.4019391052900155e-06], ['safe_as_a', 3.4019391052900155e-06], ['<rtx_insn', 3.4019391052900155e-06], ['m_touched_insns.clear', 3.4019391052900155e-06], ['make_pass_sh_treg_combine', 3.4019391052900155e-06], ['generator', 3.4019391052900155e-06], ['tile.', 3.4019391052900155e-06], ['(walt@tilera.com)', 3.4019391052900155e-06], ['efficiently.', 3.4019391052900155e-06], ['c++', 3.4019391052900155e-06], ['-DTILEPRO,', 3.4019391052900155e-06], ['TILEPro;', 3.4019391052900155e-06], ['TILE-Gx.', 3.4019391052900155e-06], ['Running', 3.4019391052900155e-06], ['r2,r1,r1', 3.4019391052900155e-06], ['r3,r2,r2', 3.4019391052900155e-06], ['25.', 3.4019391052900155e-06], ['cheapest', 3.4019391052900155e-06], ['"Cheapest"', 3.4019391052900155e-06], ['theoretical', 3.4019391052900155e-06], ['"prefer"', 3.4019391052900155e-06], ['infinitesimally', 3.4019391052900155e-06], ['canonical).', 3.4019391052900155e-06], ['binary-search', 3.4019391052900155e-06], ['pruned', 3.4019391052900155e-06], ['criteria', 3.4019391052900155e-06], ['reasonable.', 3.4019391052900155e-06], ['__STDC_LIMIT_MACROS', 3.4019391052900155e-06], ['<stdint.h>', 3.4019391052900155e-06], ['<map>', 3.4019391052900155e-06], ['"tilepro"', 3.4019391052900155e-06], ['"tilegx"', 3.4019391052900155e-06], ['Longest', 3.4019391052900155e-06], ['stupid', 3.4019391052900155e-06], ['grows', 3.4019391052900155e-06], ['DAG', 3.4019391052900155e-06], ['mix.', 3.4019391052900155e-06], ['MAX_SUBEXPRS', 3.4019391052900155e-06], ['MAX_INSTRUCTIONS)', 3.4019391052900155e-06], ['MIN(x,', 3.4019391052900155e-06], ['MAX(x,', 3.4019391052900155e-06], ['unary.', 3.4019391052900155e-06], ['(*unary_op_func)', 3.4019391052900155e-06], ['(MUL_TYPE);', 3.4019391052900155e-06], ['(*binary_op_func)', 3.4019391052900155e-06], ['(MUL_TYPE,', 3.4019391052900155e-06], ['MUL_TYPE);', 3.4019391052900155e-06], ["'add", 3.4019391052900155e-06], ["registers'", 3.4019391052900155e-06], ["'left-shift", 3.4019391052900155e-06], ["7'.", 3.4019391052900155e-06], ["'unary'", 3.4019391052900155e-06], ['rhs_if_unary,', 3.4019391052900155e-06], ['(rhs_if_unary)', 3.4019391052900155e-06], ['is_unary', 3.4019391052900155e-06], ['CODE_FOR_addsi3.', 3.4019391052900155e-06], ['*m_pattern;', 3.4019391052900155e-06], ['*m_name;', 3.4019391052900155e-06], ['compressed', 3.4019391052900155e-06], ['decoded', 3.4019391052900155e-06], ['machine-generated', 3.4019391052900155e-06], ['multiply_insn_seq_decode_opcode', 3.4019391052900155e-06], ['m_top_index;', 3.4019391052900155e-06], ['m_unary_func;', 3.4019391052900155e-06], ['Binary', 3.4019391052900155e-06], ['m_binary_func;', 3.4019391052900155e-06], ['Higher', 3.4019391052900155e-06], ['worse.', 3.4019391052900155e-06], ['m_cost;', 3.4019391052900155e-06], ['unary;', 3.4019391052900155e-06], ['m_rhs_if_unary;', 3.4019391052900155e-06], ['m_op', 3.4019391052900155e-06], ['m_lhs', 3.4019391052900155e-06], ['m_rhs', 3.4019391052900155e-06], ['m_produced_val', 3.4019391052900155e-06], ['m_critical_path_length', 3.4019391052900155e-06], ['*m_op;', 3.4019391052900155e-06], ['m_lhs;', 3.4019391052900155e-06], [',this', 3.4019391052900155e-06], ['ops,', 3.4019391052900155e-06], ['count).', 3.4019391052900155e-06], ['m_rhs;', 3.4019391052900155e-06], ['((x', 3.4019391052900155e-06], ['x),', 3.4019391052900155e-06], ['33.', 3.4019391052900155e-06], ['m_produced_val;', 3.4019391052900155e-06], ['root,', 3.4019391052900155e-06], ['cycles', 3.4019391052900155e-06], ['m_critical_path_length;', 3.4019391052900155e-06], ['s1a', 3.4019391052900155e-06], ['s3a', 3.4019391052900155e-06], ['SHIFT(count)', 3.4019391052900155e-06], ['shift##count(MUL_TYPE', 3.4019391052900155e-06], ['(5);', 3.4019391052900155e-06], ['(6);', 3.4019391052900155e-06], ['(9);', 3.4019391052900155e-06], ['(10);', 3.4019391052900155e-06], ['(11);', 3.4019391052900155e-06], ['(12);', 3.4019391052900155e-06], ['(14);', 3.4019391052900155e-06], ['(15);', 3.4019391052900155e-06], ['(17);', 3.4019391052900155e-06], ['(18);', 3.4019391052900155e-06], ['(19);', 3.4019391052900155e-06], ['(20);', 3.4019391052900155e-06], ['(21);', 3.4019391052900155e-06], ['(22);', 3.4019391052900155e-06], ['(23);', 3.4019391052900155e-06], ['(24);', 3.4019391052900155e-06], ['(25);', 3.4019391052900155e-06], ['(26);', 3.4019391052900155e-06], ['(27);', 3.4019391052900155e-06], ['(28);', 3.4019391052900155e-06], ['(29);', 3.4019391052900155e-06], ['(30);', 3.4019391052900155e-06], ['(31);', 3.4019391052900155e-06], ['(33);', 3.4019391052900155e-06], ['(34);', 3.4019391052900155e-06], ['(35);', 3.4019391052900155e-06], ['(36);', 3.4019391052900155e-06], ['(37);', 3.4019391052900155e-06], ['(38);', 3.4019391052900155e-06], ['(39);', 3.4019391052900155e-06], ['(40);', 3.4019391052900155e-06], ['(41);', 3.4019391052900155e-06], ['(43);', 3.4019391052900155e-06], ['(44);', 3.4019391052900155e-06], ['(45);', 3.4019391052900155e-06], ['(46);', 3.4019391052900155e-06], ['(47);', 3.4019391052900155e-06], ['(48);', 3.4019391052900155e-06], ['(49);', 3.4019391052900155e-06], ['(50);', 3.4019391052900155e-06], ['(51);', 3.4019391052900155e-06], ['(52);', 3.4019391052900155e-06], ['(53);', 3.4019391052900155e-06], ['(54);', 3.4019391052900155e-06], ['(55);', 3.4019391052900155e-06], ['(56);', 3.4019391052900155e-06], ['(57);', 3.4019391052900155e-06], ['(58);', 3.4019391052900155e-06], ['(59);', 3.4019391052900155e-06], ['(60);', 3.4019391052900155e-06], ['(61);', 3.4019391052900155e-06], ['(62);', 3.4019391052900155e-06], ['(63);', 3.4019391052900155e-06], ['("CODE_FOR_addsi3",', 3.4019391052900155e-06], ['("CODE_FOR_subsi3",', 3.4019391052900155e-06], ['("CODE_FOR_insn_s1a",', 3.4019391052900155e-06], ['"s1a",', 3.4019391052900155e-06], ['("CODE_FOR_insn_s2a",', 3.4019391052900155e-06], ['"s2a",', 3.4019391052900155e-06], ['("CODE_FOR_insn_s3a",', 3.4019391052900155e-06], ['"s3a",', 3.4019391052900155e-06], ['1031)', 3.4019391052900155e-06], ['("CODE_FOR_adddi3",', 3.4019391052900155e-06], ['1070),', 3.4019391052900155e-06], ['("CODE_FOR_subdi3",', 3.4019391052900155e-06], ['1071),', 3.4019391052900155e-06], ['("CODE_FOR_insn_shl1add",', 3.4019391052900155e-06], ['"shl1add",', 3.4019391052900155e-06], ['1072),', 3.4019391052900155e-06], ['("CODE_FOR_insn_shl2add",', 3.4019391052900155e-06], ['"shl2add",', 3.4019391052900155e-06], ['1073),', 3.4019391052900155e-06], ['("CODE_FOR_insn_shl3add",', 3.4019391052900155e-06], ['"shl3add",', 3.4019391052900155e-06], ['1074),', 3.4019391052900155e-06], ['1031),', 3.4019391052900155e-06], ['shift32,', 3.4019391052900155e-06], ['1032),', 3.4019391052900155e-06], ['shift33,', 3.4019391052900155e-06], ['1033),', 3.4019391052900155e-06], ['shift34,', 3.4019391052900155e-06], ['34,', 3.4019391052900155e-06], ['1034),', 3.4019391052900155e-06], ['shift35,', 3.4019391052900155e-06], ['35,', 3.4019391052900155e-06], ['1035),', 3.4019391052900155e-06], ['shift36,', 3.4019391052900155e-06], ['36,', 3.4019391052900155e-06], ['1036),', 3.4019391052900155e-06], ['shift37,', 3.4019391052900155e-06], ['37,', 3.4019391052900155e-06], ['1037),', 3.4019391052900155e-06], ['shift38,', 3.4019391052900155e-06], ['38,', 3.4019391052900155e-06], ['1038),', 3.4019391052900155e-06], ['shift39,', 3.4019391052900155e-06], ['39,', 3.4019391052900155e-06], ['1039),', 3.4019391052900155e-06], ['shift40,', 3.4019391052900155e-06], ['40,', 3.4019391052900155e-06], ['shift41,', 3.4019391052900155e-06], ['41,', 3.4019391052900155e-06], ['shift42,', 3.4019391052900155e-06], ['42,', 3.4019391052900155e-06], ['shift43,', 3.4019391052900155e-06], ['43,', 3.4019391052900155e-06], ['shift44,', 3.4019391052900155e-06], ['44,', 3.4019391052900155e-06], ['shift45,', 3.4019391052900155e-06], ['45,', 3.4019391052900155e-06], ['1045),', 3.4019391052900155e-06], ['shift46,', 3.4019391052900155e-06], ['46,', 3.4019391052900155e-06], ['1046),', 3.4019391052900155e-06], ['shift47,', 3.4019391052900155e-06], ['47,', 3.4019391052900155e-06], ['1047),', 3.4019391052900155e-06], ['shift48,', 3.4019391052900155e-06], ['48,', 3.4019391052900155e-06], ['1048),', 3.4019391052900155e-06], ['shift49,', 3.4019391052900155e-06], ['49,', 3.4019391052900155e-06], ['1049),', 3.4019391052900155e-06], ['shift50,', 3.4019391052900155e-06], ['50,', 3.4019391052900155e-06], ['1050),', 3.4019391052900155e-06], ['shift51,', 3.4019391052900155e-06], ['51,', 3.4019391052900155e-06], ['1051),', 3.4019391052900155e-06], ['shift52,', 3.4019391052900155e-06], ['52,', 3.4019391052900155e-06], ['1052),', 3.4019391052900155e-06], ['shift53,', 3.4019391052900155e-06], ['53,', 3.4019391052900155e-06], ['1053),', 3.4019391052900155e-06], ['shift54,', 3.4019391052900155e-06], ['54,', 3.4019391052900155e-06], ['1054),', 3.4019391052900155e-06], ['shift55,', 3.4019391052900155e-06], ['55,', 3.4019391052900155e-06], ['1055),', 3.4019391052900155e-06], ['shift56,', 3.4019391052900155e-06], ['56,', 3.4019391052900155e-06], ['1056),', 3.4019391052900155e-06], ['shift57,', 3.4019391052900155e-06], ['57,', 3.4019391052900155e-06], ['1057),', 3.4019391052900155e-06], ['shift58,', 3.4019391052900155e-06], ['58,', 3.4019391052900155e-06], ['1058),', 3.4019391052900155e-06], ['shift59,', 3.4019391052900155e-06], ['59,', 3.4019391052900155e-06], ['1059),', 3.4019391052900155e-06], ['shift60,', 3.4019391052900155e-06], ['60,', 3.4019391052900155e-06], ['1060),', 3.4019391052900155e-06], ['shift61,', 3.4019391052900155e-06], ['61,', 3.4019391052900155e-06], ['1061),', 3.4019391052900155e-06], ['shift62,', 3.4019391052900155e-06], ['62,', 3.4019391052900155e-06], ['1062),', 3.4019391052900155e-06], ['shift63,', 3.4019391052900155e-06], ['1063)', 3.4019391052900155e-06], ['m_num_vals', 3.4019391052900155e-06], ['m_exprs[0].m_produced_val', 3.4019391052900155e-06], ['m_exprs[1].m_produced_val', 3.4019391052900155e-06], ['copy_technique_from', 3.4019391052900155e-06], ['cost.', 3.4019391052900155e-06], ['m_exprs[MAX_SUBEXPRS];', 3.4019391052900155e-06], ['m_exprs[j].m_op->m_cost;', 3.4019391052900155e-06], ['m_exprs[m_num_vals', 3.4019391052900155e-06], ['1].m_critical_path_length', 3.4019391052900155e-06], ['1000000;', 3.4019391052900155e-06], ['std::map<MUL_TYPE,', 3.4019391052900155e-06], ['ExpressionTreeMap;', 3.4019391052900155e-06], ['&best_solution)', 3.4019391052900155e-06], ['s.m_num_vals;', 3.4019391052900155e-06], ['(num_vals', 3.4019391052900155e-06], ['MAX_SUBEXPRS)', 3.4019391052900155e-06], ['Grow', 3.4019391052900155e-06], ['prev_op', 3.4019391052900155e-06], ['s.m_exprs[num_vals', 3.4019391052900155e-06], ['1].m_op;', 3.4019391052900155e-06], ['prev_top_index', 3.4019391052900155e-06], ['(prev_op', 3.4019391052900155e-06], ['prev_op->m_top_index', 3.4019391052900155e-06], ['f++)', 3.4019391052900155e-06], ['&ops[f];', 3.4019391052900155e-06], ['sub)', 3.4019391052900155e-06], ['trick', 3.4019391052900155e-06], ['j_end', 3.4019391052900155e-06], ['j_end;', 3.4019391052900155e-06], ['uses_prev_value', 3.4019391052900155e-06], ['(!op->is_unary', 3.4019391052900155e-06], ['(!uses_prev_value)', 3.4019391052900155e-06], ['efficiency,', 3.4019391052900155e-06], ['prune', 3.4019391052900155e-06], ['orderings.', 3.4019391052900155e-06], ['preceding', 3.4019391052900155e-06], ["instruction's,", 3.4019391052900155e-06], ['non-canonical', 3.4019391052900155e-06], ['pursue', 3.4019391052900155e-06], ['(op->m_top_index', 3.4019391052900155e-06], ['prev_top_index)', 3.4019391052900155e-06], ['(op->is_unary', 3.4019391052900155e-06], ['op->m_unary_func', 3.4019391052900155e-06], ['(s.m_exprs[i].m_produced_val);', 3.4019391052900155e-06], ['(s.m_exprs[i].m_produced_val,', 3.4019391052900155e-06], ['s.m_exprs[j].m_produced_val);', 3.4019391052900155e-06], ['s.m_exprs[j].m_produced_val)', 3.4019391052900155e-06], ['(duplicate)', 3.4019391052900155e-06], ['&s.m_exprs[num_vals];', 3.4019391052900155e-06], ['e->m_op', 3.4019391052900155e-06], ['e->m_lhs', 3.4019391052900155e-06], ['e->m_rhs', 3.4019391052900155e-06], ['op->m_rhs_if_unary', 3.4019391052900155e-06], ['e->m_produced_val', 3.4019391052900155e-06], ['e->m_critical_path_length', 3.4019391052900155e-06], ['(s.m_exprs[i].m_critical_path_length,', 3.4019391052900155e-06], ['s.m_exprs[j].m_critical_path_length);', 3.4019391052900155e-06], ['(best_solution.find', 3.4019391052900155e-06], ['(n));', 3.4019391052900155e-06], ['(best', 3.4019391052900155e-06], ['(*best).second->cost', 3.4019391052900155e-06], ['s.cost', 3.4019391052900155e-06], ['best_solution[n]', 3.4019391052900155e-06], ['Recurse', 3.4019391052900155e-06], ['more.', 3.4019391052900155e-06], ['compact', 3.4019391052900155e-06], ['compactified', 3.4019391052900155e-06], ['next_index', 3.4019391052900155e-06], ['"end', 3.4019391052900155e-06], ['array".', 3.4019391052900155e-06], ['%s_multiply_insn_seq_decode_opcode[]', 3.4019391052900155e-06], ['{\\n"', 3.4019391052900155e-06], ['&ops[i];', 3.4019391052900155e-06], ['*old', 3.4019391052900155e-06], ['&ops[j];', 3.4019391052900155e-06], ['(old->m_pattern,', 3.4019391052900155e-06], ['op->m_pattern)', 3.4019391052900155e-06], ['old->m_top_index;', 3.4019391052900155e-06], ['(",\\n', 3.4019391052900155e-06], ['op->m_pattern);', 3.4019391052900155e-06], ['next_index++;', 3.4019391052900155e-06], ['op->m_top_index', 3.4019391052900155e-06], ['multiply_constants_used[]', 3.4019391052900155e-06], ['-11796480,', 3.4019391052900155e-06], ['-27439,', 3.4019391052900155e-06], ['-25148,', 3.4019391052900155e-06], ['-22820,', 3.4019391052900155e-06], ['-21709,', 3.4019391052900155e-06], ['-20995,', 3.4019391052900155e-06], ['-20284,', 3.4019391052900155e-06], ['-20239,', 3.4019391052900155e-06], ['-19595,', 3.4019391052900155e-06], ['-19447,', 3.4019391052900155e-06], ['-19183,', 3.4019391052900155e-06], ['-19165,', 3.4019391052900155e-06], ['-18730,', 3.4019391052900155e-06], ['-17828,', 3.4019391052900155e-06], ['-17799,', 3.4019391052900155e-06], ['-17237,', 3.4019391052900155e-06], ['-17036,', 3.4019391052900155e-06], ['-16549,', 3.4019391052900155e-06], ['-16423,', 3.4019391052900155e-06], ['-16294,', 3.4019391052900155e-06], ['-16244,', 3.4019391052900155e-06], ['-16069,', 3.4019391052900155e-06], ['-15137,', 3.4019391052900155e-06], ['-15083,', 3.4019391052900155e-06], ['-15038,', 3.4019391052900155e-06], ['-14924,', 3.4019391052900155e-06], ['-14905,', 3.4019391052900155e-06], ['-14752,', 3.4019391052900155e-06], ['-14731,', 3.4019391052900155e-06], ['-14529,', 3.4019391052900155e-06], ['-14273,', 3.4019391052900155e-06], ['-14090,', 3.4019391052900155e-06], ['-14084,', 3.4019391052900155e-06], ['-14043,', 3.4019391052900155e-06], ['-13850,', 3.4019391052900155e-06], ['-13802,', 3.4019391052900155e-06], ['-13631,', 3.4019391052900155e-06], ['-13455,', 3.4019391052900155e-06], ['-13275,', 3.4019391052900155e-06], ['-12879,', 3.4019391052900155e-06], ['-12700,', 3.4019391052900155e-06], ['-12534,', 3.4019391052900155e-06], ['-12399,', 3.4019391052900155e-06], ['-12131,', 3.4019391052900155e-06], ['-12112,', 3.4019391052900155e-06], ['-12054,', 3.4019391052900155e-06], ['-12019,', 3.4019391052900155e-06], ['-11759,', 3.4019391052900155e-06], ['-11585,', 3.4019391052900155e-06], ['-11467,', 3.4019391052900155e-06], ['-11395,', 3.4019391052900155e-06], ['-11295,', 3.4019391052900155e-06], ['-11248,', 3.4019391052900155e-06], ['-11148,', 3.4019391052900155e-06], ['-11116,', 3.4019391052900155e-06], ['-11086,', 3.4019391052900155e-06], ['-11059,', 3.4019391052900155e-06], ['-11018,', 3.4019391052900155e-06], ['-10811,', 3.4019391052900155e-06], ['-10538,', 3.4019391052900155e-06], ['-10258,', 3.4019391052900155e-06], ['-10217,', 3.4019391052900155e-06], ['-10033,', 3.4019391052900155e-06], ['-9766,', 3.4019391052900155e-06], ['-9754,', 3.4019391052900155e-06], ['-9534,', 3.4019391052900155e-06], ['-9527,', 3.4019391052900155e-06], ['-9467,', 3.4019391052900155e-06], ['-9262,', 3.4019391052900155e-06], ['-9232,', 3.4019391052900155e-06], ['-9222,', 3.4019391052900155e-06], ['-9198,', 3.4019391052900155e-06], ['-9191,', 3.4019391052900155e-06], ['-9113,', 3.4019391052900155e-06], ['-8825,', 3.4019391052900155e-06], ['-8756,', 3.4019391052900155e-06], ['-8697,', 3.4019391052900155e-06], ['-8693,', 3.4019391052900155e-06], ['-8565,', 3.4019391052900155e-06], ['-8342,', 3.4019391052900155e-06], ['-8208,', 3.4019391052900155e-06], ['-8200,', 3.4019391052900155e-06], ['-8170,', 3.4019391052900155e-06], ['-8102,', 3.4019391052900155e-06], ['-7770,', 3.4019391052900155e-06], ['-7678,', 3.4019391052900155e-06], ['-7562,', 3.4019391052900155e-06], ['-7376,', 3.4019391052900155e-06], ['-7373,', 3.4019391052900155e-06], ['-7221,', 3.4019391052900155e-06], ['-7121,', 3.4019391052900155e-06], ['-6835,', 3.4019391052900155e-06], ['-6810,', 3.4019391052900155e-06], ['-6626,', 3.4019391052900155e-06], ['-6581,', 3.4019391052900155e-06], ['-6461,', 3.4019391052900155e-06], ['-6278,', 3.4019391052900155e-06], ['-6263,', 3.4019391052900155e-06], ['-6163,', 3.4019391052900155e-06], ['-6029,', 3.4019391052900155e-06], ['-5816,', 3.4019391052900155e-06], ['-5540,', 3.4019391052900155e-06], ['-5461,', 3.4019391052900155e-06], ['-5384,', 3.4019391052900155e-06], ['-5329,', 3.4019391052900155e-06], ['-4985,', 3.4019391052900155e-06], ['-4926,', 3.4019391052900155e-06], ['-4815,', 3.4019391052900155e-06], ['-4788,', 3.4019391052900155e-06], ['-4758,', 3.4019391052900155e-06], ['-4433,', 3.4019391052900155e-06], ['-4229,', 3.4019391052900155e-06], ['-4209,', 3.4019391052900155e-06], ['-4176,', 3.4019391052900155e-06], ['-4104,', 3.4019391052900155e-06], ['-4095,', 3.4019391052900155e-06], ['-4078,', 3.4019391052900155e-06], ['-3941,', 3.4019391052900155e-06], ['-3818,', 3.4019391052900155e-06], ['-3600,', 3.4019391052900155e-06], ['-3474,', 3.4019391052900155e-06], ['-3314,', 3.4019391052900155e-06], ['-3264,', 3.4019391052900155e-06], ['-3196,', 3.4019391052900155e-06], ['-3072,', 3.4019391052900155e-06], ['-2912,', 3.4019391052900155e-06], ['-2836,', 3.4019391052900155e-06], ['-2773,', 3.4019391052900155e-06], ['-2269,', 3.4019391052900155e-06], ['-2184,', 3.4019391052900155e-06], ['-2100,', 3.4019391052900155e-06], ['-1730,', 3.4019391052900155e-06], ['-1512,', 3.4019391052900155e-06], ['-1500,', 3.4019391052900155e-06], ['-1396,', 3.4019391052900155e-06], ['-1344,', 3.4019391052900155e-06], ['-1312,', 3.4019391052900155e-06], ['-1297,', 3.4019391052900155e-06], ['-1059,', 3.4019391052900155e-06], ['-1058,', 3.4019391052900155e-06], ['1027,', 3.4019391052900155e-06], ['1049,', 3.4019391052900155e-06], ['1059,', 3.4019391052900155e-06], ['1100,', 3.4019391052900155e-06], ['1104,', 3.4019391052900155e-06], ['1108,', 3.4019391052900155e-06], ['1136,', 3.4019391052900155e-06], ['1200,', 3.4019391052900155e-06], ['1204,', 3.4019391052900155e-06], ['1242,', 3.4019391052900155e-06], ['1292,', 3.4019391052900155e-06], ['1304,', 3.4019391052900155e-06], ['1312,', 3.4019391052900155e-06], ['1320,', 3.4019391052900155e-06], ['1336,', 3.4019391052900155e-06], ['1344,', 3.4019391052900155e-06], ['1348,', 3.4019391052900155e-06], ['1360,', 3.4019391052900155e-06], ['1364,', 3.4019391052900155e-06], ['1395,', 3.4019391052900155e-06], ['1448,', 3.4019391052900155e-06], ['1460,', 3.4019391052900155e-06], ['1461,', 3.4019391052900155e-06], ['1472,', 3.4019391052900155e-06], ['1488,', 3.4019391052900155e-06], ['1500,', 3.4019391052900155e-06], ['1512,', 3.4019391052900155e-06], ['1568,', 3.4019391052900155e-06], ['1576,', 3.4019391052900155e-06], ['1649,', 3.4019391052900155e-06], ['1664,', 3.4019391052900155e-06], ['1684,', 3.4019391052900155e-06], ['1696,', 3.4019391052900155e-06], ['1744,', 3.4019391052900155e-06], ['1812,', 3.4019391052900155e-06], ['1822,', 3.4019391052900155e-06], ['1884,', 3.4019391052900155e-06], ['1963,', 3.4019391052900155e-06], ['1978,', 3.4019391052900155e-06], ['2000,', 3.4019391052900155e-06], ['2012,', 3.4019391052900155e-06], ['2014,', 3.4019391052900155e-06], ['2037,', 3.4019391052900155e-06], ['2039,', 3.4019391052900155e-06], ['2100,', 3.4019391052900155e-06], ['2139,', 3.4019391052900155e-06], ['2144,', 3.4019391052900155e-06], ['2184,', 3.4019391052900155e-06], ['2237,', 3.4019391052900155e-06], ['2260,', 3.4019391052900155e-06], ['2320,', 3.4019391052900155e-06], ['2408,', 3.4019391052900155e-06], ['2446,', 3.4019391052900155e-06], ['2447,', 3.4019391052900155e-06], ['2499,', 3.4019391052900155e-06], ['2531,', 3.4019391052900155e-06], ['2578,', 3.4019391052900155e-06], ['2592,', 3.4019391052900155e-06], ['2611,', 3.4019391052900155e-06], ['2633,', 3.4019391052900155e-06], ['2704,', 3.4019391052900155e-06], ['2730,', 3.4019391052900155e-06], ['2773,', 3.4019391052900155e-06], ['2880,', 3.4019391052900155e-06], ['2896,', 3.4019391052900155e-06], ['2998,', 3.4019391052900155e-06], ['3000,', 3.4019391052900155e-06], ['3001,', 3.4019391052900155e-06], ['3021,', 3.4019391052900155e-06], ['3079,', 3.4019391052900155e-06], ['3112,', 3.4019391052900155e-06], ['3150,', 3.4019391052900155e-06], ['3179,', 3.4019391052900155e-06], ['3192,', 3.4019391052900155e-06], ['3240,', 3.4019391052900155e-06], ['3264,', 3.4019391052900155e-06], ['3271,', 3.4019391052900155e-06], ['3283,', 3.4019391052900155e-06], ['3328,', 3.4019391052900155e-06], ['3363,', 3.4019391052900155e-06], ['3367,', 3.4019391052900155e-06], ['3453,', 3.4019391052900155e-06], ['3529,', 3.4019391052900155e-06], ['3570,', 3.4019391052900155e-06], ['3580,', 3.4019391052900155e-06], ['3600,', 3.4019391052900155e-06], ['3624,', 3.4019391052900155e-06], ['3707,', 3.4019391052900155e-06], ['3783,', 3.4019391052900155e-06], ['3826,', 3.4019391052900155e-06], ['3897,', 3.4019391052900155e-06], ['3941,', 3.4019391052900155e-06], ['3962,', 3.4019391052900155e-06], ['3989,', 3.4019391052900155e-06], ['4000,', 3.4019391052900155e-06], ['4025,', 3.4019391052900155e-06], ['4073,', 3.4019391052900155e-06], ['4093,', 3.4019391052900155e-06], ['4099,', 3.4019391052900155e-06], ['4108,', 3.4019391052900155e-06], ['4184,', 3.4019391052900155e-06], ['4209,', 3.4019391052900155e-06], ['4369,', 3.4019391052900155e-06], ['4376,', 3.4019391052900155e-06], ['4416,', 3.4019391052900155e-06], ['4433,', 3.4019391052900155e-06], ['4434,', 3.4019391052900155e-06], ['4482,', 3.4019391052900155e-06], ['4582,', 3.4019391052900155e-06], ['4712,', 3.4019391052900155e-06], ['4717,', 3.4019391052900155e-06], ['4813,', 3.4019391052900155e-06], ['4815,', 3.4019391052900155e-06], ['4864,', 3.4019391052900155e-06], ['5000,', 3.4019391052900155e-06], ['5027,', 3.4019391052900155e-06], ['5040,', 3.4019391052900155e-06], ['5091,', 3.4019391052900155e-06], ['5195,', 3.4019391052900155e-06], ['5243,', 3.4019391052900155e-06], ['5260,', 3.4019391052900155e-06], ['5285,', 3.4019391052900155e-06], ['5329,', 3.4019391052900155e-06], ['5331,', 3.4019391052900155e-06], ['5350,', 3.4019391052900155e-06], ['5361,', 3.4019391052900155e-06], ['5387,', 3.4019391052900155e-06], ['5461,', 3.4019391052900155e-06], ['5492,', 3.4019391052900155e-06], ['5529,', 3.4019391052900155e-06], ['5573,', 3.4019391052900155e-06], ['5793,', 3.4019391052900155e-06], ['5819,', 3.4019391052900155e-06], ['5915,', 3.4019391052900155e-06], ['5946,', 3.4019391052900155e-06], ['5992,', 3.4019391052900155e-06], ['6000,', 3.4019391052900155e-06], ['6164,', 3.4019391052900155e-06], ['6205,', 3.4019391052900155e-06], ['6262,', 3.4019391052900155e-06], ['6263,', 3.4019391052900155e-06], ['6269,', 3.4019391052900155e-06], ['6270,', 3.4019391052900155e-06], ['6387,', 3.4019391052900155e-06], ['6400,', 3.4019391052900155e-06], ['6406,', 3.4019391052900155e-06], ['6476,', 3.4019391052900155e-06], ['6541,', 3.4019391052900155e-06], ['6565,', 3.4019391052900155e-06], ['6568,', 3.4019391052900155e-06], ['6626,', 3.4019391052900155e-06], ['6656,', 3.4019391052900155e-06], ['6732,', 3.4019391052900155e-06], ['6810,', 3.4019391052900155e-06], ['6817,', 3.4019391052900155e-06], ['6859,', 3.4019391052900155e-06], ['7040,', 3.4019391052900155e-06], ['7053,', 3.4019391052900155e-06], ['7141,', 3.4019391052900155e-06], ['7169,', 3.4019391052900155e-06], ['7221,', 3.4019391052900155e-06], ['7223,', 3.4019391052900155e-06], ['7274,', 3.4019391052900155e-06], ['7282,', 3.4019391052900155e-06], ['7350,', 3.4019391052900155e-06], ['7369,', 3.4019391052900155e-06], ['7373,', 3.4019391052900155e-06], ['7442,', 3.4019391052900155e-06], ['7447,', 3.4019391052900155e-06], ['7471,', 3.4019391052900155e-06], ['7518,', 3.4019391052900155e-06], ['7542,', 3.4019391052900155e-06], ['7566,', 3.4019391052900155e-06], ['7587,', 3.4019391052900155e-06], ['7663,', 3.4019391052900155e-06], ['7678,', 3.4019391052900155e-06], ['7682,', 3.4019391052900155e-06], ['7748,', 3.4019391052900155e-06], ['7752,', 3.4019391052900155e-06], ['7791,', 3.4019391052900155e-06], ['8000,', 3.4019391052900155e-06], ['8026,', 3.4019391052900155e-06], ['8048,', 3.4019391052900155e-06], ['8170,', 3.4019391052900155e-06], ['8203,', 3.4019391052900155e-06], ['8204,', 3.4019391052900155e-06], ['8290,', 3.4019391052900155e-06], ['8368,', 3.4019391052900155e-06], ['8520,', 3.4019391052900155e-06], ['8640,', 3.4019391052900155e-06], ['8666,', 3.4019391052900155e-06], ['8672,', 3.4019391052900155e-06], ['8697,', 3.4019391052900155e-06], ['8716,', 3.4019391052900155e-06], ['8728,', 3.4019391052900155e-06], ['8756,', 3.4019391052900155e-06], ['8820,', 3.4019391052900155e-06], ['8875,', 3.4019391052900155e-06], ['8918,', 3.4019391052900155e-06], ['8956,', 3.4019391052900155e-06], ['9058,', 3.4019391052900155e-06], ['9154,', 3.4019391052900155e-06], ['9175,', 3.4019391052900155e-06], ['9191,', 3.4019391052900155e-06], ['9217,', 3.4019391052900155e-06], ['9262,', 3.4019391052900155e-06], ['9321,', 3.4019391052900155e-06], ['9373,', 3.4019391052900155e-06], ['9434,', 3.4019391052900155e-06], ['9465,', 3.4019391052900155e-06], ['9514,', 3.4019391052900155e-06], ['9534,', 3.4019391052900155e-06], ['9633,', 3.4019391052900155e-06], ['9746,', 3.4019391052900155e-06], ['9810,', 3.4019391052900155e-06], ['9850,', 3.4019391052900155e-06], ['9947,', 3.4019391052900155e-06], ['9973,', 3.4019391052900155e-06], ['10000,', 3.4019391052900155e-06], ['10009,', 3.4019391052900155e-06], ['10033,', 3.4019391052900155e-06], ['10055,', 3.4019391052900155e-06], ['10217,', 3.4019391052900155e-06], ['10248,', 3.4019391052900155e-06], ['10298,', 3.4019391052900155e-06], ['10310,', 3.4019391052900155e-06], ['10323,', 3.4019391052900155e-06], ['10368,', 3.4019391052900155e-06], ['10438,', 3.4019391052900155e-06], ['10456,', 3.4019391052900155e-06], ['10486,', 3.4019391052900155e-06], ['10538,', 3.4019391052900155e-06], ['10664,', 3.4019391052900155e-06], ['10695,', 3.4019391052900155e-06], ['10700,', 3.4019391052900155e-06], ['10703,', 3.4019391052900155e-06], ['10832,', 3.4019391052900155e-06], ['10887,', 3.4019391052900155e-06], ['10935,', 3.4019391052900155e-06], ['10958,', 3.4019391052900155e-06], ['11018,', 3.4019391052900155e-06], ['11059,', 3.4019391052900155e-06], ['11061,', 3.4019391052900155e-06], ['11086,', 3.4019391052900155e-06], ['11116,', 3.4019391052900155e-06], ['11148,', 3.4019391052900155e-06], ['11190,', 3.4019391052900155e-06], ['11249,', 3.4019391052900155e-06], ['11314,', 3.4019391052900155e-06], ['11332,', 3.4019391052900155e-06], ['11363,', 3.4019391052900155e-06], ['11409,', 3.4019391052900155e-06], ['11415,', 3.4019391052900155e-06], ['11443,', 3.4019391052900155e-06], ['11467,', 3.4019391052900155e-06], ['11512,', 3.4019391052900155e-06], ['11522,', 3.4019391052900155e-06], ['11529,', 3.4019391052900155e-06], ['11585,', 3.4019391052900155e-06], ['11759,', 3.4019391052900155e-06], ['11768,', 3.4019391052900155e-06], ['11795,', 3.4019391052900155e-06], ['11893,', 3.4019391052900155e-06], ['11997,', 3.4019391052900155e-06], ['12131,', 3.4019391052900155e-06], ['12299,', 3.4019391052900155e-06], ['12536,', 3.4019391052900155e-06], ['12543,', 3.4019391052900155e-06], ['12893,', 3.4019391052900155e-06], ['12945,', 3.4019391052900155e-06], ['12998,', 3.4019391052900155e-06], ['13109,', 3.4019391052900155e-06], ['13213,', 3.4019391052900155e-06], ['13685,', 3.4019391052900155e-06], ['13930,', 3.4019391052900155e-06], ['14023,', 3.4019391052900155e-06], ['14024,', 3.4019391052900155e-06], ['14271,', 3.4019391052900155e-06], ['14564,', 3.4019391052900155e-06], ['14647,', 3.4019391052900155e-06], ['15326,', 3.4019391052900155e-06], ['15850,', 3.4019391052900155e-06], ['15855,', 3.4019391052900155e-06], ['15929,', 3.4019391052900155e-06], ['16000,', 3.4019391052900155e-06], ['16154,', 3.4019391052900155e-06], ['16496,', 3.4019391052900155e-06], ['16807,', 3.4019391052900155e-06], ['16819,', 3.4019391052900155e-06], ['16984,', 3.4019391052900155e-06], ['17203,', 3.4019391052900155e-06], ['17223,', 3.4019391052900155e-06], ['17333,', 3.4019391052900155e-06], ['17760,', 3.4019391052900155e-06], ['17799,', 3.4019391052900155e-06], ['17837,', 3.4019391052900155e-06], ['18029,', 3.4019391052900155e-06], ['18068,', 3.4019391052900155e-06], ['18336,', 3.4019391052900155e-06], ['18515,', 3.4019391052900155e-06], ['19595,', 3.4019391052900155e-06], ['20017,', 3.4019391052900155e-06], ['20131,', 3.4019391052900155e-06], ['20862,', 3.4019391052900155e-06], ['20995,', 3.4019391052900155e-06], ['21709,', 3.4019391052900155e-06], ['22554,', 3.4019391052900155e-06], ['25000,', 3.4019391052900155e-06], ['25172,', 3.4019391052900155e-06], ['25600,', 3.4019391052900155e-06], ['25733,', 3.4019391052900155e-06], ['27439,', 3.4019391052900155e-06], ['38470,', 3.4019391052900155e-06], ['46802,', 3.4019391052900155e-06], ['50000,', 3.4019391052900155e-06], ['11796480,', 3.4019391052900155e-06], ['16843009,', 3.4019391052900155e-06], ['23592960,', 3.4019391052900155e-06], ['num_mult_constants_used', 3.4019391052900155e-06], ['(int)(sizeof', 3.4019391052900155e-06], ['multiply_constants_used[0]);', 3.4019391052900155e-06], ['multiply_constants_used[0]', 3.4019391052900155e-06], ['multiply_constants_avail[XSIZE];', 3.4019391052900155e-06], ['compare_constants', 3.4019391052900155e-06], ['(*(int*)key)', 3.4019391052900155e-06], ['*((int*)t);', 3.4019391052900155e-06], ['find_mult_constants_used', 3.4019391052900155e-06], ['(&multiplier,', 3.4019391052900155e-06], ['multiply_constants_used,', 3.4019391052900155e-06], ['num_mult_constants_used,', 3.4019391052900155e-06], ['multiply_constants_used[0],', 3.4019391052900155e-06], ['compare_constants);', 3.4019391052900155e-06], ['&s->m_exprs[i];', 3.4019391052900155e-06], ['(e->m_op', 3.4019391052900155e-06], ['n++;', 3.4019391052900155e-06], ['tilepro_emit', 3.4019391052900155e-06], ['-multiplier;', 3.4019391052900155e-06], ['(31', 3.4019391052900155e-06], ['__builtin_clz', 3.4019391052900155e-06], ['fewer', 3.4019391052900155e-06], ['(__builtin_popcount', 3.4019391052900155e-06], ['__builtin_popcount', 3.4019391052900155e-06], ['30)', 3.4019391052900155e-06], ['((find_mult_constants_used', 3.4019391052900155e-06], ['(multiplier)))', 3.4019391052900155e-06], ['tilegx_emit', 3.4019391052900155e-06], ['1LL', 3.4019391052900155e-06], ['(63', 3.4019391052900155e-06], ['__builtin_clzll', 3.4019391052900155e-06], ['(prev_pow2', 3.4019391052900155e-06], ['100)', 3.4019391052900155e-06], ['100)))', 3.4019391052900155e-06], ['(__builtin_popcountll', 3.4019391052900155e-06], ['__builtin_popcountll', 3.4019391052900155e-06], ['62)', 3.4019391052900155e-06], ['(find_mult_constants_used', 3.4019391052900155e-06], ['(multiplier))', 3.4019391052900155e-06], ['best_solution;', 3.4019391052900155e-06], ['TILEPro.\\n");', 3.4019391052900155e-06], ['TILE-Gx.\\n");', 3.4019391052900155e-06], ['Inc.\\n");', 3.4019391052900155e-06], ['(walt@tilera.com)\\n");', 3.4019391052900155e-06], ['GCC.\\n");', 3.4019391052900155e-06], ['it\\n");', 3.4019391052900155e-06], ['published\\n");', 3.4019391052900155e-06], ['your\\n");', 3.4019391052900155e-06], ['version.\\n");', 3.4019391052900155e-06], ['WITHOUT\\n");', 3.4019391052900155e-06], ['MERCHANTABILITY\\n");', 3.4019391052900155e-06], ['Public\\n");', 3.4019391052900155e-06], ['details.\\n");', 3.4019391052900155e-06], ['License\\n");', 3.4019391052900155e-06], ['see\\n");', 3.4019391052900155e-06], ['auto-generated', 3.4019391052900155e-06], ['gen-mul-tables.cc.\\n");', 3.4019391052900155e-06], ['\\"config.h\\"\\n");', 3.4019391052900155e-06], ['\\"system.h\\"\\n");', 3.4019391052900155e-06], ['\\"coretypes.h\\"\\n");', 3.4019391052900155e-06], ['\\"backend.h\\"\\n");', 3.4019391052900155e-06], ['\\"rtl.h\\"\\n");', 3.4019391052900155e-06], ['\\"expmed.h\\"\\n");', 3.4019391052900155e-06], ['\\"%s-multiply.h\\"\\n\\n",', 3.4019391052900155e-06], ['%s_multiply_insn_seq', 3.4019391052900155e-06], ['"%s_multiply_insn_seq_table[]', 3.4019391052900155e-06], ['{\\n",', 3.4019391052900155e-06], ['*comma_separator', 3.4019391052900155e-06], ['(best_solution.begin', 3.4019391052900155e-06], ['(*i).first;', 3.4019391052900155e-06], ['bogus', 3.4019391052900155e-06], ['(!tilepro_emit', 3.4019391052900155e-06], ['(!tilegx_emit', 3.4019391052900155e-06], ['comma_separator);', 3.4019391052900155e-06], ['INT32_MIN;', 3.4019391052900155e-06], ['INT64_MIN;', 3.4019391052900155e-06], ['int_min)', 3.4019391052900155e-06], ["C's", 3.4019391052900155e-06], ['woeful', 3.4019391052900155e-06], ['lack', 3.4019391052900155e-06], ['negation.', 3.4019391052900155e-06], ['INT_MIN', 3.4019391052900155e-06], ['yield', 3.4019391052900155e-06], ['&s->m_exprs[j];', 3.4019391052900155e-06], ['e->m_op;', 3.4019391052900155e-06], ['buf[1024];', 3.4019391052900155e-06], ['"%s{%d,', 3.4019391052900155e-06], ['%d,', 3.4019391052900155e-06], ['%d}%s",', 3.4019391052900155e-06], ['op->m_top_index,', 3.4019391052900155e-06], ['e->m_lhs,', 3.4019391052900155e-06], ['e->m_rhs,', 3.4019391052900155e-06], ['s->m_num_vals', 3.4019391052900155e-06], ['",");', 3.4019391052900155e-06], ['opnd0[10];', 3.4019391052900155e-06], ['(e->m_lhs)', 3.4019391052900155e-06], ['"r%d",', 3.4019391052900155e-06], ['e->m_lhs);', 3.4019391052900155e-06], ['"zero");', 3.4019391052900155e-06], ['("%s\\t\\t\\t/*', 3.4019391052900155e-06], ['r%d,', 3.4019391052900155e-06], ['%s%d', 3.4019391052900155e-06], ['*/\\n",', 3.4019391052900155e-06], ['op->m_name,', 3.4019391052900155e-06], ['"r",', 3.4019391052900155e-06], ['e->m_rhs);', 3.4019391052900155e-06], ['}");', 3.4019391052900155e-06], ['comma_separator', 3.4019391052900155e-06], ['",\\n";', 3.4019391052900155e-06], ['%s_multiply_insn_seq_table_size', 3.4019391052900155e-06], ['=\\n"', 3.4019391052900155e-06], ['%s_multiply_insn_seq_table\\n"', 3.4019391052900155e-06], ['%s_multiply_insn_seq_table[0]);\\n",', 3.4019391052900155e-06], ['EXIT_SUCCESS;', 3.4019391052900155e-06], ['pending', 3.4019391052900155e-06], ['*toplevel_array;', 3.4019391052900155e-06], ['*cur_group;', 3.4019391052900155e-06], ['*cur_children_array;', 3.4019391052900155e-06], ['LOC_RANGE.', 3.4019391052900155e-06], ['*loc_range,', 3.4019391052900155e-06], ['range_idx)', 3.4019391052900155e-06], ['caret_loc', 3.4019391052900155e-06], ['get_pure_location', 3.4019391052900155e-06], ['(caret_loc', 3.4019391052900155e-06], ['get_start', 3.4019391052900155e-06], ['finish_loc', 3.4019391052900155e-06], ['get_finish', 3.4019391052900155e-06], ['("caret",', 3.4019391052900155e-06], ['(caret_loc));', 3.4019391052900155e-06], ['(start_loc', 3.4019391052900155e-06], ['(finish_loc', 3.4019391052900155e-06], ['("finish",', 3.4019391052900155e-06], ['(finish_loc));', 3.4019391052900155e-06], ['(loc_range->m_label)', 3.4019391052900155e-06], ['label_text', 3.4019391052900155e-06], ['loc_range->m_label->get_text', 3.4019391052900155e-06], ['(range_idx);', 3.4019391052900155e-06], ['(text.m_buffer)', 3.4019391052900155e-06], ['("label",', 3.4019391052900155e-06], ['(text.m_buffer));', 3.4019391052900155e-06], ['text.maybe_free', 3.4019391052900155e-06], ['HINT.', 3.4019391052900155e-06], ['*hint)', 3.4019391052900155e-06], ['hint->get_start_loc', 3.4019391052900155e-06], ['next_loc', 3.4019391052900155e-06], ['hint->get_next_loc', 3.4019391052900155e-06], ['("next",', 3.4019391052900155e-06], ['(next_loc));', 3.4019391052900155e-06], ['("string",', 3.4019391052900155e-06], ['(hint->get_string', 3.4019391052900155e-06], ['fixit_obj;', 3.4019391052900155e-06], ['"begin_diagnostic"', 3.4019391052900155e-06], ['json_begin_diagnostic', 3.4019391052900155e-06], ['"end_diagnostic"', 3.4019391052900155e-06], ['DIAGNOSTIC,', 3.4019391052900155e-06], ['json_end_diagnostic', 3.4019391052900155e-06], ['*diagnostic,', 3.4019391052900155e-06], ['orig_diag_kind)', 3.4019391052900155e-06], ['*diag_obj', 3.4019391052900155e-06], ['"kind"', 3.4019391052900155e-06], ['diagnostic.', 3.4019391052900155e-06], ['diagnostic_kind_text[]', 3.4019391052900155e-06], ['DEFINE_DIAGNOSTIC_KIND(K,', 3.4019391052900155e-06], ['(T),', 3.4019391052900155e-06], ['"diagnostic.def"', 3.4019391052900155e-06], ['DEFINE_DIAGNOSTIC_KIND', 3.4019391052900155e-06], ['"must-not-happen"', 3.4019391052900155e-06], ['":', 3.4019391052900155e-06], ['".', 3.4019391052900155e-06], ['*kind_text', 3.4019391052900155e-06], ['diagnostic_kind_text[diagnostic->kind];', 3.4019391052900155e-06], ["':');", 3.4019391052900155e-06], ['*rstrip', 3.4019391052900155e-06], ['rstrip[len', 3.4019391052900155e-06], ['(rstrip));', 3.4019391052900155e-06], ['(rstrip);', 3.4019391052900155e-06], ['(json::string', 3.4019391052900155e-06], ['UTF-8)', 3.4019391052900155e-06], ['(context->printer)));', 3.4019391052900155e-06], ['pp_clear_output_area', 3.4019391052900155e-06], ['(context->printer);', 3.4019391052900155e-06], ['*option_text;', 3.4019391052900155e-06], ['option_text', 3.4019391052900155e-06], ['context->option_name', 3.4019391052900155e-06], ['diagnostic->option_index,', 3.4019391052900155e-06], ['orig_diag_kind,', 3.4019391052900155e-06], ['diagnostic->kind);', 3.4019391052900155e-06], ['(option_text)', 3.4019391052900155e-06], ['("option",', 3.4019391052900155e-06], ['(option_text));', 3.4019391052900155e-06], ['(option_text);', 3.4019391052900155e-06], ['auto_diagnostic_group,', 3.4019391052900155e-06], ['(cur_group)', 3.4019391052900155e-06], ['(cur_children_array);', 3.4019391052900155e-06], ['cur_children_array->append', 3.4019391052900155e-06], ['toplevel_array->append', 3.4019391052900155e-06], ['diag_obj;', 3.4019391052900155e-06], ['cur_children_array);', 3.4019391052900155e-06], ['*richloc', 3.4019391052900155e-06], ['diagnostic->richloc;', 3.4019391052900155e-06], ['*loc_array', 3.4019391052900155e-06], ['("locations",', 3.4019391052900155e-06], ['loc_array);', 3.4019391052900155e-06], ['richloc->get_num_locations', 3.4019391052900155e-06], ['*loc_range', 3.4019391052900155e-06], ['richloc->get_range', 3.4019391052900155e-06], ['*loc_obj', 3.4019391052900155e-06], ['(loc_range,', 3.4019391052900155e-06], ['(loc_obj)', 3.4019391052900155e-06], ['loc_array->append', 3.4019391052900155e-06], ['(loc_obj);', 3.4019391052900155e-06], ['(richloc->get_num_fixit_hints', 3.4019391052900155e-06], ['*fixit_array', 3.4019391052900155e-06], ['("fixits",', 3.4019391052900155e-06], ['fixit_array);', 3.4019391052900155e-06], ['richloc->get_num_fixit_hints', 3.4019391052900155e-06], ['*hint', 3.4019391052900155e-06], ['richloc->get_fixit_hint', 3.4019391052900155e-06], ['(hint);', 3.4019391052900155e-06], ['fixit_array->append', 3.4019391052900155e-06], ['(fixit_obj);', 3.4019391052900155e-06], ['tree-ish', 3.4019391052900155e-06], ['things:', 3.4019391052900155e-06], ['"begin_group_cb"', 3.4019391052900155e-06], ['json_begin_group', 3.4019391052900155e-06], ['"end_group_cb"', 3.4019391052900155e-06], ['json_end_group', 3.4019391052900155e-06], ['json_final_cb', 3.4019391052900155e-06], ['toplevel_array->dump', 3.4019391052900155e-06], ['(stderr);', 3.4019391052900155e-06], ['toplevel_array;', 3.4019391052900155e-06], ['FORMAT.', 3.4019391052900155e-06], ['diagnostic_output_format_init', 3.4019391052900155e-06], ['diagnostics_output_format', 3.4019391052900155e-06], ['format)', 3.4019391052900155e-06], ['(format)', 3.4019391052900155e-06], ['DIAGNOSTICS_OUTPUT_FORMAT_TEXT:', 3.4019391052900155e-06], ['default;', 3.4019391052900155e-06], ['DIAGNOSTICS_OUTPUT_FORMAT_JSON:', 3.4019391052900155e-06], ['(toplevel_array', 3.4019391052900155e-06], ['callbacks.', 3.4019391052900155e-06], ['context->begin_diagnostic', 3.4019391052900155e-06], ['json_begin_diagnostic;', 3.4019391052900155e-06], ['context->end_diagnostic', 3.4019391052900155e-06], ['json_end_diagnostic;', 3.4019391052900155e-06], ['context->begin_group_cb', 3.4019391052900155e-06], ['json_begin_group;', 3.4019391052900155e-06], ['context->end_group_cb', 3.4019391052900155e-06], ['json_end_group;', 3.4019391052900155e-06], ['context->final_cb', 3.4019391052900155e-06], ['json_final_cb;', 3.4019391052900155e-06], ['context->show_option_requested', 3.4019391052900155e-06], ['colorize', 3.4019391052900155e-06], ['pp_show_color', 3.4019391052900155e-06], ['(context->printer)', 3.4019391052900155e-06], ['ERROR_MARK', 3.4019391052900155e-06], ['((PRED_CONSTR', 3.4019391052900155e-06], ['EXPR_PACK_EXPANSION', 3.4019391052900155e-06], ['conjoining', 3.4019391052900155e-06], ['conjoin_constraints(a,', 3.4019391052900155e-06], ['TREE_VEC);', 3.4019391052900155e-06], ['function_concept_check_p', 3.4019391052900155e-06], ['(f1)', 3.4019391052900155e-06], ['(f1)))', 3.4019391052900155e-06], ['contains_wildcard_p', 3.4019391052900155e-06], ['WILDCARD_DECL)', 3.4019391052900155e-06], ['*fargs', 3.4019391052900155e-06], ['make_tree_vector();', 3.4019391052900155e-06], ['finish_call_expr', 3.4019391052900155e-06], ['&fargs,', 3.4019391052900155e-06], ['tf_none);', 3.4019391052900155e-06], ['release_tree_vector', 3.4019391052900155e-06], ['(fargs);', 3.4019391052900155e-06], ['non-existent', 3.4019391052900155e-06], ['TEMPLATE_ID_EXPR);', 3.4019391052900155e-06], ['(contains_wildcard_p', 3.4019391052900155e-06], ['finish_template_variable', 3.4019391052900155e-06], ['(id);', 3.4019391052900155e-06], ['Resolution', 3.4019391052900155e-06], ['facility', 3.4019391052900155e-06], ["'concept'.", 3.4019391052900155e-06], ['resolution', 3.4019391052900155e-06], ['OVL,', 3.4019391052900155e-06], ['f<T,', 3.4019391052900155e-06], ['U>()', 3.4019391052900155e-06], ['template),', 3.4019391052900155e-06], ['PURPOSE', 3.4019391052900155e-06], ['ovl,', 3.4019391052900155e-06], ['(lkp_iterator', 3.4019391052900155e-06], ['(ovl);', 3.4019391052900155e-06], ['++iter)', 3.4019391052900155e-06], ['overload.', 3.4019391052900155e-06], ['*iter;', 3.4019391052900155e-06], ['(tmpl)', 3.4019391052900155e-06], ['non-concepts.', 3.4019391052900155e-06], ['functional', 3.4019391052900155e-06], ['postfix-expression.', 3.4019391052900155e-06], ['headaches', 3.4019391052900155e-06], ['masks', 3.4019391052900155e-06], ['error,', 3.4019391052900155e-06], ['non-deduced', 3.4019391052900155e-06], ['contexts', 3.4019391052900155e-06], ['(!DECL_DECLARED_CONCEPT_P', 3.4019391052900155e-06], ['Remember', 3.4019391052900155e-06], ['subst', 3.4019391052900155e-06], ['tmpl))', 3.4019391052900155e-06], ['(subst', 3.4019391052900155e-06], ['++nerrs;', 3.4019391052900155e-06], ['(subst,', 3.4019391052900155e-06], ['cands);', 3.4019391052900155e-06], ['(!cands)', 3.4019391052900155e-06], ['candidates', 3.4019391052900155e-06], ['deductions.', 3.4019391052900155e-06], ['(cands))', 3.4019391052900155e-06], ['cands;', 3.4019391052900155e-06], ['denote', 3.4019391052900155e-06], ['base-link,', 3.4019391052900155e-06], ['function(s)', 3.4019391052900155e-06], ['template-id,', 3.4019391052900155e-06], ['concept-check.', 3.4019391052900155e-06], ['(BASELINK_P', 3.4019391052900155e-06], ['ovl', 3.4019391052900155e-06], ['concept...', 3.4019391052900155e-06], ['(ovl)', 3.4019391052900155e-06], ['(call),', 3.4019391052900155e-06], ['(ovl,', 3.4019391052900155e-06], ['(!variable_concept_p', 3.4019391052900155e-06], ['(tmpl))', 3.4019391052900155e-06], ['failing', 3.4019391052900155e-06], ['tmpl);', 3.4019391052900155e-06], ['deduce_constrained_parameter', 3.4019391052900155e-06], ['proto)', 3.4019391052900155e-06], ['(info),', 3.4019391052900155e-06], ['(ARGUMENT_PACK_P', 3.4019391052900155e-06], ['implications', 3.4019391052900155e-06], ['template<typenaem', 3.4019391052900155e-06], ['C<T>.', 3.4019391052900155e-06], ['learn,', 3.4019391052900155e-06], ['D<T>.', 3.4019391052900155e-06], ['If,', 3.4019391052900155e-06], ['logically', 3.4019391052900155e-06], ['equivalence.', 3.4019391052900155e-06], ['C<T>;', 3.4019391052900155e-06], ['conjunction_cxt,', 3.4019391052900155e-06], ['C2.', 3.4019391052900155e-06], ['disjunction_cxt,', 3.4019391052900155e-06], ['equivalence_cxt', 3.4019391052900155e-06], ['learn_implications(tree,', 3.4019391052900155e-06], ['implication_context);', 3.4019391052900155e-06], ['(cxt)', 3.4019391052900155e-06], ['conjunction_cxt:', 3.4019391052900155e-06], ['disjunction_cxt:', 3.4019391052900155e-06], ['equivalence_cxt:', 3.4019391052900155e-06], ['disjunction_cxt)', 3.4019391052900155e-06], ['conjunction_cxt)', 3.4019391052900155e-06], ['Quickly', 3.4019391052900155e-06], ['cache', 3.4019391052900155e-06], ['concepts.', 3.4019391052900155e-06], ['arguemnts.', 3.4019391052900155e-06], ['helpful.', 3.4019391052900155e-06], ['caching.', 3.4019391052900155e-06], ['contraint.', 3.4019391052900155e-06], ['CONJ_CONSTR)', 3.4019391052900155e-06], ['conjunction_cxt);', 3.4019391052900155e-06], ['disjunction_cxt);', 3.4019391052900155e-06], ['equivalence_cxt);', 3.4019391052900155e-06], ['Expansion', 3.4019391052900155e-06], ['(!body)', 3.4019391052900155e-06], ['(!init)', 3.4019391052900155e-06], ['++expansion_level;', 3.4019391052900155e-06], ['~expanding_concept_sentinel()', 3.4019391052900155e-06], ['--expansion_level;', 3.4019391052900155e-06], ['expanded.', 3.4019391052900155e-06], ['expanding_concept()', 3.4019391052900155e-06], ['template)', 3.4019391052900155e-06], ["concept's", 3.4019391052900155e-06], ['sentinel;', 3.4019391052900155e-06], ['get_concept_expansion', 3.4019391052900155e-06], ['spec;', 3.4019391052900155e-06], ['lastly,', 3.4019391052900155e-06], ['implications,', 3.4019391052900155e-06], ['norm', 3.4019391052900155e-06], ['save_concept_expansion', 3.4019391052900155e-06], ['Stepwise', 3.4019391052900155e-06], ['steps.', 3.4019391052900155e-06], ['Normalization', 3.4019391052900155e-06], ['logical-or', 3.4019391052900155e-06], ['logical-and', 3.4019391052900155e-06], ['specifier', 3.4019391052900155e-06], ['type_constr;', 3.4019391052900155e-06], ['type_uses_auto,', 3.4019391052900155e-06], ['type_uses_auto', 3.4019391052900155e-06], ['placeholder);', 3.4019391052900155e-06], ['type_constr);', 3.4019391052900155e-06], ['(COMPOUND_REQ_NOEXCEPT_P', 3.4019391052900155e-06], ['except);', 3.4019391052900155e-06], ['constraint-expression.', 3.4019391052900155e-06], ['requires-expression', 3.4019391052900155e-06], ['(!check)', 3.4019391052900155e-06], ['non-SFINAEable', 3.4019391052900155e-06], ['first-pass', 3.4019391052900155e-06], ['obvious', 3.4019391052900155e-06], ['check_for_logical_overloads', 3.4019391052900155e-06], ['BASELINK)', 3.4019391052900155e-06], ['(DECL_OVERLOADED_OPERATOR_P', 3.4019391052900155e-06], ['cp_expr_loc_or_loc', 3.4019391052900155e-06], ['%qE,', 3.4019391052900155e-06], ['operator",', 3.4019391052900155e-06], ['expansions,', 3.4019391052900155e-06], ['type_unknown_p', 3.4019391052900155e-06], ['(!dependent_type_p', 3.4019391052900155e-06], ['(check_for_logical_overloads', 3.4019391052900155e-06], ['("predicate', 3.4019391052900155e-06], ['%q+E', 3.4019391052900155e-06], ['%<bool%>",', 3.4019391052900155e-06], ['PAT.', 3.4019391052900155e-06], ['(pat))', 3.4019391052900155e-06], ['(pat);', 3.4019391052900155e-06], ['pat;', 3.4019391052900155e-06], ['SET_PACK_EXPANSION_PATTERN', 3.4019391052900155e-06], ['CONJ_CONSTR);', 3.4019391052900155e-06], ['DISJ_CONSTR);', 3.4019391052900155e-06], ['REQUIRES_EXPR:', 3.4019391052900155e-06], ['BIND_EXPR:', 3.4019391052900155e-06], ['(BIND_EXPR_BODY', 3.4019391052900155e-06], ['RETURN_EXPR:', 3.4019391052900155e-06], ['(t)))', 3.4019391052900155e-06], ['tcc_unary:', 3.4019391052900155e-06], ['tcc_binary:', 3.4019391052900155e-06], ['tcc_expression:', 3.4019391052900155e-06], ['tcc_vl_exp:', 3.4019391052900155e-06], ['tcc_statement:', 3.4019391052900155e-06], ['tcc_declaration:', 3.4019391052900155e-06], ['tcc_exceptional:', 3.4019391052900155e-06], ['tcc_constant:', 3.4019391052900155e-06], ['tcc_reference:', 3.4019391052900155e-06], ['tcc_comparison:', 3.4019391052900155e-06], ['Unhandled', 3.4019391052900155e-06], ['kind.', 3.4019391052900155e-06], ['/\\', 3.4019391052900155e-06], ['\\/', 3.4019391052900155e-06], ['(DISJ_CONSTR,', 3.4019391052900155e-06], ['stages.', 3.4019391052900155e-06], ['Then,', 3.4019391052900155e-06], ['reducing', 3.4019391052900155e-06], ['--------------------------------------------------------------------------', 3.4019391052900155e-06], ['constraint-related', 3.4019391052900155e-06], ['(current_template_parms);', 3.4019391052900155e-06], ['recently', 3.4019391052900155e-06], ['specialization,', 3.4019391052900155e-06], ["TYPE's", 3.4019391052900155e-06], ['associate_classtype_constraints', 3.4019391052900155e-06], ['(CLASSTYPE_IS_TEMPLATE', 3.4019391052900155e-06], ['CLASSTYPE_TEMPLATE_SPECIALIZATION', 3.4019391052900155e-06], ['orig_ci', 3.4019391052900155e-06], ['(!equivalent_constraints', 3.4019391052900155e-06], ['orig_ci))', 3.4019391052900155e-06], ['("%qT', 3.4019391052900155e-06], ['set_constraints', 3.4019391052900155e-06], ['(tree_constraint_info', 3.4019391052900155e-06], ['*)make_node', 3.4019391052900155e-06], ['(CONSTRAINT_INFO);', 3.4019391052900155e-06], ['constraint-info', 3.4019391052900155e-06], ['(TREQS)', 3.4019391052900155e-06], ['declarator', 3.4019391052900155e-06], ['(DREQS).', 3.4019391052900155e-06], ['TREQS', 3.4019391052900155e-06], ['DREQS', 3.4019391052900155e-06], ['unconstrained', 3.4019391052900155e-06], ['tmpl_reqs,', 3.4019391052900155e-06], ['decl_reqs)', 3.4019391052900155e-06], ['(tmpl_reqs', 3.4019391052900155e-06], ['(tmpl_reqs)', 3.4019391052900155e-06], ['(decl_reqs', 3.4019391052900155e-06], ['(decl_reqs)', 3.4019391052900155e-06], ['(!tmpl_reqs', 3.4019391052900155e-06], ['!decl_reqs)', 3.4019391052900155e-06], ['ci->template_reqs', 3.4019391052900155e-06], ['tmpl_reqs;', 3.4019391052900155e-06], ['ci->declarator_reqs', 3.4019391052900155e-06], ['decl_reqs;', 3.4019391052900155e-06], ['ci->associated_constr', 3.4019391052900155e-06], ['(tmpl_reqs,', 3.4019391052900155e-06], ['decl_reqs);', 3.4019391052900155e-06], ['(tree)ci;', 3.4019391052900155e-06], ['prepending', 3.4019391052900155e-06], ['REST.', 3.4019391052900155e-06], ['(rest,', 3.4019391052900155e-06], ['GET_NON_DEFAULT_TEMPLATE_ARGS_COUNT', 3.4019391052900155e-06], ['rest;', 3.4019391052900155e-06], ['be:', 3.4019391052900155e-06], ['OVERLOAD', 3.4019391052900155e-06], ['BASELINK', 3.4019391052900155e-06], ['TEMPLTATE_DECL', 3.4019391052900155e-06], ['eventual', 3.4019391052900155e-06], ['rest);', 3.4019391052900155e-06], ['(variable_template_p', 3.4019391052900155e-06], ['(lookup_template_variable', 3.4019391052900155e-06], ['(lookup_template_function', 3.4019391052900155e-06], ['build_constrained_parameter', 3.4019391052900155e-06], ['cnc,', 3.4019391052900155e-06], ['proto,', 3.4019391052900155e-06], ['(cnc);', 3.4019391052900155e-06], ['proto;', 3.4019391052900155e-06], ['CONSTR,', 3.4019391052900155e-06], ['finish_concept_name', 3.4019391052900155e-06], ['TYPE_DECL).', 3.4019391052900155e-06], ['decomposed.', 3.4019391052900155e-06], ['clause', 3.4019391052900155e-06], ['not).', 3.4019391052900155e-06], ['CHECK_CONSTR.', 3.4019391052900155e-06], ['(!constr)', 3.4019391052900155e-06], ['con', 3.4019391052900155e-06], ['is_proto_pack', 3.4019391052900155e-06], ['apply_to_all_p', 3.4019391052900155e-06], ['!is_proto_pack;', 3.4019391052900155e-06], ['(build_tree_list', 3.4019391052900155e-06], ['PACK_EXPANSION_PATTERN', 3.4019391052900155e-06], ['(con);', 3.4019391052900155e-06], ['VAR_P', 3.4019391052900155e-06], ['(con)', 3.4019391052900155e-06], ['ovl_make', 3.4019391052900155e-06], ['make_pack_expansion', 3.4019391052900155e-06], ['(check)', 3.4019391052900155e-06], ['shorthand', 3.4019391052900155e-06], ['PARMS.', 3.4019391052900155e-06], ['get_shorthand_constraints', 3.4019391052900155e-06], ['parms)', 3.4019391052900155e-06], ['chains', 3.4019391052900155e-06], ['PARAMETER_LIST', 3.4019391052900155e-06], ['SRC_PARM.', 3.4019391052900155e-06], ['PARM_LOC', 3.4019391052900155e-06], ['parameter_list,', 3.4019391052900155e-06], ['src_parm)', 3.4019391052900155e-06], ['is_parameter_pack', 3.4019391052900155e-06], ['ARGUMENT_PACK_P', 3.4019391052900155e-06], ['(is_parameter_pack)', 3.4019391052900155e-06], ['(src_parm),', 3.4019391052900155e-06], ['PARM_DECL.', 3.4019391052900155e-06], ['WILDCARD_DECL);', 3.4019391052900155e-06], ['parm_loc', 3.4019391052900155e-06], ['(is_parameter_pack', 3.4019391052900155e-06], ['WILDCARD_PACK_P', 3.4019391052900155e-06], ['(src_parm))', 3.4019391052900155e-06], ['(parm_loc,', 3.4019391052900155e-06], ['parameter");', 3.4019391052900155e-06], ['err_parm', 3.4019391052900155e-06], ['(error_mark_node,', 3.4019391052900155e-06], ['err_parm);', 3.4019391052900155e-06], ['is_non_type;', 3.4019391052900155e-06], ['finish_template_type_parm', 3.4019391052900155e-06], ['current_template_parms', 3.4019391052900155e-06], ['DECL_TEMPLATE_PARMS', 3.4019391052900155e-06], ['finish_template_template_parm', 3.4019391052900155e-06], ['declarator,', 3.4019391052900155e-06], ['copy_decl', 3.4019391052900155e-06], ['process_template_parm.', 3.4019391052900155e-06], ['Introductions', 3.4019391052900155e-06], ['parm);', 3.4019391052900155e-06], ['process_template_parm', 3.4019391052900155e-06], ['parm_loc,', 3.4019391052900155e-06], ['parm,', 3.4019391052900155e-06], ['is_non_type,', 3.4019391052900155e-06], ['is_parameter_pack);', 3.4019391052900155e-06], ['Associates', 3.4019391052900155e-06], ['introduction', 3.4019391052900155e-06], ['INTRO_LIST', 3.4019391052900155e-06], ['WILDCARD_DECLs', 3.4019391052900155e-06], ['TMPL_DECL', 3.4019391052900155e-06], ['C<INTRO_LIST>', 3.4019391052900155e-06], ['filling', 3.4019391052900155e-06], ['deduced.', 3.4019391052900155e-06], ['matching.', 3.4019391052900155e-06], ['finish_template_introduction', 3.4019391052900155e-06], ['tmpl_decl,', 3.4019391052900155e-06], ['intro_list)', 3.4019391052900155e-06], ['Deduce', 3.4019391052900155e-06], ['intro_list);', 3.4019391052900155e-06], ['(!parms)', 3.4019391052900155e-06], ['introduction.', 3.4019391052900155e-06], ['(parms),', 3.4019391052900155e-06], ['(intro_list));', 3.4019391052900155e-06], ['n));', 3.4019391052900155e-06], ['end_template_decl', 3.4019391052900155e-06], ['check_args', 3.4019391052900155e-06], ['check_args);', 3.4019391052900155e-06], ['TEMPLATE_PARMS_CONSTRAINTS', 3.4019391052900155e-06], ['(current_template_parms)', 3.4019391052900155e-06], ['parm_list;', 3.4019391052900155e-06], ['constrained-type-specifier,', 3.4019391052900155e-06], ['TMPL', 3.4019391052900155e-06], ['FIXME', 3.4019391052900155e-06], ['forms', 3.4019391052900155e-06], ['constrained-type-specifier?', 3.4019391052900155e-06], ['&tmpl,', 3.4019391052900155e-06], ['&args)', 3.4019391052900155e-06], ['(proto,', 3.4019391052900155e-06], ['CHECK_CONSTR', 3.4019391052900155e-06], ['TEMPLATE_TYPE_PARM.', 3.4019391052900155e-06], ['equivalent_placeholder_constraints', 3.4019391052900155e-06], ['c1,', 3.4019391052900155e-06], ['auto.', 3.4019391052900155e-06], ['(c1);', 3.4019391052900155e-06], ['(c2', 3.4019391052900155e-06], ['(c2)', 3.4019391052900155e-06], ['(!c1', 3.4019391052900155e-06], ['!c2)', 3.4019391052900155e-06], ['satisfaction;', 3.4019391052900155e-06], ['a2;', 3.4019391052900155e-06], ['a1);', 3.4019391052900155e-06], ['a2);', 3.4019391052900155e-06], ['len1', 3.4019391052900155e-06], ['(a1);', 3.4019391052900155e-06], ['(a2);', 3.4019391052900155e-06], ['(len1', 3.4019391052900155e-06], ['len2)', 3.4019391052900155e-06], ['infinitely', 3.4019391052900155e-06], ['recurse.', 3.4019391052900155e-06], ['len1;', 3.4019391052900155e-06], ['(a1,', 3.4019391052900155e-06], ['(a2,', 3.4019391052900155e-06], ['(!template_args_equal', 3.4019391052900155e-06], ['t2))', 3.4019391052900155e-06], ['PRED_CONSTR', 3.4019391052900155e-06], ['hash_placeholder_constraint', 3.4019391052900155e-06], ['hash_tmpl_and_args,', 3.4019391052900155e-06], ['iterative_hash_object', 3.4019391052900155e-06], ['(DECL_UID', 3.4019391052900155e-06], ['(a)-1;', 3.4019391052900155e-06], ['Substitution', 3.4019391052900155e-06], ['template<C1', 3.4019391052900155e-06], ['f(T)', 3.4019391052900155e-06], ['C2<T>;', 3.4019391052900155e-06], ['g(T)', 3.4019391052900155e-06], ['T::value;', 3.4019391052900155e-06], ['S<int>', 3.4019391052900155e-06], ['S<int>::g(T)', 3.4019391052900155e-06], ['Substituting', 3.4019391052900155e-06], ['C2<T>', 3.4019391052900155e-06], ['C2<int>,', 3.4019391052900155e-06], ['T::value', 3.4019391052900155e-06], ['failure,', 3.4019391052900155e-06], ['conjunctions.', 3.4019391052900155e-06], ['(TEMPLATE_ID_EXPR,', 3.4019391052900155e-06], ['rebuild', 3.4019391052900155e-06], ['r0', 3.4019391052900155e-06], ['(r0', 3.4019391052900155e-06], ['(r1', 3.4019391052900155e-06], ['r1);', 3.4019391052900155e-06], ['(new_type', 3.4019391052900155e-06], ['new_type);', 3.4019391052900155e-06], ['autos', 3.4019391052900155e-06], ['DEDUCT_CONSTR_PLACEHOLDER(t);', 3.4019391052900155e-06], ['placeholders.', 3.4019391052900155e-06], ['(?)', 3.4019391052900155e-06], ['problems.', 3.4019391052900155e-06], ['new_pattern', 3.4019391052900155e-06], ['(new_pattern', 3.4019391052900155e-06], ['new_pattern,', 3.4019391052900155e-06], ['autos);', 3.4019391052900155e-06], ['tsubst_constraint_variables.', 3.4019391052900155e-06], ['vars)', 3.4019391052900155e-06], ['(DECL_PACK_P', 3.4019391052900155e-06], ['extract_fnparm_pack', 3.4019391052900155e-06], ['&s);', 3.4019391052900155e-06], ['(pack,', 3.4019391052900155e-06], ['tsubst_parameterized_constraint.', 3.4019391052900155e-06], ['PARM_DECLs.', 3.4019391052900155e-06], ['saved_unevaluated_operand', 3.4019391052900155e-06], ['cp_unevaluated_operand;', 3.4019391052900155e-06], ['saved_unevaluated_operand;', 3.4019391052900155e-06], ['(PARM_CONSTR_PARMS', 3.4019391052900155e-06], ['ordering,', 3.4019391052900155e-06], ['noexcept_p', 3.4019391052900155e-06], ['noexcept_p);', 3.4019391052900155e-06], ['programs.', 3.4019391052900155e-06], ['r);', 3.4019391052900155e-06], ['original.', 3.4019391052900155e-06], ['(r);', 3.4019391052900155e-06], ['re-declaration', 3.4019391052900155e-06], ['tsubst_requires_expr', 3.4019391052900155e-06], ['(parms)', 3.4019391052900155e-06], ['(parms', 3.4019391052900155e-06], ['(reqs,', 3.4019391052900155e-06], ['(reqs', 3.4019391052900155e-06], ['CI,', 3.4019391052900155e-06], ['tsubst_constraint_info', 3.4019391052900155e-06], ['(!t', 3.4019391052900155e-06], ['!check_constraint_info', 3.4019391052900155e-06], ['CI_TEMPLATE_REQS', 3.4019391052900155e-06], ['CI_DECLARATOR_REQS', 3.4019391052900155e-06], ['decl_constr);', 3.4019391052900155e-06], ['convenience,', 3.4019391052900155e-06], ['reduces', 3.4019391052900155e-06], ['else).', 3.4019391052900155e-06], ['tsubst_flags_t,', 3.4019391052900155e-06], ['gen_elem_of_pack_expansion_instantiation', 3.4019391052900155e-06], ['([temp.constr.pred]).', 3.4019391052900155e-06], ['ill-formed;', 3.4019391052900155e-06], ["SFINAE'able", 3.4019391052900155e-06], ['EXPR_PACK_EXPANSION);', 3.4019391052900155e-06], ['shall', 3.4019391052900155e-06], ['const-qualified', 3.4019391052900155e-06], ['acceptable.', 3.4019391052900155e-06], ['(cp_expr_loc_or_loc', 3.4019391052900155e-06], ['input_location),', 3.4019391052900155e-06], ['cxx_constant_value', 3.4019391052900155e-06], ['C<CARGS>', 3.4019391052900155e-06], ['CARGS', 3.4019391052900155e-06], ['lookup_concept_satisfaction', 3.4019391052900155e-06], ['targs))', 3.4019391052900155e-06], ['concept;', 3.4019391052900155e-06], ['non-satisfaction.', 3.4019391052900155e-06], ['(def', 3.4019391052900155e-06], ['boolean_false_node);', 3.4019391052900155e-06], ['([temp.constr.expr]).', 3.4019391052900155e-06], ['unevaluated.', 3.4019391052900155e-06], ['(tf_none))', 3.4019391052900155e-06], ['(TYPE_P', 3.4019391052900155e-06], ['(check))', 3.4019391052900155e-06], ['(complain))', 3.4019391052900155e-06], ['template-like', 3.4019391052900155e-06], ['modop-exprs)', 3.4019391052900155e-06], ['typed.', 3.4019391052900155e-06], ['(ICONV_CONSTR_EXPR', 3.4019391052900155e-06], ['(ICONV_CONSTR_TYPE', 3.4019391052900155e-06], ['<unspecified>', 3.4019391052900155e-06], ['perform_direct_initialization_if_possible', 3.4019391052900155e-06], ['complain);', 3.4019391052900155e-06], ['(conv', 3.4019391052900155e-06], ['decltype(auto)', 3.4019391052900155e-06], ['DEDUCT_CONSTR_PLACEHOLDER', 3.4019391052900155e-06], ['type_canonical', 3.4019391052900155e-06], ['complain|tf_partial,', 3.4019391052900155e-06], ['do_auto_deduction', 3.4019391052900155e-06], ['adc_requirement);', 3.4019391052900155e-06], ['type_canonical;', 3.4019391052900155e-06], ['noexcept(e)', 3.4019391052900155e-06], ['(expr_noexcept_p', 3.4019391052900155e-06], ['complain))', 3.4019391052900155e-06], ['partially', 3.4019391052900155e-06], ['satisfy_predicate_constraint.', 3.4019391052900155e-06], ['overload,', 3.4019391052900155e-06], ['boolean_false_node)', 3.4019391052900155e-06], ['Dispatch', 3.4019391052900155e-06], ['(!processing_template_decl);', 3.4019391052900155e-06], ['satisfy_*', 3.4019391052900155e-06], ['(TV_CONSTRAINT_SAT);', 3.4019391052900155e-06], ['terms,', 3.4019391052900155e-06], ['processing_template_decl_sentinel', 3.4019391052900155e-06], ['proc', 3.4019391052900155e-06], ['tsubst_copy', 3.4019391052900155e-06], ['processing_template_decl', 3.4019391052900155e-06], ['on,', 3.4019391052900155e-06], ['processing,', 3.4019391052900155e-06], ['buried', 3.4019391052900155e-06], ['decltype', 3.4019391052900155e-06], ['CI', 3.4019391052900155e-06], ['ARGS,', 3.4019391052900155e-06], ['ci,', 3.4019391052900155e-06], ['(!ci)', 3.4019391052900155e-06], ['uses_template_parms', 3.4019391052900155e-06], ['lookup_constraint_satisfaction', 3.4019391052900155e-06], ['(CI_ASSOCIATED_CONSTRAINTS', 3.4019391052900155e-06], ['(ci),', 3.4019391052900155e-06], ['memoize_constraint_satisfaction', 3.4019391052900155e-06], ['(constr));', 3.4019391052900155e-06], ['evaluate_function_concept', 3.4019391052900155e-06], ['evaluate_variable_concept', 3.4019391052900155e-06], ["DECL's", 3.4019391052900155e-06], ['formed', 3.4019391052900155e-06], ['resolution).', 3.4019391052900155e-06], ['ci;', 3.4019391052900155e-06], ['TMPL_PARMS_DEPTH', 3.4019391052900155e-06], ['get_innermost_template_args', 3.4019391052900155e-06], ['(TI_ARGS', 3.4019391052900155e-06], ['(ti),', 3.4019391052900155e-06], ['depth);', 3.4019391052900155e-06], ['extensively', 3.4019391052900155e-06], ['constraint_expression_satisfied_p', 3.4019391052900155e-06], ['requires-expressions', 3.4019391052900155e-06], ['null)', 3.4019391052900155e-06], ['Modify', 3.4019391052900155e-06], ['CONSTRAINT_VAR_P', 3.4019391052900155e-06], ['build_min', 3.4019391052900155e-06], ['(REQUIRES_EXPR,', 3.4019391052900155e-06], ['(SIMPLE_REQ,', 3.4019391052900155e-06], ['(TYPE_REQ,', 3.4019391052900155e-06], ['non-null,', 3.4019391052900155e-06], ['NOEXCEPT_P', 3.4019391052900155e-06], ['noexcept_p)', 3.4019391052900155e-06], ['(COMPOUND_REQ,', 3.4019391052900155e-06], ['(req)', 3.4019391052900155e-06], ['noexcept_p;', 3.4019391052900155e-06], ['req;', 3.4019391052900155e-06], ['(NESTED_REQ,', 3.4019391052900155e-06], ['check_function_concept', 3.4019391052900155e-06], ['constexpr', 3.4019391052900155e-06], ['(seen_error', 3.4019391052900155e-06], ['*/;', 3.4019391052900155e-06], ['empty",', 3.4019391052900155e-06], ['statements",', 3.4019391052900155e-06], ['admissible.', 3.4019391052900155e-06], ['check_constrained_friend', 3.4019391052900155e-06], ['(!reqs)', 3.4019391052900155e-06], ['Constrained', 3.4019391052900155e-06], ['meaningless.', 3.4019391052900155e-06], ['"constrained', 3.4019391052900155e-06], ['parameters");', 3.4019391052900155e-06], ['Equivalence', 3.4019391052900155e-06], ["A's", 3.4019391052900155e-06], ['constrain', 3.4019391052900155e-06], ["A's.", 3.4019391052900155e-06], ['equivalently_constrained', 3.4019391052900155e-06], ['(d1)', 3.4019391052900155e-06], ['(d1),', 3.4019391052900155e-06], ['Partial', 3.4019391052900155e-06], ['strictly_subsumes', 3.4019391052900155e-06], ['!subsumes', 3.4019391052900155e-06], ['Determines', 3.4019391052900155e-06], ['constrained.', 3.4019391052900155e-06], ['subsumed', 3.4019391052900155e-06], ["other's?", 3.4019391052900155e-06], ['more_constrained', 3.4019391052900155e-06], ['winner', 3.4019391052900155e-06], ['c2))', 3.4019391052900155e-06], ['++winner;', 3.4019391052900155e-06], ['--winner;', 3.4019391052900155e-06], ['winner;', 3.4019391052900155e-06], ['D2,', 3.4019391052900155e-06], ['unconstrained.', 3.4019391052900155e-06], ['at_least_as_constrained', 3.4019391052900155e-06], ['c2);', 3.4019391052900155e-06], ['Provide', 3.4019391052900155e-06], ['exceeded', 3.4019391052900155e-06], ['pre-configured', 3.4019391052900155e-06], ['threshold.', 3.4019391052900155e-06], ['elide_constraint_failure_p', 3.4019391052900155e-06], ['constraint_errors;', 3.4019391052900155e-06], ['++constraint_errors;', 3.4019391052900155e-06], ['undiagnosed', 3.4019391052900155e-06], ['constraint_thresh;', 3.4019391052900155e-06], ['diagnosis', 3.4019391052900155e-06], ['sub-constraint', 3.4019391052900155e-06], ['(location_t,', 3.4019391052900155e-06], ['trait.', 3.4019391052900155e-06], ['TRAIT_EXPR_TYPE1', 3.4019391052900155e-06], ['TRAIT_EXPR_TYPE2', 3.4019391052900155e-06], ['(TRAIT_EXPR_KIND', 3.4019391052900155e-06], ['CPTK_HAS_NOTHROW_ASSIGN:', 3.4019391052900155e-06], ['CPTK_HAS_NOTHROW_CONSTRUCTOR:', 3.4019391052900155e-06], ['CPTK_HAS_NOTHROW_COPY:', 3.4019391052900155e-06], ['CPTK_HAS_TRIVIAL_ASSIGN:', 3.4019391052900155e-06], ['CPTK_HAS_TRIVIAL_CONSTRUCTOR:', 3.4019391052900155e-06], ['CPTK_HAS_TRIVIAL_COPY:', 3.4019391052900155e-06], ['CPTK_HAS_TRIVIAL_DESTRUCTOR:', 3.4019391052900155e-06], ['destructible",', 3.4019391052900155e-06], ['CPTK_HAS_VIRTUAL_DESTRUCTOR:', 3.4019391052900155e-06], ['destructor",', 3.4019391052900155e-06], ['CPTK_IS_ABSTRACT:', 3.4019391052900155e-06], ['CPTK_IS_BASE_OF:', 3.4019391052900155e-06], ['CPTK_IS_CLASS:', 3.4019391052900155e-06], ['CPTK_IS_EMPTY:', 3.4019391052900155e-06], ['CPTK_IS_ENUM:', 3.4019391052900155e-06], ['enum",', 3.4019391052900155e-06], ['CPTK_IS_FINAL:', 3.4019391052900155e-06], ['CPTK_IS_LITERAL_TYPE:', 3.4019391052900155e-06], ['CPTK_IS_POD:', 3.4019391052900155e-06], ['POD', 3.4019391052900155e-06], ['CPTK_IS_POLYMORPHIC:', 3.4019391052900155e-06], ['polymorphic', 3.4019391052900155e-06], ['CPTK_IS_SAME_AS:', 3.4019391052900155e-06], ['CPTK_IS_STD_LAYOUT:', 3.4019391052900155e-06], ['CPTK_IS_TRIVIAL:', 3.4019391052900155e-06], ['CPTK_IS_UNION:', 3.4019391052900155e-06], ['union",', 3.4019391052900155e-06], ['predicates.', 3.4019391052900155e-06], ['(PRED_CONSTR_EXPR', 3.4019391052900155e-06], ['TRAIT_EXPR)', 3.4019391052900155e-06], ['packs', 3.4019391052900155e-06], ['expect.', 3.4019391052900155e-06], ['(cur),', 3.4019391052900155e-06], ['better.', 3.4019391052900155e-06], ['expansion");', 3.4019391052900155e-06], ['(!constraint_expression_satisfied_p', 3.4019391052900155e-06], ['satisfied",', 3.4019391052900155e-06], ['DECL<CARGS>.', 3.4019391052900155e-06], ['cargs);', 3.4019391052900155e-06], ['check);', 3.4019391052900155e-06], ['(cur', 3.4019391052900155e-06], ['%<%E', 3.4019391052900155e-06], ['%S%>",', 3.4019391052900155e-06], ['(CHECK_CONSTR_CONCEPT', 3.4019391052900155e-06], ['dloc', 3.4019391052900155e-06], ['"within', 3.4019391052900155e-06], ['%qS",', 3.4019391052900155e-06], ['(orig)', 3.4019391052900155e-06], ['TRUTH_ORIF_EXPR)', 3.4019391052900155e-06], ['resolving', 3.4019391052900155e-06], ['BEGIN', 3.4019391052900155e-06], ['(EXPR_CONSTR_EXPR', 3.4019391052900155e-06], ['(orig),', 3.4019391052900155e-06], ['inform(loc,', 3.4019391052900155e-06], ['convertible', 3.4019391052900155e-06], ['substution', 3.4019391052900155e-06], ['(pattern))', 3.4019391052900155e-06], ['Rebuild', 3.4019391052900155e-06], ['"failed', 3.4019391052900155e-06], ['(vars)', 3.4019391052900155e-06], ['%q#D",', 3.4019391052900155e-06], ['(vars);', 3.4019391052900155e-06], ['ORIGinal', 3.4019391052900155e-06], ['(dependent)', 3.4019391052900155e-06], ['ORIG', 3.4019391052900155e-06], ['improve', 3.4019391052900155e-06], ['original?', 3.4019391052900155e-06], ['"ill-formed', 3.4019391052900155e-06], ['constraint");', 3.4019391052900155e-06], ['reason(s)', 3.4019391052900155e-06], ['satisfied");', 3.4019391052900155e-06], ['Constraints', 3.4019391052900155e-06], ['TI_ARGS', 3.4019391052900155e-06], ['(ci);', 3.4019391052900155e-06], ['detailing', 3.4019391052900155e-06], ['diagnose_constraints', 3.4019391052900155e-06], ['elided', 3.4019391052900155e-06], ['"...', 3.4019391052900155e-06], ['shown",', 3.4019391052900155e-06], ['Derivation', 3.4019391052900155e-06], ['subsumption', 3.4019391052900155e-06], ['algorithms', 3.4019391052900155e-06], ['I>', 3.4019391052900155e-06], ['I,', 3.4019391052900155e-06], ['P>', 3.4019391052900155e-06], ['last,', 3.4019391052900155e-06], ['pred)', 3.4019391052900155e-06], ['(first', 3.4019391052900155e-06], ['last)', 3.4019391052900155e-06], ['(pred(*first))', 3.4019391052900155e-06], ['++first;', 3.4019391052900155e-06], ['Hashing', 3.4019391052900155e-06], ['term_hasher', 3.4019391052900155e-06], ['ggc_ptr_hash<term_entry>', 3.4019391052900155e-06], ['(e->t,', 3.4019391052900155e-06], ['(e1->t,', 3.4019391052900155e-06], ['e2->t);', 3.4019391052900155e-06], ['maintains', 3.4019391052900155e-06], ['stateful', 3.4019391052900155e-06], ['std::list<tree>::iterator', 3.4019391052900155e-06], ['(iterator);', 3.4019391052900155e-06], ['seq.begin();', 3.4019391052900155e-06], ['seq.end();', 3.4019391052900155e-06], ['std::list<tree>', 3.4019391052900155e-06], ['hash_table<term_hasher>', 3.4019391052900155e-06], ['tab;', 3.4019391052900155e-06], ['seq(),', 3.4019391052900155e-06], ['term_list::includes', 3.4019391052900155e-06], ['tab.find', 3.4019391052900155e-06], ['term_list::push_back', 3.4019391052900155e-06], ['(end(),', 3.4019391052900155e-06], ['(unseen)', 3.4019391052900155e-06], ['ITER.', 3.4019391052900155e-06], ['term_list::insert', 3.4019391052900155e-06], ['seq.insert', 3.4019391052900155e-06], ['term_entry**', 3.4019391052900155e-06], ['tab.find_slot', 3.4019391052900155e-06], ['(&ent,', 3.4019391052900155e-06], ['term_entry*', 3.4019391052900155e-06], ['ggc_alloc<term_entry>', 3.4019391052900155e-06], ['ent;', 3.4019391052900155e-06], ['end().', 3.4019391052900155e-06], ['term_list::erase', 3.4019391052900155e-06], ['(includes', 3.4019391052900155e-06], ['{*iter};', 3.4019391052900155e-06], ['tab.remove_elt', 3.4019391052900155e-06], ['seq.erase', 3.4019391052900155e-06], ['seen,', 3.4019391052900155e-06], ['t2.', 3.4019391052900155e-06], ['subgoal)', 3.4019391052900155e-06], ['models', 3.4019391052900155e-06], ['sequent', 3.4019391052900155e-06], ["'A", 3.4019391052900155e-06], ['|-', 3.4019391052900155e-06], ["C'", 3.4019391052900155e-06], ['propositions', 3.4019391052900155e-06], ['(i.e.,', 3.4019391052900155e-06], ['trees).', 3.4019391052900155e-06], ['proof_goal', 3.4019391052900155e-06], ['assumptions;', 3.4019391052900155e-06], ['conclusions;', 3.4019391052900155e-06], ['owns', 3.4019391052900155e-06], ['sub-goal.', 3.4019391052900155e-06], ['subgoals', 3.4019391052900155e-06], ['discharge', 3.4019391052900155e-06], ['proof_state::proof_state', 3.4019391052900155e-06], ['Branch', 3.4019391052900155e-06], ['proof_state::branch', 3.4019391052900155e-06], ['*i;', 3.4019391052900155e-06], ['(++i,', 3.4019391052900155e-06], ['Discharge', 3.4019391052900155e-06], ['non-satisfied', 3.4019391052900155e-06], ['proof_state::discharge', 3.4019391052900155e-06], ['Debugging', 3.4019391052900155e-06], ['ts)', 3.4019391052900155e-06], ['%E",', 3.4019391052900155e-06], ['(g.assumptions);', 3.4019391052900155e-06], ['|-");', 3.4019391052900155e-06], ['(g.conclusions);', 3.4019391052900155e-06], ['Atomicity', 3.4019391052900155e-06], ['non_atomic_constraint_p', 3.4019391052900155e-06], ['atomic,', 3.4019391052900155e-06], ['decompose', 3.4019391052900155e-06], ['atom,', 3.4019391052900155e-06], ['any_non_atomic_constraints_p', 3.4019391052900155e-06], ['(t.begin(),', 3.4019391052900155e-06], ['t.end(),', 3.4019391052900155e-06], ['non_atomic_constraint_p);', 3.4019391052900155e-06], ['validations', 3.4019391052900155e-06], ['undecided', 3.4019391052900155e-06], ['(term_list&,', 3.4019391052900155e-06], ['Hook', 3.4019391052900155e-06], ['(non_atomic_constraint_p', 3.4019391052900155e-06], ['(any_non_atomic_constraints_p', 3.4019391052900155e-06], ['(ts))', 3.4019391052900155e-06], ['(prove_implication', 3.4019391052900155e-06], ['(*i)', 3.4019391052900155e-06], ['(bool*', 3.4019391052900155e-06], ['lookup_subsumption_result', 3.4019391052900155e-06], ['proving', 3.4019391052900155e-06], ['Encountering', 3.4019391052900155e-06], ['anywhere', 3.4019391052900155e-06], ['invalidates', 3.4019391052900155e-06], ['proof,', 3.4019391052900155e-06], ['non-atomic', 3.4019391052900155e-06], ['not-atomic.', 3.4019391052900155e-06], ['(ts.includes', 3.4019391052900155e-06], ['means.', 3.4019391052900155e-06], ['determined,', 3.4019391052900155e-06], ['undecided,', 3.4019391052900155e-06], ['g.conclusions.begin', 3.4019391052900155e-06], ['g.conclusions.end', 3.4019391052900155e-06], ['*iter);', 3.4019391052900155e-06], ['Was', 3.4019391052900155e-06], ['complete?', 3.4019391052900155e-06], ['(incomplete)', 3.4019391052900155e-06], ['discharged.', 3.4019391052900155e-06], ['invalid)', 3.4019391052900155e-06], ['p.discharge', 3.4019391052900155e-06], ['discharged,', 3.4019391052900155e-06], ['(p.empty())', 3.4019391052900155e-06], ['PARM_CONSTR_OPERAND(*i));', 3.4019391052900155e-06], ['left-logical', 3.4019391052900155e-06], ['g.assumptions.begin();', 3.4019391052900155e-06], ['g.assumptions.end();', 3.4019391052900155e-06], ['(*iter))', 3.4019391052900155e-06], ['load_assumptions(proof_state&', 3.4019391052900155e-06], ['ti1)', 3.4019391052900155e-06], ['Erase', 3.4019391052900155e-06], ['g1', 3.4019391052900155e-06], ['*gi;', 3.4019391052900155e-06], ['g2', 3.4019391052900155e-06], ['*p.branch', 3.4019391052900155e-06], ['(gi);', 3.4019391052900155e-06], ['th', 3.4019391052900155e-06], ['std::distance', 3.4019391052900155e-06], ['(g1.assumptions.begin', 3.4019391052900155e-06], ['ti1);', 3.4019391052900155e-06], ['ti2', 3.4019391052900155e-06], ['g2.assumptions.begin', 3.4019391052900155e-06], ['std::advance', 3.4019391052900155e-06], ['branches.', 3.4019391052900155e-06], ['g1.assumptions.replace', 3.4019391052900155e-06], ['(ti1,', 3.4019391052900155e-06], ['g2.assumptions.replace', 3.4019391052900155e-06], ['explode_goal', 3.4019391052900155e-06], ['gi)', 3.4019391052900155e-06], ['term_list&', 3.4019391052900155e-06], ['gi->assumptions;', 3.4019391052900155e-06], ['(*ti)', 3.4019391052900155e-06], ['++ti;', 3.4019391052900155e-06], ['disjunction,', 3.4019391052900155e-06], ['(explode_goal', 3.4019391052900155e-06], ['iter))', 3.4019391052900155e-06], ['g,', 3.4019391052900155e-06], ['g.replace(i,', 3.4019391052900155e-06], ['conclusion', 3.4019391052900155e-06], ['tpp-level', 3.4019391052900155e-06], ['g.conclusions.begin();', 3.4019391052900155e-06], ['g.conclusions.end();', 3.4019391052900155e-06], ['(g.conclusions,', 3.4019391052900155e-06], ['High-level', 3.4019391052900155e-06], ['accept.', 3.4019391052900155e-06], ['(cp_tree_equal', 3.4019391052900155e-06], ['c))', 3.4019391052900155e-06], ['proof;', 3.4019391052900155e-06], ['proof.front();', 3.4019391052900155e-06], ['goal.assumptions.push_back(a);', 3.4019391052900155e-06], ['goal.conclusions.push_back(c);', 3.4019391052900155e-06], ['right-expansion', 3.4019391052900155e-06], ['off-chance', 3.4019391052900155e-06], ['step_count', 3.4019391052900155e-06], ['std::size_t', 3.4019391052900155e-06], ['branch_limit', 3.4019391052900155e-06], ['configurable.', 3.4019391052900155e-06], ['proof.size()', 3.4019391052900155e-06], ['entail', 3.4019391052900155e-06], ['solve', 3.4019391052900155e-06], ['++step_count;', 3.4019391052900155e-06], ['step_max)', 3.4019391052900155e-06], ['("subsumption', 3.4019391052900155e-06], ['resolve");', 3.4019391052900155e-06], ['(proof.size()', 3.4019391052900155e-06], ['("exceeded', 3.4019391052900155e-06], ['branches");', 3.4019391052900155e-06], ['deriving', 3.4019391052900155e-06], ['(left));', 3.4019391052900155e-06], ['(right));', 3.4019391052900155e-06], ['(TV_CONSTRAINT_SUB);', 3.4019391052900155e-06], ['(left);', 3.4019391052900155e-06], ['(right);', 3.4019391052900155e-06], ['(left', 3.4019391052900155e-06], ['(!left)', 3.4019391052900155e-06], ['(!right)', 3.4019391052900155e-06], ['(left,', 3.4019391052900155e-06], ['d-attribs.c', 3.4019391052900155e-06], ['exclusions.', 3.4019391052900155e-06], ['ATTR_EXCL(name,', 3.4019391052900155e-06], ['exclusive', 3.4019391052900155e-06], ['attr_noreturn_exclusions[]', 3.4019391052900155e-06], ['attr_returns_twice_exclusions[]', 3.4019391052900155e-06], ['attr_const_pure_exclusions[]', 3.4019391052900155e-06], ['attr_inline_exclusions[]', 3.4019391052900155e-06], ['attr_noinline_exclusions[]', 3.4019391052900155e-06], ['ATTR_SPEC(name,', 3.4019391052900155e-06], ['exclude)', 3.4019391052900155e-06], ['machine-independent', 3.4019391052900155e-06], ['(marking', 3.4019391052900155e-06], ['built-ins)', 3.4019391052900155e-06], ['d_langhook_common_attribute_table[]', 3.4019391052900155e-06], ['handle_noreturn_attribute,', 3.4019391052900155e-06], ['attr_noreturn_exclusions),', 3.4019391052900155e-06], ['("leaf",', 3.4019391052900155e-06], ['handle_leaf_attribute,', 3.4019391052900155e-06], ['handle_const_attribute,', 3.4019391052900155e-06], ['handle_malloc_attribute,', 3.4019391052900155e-06], ['handle_returns_twice_attribute,', 3.4019391052900155e-06], ['attr_returns_twice_exclusions),', 3.4019391052900155e-06], ['handle_pure_attribute,', 3.4019391052900155e-06], ['("nonnull",', 3.4019391052900155e-06], ['handle_nonnull_attribute,', 3.4019391052900155e-06], ['("nothrow",', 3.4019391052900155e-06], ['handle_nothrow_attribute,', 3.4019391052900155e-06], ['("transaction_pure",', 3.4019391052900155e-06], ['handle_transaction_pure_attribute,', 3.4019391052900155e-06], ['("no', 3.4019391052900155e-06], ['vops",', 3.4019391052900155e-06], ['handle_novops_attribute,', 3.4019391052900155e-06], ['handle_type_generic_attribute,', 3.4019391052900155e-06], ['("fn', 3.4019391052900155e-06], ['spec",', 3.4019391052900155e-06], ['handle_fnspec_attribute,', 3.4019391052900155e-06], ['UDAs.', 3.4019391052900155e-06], ['d_langhook_attribute_table[]', 3.4019391052900155e-06], ['d_handle_noinline_attribute,', 3.4019391052900155e-06], ['attr_noinline_exclusions),', 3.4019391052900155e-06], ['d_handle_forceinline_attribute,', 3.4019391052900155e-06], ['attr_inline_exclusions),', 3.4019391052900155e-06], ['("flatten",', 3.4019391052900155e-06], ['d_handle_flatten_attribute,', 3.4019391052900155e-06], ['d_handle_target_attribute,', 3.4019391052900155e-06], ['d_handle_noclone_attribute,', 3.4019391052900155e-06], ['("section",', 3.4019391052900155e-06], ['d_handle_section_attribute,', 3.4019391052900155e-06], ['("alias",', 3.4019391052900155e-06], ['d_handle_alias_attribute,', 3.4019391052900155e-06], ['("weak",', 3.4019391052900155e-06], ['d_handle_weak_attribute,', 3.4019391052900155e-06], ['(TYPE_ATTRIBUTES', 3.4019391052900155e-06], ['build_type_attribute_variant', 3.4019391052900155e-06], ['build_decl_attribute_variant', 3.4019391052900155e-06], ['uda_attribute_p', 3.4019391052900155e-06], ['language,', 3.4019391052900155e-06], ['tables.', 3.4019391052900155e-06], ['internal.', 3.4019391052900155e-06], ['d_langhook_attribute_table;', 3.4019391052900155e-06], ['targetm.attribute_table;', 3.4019391052900155e-06], ['[attribute/uda]', 3.4019391052900155e-06], ['Attributes', 3.4019391052900155e-06], ['(UDA)', 3.4019391052900155e-06], ['queried,', 3.4019391052900155e-06], ['extracted,', 3.4019391052900155e-06], ['manipulated', 3.4019391052900155e-06], ['UDAs', 3.4019391052900155e-06], ['EATTRS', 3.4019391052900155e-06], ["`gcc.attribute.Attribute'.", 3.4019391052900155e-06], ['maps', 3.4019391052900155e-06], ['(Expressions', 3.4019391052900155e-06], ['*eattrs)', 3.4019391052900155e-06], ['(!eattrs)', 3.4019391052900155e-06], ['expandTuples', 3.4019391052900155e-06], ['(eattrs);', 3.4019391052900155e-06], ['eattrs->dim;', 3.4019391052900155e-06], ['*attr', 3.4019391052900155e-06], ['(*eattrs)[i];', 3.4019391052900155e-06], ['attr->type->toDsymbol', 3.4019391052900155e-06], ['(!sym)', 3.4019391052900155e-06], ['Attribute', 3.4019391052900155e-06], ['(Dsymbol*)', 3.4019391052900155e-06], ['sym->getModule', 3.4019391052900155e-06], ['(!(strcmp', 3.4019391052900155e-06], ['(mod->toChars', 3.4019391052900155e-06], ['"attribute")', 3.4019391052900155e-06], ['mod->parent', 3.4019391052900155e-06], ['(mod->parent->toChars', 3.4019391052900155e-06], ['!mod->parent->parent))', 3.4019391052900155e-06], ['folded.', 3.4019391052900155e-06], ['TOKcall)', 3.4019391052900155e-06], ['attr->ctfeInterpret', 3.4019391052900155e-06], ['`Attribute("attrib",', 3.4019391052900155e-06], ['"value",', 3.4019391052900155e-06], ["...)'", 3.4019391052900155e-06], ['TOKstructliteral);', 3.4019391052900155e-06], ['*elems', 3.4019391052900155e-06], ['((StructLiteralExp*)', 3.4019391052900155e-06], ['attr)->elements;', 3.4019391052900155e-06], ['(*elems)[0];', 3.4019391052900155e-06], ['(e0->op', 3.4019391052900155e-06], ['e0->toChars', 3.4019391052900155e-06], ['(StringExp*)', 3.4019391052900155e-06], ['e0;', 3.4019391052900155e-06], ['(se->sz', 3.4019391052900155e-06], ['(se->len', 3.4019391052900155e-06], ['*)(se->len', 3.4019391052900155e-06], ['se->string', 3.4019391052900155e-06], ['(!uda_attribute_p', 3.4019391052900155e-06], ['(e0->loc),', 3.4019391052900155e-06], ['OPT_Wattributes,', 3.4019391052900155e-06], ['elems->dim;', 3.4019391052900155e-06], ['(*elems)[j];', 3.4019391052900155e-06], ['TOKstring', 3.4019391052900155e-06], ['((StringExp', 3.4019391052900155e-06], ['e)->sz', 3.4019391052900155e-06], ['*)(s->len', 3.4019391052900155e-06], ['s->string', 3.4019391052900155e-06], ['(s->len,', 3.4019391052900155e-06], ['(attribs,', 3.4019391052900155e-06], ['list);', 3.4019391052900155e-06], ['attribs;', 3.4019391052900155e-06], ['"noreturn"', 3.4019391052900155e-06], ['"leaf"', 3.4019391052900155e-06], ['effect",', 3.4019391052900155e-06], ['"const"', 3.4019391052900155e-06], ['(type))));', 3.4019391052900155e-06], ['"malloc"', 3.4019391052900155e-06], ['(*node))));', 3.4019391052900155e-06], ['DECL_IS_MALLOC', 3.4019391052900155e-06], ['"pure"', 3.4019391052900155e-06], ['vops"', 3.4019391052900155e-06], ['nonnull', 3.4019391052900155e-06], ['handling;', 3.4019391052900155e-06], ['get_nonnull_operand', 3.4019391052900155e-06], ['arg_num_expr,', 3.4019391052900155e-06], ['*valp)', 3.4019391052900155e-06], ['(!tree_fits_uhwi_p', 3.4019391052900155e-06], ['(arg_num_expr))', 3.4019391052900155e-06], ['*valp', 3.4019391052900155e-06], ['(arg_num_expr);', 3.4019391052900155e-06], ['"nonnull"', 3.4019391052900155e-06], ['non-null.', 3.4019391052900155e-06], ['type-generic', 3.4019391052900155e-06], ['prototype.', 3.4019391052900155e-06], ['(prototype_p', 3.4019391052900155e-06], ['!TYPE_ATTRIBUTES', 3.4019391052900155e-06], ['(type)));', 3.4019391052900155e-06], ['argument;', 3.4019391052900155e-06], ['arg_num', 3.4019391052900155e-06], ['ck_num;', 3.4019391052900155e-06], ['(!get_nonnull_operand', 3.4019391052900155e-06], ['&arg_num))', 3.4019391052900155e-06], ['(argument)', 3.4019391052900155e-06], ['(ck_num', 3.4019391052900155e-06], ['ck_num++)', 3.4019391052900155e-06], ['(!argument', 3.4019391052900155e-06], ['ck_num', 3.4019391052900155e-06], ['arg_num)', 3.4019391052900155e-06], ['(argument);', 3.4019391052900155e-06], ['(argument))', 3.4019391052900155e-06], ['"nothrow"', 3.4019391052900155e-06], ['"type_generic"', 3.4019391052900155e-06], ['(!prototype_p', 3.4019391052900155e-06], ['stdarg_p', 3.4019391052900155e-06], ['"transaction_pure"', 3.4019391052900155e-06], ['"returns_twice"', 3.4019391052900155e-06], ['DECL_IS_RETURNS_TWICE', 3.4019391052900155e-06], ['"fn', 3.4019391052900155e-06], ['spec"', 3.4019391052900155e-06], ['STRING_CST', 3.4019391052900155e-06], ['!TREE_CHAIN', 3.4019391052900155e-06], ['(args));', 3.4019391052900155e-06], ['"noinline"', 3.4019391052900155e-06], ['"forceinline"', 3.4019391052900155e-06], ['always_inline.', 3.4019391052900155e-06], ['("always_inline",', 3.4019391052900155e-06], ['("always_inline"),', 3.4019391052900155e-06], ['DECL_DISREGARD_INLINE_LIMITS', 3.4019391052900155e-06], ['"flatten"', 3.4019391052900155e-06], ['"target"', 3.4019391052900155e-06], ['targetm.target_option.valid_attribute_p', 3.4019391052900155e-06], ['(*node,', 3.4019391052900155e-06], ['flags))', 3.4019391052900155e-06], ['"noclone"', 3.4019391052900155e-06], ['noclone.', 3.4019391052900155e-06], ['("noclone"),', 3.4019391052900155e-06], ['"section"', 3.4019391052900155e-06], ['(targetm_common.have_named_sections)', 3.4019391052900155e-06], ['!TREE_STATIC', 3.4019391052900155e-06], ['"local', 3.4019391052900155e-06], ['(args)))', 3.4019391052900155e-06], ['conflicts', 3.4019391052900155e-06], ['!targetm.have_tls', 3.4019391052900155e-06], ['targetm.emutls.tmpl_section', 3.4019391052900155e-06], ['DECL_THREAD_LOCAL_P', 3.4019391052900155e-06], ['overridden",', 3.4019391052900155e-06], ['(args)));', 3.4019391052900155e-06], ['%q+D",', 3.4019391052900155e-06], ['(*node),', 3.4019391052900155e-06], ['target");', 3.4019391052900155e-06], ['"alias"', 3.4019391052900155e-06], ['VAR_DECL)', 3.4019391052900155e-06], ['((TREE_CODE', 3.4019391052900155e-06], ['!DECL_EXTERNAL', 3.4019391052900155e-06], ['tentative', 3.4019391052900155e-06], ['non-tentative', 3.4019391052900155e-06], ['overrides.', 3.4019391052900155e-06], ['attribute",', 3.4019391052900155e-06], ['(decl_function_context', 3.4019391052900155e-06], ['global",', 3.4019391052900155e-06], ['("attribute', 3.4019391052900155e-06], ['(TREE_STRING_POINTER', 3.4019391052900155e-06], ['"weak"', 3.4019391052900155e-06], ['"inline', 3.4019391052900155e-06], ['weak",', 3.4019391052900155e-06], ['*n', 3.4019391052900155e-06], ['n->refuse_visibility_changes)', 3.4019391052900155e-06], ['declare_weak', 3.4019391052900155e-06], ['*gcc_builtins_functions', 3.4019391052900155e-06], ['*gcc_builtins_libfuncs', 3.4019391052900155e-06], ['*gcc_builtins_types', 3.4019391052900155e-06], ['*dsym;', 3.4019391052900155e-06], ['*t,', 3.4019391052900155e-06], ['dtype(t),', 3.4019391052900155e-06], ['ctype(c),', 3.4019391052900155e-06], ['dsym(d)', 3.4019391052900155e-06], ['vec<builtin_data>', 3.4019391052900155e-06], ['builtin_converted_decls;', 3.4019391052900155e-06], ['build_ctype()', 3.4019391052900155e-06], ["char'", 3.4019391052900155e-06], ['`D', 3.4019391052900155e-06], ["char',", 3.4019391052900155e-06], ['`char', 3.4019391052900155e-06], ['*`', 3.4019391052900155e-06], ['MOD', 3.4019391052900155e-06], ['(TYPE_READONLY', 3.4019391052900155e-06], ['MODconst;', 3.4019391052900155e-06], ['(TYPE_VOLATILE', 3.4019391052900155e-06], ['MODshared;', 3.4019391052900155e-06], ['before,', 3.4019391052900155e-06], ['builtin_converted_decls[i].ctype;', 3.4019391052900155e-06], ['builtin_converted_decls[i].dtype;', 3.4019391052900155e-06], ['Needs', 3.4019391052900155e-06], ['chars/string.', 3.4019391052900155e-06], ['char_type_node)', 3.4019391052900155e-06], ['Type::tchar->addMod', 3.4019391052900155e-06], ['(dtype->mod)->pointerTo', 3.4019391052900155e-06], ['(dtype->ty', 3.4019391052900155e-06], ['dtype->pointerTo', 3.4019391052900155e-06], ["`inout'", 3.4019391052900155e-06], ['shared.', 3.4019391052900155e-06], ['dtype->ctype', 3.4019391052900155e-06], ['Type::tbool->addMod', 3.4019391052900155e-06], ['cent/ucent', 3.4019391052900155e-06], ['Tint8;', 3.4019391052900155e-06], ['signedness.', 3.4019391052900155e-06], ['(unsignedp', 3.4019391052900155e-06], ['dtype->isunsigned', 3.4019391052900155e-06], ['dtype->size', 3.4019391052900155e-06], ['Tfloat32;', 3.4019391052900155e-06], ['Tfloat80;', 3.4019391052900155e-06], ['Tcomplex32;', 3.4019391052900155e-06], ['Tcomplex80;', 3.4019391052900155e-06], ['Type::tvoid->addMod', 3.4019391052900155e-06], ['ub', 3.4019391052900155e-06], ['(lb),', 3.4019391052900155e-06], ['ub,', 3.4019391052900155e-06], ['lb);', 3.4019391052900155e-06], ['(length))->addMod', 3.4019391052900155e-06], ['(nunits.to_constant', 3.4019391052900155e-06], ['())->addMod', 3.4019391052900155e-06], ['(dtype->nextOf', 3.4019391052900155e-06], ['()->isTypeBasic', 3.4019391052900155e-06], ['(TypeVector::create', 3.4019391052900155e-06], ['dtype))->addMod', 3.4019391052900155e-06], ['structname', 3.4019391052900155e-06], ['(structname));', 3.4019391052900155e-06], ["`object'", 3.4019391052900155e-06], ["'object'", 3.4019391052900155e-06], ['meantime.', 3.4019391052900155e-06], ['*object', 3.4019391052900155e-06], ['("object");', 3.4019391052900155e-06], ['*stubmod', 3.4019391052900155e-06], ['("object.d",', 3.4019391052900155e-06], ['*sdecl', 3.4019391052900155e-06], ['StructDeclaration::create', 3.4019391052900155e-06], ['sdecl->parent', 3.4019391052900155e-06], ['stubmod;', 3.4019391052900155e-06], ['sdecl->structsize', 3.4019391052900155e-06], ['sdecl->alignsize', 3.4019391052900155e-06], ['sdecl->alignment', 3.4019391052900155e-06], ['STRUCTALIGN_DEFAULT;', 3.4019391052900155e-06], ['sdecl->sizeok', 3.4019391052900155e-06], ['SIZEOKdone;', 3.4019391052900155e-06], ['sdecl->type', 3.4019391052900155e-06], ['(TypeStruct::create', 3.4019391052900155e-06], ['(sdecl))->addMod', 3.4019391052900155e-06], ['sdecl->type->ctype', 3.4019391052900155e-06], ['sdecl->type->merge2', 3.4019391052900155e-06], ['stick.', 3.4019391052900155e-06], ['sdecl->members', 3.4019391052900155e-06], ['sdecl->type;', 3.4019391052900155e-06], ['sdecl));', 3.4019391052900155e-06], ['FUNCTION_TYPE:', 3.4019391052900155e-06], ['Parameters;', 3.4019391052900155e-06], ['args->reserve', 3.4019391052900155e-06], ['(list_length', 3.4019391052900155e-06], ['(argtype', 3.4019391052900155e-06], ['StorageClass', 3.4019391052900155e-06], ['STCundefined;', 3.4019391052900155e-06], ['*targ', 3.4019391052900155e-06], ['(!targ)', 3.4019391052900155e-06], ['args->push', 3.4019391052900155e-06], ['(Parameter::create', 3.4019391052900155e-06], ['(sc,', 3.4019391052900155e-06], ['(args->dim', 3.4019391052900155e-06], ['!varargs_p)', 3.4019391052900155e-06], ['dtype,', 3.4019391052900155e-06], ['varargs_p,', 3.4019391052900155e-06], ['LINKc);', 3.4019391052900155e-06], ['const-folded', 3.4019391052900155e-06], ['cst)', 3.4019391052900155e-06], ['hard,', 3.4019391052900155e-06], ['CTFE-able', 3.4019391052900155e-06], ['COMPLEX_CST)', 3.4019391052900155e-06], ['(TREE_REALPART', 3.4019391052900155e-06], ['(TREE_IMAGPART', 3.4019391052900155e-06], ['(ldouble', 3.4019391052900155e-06], ['(re),', 3.4019391052900155e-06], ['(im));', 3.4019391052900155e-06], ['ComplexExp::create', 3.4019391052900155e-06], ['IntegerExp::create', 3.4019391052900155e-06], ['REAL_CST)', 3.4019391052900155e-06], ['RealExp::create', 3.4019391052900155e-06], ['TREE_STRING_LENGTH', 3.4019391052900155e-06], ['StringExp::create', 3.4019391052900155e-06], ['CONST_CAST', 3.4019391052900155e-06], ['string),', 3.4019391052900155e-06], ['VECTOR_CST)', 3.4019391052900155e-06], ['VECTOR_CST_NELTS', 3.4019391052900155e-06], ['(cst).to_constant', 3.4019391052900155e-06], ['Expressions;', 3.4019391052900155e-06], ['elements->setDim', 3.4019391052900155e-06], ['(nunits);', 3.4019391052900155e-06], ['nunits;', 3.4019391052900155e-06], ['(VECTOR_CST_ELT', 3.4019391052900155e-06], ['(elem', 3.4019391052900155e-06], ['(*elements)[i]', 3.4019391052900155e-06], ['elem;', 3.4019391052900155e-06], ['ArrayLiteralExp::create', 3.4019391052900155e-06], ['elements);', 3.4019391052900155e-06], ['((TypeVector', 3.4019391052900155e-06], ['type)->basetype;', 3.4019391052900155e-06], ['VectorExp::create', 3.4019391052900155e-06], ['TARGET_D_CPU_VERSIONS', 3.4019391052900155e-06], ['TARGET_D_OS_VERSIONS.', 3.4019391052900155e-06], ['d_add_builtin_version', 3.4019391052900155e-06], ['targeted.', 3.4019391052900155e-06], ['fixed.', 3.4019391052900155e-06], ['"linux")', 3.4019391052900155e-06], ['global.params.isLinux', 3.4019391052900155e-06], ['"OSX")', 3.4019391052900155e-06], ['global.params.isOSX', 3.4019391052900155e-06], ['"Windows")', 3.4019391052900155e-06], ['global.params.isWindows', 3.4019391052900155e-06], ['"FreeBSD")', 3.4019391052900155e-06], ['global.params.isFreeBSD', 3.4019391052900155e-06], ['"OpenBSD")', 3.4019391052900155e-06], ['global.params.isOpenBSD', 3.4019391052900155e-06], ['"Solaris")', 3.4019391052900155e-06], ['global.params.isSolaris', 3.4019391052900155e-06], ['is64bit', 3.4019391052900155e-06], ['x86_64', 3.4019391052900155e-06], ['"X86_64")', 3.4019391052900155e-06], ['("GNU");', 3.4019391052900155e-06], ['("D_Version2");', 3.4019391052900155e-06], ['("BigEndian");', 3.4019391052900155e-06], ['("LittleEndian");', 3.4019391052900155e-06], ['UI_SJLJ)', 3.4019391052900155e-06], ['("GNU_SjLj_Exceptions");', 3.4019391052900155e-06], ['UI_SEH)', 3.4019391052900155e-06], ['("GNU_SEH_Exceptions");', 3.4019391052900155e-06], ['UI_DWARF2)', 3.4019391052900155e-06], ['("GNU_DWARF2_Exceptions");', 3.4019391052900155e-06], ['(!targetm.have_tls)', 3.4019391052900155e-06], ['("GNU_EMUTLS");', 3.4019391052900155e-06], ['(STACK_GROWS_DOWNWARD)', 3.4019391052900155e-06], ['("GNU_StackGrowsDown");', 3.4019391052900155e-06], ['competition.', 3.4019391052900155e-06], ['("GNU_InlineAsm");', 3.4019391052900155e-06], ['LP64', 3.4019391052900155e-06], ['(global.params.isLP64)', 3.4019391052900155e-06], ['("D_LP64");', 3.4019391052900155e-06], ['Setting', 3.4019391052900155e-06], ['coverage', 3.4019391052900155e-06], ['flag_test_coverage', 3.4019391052900155e-06], ['unset.', 3.4019391052900155e-06], ['(flag_test_coverage)', 3.4019391052900155e-06], ['("D_Coverage");', 3.4019391052900155e-06], ['(flag_pic)', 3.4019391052900155e-06], ['("D_PIC");', 3.4019391052900155e-06], ['(global.params.doDocComments)', 3.4019391052900155e-06], ['("D_Ddoc");', 3.4019391052900155e-06], ['("unittest");', 3.4019391052900155e-06], ['("assert");', 3.4019391052900155e-06], ['BOUNDSCHECKoff)', 3.4019391052900155e-06], ['("D_NoBoundsChecks");', 3.4019391052900155e-06], ['("all");', 3.4019391052900155e-06], ['targetdm.d_cpu_versions', 3.4019391052900155e-06], ['targetdm.d_os_versions', 3.4019391052900155e-06], ['("CppRuntime_Gcc");', 3.4019391052900155e-06], ['d_build_builtins_module.', 3.4019391052900155e-06], ['Analogous', 3.4019391052900155e-06], ['`alias', 3.4019391052900155e-06], ["TYPE'", 3.4019391052900155e-06], ['build_alias_declaration', 3.4019391052900155e-06], ['*alias,', 3.4019391052900155e-06], ['AliasDeclaration::create', 3.4019391052900155e-06], ['(alias),', 3.4019391052900155e-06], ['*members', 3.4019391052900155e-06], ['(!tf)', 3.4019391052900155e-06], ['functions:', 3.4019391052900155e-06], ['@safe', 3.4019391052900155e-06], ['pure.', 3.4019391052900155e-06], ["`__attribute__(nothrow)'", 3.4019391052900155e-06], ["`@trusted'.", 3.4019391052900155e-06], ['purity', 3.4019391052900155e-06], ["`-foptions'", 3.4019391052900155e-06], ['passed,', 3.4019391052900155e-06], ['flag_unsafe_math_optimizations.', 3.4019391052900155e-06], ["`nothrow'", 3.4019391052900155e-06], ["`@nogc'.", 3.4019391052900155e-06], ['tf->purity', 3.4019391052900155e-06], ['PUREstrong', 3.4019391052900155e-06], ['PUREconst', 3.4019391052900155e-06], ['PUREimpure;', 3.4019391052900155e-06], ['TRUSTsafe', 3.4019391052900155e-06], ['TRUSTtrusted', 3.4019391052900155e-06], ['TRUSTsystem;', 3.4019391052900155e-06], ['tf->isnothrow', 3.4019391052900155e-06], ['tf->isnogc', 3.4019391052900155e-06], ['FuncDeclaration::create', 3.4019391052900155e-06], ['STCextern,', 3.4019391052900155e-06], ['func->csym', 3.4019391052900155e-06], ['func->builtin', 3.4019391052900155e-06], ['(targetm.enum_va_list_p)', 3.4019391052900155e-06], ['targetm.enum_va_list_p', 3.4019391052900155e-06], ['&type);', 3.4019391052900155e-06], ['Currently,', 3.4019391052900155e-06], ['semantic,', 3.4019391052900155e-06], ['builtin_converted_decls[i].dsym;', 3.4019391052900155e-06], ['dsym->parent', 3.4019391052900155e-06], ['built,', 3.4019391052900155e-06], ['("__builtin_va_list",', 3.4019391052900155e-06], ['Type::tvalist));', 3.4019391052900155e-06], ['Expose', 3.4019391052900155e-06], ['("__builtin_clong",', 3.4019391052900155e-06], ['(long_unsigned_type_node);', 3.4019391052900155e-06], ['("__builtin_culong",', 3.4019391052900155e-06], ['(long_long_integer_type_node);', 3.4019391052900155e-06], ['("__builtin_clonglong",', 3.4019391052900155e-06], ['(long_long_unsigned_type_node);', 3.4019391052900155e-06], ['("__builtin_culonglong",', 3.4019391052900155e-06], ['("__builtin_machine_byte",', 3.4019391052900155e-06], ['("__builtin_machine_ubyte",', 3.4019391052900155e-06], ['("__builtin_machine_int",', 3.4019391052900155e-06], ['("__builtin_machine_uint",', 3.4019391052900155e-06], ['("__builtin_pointer_int",', 3.4019391052900155e-06], ['("__builtin_pointer_uint",', 3.4019391052900155e-06], ['_Unwind_Word', 3.4019391052900155e-06], ['targetm.unwind_word_mode', 3.4019391052900155e-06], ['("__builtin_unwind_int",', 3.4019391052900155e-06], ['("__builtin_unwind_uint",', 3.4019391052900155e-06], ['m->members->push', 3.4019391052900155e-06], ['(LinkDeclaration::create', 3.4019391052900155e-06], ['(LINKc,', 3.4019391052900155e-06], ['members));', 3.4019391052900155e-06], ['d->isAttribDeclaration', 3.4019391052900155e-06], ['ad->include', 3.4019391052900155e-06], ['decls->dim)', 3.4019391052900155e-06], ['decls->dim;', 3.4019391052900155e-06], ['(*decls)[i];', 3.4019391052900155e-06], ['!fd->fbody)', 3.4019391052900155e-06], ['&t);', 3.4019391052900155e-06], ['(DECL_ASSEMBLER_NAME_SET_P', 3.4019391052900155e-06], ['match,', 3.4019391052900155e-06], ['fd->csym', 3.4019391052900155e-06], ['fd->builtin', 3.4019391052900155e-06], ['!m->members)', 3.4019391052900155e-06], ['m->members->dim;', 3.4019391052900155e-06], ['(*m->members)[i];', 3.4019391052900155e-06], ['segfaults', 3.4019391052900155e-06], ['builtin_type_for_size', 3.4019391052900155e-06], ['DEF_BUILTIN.', 3.4019391052900155e-06], ['(built_in_function', 3.4019391052900155e-06], ['built_in_class', 3.4019391052900155e-06], ['both_p,', 3.4019391052900155e-06], ['fallback_p,', 3.4019391052900155e-06], ['fnattrs,', 3.4019391052900155e-06], ['implicit_p)', 3.4019391052900155e-06], ['*libname;', 3.4019391052900155e-06], ['((!both_p', 3.4019391052900155e-06], ['!fallback_p)', 3.4019391052900155e-06], ['!strncmp', 3.4019391052900155e-06], ['"__builtin_",', 3.4019391052900155e-06], ['("__builtin_")));', 3.4019391052900155e-06], ['("__builtin_");', 3.4019391052900155e-06], ['add_builtin_function', 3.4019391052900155e-06], ['fallback_p', 3.4019391052900155e-06], ['fnattrs);', 3.4019391052900155e-06], ['set_builtin_decl', 3.4019391052900155e-06], ['(fncode,', 3.4019391052900155e-06], ['implicit_p);', 3.4019391052900155e-06], ['string_type_node;', 3.4019391052900155e-06], ['const_string_type_node;', 3.4019391052900155e-06], ['wint_type_node;', 3.4019391052900155e-06], ['intmax_type_node;', 3.4019391052900155e-06], ['uintmax_type_node;', 3.4019391052900155e-06], ['signed_size_type_node;', 3.4019391052900155e-06], ['front-end;', 3.4019391052900155e-06], ['ultimately', 3.4019391052900155e-06], ['void_list_node', 3.4019391052900155e-06], ['string_type_node', 3.4019391052900155e-06], ['(char_type_node);', 3.4019391052900155e-06], ['const_string_type_node', 3.4019391052900155e-06], ['"unsigned', 3.4019391052900155e-06], ['wint_type_node', 3.4019391052900155e-06], ['pid_type_node', 3.4019391052900155e-06], ['Integral', 3.4019391052900155e-06], ['d_byte_type', 3.4019391052900155e-06], ['d_short_type', 3.4019391052900155e-06], ['d_int_type', 3.4019391052900155e-06], ['d_long_type', 3.4019391052900155e-06], ['d_cent_type', 3.4019391052900155e-06], ['Re-define', 3.4019391052900155e-06], ['type_mode', 3.4019391052900155e-06], ['size_type_node', 3.4019391052900155e-06], ['(type_mode,', 3.4019391052900155e-06], ['Bool', 3.4019391052900155e-06], ['Character', 3.4019391052900155e-06], ['d_bool_type', 3.4019391052900155e-06], ['TREE_SET_CODE', 3.4019391052900155e-06], ['(d_bool_type,', 3.4019391052900155e-06], ['BOOLEAN_TYPE);', 3.4019391052900155e-06], ['char8_type_node', 3.4019391052900155e-06], ['(char8_type_node)', 3.4019391052900155e-06], ['char16_type_node', 3.4019391052900155e-06], ['(char16_type_node)', 3.4019391052900155e-06], ['char32_type_node', 3.4019391052900155e-06], ['(char32_type_node)', 3.4019391052900155e-06], ['Imaginary', 3.4019391052900155e-06], ['ifloat_type_node', 3.4019391052900155e-06], ['(ifloat_type_node)', 3.4019391052900155e-06], ['idouble_type_node', 3.4019391052900155e-06], ['(idouble_type_node)', 3.4019391052900155e-06], ['ireal_type_node', 3.4019391052900155e-06], ['(ireal_type_node)', 3.4019391052900155e-06], ['unknown_type_node', 3.4019391052900155e-06], ['vfunc_type', 3.4019391052900155e-06], ['(FUNCTION_TYPE);', 3.4019391052900155e-06], ['vtable_entry_type', 3.4019391052900155e-06], ['vtbl_ptr_type_node', 3.4019391052900155e-06], ['(vtable_entry_type);', 3.4019391052900155e-06], ['(vtbl_ptr_type_node);', 3.4019391052900155e-06], ['vtbl_interface_type_node', 3.4019391052900155e-06], ['domain);', 3.4019391052900155e-06], ["`void[]'", 3.4019391052900155e-06], ['array_type_node', 3.4019391052900155e-06], ['("__builtin_void[]",', 3.4019391052900155e-06], ['(array_type_node)', 3.4019391052900155e-06], ['null_array_node', 3.4019391052900155e-06], ['built_in_attribute', 3.4019391052900155e-06], ['ATTR_LAST', 3.4019391052900155e-06], ['ATTR_LAST];', 3.4019391052900155e-06], ['built_in_attributes', 3.4019391052900155e-06], ['(VALUE),', 3.4019391052900155e-06], ['(STRING);', 3.4019391052900155e-06], ['(built_in_attributes[(int)', 3.4019391052900155e-06], ['PURPOSE],', 3.4019391052900155e-06], ['VALUE],', 3.4019391052900155e-06], ['CHAIN]);', 3.4019391052900155e-06], ['DEF_PRIMITIVE_TYPE(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_0(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_1(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_2(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_3(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_4(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_5(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_6(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_7(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_8(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_9(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_10(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_11(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_0(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_1(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_2(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_3(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_4(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_5(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_6(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_7(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_11(NAME,', 3.4019391052900155e-06], ['DEF_POINTER_TYPE(NAME,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_0', 3.4019391052900155e-06], ['builtin_type;', 3.4019391052900155e-06], ['communication', 3.4019391052900155e-06], ['def_fn_type.', 3.4019391052900155e-06], ['d_init_builtins.', 3.4019391052900155e-06], ['DEF', 3.4019391052900155e-06], ['said', 3.4019391052900155e-06], ['builtin_type_for_size).', 3.4019391052900155e-06], ['(builtin_type', 3.4019391052900155e-06], ['def,', 3.4019391052900155e-06], ['(builtin_type)', 3.4019391052900155e-06], ['builtin_types[a];', 3.4019391052900155e-06], ['builtin_types[ret];', 3.4019391052900155e-06], ['egress:', 3.4019391052900155e-06], ['builtin_types[def]', 3.4019391052900155e-06], ['(list);', 3.4019391052900155e-06], ['VA_LIST_REF_TYPE_NODE', 3.4019391052900155e-06], ['VA_LIST_ARG_TYPE_NODE', 3.4019391052900155e-06], ['builtin-types.def.', 3.4019391052900155e-06], ['va_list_ref_type_node', 3.4019391052900155e-06], ['va_list_arg_type_node', 3.4019391052900155e-06], ['DEF_PRIMITIVE_TYPE(ENUM,', 3.4019391052900155e-06], ['VALUE;', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_0(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_1(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_2(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_3(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_4(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_5(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_6(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_7(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_8(ENUM,', 3.4019391052900155e-06], ['ARG8);', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_9(ENUM,', 3.4019391052900155e-06], ['ARG9);', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_10(ENUM,', 3.4019391052900155e-06], ['ARG10);', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_11(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_0(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_1(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_2(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_3(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_4(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_5(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_6(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_7(ENUM,', 3.4019391052900155e-06], ['DEF_FUNCTION_TYPE_VAR_11(ENUM,', 3.4019391052900155e-06], ['DEF_POINTER_TYPE(ENUM,', 3.4019391052900155e-06], ['(builtin_types[(int)', 3.4019391052900155e-06], ['TYPE]);', 3.4019391052900155e-06], ['BT_LAST]', 3.4019391052900155e-06], ['DEF_BUILTIN(ENUM,', 3.4019391052900155e-06], ['LIBTYPE,', 3.4019391052900155e-06], ['NONANSI_P,', 3.4019391052900155e-06], ['ATTRS,', 3.4019391052900155e-06], ['IMPLICIT,', 3.4019391052900155e-06], ['(NAME', 3.4019391052900155e-06], ['TYPE],', 3.4019391052900155e-06], ['ATTRS],', 3.4019391052900155e-06], ['IMPLICIT);', 3.4019391052900155e-06], ['"builtins.def"', 3.4019391052900155e-06], ['DEF_BUILTIN', 3.4019391052900155e-06], ['Type::tvalist', 3.4019391052900155e-06], ['(va_list_type_node);', 3.4019391052900155e-06], ['(!Type::tvalist)', 3.4019391052900155e-06], ['D");', 3.4019391052900155e-06], ['targetm.canonical_va_list_type.', 3.4019391052900155e-06], ['Type::tvalist->ctype', 3.4019391052900155e-06], ['va_list_type_node;', 3.4019391052900155e-06], ['(Type::tvalist);', 3.4019391052900155e-06], ['(va_list_type_node,', 3.4019391052900155e-06], ['(build_reference_type', 3.4019391052900155e-06], ['(va_list_type_node),', 3.4019391052900155e-06], ['targetm.init_builtins', 3.4019391052900155e-06], ['build_common_builtin_nodes', 3.4019391052900155e-06], ['Registration', 3.4019391052900155e-06], ['machine-', 3.4019391052900155e-06], ['os-specific', 3.4019391052900155e-06], ['(!TYPE_NAME', 3.4019391052900155e-06], ['(!flag_no_builtin', 3.4019391052900155e-06], ['DECL_ASSEMBLER_NAME_SET_P', 3.4019391052900155e-06], ['"gt-d-d-builtins.h"', 3.4019391052900155e-06], ['d-codegen.cc', 3.4019391052900155e-06], ['Code', 3.4019391052900155e-06], ['loc.filename,', 3.4019391052900155e-06], ['loc.linnum);', 3.4019391052900155e-06], ['loc.linnum,', 3.4019391052900155e-06], ['loc.charnum);', 3.4019391052900155e-06], ['gcc_location;', 3.4019391052900155e-06], ['dsym;', 3.4019391052900155e-06], ['dsym->isDeclaration', 3.4019391052900155e-06], ['((parent', 3.4019391052900155e-06], ['parent->toParent2', 3.4019391052900155e-06], ['extern(D)', 3.4019391052900155e-06], ['(parent->isModule', 3.4019391052900155e-06], ['decl->linkage', 3.4019391052900155e-06], ['(parent);', 3.4019391052900155e-06], ["'static'", 3.4019391052900155e-06], ["'__gshared'", 3.4019391052900155e-06], ['Nested', 3.4019391052900155e-06], ['parent->isFuncDeclaration', 3.4019391052900155e-06], ['parent->isAggregateDeclaration', 3.4019391052900155e-06], ['RECORD_TYPE.', 3.4019391052900155e-06], ['(context);', 3.4019391052900155e-06], ['newtype', 3.4019391052900155e-06], ['(newtype)', 3.4019391052900155e-06], ['(newtype);', 3.4019391052900155e-06], ['(f))', 3.4019391052900155e-06], ['declaration_reference_p', 3.4019391052900155e-06], ['decl->type->toBasetype', 3.4019391052900155e-06], ['decl->type,', 3.4019391052900155e-06], ['(decl->isParameter', 3.4019391052900155e-06], ['(decl->type))', 3.4019391052900155e-06], ['decl->type->nextOf', 3.4019391052900155e-06], ['(decl->type->mod);', 3.4019391052900155e-06], ['const.', 3.4019391052900155e-06], ['(decl->isThisDeclaration', 3.4019391052900155e-06], ['MODconst);', 3.4019391052900155e-06], ['argument_reference_p', 3.4019391052900155e-06], ['arg->type->toBasetype', 3.4019391052900155e-06], ['arg->storageClass', 3.4019391052900155e-06], ['arg->type,', 3.4019391052900155e-06], ['arg->type->nextOf', 3.4019391052900155e-06], ['(arg->type->mod);', 3.4019391052900155e-06], ['(dinteger_t', 3.4019391052900155e-06], ['build_int_cst_type', 3.4019391052900155e-06], ['REAL_CST', 3.4019391052900155e-06], ['real_t&', 3.4019391052900155e-06], ['new_value;', 3.4019391052900155e-06], ['TypeBasic', 3.4019391052900155e-06], ['totype->isTypeBasic', 3.4019391052900155e-06], ['type_node', 3.4019391052900155e-06], ['(&new_value.rv', 3.4019391052900155e-06], ['(type_node),', 3.4019391052900155e-06], ['&value.rv', 3.4019391052900155e-06], ['(type_node,', 3.4019391052900155e-06], ['new_value.rv', 3.4019391052900155e-06], ['len_field);', 3.4019391052900155e-06], ['DATA.', 3.4019391052900155e-06], ['ptr_field;', 3.4019391052900155e-06], ['(len_field);', 3.4019391052900155e-06], ['(len_field),', 3.4019391052900155e-06], ['(ptr_field),', 3.4019391052900155e-06], ['ptr_field,', 3.4019391052900155e-06], ['(tb->ty)', 3.4019391052900155e-06], ['type->toChars', 3.4019391052900155e-06], ["ClassDeclaration's", 3.4019391052900155e-06], ['cd->baseClass));', 3.4019391052900155e-06], ['debugger,', 3.4019391052900155e-06], ['described.', 3.4019391052900155e-06], ['unsigned&', 3.4019391052900155e-06], ['(cd->baseclasses->dim);', 3.4019391052900155e-06], ['BINFO_VIRTUAL_P', 3.4019391052900155e-06], ['cd->baseclasses->dim;', 3.4019391052900155e-06], ['i++,', 3.4019391052900155e-06], ['(*cd->baseclasses)[i];', 3.4019391052900155e-06], ['bc->sym,', 3.4019391052900155e-06], ['funcptr', 3.4019391052900155e-06], ['method_field', 3.4019391052900155e-06], ['method_field);', 3.4019391052900155e-06], ['obj_field', 3.4019391052900155e-06], ['obj_field);', 3.4019391052900155e-06], ['METHOD,', 3.4019391052900155e-06], ['(CONSTRUCTOR);', 3.4019391052900155e-06], ['("delegate()",', 3.4019391052900155e-06], ['("object"),', 3.4019391052900155e-06], ['("func"),', 3.4019391052900155e-06], ['(method));', 3.4019391052900155e-06], ['(ctype)),', 3.4019391052900155e-06], ['METHOD_CALL_EXPR', 3.4019391052900155e-06], ['object)', 3.4019391052900155e-06], ['0)->value;', 3.4019391052900155e-06], ['1)->value;', 3.4019391052900155e-06], ['interior', 3.4019391052900155e-06], ['build_constructor_single', 3.4019391052900155e-06], ['(ctype,', 3.4019391052900155e-06], ['delegates,', 3.4019391052900155e-06], ['(null_pointer_node,', 3.4019391052900155e-06], ['null_pointer_node,', 3.4019391052900155e-06], ['retrieve', 3.4019391052900155e-06], ['INDEX.', 3.4019391052900155e-06], ["class's", 3.4019391052900155e-06], ['vtable,', 3.4019391052900155e-06], ['(Target::ptrsize', 3.4019391052900155e-06], ['Lvalue', 3.4019391052900155e-06], ['lost.', 3.4019391052900155e-06], ['SAVE_EXPR:', 3.4019391052900155e-06], ['INDIRECT_REF:', 3.4019391052900155e-06], ['!FUNC_OR_METHOD_TYPE_P', 3.4019391052900155e-06], ['CASE_CONVERT:', 3.4019391052900155e-06], ['unwanted', 3.4019391052900155e-06], ['VALUEP', 3.4019391052900155e-06], ['pre-evaluate', 3.4019391052900155e-06], ['about,', 3.4019391052900155e-06], ['Callers', 3.4019391052900155e-06], ['*valuep)', 3.4019391052900155e-06], ['*valuep;', 3.4019391052900155e-06], ['((e1,', 3.4019391052900155e-06], ['...),', 3.4019391052900155e-06], ['eN):', 3.4019391052900155e-06], ["'eN'", 3.4019391052900155e-06], ['*valuep', 3.4019391052900155e-06], ['(TARGET_EXPR,', 3.4019391052900155e-06], ['(EXPR_HAS_LOCATION', 3.4019391052900155e-06], ['EXPR_LOCATION', 3.4019391052900155e-06], ['reside', 3.4019391052900155e-06], ['expand_expr', 3.4019391052900155e-06], ['ptrtype;', 3.4019391052900155e-06], ['(char[])', 3.4019391052900155e-06], ['(char[]*)', 3.4019391052900155e-06], ['decay', 3.4019391052900155e-06], ['&(e1,', 3.4019391052900155e-06], ['&e2).', 3.4019391052900155e-06], ['request', 3.4019391052900155e-06], ['build_fold_addr_expr_with_type_loc', 3.4019391052900155e-06], ['ptrtype);', 3.4019391052900155e-06], ['TREE_NO_TRAMPOLINE', 3.4019391052900155e-06], ['"used"', 3.4019391052900155e-06], ['read,', 3.4019391052900155e-06], ['DECL_READ_P', 3.4019391052900155e-06], ['SD', 3.4019391052900155e-06], ['zero-initialized', 3.4019391052900155e-06], ['(!identity_compare_p', 3.4019391052900155e-06], ['(ts->sym))', 3.4019391052900155e-06], ['Tcomplex80', 3.4019391052900155e-06], ['Tfloat80', 3.4019391052900155e-06], ['Timaginary80)', 3.4019391052900155e-06], ['vd->type->size', 3.4019391052900155e-06], ['sd->structsize)', 3.4019391052900155e-06], ['sfield', 3.4019391052900155e-06], ['type->isintegral', 3.4019391052900155e-06], ['type->isfloating', 3.4019391052900155e-06], ['(!type->iscomplex', 3.4019391052900155e-06], ['opt_scalar_int_mode', 3.4019391052900155e-06], ['int_mode_for_mode', 3.4019391052900155e-06], ['(mode.exists', 3.4019391052900155e-06], ['&t1)', 3.4019391052900155e-06], ['&t2)', 3.4019391052900155e-06], ['(tmode', 3.4019391052900155e-06], ['(GET_MODE_BITSIZE', 3.4019391052900155e-06], ['t1ref);', 3.4019391052900155e-06], ['(t2ref),', 3.4019391052900155e-06], ['tcmp,', 3.4019391052900155e-06], ['(tmemcmp)', 3.4019391052900155e-06], ['tcmp)', 3.4019391052900155e-06], ['RECORD_TYPES', 3.4019391052900155e-06], ['t1init', 3.4019391052900155e-06], ['(&t1);', 3.4019391052900155e-06], ['t2init', 3.4019391052900155e-06], ['Bitwise', 3.4019391052900155e-06], ['loosing', 3.4019391052900155e-06], ['BLKmode', 3.4019391052900155e-06], ['!identity_compare_p', 3.4019391052900155e-06], ['(sd))', 3.4019391052900155e-06], ['(sd->structsize);', 3.4019391052900155e-06], ['(t1init,', 3.4019391052900155e-06], ['t2init),', 3.4019391052900155e-06], ['ARRAY_TYPES', 3.4019391052900155e-06], ['LENGTH.', 3.4019391052900155e-06], ['(d_bool_type);', 3.4019391052900155e-06], ['pointer-to-array', 3.4019391052900155e-06], ['pointer-to-struct.', 3.4019391052900155e-06], ['(sd->type->pointerTo', 3.4019391052900155e-06], ['t1)));', 3.4019391052900155e-06], ['t2)));', 3.4019391052900155e-06], ['boolean_false_node));', 3.4019391052900155e-06], ['caching', 3.4019391052900155e-06], ['(*t1', 3.4019391052900155e-06], ['*t2);', 3.4019391052900155e-06], ['t1++,', 3.4019391052900155e-06], ['t2++;', 3.4019391052900155e-06], ['(ptrtype)));', 3.4019391052900155e-06], ['ubyte[T]', 3.4019391052900155e-06], ['FIELDPOS.', 3.4019391052900155e-06], ['(Type::tuns8,', 3.4019391052900155e-06], ['(atype,', 3.4019391052900155e-06], ['(atype));', 3.4019391052900155e-06], ['DECL_PADDING_P', 3.4019391052900155e-06], ['*init)', 3.4019391052900155e-06], ['Filling', 3.4019391052900155e-06], ['aggregates,', 3.4019391052900155e-06], ['hole.', 3.4019391052900155e-06], ['FOR_EACH_CONSTRUCTOR_ELT', 3.4019391052900155e-06], ['idx,', 3.4019391052900155e-06], ['layout_typeinfo(),', 3.4019391052900155e-06], ['init->ordered_remove', 3.4019391052900155e-06], ['(idx);', 3.4019391052900155e-06], ['(!finished)', 3.4019391052900155e-06], ['(is_initialized)', 3.4019391052900155e-06], ['(field);', 3.4019391052900155e-06], ['in-place', 3.4019391052900155e-06], ['fieldpos);', 3.4019391052900155e-06], ['overlap.', 3.4019391052900155e-06], ['(fieldpos', 3.4019391052900155e-06], ['nearest', 3.4019391052900155e-06], ['(vtype))', 3.4019391052900155e-06], ['(vtype);', 3.4019391052900155e-06], ['(vfield))', 3.4019391052900155e-06], ['(vfield)))', 3.4019391052900155e-06], ['(vtype)', 3.4019391052900155e-06], ['("overlapping', 3.4019391052900155e-06], ['%qT.%qD",', 3.4019391052900155e-06], ['(vtype),', 3.4019391052900155e-06], ['drained', 3.4019391052900155e-06], ['UNION_TYPE)', 3.4019391052900155e-06], ['assigned,', 3.4019391052900155e-06], ['Finally', 3.4019391052900155e-06], ['pad', 3.4019391052900155e-06], ['consumed', 3.4019391052900155e-06], ['harder.', 3.4019391052900155e-06], ['subfield', 3.4019391052900155e-06], ['(subfield)', 3.4019391052900155e-06], ['subfield;', 3.4019391052900155e-06], ['OBJECT.FIELD', 3.4019391052900155e-06], ['(object)', 3.4019391052900155e-06], ['FIELD_DECL);', 3.4019391052900155e-06], ['e2).field', 3.4019391052900155e-06], ['e2.field)', 3.4019391052900155e-06], ['(&object);', 3.4019391052900155e-06], ['member,', 3.4019391052900155e-06], ['recur', 3.4019391052900155e-06], ['FIELD.', 3.4019391052900155e-06], ['anonymous_field', 3.4019391052900155e-06], ['anonymous_field);', 3.4019391052900155e-06], ['NRVO.', 3.4019391052900155e-06], ['(rhs),', 3.4019391052900155e-06], ['TARGET_EXPR_SLOT.', 3.4019391052900155e-06], ['INIT_EXPR,', 3.4019391052900155e-06], ['INIT_EXPR)', 3.4019391052900155e-06], ['(rhs));', 3.4019391052900155e-06], ['(lhs),', 3.4019391052900155e-06], ['cast(TYPE)(e1,', 3.4019391052900155e-06], ['cast(TYPE)', 3.4019391052900155e-06], ['build_nop,', 3.4019391052900155e-06], ['type-punned,', 3.4019391052900155e-06], ['straight-forward', 3.4019391052900155e-06], ['*(cast(TYPE', 3.4019391052900155e-06], ['*)&e1)', 3.4019391052900155e-06], ['vector-to-array', 3.4019391052900155e-06], ['viewing,', 3.4019391052900155e-06], ['MODIFY_EXPR.', 3.4019391052900155e-06], ['warn', 3.4019391052900155e-06], ['%<null%>",', 3.4019391052900155e-06], ['Aggregate', 3.4019391052900155e-06], ['(arg0)))', 3.4019391052900155e-06], ['<e1', 3.4019391052900155e-06], ['cmptype', 3.4019391052900155e-06], ['build_same_sized_truth_vector_type', 3.4019391052900155e-06], ['cmptype,', 3.4019391052900155e-06], ['VEC_COND_EXPR,', 3.4019391052900155e-06], ['NE_EXPR)', 3.4019391052900155e-06], ['ARG0,', 3.4019391052900155e-06], ['ARG2', 3.4019391052900155e-06], ['(arg2', 3.4019391052900155e-06], ['join', 3.4019391052900155e-06], ['arg0;', 3.4019391052900155e-06], ['(arg0', 3.4019391052900155e-06], ['!TREE_SIDE_EFFECTS', 3.4019391052900155e-06], ["target_expr's", 3.4019391052900155e-06], ['(arg0,', 3.4019391052900155e-06], ['(arg1));', 3.4019391052900155e-06], ['(arg1),', 3.4019391052900155e-06], ['ret)', 3.4019391052900155e-06], ['size_type_node.', 3.4019391052900155e-06], ['IM.', 3.4019391052900155e-06], ['im)', 3.4019391052900155e-06], ['pointer)', 3.4019391052900155e-06], ['TYPE*', 3.4019391052900155e-06], ['indirect.', 3.4019391052900155e-06], ['(INDIRECT_REF,', 3.4019391052900155e-06], ['build_fold_indirect_ref', 3.4019391052900155e-06], ['PTR[INDEX].', 3.4019391052900155e-06], ['target_type', 3.4019391052900155e-06], ['(ptr_type);', 3.4019391052900155e-06], ['size_exp', 3.4019391052900155e-06], ['size_in_bytes', 3.4019391052900155e-06], ['(target_type);', 3.4019391052900155e-06], ['(target_type)', 3.4019391052900155e-06], ['(void_type_node))', 3.4019391052900155e-06], ['(target_type));', 3.4019391052900155e-06], ['(integer_onep', 3.4019391052900155e-06], ['size_exp));', 3.4019391052900155e-06], ['ptr_type,', 3.4019391052900155e-06], ['PLUS_EXPR);', 3.4019391052900155e-06], ['OFFSET).', 3.4019391052900155e-06], ['.length=length,', 3.4019391052900155e-06], ['.ptr=ptr', 3.4019391052900155e-06], ['ptr++;', 3.4019391052900155e-06], ['loop_body', 3.4019391052900155e-06], ['loop_body));', 3.4019391052900155e-06], ['multidimensional', 3.4019391052900155e-06], ['type)->dim->toInteger', 3.4019391052900155e-06], ['dims;', 3.4019391052900155e-06], ['byte*', 3.4019391052900155e-06], ['&a[3];', 3.4019391052900155e-06], ['(type)))', 3.4019391052900155e-06], ['totype', 3.4019391052900155e-06], ['(Type::tuns8->pointerTo', 3.4019391052900155e-06], ['(totype,', 3.4019391052900155e-06], ['throws', 3.4019391052900155e-06], ['INCLUSIVE,', 3.4019391052900155e-06], ['inclusive)', 3.4019391052900155e-06], ['(!array_bounds_check', 3.4019391052900155e-06], ['Prevent', 3.4019391052900155e-06], ['unsigned.', 3.4019391052900155e-06], ['(inclusive', 3.4019391052900155e-06], ['GT_EXPR', 3.4019391052900155e-06], ['GE_EXPR,', 3.4019391052900155e-06], ['boundserr', 3.4019391052900155e-06], ['boundserr,', 3.4019391052900155e-06], ['*fd;', 3.4019391052900155e-06], ['(global.params.useArrayBounds)', 3.4019391052900155e-06], ['BOUNDSCHECKoff:', 3.4019391052900155e-06], ['BOUNDSCHECKon:', 3.4019391052900155e-06], ['BOUNDSCHECKsafeonly:', 3.4019391052900155e-06], ['d_function_chain->function;', 3.4019391052900155e-06], ['fd->type->ty', 3.4019391052900155e-06], ['(tf->trust', 3.4019391052900155e-06], ['TRUSTsafe)', 3.4019391052900155e-06], ['OUT_VAR', 3.4019391052900155e-06], ['*out_var)', 3.4019391052900155e-06], ['(!DECL_P', 3.4019391052900155e-06], ['!REFERENCE_CLASS_P', 3.4019391052900155e-06], ['(*out_var)', 3.4019391052900155e-06], ['*out_var;', 3.4019391052900155e-06], ['VAR_CHAIN.', 3.4019391052900155e-06], ['(var_chain))', 3.4019391052900155e-06], ['ini', 3.4019391052900155e-06], ['(var_chain));', 3.4019391052900155e-06], ['(ini,', 3.4019391052900155e-06], ['body);', 3.4019391052900155e-06], ['(build3', 3.4019391052900155e-06], ['(body),', 3.4019391052900155e-06], ['->toBasetype().', 3.4019391052900155e-06], ['((TypeDelegate', 3.4019391052900155e-06], ['t)->next;', 3.4019391052900155e-06], ['tf;', 3.4019391052900155e-06], ['plain', 3.4019391052900155e-06], ['call_by_alias_p', 3.4019391052900155e-06], ['*caller,', 3.4019391052900155e-06], ['*callee)', 3.4019391052900155e-06], ['(!callee->isNested', 3.4019391052900155e-06], ['(caller->toParent', 3.4019391052900155e-06], ['callee->toParent', 3.4019391052900155e-06], ['callee;', 3.4019391052900155e-06], ['(dsym)', 3.4019391052900155e-06], ['(dsym->isTemplateInstance', 3.4019391052900155e-06], ['(dsym->isFuncDeclaration', 3.4019391052900155e-06], ['caller)', 3.4019391052900155e-06], ['dsym->toParent', 3.4019391052900155e-06], ['(get_function_type', 3.4019391052900155e-06], ['(fd->type),', 3.4019391052900155e-06], ['(fd)),', 3.4019391052900155e-06], ['TF', 3.4019391052900155e-06], ['CALLABLE.', 3.4019391052900155e-06], ['ARGUMENTS', 3.4019391052900155e-06], ['passing.', 3.4019391052900155e-06], ['*tf,', 3.4019391052900155e-06], ['callable,', 3.4019391052900155e-06], ['callable;', 3.4019391052900155e-06], ['(FUNC_OR_METHOD_TYPE_P', 3.4019391052900155e-06], ['FUNCTION_TYPE', 3.4019391052900155e-06], ['(callable)', 3.4019391052900155e-06], ['(callable));', 3.4019391052900155e-06], ['delegate,', 3.4019391052900155e-06], ['(object', 3.4019391052900155e-06], ['(arguments)', 3.4019391052900155e-06], ['tuples', 3.4019391052900155e-06], ['TOKtuple);', 3.4019391052900155e-06], ['CommaExp', 3.4019391052900155e-06], ['(ce->e1);', 3.4019391052900155e-06], ['tce);', 3.4019391052900155e-06], ['(*arguments)[i]', 3.4019391052900155e-06], ['(tf->parameters);', 3.4019391052900155e-06], ['_arguments[]', 3.4019391052900155e-06], ['LINKd', 3.4019391052900155e-06], ['tf->varargs', 3.4019391052900155e-06], ['arguments->dim', 3.4019391052900155e-06], ['formal_args->dim', 3.4019391052900155e-06], ['(!tf->varargs).', 3.4019391052900155e-06], ['varargs)', 3.4019391052900155e-06], ['Actual', 3.4019391052900155e-06], ['*parg', 3.4019391052900155e-06], ['Parameter::getNth', 3.4019391052900155e-06], ['(tf->parameters,', 3.4019391052900155e-06], ['varargs);', 3.4019391052900155e-06], ['(targ,', 3.4019391052900155e-06], ['parg);', 3.4019391052900155e-06], ['(empty_aggregate_p', 3.4019391052900155e-06], ['(targ))', 3.4019391052900155e-06], ['(targ),', 3.4019391052900155e-06], ['targ);', 3.4019391052900155e-06], ['saved_args);', 3.4019391052900155e-06], ['CALL_EXPR_ARGS_ORDERED', 3.4019391052900155e-06], ['(result)))', 3.4019391052900155e-06], ['AssertError', 3.4019391052900155e-06], ['AssertErrorMsg.', 3.4019391052900155e-06], ['(loc.linnum);', 3.4019391052900155e-06], ['(loc.filename);', 3.4019391052900155e-06], ['loc.filename);', 3.4019391052900155e-06], ['(str)', 3.4019391052900155e-06], ['(str));', 3.4019391052900155e-06], ['null_array_node;', 3.4019391052900155e-06], ['(msg', 3.4019391052900155e-06], ['msg,', 3.4019391052900155e-06], ['fmod', 3.4019391052900155e-06], ['double_type_node', 3.4019391052900155e-06], ['idouble_type_node)', 3.4019391052900155e-06], ['(BUILT_IN_FMOD);', 3.4019391052900155e-06], ['float_type_node', 3.4019391052900155e-06], ['ifloat_type_node)', 3.4019391052900155e-06], ['(BUILT_IN_FMODF);', 3.4019391052900155e-06], ['long_double_type_node', 3.4019391052900155e-06], ['ireal_type_node)', 3.4019391052900155e-06], ['(BUILT_IN_FMODL);', 3.4019391052900155e-06], ['(!fmodfn)', 3.4019391052900155e-06], ['("tried', 3.4019391052900155e-06], ['modulo', 3.4019391052900155e-06], ['BASETYPE,', 3.4019391052900155e-06], ['argtypes', 3.4019391052900155e-06], ['argtypes);', 3.4019391052900155e-06], ['TYPE_METHOD_BASETYPE', 3.4019391052900155e-06], ['(fntype)', 3.4019391052900155e-06], ['(basetype));', 3.4019391052900155e-06], ['CFUN.', 3.4019391052900155e-06], ['*sym)', 3.4019391052900155e-06], ['*thisfd', 3.4019391052900155e-06], ['sym->isFuncDeclaration', 3.4019391052900155e-06], ['*fdparent', 3.4019391052900155e-06], ['*fdoverride', 3.4019391052900155e-06], ["'fd'.", 3.4019391052900155e-06], ['"nested', 3.4019391052900155e-06], ['body");', 3.4019391052900155e-06], ['__require.', 3.4019391052900155e-06], ['((fd->ident', 3.4019391052900155e-06], ['("__ensure")', 3.4019391052900155e-06], ['("__require"))', 3.4019391052900155e-06], ['thisfd)', 3.4019391052900155e-06], ['fdoverride', 3.4019391052900155e-06], ['fdparent;', 3.4019391052900155e-06], ['struct).', 3.4019391052900155e-06], ['(sym', 3.4019391052900155e-06], ['!sym->isFuncDeclaration', 3.4019391052900155e-06], ['sym->toParent2', 3.4019391052900155e-06], ['sym;', 3.4019391052900155e-06], ['fdparent)', 3.4019391052900155e-06], ['(!thisfd->vthis)', 3.4019391052900155e-06], ['(sym->loc),', 3.4019391052900155e-06], ['thisfd->toPrettyChars', 3.4019391052900155e-06], ['dsym)', 3.4019391052900155e-06], ['dsym->isAggregateDeclaration', 3.4019391052900155e-06], ['Lnoframe;', 3.4019391052900155e-06], ['(ad->isStructDeclaration', 3.4019391052900155e-06], ['(!ad->isNested', 3.4019391052900155e-06], ['!ad->vthis)', 3.4019391052900155e-06], ['Lnoframe:', 3.4019391052900155e-06], ['(thisfd->loc),', 3.4019391052900155e-06], ['sym->toPrettyChars', 3.4019391052900155e-06], ['(fdparent);', 3.4019391052900155e-06], ['(thisfd,', 3.4019391052900155e-06], ['fdparent);', 3.4019391052900155e-06], ["'thisfd'", 3.4019391052900155e-06], ["'fdparent'", 3.4019391052900155e-06], ['environment,', 3.4019391052900155e-06], ['(fdoverride)', 3.4019391052900155e-06], ['fdoverride->isThis', 3.4019391052900155e-06], ['thisfd->isThis', 3.4019391052900155e-06], ['(cdo', 3.4019391052900155e-06], ['cd);', 3.4019391052900155e-06], ['(cdo->isBaseOf', 3.4019391052900155e-06], ['overriden', 3.4019391052900155e-06], ['OFFSET_RUNTIME);', 3.4019391052900155e-06], ['(fdoverride));', 3.4019391052900155e-06], ["'__chain'.", 3.4019391052900155e-06], ['thisfield', 3.4019391052900155e-06], ['chain_index', 3.4019391052900155e-06], ['(frame_ref);', 3.4019391052900155e-06], ['(frame_ref,', 3.4019391052900155e-06], ['framefields);', 3.4019391052900155e-06], ['thisfield)', 3.4019391052900155e-06], ['(framefields);', 3.4019391052900155e-06], ['(build_constructor', 3.4019391052900155e-06], ['frame_ref;', 3.4019391052900155e-06], ['cd->isNested', 3.4019391052900155e-06], ['cd', 3.4019391052900155e-06], ['dsym->isClassDeclaration', 3.4019391052900155e-06], ['sd->isNested', 3.4019391052900155e-06], ['sd->toParent2', 3.4019391052900155e-06], ['dsym->isStructDeclaration', 3.4019391052900155e-06], ['Starting', 3.4019391052900155e-06], ['FD,', 3.4019391052900155e-06], ['instances.', 3.4019391052900155e-06], ['*ocd)', 3.4019391052900155e-06], ['(ocd', 3.4019391052900155e-06], ['cd)', 3.4019391052900155e-06], ['(get_decl_tree', 3.4019391052900155e-06], ['(fd->vthis),', 3.4019391052900155e-06], ['class/struct', 3.4019391052900155e-06], ['decl->isClassDeclaration', 3.4019391052900155e-06], ['translated.', 3.4019391052900155e-06], ['decl->toParent2', 3.4019391052900155e-06], ['(outer->isStructDeclaration', 3.4019391052900155e-06], ['(outer->parent', 3.4019391052900155e-06], ['outer->parent->isTemplateInstance', 3.4019391052900155e-06], ['outer->parent)->enclosing;', 3.4019391052900155e-06], ['*fdo', 3.4019391052900155e-06], ['(cdo)', 3.4019391052900155e-06], ['(cdo);', 3.4019391052900155e-06], ['(vthis_value', 3.4019391052900155e-06], ['(fdo)', 3.4019391052900155e-06], ['(fdo);', 3.4019391052900155e-06], ['fdo->hasNestedFrameRefs', 3.4019391052900155e-06], ['(fdo->vthis', 3.4019391052900155e-06], ['fdo->vthis->type', 3.4019391052900155e-06], ['(fdo->vthis);', 3.4019391052900155e-06], ['vthis_value;', 3.4019391052900155e-06], ['FFI', 3.4019391052900155e-06], ['ffi,', 3.4019391052900155e-06], ['frame_rec_type', 3.4019391052900155e-06], ['"CLOSURE."', 3.4019391052900155e-06], ['"FRAME.",', 3.4019391052900155e-06], ['("__chain"),', 3.4019391052900155e-06], ['__require', 3.4019391052900155e-06], ['nevertheless', 3.4019391052900155e-06], ['non-locally.', 3.4019391052900155e-06], ['(fd->parameters)', 3.4019391052900155e-06], ['fd->parameters', 3.4019391052900155e-06], ['fd->parameters->dim;', 3.4019391052900155e-06], ['(*fd->parameters)[i];', 3.4019391052900155e-06], ['front.', 3.4019391052900155e-06], ['fd->closureVars[j];', 3.4019391052900155e-06], ['fd->vthis)', 3.4019391052900155e-06], ['v->ident', 3.4019391052900155e-06], ['(v->ident->toChars', 3.4019391052900155e-06], ['SET_DECL_LANG_FRAME_FIELD', 3.4019391052900155e-06], ['(vsym,', 3.4019391052900155e-06], ['(fields,', 3.4019391052900155e-06], ['(vsym)', 3.4019391052900155e-06], ['(fd->nrvo_can', 3.4019391052900155e-06], ['fd->nrvo_var', 3.4019391052900155e-06], ['fd->nrvo_can', 3.4019391052900155e-06], ['((v->edtor', 3.4019391052900155e-06], ['(v->storage_class', 3.4019391052900155e-06], ['STCparameter))', 3.4019391052900155e-06], ['v->needsScopeDtor', 3.4019391052900155e-06], ['"has', 3.4019391052900155e-06], ['scoped', 3.4019391052900155e-06], ['destruction,', 3.4019391052900155e-06], ['closure");', 3.4019391052900155e-06], ['Closures', 3.4019391052900155e-06], ['chuck', 3.4019391052900155e-06], ['chunk,', 3.4019391052900155e-06], ['frames', 3.4019391052900155e-06], ['required,', 3.4019391052900155e-06], ['refs,', 3.4019391052900155e-06], ['(!FRAMEINFO_CREATES_FRAME', 3.4019391052900155e-06], ['decl_ref;', 3.4019391052900155e-06], ['("__closptr");', 3.4019391052900155e-06], ['(LIBCALL_ALLOCMEMORY,', 3.4019391052900155e-06], ['init_exp', 3.4019391052900155e-06], ['(init_exp);', 3.4019391052900155e-06], ['("__frame");', 3.4019391052900155e-06], ['closure/frame,', 3.4019391052900155e-06], ['chain_field', 3.4019391052900155e-06], ['chain_expr', 3.4019391052900155e-06], ['(chain_field,', 3.4019391052900155e-06], ['d_function_chain->static_chain);', 3.4019391052900155e-06], ['(chain_expr);', 3.4019391052900155e-06], ['nonlocally.', 3.4019391052900155e-06], ['(!v->isParameter', 3.4019391052900155e-06], ['vsym);', 3.4019391052900155e-06], ['(!FRAMEINFO_IS_CLOSURE', 3.4019391052900155e-06], ['fds', 3.4019391052900155e-06], ['(DECL_LANG_FRAMEINFO', 3.4019391052900155e-06], ['(fds))', 3.4019391052900155e-06], ['(fds);', 3.4019391052900155e-06], ['(FUNCFRAME_INFO);', 3.4019391052900155e-06], ['(fds)', 3.4019391052900155e-06], ['(fd->needsClosure', 3.4019391052900155e-06], ['(fd->hasNestedFrameRefs', 3.4019391052900155e-06], ['populate', 3.4019391052900155e-06], ['`void*`', 3.4019391052900155e-06], ['(fd->vthis', 3.4019391052900155e-06], ['fd->vthis->type', 3.4019391052900155e-06], ['checkNestedReference,', 3.4019391052900155e-06], ['(deeply)', 3.4019391052900155e-06], ['inherits', 3.4019391052900155e-06], ['vthis', 3.4019391052900155e-06], ['*ff', 3.4019391052900155e-06], ['(ff)', 3.4019391052900155e-06], ['(ff);', 3.4019391052900155e-06], ['(ff', 3.4019391052900155e-06], ['(ffo)));', 3.4019391052900155e-06], ['(ff->vthis', 3.4019391052900155e-06], ['ff->isThis', 3.4019391052900155e-06], ['ad->isNested', 3.4019391052900155e-06], ['d->isAggregateDeclaration', 3.4019391052900155e-06], ['ff->toParent2', 3.4019391052900155e-06], ['(ffi,', 3.4019391052900155e-06], ['fd);', 3.4019391052900155e-06], ['OUTER', 3.4019391052900155e-06], ['INNER.', 3.4019391052900155e-06], ['d_function_chain->static_chain;', 3.4019391052900155e-06], ['outer)', 3.4019391052900155e-06], ['*ad;', 3.4019391052900155e-06], ['*cd;', 3.4019391052900155e-06], ['*sd;', 3.4019391052900155e-06], ['(fd)))', 3.4019391052900155e-06], ['intervening', 3.4019391052900155e-06], ['So,', 3.4019391052900155e-06], ['ad->isStructDeclaration', 3.4019391052900155e-06], ['(outer));', 3.4019391052900155e-06], ['(frame_type),', 3.4019391052900155e-06], ['(inner->loc),', 3.4019391052900155e-06], ['"forward', 3.4019391052900155e-06], ['outer->toChars', 3.4019391052900155e-06], ['d-convert.cc', 3.4019391052900155e-06], ['d_truthvalue_conversion,', 3.4019391052900155e-06], ['op1)', 3.4019391052900155e-06], ['type0,', 3.4019391052900155e-06], ['type1', 3.4019391052900155e-06], ['NON_LVALUE_EXPRs,', 3.4019391052900155e-06], ['etc.,', 3.4019391052900155e-06], ['pointer/int', 3.4019391052900155e-06], ['(type1)', 3.4019391052900155e-06], ['integral,', 3.4019391052900155e-06], ['unsigned/signed', 3.4019391052900155e-06], ['precisions', 3.4019391052900155e-06], ['differ.', 3.4019391052900155e-06], ['(result_type)', 3.4019391052900155e-06], ['op0);', 3.4019391052900155e-06], ['!DECL_WEAK', 3.4019391052900155e-06], ['truth-value,', 3.4019391052900155e-06], ['purpose.', 3.4019391052900155e-06], ['TRUTH_AND_EXPR:', 3.4019391052900155e-06], ['TRUTH_OR_EXPR:', 3.4019391052900155e-06], ['TRUTH_XOR_EXPR:', 3.4019391052900155e-06], ['TRUTH_NOT_EXPR:', 3.4019391052900155e-06], ['INTEGER_CST:', 3.4019391052900155e-06], ['REAL_CST:', 3.4019391052900155e-06], ['&TREE_REAL_CST', 3.4019391052900155e-06], ['&dconst0)', 3.4019391052900155e-06], ['(decl_with_nonnull_addr_p', 3.4019391052900155e-06], ['%<true%>",', 3.4019391052900155e-06], ['COMPLEX_EXPR:', 3.4019391052900155e-06], ['FLOAT_EXPR:', 3.4019391052900155e-06], ['LROTATE_EXPR:', 3.4019391052900155e-06], ['RROTATE_EXPR:', 3.4019391052900155e-06], ['arms', 3.4019391052900155e-06], ['fold_build3', 3.4019391052900155e-06], ['cancel', 3.4019391052900155e-06], ['REFERENCE_TYPE,', 3.4019391052900155e-06], ["`default_conversion'", 3.4019391052900155e-06], ['behave.', 3.4019391052900155e-06], ['narrowing', 3.4019391052900155e-06], ['0))))', 3.4019391052900155e-06], ['(real_part', 3.4019391052900155e-06], ['(t)),', 3.4019391052900155e-06], ['(imaginary_part', 3.4019391052900155e-06], ['*invalid_conv_diag', 3.4019391052900155e-06], ['targetm.invalid_conversion', 3.4019391052900155e-06], ['(invalid_conv_diag)', 3.4019391052900155e-06], ['invalid_conv_diag);', 3.4019391052900155e-06], ['targetm.convert_to_type', 3.4019391052900155e-06], ['ERROR_MARK)', 3.4019391052900155e-06], ['VOID_TYPE)', 3.4019391052900155e-06], ['("void', 3.4019391052900155e-06], ['ought', 3.4019391052900155e-06], ['be");', 3.4019391052900155e-06], ['ENUMERAL_TYPE:', 3.4019391052900155e-06], ['(e))', 3.4019391052900155e-06], ['widen/truncate', 3.4019391052900155e-06], ['utype,', 3.4019391052900155e-06], ['(convert_to_pointer', 3.4019391052900155e-06], ['(IMAGPART_EXPR,', 3.4019391052900155e-06], ['(convert_to_real', 3.4019391052900155e-06], ['(etype))', 3.4019391052900155e-06], ['(COMPLEX_EXPR,', 3.4019391052900155e-06], ['expr));', 3.4019391052900155e-06], ['(convert_to_complex', 3.4019391052900155e-06], ['(convert_to_vector', 3.4019391052900155e-06], ['UNION_TYPE:', 3.4019391052900155e-06], ['(lang_hooks.types_compatible_p', 3.4019391052900155e-06], ['("conversion', 3.4019391052900155e-06], ['non-scalar', 3.4019391052900155e-06], ['requested");', 3.4019391052900155e-06], ['(totype', 3.4019391052900155e-06], ['TOTYPE.', 3.4019391052900155e-06], ['totype))', 3.4019391052900155e-06], ['(ebtype->ty)', 3.4019391052900155e-06], ['(delegate_method', 3.4019391052900155e-06], ['<delegate>.ptr', 3.4019391052900155e-06], ['*)<delegate>.', 3.4019391052900155e-06], ['Allowed', 3.4019391052900155e-06], ['*cdfrom', 3.4019391052900155e-06], ['ebtype->isClassHandle', 3.4019391052900155e-06], ['*cdto', 3.4019391052900155e-06], ['tbtype->isClassHandle', 3.4019391052900155e-06], ['(cdto->isBaseOf', 3.4019391052900155e-06], ['(cdfrom,', 3.4019391052900155e-06], ['OFFSET_RUNTIME)', 3.4019391052900155e-06], ['interface:', 3.4019391052900155e-06], ['(offset)', 3.4019391052900155e-06], ['Forward', 3.4019391052900155e-06], ['OFFSET_FWDREF);', 3.4019391052900155e-06], ['null_pointer_node));', 3.4019391052900155e-06], ['(cdfrom->isCPPclass', 3.4019391052900155e-06], ['Downcasting', 3.4019391052900155e-06], ['(cdto->isCPPclass', 3.4019391052900155e-06], ['class/non-C++', 3.4019391052900155e-06], ['run-time,', 3.4019391052900155e-06], ['cdfrom->isInterfaceDeclaration', 3.4019391052900155e-06], ['LIBCALL_INTERFACE_CAST', 3.4019391052900155e-06], ['LIBCALL_DYNAMIC_CAST;', 3.4019391052900155e-06], ['(cdto)));', 3.4019391052900155e-06], ['ebtype)->dim->toInteger', 3.4019391052900155e-06], ['(tbtype->nextOf', 3.4019391052900155e-06], ['((dim', 3.4019391052900155e-06], ['up",', 3.4019391052900155e-06], ['tsize;', 3.4019391052900155e-06], ['(dim),', 3.4019391052900155e-06], ['tvoid->size()', 3.4019391052900155e-06], ['fsize', 3.4019391052900155e-06], ['(fsize', 3.4019391052900155e-06], ['tsize)', 3.4019391052900155e-06], ['(LIBCALL_ARRAYCAST,', 3.4019391052900155e-06], ['(tsize),', 3.4019391052900155e-06], ['(fsize),', 3.4019391052900155e-06], ['(ebtype->isString', 3.4019391052900155e-06], ['tbtype->isString', 3.4019391052900155e-06], ['Else,', 3.4019391052900155e-06], ['Tnull:', 3.4019391052900155e-06], ['(tbtype->size', 3.4019391052900155e-06], ['ebtype->size', 3.4019391052900155e-06], ['non-imaginary', 3.4019391052900155e-06], ['(!ebtype->iscomplex', 3.4019391052900155e-06], ['!tbtype->iscomplex', 3.4019391052900155e-06], ['(ebtype->isimaginary', 3.4019391052900155e-06], ['tbtype->isimaginary', 3.4019391052900155e-06], ['ebtype->toChars', 3.4019391052900155e-06], ['tbtype->toChars', 3.4019391052900155e-06], ['(tbtype)));', 3.4019391052900155e-06], ['STRING_CST);', 3.4019391052900155e-06], ['semantics', 3.4019391052900155e-06], ['&array[0])', 3.4019391052900155e-06], ['INIT_EXPR.', 3.4019391052900155e-06], ['dimensioned', 3.4019391052900155e-06], ['Tsarrays.', 3.4019391052900155e-06], ['(telem,', 3.4019391052900155e-06], ['ebtype))', 3.4019391052900155e-06], ['*sa_type', 3.4019391052900155e-06], ['tbtype;', 3.4019391052900155e-06], ['sa_type->dim->toUInteger', 3.4019391052900155e-06], ['(count)', 3.4019391052900155e-06], ['(RANGE_EXPR,', 3.4019391052900155e-06], ['sa_type->next);', 3.4019391052900155e-06], ['VAR_DECLs', 3.4019391052900155e-06], ['CONSTRUCTORS.', 3.4019391052900155e-06], ['Front', 3.4019391052900155e-06], ['IntegerExp(0)', 3.4019391052900155e-06], ['zero-init', 3.4019391052900155e-06], ['((tbtype->ty', 3.4019391052900155e-06], ['tbtype->ty', 3.4019391052900155e-06], ['ebtype->isintegral', 3.4019391052900155e-06], ['decayed', 3.4019391052900155e-06], ['(type_passed_as', 3.4019391052900155e-06], ['Arrays', 3.4019391052900155e-06], ['pointers;', 3.4019391052900155e-06], ['enumeral', 3.4019391052900155e-06], ['truth-value', 3.4019391052900155e-06], ['aa.ptr', 3.4019391052900155e-06], ['(arr.length', 3.4019391052900155e-06], ['arr.ptr)', 3.4019391052900155e-06], ['(i.e', 3.4019391052900155e-06], ['arr', 3.4019391052900155e-06], ['null).', 3.4019391052900155e-06], ['(len))', 3.4019391052900155e-06], ['(ptr)))', 3.4019391052900155e-06], ['(len);', 3.4019391052900155e-06], ['TRUTH_OROR', 3.4019391052900155e-06], ['pointer?', 3.4019391052900155e-06], ['func;', 3.4019391052900155e-06], ['TRUTH_ORIF', 3.4019391052900155e-06], ['(obj),', 3.4019391052900155e-06], ['Invalid', 3.4019391052900155e-06], ['passed.', 3.4019391052900155e-06], ['Similar', 3.4019391052900155e-06], ['**vars)', 3.4019391052900155e-06], ['etype))', 3.4019391052900155e-06], ['&var);', 3.4019391052900155e-06], ['(*vars,', 3.4019391052900155e-06], ['(exp->type->arrayOf', 3.4019391052900155e-06], ['d-diagnostics.cc', 3.4019391052900155e-06], ['pp_format().', 3.4019391052900155e-06], ['specifiers', 3.4019391052900155e-06], ['handled:', 3.4019391052900155e-06], ['`...`:', 3.4019391052900155e-06], ['backticks', 3.4019391052900155e-06], ["'%<...%>'.", 3.4019391052900155e-06], ['%-10s:', 3.4019391052900155e-06], ['left-justify', 3.4019391052900155e-06], ['%02x:', 3.4019391052900155e-06], ['zero-padding', 3.4019391052900155e-06], ["'%x'", 3.4019391052900155e-06], ['%X:', 3.4019391052900155e-06], ['hexadecimals', 3.4019391052900155e-06], ['rewritten', 3.4019391052900155e-06], ["'%x'.", 3.4019391052900155e-06], ['freed', 3.4019391052900155e-06], ['*format)', 3.4019391052900155e-06], ['format;', 3.4019391052900155e-06], ['*p;)', 3.4019391052900155e-06], ["'%'", 3.4019391052900155e-06], ['Text', 3.4019391052900155e-06], ['`...`', 3.4019391052900155e-06], ['(inbacktick)', 3.4019391052900155e-06], ['("%>");', 3.4019391052900155e-06], ['("%<");', 3.4019391052900155e-06], ['Malformed', 3.4019391052900155e-06], ['whitespace', 3.4019391052900155e-06], ['Hex', 3.4019391052900155e-06], ['lower-case.', 3.4019391052900155e-06], ["('x');", 3.4019391052900155e-06], ['(!inbacktick);', 3.4019391052900155e-06], ['ATTRIBUTE_GCC_DIAG(3,0)', 3.4019391052900155e-06], ['verbatim)', 3.4019391052900155e-06], ['argp;', 3.4019391052900155e-06], ['va_copy', 3.4019391052900155e-06], ['(argp,', 3.4019391052900155e-06], ['(loc.filename', 3.4019391052900155e-06], ['!verbatim)', 3.4019391052900155e-06], ['rich_loc', 3.4019391052900155e-06], ['diagnostic;', 3.4019391052900155e-06], ['*xformat', 3.4019391052900155e-06], ['diagnostic_set_info_translated', 3.4019391052900155e-06], ['(&diagnostic,', 3.4019391052900155e-06], ['&argp,', 3.4019391052900155e-06], ['&rich_loc,', 3.4019391052900155e-06], ['kind);', 3.4019391052900155e-06], ['(opt', 3.4019391052900155e-06], ['diagnostic.option_index', 3.4019391052900155e-06], ['opt;', 3.4019391052900155e-06], ['diagnostic_report_diagnostic', 3.4019391052900155e-06], ['(global_dc,', 3.4019391052900155e-06], ['&diagnostic);', 3.4019391052900155e-06], ['&argp;', 3.4019391052900155e-06], ['text.x_data', 3.4019391052900155e-06], ['pp_format_verbatim', 3.4019391052900155e-06], ['(global_dc->printer,', 3.4019391052900155e-06], ['pp_newline_and_flush', 3.4019391052900155e-06], ['(global_dc->printer);', 3.4019391052900155e-06], ['(argp);', 3.4019391052900155e-06], ['*prefix2,', 3.4019391052900155e-06], ['global.params.showGaggedErrors)', 3.4019391052900155e-06], ['global.gag', 3.4019391052900155e-06], ['DK_ANACHRONISM', 3.4019391052900155e-06], ['DK_ERROR,', 3.4019391052900155e-06], ['(global.gag)', 3.4019391052900155e-06], ['global.gaggedErrors++;', 3.4019391052900155e-06], ['global.errors++;', 3.4019391052900155e-06], ['errorSupplemental', 3.4019391052900155e-06], ['(global.gag', 3.4019391052900155e-06], ['!global.params.showGaggedErrors)', 3.4019391052900155e-06], ['LOC,', 3.4019391052900155e-06], ['DIAGNOSTICoff)', 3.4019391052900155e-06], ['global.warnings++;', 3.4019391052900155e-06], ['warningSupplemental', 3.4019391052900155e-06], ['DIAGNOSTICoff', 3.4019391052900155e-06], ['global.gag)', 3.4019391052900155e-06], ['treated.', 3.4019391052900155e-06], ['*prefix2)', 3.4019391052900155e-06], ['prefix2);', 3.4019391052900155e-06], ['OPT_Wdeprecated,', 3.4019391052900155e-06], ['deprecationSupplemental', 3.4019391052900155e-06], ['ATTRIBUTE_GCC_DIAG(2,', 3.4019391052900155e-06], ['ATTRIBUTE_GCC_DIAG(1,', 3.4019391052900155e-06], ['(FATAL_EXIT_CODE);', 3.4019391052900155e-06], ['d-frontend.cc', 3.4019391052900155e-06], ['"dmd/compiler.h"', 3.4019391052900155e-06], ['"dmd/scope.h"', 3.4019391052900155e-06], ['Global::_init', 3.4019391052900155e-06], ['this->mars_ext', 3.4019391052900155e-06], ['"d";', 3.4019391052900155e-06], ['this->hdr_ext', 3.4019391052900155e-06], ['"di";', 3.4019391052900155e-06], ['this->doc_ext', 3.4019391052900155e-06], ['"html";', 3.4019391052900155e-06], ['this->ddoc_ext', 3.4019391052900155e-06], ['"ddoc";', 3.4019391052900155e-06], ['this->json_ext', 3.4019391052900155e-06], ['"json";', 3.4019391052900155e-06], ['this->obj_ext', 3.4019391052900155e-06], ['"o";', 3.4019391052900155e-06], ['this->run_noext', 3.4019391052900155e-06], ['this->version', 3.4019391052900155e-06], ['"v"', 3.4019391052900155e-06], ['"verstr.h"', 3.4019391052900155e-06], ['this->stdmsg', 3.4019391052900155e-06], ['stderr;', 3.4019391052900155e-06], ['this->errorLimit', 3.4019391052900155e-06], ['gagging.', 3.4019391052900155e-06], ['Global::startGagging', 3.4019391052900155e-06], ['this->gag++;', 3.4019391052900155e-06], ['this->gaggedErrors;', 3.4019391052900155e-06], ['gagging,', 3.4019391052900155e-06], ['restoring', 3.4019391052900155e-06], ['Global::endGagging', 3.4019391052900155e-06], ['oldGagged)', 3.4019391052900155e-06], ['anyErrs', 3.4019391052900155e-06], ['this->gag--;', 3.4019391052900155e-06], ['errors;', 3.4019391052900155e-06], ['ungagged', 3.4019391052900155e-06], ['this->errors', 3.4019391052900155e-06], ['this->gaggedErrors', 3.4019391052900155e-06], ['oldGagged;', 3.4019391052900155e-06], ['anyErrs;', 3.4019391052900155e-06], ['Global::increaseErrorCount', 3.4019391052900155e-06], ['(gag)', 3.4019391052900155e-06], ['this->gaggedErrors++;', 3.4019391052900155e-06], ['this->errors++;', 3.4019391052900155e-06], ['Loc::Loc', 3.4019391052900155e-06], ['*filename,', 3.4019391052900155e-06], ['linnum,', 3.4019391052900155e-06], ['charnum)', 3.4019391052900155e-06], ['this->linnum', 3.4019391052900155e-06], ['linnum;', 3.4019391052900155e-06], ['charnum;', 3.4019391052900155e-06], ['this->filename', 3.4019391052900155e-06], ['Loc::toChars', 3.4019391052900155e-06], ['(this->filename)', 3.4019391052900155e-06], ['this->filename);', 3.4019391052900155e-06], ['(this->linnum)', 3.4019391052900155e-06], ['this->linnum);', 3.4019391052900155e-06], ['(this->charnum)', 3.4019391052900155e-06], ['this->charnum);', 3.4019391052900155e-06], ['Loc::equals', 3.4019391052900155e-06], ['(this->linnum', 3.4019391052900155e-06], ['loc.linnum', 3.4019391052900155e-06], ['loc.charnum)', 3.4019391052900155e-06], ['(!FileName::equals', 3.4019391052900155e-06], ['(this->filename,', 3.4019391052900155e-06], ['loc.filename))', 3.4019391052900155e-06], ['Port', 3.4019391052900155e-06], ['mini', 3.4019391052900155e-06], ['compiler/system', 3.4019391052900155e-06], ['things.', 3.4019391052900155e-06], ['S1', 3.4019391052900155e-06], ['S2', 3.4019391052900155e-06], ['Port::memicmp', 3.4019391052900155e-06], ['*s1,', 3.4019391052900155e-06], ['*s2,', 3.4019391052900155e-06], ['s1[i];', 3.4019391052900155e-06], ['s2[i];', 3.4019391052900155e-06], ['c2;', 3.4019391052900155e-06], ['uppercase.', 3.4019391052900155e-06], ['Port::strupr', 3.4019391052900155e-06], ['(*s)', 3.4019391052900155e-06], ['(*s);', 3.4019391052900155e-06], ['s++;', 3.4019391052900155e-06], ['Port::isFloat32LiteralOutOfRange', 3.4019391052900155e-06], ['(float_type_node));', 3.4019391052900155e-06], ['Port::isFloat64LiteralOutOfRange', 3.4019391052900155e-06], ['(double_type_node));', 3.4019391052900155e-06], ['Port::readwordLE', 3.4019391052900155e-06], ['p[0];', 3.4019391052900155e-06], ['Port::readwordBE', 3.4019391052900155e-06], ['p[1];', 3.4019391052900155e-06], ['Port::readlongLE', 3.4019391052900155e-06], ['p[3]', 3.4019391052900155e-06], ['p[0]);', 3.4019391052900155e-06], ['Port::readlongBE', 3.4019391052900155e-06], ['p[3]);', 3.4019391052900155e-06], ['SZ-byte', 3.4019391052900155e-06], ['BUFFER,', 3.4019391052900155e-06], ['endian-ness.', 3.4019391052900155e-06], ['Port::valcpy', 3.4019391052900155e-06], ['sz)', 3.4019391052900155e-06], ['(sz)', 3.4019391052900155e-06], ['*(uint8_t', 3.4019391052900155e-06], ['(uint8_t)', 3.4019391052900155e-06], ['*(uint16_t', 3.4019391052900155e-06], ['(uint16_t)', 3.4019391052900155e-06], ['*(uint32_t', 3.4019391052900155e-06], ['(uint32_t)', 3.4019391052900155e-06], ['*(uint64_t', 3.4019391052900155e-06], ['CTFloat', 3.4019391052900155e-06], ['Compile-time', 3.4019391052900155e-06], ['floating-pointer', 3.4019391052900155e-06], ['CTFloat::fabs', 3.4019391052900155e-06], ['ABS_EXPR,', 3.4019391052900155e-06], ['^^', 3.4019391052900155e-06], ['CTFloat::ldexp', 3.4019391052900155e-06], ['Y.', 3.4019391052900155e-06], ['CTFloat::isIdentical', 3.4019391052900155e-06], ['rx', 3.4019391052900155e-06], ['x.rv', 3.4019391052900155e-06], ['ry', 3.4019391052900155e-06], ['y.rv', 3.4019391052900155e-06], ['(REAL_VALUE_ISNAN', 3.4019391052900155e-06], ['(rx)', 3.4019391052900155e-06], ['(ry))', 3.4019391052900155e-06], ['real_identical', 3.4019391052900155e-06], ['(&rx,', 3.4019391052900155e-06], ['&ry);', 3.4019391052900155e-06], ['CTFloat::isNaN', 3.4019391052900155e-06], ['isNaN,', 3.4019391052900155e-06], ['signalling.', 3.4019391052900155e-06], ['CTFloat::isSNaN', 3.4019391052900155e-06], ['REAL_VALUE_ISSIGNALING_NAN', 3.4019391052900155e-06], ['+Inf.', 3.4019391052900155e-06], ['CTFloat::isInfinity', 3.4019391052900155e-06], ['CTFloat::parse', 3.4019391052900155e-06], ['Target::RealProperties::infinity)', 3.4019391052900155e-06], ['Format', 3.4019391052900155e-06], ['hexadecimal,', 3.4019391052900155e-06], ['requests', 3.4019391052900155e-06], ['CTFloat::sprint', 3.4019391052900155e-06], ['(fmt', 3.4019391052900155e-06], ["'A')", 3.4019391052900155e-06], ['Converting', 3.4019391052900155e-06], ['hexadecimal', 3.4019391052900155e-06], ['(fmt)', 3.4019391052900155e-06], ['buffer[i]', 3.4019391052900155e-06], ['(buffer[i]);', 3.4019391052900155e-06], ['restricting', 3.4019391052900155e-06], ['18.', 3.4019391052900155e-06], ['CTFloat::hash', 3.4019391052900155e-06], ['real_hash', 3.4019391052900155e-06], ['response', 3.4019391052900155e-06], ['main().', 3.4019391052900155e-06], ['libdruntime,', 3.4019391052900155e-06], ['_Dmain', 3.4019391052900155e-06], ['_Dmain.', 3.4019391052900155e-06], ['Compiler::genCmain', 3.4019391052900155e-06], ['(Scope', 3.4019391052900155e-06], ['(initialized)', 3.4019391052900155e-06], ['__entrypoint.di,', 3.4019391052900155e-06], ['unfound.', 3.4019391052900155e-06], ['("__entrypoint"));', 3.4019391052900155e-06], ['(global.endGagging', 3.4019391052900155e-06], ['(m,', 3.4019391052900155e-06], ['sc->_module);', 3.4019391052900155e-06], ['Compiler::paintAsType', 3.4019391052900155e-06], ['(UnionExp', 3.4019391052900155e-06], ['*expr,', 3.4019391052900155e-06], ['512-bit', 3.4019391052900155e-06], ['buffer[64];', 3.4019391052900155e-06], ['(expr->type->isintegral', 3.4019391052900155e-06], ['(expr->toInteger', 3.4019391052900155e-06], ['(expr->type));', 3.4019391052900155e-06], ['(expr->type->isfloating', 3.4019391052900155e-06], ['(expr->toReal', 3.4019391052900155e-06], ['expr->type);', 3.4019391052900155e-06], ['(expr->op', 3.4019391052900155e-06], ['VECTOR_CST,', 3.4019391052900155e-06], ['expr)->elements;', 3.4019391052900155e-06], ['elements->dim);', 3.4019391052900155e-06], ['elements->dim;', 3.4019391052900155e-06], ['(*elements)[i];', 3.4019391052900155e-06], ['(e->type->isintegral', 3.4019391052900155e-06], ['(e->toInteger', 3.4019391052900155e-06], ['(e->type));', 3.4019391052900155e-06], ['(e->type->isfloating', 3.4019391052900155e-06], ['(e->toReal', 3.4019391052900155e-06], ['expr->type)->dim->toUInteger', 3.4019391052900155e-06], ['expr->type->nextOf', 3.4019391052900155e-06], ['(telem),', 3.4019391052900155e-06], ['native_encode_expr', 3.4019391052900155e-06], ['(buffer));', 3.4019391052900155e-06], ['Interpret', 3.4019391052900155e-06], ['type)->dim->toUInteger', 3.4019391052900155e-06], ['(elem),', 3.4019391052900155e-06], ['TOKvector);', 3.4019391052900155e-06], ['((VectorExp', 3.4019391052900155e-06], ['e)->e1;', 3.4019391052900155e-06], ['gcc.builtins:', 3.4019391052900155e-06], ['core.stdc.*:', 3.4019391052900155e-06], ['m->md;', 3.4019391052900155e-06], ['(!md', 3.4019391052900155e-06], ['!md->id', 3.4019391052900155e-06], ['!md->packages)', 3.4019391052900155e-06], ['md->id)', 3.4019391052900155e-06], ['md->id', 3.4019391052900155e-06], ['m->ident;', 3.4019391052900155e-06], ['(id->toChars', 3.4019391052900155e-06], ['"object"))', 3.4019391052900155e-06], ['"builtins"))', 3.4019391052900155e-06], ['"core")', 3.4019391052900155e-06], ['((*md->packages)[1]->toChars', 3.4019391052900155e-06], ['"stdc"))', 3.4019391052900155e-06], ["caller's", 3.4019391052900155e-06], ['retStyle', 3.4019391052900155e-06], ['finished.', 3.4019391052900155e-06], ['accurate', 3.4019391052900155e-06], ['RETstack;', 3.4019391052900155e-06], ['BUILTIN', 3.4019391052900155e-06], ['isBuiltin', 3.4019391052900155e-06], ['ARGUMENTS.', 3.4019391052900155e-06], ['eval_builtin', 3.4019391052900155e-06], ['BUILTINyes)', 3.4019391052900155e-06], ['(fndecl_built_in_p', 3.4019391052900155e-06], ['INTRINSIC_NONE);', 3.4019391052900155e-06], ['getTypeInfoType', 3.4019391052900155e-06], ['sc->_module->importedFrom', 3.4019391052900155e-06], ['type->vtinfo->type;', 3.4019391052900155e-06], ['inlineCopy', 3.4019391052900155e-06], ['e->copy', 3.4019391052900155e-06], ['d-incpath.cc', 3.4019391052900155e-06], ['"cppdefault.h"', 3.4019391052900155e-06], ['"Translate"', 3.4019391052900155e-06], ['i.e:', 3.4019391052900155e-06], ['/usr/local/lib/gcc', 3.4019391052900155e-06], ['IPREFIX', 3.4019391052900155e-06], ['Based', 3.4019391052900155e-06], ['incpath.c.', 3.4019391052900155e-06], ['*path,', 3.4019391052900155e-06], ['*iprefix)', 3.4019391052900155e-06], ['(cpp_relocated', 3.4019391052900155e-06], ['cpp_PREFIX_len)', 3.4019391052900155e-06], ['cpp_PREFIX,', 3.4019391052900155e-06], ['*relocated_prefix;', 3.4019391052900155e-06], ['configure-time', 3.4019391052900155e-06], ['relocated,', 3.4019391052900155e-06], ['(!relocated_prefix)', 3.4019391052900155e-06], ['directory.', 3.4019391052900155e-06], ['*dummy', 3.4019391052900155e-06], ['(gcc_exec_prefix,', 3.4019391052900155e-06], ['"dummy",', 3.4019391052900155e-06], ['relocated_prefix', 3.4019391052900155e-06], ['make_relative_prefix', 3.4019391052900155e-06], ['cpp_EXEC_PREFIX,', 3.4019391052900155e-06], ['cpp_PREFIX);', 3.4019391052900155e-06], ['(dummy);', 3.4019391052900155e-06], ['(relocated_prefix,', 3.4019391052900155e-06], ['(iprefix', 3.4019391052900155e-06], ['cpp_GCC_INCLUDE_DIR_len)', 3.4019391052900155e-06], ['cpp_GCC_INCLUDE_DIR,', 3.4019391052900155e-06], ['(iprefix,', 3.4019391052900155e-06], ['(!global.path)', 3.4019391052900155e-06], ['global.path', 3.4019391052900155e-06], ['(target', 3.4019391052900155e-06], ['!FileName::exists', 3.4019391052900155e-06], ['global.path->push', 3.4019391052900155e-06], ['(!global.filePath)', 3.4019391052900155e-06], ['global.filePath', 3.4019391052900155e-06], ['(!FileName::exists', 3.4019391052900155e-06], ['global.filePath->push', 3.4019391052900155e-06], ['STDINC,', 3.4019391052900155e-06], ['*iprefix,', 3.4019391052900155e-06], ['*imultilib,', 3.4019391052900155e-06], ['stdinc)', 3.4019391052900155e-06], ['(stdinc)', 3.4019391052900155e-06], ['default_include', 3.4019391052900155e-06], ['cpp_include_defaults;', 3.4019391052900155e-06], ['p->fname;', 3.4019391052900155e-06], ['*path;', 3.4019391052900155e-06], ['(p->cplusplus)', 3.4019391052900155e-06], ['(!p->add_sysroot)', 3.4019391052900155e-06], ['(p->fname,', 3.4019391052900155e-06], ['iprefix);', 3.4019391052900155e-06], ['(p->fname);', 3.4019391052900155e-06], ['"/d",', 3.4019391052900155e-06], ['(*global.params.imppath)[i])', 3.4019391052900155e-06], ['(found)', 3.4019391052900155e-06], ['Multilib', 3.4019391052900155e-06], ['(imultilib)', 3.4019391052900155e-06], ['*target_path', 3.4019391052900155e-06], ['"/",', 3.4019391052900155e-06], ['imultilib,', 3.4019391052900155e-06], ['(target_path);', 3.4019391052900155e-06], ['(global.params.imppath)', 3.4019391052900155e-06], ['(*global.params.imppath)[i];', 3.4019391052900155e-06], ['(global.params.fileImppath)', 3.4019391052900155e-06], ['global.params.fileImppath->dim;', 3.4019391052900155e-06], ['(*global.params.fileImppath)[i];', 3.4019391052900155e-06], ['d-lang.cc', 3.4019391052900155e-06], ['Language-dependent', 3.4019391052900155e-06], ['"dmd/doc.h"', 3.4019391052900155e-06], ['"dmd/json.h"', 3.4019391052900155e-06], ['"dmd/mars.h"', 3.4019391052900155e-06], ['"langhooks-def.h"', 3.4019391052900155e-06], ['"id.h"', 3.4019391052900155e-06], ['type/decl', 3.4019391052900155e-06], ['d_global_trees[DTI_MAX];', 3.4019391052900155e-06], ['Options', 3.4019391052900155e-06], ['d_option_data', 3.4019391052900155e-06], ['*fonly;', 3.4019391052900155e-06], ['-fonly=<arg>', 3.4019391052900155e-06], ['*multilib;', 3.4019391052900155e-06], ['-imultilib', 3.4019391052900155e-06], ['*prefix;', 3.4019391052900155e-06], ['-iprefix', 3.4019391052900155e-06], ['deps;', 3.4019391052900155e-06], ['-M', 3.4019391052900155e-06], ['deps_skip_system;', 3.4019391052900155e-06], ['-MM', 3.4019391052900155e-06], ['*deps_filename;', 3.4019391052900155e-06], ['-M[M]D', 3.4019391052900155e-06], ['*deps_filename_user;', 3.4019391052900155e-06], ['*deps_target;', 3.4019391052900155e-06], ['-M[QT]', 3.4019391052900155e-06], ['deps_phony;', 3.4019391052900155e-06], ['-MP', 3.4019391052900155e-06], ['stdinc;', 3.4019391052900155e-06], ['-nostdinc', 3.4019391052900155e-06], ['d_option;', 3.4019391052900155e-06], ['builtin_modules;', 3.4019391052900155e-06], ['*entrypoint_module', 3.4019391052900155e-06], ['*entrypoint_root_module', 3.4019391052900155e-06], ['*current_binding_level;', 3.4019391052900155e-06], ['*global_binding_level;', 3.4019391052900155e-06], ['*global_declarations;', 3.4019391052900155e-06], ['GCC-style', 3.4019391052900155e-06], ['command-line', 3.4019391052900155e-06], ['QUOTED', 3.4019391052900155e-06], ['quoted.', 3.4019391052900155e-06], ['*target,', 3.4019391052900155e-06], ['quoted)', 3.4019391052900155e-06], ['(!d_option.deps_target)', 3.4019391052900155e-06], ["('", 3.4019391052900155e-06], ['d_option.deps_target->reserve', 3.4019391052900155e-06], ['(target));', 3.4019391052900155e-06], ['(!quoted)', 3.4019391052900155e-06], ['d_option.deps_target->writestring', 3.4019391052900155e-06], ['Quote', 3.4019391052900155e-06], ['Make.', 3.4019391052900155e-06], ['target;', 3.4019391052900155e-06], ["':", 3.4019391052900155e-06], ['q', 3.4019391052900155e-06], ['q--)', 3.4019391052900155e-06], ["'$':", 3.4019391052900155e-06], ["('$');", 3.4019391052900155e-06], ["'#':", 3.4019391052900155e-06], ['MODULE', 3.4019391052900155e-06], ['COLMAX', 3.4019391052900155e-06], ['columns', 3.4019391052900155e-06], ['word-wrap', 3.4019391052900155e-06], ['(0', 3.4019391052900155e-06], ['wrap).', 3.4019391052900155e-06], ['*module,', 3.4019391052900155e-06], ['colmax', 3.4019391052900155e-06], ['72)', 3.4019391052900155e-06], ['hash_set', 3.4019391052900155e-06], ['dependencies;', 3.4019391052900155e-06], ['modlist;', 3.4019391052900155e-06], ['phonylist;', 3.4019391052900155e-06], ['*str;', 3.4019391052900155e-06], ['(d_option.deps_target)', 3.4019391052900155e-06], ['d_option.deps_target->offset;', 3.4019391052900155e-06], ['d_option.deps_target->extractString', 3.4019391052900155e-06], ['module->objfile->name->str;', 3.4019391052900155e-06], ['(":");', 3.4019391052900155e-06], ['(modlist.dim', 3.4019391052900155e-06], ['*depmod', 3.4019391052900155e-06], ['modlist.pop', 3.4019391052900155e-06], ['depmod->srcfile->name->str;', 3.4019391052900155e-06], ['(dependencies.add', 3.4019391052900155e-06], ['(str))', 3.4019391052900155e-06], ['(colmax', 3.4019391052900155e-06], ['colmax)', 3.4019391052900155e-06], ['\\\\\\n', 3.4019391052900155e-06], ['(d_option.deps_phony', 3.4019391052900155e-06], ['!depmod->isRoot', 3.4019391052900155e-06], ['phonylist.push', 3.4019391052900155e-06], ['(depmod);', 3.4019391052900155e-06], ['depmod->aimports.dim;', 3.4019391052900155e-06], ['depmod->aimports[i];', 3.4019391052900155e-06], ['((m->ident', 3.4019391052900155e-06], ['("__entrypoint")', 3.4019391052900155e-06], ['m->ident', 3.4019391052900155e-06], ['("__main"))', 3.4019391052900155e-06], ['modules,', 3.4019391052900155e-06], ['core.*,', 3.4019391052900155e-06], ['std.*,', 3.4019391052900155e-06], ['gcc.*', 3.4019391052900155e-06], ['(d_option.deps_skip_system)', 3.4019391052900155e-06], ['(m->ident', 3.4019391052900155e-06], ['("object")', 3.4019391052900155e-06], ['m->md->packages)', 3.4019391052900155e-06], ['*package', 3.4019391052900155e-06], ['(*m->md->packages)[0];', 3.4019391052900155e-06], ['("core")', 3.4019391052900155e-06], ['("std")', 3.4019391052900155e-06], ['("gcc"))', 3.4019391052900155e-06], ['phonylist.dim;', 3.4019391052900155e-06], ['phonylist[i];', 3.4019391052900155e-06], ['(m->srcfile->name->str);', 3.4019391052900155e-06], ['(":\\n");', 3.4019391052900155e-06], ['lang_hooks.init_options', 3.4019391052900155e-06], ['*decoded_options)', 3.4019391052900155e-06], ['global._init', 3.4019391052900155e-06], ['global.vendor', 3.4019391052900155e-06], ['lang_hooks.name;', 3.4019391052900155e-06], ['global.params.argv0', 3.4019391052900155e-06], ['(decoded_options[0].arg);', 3.4019391052900155e-06], ['global.params.link', 3.4019391052900155e-06], ['BOUNDSCHECKdefault;', 3.4019391052900155e-06], ['C++14.', 3.4019391052900155e-06], ['global.params.cplusplus', 3.4019391052900155e-06], ['CppStdRevisionCpp14;', 3.4019391052900155e-06], ['global.params.linkswitches', 3.4019391052900155e-06], ['global.params.libfiles', 3.4019391052900155e-06], ['global.params.objfiles', 3.4019391052900155e-06], ['global.params.ddocfiles', 3.4019391052900155e-06], ['global.params.imppath', 3.4019391052900155e-06], ['global.params.fileImppath', 3.4019391052900155e-06], ['global.params.modFileAliasStrings', 3.4019391052900155e-06], ['GDC-specific', 3.4019391052900155e-06], ['lang_hooks.init_options_struct', 3.4019391052900155e-06], ['OPTS.', 3.4019391052900155e-06], ['(gcc_options', 3.4019391052900155e-06], ['*opts)', 3.4019391052900155e-06], ['opts->x_flag_exceptions', 3.4019391052900155e-06], ['opts->x_flag_complex_method', 3.4019391052900155e-06], ["'errno'", 3.4019391052900155e-06], ['opts->x_flag_errno_math', 3.4019391052900155e-06], ['opts->frontend_set_flag_errno_math', 3.4019391052900155e-06], ['sync', 3.4019391052900155e-06], ['-fbounds-check', 3.4019391052900155e-06], ['opts->x_flag_bounds_check', 3.4019391052900155e-06], ['global.params.useArrayBounds;', 3.4019391052900155e-06], ['precisely', 3.4019391052900155e-06], ['opts->x_flag_wrapv', 3.4019391052900155e-06], ['lang_hooks.lang_mask', 3.4019391052900155e-06], ['CL_D;', 3.4019391052900155e-06], ['lang_hooks.init', 3.4019391052900155e-06], ['Type::_init', 3.4019391052900155e-06], ['Id::initialize', 3.4019391052900155e-06], ['Module::_init', 3.4019391052900155e-06], ['Expression::_init', 3.4019391052900155e-06], ['Objc::_init', 3.4019391052900155e-06], ['init.', 3.4019391052900155e-06], ['global_binding_level', 3.4019391052900155e-06], ['global_binding_level;', 3.4019391052900155e-06], ['(C', 3.4019391052900155e-06], ['(signed_char', 3.4019391052900155e-06], ['build_common_tree_nodes', 3.4019391052900155e-06], ['(flag_exceptions)', 3.4019391052900155e-06], ['using_eh_for_cleanups', 3.4019391052900155e-06], ['(!supports_one_only', 3.4019391052900155e-06], ['flag_weak', 3.4019391052900155e-06], ['main,', 3.4019391052900155e-06], ['main_identifier_node', 3.4019391052900155e-06], ['("main");', 3.4019391052900155e-06], ['library-configured', 3.4019391052900155e-06], ['(d_option.prefix,', 3.4019391052900155e-06], ['d_option.multilib,', 3.4019391052900155e-06], ['d_option.stdinc);', 3.4019391052900155e-06], ['lang_hooks.init_ts', 3.4019391052900155e-06], ['(FLOAT_MOD_EXPR);', 3.4019391052900155e-06], ['(UNSIGNED_RSHIFT_EXPR);', 3.4019391052900155e-06], ['lang_hooks.handle_option', 3.4019391052900155e-06], ['*arg,', 3.4019391052900155e-06], ['cl_option_handlers', 3.4019391052900155e-06], ['*handlers', 3.4019391052900155e-06], ['opt_code', 3.4019391052900155e-06], ['(opt_code)', 3.4019391052900155e-06], ['scode;', 3.4019391052900155e-06], ['OPT_fall_instantiations:', 3.4019391052900155e-06], ['OPT_fassert:', 3.4019391052900155e-06], ['OPT_fbounds_check:', 3.4019391052900155e-06], ['OPT_fbounds_check_:', 3.4019391052900155e-06], ['OPT_fdebug:', 3.4019391052900155e-06], ['global.params.debuglevel', 3.4019391052900155e-06], ['OPT_fdebug_:', 3.4019391052900155e-06], ['DebugCondition::setGlobalLevel', 3.4019391052900155e-06], ['DebugCondition::addGlobalIdent', 3.4019391052900155e-06], ['-fdebug', 3.4019391052900155e-06], ['OPT_fdoc:', 3.4019391052900155e-06], ['OPT_fdoc_dir_:', 3.4019391052900155e-06], ['global.params.docdir', 3.4019391052900155e-06], ['OPT_fdoc_file_:', 3.4019391052900155e-06], ['global.params.docname', 3.4019391052900155e-06], ['OPT_fdoc_inc_:', 3.4019391052900155e-06], ['global.params.ddocfiles->push', 3.4019391052900155e-06], ['OPT_fdump_d_original:', 3.4019391052900155e-06], ['global.params.vcg_ast', 3.4019391052900155e-06], ['OPT_fignore_unknown_pragmas:', 3.4019391052900155e-06], ['global.params.ignoreUnsupportedPragmas', 3.4019391052900155e-06], ['OPT_finvariants:', 3.4019391052900155e-06], ['OPT_fmain:', 3.4019391052900155e-06], ['global.params.addMain', 3.4019391052900155e-06], ['OPT_fmodule_file_:', 3.4019391052900155e-06], ['global.params.modFileAliasStrings->push', 3.4019391052900155e-06], ['(!strchr', 3.4019391052900155e-06], ["'='))", 3.4019391052900155e-06], ['-fmodule-file', 3.4019391052900155e-06], ['OPT_fmoduleinfo:', 3.4019391052900155e-06], ['!value;', 3.4019391052900155e-06], ['OPT_fpostconditions:', 3.4019391052900155e-06], ['OPT_fpreconditions:', 3.4019391052900155e-06], ['OPT_frelease:', 3.4019391052900155e-06], ['OPT_fswitch_errors:', 3.4019391052900155e-06], ['OPT_ftransition_all:', 3.4019391052900155e-06], ['OPT_ftransition_checkimports:', 3.4019391052900155e-06], ['global.params.check10378', 3.4019391052900155e-06], ['OPT_ftransition_complex:', 3.4019391052900155e-06], ['OPT_ftransition_dip1000:', 3.4019391052900155e-06], ['global.params.vsafe', 3.4019391052900155e-06], ['OPT_ftransition_dip25:', 3.4019391052900155e-06], ['OPT_ftransition_field:', 3.4019391052900155e-06], ['OPT_ftransition_import:', 3.4019391052900155e-06], ['global.params.bug10378', 3.4019391052900155e-06], ['OPT_ftransition_nogc:', 3.4019391052900155e-06], ['global.params.vgc', 3.4019391052900155e-06], ['OPT_ftransition_tls:', 3.4019391052900155e-06], ['OPT_funittest:', 3.4019391052900155e-06], ['global.params.useUnitTests', 3.4019391052900155e-06], ['OPT_fversion_:', 3.4019391052900155e-06], ['VersionCondition::setGlobalLevel', 3.4019391052900155e-06], ['VersionCondition::addGlobalIdent', 3.4019391052900155e-06], ['-fversion', 3.4019391052900155e-06], ['OPT_H:', 3.4019391052900155e-06], ['OPT_Hd:', 3.4019391052900155e-06], ['global.params.hdrdir', 3.4019391052900155e-06], ['OPT_Hf:', 3.4019391052900155e-06], ['global.params.hdrname', 3.4019391052900155e-06], ['OPT_imultilib:', 3.4019391052900155e-06], ['OPT_iprefix:', 3.4019391052900155e-06], ['OPT_I:', 3.4019391052900155e-06], ['global.params.imppath->push', 3.4019391052900155e-06], ['OPT_J:', 3.4019391052900155e-06], ['global.params.fileImppath->push', 3.4019391052900155e-06], ['OPT_MMD:', 3.4019391052900155e-06], ['OPT_MD:', 3.4019391052900155e-06], ['OPT_MF:', 3.4019391052900155e-06], ['wins.', 3.4019391052900155e-06], ['OPT_MP:', 3.4019391052900155e-06], ['OPT_MQ:', 3.4019391052900155e-06], ['OPT_MT:', 3.4019391052900155e-06], ['OPT_nostdinc:', 3.4019391052900155e-06], ['global.params.verbose', 3.4019391052900155e-06], ['OPT_Wall:', 3.4019391052900155e-06], ['DIAGNOSTICinform;', 3.4019391052900155e-06], ['OPT_Wdeprecated:', 3.4019391052900155e-06], ['OPT_Werror:', 3.4019391052900155e-06], ['OPT_Wspeculative:', 3.4019391052900155e-06], ['global.params.showGaggedErrors', 3.4019391052900155e-06], ['OPT_Xf:', 3.4019391052900155e-06], ['global.params.jsonfilename', 3.4019391052900155e-06], ['OPT_X:', 3.4019391052900155e-06], ['global.params.doJsonGeneration', 3.4019391052900155e-06], ['D_handle_option_auto', 3.4019391052900155e-06], ['(&global_options,', 3.4019391052900155e-06], ['&global_options_set,', 3.4019391052900155e-06], ['handlers,', 3.4019391052900155e-06], ['global_dc);', 3.4019391052900155e-06], ['lang_hooks.post_options', 3.4019391052900155e-06], ['on/off', 3.4019391052900155e-06], ['**', 3.4019391052900155e-06], ['*fn;', 3.4019391052900155e-06], ['(!filename', 3.4019391052900155e-06], ['*fn', 3.4019391052900155e-06], ['Release', 3.4019391052900155e-06], ['BOUNDSCHECKdefault)', 3.4019391052900155e-06], ['BOUNDSCHECKon;', 3.4019391052900155e-06], ['flag_bounds_check', 3.4019391052900155e-06], ['!global.params.release;', 3.4019391052900155e-06], ['(global.params.release)', 3.4019391052900155e-06], ['(!global_options_set.x_flag_invariants)', 3.4019391052900155e-06], ['(!global_options_set.x_flag_preconditions)', 3.4019391052900155e-06], ['(!global_options_set.x_flag_postconditions)', 3.4019391052900155e-06], ['(!global_options_set.x_flag_assert)', 3.4019391052900155e-06], ['(!global_options_set.x_flag_switch_errors)', 3.4019391052900155e-06], ['partitioning', 3.4019391052900155e-06], ['requested,', 3.4019391052900155e-06], ['chaining,', 3.4019391052900155e-06], ['LSDA', 3.4019391052900155e-06], ['(!global_options_set.x_flag_reorder_blocks_and_partition)', 3.4019391052900155e-06], ['global_options.x_flag_reorder_blocks_and_partition', 3.4019391052900155e-06], ['-fmax-errors', 3.4019391052900155e-06], ["frontend's", 3.4019391052900155e-06], ['machinery.', 3.4019391052900155e-06], ['(global_options_set.x_flag_max_errors)', 3.4019391052900155e-06], ['global.errorLimit', 3.4019391052900155e-06], ['(flag_excess_precision_cmdline', 3.4019391052900155e-06], ['EXCESS_PRECISION_DEFAULT)', 3.4019391052900155e-06], ['flag_excess_precision_cmdline', 3.4019391052900155e-06], ['EXCESS_PRECISION_STANDARD;', 3.4019391052900155e-06], ['global.params.symdebug', 3.4019391052900155e-06], ['write_symbols', 3.4019391052900155e-06], ['NO_DEBUG;', 3.4019391052900155e-06], ['flag_inline_functions;', 3.4019391052900155e-06], ['global.params.showColumns', 3.4019391052900155e-06], ['flag_show_column;', 3.4019391052900155e-06], ['(global.params.useInline)', 3.4019391052900155e-06], ['!flag_syntax_only;', 3.4019391052900155e-06], ['Has', 3.4019391052900155e-06], ['global.params.pic', 3.4019391052900155e-06], ['flag_pic', 3.4019391052900155e-06], ['(warn_return_type', 3.4019391052900155e-06], ['warn_return_type', 3.4019391052900155e-06], ['similar', 3.4019391052900155e-06], ['(op);', 3.4019391052900155e-06], ['Non-empty', 3.4019391052900155e-06], ['construcors', 3.4019391052900155e-06], ['(CONSTRUCTOR_NELTS', 3.4019391052900155e-06], ['TREE_CLOBBER_P', 3.4019391052900155e-06], ['alone', 3.4019391052900155e-06], ['(CALL_EXPR_RETURN_SLOT_OPT', 3.4019391052900155e-06], ['(!is_gimple_lvalue', 3.4019391052900155e-06], ['!INDIRECT_REF_P', 3.4019391052900155e-06], ['lang_hooks.gimplify_expr', 3.4019391052900155e-06], ['EXPR_P.', 3.4019391052900155e-06], ['*expr_p,', 3.4019391052900155e-06], ['*pre_p,', 3.4019391052900155e-06], ['*post_p', 3.4019391052900155e-06], ['gimplify_status', 3.4019391052900155e-06], ['GS_UNHANDLED;', 3.4019391052900155e-06], ['op1;', 3.4019391052900155e-06], ['INIT_EXPR:', 3.4019391052900155e-06], ['!error_operand_p', 3.4019391052900155e-06], ['(op1)))', 3.4019391052900155e-06], ['!useless_type_conversion_p', 3.4019391052900155e-06], ['(op1),', 3.4019391052900155e-06], ['(op0)))', 3.4019391052900155e-06], ['(empty_modify_p', 3.4019391052900155e-06], ['op1))', 3.4019391052900155e-06], ['gimplify_expr', 3.4019391052900155e-06], ['(&TREE_OPERAND', 3.4019391052900155e-06], ['post_p,', 3.4019391052900155e-06], ['is_gimple_lvalue,', 3.4019391052900155e-06], ['fb_lvalue);', 3.4019391052900155e-06], ['gimplify_and_add', 3.4019391052900155e-06], ['Constructors', 3.4019391052900155e-06], ['lvalues,', 3.4019391052900155e-06], ['(CALL_EXPR_ARGS_ORDERED', 3.4019391052900155e-06], ['(*expr_p))', 3.4019391052900155e-06], ['Strictly', 3.4019391052900155e-06], ['call_expr_nargs', 3.4019391052900155e-06], ['EXPR_LOC_OR_LOC', 3.4019391052900155e-06], ['(CALL_EXPR_ARG', 3.4019391052900155e-06], ['i)))', 3.4019391052900155e-06], ['(!has_side_effects)', 3.4019391052900155e-06], ['gimplify_call_expr.', 3.4019391052900155e-06], ['gimplify_arg', 3.4019391052900155e-06], ['(gimplify_arg', 3.4019391052900155e-06], ['(&new_arg,', 3.4019391052900155e-06], ['GS_ERROR;', 3.4019391052900155e-06], ['altered', 3.4019391052900155e-06], ['(new_arg', 3.4019391052900155e-06], ['!really_constant_p', 3.4019391052900155e-06], ['(new_arg))', 3.4019391052900155e-06], ['get_formal_tmp_var', 3.4019391052900155e-06], ['(new_arg,', 3.4019391052900155e-06], ['new_arg;', 3.4019391052900155e-06], ['UNSIGNED_RSHIFT_EXPR:', 3.4019391052900155e-06], ['(op0));', 3.4019391052900155e-06], ['(*expr_p),', 3.4019391052900155e-06], ['op0),', 3.4019391052900155e-06], ['op1));', 3.4019391052900155e-06], ['FLOAT_MOD_EXPR:', 3.4019391052900155e-06], ['scanned', 3.4019391052900155e-06], ['d_maybe_set_builtin()', 3.4019391052900155e-06], ['builtin_modules.push', 3.4019391052900155e-06], ['entrypoint', 3.4019391052900155e-06], ['ENTRY', 3.4019391052900155e-06], ['ROOT', 3.4019391052900155e-06], ['*entry,', 3.4019391052900155e-06], ['*root)', 3.4019391052900155e-06], ['entrypoint_module', 3.4019391052900155e-06], ['entrypoint_root_module', 3.4019391052900155e-06], ['root;', 3.4019391052900155e-06], ['lang_hooks.parse_file', 3.4019391052900155e-06], ['("binary', 3.4019391052900155e-06], ['global.params.argv0);', 3.4019391052900155e-06], ['("version', 3.4019391052900155e-06], ['global.version);', 3.4019391052900155e-06], ['(global.params.versionids)', 3.4019391052900155e-06], ['("predefs', 3.4019391052900155e-06], ['global.params.versionids->dim;', 3.4019391052900155e-06], ['(*global.params.versionids)[i];', 3.4019391052900155e-06], ['debug_hooks->start_source_file', 3.4019391052900155e-06], ['main_input_filename);', 3.4019391052900155e-06], ["Module's", 3.4019391052900155e-06], ['sources', 3.4019391052900155e-06], ['modules;', 3.4019391052900155e-06], ['modules.reserve', 3.4019391052900155e-06], ['(num_in_fnames);', 3.4019391052900155e-06], ['(d_option.fonly,', 3.4019391052900155e-06], ['main_input_filename)', 3.4019391052900155e-06], ['("-fonly=', 3.4019391052900155e-06], ['num_in_fnames;', 3.4019391052900155e-06], ['stdin,', 3.4019391052900155e-06], ['("__stdin"),', 3.4019391052900155e-06], ['stdin', 3.4019391052900155e-06], ['getc', 3.4019391052900155e-06], ['(stdin))', 3.4019391052900155e-06], ['EOF)', 3.4019391052900155e-06], ['(!obstack_object_size', 3.4019391052900155e-06], ['(&buffer))', 3.4019391052900155e-06], ["'\\0');", 3.4019391052900155e-06], ["`.d'", 3.4019391052900155e-06], ['m->srcfile', 3.4019391052900155e-06], ['("<stdin>");', 3.4019391052900155e-06], ['m->srcfile->len', 3.4019391052900155e-06], ['obstack_object_size', 3.4019391052900155e-06], ['m->srcfile->buffer', 3.4019391052900155e-06], ['obstack_finish', 3.4019391052900155e-06], ['m->srcfile->ref', 3.4019391052900155e-06], ['*basename', 3.4019391052900155e-06], ['FileName::name', 3.4019391052900155e-06], ['(in_fnames[i]);', 3.4019391052900155e-06], ['FileName::removeExt', 3.4019391052900155e-06], ['(basename);', 3.4019391052900155e-06], ['FileName::free', 3.4019391052900155e-06], ['m->read', 3.4019391052900155e-06], ['("parse', 3.4019391052900155e-06], ['(!Module::rootModule)', 3.4019391052900155e-06], ['Module::rootModule', 3.4019391052900155e-06], ['m->parse', 3.4019391052900155e-06], ['(m->isDocFile)', 3.4019391052900155e-06], ['modules.remove', 3.4019391052900155e-06], ['i--;', 3.4019391052900155e-06], ['(global.params.addMain)', 3.4019391052900155e-06], ['("__main"));', 3.4019391052900155e-06], ['global.endGagging', 3.4019391052900155e-06], ['(global.params.doHdrGeneration)', 3.4019391052900155e-06], ['independent', 3.4019391052900155e-06], ['("import', 3.4019391052900155e-06], ['genhdrfile', 3.4019391052900155e-06], ['unconditional', 3.4019391052900155e-06], ['resolving.', 3.4019391052900155e-06], ['("importall', 3.4019391052900155e-06], ['("semantic', 3.4019391052900155e-06], ['Module::dprogress', 3.4019391052900155e-06], ['Module::runDeferredSemantic', 3.4019391052900155e-06], ['(Module::deferred.dim)', 3.4019391052900155e-06], ['Module::deferred.dim;', 3.4019391052900155e-06], ['Module::deferred[i];', 3.4019391052900155e-06], ['(sd->loc),', 3.4019391052900155e-06], ['("semantic2', 3.4019391052900155e-06], ['Module::runDeferredSemantic2', 3.4019391052900155e-06], ['("semantic3', 3.4019391052900155e-06], ['semantic3', 3.4019391052900155e-06], ['occurred.', 3.4019391052900155e-06], ['global.warnings)', 3.4019391052900155e-06], ['(Module::rootModule)', 3.4019391052900155e-06], ['deterministic.', 3.4019391052900155e-06], ['(Module::rootModule,', 3.4019391052900155e-06], ['first_global_object_name', 3.4019391052900155e-06], ['(d_option.deps)', 3.4019391052900155e-06], ['(modules[i],', 3.4019391052900155e-06], ['overrides', 3.4019391052900155e-06], ['-M[M]D.', 3.4019391052900155e-06], ['(d_option.deps_filename_user)', 3.4019391052900155e-06], ['d_option.deps_filename_user;', 3.4019391052900155e-06], ['(d_option.deps_filename)', 3.4019391052900155e-06], ['*fdeps', 3.4019391052900155e-06], ['(d_option.deps_filename);', 3.4019391052900155e-06], ['fdeps->setbuffer', 3.4019391052900155e-06], ['fdeps->ref', 3.4019391052900155e-06], ['fdeps);', 3.4019391052900155e-06], ['(global.params.doJsonGeneration)', 3.4019391052900155e-06], ['json_generate', 3.4019391052900155e-06], ['&modules);', 3.4019391052900155e-06], ['global.params.jsonfilename;', 3.4019391052900155e-06], ["'\\0'))", 3.4019391052900155e-06], ['*nameext', 3.4019391052900155e-06], ['FileName::defaultExt', 3.4019391052900155e-06], ['global.json_ext);', 3.4019391052900155e-06], ['*fjson', 3.4019391052900155e-06], ['(nameext);', 3.4019391052900155e-06], ['fjson->setbuffer', 3.4019391052900155e-06], ['fjson->ref', 3.4019391052900155e-06], ['fjson);', 3.4019391052900155e-06], ['Ddoc', 3.4019391052900155e-06], ['(global.params.doDocComments', 3.4019391052900155e-06], ['!global.errors', 3.4019391052900155e-06], ['!errorcount)', 3.4019391052900155e-06], ['-fdump-d-original.', 3.4019391052900155e-06], ['(global.params.vcg_ast)', 3.4019391052900155e-06], ['buf.doindent', 3.4019391052900155e-06], ['moduleToBuffer', 3.4019391052900155e-06], ['("code', 3.4019391052900155e-06], ['((entrypoint_module', 3.4019391052900155e-06], ['entrypoint_root_module))', 3.4019391052900155e-06], ['(entrypoint_module);', 3.4019391052900155e-06], ['debug_hooks->end_source_file', 3.4019391052900155e-06], ['had_errors:', 3.4019391052900155e-06], ['status.', 3.4019391052900155e-06], ['errorcount', 3.4019391052900155e-06], ['global.warnings);', 3.4019391052900155e-06], ['(vec_safe_address', 3.4019391052900155e-06], ['(global_declarations),', 3.4019391052900155e-06], ['(global_declarations));', 3.4019391052900155e-06], ['QImode)', 3.4019391052900155e-06], ['HImode)', 3.4019391052900155e-06], ['(float_type_node))', 3.4019391052900155e-06], ['(double_type_node))', 3.4019391052900155e-06], ['(long_double_type_node))', 3.4019391052900155e-06], ['(char8_type_node)))', 3.4019391052900155e-06], ['(char8_type_node);', 3.4019391052900155e-06], ['(d_int_type)))', 3.4019391052900155e-06], ['(d_int_type);', 3.4019391052900155e-06], ['(COMPLEX_MODE_P', 3.4019391052900155e-06], ['inner_mode;', 3.4019391052900155e-06], ['inner_type;', 3.4019391052900155e-06], ['(complex_float_type_node))', 3.4019391052900155e-06], ['(complex_double_type_node))', 3.4019391052900155e-06], ['(complex_long_double_type_node))', 3.4019391052900155e-06], ['(inner_type);', 3.4019391052900155e-06], ['(VECTOR_MODE_P', 3.4019391052900155e-06], ['build_vector_type_for_mode', 3.4019391052900155e-06], ['UNSIGNEDP.', 3.4019391052900155e-06], ['unsignedp,', 3.4019391052900155e-06], ['signed_or_unsigned_type_for', 3.4019391052900155e-06], ['(unsignedp,', 3.4019391052900155e-06], ['lang_hooks.types.type_promotes_to', 3.4019391052900155e-06], ['lang_hooks.decls.global_bindings_p', 3.4019391052900155e-06], ['(current_binding_level', 3.4019391052900155e-06], ['global_binding_level);', 3.4019391052900155e-06], ['global_context,', 3.4019391052900155e-06], ['be.', 3.4019391052900155e-06], ['(!global_context)', 3.4019391052900155e-06], ['global_context', 3.4019391052900155e-06], ['build_translation_unit_decl', 3.4019391052900155e-06], ['(NULL_TREE);', 3.4019391052900155e-06], ['debug_hooks->register_main_translation_unit', 3.4019391052900155e-06], ['(global_context);', 3.4019391052900155e-06], ['lang_hooks.decls.pushdecl', 3.4019391052900155e-06], ['belonging', 3.4019391052900155e-06], ['(!DECL_CONTEXT', 3.4019391052900155e-06], ['(TREE_STATIC', 3.4019391052900155e-06], ['(global_declarations,', 3.4019391052900155e-06], ['current_binding_level->names', 3.4019391052900155e-06], ['lang_hooks.decls.getdecls', 3.4019391052900155e-06], ['(current_binding_level)', 3.4019391052900155e-06], ['lang_hooks.get_alias_set', 3.4019391052900155e-06], ['alias_set_type', 3.4019391052900155e-06], ['solid', 3.4019391052900155e-06], ['backed', 3.4019391052900155e-06], ['specification.', 3.4019391052900155e-06], ['adhere', 3.4019391052900155e-06], ['rules,', 3.4019391052900155e-06], ['build_vconvert.', 3.4019391052900155e-06], ['lot', 3.4019391052900155e-06], ['lang_hooks.types_compatible_p', 3.4019391052900155e-06], ['Compares', 3.4019391052900155e-06], ['equivalence', 3.4019391052900155e-06], ['language.', 3.4019391052900155e-06], ['sure,', 3.4019391052900155e-06], ['handing', 3.4019391052900155e-06], ['ASTs', 3.4019391052900155e-06], ['*tx', 3.4019391052900155e-06], ['*ty', 3.4019391052900155e-06], ['(y);', 3.4019391052900155e-06], ['(tx', 3.4019391052900155e-06], ['ty', 3.4019391052900155e-06], ['(tx,', 3.4019391052900155e-06], ['ty))', 3.4019391052900155e-06], ['between.', 3.4019391052900155e-06], ['(tx->implicitConvTo', 3.4019391052900155e-06], ['(ty)', 3.4019391052900155e-06], ['ty->implicitConvTo', 3.4019391052900155e-06], ['(tx))', 3.4019391052900155e-06], ['Fallback', 3.4019391052900155e-06], ['E.g:', 3.4019391052900155e-06], ['VIEW_CONVERT', 3.4019391052900155e-06], ['lang_hooks.finish_incomplete_decl', 3.4019391052900155e-06], ['zero-length', 3.4019391052900155e-06], ['assembler_variable', 3.4019391052900155e-06], ['aliased', 3.4019391052900155e-06], ['(DECL_SIZE', 3.4019391052900155e-06], ['DECL_SIZE_UNIT', 3.4019391052900155e-06], ['lang_hooks.types.classify_record', 3.4019391052900155e-06], ['classify_record', 3.4019391052900155e-06], ['(tc->sym->isInterfaceDeclaration', 3.4019391052900155e-06], ['!tc->sym->isCPPinterface', 3.4019391052900155e-06], ['RECORD_IS_INTERFACE;', 3.4019391052900155e-06], ['RECORD_IS_CLASS;', 3.4019391052900155e-06], ['RECORD_IS_STRUCT;', 3.4019391052900155e-06], ['lang_hooks.tree_size', 3.4019391052900155e-06], ['tcc_constant', 3.4019391052900155e-06], ['tcc_exceptional', 3.4019391052900155e-06], ['(tree_frame_info);', 3.4019391052900155e-06], ['lang_hooks.print_xnode', 3.4019391052900155e-06], ['indent)', 3.4019391052900155e-06], ['print_node', 3.4019391052900155e-06], ['(file,', 3.4019391052900155e-06], ['"frame_type",', 3.4019391052900155e-06], ['NODE,', 3.4019391052900155e-06], ['TS_D_GENERIC', 3.4019391052900155e-06], ['language-independent', 3.4019391052900155e-06], ['d_tree_node_structure_enum', 3.4019391052900155e-06], ['d_tree_node_structure', 3.4019391052900155e-06], ['(lang_tree_node', 3.4019391052900155e-06], ['(&t->generic))', 3.4019391052900155e-06], ['IDENTIFIER_NODE:', 3.4019391052900155e-06], ['TS_D_IDENTIFIER;', 3.4019391052900155e-06], ['TS_D_FRAMEINFO;', 3.4019391052900155e-06], ['TS_D_GENERIC;', 3.4019391052900155e-06], ['*lt', 3.4019391052900155e-06], ['lang_type>', 3.4019391052900155e-06], ['lt->type', 3.4019391052900155e-06], ['lt;', 3.4019391052900155e-06], ['re-used.', 3.4019391052900155e-06], ['(ld', 3.4019391052900155e-06], ['(ld->decl', 3.4019391052900155e-06], ['ld->decl', 3.4019391052900155e-06], ['ggc_alloc<struct', 3.4019391052900155e-06], ['(ld,', 3.4019391052900155e-06], ['lang_decl));', 3.4019391052900155e-06], ['(node)', 3.4019391052900155e-06], ['d_keep_list);', 3.4019391052900155e-06], ['lang_hooks.eh_personality', 3.4019391052900155e-06], ['GDC', 3.4019391052900155e-06], ['(!d_eh_personality_decl)', 3.4019391052900155e-06], ['d_eh_personality_decl', 3.4019391052900155e-06], ['build_personality_function', 3.4019391052900155e-06], ['("gdc");', 3.4019391052900155e-06], ['lang_hooks.eh_runtime_type', 3.4019391052900155e-06], ['Definitions', 3.4019391052900155e-06], ['language-specific', 3.4019391052900155e-06], ['hooks.', 3.4019391052900155e-06], ['"GNU', 3.4019391052900155e-06], ['D"', 3.4019391052900155e-06], ['d_langhook_common_attribute_table', 3.4019391052900155e-06], ['d_langhook_attribute_table', 3.4019391052900155e-06], ['LANG_HOOKS_INITIALIZER;', 3.4019391052900155e-06], ['"gt-d-d-lang.h"', 3.4019391052900155e-06], ['"gtype-d.h"', 3.4019391052900155e-06], ['"is-a.h"', 3.4019391052900155e-06], ['"tree-ssa.h"', 3.4019391052900155e-06], ['"tree-ssa-loop-manip.h"', 3.4019391052900155e-06], ['"tree-ssa-loop-niter.h"', 3.4019391052900155e-06], ['"tree-ssa-dce.h"', 3.4019391052900155e-06], ['"tree-data-ref.h"', 3.4019391052900155e-06], ['interchange:', 3.4019391052900155e-06], ['steps:', 3.4019391052900155e-06], ['loop_k,', 3.4019391052900155e-06], ['loop_i>.', 3.4019391052900155e-06], ['pair.', 3.4019391052900155e-06], ['<loop_k,', 3.4019391052900155e-06], ['loop_i,', 3.4019391052900155e-06], ['loop_j,', 3.4019391052900155e-06], ['loop_j>', 3.4019391052900155e-06], ['we:', 3.4019391052900155e-06], ['6)', 3.4019391052900155e-06], ['MAX_NUM_STMT', 3.4019391052900155e-06], ['(PARAM_LOOP_INTERCHANGE_MAX_NUM_STMTS))', 3.4019391052900155e-06], ['MAX_DATAREFS', 3.4019391052900155e-06], ['(PARAM_LOOP_MAX_DATAREFS_FOR_DATADEPS))', 3.4019391052900155e-06], ['OUTER_STRIDE_RATIO', 3.4019391052900155e-06], ['(PARAM_LOOP_INTERCHANGE_STRIDE_RATIO))', 3.4019391052900155e-06], ['((OUTER_STRIDE_RATIO)', 3.4019391052900155e-06], ['Loops', 3.4019391052900155e-06], ['DR_ACCESS_STRIDE(dr)', 3.4019391052900155e-06], ['((vec<tree>', 3.4019391052900155e-06], ['dr->aux)', 3.4019391052900155e-06], ['init_val;', 3.4019391052900155e-06], ['of)', 3.4019391052900155e-06], ['init_val.', 3.4019391052900155e-06], ['init_expr;', 3.4019391052900155e-06], ['step;', 3.4019391052900155e-06], ['*induction_p;', 3.4019391052900155e-06], ['Enum', 3.4019391052900155e-06], ['SIMPLE_RTYPE,', 3.4019391052900155e-06], ['DOUBLE_RTYPE', 3.4019391052900155e-06], ['*phi;', 3.4019391052900155e-06], ['*lcssa_phi;', 3.4019391052900155e-06], ['*producer;', 3.4019391052900155e-06], ['init_ref;', 3.4019391052900155e-06], ['fini_ref;', 3.4019391052900155e-06], ['*reduction_p;', 3.4019391052900155e-06], ['RE.', 3.4019391052900155e-06], ['SIMPLE_RTYPE)', 3.4019391052900155e-06], ['print_gimple_stmt', 3.4019391052900155e-06], ['re->phi,', 3.4019391052900155e-06], ["LOOP's", 3.4019391052900155e-06], ['iv)', 3.4019391052900155e-06], ['Induction:', 3.4019391052900155e-06], ['{");', 3.4019391052900155e-06], ['iv->init_expr,', 3.4019391052900155e-06], ['iv->step,', 3.4019391052900155e-06], ['"}_%d\\n",', 3.4019391052900155e-06], ['loop->num);', 3.4019391052900155e-06], ['~loop_cand', 3.4019391052900155e-06], ['find_reduction_by_stmt', 3.4019391052900155e-06], ['(reduction_p);', 3.4019391052900155e-06], ['analyze_iloop_reduction_var', 3.4019391052900155e-06], ['analyze_oloop_reduction_var', 3.4019391052900155e-06], ['analyze_induction_var', 3.4019391052900155e-06], ['analyze_carried_vars', 3.4019391052900155e-06], ['analyze_lcssa_phis', 3.4019391052900155e-06], ['can_interchange_p', 3.4019391052900155e-06], ['undo_simple_reduction', 3.4019391052900155e-06], ['(reduction_p,', 3.4019391052900155e-06], ['bitmap);', 3.4019391052900155e-06], ['*m_loop;', 3.4019391052900155e-06], ['cand', 3.4019391052900155e-06], ['*m_outer;', 3.4019391052900155e-06], ['vec<induction_p>', 3.4019391052900155e-06], ['m_inductions;', 3.4019391052900155e-06], ['vec<reduction_p>', 3.4019391052900155e-06], ['m_reductions;', 3.4019391052900155e-06], ['vec<gphi', 3.4019391052900155e-06], ['m_lcssa_nodes;', 3.4019391052900155e-06], ['m_exit;', 3.4019391052900155e-06], ['*m_bbs;', 3.4019391052900155e-06], ['Inner', 3.4019391052900155e-06], ["loops'", 3.4019391052900155e-06], ['m_num_stmts;', 3.4019391052900155e-06], ['m_const_init_reduc;', 3.4019391052900155e-06], ['loop_cand::loop_cand', 3.4019391052900155e-06], ['m_loop', 3.4019391052900155e-06], ['m_outer', 3.4019391052900155e-06], ['(outer),', 3.4019391052900155e-06], ['m_exit', 3.4019391052900155e-06], ['m_bbs', 3.4019391052900155e-06], ['(get_loop_body', 3.4019391052900155e-06], ['m_num_stmts', 3.4019391052900155e-06], ['m_const_init_reduc', 3.4019391052900155e-06], ['m_inductions.create', 3.4019391052900155e-06], ['m_reductions.create', 3.4019391052900155e-06], ['m_lcssa_nodes.create', 3.4019391052900155e-06], ['loop_cand::~loop_cand', 3.4019391052900155e-06], ['m_inductions.iterate', 3.4019391052900155e-06], ['m_inductions.release', 3.4019391052900155e-06], ['m_reductions.release', 3.4019391052900155e-06], ['m_lcssa_nodes.release', 3.4019391052900155e-06], ['(m_bbs);', 3.4019391052900155e-06], ['*res', 3.4019391052900155e-06], ['(res)', 3.4019391052900155e-06], ['irreducible', 3.4019391052900155e-06], ['(edge', 3.4019391052900155e-06], ['(e->flags', 3.4019391052900155e-06], ['(EDGE_COMPLEX', 3.4019391052900155e-06], ['EDGE_IRREDUCIBLE_LOOP));', 3.4019391052900155e-06], ['PHI,', 3.4019391052900155e-06], ['loop_cand::find_reduction_by_stmt', 3.4019391052900155e-06], ['((phi', 3.4019391052900155e-06], ['re->lcssa_phi)', 3.4019391052900155e-06], ['re->consumer))', 3.4019391052900155e-06], ['loop_cand::can_interchange_p', 3.4019391052900155e-06], ['innermostin', 3.4019391052900155e-06], ['((iloop', 3.4019391052900155e-06], ['m_loop->inner', 3.4019391052900155e-06], ['iloop->m_loop->inner', 3.4019391052900155e-06], ['m_reductions[0]->type', 3.4019391052900155e-06], ['UNKNOWN_RTYPE))', 3.4019391052900155e-06], ['(m_lcssa_nodes.length', 3.4019391052900155e-06], ['allowed_reduction_num)', 3.4019391052900155e-06], ['m_loop->num_nodes;', 3.4019391052900155e-06], ['m_bbs[i];', 3.4019391052900155e-06], ['psi;', 3.4019391052900155e-06], ['m_loop)', 3.4019391052900155e-06], ['(gimple_has_side_effects', 3.4019391052900155e-06], ['m_num_stmts++;', 3.4019391052900155e-06], ['cheap', 3.4019391052900155e-06], ['(call))', 3.4019391052900155e-06], ['!gimple_vuse', 3.4019391052900155e-06], ['(iloop->find_reduction_by_stmt', 3.4019391052900155e-06], ["How's", 3.4019391052900155e-06], ['invariantness?', 3.4019391052900155e-06], ['(gimple_assign_single_p', 3.4019391052900155e-06], ['(lhs', 3.4019391052900155e-06], ['gimple_assign_lhs', 3.4019391052900155e-06], ['iloop->m_loop))', 3.4019391052900155e-06], ['(m_num_stmts', 3.4019391052900155e-06], ['MAX_NUM_STMT)', 3.4019391052900155e-06], ['edge.', 3.4019391052900155e-06], ['m_loop->header', 3.4019391052900155e-06], ['iloop->m_exit->dest)', 3.4019391052900155e-06], ['(psi', 3.4019391052900155e-06], ['(psi);', 3.4019391052900155e-06], ['(&psi))', 3.4019391052900155e-06], ['(!virtual_operand_p', 3.4019391052900155e-06], ['(psi.phi', 3.4019391052900155e-06], ['())))', 3.4019391052900155e-06], ['Programmers', 3.4019391052900155e-06], ['motion)', 3.4019391052900155e-06], ['producer.', 3.4019391052900155e-06], ['intitialized', 3.4019391052900155e-06], ['a[i];', 3.4019391052900155e-06], ['consumer.', 3.4019391052900155e-06], ['classifies', 3.4019391052900155e-06], ['motion', 3.4019391052900155e-06], ['loop_cand::classify_simple_reduction', 3.4019391052900155e-06], ['*producer,', 3.4019391052900155e-06], ['(re->init)', 3.4019391052900155e-06], ['(re->init);', 3.4019391052900155e-06], ['producer;', 3.4019391052900155e-06], ['bb->loop_father', 3.4019391052900155e-06], ['m_outer)', 3.4019391052900155e-06], ['(producer))', 3.4019391052900155e-06], ['(re->init))', 3.4019391052900155e-06], ['m_const_init_reduc++;', 3.4019391052900155e-06], ['(re->lcssa_phi),', 3.4019391052900155e-06], ['m_outer);', 3.4019391052900155e-06], ['(!consumer', 3.4019391052900155e-06], ['!gimple_store_p', 3.4019391052900155e-06], ['(consumer))', 3.4019391052900155e-06], ['re->fini_ref', 3.4019391052900155e-06], ['gimple_get_lhs', 3.4019391052900155e-06], ['re->consumer', 3.4019391052900155e-06], ['consumer;', 3.4019391052900155e-06], ['(!re->init_ref)', 3.4019391052900155e-06], ['(re->init));', 3.4019391052900155e-06], ['(re->fini_ref);', 3.4019391052900155e-06], ['(re->init_ref', 3.4019391052900155e-06], ['(re->init_ref,', 3.4019391052900155e-06], ['re->fini_ref,', 3.4019391052900155e-06], ['SIMPLE_RTYPE;', 3.4019391052900155e-06], ['loop_cand::analyze_iloop_reduction_var', 3.4019391052900155e-06], ['*next_def,', 3.4019391052900155e-06], ['*single_use', 3.4019391052900155e-06], ['be)', 3.4019391052900155e-06], ['depicted', 3.4019391052900155e-06], ['PHI<init,', 3.4019391052900155e-06], ['<--', 3.4019391052900155e-06], ['NEXT', 3.4019391052900155e-06], ['OTHER', 3.4019391052900155e-06], ['OPERANDS.', 3.4019391052900155e-06], ['VAR/NEXT', 3.4019391052900155e-06], ['stored.', 3.4019391052900155e-06], ['conditions,', 3.4019391052900155e-06], ['restrictions', 3.4019391052900155e-06], ['box.', 3.4019391052900155e-06], ['reassociation', 3.4019391052900155e-06], ['operator;', 3.4019391052900155e-06], ['NEXT.', 3.4019391052900155e-06], ['&single_use)', 3.4019391052900155e-06], ['left-associative', 3.4019391052900155e-06], ['associate', 3.4019391052900155e-06], ['*ass', 3.4019391052900155e-06], ['(single_use))', 3.4019391052900155e-06], ['(ass);', 3.4019391052900155e-06], ['(associative_tree_code', 3.4019391052900155e-06], ['use_p->use', 3.4019391052900155e-06], ['gimple_assign_rhs1_ptr', 3.4019391052900155e-06], ['(ass)))', 3.4019391052900155e-06], ['(FLOAT_TYPE_P', 3.4019391052900155e-06], ['flag_associative_math))', 3.4019391052900155e-06], ['feeding', 3.4019391052900155e-06], ['op.', 3.4019391052900155e-06], ['(single_use', 3.4019391052900155e-06], ['!check_reduction_path', 3.4019391052900155e-06], ['(dump_user_location_t', 3.4019391052900155e-06], ['phi,', 3.4019391052900155e-06], ['next,', 3.4019391052900155e-06], ['moment,', 3.4019391052900155e-06], ['s[i]', 3.4019391052900155e-06], ['loop_cand::analyze_oloop_reduction_var', 3.4019391052900155e-06], ['*iloop,', 3.4019391052900155e-06], ['*next_def;', 3.4019391052900155e-06], ['inner_re', 3.4019391052900155e-06], ['iloop->m_reductions.iterate', 3.4019391052900155e-06], ['&inner_re);', 3.4019391052900155e-06], ['(inner_re->init', 3.4019391052900155e-06], ['(inner_re->init,', 3.4019391052900155e-06], ['(inner_re', 3.4019391052900155e-06], ['inner_re->producer', 3.4019391052900155e-06], ['(next_def', 3.4019391052900155e-06], ['inner_re->lcssa_phi)', 3.4019391052900155e-06], ['&stmt)', 3.4019391052900155e-06], ['inner_re->phi)', 3.4019391052900155e-06], ['phi.', 3.4019391052900155e-06], ['(lcssa_phi', 3.4019391052900155e-06], ['CHREC.', 3.4019391052900155e-06], ['loop_cand::analyze_induction_var', 3.4019391052900155e-06], ['chrec)', 3.4019391052900155e-06], ['(tree_does_not_contain_chrecs', 3.4019391052900155e-06], ['Punt', 3.4019391052900155e-06], ['invariants', 3.4019391052900155e-06], ['honoring', 3.4019391052900155e-06], ['0.0', 3.4019391052900155e-06], ['-0.0.', 3.4019391052900155e-06], ['SNaNs', 3.4019391052900155e-06], ['exception.', 3.4019391052900155e-06], ['(HONOR_SIGNED_ZEROS', 3.4019391052900155e-06], ['HONOR_SNANS', 3.4019391052900155e-06], ['chrec;', 3.4019391052900155e-06], ['POLYNOMIAL_CHREC', 3.4019391052900155e-06], ['CHREC_VARIABLE', 3.4019391052900155e-06], ['m_loop->num', 3.4019391052900155e-06], ['(CHREC_LEFT', 3.4019391052900155e-06], ['CHREC_RIGHT', 3.4019391052900155e-06], ['iv);', 3.4019391052900155e-06], ['loop_cand::analyze_carried_vars', 3.4019391052900155e-06], ['(m_outer);', 3.4019391052900155e-06], ['"\\nLoop(%d)', 3.4019391052900155e-06], ['vars:\\n",', 3.4019391052900155e-06], ['m_loop->num);', 3.4019391052900155e-06], ['PHI_RESULT', 3.4019391052900155e-06], ['(chrec_contains_undetermined', 3.4019391052900155e-06], ['chrec_contains_symbols_defined_in_loop', 3.4019391052900155e-06], ['(chrec,', 3.4019391052900155e-06], ['m_outer->num))', 3.4019391052900155e-06], ['!analyze_oloop_reduction_var', 3.4019391052900155e-06], ['!analyze_iloop_reduction_var', 3.4019391052900155e-06], ['(!analyze_induction_var', 3.4019391052900155e-06], ['chrec))', 3.4019391052900155e-06], ['successfully.', 3.4019391052900155e-06], ['loop_cand::analyze_lcssa_phis', 3.4019391052900155e-06], ['(m_exit->dest);', 3.4019391052900155e-06], ['(phi)))', 3.4019391052900155e-06], ['(!find_reduction_by_stmt', 3.4019391052900155e-06], ['(phi))', 3.4019391052900155e-06], ['intialized', 3.4019391052900155e-06], ['Problem', 3.4019391052900155e-06], ['(gimple_seq', 3.4019391052900155e-06], ['*stmts,', 3.4019391052900155e-06], ['*consumer)', 3.4019391052900155e-06], ['auto_vec<gimple', 3.4019391052900155e-06], ['4>', 3.4019391052900155e-06], ['worklist;', 3.4019391052900155e-06], ['*def_stmt;', 3.4019391052900155e-06], ['bb.', 3.4019391052900155e-06], ['(gsi),', 3.4019391052900155e-06], ['DFS', 3.4019391052900155e-06], ['depended', 3.4019391052900155e-06], ['(!worklist.is_empty', 3.4019391052900155e-06], ['worklist.pop', 3.4019391052900155e-06], ['FOR_EACH_SSA_USE_OPERAND', 3.4019391052900155e-06], ['def_stmt', 3.4019391052900155e-06], ['(USE_FROM_PTR', 3.4019391052900155e-06], ['(use_p));', 3.4019391052900155e-06], ['gimple_plf', 3.4019391052900155e-06], ['(def_stmt,', 3.4019391052900155e-06], ['(def_stmt);', 3.4019391052900155e-06], ['(gsi)', 3.4019391052900155e-06], ['(gsi))', 3.4019391052900155e-06], ['consumer;)', 3.4019391052900155e-06], ['(gimple_plf', 3.4019391052900155e-06], ['(stmts,', 3.4019391052900155e-06], ['write,', 3.4019391052900155e-06], ['phi<init,', 3.4019391052900155e-06], ['phi<next>', 3.4019391052900155e-06], ['phi<0.0,', 3.4019391052900155e-06], ['!first_iteration', 3.4019391052900155e-06], ['0.0;', 3.4019391052900155e-06], ['DCE_SEEDS.', 3.4019391052900155e-06], ['loop_cand::undo_simple_reduction', 3.4019391052900155e-06], ['dce_seeds)', 3.4019391052900155e-06], ['new_var;', 3.4019391052900155e-06], ['(re->producer', 3.4019391052900155e-06], ['(re->producer,', 3.4019391052900155e-06], ['re->producer);', 3.4019391052900155e-06], ['re->init;', 3.4019391052900155e-06], ['"MEM_REF[idx]"', 3.4019391052900155e-06], ['depends.', 3.4019391052900155e-06], ['(re->consumer),', 3.4019391052900155e-06], ['re->consumer);', 3.4019391052900155e-06], ['TMP.', 3.4019391052900155e-06], ['re->init_ref);', 3.4019391052900155e-06], ['CONST', 3.4019391052900155e-06], ['iteration.', 3.4019391052900155e-06], ['iv', 3.4019391052900155e-06], ['m_inductions[0];', 3.4019391052900155e-06], ['iv->init_val);', 3.4019391052900155e-06], ['(new_var,', 3.4019391052900155e-06], ['re->init);', 3.4019391052900155e-06], ['(&to,', 3.4019391052900155e-06], ['re->var)', 3.4019391052900155e-06], ['iterator)', 3.4019391052900155e-06], ["next's", 3.4019391052900155e-06], ['def.', 3.4019391052900155e-06], ['(re->consumer));', 3.4019391052900155e-06], ['gimple_assign_set_rhs1', 3.4019391052900155e-06], ['re->next);', 3.4019391052900155e-06], ['gsi_move_after', 3.4019391052900155e-06], ['(re->lcssa_phi)));', 3.4019391052900155e-06], ['auxiliary', 3.4019391052900155e-06], ['(dr->aux', 3.4019391052900155e-06], ['(vec<struct', 3.4019391052900155e-06], ['m_loop_nest', 3.4019391052900155e-06], ['m_niters_iv_var', 3.4019391052900155e-06], ['m_dce_seeds', 3.4019391052900155e-06], ['(BITMAP_ALLOC', 3.4019391052900155e-06], ['(NULL))', 3.4019391052900155e-06], ['~tree_loop_interchange', 3.4019391052900155e-06], ['BITMAP_FREE', 3.4019391052900155e-06], ['(vec<data_reference_p>,', 3.4019391052900155e-06], ['vec<data_reference_p>,', 3.4019391052900155e-06], ['valid_data_dependences', 3.4019391052900155e-06], ['ongoing.', 3.4019391052900155e-06], ['vec<struct', 3.4019391052900155e-06], ['m_loop_nest;', 3.4019391052900155e-06], ['3-level', 3.4019391052900155e-06], ['skipped.', 3.4019391052900155e-06], ['m_niters_iv_var;', 3.4019391052900155e-06], ['Bitmap', 3.4019391052900155e-06], ['seed', 3.4019391052900155e-06], ['m_dce_seeds;', 3.4019391052900155e-06], ["refs'", 3.4019391052900155e-06], ['DDRS', 3.4019391052900155e-06], ['tree_loop_interchange::update_data_info', 3.4019391052900155e-06], ['i_idx);', 3.4019391052900155e-06], ['((*stride)[i_idx],', 3.4019391052900155e-06], ['(*stride)[o_idx]);', 3.4019391052900155e-06], ['(dist_vect[i_idx],', 3.4019391052900155e-06], ['dist_vect[o_idx]);', 3.4019391052900155e-06], ['relations,', 3.4019391052900155e-06], ['I_IDX/O_IDX.', 3.4019391052900155e-06], ['Theoretically,', 3.4019391052900155e-06], ['dist', 3.4019391052900155e-06], ['interchanging,', 3.4019391052900155e-06], ["'>'", 3.4019391052900155e-06], ['leftmost', 3.4019391052900155e-06], ["non-'='", 3.4019391052900155e-06], ['direction.', 3.4019391052900155e-06], ['Practically,', 3.4019391052900155e-06], ['tree_loop_interchange::valid_data_dependences', 3.4019391052900155e-06], ['no-dependence', 3.4019391052900155e-06], ['dependence_level', 3.4019391052900155e-06], ['(dist_vect,', 3.4019391052900155e-06], ['dependence.', 3.4019391052900155e-06], ['[oloop,', 3.4019391052900155e-06], ['iloop]', 3.4019391052900155e-06], ['i_idx)', 3.4019391052900155e-06], ['i_idx/o_idx', 3.4019391052900155e-06], ["'='", 3.4019391052900155e-06], ["'<'.", 3.4019391052900155e-06], ['(dist_vect[i_idx]', 3.4019391052900155e-06], ['dist_vect[o_idx]', 3.4019391052900155e-06], ['OLOOP.', 3.4019391052900155e-06], ['tree_loop_interchange::interchange_loops', 3.4019391052900155e-06], ['&iloop,', 3.4019391052900155e-06], ['&oloop)', 3.4019391052900155e-06], ['Undo', 3.4019391052900155e-06], ['iloop.m_reductions.iterate', 3.4019391052900155e-06], ['(re->producer)', 3.4019391052900155e-06], ['iloop.undo_simple_reduction', 3.4019391052900155e-06], ['(re,', 3.4019391052900155e-06], ['m_dce_seeds);', 3.4019391052900155e-06], ['reset', 3.4019391052900155e-06], ['oloop.m_reductions.iterate', 3.4019391052900155e-06], ['DOUBLE_RTYPE);', 3.4019391052900155e-06], ['m_loop_nest[0];', 3.4019391052900155e-06], ['instantiate_below', 3.4019391052900155e-06], ['(loop_nest)->src);', 3.4019391052900155e-06], ['(i_niters),', 3.4019391052900155e-06], ['(oloop.m_loop', 3.4019391052900155e-06], ['(o_niters),', 3.4019391052900155e-06], ['iloop.m_loop,', 3.4019391052900155e-06], ['oloop.m_bbs);', 3.4019391052900155e-06], ['(oloop,', 3.4019391052900155e-06], ['iloop);', 3.4019391052900155e-06], ['outer/inner', 3.4019391052900155e-06], ['oloop.m_exit,', 3.4019391052900155e-06], ['&m_niters_iv_var,', 3.4019391052900155e-06], ['(iloop.m_loop,', 3.4019391052900155e-06], ['iloop.m_exit,', 3.4019391052900155e-06], ['Scrap', 3.4019391052900155e-06], ['estimation', 3.4019391052900155e-06], ['iloop.m_loop->any_upper_bound', 3.4019391052900155e-06], ['iloop.m_loop->any_likely_upper_bound', 3.4019391052900155e-06], ['oloop.m_loop->any_upper_bound', 3.4019391052900155e-06], ['oloop.m_loop->any_likely_upper_bound', 3.4019391052900155e-06], ['scev_reset_htab', 3.4019391052900155e-06], ['changed,', 3.4019391052900155e-06], ['retaining', 3.4019391052900155e-06], ['re-using', 3.4019391052900155e-06], ['"wrong"', 3.4019391052900155e-06], ['deletes', 3.4019391052900155e-06], ['re-initialize', 3.4019391052900155e-06], ['nest:', 3.4019391052900155e-06], ['(jj', 3.4019391052900155e-06], ['jj', 3.4019391052900155e-06], ['jj++)', 3.4019391052900155e-06], ['(ii', 3.4019391052900155e-06], ['ii++)', 3.4019391052900155e-06], ['ii;', 3.4019391052900155e-06], ['jj;', 3.4019391052900155e-06], ['tree_loop_interchange::map_inductions_to_loop', 3.4019391052900155e-06], ['&src,', 3.4019391052900155e-06], ['&tgt)', 3.4019391052900155e-06], ['tgt.m_exit;', 3.4019391052900155e-06], ['incr_pos', 3.4019391052900155e-06], ['src.m_inductions.iterate', 3.4019391052900155e-06], ['*use_stmt,', 3.4019391052900155e-06], ['(iv->var);', 3.4019391052900155e-06], ['(m_niters_iv_var', 3.4019391052900155e-06], ['var_before,', 3.4019391052900155e-06], ['(iv->init_expr);', 3.4019391052900155e-06], ['(iv->step);', 3.4019391052900155e-06], ['create_iv', 3.4019391052900155e-06], ['SSA_NAME_VAR', 3.4019391052900155e-06], ['(iv->var),', 3.4019391052900155e-06], ['tgt.m_loop,', 3.4019391052900155e-06], ['&incr_pos,', 3.4019391052900155e-06], ['&var_before,', 3.4019391052900155e-06], ['(var_before));', 3.4019391052900155e-06], ['imm_iter;', 3.4019391052900155e-06], ['(use_stmt,', 3.4019391052900155e-06], ['imm_iter,', 3.4019391052900155e-06], ['imm_iter)', 3.4019391052900155e-06], ['var_before);', 3.4019391052900155e-06], ['(use_stmt);', 3.4019391052900155e-06], ['op_iter;', 3.4019391052900155e-06], ['FOR_EACH_PHI_OR_STMT_USE', 3.4019391052900155e-06], ['op_iter,', 3.4019391052900155e-06], ['USE_FROM_PTR', 3.4019391052900155e-06], ['(use)', 3.4019391052900155e-06], ['SSA_NAME_IS_DEFAULT_DEF', 3.4019391052900155e-06], ['(use))', 3.4019391052900155e-06], ['(use));', 3.4019391052900155e-06], ['remove_phi_node', 3.4019391052900155e-06], ['tree_loop_interchange::move_code_to_inner_loop', 3.4019391052900155e-06], ['*outer_bbs)', 3.4019391052900155e-06], ['oloop_exit_bb', 3.4019391052900155e-06], ['single_exit', 3.4019391052900155e-06], ['(outer)->src;', 3.4019391052900155e-06], ['gsi,', 3.4019391052900155e-06], ['to;', 3.4019391052900155e-06], ['outer->num_nodes;', 3.4019391052900155e-06], ['outer_bbs[i];', 3.4019391052900155e-06], ['header/latch', 3.4019391052900155e-06], ['header/latch.', 3.4019391052900155e-06], ['outer->header)', 3.4019391052900155e-06], ['(inner->header);', 3.4019391052900155e-06], ['outer->latch)', 3.4019391052900155e-06], ['(inner->latch);', 3.4019391052900155e-06], ['exit->src.', 3.4019391052900155e-06], ['(inner)->src);', 3.4019391052900155e-06], ['(gsi);)', 3.4019391052900155e-06], ['(oloop_exit_bb', 3.4019391052900155e-06], ['(gsi_last_bb', 3.4019391052900155e-06], ['(oloop_exit_bb)))', 3.4019391052900155e-06], ['gsi_move_before', 3.4019391052900155e-06], ['LOOP_NEST,', 3.4019391052900155e-06], ["DR's", 3.4019391052900155e-06], ['outer.', 3.4019391052900155e-06], ['saves', 3.4019391052900155e-06], ['DR->aux.', 3.4019391052900155e-06], ['arr[100][100][100];', 3.4019391052900155e-06], [';(DR->aux)strides[0]', 3.4019391052900155e-06], ['40000', 3.4019391052900155e-06], [';(DR->aux)strides[1]', 3.4019391052900155e-06], ['400', 3.4019391052900155e-06], [';(DR->aux)strides[2]', 3.4019391052900155e-06], ['arr[i][j', 3.4019391052900155e-06], ['1][k]', 3.4019391052900155e-06], ['dr)', 3.4019391052900155e-06], ['*strides', 3.4019391052900155e-06], ['(dr));', 3.4019391052900155e-06], ['bb->loop_father);', 3.4019391052900155e-06], ['(ref)', 3.4019391052900155e-06], ['DECL_BIT_FIELD', 3.4019391052900155e-06], ['bitfields.', 3.4019391052900155e-06], ['bitfield', 3.4019391052900155e-06], ['(!TREE_OPERAND', 3.4019391052900155e-06], ['representative,', 3.4019391052900155e-06], ['(DECL_BIT_FIELD_REPRESENTATIVE', 3.4019391052900155e-06], ['repr', 3.4019391052900155e-06], ['DECL_BIT_FIELD_REPRESENTATIVE', 3.4019391052900155e-06], ['(COMPONENT_REF,', 3.4019391052900155e-06], ['(repr),', 3.4019391052900155e-06], ['repr,', 3.4019391052900155e-06], ['punt.', 3.4019391052900155e-06], ['scev_base', 3.4019391052900155e-06], ['(ref);', 3.4019391052900155e-06], ['scev_base);', 3.4019391052900155e-06], ['scev);', 3.4019391052900155e-06], ['(scev))', 3.4019391052900155e-06], ['scev;', 3.4019391052900155e-06], ['*expected', 3.4019391052900155e-06], ['(sl)', 3.4019391052900155e-06], ['*sl_loop', 3.4019391052900155e-06], ['(sl_loop', 3.4019391052900155e-06], ['expected)', 3.4019391052900155e-06], ['(sl));', 3.4019391052900155e-06], ['(sl,', 3.4019391052900155e-06], ['(expected', 3.4019391052900155e-06], ['(loop_nest))', 3.4019391052900155e-06], ['*stride;', 3.4019391052900155e-06], ['dr);', 3.4019391052900155e-06], ['stride->truncate', 3.4019391052900155e-06], ['(num_loops);', 3.4019391052900155e-06], ['((*stride)[j],', 3.4019391052900155e-06], ['(*stride)[num_loops', 3.4019391052900155e-06], ['superloop_at_depth', 3.4019391052900155e-06], ['loop));', 3.4019391052900155e-06], ['LOOP_NEST.', 3.4019391052900155e-06], ['(loop_nest)', 3.4019391052900155e-06], ['stride->block_remove', 3.4019391052900155e-06], ['"Access', 3.4019391052900155e-06], ['Strides', 3.4019391052900155e-06], ['DRs:\\n");', 3.4019391052900155e-06], ['(dr),', 3.4019391052900155e-06], ['":\\t\\t<");', 3.4019391052900155e-06], ['num_loops;', 3.4019391052900155e-06], ['(*stride)[j],', 3.4019391052900155e-06], ['",\\t"', 3.4019391052900155e-06], ['">\\n");', 3.4019391052900155e-06], ['DATAREFS:', 3.4019391052900155e-06], ['Access', 3.4019391052900155e-06], ['O_IDX.', 3.4019391052900155e-06], ['Flags', 3.4019391052900155e-06], ['ILOOP,', 3.4019391052900155e-06], ['INNMOST_LOOP_P', 3.4019391052900155e-06], ['DUMP_INFO_P', 3.4019391052900155e-06], ['should_interchange_loops', 3.4019391052900155e-06], ['i_stmt_cost,', 3.4019391052900155e-06], ['o_stmt_cost,', 3.4019391052900155e-06], ['innermost_loops_p,', 3.4019391052900155e-06], ['dump_info_p', 3.4019391052900155e-06], ['ratio;', 3.4019391052900155e-06], ['num_unresolved_drs', 3.4019391052900155e-06], ['num_resolved_ok_drs', 3.4019391052900155e-06], ['"\\nData', 3.4019391052900155e-06], ['strides:\\n\\tmem_ref:\\t\\tiloop\\toloop\\n");', 3.4019391052900155e-06], ['iloop_stride', 3.4019391052900155e-06], ['(*stride)[i_idx],', 3.4019391052900155e-06], ['oloop_stride', 3.4019391052900155e-06], ['(*stride)[o_idx];', 3.4019391052900155e-06], ['subloops.', 3.4019391052900155e-06], ['((*stride)[j]))', 3.4019391052900155e-06], ['(iloop_stride))', 3.4019391052900155e-06], ['num_old_inv_drs++;', 3.4019391052900155e-06], ['(oloop_stride))', 3.4019391052900155e-06], ['num_new_inv_drs++;', 3.4019391052900155e-06], ['(iloop_stride));', 3.4019391052900155e-06], ['(oloop_stride));', 3.4019391052900155e-06], ['oloop_stride))', 3.4019391052900155e-06], ['num_resolved_ok_drs++;', 3.4019391052900155e-06], ['iloop_stride))', 3.4019391052900155e-06], ['num_resolved_not_ok_drs++;', 3.4019391052900155e-06], ['num_unresolved_drs++;', 3.4019391052900155e-06], ['(subloop_stride_p)', 3.4019391052900155e-06], ['Track', 3.4019391052900155e-06], ['before/after', 3.4019391052900155e-06], ['(dr)));', 3.4019391052900155e-06], ['(all_seq_dr_before_p', 3.4019391052900155e-06], ['(all_seq_dr_after_p', 3.4019391052900155e-06], ['"\\toverall:\\t\\t");', 3.4019391052900155e-06], ['"\\t");', 3.4019391052900155e-06], ['"Invariant', 3.4019391052900155e-06], ['ref:', 3.4019391052900155e-06], ['before(%d),', 3.4019391052900155e-06], ['after(%d)\\n",', 3.4019391052900155e-06], ['num_old_inv_drs,', 3.4019391052900155e-06], ['num_new_inv_drs);', 3.4019391052900155e-06], ['"All', 3.4019391052900155e-06], ['stride:', 3.4019391052900155e-06], ['before(%s),', 3.4019391052900155e-06], ['after(%s)\\n",', 3.4019391052900155e-06], ['"false",', 3.4019391052900155e-06], ['"OK', 3.4019391052900155e-06], ['num_resolved_ok_drs);', 3.4019391052900155e-06], ['num_resolved_not_ok_drs);', 3.4019391052900155e-06], ['"Variable', 3.4019391052900155e-06], ['decide:', 3.4019391052900155e-06], ['num_unresolved_drs);', 3.4019391052900155e-06], ['i_stmt_cost);', 3.4019391052900155e-06], ['o_stmt_cost);', 3.4019391052900155e-06], ['(num_unresolved_drs', 3.4019391052900155e-06], ['(i_stmt_cost', 3.4019391052900155e-06], ['i_stmt_cost)', 3.4019391052900155e-06], ['innermost_loops_p', 3.4019391052900155e-06], ['OUTER_STRIDE_RATIO;', 3.4019391052900155e-06], ['locality', 3.4019391052900155e-06], ['ratio)))', 3.4019391052900155e-06], ['oloop_strides))', 3.4019391052900155e-06], ['((!all_seq_dr_before_p', 3.4019391052900155e-06], ['num_old_inv_drs)', 3.4019391052900155e-06], ['sequential.', 3.4019391052900155e-06], ['(num_new_inv_drs', 3.4019391052900155e-06], ['!all_seq_dr_before_p', 3.4019391052900155e-06], ['tree_loop_interchange::interchange', 3.4019391052900155e-06], ['(m_loop_nest[0]);', 3.4019391052900155e-06], ['I-th', 3.4019391052900155e-06], ['(I+1)-th', 3.4019391052900155e-06], ['(!valid_data_dependences', 3.4019391052900155e-06], ['iloop', 3.4019391052900155e-06], ['(m_loop_nest[i_idx],', 3.4019391052900155e-06], ['oloop', 3.4019391052900155e-06], ['(m_loop_nest[o_idx],', 3.4019391052900155e-06], ['(!iloop.analyze_carried_vars', 3.4019391052900155e-06], ['!iloop.analyze_lcssa_phis', 3.4019391052900155e-06], ['!oloop.analyze_carried_vars', 3.4019391052900155e-06], ['(&iloop)', 3.4019391052900155e-06], ['!oloop.analyze_lcssa_phis', 3.4019391052900155e-06], ['!iloop.can_interchange_p', 3.4019391052900155e-06], ['!oloop.can_interchange_p', 3.4019391052900155e-06], ['(&iloop))', 3.4019391052900155e-06], ['profit', 3.4019391052900155e-06], ['oloop.m_num_stmts;', 3.4019391052900155e-06], ['IVOPTs', 3.4019391052900155e-06], ['oloop.m_inductions.length', 3.4019391052900155e-06], ['cond_expr', 3.4019391052900155e-06], ['iloop.m_const_init_reduc', 3.4019391052900155e-06], ['(stmt_cost', 3.4019391052900155e-06], ['profitability', 3.4019391052900155e-06], ['iloop.m_num_stmts,', 3.4019391052900155e-06], ['stmt_cost,', 3.4019391052900155e-06], ['iloop.m_loop->inner', 3.4019391052900155e-06], ['(o_idx', 3.4019391052900155e-06], ['simple_dce_from_worklist', 3.4019391052900155e-06], ['(changed_p', 3.4019391052900155e-06], ['dump_enabled_p', 3.4019391052900155e-06], ['"loops', 3.4019391052900155e-06], ['nest\\n");', 3.4019391052900155e-06], ['changed_p;', 3.4019391052900155e-06], ['pass_data_linterchange', 3.4019391052900155e-06], ['"linterchange",', 3.4019391052900155e-06], ['TV_LINTERCHANGE,', 3.4019391052900155e-06], ['(pass_data_linterchange,', 3.4019391052900155e-06], ['(m_ctxt);', 3.4019391052900155e-06], ['flag_loop_interchange;', 3.4019391052900155e-06], ['latch', 3.4019391052900155e-06], ['restricts', 3.4019391052900155e-06], ['nests:', 3.4019391052900155e-06], ['header<---+', 3.4019391052900155e-06], ['INNER_LOOP', 3.4019391052900155e-06], ['exit--->latch', 3.4019391052900155e-06], ['head/exit', 3.4019391052900155e-06], ['proper_loop_form_for_interchange', 3.4019391052900155e-06], ['**min_outer)', 3.4019391052900155e-06], ['exit;', 3.4019391052900155e-06], ['(loop->safelen', 3.4019391052900155e-06], ['loop->constraints', 3.4019391052900155e-06], ['loop->can_be_parallel', 3.4019391052900155e-06], ['loop->dont_vectorize', 3.4019391052900155e-06], ['loop->force_vectorize', 3.4019391052900155e-06], ['loop->in_oacc_kernels_region', 3.4019391052900155e-06], ['loop->orig_loop_num', 3.4019391052900155e-06], ['loop->simduid', 3.4019391052900155e-06], ['latch.', 3.4019391052900155e-06], ['loop->num_nodes', 3.4019391052900155e-06], ['loop->inner->num_nodes', 3.4019391052900155e-06], ['((exit', 3.4019391052900155e-06], ['single_dom_exit', 3.4019391052900155e-06], ['header/exit', 3.4019391052900155e-06], ['(loop->header->succs)', 3.4019391052900155e-06], ['!single_succ_p', 3.4019391052900155e-06], ['(loop->header)', 3.4019391052900155e-06], ['(single_succ_edge', 3.4019391052900155e-06], ['(loop->header))', 3.4019391052900155e-06], ['(exit->src->succs)', 3.4019391052900155e-06], ['!single_pred_p', 3.4019391052900155e-06], ['(exit->src)', 3.4019391052900155e-06], ['(single_pred_edge', 3.4019391052900155e-06], ['(exit->src))))', 3.4019391052900155e-06], ['(e0->src', 3.4019391052900155e-06], ['e1->src', 3.4019391052900155e-06], ['(e0->src->loop_father', 3.4019391052900155e-06], ['e1->src->loop_father', 3.4019391052900155e-06], ['(e0->dest', 3.4019391052900155e-06], ['e1->dest', 3.4019391052900155e-06], ['(e0->dest->loop_father', 3.4019391052900155e-06], ['e1->dest->loop_father', 3.4019391052900155e-06], ['dominate', 3.4019391052900155e-06], ['get_loop_body', 3.4019391052900155e-06], ['loop->header', 3.4019391052900155e-06], ['dominated_by_p', 3.4019391052900155e-06], ['(CDI_DOMINATORS,', 3.4019391052900155e-06], ['exit->src,', 3.4019391052900155e-06], ['(gsi)))', 3.4019391052900155e-06], ['(!niters', 3.4019391052900155e-06], ['(niters))', 3.4019391052900155e-06], ['(loop_p', 3.4019391052900155e-06], ['(*min_outer,', 3.4019391052900155e-06], ['loop2);', 3.4019391052900155e-06], ['(loop2))', 3.4019391052900155e-06], ['(loop2),', 3.4019391052900155e-06], ['(!evolution_function_is_invariant_p', 3.4019391052900155e-06], ['(niters,', 3.4019391052900155e-06], ['loop2->num))', 3.4019391052900155e-06], ['*min_outer', 3.4019391052900155e-06], ['loop2;', 3.4019391052900155e-06], ['[INNERMOST,', 3.4019391052900155e-06], ['LOOP_NEST]', 3.4019391052900155e-06], ['should_interchange_loop_nest', 3.4019391052900155e-06], ['(idx', 3.4019391052900155e-06], ['idx--)', 3.4019391052900155e-06], ['(idx,', 3.4019391052900155e-06], ['false))', 3.4019391052900155e-06], ['DATAREFS,', 3.4019391052900155e-06], ['instantly.', 3.4019391052900155e-06], ['(vec<loop_p>', 3.4019391052900155e-06], ['loop_nest,', 3.4019391052900155e-06], ['*b;', 3.4019391052900155e-06], ['loop_nest.last', 3.4019391052900155e-06], ['&a);', 3.4019391052900155e-06], ['a_outer_p', 3.4019391052900155e-06], ['(a))->loop_father', 3.4019391052900155e-06], ['(j,', 3.4019391052900155e-06], ['&b);', 3.4019391052900155e-06], ['(DR_IS_WRITE', 3.4019391052900155e-06], ['(b))->loop_father', 3.4019391052900155e-06], ['ddr_p', 3.4019391052900155e-06], ['initialize_data_dependence_relation', 3.4019391052900155e-06], ['loop_nest);', 3.4019391052900155e-06], ['ddrs->safe_push', 3.4019391052900155e-06], ['compute_affine_dependence', 3.4019391052900155e-06], ['loop_nest[0]);', 3.4019391052900155e-06], ['classic', 3.4019391052900155e-06], ['chrec_dont_know', 3.4019391052900155e-06], ['DDR_NUM_DIR_VECTS', 3.4019391052900155e-06], ['chrec_known', 3.4019391052900155e-06], ['b_outer_p))', 3.4019391052900155e-06], ['(dr))))', 3.4019391052900155e-06], ['datarefs[j++]', 3.4019391052900155e-06], ['(dr->aux)', 3.4019391052900155e-06], ['free_data_ref', 3.4019391052900155e-06], ['datarefs.truncate', 3.4019391052900155e-06], ['shrink', 3.4019391052900155e-06], ["block's", 3.4019391052900155e-06], ['*datarefs)', 3.4019391052900155e-06], ['*bb_refs;', 3.4019391052900155e-06], ['get_loop_body_in_dom_order', 3.4019391052900155e-06], ['bbs[i]->aux', 3.4019391052900155e-06], ['Shrink', 3.4019391052900155e-06], ['(find_data_references_in_bb', 3.4019391052900155e-06], ['bb_refs)', 3.4019391052900155e-06], ['chrec_dont_know)', 3.4019391052900155e-06], ['bb->loop_father->inner;', 3.4019391052900155e-06], ['!loop_nest->inner)', 3.4019391052900155e-06], ['(bb_refs->is_empty', 3.4019391052900155e-06], ['(!bb->aux)', 3.4019391052900155e-06], ['bb->aux;', 3.4019391052900155e-06], ['datarefs->safe_splice', 3.4019391052900155e-06], ['succeed,', 3.4019391052900155e-06], ['LOOP_NEST;', 3.4019391052900155e-06], ['imperfect', 3.4019391052900155e-06], ['initializing/finalizing', 3.4019391052900155e-06], ['sinve', 3.4019391052900155e-06], ['prepare_perfect_loop_nest', 3.4019391052900155e-06], ['*start_loop', 3.4019391052900155e-06], ['loops_for_fn', 3.4019391052900155e-06], ['(cfun)->tree_root;', 3.4019391052900155e-06], ['outer*/', 3.4019391052900155e-06], ['(loop->num', 3.4019391052900155e-06], ['loop->inner', 3.4019391052900155e-06], ['(outermost,', 3.4019391052900155e-06], ['(!proper_loop_form_for_interchange', 3.4019391052900155e-06], ['&outermost))', 3.4019391052900155e-06], ['sibling', 3.4019391052900155e-06], ['(loop->next', 3.4019391052900155e-06], ['!start_loop->inner)', 3.4019391052900155e-06], ['datarefs);', 3.4019391052900155e-06], ['datarefs->is_empty', 3.4019391052900155e-06], ['datarefs->length', 3.4019391052900155e-06], ['MAX_DATAREFS)', 3.4019391052900155e-06], ['(!start_loop)', 3.4019391052900155e-06], ['(!should_interchange_loop_nest', 3.4019391052900155e-06], ['*datarefs))', 3.4019391052900155e-06], ['start_loop.', 3.4019391052900155e-06], ['loop_nest->truncate', 3.4019391052900155e-06], ['(find_loop_nest', 3.4019391052900155e-06], ['(*loop_nest,', 3.4019391052900155e-06], ['"\\nConsider', 3.4019391052900155e-06], ['loop_nest<%d', 3.4019391052900155e-06], ['%d>\\n",', 3.4019391052900155e-06], ['start_loop->num,', 3.4019391052900155e-06], ['innermost->num);', 3.4019391052900155e-06], ['(*datarefs);', 3.4019391052900155e-06], ['(*ddrs);', 3.4019391052900155e-06], ['*ddrs', 3.4019391052900155e-06], ['stripped.', 3.4019391052900155e-06], ['start_loop->inner;', 3.4019391052900155e-06], ['(start_loop', 3.4019391052900155e-06], ['start_loop->inner);', 3.4019391052900155e-06], ['pass_linterchange::execute', 3.4019391052900155e-06], ['(fun)', 3.4019391052900155e-06], ['LI_ONLY_INNERMOST)', 3.4019391052900155e-06], ['datarefs', 3.4019391052900155e-06], ['ddrs', 3.4019391052900155e-06], ['(prepare_perfect_loop_nest', 3.4019391052900155e-06], ['&loop_nest,', 3.4019391052900155e-06], ['&datarefs,', 3.4019391052900155e-06], ['&ddrs))', 3.4019391052900155e-06], ['loop_interchange', 3.4019391052900155e-06], ['loop_interchange.interchange', 3.4019391052900155e-06], ['(datarefs,', 3.4019391052900155e-06], ['(ddrs);', 3.4019391052900155e-06], ['loop_nest.release', 3.4019391052900155e-06], ['(TODO_update_ssa_only_virtuals)', 3.4019391052900155e-06], ['make_pass_linterchange', 3.4019391052900155e-06], ['d-longdouble.cc', 3.4019391052900155e-06], ['"longdouble.h"', 3.4019391052900155e-06], ['0.5.', 3.4019391052900155e-06], ['CTFloat::zero;', 3.4019391052900155e-06], ['CTFloat::one;', 3.4019391052900155e-06], ['CTFloat::minusone;', 3.4019391052900155e-06], ['CTFloat::half;', 3.4019391052900155e-06], ['Truncate', 3.4019391052900155e-06], ['longdouble::normalize', 3.4019391052900155e-06], ['(real_value&', 3.4019391052900155e-06], ['&d);', 3.4019391052900155e-06], ['(int32_t', 3.4019391052900155e-06], ['(int64_t', 3.4019391052900155e-06], ['longdouble::to_int', 3.4019391052900155e-06], ['longdouble::to_uint', 3.4019391052900155e-06], ['dconst0', 3.4019391052900155e-06], ['dconst1;', 3.4019391052900155e-06], ['longdouble::to_bool', 3.4019391052900155e-06], ['rvc_zero;', 3.4019391052900155e-06], ['longdouble::add', 3.4019391052900155e-06], ['PLUS_EXPR,', 3.4019391052900155e-06], ['longdouble::sub', 3.4019391052900155e-06], ['longdouble::mul', 3.4019391052900155e-06], ['longdouble::div', 3.4019391052900155e-06], ['longdouble::mod', 3.4019391052900155e-06], ['rvc_zero', 3.4019391052900155e-06], ['rvc_zero)', 3.4019391052900155e-06], ['(REAL_VALUE_ISINF', 3.4019391052900155e-06], ['NaN?', 3.4019391052900155e-06], ['FIX_TRUNC_EXPR,', 3.4019391052900155e-06], ['&q);', 3.4019391052900155e-06], ['longdouble::neg', 3.4019391052900155e-06], ['longdouble::cmp', 3.4019391052900155e-06], ['longdouble::equals', 3.4019391052900155e-06], ['d-spec.c', 3.4019391052900155e-06], ['Specific', 3.4019391052900155e-06], ['"opt-suggestions.h"', 3.4019391052900155e-06], ['"gcc.h"', 3.4019391052900155e-06], ['DSOURCE', 3.4019391052900155e-06], ['(1<<1)', 3.4019391052900155e-06], ["`-lstdc++'.", 3.4019391052900155e-06], ['WITHLIBCXX', 3.4019391052900155e-06], ['(1<<2)', 3.4019391052900155e-06], ['SKIPOPT', 3.4019391052900155e-06], ['(1<<3)', 3.4019391052900155e-06], ['"stdc++"', 3.4019391052900155e-06], ['"gphobos"', 3.4019391052900155e-06], ['"gdruntime"', 3.4019391052900155e-06], ['libgphobos.', 3.4019391052900155e-06], ['PHOBOS_LINK,', 3.4019391052900155e-06], ['PHOBOS_STATIC,', 3.4019391052900155e-06], ['dynamically.', 3.4019391052900155e-06], ['PHOBOS_DYNAMIC,', 3.4019391052900155e-06], ['PHOBOS_DEFAULT;', 3.4019391052900155e-06], ['libgphobos.spec', 3.4019391052900155e-06], ['lang_specific_driver', 3.4019391052900155e-06], ['(cl_decoded_option', 3.4019391052900155e-06], ['**in_decoded_options,', 3.4019391052900155e-06], ['*in_decoded_options_count,', 3.4019391052900155e-06], ['*in_added_libraries)', 3.4019391052900155e-06], ["`-p'", 3.4019391052900155e-06], ["`-pg'", 3.4019391052900155e-06], ["`-g'.", 3.4019391052900155e-06], ['-debuglib.', 3.4019391052900155e-06], ['*new_decoded_options;', 3.4019391052900155e-06], ['"-lstdc++"', 3.4019391052900155e-06], ['*saw_libcxx', 3.4019391052900155e-06], ['STD', 3.4019391052900155e-06], ['saw', 3.4019391052900155e-06], ['-static.', 3.4019391052900155e-06], ['command-line.', 3.4019391052900155e-06], ['*defaultlib', 3.4019391052900155e-06], ['*debuglib', 3.4019391052900155e-06], ['"-fonly"', 3.4019391052900155e-06], ['*only_source_option', 3.4019391052900155e-06], ['-c', 3.4019391052900155e-06], ['-E,', 3.4019391052900155e-06], ['-fsyntax-only,', 3.4019391052900155e-06], ['-S', 3.4019391052900155e-06], ['.d.', 3.4019391052900155e-06], ['*first_d_file', 3.4019391052900155e-06], ['*in_decoded_options_count;', 3.4019391052900155e-06], ['*decoded_options', 3.4019391052900155e-06], ['*in_decoded_options;', 3.4019391052900155e-06], ['added_libraries', 3.4019391052900155e-06], ['*in_added_libraries;', 3.4019391052900155e-06], ['DSOURCE,', 3.4019391052900155e-06], ['MATHLIB,', 3.4019391052900155e-06], ['WITHTHREAD,', 3.4019391052900155e-06], ['WITHLIBC', 3.4019391052900155e-06], ['WITHLIBCXX.', 3.4019391052900155e-06], ['XCNEWVEC', 3.4019391052900155e-06], ['argc);', 3.4019391052900155e-06], ['argc;', 3.4019391052900155e-06], ['decoded_options[i].arg;', 3.4019391052900155e-06], ['(decoded_options[i].opt_index)', 3.4019391052900155e-06], ['OPT_dstartfiles:', 3.4019391052900155e-06], ['OPT_nostdlib:', 3.4019391052900155e-06], ['OPT_nodefaultlibs:', 3.4019391052900155e-06], ['OPT_nophoboslib:', 3.4019391052900155e-06], ['OPT_defaultlib_:', 3.4019391052900155e-06], ['(defaultlib', 3.4019391052900155e-06], ['defaultlib));', 3.4019391052900155e-06], ['defaultlib', 3.4019391052900155e-06], ['defaultlib),', 3.4019391052900155e-06], ['OPT_debuglib_:', 3.4019391052900155e-06], ['(debuglib', 3.4019391052900155e-06], ['debuglib));', 3.4019391052900155e-06], ['debuglib', 3.4019391052900155e-06], ['debuglib),', 3.4019391052900155e-06], ['OPT_l:', 3.4019391052900155e-06], ['((strcmp', 3.4019391052900155e-06], ['LIBSTDCXX)', 3.4019391052900155e-06], ['LIBSTDCXX_PROFILE)', 3.4019391052900155e-06], ['WITHLIBCXX;', 3.4019391052900155e-06], ['Unrecognized', 3.4019391052900155e-06], ['-ltango)', 3.4019391052900155e-06], ['OPT_pg:', 3.4019391052900155e-06], ['OPT_p:', 3.4019391052900155e-06], ['saw_profile_flag++;', 3.4019391052900155e-06], ['OPT_g:', 3.4019391052900155e-06], ["`-v',", 3.4019391052900155e-06], ['(argc', 3.4019391052900155e-06], ['OPT_x:', 3.4019391052900155e-06], ['"d")', 3.4019391052900155e-06], ['OPT_Xlinker:', 3.4019391052900155e-06], ['OPT_Wl_:', 3.4019391052900155e-06], ['Arguments', 3.4019391052900155e-06], ['something,', 3.4019391052900155e-06], ['OPT_c:', 3.4019391052900155e-06], ['OPT_E:', 3.4019391052900155e-06], ['OPT_fsyntax_only:', 3.4019391052900155e-06], ['specify', 3.4019391052900155e-06], ['libaries', 3.4019391052900155e-06], ['link,', 3.4019391052900155e-06], ['OPT_S:', 3.4019391052900155e-06], ['OPT_o:', 3.4019391052900155e-06], ['OPT_static:', 3.4019391052900155e-06], ['OPT_static_libgcc:', 3.4019391052900155e-06], ['OPT_static_libphobos:', 3.4019391052900155e-06], ['OPT_shared_libphobos:', 3.4019391052900155e-06], ['PHOBOS_DYNAMIC;', 3.4019391052900155e-06], ['decoded_options[i].orig_option_with_args_text;', 3.4019391052900155e-06], ['".d",', 3.4019391052900155e-06], ['OPT_SPECIAL_input_file:', 3.4019391052900155e-06], ['(arg[0]', 3.4019391052900155e-06], ['arg[1]', 3.4019391052900155e-06], ['first_d_file', 3.4019391052900155e-06], ['DSOURCE;', 3.4019391052900155e-06], ['libstdc++', 3.4019391052900155e-06], ['".cc")', 3.4019391052900155e-06], ['".cpp")', 3.4019391052900155e-06], ['".c++")', 3.4019391052900155e-06], ['libgcc.', 3.4019391052900155e-06], ['needstdcxx', 3.4019391052900155e-06], ["`-lstdcxx'", 3.4019391052900155e-06], ['`-Bstatic', 3.4019391052900155e-06], ['-lphobos', 3.4019391052900155e-06], ['-ldruntime', 3.4019391052900155e-06], ["-Bdynamic'", 3.4019391052900155e-06], ['only_source', 3.4019391052900155e-06], ["`-o'.", 3.4019391052900155e-06], ['new_decoded_options', 3.4019391052900155e-06], ['(cl_decoded_option,', 3.4019391052900155e-06], ['num_args);', 3.4019391052900155e-06], ['0th', 3.4019391052900155e-06], ['i.e.,', 3.4019391052900155e-06], ['decoded_options[i++];', 3.4019391052900155e-06], ['argc)', 3.4019391052900155e-06], ['SKIPOPT)', 3.4019391052900155e-06], ['new_decoded_options[j]', 3.4019391052900155e-06], ['decoded_options[i];', 3.4019391052900155e-06], ['(!saw_libcxx', 3.4019391052900155e-06], ['WITHLIBCXX))', 3.4019391052900155e-06], ['saw_libcxx', 3.4019391052900155e-06], ['&decoded_options[i];', 3.4019391052900155e-06], ['DSOURCE)', 3.4019391052900155e-06], ['i++;', 3.4019391052900155e-06], ['*only_source_arg', 3.4019391052900155e-06], ['(OPT_fonly_,', 3.4019391052900155e-06], ['only_source_arg,', 3.4019391052900155e-06], ['generate_option_input_file', 3.4019391052900155e-06], ['(only_source_arg,', 3.4019391052900155e-06], ['.d', 3.4019391052900155e-06], ['!saw_opt_o)', 3.4019391052900155e-06], ['(saw_opt_c', 3.4019391052900155e-06], ['saw_opt_S)', 3.4019391052900155e-06], ['lbasename', 3.4019391052900155e-06], ['(first_d_file);', 3.4019391052900155e-06], ['(base)', 3.4019391052900155e-06], ['baselen);', 3.4019391052900155e-06], ['suffix', 3.4019391052900155e-06], ['out[baselen]', 3.4019391052900155e-06], ['(saw_opt_S)', 3.4019391052900155e-06], ["'o';", 3.4019391052900155e-06], ['.out', 3.4019391052900155e-06], ['TARGET_EXECUTABLE_SUFFIX', 3.4019391052900155e-06], ['(TARGET_EXECUTABLE_SUFFIX[0]', 3.4019391052900155e-06], ['"a"', 3.4019391052900155e-06], ['TARGET_EXECUTABLE_SUFFIX;', 3.4019391052900155e-06], ['"a.out";', 3.4019391052900155e-06], ["`-lgphobos'", 3.4019391052900155e-06], ['PHOBOS_DYNAMIC)', 3.4019391052900155e-06], ['LIBPHOBOS,', 3.4019391052900155e-06], ['LIBDRUNTIME,', 3.4019391052900155e-06], ['(saw_debug_flag', 3.4019391052900155e-06], ['debuglib)', 3.4019391052900155e-06], ['debuglib,', 3.4019391052900155e-06], ['(defaultlib)', 3.4019391052900155e-06], ['defaultlib,', 3.4019391052900155e-06], ['(saw_libcxx)', 3.4019391052900155e-06], ['*saw_libcxx;', 3.4019391052900155e-06], ['(need_stdcxx)', 3.4019391052900155e-06], ['(saw_profile_flag', 3.4019391052900155e-06], ['LIBSTDCXX),', 3.4019391052900155e-06], ['(shared_libgcc', 3.4019391052900155e-06], ['(OPT_shared_libgcc,', 3.4019391052900155e-06], ['*in_decoded_options_count', 3.4019391052900155e-06], ['*in_decoded_options', 3.4019391052900155e-06], ['new_decoded_options;', 3.4019391052900155e-06], ['*in_added_libraries', 3.4019391052900155e-06], ['added_libraries;', 3.4019391052900155e-06], ['success', 3.4019391052900155e-06], ['((phobos_library', 3.4019391052900155e-06], ['need_spec)', 3.4019391052900155e-06], ['do_spec', 3.4019391052900155e-06], ['("%:include(libgphobos.spec)");', 3.4019391052900155e-06], ['lang_specific_extra_outfiles', 3.4019391052900155e-06], ['d-target.cc', 3.4019391052900155e-06], ['"dmd/tokens.h"', 3.4019391052900155e-06], ['Target::c_longsize;', 3.4019391052900155e-06], ['Target::realsize;', 3.4019391052900155e-06], ['Target::realpad;', 3.4019391052900155e-06], ['Target::realalignsize;', 3.4019391052900155e-06], ['Target::reverseCppOverloads;', 3.4019391052900155e-06], ['Target::cppExceptions;', 3.4019391052900155e-06], ['Target::maxStaticDataSize;', 3.4019391052900155e-06], ['.max,', 3.4019391052900155e-06], ['.min,', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::max;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::min_normal;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::nan;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::snan;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::infinity;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::epsilon;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::dig;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::mant_dig;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::max_exp;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::min_exp;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::max_10_exp;', 3.4019391052900155e-06], ['Target::FPTypeProperties<T>::min_10_exp;', 3.4019391052900155e-06], ['log10_2', 3.4019391052900155e-06], ['0.30102999566398119521;', 3.4019391052900155e-06], ['buf[128];', 3.4019391052900155e-06], ['REAL_MODE_FORMAT', 3.4019391052900155e-06], ['infinity.', 3.4019391052900155e-06], ['get_max_float', 3.4019391052900155e-06], ['(fmt,', 3.4019391052900155e-06], ['(buf));', 3.4019391052900155e-06], ['(&T::max.rv', 3.4019391052900155e-06], ['(&T::min_normal.rv', 3.4019391052900155e-06], ['(&T::nan.rv', 3.4019391052900155e-06], ['Signalling', 3.4019391052900155e-06], ['(&T::snan.rv', 3.4019391052900155e-06], ['+Infinity', 3.4019391052900155e-06], ['infinities.', 3.4019391052900155e-06], ['(&T::infinity.rv', 3.4019391052900155e-06], ['(fmt->pnan', 3.4019391052900155e-06], ['fmt->p)', 3.4019391052900155e-06], ['(&T::epsilon.rv', 3.4019391052900155e-06], ['T::dig', 3.4019391052900155e-06], ['mantissa.', 3.4019391052900155e-06], ['T::mant_dig', 3.4019391052900155e-06], ['fmt->p;', 3.4019391052900155e-06], ['T::max_exp', 3.4019391052900155e-06], ['fmt->emax;', 3.4019391052900155e-06], ['T::min_exp', 3.4019391052900155e-06], ['fmt->emin;', 3.4019391052900155e-06], ['T::max_10_exp', 3.4019391052900155e-06], ['fmt->emax', 3.4019391052900155e-06], ['T::min_10_exp', 3.4019391052900155e-06], ['(fmt->emin', 3.4019391052900155e-06], ['Target::ptrsize', 3.4019391052900155e-06], ['Target::realsize', 3.4019391052900155e-06], ['(Target::realsize', 3.4019391052900155e-06], ['(long_double_type_node)', 3.4019391052900155e-06], ['Target::realalignsize', 3.4019391052900155e-06], ['Target::classinfosize', 3.4019391052900155e-06], ['Target::maxStaticDataSize', 3.4019391052900155e-06], ['tree_to_shwi', 3.4019391052900155e-06], ['(TYPE_MAX_VALUE', 3.4019391052900155e-06], ['(ptrdiff_type_node));', 3.4019391052900155e-06], ['ptrdiff_t.', 3.4019391052900155e-06], ['global.params.isLP64', 3.4019391052900155e-06], ['Tint64;', 3.4019391052900155e-06], ['Tuns32;', 3.4019391052900155e-06], ['Tint32;', 3.4019391052900155e-06], ['Type::tsize_t', 3.4019391052900155e-06], ['Type::basic[Tsize_t];', 3.4019391052900155e-06], ['Type::tptrdiff_t', 3.4019391052900155e-06], ['Type::basic[Tptrdiff_t];', 3.4019391052900155e-06], ['Type::thash_t', 3.4019391052900155e-06], ['Target::c_longsize', 3.4019391052900155e-06], ['Target::reverseCppOverloads', 3.4019391052900155e-06], ['Target::cppExceptions', 3.4019391052900155e-06], ['real_value.', 3.4019391052900155e-06], ['(real_t)', 3.4019391052900155e-06], ['(real_value));', 3.4019391052900155e-06], ['<Target::FloatProperties>', 3.4019391052900155e-06], ['<Target::DoubleProperties>', 3.4019391052900155e-06], ['<Target::RealProperties>', 3.4019391052900155e-06], ['Commonly', 3.4019391052900155e-06], ['(&CTFloat::zero.rv', 3.4019391052900155e-06], ['&dconst0);', 3.4019391052900155e-06], ['(&CTFloat::one.rv', 3.4019391052900155e-06], ['&dconst1);', 3.4019391052900155e-06], ['(&CTFloat::minusone.rv', 3.4019391052900155e-06], ['&dconstm1);', 3.4019391052900155e-06], ['(&CTFloat::half.rv', 3.4019391052900155e-06], ['&dconsthalf);', 3.4019391052900155e-06], ['Target::alignsize', 3.4019391052900155e-06], ['min_align_of_type', 3.4019391052900155e-06], ['Target::fieldalign', 3.4019391052900155e-06], ['type->alignsize', 3.4019391052900155e-06], ['BIGGEST_FIELD_ALIGNMENT', 3.4019391052900155e-06], ['BIGGEST_FIELD_ALIGNMENT);', 3.4019391052900155e-06], ['align);', 3.4019391052900155e-06], ['controlled', 3.4019391052900155e-06], ['-fpack-struct=', 3.4019391052900155e-06], ['(maximum_field_alignment)', 3.4019391052900155e-06], ['maximum_field_alignment);', 3.4019391052900155e-06], ['critical', 3.4019391052900155e-06], ['Target::critsecsize', 3.4019391052900155e-06], ['targetdm.d_critsec_size', 3.4019391052900155e-06], ['Target::va_listType', 3.4019391052900155e-06], ['Type::tvalist;', 3.4019391052900155e-06], ['SZ', 3.4019391052900155e-06], ['Target::isVectorTypeSupported', 3.4019391052900155e-06], ['__vector(void[])', 3.4019391052900155e-06], ['__vector(ubyte[])', 3.4019391052900155e-06], ['(!type->isTypeBasic', 3.4019391052900155e-06], ['hardware', 3.4019391052900155e-06], ['(!targetm.vector_mode_supported_p', 3.4019391052900155e-06], ['(mode)', 3.4019391052900155e-06], ['!targetm.scalar_mode_supported_p', 3.4019391052900155e-06], ['(as_a', 3.4019391052900155e-06], ['<scalar_mode>', 3.4019391052900155e-06], ['(mode)))', 3.4019391052900155e-06], ['Target::isVectorOpSupported', 3.4019391052900155e-06], ['TOK', 3.4019391052900155e-06], ['non-scalar,', 3.4019391052900155e-06], ['__vector(void[]).', 3.4019391052900155e-06], ['(!type->isscalar', 3.4019391052900155e-06], ['TOKpow:', 3.4019391052900155e-06], ['fmod()', 3.4019391052900155e-06], ['(type->isfloating', 3.4019391052900155e-06], ['TOKandand:', 3.4019391052900155e-06], ['TOKoror:', 3.4019391052900155e-06], ['Logical', 3.4019391052900155e-06], ['TOKue:', 3.4019391052900155e-06], ['TOKlg:', 3.4019391052900155e-06], ['TOKule:', 3.4019391052900155e-06], ['TOKul:', 3.4019391052900155e-06], ['TOKuge:', 3.4019391052900155e-06], ['TOKug:', 3.4019391052900155e-06], ['TOKleg:', 3.4019391052900155e-06], ['TOKunord:', 3.4019391052900155e-06], ['TOKequal:', 3.4019391052900155e-06], ['TOKnotequal:', 3.4019391052900155e-06], ['TOKidentity:', 3.4019391052900155e-06], ['TOKnotidentity:', 3.4019391052900155e-06], ['Target::toCppMangle', 3.4019391052900155e-06], ['toCppMangleItanium', 3.4019391052900155e-06], ['CD', 3.4019391052900155e-06], ['cppTypeInfoMangleItanium', 3.4019391052900155e-06], ['mangling.', 3.4019391052900155e-06], ['Target::cppTypeMangle', 3.4019391052900155e-06], ['targetm.mangle_type', 3.4019391052900155e-06], ['Target::cppParameterType', 3.4019391052900155e-06], ['arg->type->merge2', 3.4019391052900155e-06], ['t->referenceTo', 3.4019391052900155e-06], ['(td);', 3.4019391052900155e-06], ['t->merge2', 3.4019391052900155e-06], ['mangle', 3.4019391052900155e-06], ['Type::tvalist->ty', 3.4019391052900155e-06], ['Type::tvalist)', 3.4019391052900155e-06], ['tb->castMod', 3.4019391052900155e-06], ['(t->mod);', 3.4019391052900155e-06], ['fundamental', 3.4019391052900155e-06], ['IS_FUNDAMENTAL', 3.4019391052900155e-06], ['Target::cppFundamentalType', 3.4019391052900155e-06], ['LINK', 3.4019391052900155e-06], ['Target::systemLinkage', 3.4019391052900155e-06], ['LINKc;', 3.4019391052900155e-06], ['decl.cc', 3.4019391052900155e-06], ['"dmd/nspace.h"', 3.4019391052900155e-06], ['(decl->isFuncDeclaration', 3.4019391052900155e-06], ['mangleExact', 3.4019391052900155e-06], ['((FuncDeclaration', 3.4019391052900155e-06], ['*)decl);', 3.4019391052900155e-06], ['SUFFIX,', 3.4019391052900155e-06], ['*suffix)', 3.4019391052900155e-06], ['*prefix', 3.4019391052900155e-06], ['(prefix)', 3.4019391052900155e-06], ['(suffix))', 3.4019391052900155e-06], ['(buflen);', 3.4019391052900155e-06], ['"_D%s%u%s%s",', 3.4019391052900155e-06], ['namelen,', 3.4019391052900155e-06], ['suffix);', 3.4019391052900155e-06], ['readable', 3.4019391052900155e-06], ['reporting.', 3.4019391052900155e-06], ['"%s.%s",', 3.4019391052900155e-06], ['gcc_attribute_p', 3.4019391052900155e-06], ['()->md;', 3.4019391052900155e-06], ['md->packages', 3.4019391052900155e-06], ['md->packages->dim', 3.4019391052900155e-06], ['"attribute"))', 3.4019391052900155e-06], ['appened', 3.4019391052900155e-06], ['global_declarations', 3.4019391052900155e-06], ['d_pushdecl().', 3.4019391052900155e-06], ['debug.', 3.4019391052900155e-06], ['telling', 3.4019391052900155e-06], ['IMPORTED_DECL', 3.4019391052900155e-06], ['renamed', 3.4019391052900155e-06], ['(d->isstatic)', 3.4019391052900155e-06], ['import,', 3.4019391052900155e-06], ['d->names.dim;', 3.4019391052900155e-06], ['*aliasdecl', 3.4019391052900155e-06], ['d->aliasdecls[i];', 3.4019391052900155e-06], ['(aliasdecl);', 3.4019391052900155e-06], ['*alias', 3.4019391052900155e-06], ['d->aliases[i];', 3.4019391052900155e-06], ['(alias', 3.4019391052900155e-06], ['(alias->toChars', 3.4019391052900155e-06], ['(d->mod);', 3.4019391052900155e-06], ['(d->aliasId', 3.4019391052900155e-06], ['(d->aliasId->toChars', 3.4019391052900155e-06], ['d->objects->dim;', 3.4019391052900155e-06], ['*o', 3.4019391052900155e-06], ['(*d->objects)[i];', 3.4019391052900155e-06], ['((o->dyncast', 3.4019391052900155e-06], ['DYNCAST_EXPRESSION)', 3.4019391052900155e-06], ['((Expression', 3.4019391052900155e-06], ['o)->op', 3.4019391052900155e-06], ['TOKdsymbol)', 3.4019391052900155e-06], ['((DsymbolExp', 3.4019391052900155e-06], ['o)->s->isDeclaration', 3.4019391052900155e-06], ['(AttribDeclaration', 3.4019391052900155e-06], ['*ds', 3.4019391052900155e-06], ['d->include', 3.4019391052900155e-06], ['(!ds)', 3.4019391052900155e-06], ['ds->dim;', 3.4019391052900155e-06], ['(*ds)[i];', 3.4019391052900155e-06], ['Pragmas', 3.4019391052900155e-06], ['vendor', 3.4019391052900155e-06], ['(PragmaDeclaration', 3.4019391052900155e-06], ['(!global.params.ignoreUnsupportedPragmas)', 3.4019391052900155e-06], ['("lib")', 3.4019391052900155e-06], ['("startaddress"))', 3.4019391052900155e-06], ['OPT_Wunknown_pragmas,', 3.4019391052900155e-06], ['"pragma(%s)', 3.4019391052900155e-06], ['((AttribDeclaration', 3.4019391052900155e-06], ['(Nspace', 3.4019391052900155e-06], ['Templates', 3.4019391052900155e-06], ["D's", 3.4019391052900155e-06], ['programming.', 3.4019391052900155e-06], ['voldemort', 3.4019391052900155e-06], ['!fd->isAuto', 3.4019391052900155e-06], ['fd->type->nextOf', 3.4019391052900155e-06], ['ti->tempdecl', 3.4019391052900155e-06], ['ti->accept', 3.4019391052900155e-06], ['(!d->needsCodegen', 3.4019391052900155e-06], ['mixin', 3.4019391052900155e-06], ['(TemplateMixin', 3.4019391052900155e-06], ['structs/unions', 3.4019391052900155e-06], ['others,', 3.4019391052900155e-06], ['ctors', 3.4019391052900155e-06], ['xopEquals,', 3.4019391052900155e-06], ['xopCmp', 3.4019391052900155e-06], ['xopHash.', 3.4019391052900155e-06], ['(d->xeq', 3.4019391052900155e-06], ['d->xeq', 3.4019391052900155e-06], ['d->xerreq)', 3.4019391052900155e-06], ['d->xeq->accept', 3.4019391052900155e-06], ['(d->xcmp', 3.4019391052900155e-06], ['d->xcmp', 3.4019391052900155e-06], ['d->xerrcmp)', 3.4019391052900155e-06], ['d->xcmp->accept', 3.4019391052900155e-06], ['(d->xhash)', 3.4019391052900155e-06], ['d->xhash->accept', 3.4019391052900155e-06], ['vtbl', 3.4019391052900155e-06], ['finish_vtable', 3.4019391052900155e-06], ['(!fd->fbody', 3.4019391052900155e-06], ['d->isAbstract', 3.4019391052900155e-06], ['hiding', 3.4019391052900155e-06], ['(!d->isFuncHidden', 3.4019391052900155e-06], ['fd->isFuture', 3.4019391052900155e-06], ['view', 3.4019391052900155e-06], ['overlaps', 3.4019391052900155e-06], ['vtbl[],', 3.4019391052900155e-06], ['*fd2', 3.4019391052900155e-06], ['d->vtbl[j]->isFuncDeclaration', 3.4019391052900155e-06], ['(!fd2->ident->equals', 3.4019391052900155e-06], ['(fd->ident))', 3.4019391052900155e-06], ['@__future,', 3.4019391052900155e-06], ['(fd2->isFuture', 3.4019391052900155e-06], ['(fd->leastAsSpecialized', 3.4019391052900155e-06], ['(fd2)', 3.4019391052900155e-06], ['fd2->leastAsSpecialized', 3.4019391052900155e-06], ['(fd))', 3.4019391052900155e-06], ['%<alias', 3.4019391052900155e-06], ['%s.%s;%>', 3.4019391052900155e-06], ['"overload', 3.4019391052900155e-06], ['set.",', 3.4019391052900155e-06], ['fd->parent->toChars', 3.4019391052900155e-06], ['!has_errors;', 3.4019391052900155e-06], ['(!this->finish_vtable', 3.4019391052900155e-06], ['d->vtblsym', 3.4019391052900155e-06], ['(d->vtblOffset', 3.4019391052900155e-06], ['(d->csym));', 3.4019391052900155e-06], ['(fd->fbody', 3.4019391052900155e-06], ['!d->isAbstract()))', 3.4019391052900155e-06], ['(fd)));', 3.4019391052900155e-06], ['(d->vtblsym)', 3.4019391052900155e-06], ['(d->vtblsym),', 3.4019391052900155e-06], ['(InterfaceDeclaration', 3.4019391052900155e-06], ['d->type->vtinfo->accept', 3.4019391052900155e-06], ['(d->errors', 3.4019391052900155e-06], ['d->type->ty', 3.4019391052900155e-06], ['(tc->sym->members', 3.4019391052900155e-06], ['!d->type->isZeroInit', 3.4019391052900155e-06], ['(tc->sym->defaultval,', 3.4019391052900155e-06], ['(d->aliassym)', 3.4019391052900155e-06], ['()->accept', 3.4019391052900155e-06], ['(!d->canTakeAddressOf', 3.4019391052900155e-06], ['instantiations.', 3.4019391052900155e-06], ['(!d->_init', 3.4019391052900155e-06], ['d->_init->isVoidInitializer', 3.4019391052900155e-06], ['(d->_init);', 3.4019391052900155e-06], ['initially', 3.4019391052900155e-06], ['enumerals', 3.4019391052900155e-06], ['serves', 3.4019391052900155e-06], ['(!d->type->isscalar', 3.4019391052900155e-06], ['(d->isDataseg', 3.4019391052900155e-06], ['!(d->storage_class', 3.4019391052900155e-06], ['STCextern))', 3.4019391052900155e-06], ['(d->type->size', 3.4019391052900155e-06], ['(Type::tsize_t));', 3.4019391052900155e-06], ['(!valid_constant_size_p', 3.4019391052900155e-06], ['(size))', 3.4019391052900155e-06], ['"size', 3.4019391052900155e-06], ['large");', 3.4019391052900155e-06], ['(d->_init', 3.4019391052900155e-06], ['!d->_init->isVoidInitializer', 3.4019391052900155e-06], ['(d->_init,', 3.4019391052900155e-06], ['d->type);', 3.4019391052900155e-06], ['d->type)->sym;', 3.4019391052900155e-06], ['d->type->defaultInitLiteral', 3.4019391052900155e-06], ['(size)', 3.4019391052900155e-06], ['d->type->toBasetype', 3.4019391052900155e-06], ['(!d->isDataseg', 3.4019391052900155e-06], ['!d->isMember', 3.4019391052900155e-06], ['isVarDeclaration()', 3.4019391052900155e-06], ['DeclarationExp', 3.4019391052900155e-06], ['(d->_init)', 3.4019391052900155e-06], ['(!d->_init->isVoidInitializer', 3.4019391052900155e-06], ['*vinit', 3.4019391052900155e-06], ['d->_init->isExpInitializer', 3.4019391052900155e-06], ['(vinit);', 3.4019391052900155e-06], ['(ie);', 3.4019391052900155e-06], ['needing', 3.4019391052900155e-06], ['(d->needsScopeDtor', 3.4019391052900155e-06], ['cleanup.', 3.4019391052900155e-06], ['(d->edtor);', 3.4019391052900155e-06], ['(d->size', 3.4019391052900155e-06], ['(d->loc)', 3.4019391052900155e-06], ['Zero-length', 3.4019391052900155e-06], ['(OPT_Wuninitialized,', 3.4019391052900155e-06], ['"uninitialized', 3.4019391052900155e-06], ['\'%s\'",', 3.4019391052900155e-06], ['"(no', 3.4019391052900155e-06], ['name)");', 3.4019391052900155e-06], ['(speculative_type_p', 3.4019391052900155e-06], ['(d->tinfo))', 3.4019391052900155e-06], ['(!global.params.useUnitTests', 3.4019391052900155e-06], ['d->isUnitTestDeclaration', 3.4019391052900155e-06], ['(tf->next', 3.4019391052900155e-06], ['tf->next->ty', 3.4019391052900155e-06], ['(d->semantic3Errors)', 3.4019391052900155e-06], ['(d->isNested', 3.4019391052900155e-06], ['*fdp', 3.4019391052900155e-06], ['fdp->isNested', 3.4019391052900155e-06], ['fdp', 3.4019391052900155e-06], ['fdp->toParent2', 3.4019391052900155e-06], ['compile,', 3.4019391052900155e-06], ['(fdp->semantic3Errors)', 3.4019391052900155e-06], ['PASSsemantic3)', 3.4019391052900155e-06], ['d->functionSemantic3', 3.4019391052900155e-06], ['(!d->fbody)', 3.4019391052900155e-06], ['("function', 3.4019391052900155e-06], ['d->toPrettyChars', 3.4019391052900155e-06], ['PASSsemantic3done);', 3.4019391052900155e-06], ['arguments...', 3.4019391052900155e-06], ['parameter:', 3.4019391052900155e-06], ['vthis,', 3.4019391052900155e-06], ['(d->vthis)', 3.4019391052900155e-06], ['(d->vthis->type', 3.4019391052900155e-06], ['(frame_type);', 3.4019391052900155e-06], ['parm_decl;', 3.4019391052900155e-06], ['(d->v_arguments)', 3.4019391052900155e-06], ['(d->v_arguments);', 3.4019391052900155e-06], ['n_parameters', 3.4019391052900155e-06], ['d->parameters', 3.4019391052900155e-06], ['d->parameters->dim', 3.4019391052900155e-06], ['n_parameters;', 3.4019391052900155e-06], ['*param', 3.4019391052900155e-06], ['(*d->parameters)[i];', 3.4019391052900155e-06], ['param_list;', 3.4019391052900155e-06], ['indirectly)', 3.4019391052900155e-06], ['expession', 3.4019391052900155e-06], ['(d->isThis', 3.4019391052900155e-06], ['d->isThis', 3.4019391052900155e-06], ['*pd', 3.4019391052900155e-06], ['vthis_field', 3.4019391052900155e-06], ['(this_tree),', 3.4019391052900155e-06], ['vthis_field);', 3.4019391052900155e-06], ['pd->isAggregateDeclaration', 3.4019391052900155e-06], ['this_tree;', 3.4019391052900155e-06], ['cfun->static_chain.', 3.4019391052900155e-06], ['(d->vresult)', 3.4019391052900155e-06], ['(d->vresult);', 3.4019391052900155e-06], ['Named', 3.4019391052900155e-06], ['Implemented', 3.4019391052900155e-06], ['RETURN_EXPRs', 3.4019391052900155e-06], ['replacing', 3.4019391052900155e-06], ['occurrences', 3.4019391052900155e-06], ['(DECL_RESULT', 3.4019391052900155e-06], ['(restype))', 3.4019391052900155e-06], ['(restype,', 3.4019391052900155e-06], ['(resdecl));', 3.4019391052900155e-06], ['(d->nrvo_var)', 3.4019391052900155e-06], ['(d->nrvo_var);', 3.4019391052900155e-06], ['SET_DECL_LANG_NRVO', 3.4019391052900155e-06], ['_argptr', 3.4019391052900155e-06], ['(BUILT_IN_VA_START),', 3.4019391052900155e-06], ['(BUILT_IN_VA_END),', 3.4019391052900155e-06], ['cleanup));', 3.4019391052900155e-06], ['DECL_SOURCE_FILE', 3.4019391052900155e-06], ['(d->loc.filename)', 3.4019391052900155e-06], ['("<no_file>",', 3.4019391052900155e-06], ['immediately:', 3.4019391052900155e-06], ['decl->isSymbolDeclaration', 3.4019391052900155e-06], ['(sd)', 3.4019391052900155e-06], ['(decl->isTypeInfoDeclaration', 3.4019391052900155e-06], ['((TypeInfoDeclaration', 3.4019391052900155e-06], ['*fad', 3.4019391052900155e-06], ['decl->isFuncAliasDeclaration', 3.4019391052900155e-06], ['(fad)', 3.4019391052900155e-06], ['(fad->funcalias);', 3.4019391052900155e-06], ['(decl->isField', 3.4019391052900155e-06], ['decl->toParent', 3.4019391052900155e-06], ['()->isAggregateDeclaration', 3.4019391052900155e-06], ['Finishing', 3.4019391052900155e-06], ['FIELD_DECL.', 3.4019391052900155e-06], ['decl->isFuncDeclaration', 3.4019391052900155e-06], ['about.', 3.4019391052900155e-06], ['vd->isParameter', 3.4019391052900155e-06], ['!vd->canTakeAddressOf', 3.4019391052900155e-06], ['VAR_DECL;', 3.4019391052900155e-06], ['(vd->alignment', 3.4019391052900155e-06], ['vd->alignment', 3.4019391052900155e-06], ['(vd->storage_class', 3.4019391052900155e-06], ['STCextern)', 3.4019391052900155e-06], ['(decl->isCodeseg', 3.4019391052900155e-06], ['mangled_name;', 3.4019391052900155e-06], ['(decl->mangleOverride)', 3.4019391052900155e-06], ['(decl->mangleOverride);', 3.4019391052900155e-06], ['targetm.mangle_decl_assembler_name', 3.4019391052900155e-06], ['mangle.', 3.4019391052900155e-06], ['(!DECL_EXTERNAL', 3.4019391052900155e-06], ['(mangled_name))', 3.4019391052900155e-06], ['*other', 3.4019391052900155e-06], ['(mangled_name);', 3.4019391052900155e-06], ['Non-templated', 3.4019391052900155e-06], ['(!decl->isInstantiated', 3.4019391052900155e-06], ['ScopeDsymbol::multiplyDefined', 3.4019391052900155e-06], ['other);', 3.4019391052900155e-06], ['(other);', 3.4019391052900155e-06], ['invisible', 3.4019391052900155e-06], ['(argtype,', 3.4019391052900155e-06], ['(!DECL_BY_REFERENCE', 3.4019391052900155e-06], ['argtype;', 3.4019391052900155e-06], ['Manifest', 3.4019391052900155e-06], ['(fd->isThis', 3.4019391052900155e-06], ['fd->isMember2', 3.4019391052900155e-06], ['(!ad->isStructDeclaration', 3.4019391052900155e-06], ['(handle);', 3.4019391052900155e-06], ['(handle,', 3.4019391052900155e-06], ['vindex', 3.4019391052900155e-06], ['fd->vtblIndex', 3.4019391052900155e-06], ['DECL_VINDEX', 3.4019391052900155e-06], ['(fd->vtblIndex);', 3.4019391052900155e-06], ['fd->isCMain', 3.4019391052900155e-06], ["'D", 3.4019391052900155e-06], ['(fd->toPrettyChars', 3.4019391052900155e-06], ["'void", 3.4019391052900155e-06], ['(d_int_type,', 3.4019391052900155e-06], ['(newfntype', 3.4019391052900155e-06], ['newfntype;', 3.4019391052900155e-06], ['(newfntype);', 3.4019391052900155e-06], ['Miscellaneous', 3.4019391052900155e-06], ['(fd->isMember2', 3.4019391052900155e-06], ['grokmethod', 3.4019391052900155e-06], ['cp/decl.c.', 3.4019391052900155e-06], ["'naked'.", 3.4019391052900155e-06], ['(fd->naked)', 3.4019391052900155e-06], ['"naked");', 3.4019391052900155e-06], ['DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT', 3.4019391052900155e-06], ['(fd->isArrayOp)', 3.4019391052900155e-06], ['contracts.', 3.4019391052900155e-06], ['("ensure")', 3.4019391052900155e-06], ['("require"))', 3.4019391052900155e-06], ['DECL_FINAL_P', 3.4019391052900155e-06], ['INTRINSIC_NONE;', 3.4019391052900155e-06], ['unnest', 3.4019391052900155e-06], ['cgraph,', 3.4019391052900155e-06], ['(node->origin)', 3.4019391052900155e-06], ['node->unnest', 3.4019391052900155e-06], ['artificial.', 3.4019391052900155e-06], ['STCtemp)', 3.4019391052900155e-06], ['(TYPE_SHARED', 3.4019391052900155e-06], ['volatile.', 3.4019391052900155e-06], ['STCvolatile)', 3.4019391052900155e-06], ['Protection', 3.4019391052900155e-06], ['debugger.', 3.4019391052900155e-06], ['PROTprivate)', 3.4019391052900155e-06], ['TREE_PRIVATE', 3.4019391052900155e-06], ['PROTprotected)', 3.4019391052900155e-06], ['TREE_PROTECTED', 3.4019391052900155e-06], ['Likewise,', 3.4019391052900155e-06], ['STCdeprecated)', 3.4019391052900155e-06], ['TREE_DEPRECATED', 3.4019391052900155e-06], ['TARGET_DLLIMPORT_DECL_ATTRIBUTES', 3.4019391052900155e-06], ['(decl->isImportedSymbol', 3.4019391052900155e-06], ['"dllimport");', 3.4019391052900155e-06], ['DECL_DLLIMPORT_P', 3.4019391052900155e-06], ['(decl->isExport', 3.4019391052900155e-06], ['"dllexport");', 3.4019391052900155e-06], ['(decl->isDataseg', 3.4019391052900155e-06], ['decl->isCodeseg', 3.4019391052900155e-06], ['decl->isThreadlocal', 3.4019391052900155e-06], ['!fd->isNested', 3.4019391052900155e-06], ['(decl->isInstantiated', 3.4019391052900155e-06], ['storage.', 3.4019391052900155e-06], ['(decl->isThreadlocal', 3.4019391052900155e-06], ['!DECL_ARTIFICIAL', 3.4019391052900155e-06], ['(global.params.vtls)', 3.4019391052900155e-06], ['"`%s`', 3.4019391052900155e-06], ['local",', 3.4019391052900155e-06], ['decl->toChars', 3.4019391052900155e-06], ['meaning.', 3.4019391052900155e-06], ['(decl->userAttribDecl)', 3.4019391052900155e-06], ['*attrs', 3.4019391052900155e-06], ['decl->userAttribDecl->getAttributes', 3.4019391052900155e-06], ['(attrs),', 3.4019391052900155e-06], ['(decl->csym),', 3.4019391052900155e-06], ['%%', 3.4019391052900155e-06], ['intelligent', 3.4019391052900155e-06], ['VAR_DECL.', 3.4019391052900155e-06], ['declared,', 3.4019391052900155e-06], ['(IDENTIFIER_DECL_TREE', 3.4019391052900155e-06], ['(ident))', 3.4019391052900155e-06], ['(!var->isDataseg', 3.4019391052900155e-06], ['!var->isMember', 3.4019391052900155e-06], ['cfun->language->function;', 3.4019391052900155e-06], ['(!TREE_STATIC', 3.4019391052900155e-06], ['fd->vresult', 3.4019391052900155e-06], ['fd->v_argptr)', 3.4019391052900155e-06], ['Fixes', 3.4019391052900155e-06], ['VAR_DECLs,', 3.4019391052900155e-06], ['PARM_DECLs,', 3.4019391052900155e-06], ['decls,', 3.4019391052900155e-06], ['get_symbol_decl().', 3.4019391052900155e-06], ['(DECL_LANG_NRVO', 3.4019391052900155e-06], ['DECL_LANG_NRVO', 3.4019391052900155e-06], ['vd->toParent2', 3.4019391052900155e-06], ['parent);', 3.4019391052900155e-06], ['(frame_ref),', 3.4019391052900155e-06], ['undoes', 3.4019391052900155e-06], ['getRightThis', 3.4019391052900155e-06], ['(vd->parent', 3.4019391052900155e-06], ['vd->isThisDeclaration', 3.4019391052900155e-06], ['(!fd->isMember2', 3.4019391052900155e-06], ['this->this', 3.4019391052900155e-06], ['vfield);', 3.4019391052900155e-06], ['(ff))', 3.4019391052900155e-06], ['(ff)),', 3.4019391052900155e-06], ['(fd->vthis->type),', 3.4019391052900155e-06], ['outer->toParent2', 3.4019391052900155e-06], ['Auto', 3.4019391052900155e-06], ['sending', 3.4019391052900155e-06], ['(DECL_THREAD_LOCAL_P', 3.4019391052900155e-06], ['(flag_checking', 3.4019391052900155e-06], ['Initializer', 3.4019391052900155e-06], ['bigger', 3.4019391052900155e-06], ['dtsize', 3.4019391052900155e-06], ['(decl)));', 3.4019391052900155e-06], ['(tsize', 3.4019391052900155e-06], ['dtsize)', 3.4019391052900155e-06], ['internal_error', 3.4019391052900155e-06], ['("Mismatch', 3.4019391052900155e-06], ['(%wd)', 3.4019391052900155e-06], ['"its', 3.4019391052900155e-06], ['(%wd).",', 3.4019391052900155e-06], ['tsize,', 3.4019391052900155e-06], ['dtsize);', 3.4019391052900155e-06], ['.common,', 3.4019391052900155e-06], ['(DECL_COMDAT', 3.4019391052900155e-06], ['initializer_zerop', 3.4019391052900155e-06], ['Thunk', 3.4019391052900155e-06], ['g++.', 3.4019391052900155e-06], ['thunk_labelno;', 3.4019391052900155e-06], ['buf[256];', 3.4019391052900155e-06], ['aliased.', 3.4019391052900155e-06], ['targetm.asm_out.generate_internal_label', 3.4019391052900155e-06], ['"LTHUNK",', 3.4019391052900155e-06], ['thunk_labelno);', 3.4019391052900155e-06], ['thunk_labelno++;', 3.4019391052900155e-06], ['(alias);', 3.4019391052900155e-06], ['(alias));', 3.4019391052900155e-06], ['*aliasn;', 3.4019391052900155e-06], ['aliasn', 3.4019391052900155e-06], ['cgraph_node::create_same_body_alias', 3.4019391052900155e-06], ['(aliasn', 3.4019391052900155e-06], ['outputted.', 3.4019391052900155e-06], ['fixed_offset', 3.4019391052900155e-06], ['-THUNK_LANG_OFFSET', 3.4019391052900155e-06], ['this_adjusting', 3.4019391052900155e-06], ['(flag_syntax_only)', 3.4019391052900155e-06], ['targetm_common.have_named_sections)', 3.4019391052900155e-06], ['*symbol', 3.4019391052900155e-06], ['(symbol', 3.4019391052900155e-06], ['symbol->alias)', 3.4019391052900155e-06], ['(symbol->analyzed)', 3.4019391052900155e-06], ['(function)->ultimate_alias_target', 3.4019391052900155e-06], ['()->decl;', 3.4019391052900155e-06], ['(function)->alias_target;', 3.4019391052900155e-06], ['DECL_SECTION_NAME', 3.4019391052900155e-06], ['(thunk)->implicit_section', 3.4019391052900155e-06], ['(fn)->implicit_section;', 3.4019391052900155e-06], ['(a))', 3.4019391052900155e-06], ['(a);', 3.4019391052900155e-06], ['SET_DECL_RTL', 3.4019391052900155e-06], ['*funcn,', 3.4019391052900155e-06], ['*thunk_node;', 3.4019391052900155e-06], ['funcn', 3.4019391052900155e-06], ['thunk_node', 3.4019391052900155e-06], ['funcn->create_thunk', 3.4019391052900155e-06], ['this_adjusting,', 3.4019391052900155e-06], ['fixed_offset,', 3.4019391052900155e-06], ['alias);', 3.4019391052900155e-06], ['(DECL_ONE_ONLY', 3.4019391052900155e-06], ['thunk_node->add_to_same_comdat_group', 3.4019391052900155e-06], ['assemble_mi_thunk', 3.4019391052900155e-06], ['boundaries', 3.4019391052900155e-06], ['gimple.', 3.4019391052900155e-06], ['cgraph::expand_thunk', 3.4019391052900155e-06], ['current_function_decl,', 3.4019391052900155e-06], ['(!stdarg_p', 3.4019391052900155e-06], ['(thunk)))', 3.4019391052900155e-06], ['thunk_node->create_edge', 3.4019391052900155e-06], ['(funcn,', 3.4019391052900155e-06], ['thunk_node->count);', 3.4019391052900155e-06], ['thunk_node->expand_thunk', 3.4019391052900155e-06], ['Adjustor', 3.4019391052900155e-06], ['make_thunk', 3.4019391052900155e-06], ['(!DECL_ARGUMENTS', 3.4019391052900155e-06], ['!DECL_RESULT', 3.4019391052900155e-06], ['(decl->fbody)', 3.4019391052900155e-06], ['compiled,', 3.4019391052900155e-06], ['finish_thunk.', 3.4019391052900155e-06], ['void_list_node)', 3.4019391052900155e-06], ['(params,', 3.4019391052900155e-06], ['cgraph_node::expand_thunk.', 3.4019391052900155e-06], ['failed.', 3.4019391052900155e-06], ['question.', 3.4019391052900155e-06], ['(THUNK_LANG_OFFSET', 3.4019391052900155e-06], ['THUNK_LANG_OFFSET', 3.4019391052900155e-06], ['inherit', 3.4019391052900155e-06], ['targetting.', 3.4019391052900155e-06], ['target_name', 3.4019391052900155e-06], ['identlen', 3.4019391052900155e-06], ['IDENTIFIER_LENGTH', 3.4019391052900155e-06], ['(target_name)', 3.4019391052900155e-06], ['14;', 3.4019391052900155e-06], ['identlen);', 3.4019391052900155e-06], ['ident),', 3.4019391052900155e-06], ['identlen,', 3.4019391052900155e-06], ['"_DT%u%s",', 3.4019391052900155e-06], ['(target_name));', 3.4019391052900155e-06], ['(thunk));', 3.4019391052900155e-06], ['current_function_decl.', 3.4019391052900155e-06], ['intend', 3.4019391052900155e-06], ['fd->isInstantiated', 3.4019391052900155e-06], ['ti->needsCodegen', 3.4019391052900155e-06], ['fd->parent)', 3.4019391052900155e-06], ['(OPT_Wtemplates,', 3.4019391052900155e-06], ['instantiated",', 3.4019391052900155e-06], ['ti->kind', 3.4019391052900155e-06], ['ti->toPrettyChars', 3.4019391052900155e-06], ['(false));', 3.4019391052900155e-06], ['fd->getModule', 3.4019391052900155e-06], ['md->isRoot', 3.4019391052900155e-06], ['push_function_context', 3.4019391052900155e-06], ['allocate_struct_function', 3.4019391052900155e-06], ['(fd->endloc.filename)', 3.4019391052900155e-06], ['(fd->endloc);', 3.4019391052900155e-06], ['ggc_cleared_alloc<language_function>', 3.4019391052900155e-06], ["'null'", 3.4019391052900155e-06], ['fd->parent;', 3.4019391052900155e-06], ['p->parent)', 3.4019391052900155e-06], ['cfun->language->module', 3.4019391052900155e-06], ['p->isModule', 3.4019391052900155e-06], ['(cfun->language->module)', 3.4019391052900155e-06], ['(cfun->language->module', 3.4019391052900155e-06], ['Begin', 3.4019391052900155e-06], ['(level_function);', 3.4019391052900155e-06], ['Restores', 3.4019391052900155e-06], ['old_context)', 3.4019391052900155e-06], ['(d_function_chain->stmt_list));', 3.4019391052900155e-06], ['somewhere,', 3.4019391052900155e-06], ['stmtlist', 3.4019391052900155e-06], ['&stmtlist);', 3.4019391052900155e-06], ['stmtlist;', 3.4019391052900155e-06], ['(!STATEMENT_LIST_HEAD', 3.4019391052900155e-06], ['&body);', 3.4019391052900155e-06], ['(!errorcount', 3.4019391052900155e-06], ['!global.errors)', 3.4019391052900155e-06], ['ggc_free', 3.4019391052900155e-06], ['(cfun->language);', 3.4019391052900155e-06], ['set_cfun', 3.4019391052900155e-06], ['pop_function_context', 3.4019391052900155e-06], ['DECL,', 3.4019391052900155e-06], ['mark_needed', 3.4019391052900155e-06], ['varpool_node', 3.4019391052900155e-06], ['varpool_node::get_create', 3.4019391052900155e-06], ["BC's", 3.4019391052900155e-06], ['vtbl[]', 3.4019391052900155e-06], ['"~0u"', 3.4019391052900155e-06], ['*bc)', 3.4019391052900155e-06], ['cd->vtblInterfaces->dim', 3.4019391052900155e-06], ['b->sym->vtbl.dim', 3.4019391052900155e-06], ['vtbl[]s.', 3.4019391052900155e-06], ['cd2;', 3.4019391052900155e-06], ['cd2->vtblInterfaces->dim;', 3.4019391052900155e-06], ['(*cd2->vtblInterfaces)[k];', 3.4019391052900155e-06], ['(bs->fillVtbl', 3.4019391052900155e-06], ['(bc', 3.4019391052900155e-06], ['bs->sym->vtbl.dim', 3.4019391052900155e-06], ['~0u;', 3.4019391052900155e-06], ['frequently', 3.4019391052900155e-06], ['rtti', 3.4019391052900155e-06], ['comparisons),', 3.4019391052900155e-06], ['accessible.', 3.4019391052900155e-06], ['"__vtbl",', 3.4019391052900155e-06], ['(Type::tvoidptr->sarrayOf', 3.4019391052900155e-06], ['(decl->vtbl.dim));', 3.4019391052900155e-06], ['decl->vtblsym', 3.4019391052900155e-06], ['(decl->vtblsym,', 3.4019391052900155e-06], ['TARGET_VTABLE_ENTRY_ALIGN);', 3.4019391052900155e-06], ['build_class_instance.', 3.4019391052900155e-06], ['unions.', 3.4019391052900155e-06], ['(vfield', 3.4019391052900155e-06], ['vfield;', 3.4019391052900155e-06], ['offset))', 3.4019391052900155e-06], ['build_new_class_expr.', 3.4019391052900155e-06], ['exp->originalClass', 3.4019391052900155e-06], ['(exp->value->stype));', 3.4019391052900155e-06], ['vptr);', 3.4019391052900155e-06], ['bottom.', 3.4019391052900155e-06], ['re-order', 3.4019391052900155e-06], ['(cd2', 3.4019391052900155e-06], ['(cd2,', 3.4019391052900155e-06], ['(csymoffset', 3.4019391052900155e-06], ['(cd2));', 3.4019391052900155e-06], ['(csymoffset));', 3.4019391052900155e-06], ['(bc->offset));', 3.4019391052900155e-06], ['csym);', 3.4019391052900155e-06], ['owned', 3.4019391052900155e-06], ['bcd->fields.dim;', 3.4019391052900155e-06], ['*vfield', 3.4019391052900155e-06], ['bcd->fields[i];', 3.4019391052900155e-06], ['exp->findFieldIndexByName', 3.4019391052900155e-06], ['(vfield);', 3.4019391052900155e-06], ['(*exp->value->elements)[index];', 3.4019391052900155e-06], ['(!value)', 3.4019391052900155e-06], ['(bcd->fields[i]);', 3.4019391052900155e-06], ['snippet.', 3.4019391052900155e-06], ['C(1,', 3.4019391052900155e-06], ['`C(1,', 3.4019391052900155e-06], ["3)'", 3.4019391052900155e-06], ['detail.', 3.4019391052900155e-06], ['start-up', 3.4019391052900155e-06], ['whichever', 3.4019391052900155e-06], ["`gc_init()'.", 3.4019391052900155e-06], ['infact', 3.4019391052900155e-06], ['eventually.', 3.4019391052900155e-06], ['(expr->value->stype);', 3.4019391052900155e-06], ['expr->value->sym', 3.4019391052900155e-06], ['"C");', 3.4019391052900155e-06], ['(expr->value->sym);', 3.4019391052900155e-06], ['(expr->value->sym,', 3.4019391052900155e-06], ['struct/class', 3.4019391052900155e-06], ["'new", 3.4019391052900155e-06], ['(!sd)', 3.4019391052900155e-06], ['Honor', 3.4019391052900155e-06], ['user.', 3.4019391052900155e-06], ['(decl->sinit,', 3.4019391052900155e-06], ['*ne', 3.4019391052900155e-06], ['NewExp::create', 3.4019391052900155e-06], ['(cd->loc,', 3.4019391052900155e-06], ['ne->type', 3.4019391052900155e-06], ['cd->type;', 3.4019391052900155e-06], ['ne->ctfeInterpret', 3.4019391052900155e-06], ['TOKclassreference);', 3.4019391052900155e-06], ['((ClassReferenceExp', 3.4019391052900155e-06], ['(!sd->fill', 3.4019391052900155e-06], ['sle->elements,', 3.4019391052900155e-06], ['true))', 3.4019391052900155e-06], ['sle->type', 3.4019391052900155e-06], ['TypeInfo_Enum,', 3.4019391052900155e-06], ['*ident_save', 3.4019391052900155e-06], ['decl->ident;', 3.4019391052900155e-06], ['(!decl->ident)', 3.4019391052900155e-06], ['("__enum");', 3.4019391052900155e-06], ['ident_save;', 3.4019391052900155e-06], ['PREFIX.', 3.4019391052900155e-06], ['*prefix)', 3.4019391052900155e-06], ['"___s";', 3.4019391052900155e-06], ['*label;', 3.4019391052900155e-06], ['ASM_FORMAT_PRIVATE_NAME', 3.4019391052900155e-06], ['(label,', 3.4019391052900155e-06], ['DECL_UID', 3.4019391052900155e-06], ['(label));', 3.4019391052900155e-06], ['hashed', 3.4019391052900155e-06], ['duplicates.', 3.4019391052900155e-06], ['dsym->parent->isTemplateInstance', 3.4019391052900155e-06], ['dsym->parent)->toChars', 3.4019391052900155e-06], ['dsym->ident->toChars', 3.4019391052900155e-06], ['(dsym->loc),', 3.4019391052900155e-06], ['(dsym)));', 3.4019391052900155e-06], ['TYPE_DECLs', 3.4019391052900155e-06], ['TYPE_STUB_DECL.', 3.4019391052900155e-06], ['SCOPE_FILE_SCOPE_P', 3.4019391052900155e-06], ['ARTIFICIAL', 3.4019391052900155e-06], ['IGNORED.', 3.4019391052900155e-06], ['ignored)', 3.4019391052900155e-06], ['artificial;', 3.4019391052900155e-06], ['ignored;', 3.4019391052900155e-06], ['placed.', 3.4019391052900155e-06], ['comdat', 3.4019391052900155e-06], ['group,', 3.4019391052900155e-06], ['(DECL_COMDAT_GROUP', 3.4019391052900155e-06], ['DECL_COMDAT_GROUP', 3.4019391052900155e-06], ['"initialized', 3.4019391052900155e-06], ['common"', 3.4019391052900155e-06], ['(flag_weak)', 3.4019391052900155e-06], ['statically;', 3.4019391052900155e-06], ['part)', 3.4019391052900155e-06], ['waste', 3.4019391052900155e-06], ['Fallback,', 3.4019391052900155e-06], ['(TREE_PUBLIC', 3.4019391052900155e-06], ['"linkonce"', 3.4019391052900155e-06], ['Weak', 3.4019391052900155e-06], ['Necessary', 3.4019391052900155e-06], ['inlined.', 3.4019391052900155e-06], ['fallback', 3.4019391052900155e-06], ['(!flag_weak)', 3.4019391052900155e-06], ['expr.cc', 3.4019391052900155e-06], ['E,', 3.4019391052900155e-06], ['RESULT_', 3.4019391052900155e-06], ['constp_;', 3.4019391052900155e-06], ['needs_postblit', 3.4019391052900155e-06], ['(sd->postblit)', 3.4019391052900155e-06], ['needs_dtor', 3.4019391052900155e-06], ['((e->op', 3.4019391052900155e-06], ['e->isLvalue', 3.4019391052900155e-06], ['TOKcast', 3.4019391052900155e-06], ['ARG1.', 3.4019391052900155e-06], ['binary_op', 3.4019391052900155e-06], ['FLOAT_MOD_EXPR)', 3.4019391052900155e-06], ['arg0));', 3.4019391052900155e-06], ['MINUS_EXPR);', 3.4019391052900155e-06], ['POINTER_DIFF_EXPR', 3.4019391052900155e-06], ['that,', 3.4019391052900155e-06], ['ptrdiff_type', 3.4019391052900155e-06], ['computations', 3.4019391052900155e-06], ['(ptrtype)', 3.4019391052900155e-06], ['(POINTER_DIFF_EXPR,', 3.4019391052900155e-06], ['unsignedp))', 3.4019391052900155e-06], ['(unsignedp)', 3.4019391052900155e-06], ['inttype,', 3.4019391052900155e-06], ['(t1)', 3.4019391052900155e-06], ['binop_assignment', 3.4019391052900155e-06], ['Stabilize', 3.4019391052900155e-06], ['lhs);', 3.4019391052900155e-06], ['RHS,', 3.4019391052900155e-06], ['LHS.', 3.4019391052900155e-06], ['(e2);', 3.4019391052900155e-06], ['rexpr', 3.4019391052900155e-06], ['(e1->type),', 3.4019391052900155e-06], ['e1->type),', 3.4019391052900155e-06], ['rexpr);', 3.4019391052900155e-06], ['(rexpr,', 3.4019391052900155e-06], ['e1->type,', 3.4019391052900155e-06], ['e1b->type));', 3.4019391052900155e-06], ['constp;', 3.4019391052900155e-06], ['third', 3.4019391052900155e-06], ['(CondExp', 3.4019391052900155e-06], ['(e->econd),', 3.4019391052900155e-06], ['e->econd->type);', 3.4019391052900155e-06], ['(IdentityExp', 3.4019391052900155e-06], ['TOKidentity)', 3.4019391052900155e-06], ['(tb1->isfloating', 3.4019391052900155e-06], ['identical.', 3.4019391052900155e-06], ['(!tb1->iscomplex', 3.4019391052900155e-06], ['Alignment', 3.4019391052900155e-06], ['inequality.', 3.4019391052900155e-06], ['(EqualExp', 3.4019391052900155e-06], ['matching,', 3.4019391052900155e-06], ['*t1elem', 3.4019391052900155e-06], ['*t2elem', 3.4019391052900155e-06], ['((t1elem->isintegral', 3.4019391052900155e-06], ['Tvoid', 3.4019391052900155e-06], ['!((TypeStruct', 3.4019391052900155e-06], ['*)t1elem)->sym->xeq))', 3.4019391052900155e-06], ['t2elem->ty)', 3.4019391052900155e-06], ['t1saved', 3.4019391052900155e-06], ['t2saved', 3.4019391052900155e-06], ['t1len', 3.4019391052900155e-06], ['t2len', 3.4019391052900155e-06], ['Reference', 3.4019391052900155e-06], ['t1ptr', 3.4019391052900155e-06], ['t2ptr', 3.4019391052900155e-06], ['structs,', 3.4019391052900155e-06], ['(((TypeStruct', 3.4019391052900155e-06], ['t1elem)->sym))', 3.4019391052900155e-06], ['(t1len,', 3.4019391052900155e-06], ['(t1elem->size', 3.4019391052900155e-06], ['t2ptr,', 3.4019391052900155e-06], ['t1elem)->sym;', 3.4019391052900155e-06], ['t2ptr);', 3.4019391052900155e-06], ['inequality:', 3.4019391052900155e-06], ['tsizecmp', 3.4019391052900155e-06], ['size_zero_node);', 3.4019391052900155e-06], ['Finally,', 3.4019391052900155e-06], ['dynamic.', 3.4019391052900155e-06], ['(tb1->size', 3.4019391052900155e-06], ['tb2->size', 3.4019391052900155e-06], ['tlencmp', 3.4019391052900155e-06], ['t2len);', 3.4019391052900155e-06], ['left-to-right', 3.4019391052900155e-06], ['(t2saved,', 3.4019391052900155e-06], ['(t1saved,', 3.4019391052900155e-06], ['_adEq2()', 3.4019391052900155e-06], ['*t1array', 3.4019391052900155e-06], ['t1elem->arrayOf', 3.4019391052900155e-06], ['(LIBCALL_ADEQ2,', 3.4019391052900155e-06], ['(t1array));', 3.4019391052900155e-06], ['Equality', 3.4019391052900155e-06], ['_aaEqual()', 3.4019391052900155e-06], ['*taa1', 3.4019391052900155e-06], ['tb1;', 3.4019391052900155e-06], ['(LIBCALL_AAEQUAL,', 3.4019391052900155e-06], ['(taa1),', 3.4019391052900155e-06], ['exactly.', 3.4019391052900155e-06], ["`in'", 3.4019391052900155e-06], ['(InExp', 3.4019391052900155e-06], ['tb2)->index->toBasetype', 3.4019391052900155e-06], ['_aaInX().', 3.4019391052900155e-06], ['(LIBCALL_AAINX,', 3.4019391052900155e-06], ['(CmpExp', 3.4019391052900155e-06], ['non-equal', 3.4019391052900155e-06], ['equal,', 3.4019391052900155e-06], ['lengths,', 3.4019391052900155e-06], ['shorter', 3.4019391052900155e-06], ['longer.', 3.4019391052900155e-06], ['(LIBCALL_ADCMP2,', 3.4019391052900155e-06], ['(telem->arrayOf', 3.4019391052900155e-06], ['`and', 3.4019391052900155e-06], ['(AndAndExp', 3.4019391052900155e-06], ['`or', 3.4019391052900155e-06], ['(OrOrExp', 3.4019391052900155e-06], ['evaluating.', 3.4019391052900155e-06], ['TOKadd:', 3.4019391052900155e-06], ['TOKmin:', 3.4019391052900155e-06], ['((e->e1->type->isreal', 3.4019391052900155e-06], ['e->e2->type->isimaginary', 3.4019391052900155e-06], ['(e->e1->type->isimaginary', 3.4019391052900155e-06], ['e->e2->type->isreal', 3.4019391052900155e-06], ['binary_op.', 3.4019391052900155e-06], ['TOKmin)', 3.4019391052900155e-06], ['(e->e1->type->isreal', 3.4019391052900155e-06], ['TOKmul:', 3.4019391052900155e-06], ['TOKdiv:', 3.4019391052900155e-06], ['TOKand:', 3.4019391052900155e-06], ['TOKor:', 3.4019391052900155e-06], ['TOKxor:', 3.4019391052900155e-06], ['TOKshl:', 3.4019391052900155e-06], ['TOKshr:', 3.4019391052900155e-06], ['TOKushr:', 3.4019391052900155e-06], ['concatenates', 3.4019391052900155e-06], ['*etype;', 3.4019391052900155e-06], ['*elemvars', 3.4019391052900155e-06], ['concatenations', 3.4019391052900155e-06], ['((a', 3.4019391052900155e-06], ['[a,', 3.4019391052900155e-06], ['c]', 3.4019391052900155e-06], ['*ex', 3.4019391052900155e-06], ['ex->op', 3.4019391052900155e-06], ['TOKcat;)', 3.4019391052900155e-06], ['(ex->op', 3.4019391052900155e-06], ['ex', 3.4019391052900155e-06], ['((CatExp', 3.4019391052900155e-06], ['ex)->e1;', 3.4019391052900155e-06], ['ndims++;', 3.4019391052900155e-06], ['byte[][ndims]', 3.4019391052900155e-06], ['*targselem', 3.4019391052900155e-06], ['(targselem,', 3.4019391052900155e-06], ['ndims));', 3.4019391052900155e-06], ['(elemvars,', 3.4019391052900155e-06], ['left.', 3.4019391052900155e-06], ['CatExp', 3.4019391052900155e-06], ['*oe', 3.4019391052900155e-06], ['(ce->e1->op', 3.4019391052900155e-06], ['TOKcat', 3.4019391052900155e-06], ['*)ce->e1,', 3.4019391052900155e-06], ['ce->e2)))', 3.4019391052900155e-06], ['oe,', 3.4019391052900155e-06], ['&elemvars);', 3.4019391052900155e-06], ['(dim);', 3.4019391052900155e-06], ['Finished', 3.4019391052900155e-06], ['pushing', 3.4019391052900155e-06], ['arrs', 3.4019391052900155e-06], ['(targselem->arrayOf', 3.4019391052900155e-06], ['(ndims),', 3.4019391052900155e-06], ['(LIBCALL_ARRAYCATNTX,', 3.4019391052900155e-06], ['arrs);', 3.4019391052900155e-06], ['b).', 3.4019391052900155e-06], ['(LIBCALL_ARRAYCATT,', 3.4019391052900155e-06], ['e->e1,', 3.4019391052900155e-06], ['&elemvars),', 3.4019391052900155e-06], ['e->e2,', 3.4019391052900155e-06], ['&elemvars));', 3.4019391052900155e-06], ['(elemvars);', 3.4019391052900155e-06], ['((*elemvars)[i],', 3.4019391052900155e-06], ['(BinAssignExp', 3.4019391052900155e-06], ['TOKaddass:', 3.4019391052900155e-06], ['TOKminass:', 3.4019391052900155e-06], ['TOKmulass:', 3.4019391052900155e-06], ['TOKdivass:', 3.4019391052900155e-06], ['TOKandass:', 3.4019391052900155e-06], ['TOKorass:', 3.4019391052900155e-06], ['TOKxorass:', 3.4019391052900155e-06], ['TOKshlass:', 3.4019391052900155e-06], ['TOKshrass:', 3.4019391052900155e-06], ['TOKushrass:', 3.4019391052900155e-06], ['promoted.', 3.4019391052900155e-06], ["`>>>='", 3.4019391052900155e-06], ['undergo', 3.4019391052900155e-06], ['shifting.', 3.4019391052900155e-06], ['TOKshrass)', 3.4019391052900155e-06], ['this->binop_assignment', 3.4019391052900155e-06], ['e1b,', 3.4019391052900155e-06], ['e->e2);', 3.4019391052900155e-06], ['(CatAssignExp', 3.4019391052900155e-06], ['Tdchar', 3.4019391052900155e-06], ['etype->ty', 3.4019391052900155e-06], ['Twchar))', 3.4019391052900155e-06], ['char[]', 3.4019391052900155e-06], ['wchar[]', 3.4019391052900155e-06], ['Tchar)', 3.4019391052900155e-06], ['LIBCALL_ARRAYAPPENDCD', 3.4019391052900155e-06], ['LIBCALL_ARRAYAPPENDWD;', 3.4019391052900155e-06], ['(e->e1)),', 3.4019391052900155e-06], ['((tb2->ty', 3.4019391052900155e-06], ['(LIBCALL_ARRAYAPPENDT,', 3.4019391052900155e-06], ['tb2))', 3.4019391052900155e-06], ['(LIBCALL_ARRAYAPPENDCTX,', 3.4019391052900155e-06], ['(offexp),', 3.4019391052900155e-06], ['offexp,', 3.4019391052900155e-06], ['(offexp);', 3.4019391052900155e-06], ['(ptrexp);', 3.4019391052900155e-06], ['(ptrexp,', 3.4019391052900155e-06], ['offexp);', 3.4019391052900155e-06], ['appending.', 3.4019391052900155e-06], ['(ptrexp),', 3.4019391052900155e-06], ['(AssignExp', 3.4019391052900155e-06], ['array.length', 3.4019391052900155e-06], ['TOKarraylength)', 3.4019391052900155e-06], ["array's", 3.4019391052900155e-06], ['property;', 3.4019391052900155e-06], ['resize', 3.4019391052900155e-06], ['ArrayLengthExp', 3.4019391052900155e-06], ['Type::tsize_t);', 3.4019391052900155e-06], ['(ale->e1));', 3.4019391052900155e-06], ['ale->e1->type->toBasetype', 3.4019391052900155e-06], ['etype->isZeroInit', 3.4019391052900155e-06], ['LIBCALL_ARRAYSETLENGTHT', 3.4019391052900155e-06], ['LIBCALL_ARRAYSETLENGTHIT;', 3.4019391052900155e-06], ['ale->e1->type,', 3.4019391052900155e-06], ['(ale->e1->type),', 3.4019391052900155e-06], ['array[]', 3.4019391052900155e-06], ['TOKslice)', 3.4019391052900155e-06], ['SliceExp', 3.4019391052900155e-06], ['se->e1->type->toBasetype', 3.4019391052900155e-06], ['stype->nextOf', 3.4019391052900155e-06], ['blockAssign)', 3.4019391052900155e-06], ['LIBCALL_ARRAYSETCTOR', 3.4019391052900155e-06], ['LIBCALL_ARRAYSETASSIGN;', 3.4019391052900155e-06], ['postblits', 3.4019391052900155e-06], ['const/immutable', 3.4019391052900155e-06], ['(etype->unSharedOf', 3.4019391052900155e-06], ['(d_array_ptr', 3.4019391052900155e-06], ['(e->e2->type->ty', 3.4019391052900155e-06], ['(!postblit', 3.4019391052900155e-06], ['!destructor', 3.4019391052900155e-06], ['!array_bounds_check', 3.4019391052900155e-06], ['(d_array_convert', 3.4019391052900155e-06], ['_d_arrayassign(ti,', 3.4019391052900155e-06], ['LIBCALL_ARRAYCTOR', 3.4019391052900155e-06], ['LIBCALL_ARRAYASSIGN;', 3.4019391052900155e-06], ['_d_arraycopy()', 3.4019391052900155e-06], ['(LIBCALL_ARRAYCOPY,', 3.4019391052900155e-06], ['referenceInit)', 3.4019391052900155e-06], ['e->e1)->var;', 3.4019391052900155e-06], ['post', 3.4019391052900155e-06], ['modifycode', 3.4019391052900155e-06], ['vthis_exp', 3.4019391052900155e-06], ['(component_ref', 3.4019391052900155e-06], ['vthis_exp);', 3.4019391052900155e-06], ['(e->e1->type->size', 3.4019391052900155e-06], ['rvalues', 3.4019391052900155e-06], ['postblits,', 3.4019391052900155e-06], ['dtors', 3.4019391052900155e-06], ['((!postblit', 3.4019391052900155e-06], ['!destructor)', 3.4019391052900155e-06], ['!lvalue_p', 3.4019391052900155e-06], ['postblit)', 3.4019391052900155e-06], ['TOKblit', 3.4019391052900155e-06], ['e->e1->type->size', 3.4019391052900155e-06], ['*arrtype', 3.4019391052900155e-06], ['etype->arrayOf', 3.4019391052900155e-06], ['(LIBCALL_ARRAYCTOR,', 3.4019391052900155e-06], ['_d_arrayassign_l()', 3.4019391052900155e-06], ['_d_arrayassign_r()', 3.4019391052900155e-06], ['(lvalue_p)', 3.4019391052900155e-06], ['LIBCALL_ARRAYASSIGN_L', 3.4019391052900155e-06], ['LIBCALL_ARRAYASSIGN_R;', 3.4019391052900155e-06], ['elembuf', 3.4019391052900155e-06], ['(etype));', 3.4019391052900155e-06], ['(elembuf));', 3.4019391052900155e-06], ['postfix', 3.4019391052900155e-06], ['(PostExp', 3.4019391052900155e-06], ['TOKplusplus)', 3.4019391052900155e-06], ['TOKminusminus)', 3.4019391052900155e-06], ['(IndexExp', 3.4019391052900155e-06], ['tb1)->index->toBasetype', 3.4019391052900155e-06], ['(e->modifiable)', 3.4019391052900155e-06], ['LIBCALL_AAGETY;', 3.4019391052900155e-06], ['(tb1->unSharedOf', 3.4019391052900155e-06], ['LIBCALL_AAGETRVALUEX;', 3.4019391052900155e-06], ['(tkey);', 3.4019391052900155e-06], ['e->type->pointerTo', 3.4019391052900155e-06], ['(!e->indexIsInBounds', 3.4019391052900155e-06], ['tassert', 3.4019391052900155e-06], ['tassert);', 3.4019391052900155e-06], ['!e->indexIsInBounds)', 3.4019391052900155e-06], ['(e->e2->loc,', 3.4019391052900155e-06], ['.ptr.', 3.4019391052900155e-06], ['(ptr)),', 3.4019391052900155e-06], ['(e->type)', 3.4019391052900155e-06], ['size_t.', 3.4019391052900155e-06], ['("unexpected', 3.4019391052900155e-06], ['e->type->toChars', 3.4019391052900155e-06], ['(DelegatePtrExp', 3.4019391052900155e-06], ['(DelegateFuncptrExp', 3.4019391052900155e-06], ['convert-to-dynamic-array', 3.4019391052900155e-06], ['(!e->lwr)', 3.4019391052900155e-06], ['(e->upr', 3.4019391052900155e-06], ['most,', 3.4019391052900155e-06], ['(e->lwr));', 3.4019391052900155e-06], ['upr_tree', 3.4019391052900155e-06], ['(e->upr));', 3.4019391052900155e-06], ['always.', 3.4019391052900155e-06], ['(upr_tree)', 3.4019391052900155e-06], ['SAVE_EXPR)', 3.4019391052900155e-06], ['(lwr_tree);', 3.4019391052900155e-06], ['(lwr_tree))', 3.4019391052900155e-06], ['(void_okay_p', 3.4019391052900155e-06], ['newlength;', 3.4019391052900155e-06], ['(!e->upperIsInBounds)', 3.4019391052900155e-06], ['(length)', 3.4019391052900155e-06], ['(e->upr->loc,', 3.4019391052900155e-06], ['Enforces', 3.4019391052900155e-06], ['upr.', 3.4019391052900155e-06], ['(!e->lowerIsLessThanUpper)', 3.4019391052900155e-06], ['(e->lwr->loc,', 3.4019391052900155e-06], ['lwr_tree,', 3.4019391052900155e-06], ['lwr_tree)', 3.4019391052900155e-06], ['newlength);', 3.4019391052900155e-06], ['(lwr,', 3.4019391052900155e-06], ['upr)', 3.4019391052900155e-06], ['lwr.', 3.4019391052900155e-06], ['(newlength),', 3.4019391052900155e-06], ['(lwr_tree,', 3.4019391052900155e-06], ['newlength),', 3.4019391052900155e-06], ['e->to->toBasetype', 3.4019391052900155e-06], ['(tbtype),', 3.4019391052900155e-06], ['ebtype,', 3.4019391052900155e-06], ['tbtype);', 3.4019391052900155e-06], ['(DeleteExp', 3.4019391052900155e-06], ['e->e1)->var->isVarDeclaration', 3.4019391052900155e-06], ['v->onstack)', 3.4019391052900155e-06], ['LIBCALL_CALLINTERFACEFINALIZER', 3.4019391052900155e-06], ['LIBCALL_CALLFINALIZER;', 3.4019391052900155e-06], ['LIBCALL_DELINTERFACE', 3.4019391052900155e-06], ['LIBCALL_DELCLASS;', 3.4019391052900155e-06], ['telem;', 3.4019391052900155e-06], ['_delarray_t', 3.4019391052900155e-06], ['(LIBCALL_DELARRAYT,', 3.4019391052900155e-06], ['instance,', 3.4019391052900155e-06], ['delete,', 3.4019391052900155e-06], ['((TypePointer', 3.4019391052900155e-06], ['*)tb1)->next->toBasetype', 3.4019391052900155e-06], ['(tnext->ty', 3.4019391052900155e-06], ['*)tnext;', 3.4019391052900155e-06], ['(LIBCALL_DELSTRUCT,', 3.4019391052900155e-06], ['(tnext));', 3.4019391052900155e-06], ['(LIBCALL_DELMEMORY,', 3.4019391052900155e-06], ['("don\'t', 3.4019391052900155e-06], ['(RemoveExp', 3.4019391052900155e-06], ['tb)->index->toBasetype', 3.4019391052900155e-06], ['(LIBCALL_AADELX,', 3.4019391052900155e-06], ['Type::tbool,', 3.4019391052900155e-06], ['(index));', 3.4019391052900155e-06], ['array",', 3.4019391052900155e-06], ['(NotExp', 3.4019391052900155e-06], ['compliment', 3.4019391052900155e-06], ['complemented.', 3.4019391052900155e-06], ['(ComExp', 3.4019391052900155e-06], ['negation', 3.4019391052900155e-06], ['(NegExp', 3.4019391052900155e-06], ['(PtrExp', 3.4019391052900155e-06], ['BinExp', 3.4019391052900155e-06], ['*be', 3.4019391052900155e-06], ['(be->e1->op', 3.4019391052900155e-06], ['TOKaddress', 3.4019391052900155e-06], ['be->e2->isConst', 3.4019391052900155e-06], ['be->e2->type->isintegral', 3.4019391052900155e-06], ['*ae', 3.4019391052900155e-06], ['((AddrExp', 3.4019391052900155e-06], ['be->e1)->e1;', 3.4019391052900155e-06], ['ae->type->toBasetype', 3.4019391052900155e-06], ['(ae);', 3.4019391052900155e-06], ['be->e2->toUInteger', 3.4019391052900155e-06], ['TOKsymoff)', 3.4019391052900155e-06], ['SymOffExp', 3.4019391052900155e-06], ['(!declaration_reference_p', 3.4019391052900155e-06], ['(se->var))', 3.4019391052900155e-06], ['se->var->type->toBasetype', 3.4019391052900155e-06], ['(se->var);', 3.4019391052900155e-06], ['se->offset;', 3.4019391052900155e-06], ['*(#record', 3.4019391052900155e-06], ['COMPONENT_REFERENCE.', 3.4019391052900155e-06], ['(tnext', 3.4019391052900155e-06], ['tnext->ty', 3.4019391052900155e-06], ['tnext)->sym;', 3.4019391052900155e-06], ['(field->type,', 3.4019391052900155e-06], ['e->type))', 3.4019391052900155e-06], ['(AddrExp', 3.4019391052900155e-06], ['illegal.', 3.4019391052900155e-06], ['((StructLiteralExp', 3.4019391052900155e-06], ['e->e1)->origin;', 3.4019391052900155e-06], ['(sle', 3.4019391052900155e-06], ['(!sle->sym)', 3.4019391052900155e-06], ['sle->sym', 3.4019391052900155e-06], ['(sle->type),', 3.4019391052900155e-06], ['"S");', 3.4019391052900155e-06], ['(sle->sym)', 3.4019391052900155e-06], ['(sle->sym);', 3.4019391052900155e-06], ['(sle->sym,', 3.4019391052900155e-06], ['sle->sym;', 3.4019391052900155e-06], ['(CallExp', 3.4019391052900155e-06], ['((CommaExp', 3.4019391052900155e-06], ['e1b)->e2;', 3.4019391052900155e-06], ['e1b)->var;', 3.4019391052900155e-06], ['(var->isFuncDeclaration', 3.4019391052900155e-06], ['!var->needThis', 3.4019391052900155e-06], ['TOKdotvar', 3.4019391052900155e-06], ['*dve', 3.4019391052900155e-06], ['(dve->e1->op', 3.4019391052900155e-06], ['dve->e1;', 3.4019391052900155e-06], ['sle->useStaticInit', 3.4019391052900155e-06], ['dve->var->isFuncDeclaration', 3.4019391052900155e-06], ['method;', 3.4019391052900155e-06], ['(!ad)', 3.4019391052900155e-06], ['(dve->e1);', 3.4019391052900155e-06], ['throws,', 3.4019391052900155e-06], ['destructed', 3.4019391052900155e-06], ['(fd->isCtorDeclaration', 3.4019391052900155e-06], ['(thisexp)', 3.4019391052900155e-06], ['COMPOUND_EXPR', 3.4019391052900155e-06], ['(thisexp)))', 3.4019391052900155e-06], ['(thisexp);', 3.4019391052900155e-06], ['!fd->isFinalFunc', 3.4019391052900155e-06], ['!e->directcall)', 3.4019391052900155e-06], ['thistype', 3.4019391052900155e-06], ['(thistype,', 3.4019391052900155e-06], ['(thisexp));', 3.4019391052900155e-06], ['fd->vtblIndex);', 3.4019391052900155e-06], ['thisexp,', 3.4019391052900155e-06], ['fd->type);', 3.4019391052900155e-06], ['(callee', 3.4019391052900155e-06], ['(TY', 3.4019391052900155e-06], ['Tdelegate),', 3.4019391052900155e-06], ['TOKdotvar)', 3.4019391052900155e-06], ['e1->type', 3.4019391052900155e-06], ['incorrect,', 3.4019391052900155e-06], ["'ref'", 3.4019391052900155e-06], ['(((DotVarExp', 3.4019391052900155e-06], ['e1b)->var->type);', 3.4019391052900155e-06], ['e1b)->var->isFuncDeclaration', 3.4019391052900155e-06], ['re-evaluate', 3.4019391052900155e-06], ["'fd'", 3.4019391052900155e-06], ['(call_by_alias_p', 3.4019391052900155e-06], ['(d_function_chain->function,', 3.4019391052900155e-06], ['fd))', 3.4019391052900155e-06], ['(fd->needThis', 3.4019391052900155e-06], ['(e1b->loc),', 3.4019391052900155e-06], ['"need', 3.4019391052900155e-06], ['compiling...', 3.4019391052900155e-06], ['this->type', 3.4019391052900155e-06], ['(e->type->isTypeBasic', 3.4019391052900155e-06], ['cleanup,', 3.4019391052900155e-06], ['(cleanup', 3.4019391052900155e-06], ['(slot);', 3.4019391052900155e-06], ['slot,', 3.4019391052900155e-06], ['(cleanup)', 3.4019391052900155e-06], ['(DelegateExp', 3.4019391052900155e-06], ['(e->func->semanticRun', 3.4019391052900155e-06], ['PASSsemantic3done)', 3.4019391052900155e-06], ['ie:', 3.4019391052900155e-06], ['*owner', 3.4019391052900155e-06], ['e->func->toParent', 3.4019391052900155e-06], ['(!owner->isTemplateInstance', 3.4019391052900155e-06], ['(owner->isTemplateInstance', 3.4019391052900155e-06], ['d_function_chain->module)', 3.4019391052900155e-06], ['(e->func->isNested', 3.4019391052900155e-06], ['TOKnull)', 3.4019391052900155e-06], ['(e->func));', 3.4019391052900155e-06], ['(!e->func->isThis', 3.4019391052900155e-06], ['("delegates', 3.4019391052900155e-06], ['functions");', 3.4019391052900155e-06], ['e->e1->type->ty', 3.4019391052900155e-06], ["`void*'.", 3.4019391052900155e-06], ['(e->e1->type),', 3.4019391052900155e-06], ['(e->func->isVirtual', 3.4019391052900155e-06], ['!e->func->isFinalFunc', 3.4019391052900155e-06], ['TOKsuper', 3.4019391052900155e-06], ['TOKdottype)', 3.4019391052900155e-06], ['e->func->vtblIndex);', 3.4019391052900155e-06], ['(DotTypeExp', 3.4019391052900155e-06], ['CallExp.', 3.4019391052900155e-06], ['(!vd->isField', 3.4019391052900155e-06], ['e->var->toChars', 3.4019391052900155e-06], ['e->var->kind', 3.4019391052900155e-06], ['(AssertExp', 3.4019391052900155e-06], ['assert_fail;', 3.4019391052900155e-06], ['((bool)', 3.4019391052900155e-06], ['(void)0', 3.4019391052900155e-06], ['(e1', 3.4019391052900155e-06], ['e1._invariant()', 3.4019391052900155e-06], ['d_function_chain->function->isUnitTestDeclaration', 3.4019391052900155e-06], ['(e->msg)', 3.4019391052900155e-06], ['(e->msg);', 3.4019391052900155e-06], ['LIBCALL_UNITTEST_MSG', 3.4019391052900155e-06], ['LIBCALL_ASSERT_MSG;', 3.4019391052900155e-06], ['LIBCALL_UNITTEST', 3.4019391052900155e-06], ['LIBCALL_ASSERT;', 3.4019391052900155e-06], ['_d_assert().', 3.4019391052900155e-06], ['tmsg);', 3.4019391052900155e-06], ['(global.params.useInvariants)', 3.4019391052900155e-06], ['(LIBCALL_INVARIANT,', 3.4019391052900155e-06], ['())->sym;', 3.4019391052900155e-06], ['(sd->inv', 3.4019391052900155e-06], ['(sd->inv,', 3.4019391052900155e-06], ['&args);', 3.4019391052900155e-06], ['optimizer.', 3.4019391052900155e-06], ['build_predict_expr', 3.4019391052900155e-06], ['(PRED_NORETURN,', 3.4019391052900155e-06], ['NOT_TAKEN);', 3.4019391052900155e-06], ['asserting', 3.4019391052900155e-06], ['(BUILT_IN_EXPECT);', 3.4019391052900155e-06], ['arg_types', 3.4019391052900155e-06], ['pred_type', 3.4019391052900155e-06], ['(arg_types);', 3.4019391052900155e-06], ['expected_type', 3.4019391052900155e-06], ['(arg_types));', 3.4019391052900155e-06], ['(pred_type,', 3.4019391052900155e-06], ['condition),', 3.4019391052900155e-06], ['(expected_type,', 3.4019391052900155e-06], ['(condition,', 3.4019391052900155e-06], ['assert_pass,', 3.4019391052900155e-06], ['assert_fail);', 3.4019391052900155e-06], ['(DeclarationExp', 3.4019391052900155e-06], ['(e->declaration);', 3.4019391052900155e-06], ['Construction', 3.4019391052900155e-06], ['typesafe-variadic', 3.4019391052900155e-06], ['STMT_LIST', 3.4019391052900155e-06], ['typeid', 3.4019391052900155e-06], ['(TypeidExp', 3.4019391052900155e-06], ['isType', 3.4019391052900155e-06], ['(tid->vtinfo->offset)', 3.4019391052900155e-06], ['(tid->vtinfo->offset));', 3.4019391052900155e-06], ['isExpression', 3.4019391052900155e-06], ['tid->type->toBasetype', 3.4019391052900155e-06], ['**classptr', 3.4019391052900155e-06], ['classinfo.', 3.4019391052900155e-06], ['function/lambda', 3.4019391052900155e-06], ['(FuncExp', 3.4019391052900155e-06], ["lambda's,", 3.4019391052900155e-06], ['nested.', 3.4019391052900155e-06], ['(e->fd->tok', 3.4019391052900155e-06], ['TOKreserved', 3.4019391052900155e-06], ['ftype->ty', 3.4019391052900155e-06], ['e->fd->tok', 3.4019391052900155e-06], ['e->fd->vthis', 3.4019391052900155e-06], ['trampoline.', 3.4019391052900155e-06], ['(e->fd->isNested', 3.4019391052900155e-06], ['(e->fd));', 3.4019391052900155e-06], ['(e->fd)));', 3.4019391052900155e-06], ['halt', 3.4019391052900155e-06], ['(HaltExp', 3.4019391052900155e-06], ['trap()', 3.4019391052900155e-06], ['abort()?', 3.4019391052900155e-06], ['ttrap', 3.4019391052900155e-06], ['(BUILT_IN_TRAP);', 3.4019391052900155e-06], ['(ttrap,', 3.4019391052900155e-06], ['soffset', 3.4019391052900155e-06], ['((SymOffExp', 3.4019391052900155e-06], ['e)->offset;', 3.4019391052900155e-06], ['(!soffset)', 3.4019391052900155e-06], ['(soffset);', 3.4019391052900155e-06], ['(VarExp', 3.4019391052900155e-06], ['(e->var->needThis', 3.4019391052900155e-06], ['e->var->ident->toChars', 3.4019391052900155e-06], ['(e->var->ident', 3.4019391052900155e-06], ['("__ctfe"))', 3.4019391052900155e-06], ['__ctfe', 3.4019391052900155e-06], ['FuncExp', 3.4019391052900155e-06], ['lambdas.', 3.4019391052900155e-06], ['FuncLiteralDeclaration', 3.4019391052900155e-06], ['*fld', 3.4019391052900155e-06], ['e->var->isFuncLiteralDeclaration', 3.4019391052900155e-06], ['(fld', 3.4019391052900155e-06], ['(fld->tok', 3.4019391052900155e-06], ['TOKreserved)', 3.4019391052900155e-06], ['fld->tok', 3.4019391052900155e-06], ['fld->vthis', 3.4019391052900155e-06], ['(fld);', 3.4019391052900155e-06], ['e->var->isSymbolDeclaration', 3.4019391052900155e-06], ['(var->isConst', 3.4019391052900155e-06], ['var->isImmutable', 3.4019391052900155e-06], ['var->_init)', 3.4019391052900155e-06], ['(var->inuse)', 3.4019391052900155e-06], ['"recursive', 3.4019391052900155e-06], ['var->inuse++;', 3.4019391052900155e-06], ['(initializerToExpression', 3.4019391052900155e-06], ['(var->_init),', 3.4019391052900155e-06], ['var->inuse--;', 3.4019391052900155e-06], ['sd->dsym)', 3.4019391052900155e-06], ['out/inout', 3.4019391052900155e-06], ['(e->var->type),', 3.4019391052900155e-06], ['(ThisExp', 3.4019391052900155e-06], ['(e->var)', 3.4019391052900155e-06], ['(NewExp', 3.4019391052900155e-06], ['(e->newargs);', 3.4019391052900155e-06], ['tb)->sym;', 3.4019391052900155e-06], ['(e->onstack)', 3.4019391052900155e-06], ['allocator,', 3.4019391052900155e-06], ['_d_newclass()', 3.4019391052900155e-06], ['(LIBCALL_NEWCLASS,', 3.4019391052900155e-06], ['(cd->isNested', 3.4019391052900155e-06], ['(cd->vthis);', 3.4019391052900155e-06], ['(e->thisexp)', 3.4019391052900155e-06], ['*tcd', 3.4019391052900155e-06], ['e->thisexp->type->isClassHandle', 3.4019391052900155e-06], ['(e->thisexp);', 3.4019391052900155e-06], ['tcd)', 3.4019391052900155e-06], ['*ocd', 3.4019391052900155e-06], ['(tcd,', 3.4019391052900155e-06], ['&offset));', 3.4019391052900155e-06], ['offset...', 3.4019391052900155e-06], ['e->thisexp->type,', 3.4019391052900155e-06], ['(new())->vthis', 3.4019391052900155e-06], ['*htype', 3.4019391052900155e-06], ['(htype->ty', 3.4019391052900155e-06], ['(!e->onstack);', 3.4019391052900155e-06], ['htype;', 3.4019391052900155e-06], ['stype->sym;', 3.4019391052900155e-06], ['opaque', 3.4019391052900155e-06], ['(sd->size', 3.4019391052900155e-06], ['(tb),', 3.4019391052900155e-06], ['_d_newitemT()', 3.4019391052900155e-06], ['htype->isZeroInit', 3.4019391052900155e-06], ['(e->member', 3.4019391052900155e-06], ['!e->arguments)', 3.4019391052900155e-06], ['(stype);', 3.4019391052900155e-06], ['(indirect_ref', 3.4019391052900155e-06], ['new_call),', 3.4019391052900155e-06], ['value),', 3.4019391052900155e-06], ['sd->fields.dim', 3.4019391052900155e-06], ['e->arguments,', 3.4019391052900155e-06], ['htype);', 3.4019391052900155e-06], ['se->type', 3.4019391052900155e-06], ['se->sym', 3.4019391052900155e-06], ['(se),', 3.4019391052900155e-06], ['*tarray', 3.4019391052900155e-06], ['(!e->allocator);', 3.4019391052900155e-06], ['(e->arguments->dim', 3.4019391052900155e-06], ['(*e->arguments)[0];', 3.4019391052900155e-06], ['(tarray->next->size', 3.4019391052900155e-06], ['tarray->next->isZeroInit', 3.4019391052900155e-06], ['LIBCALL_NEWARRAYT', 3.4019391052900155e-06], ['LIBCALL_NEWARRAYIT;', 3.4019391052900155e-06], ['Multidimensional', 3.4019391052900155e-06], ['tarray', 3.4019391052900155e-06], ['(Type::tsize_t,', 3.4019391052900155e-06], ['e->arguments->dim);', 3.4019391052900155e-06], ['(tarray);', 3.4019391052900155e-06], ['e->arguments->dim;', 3.4019391052900155e-06], ['(*e->arguments)[i];', 3.4019391052900155e-06], ['telem', 3.4019391052900155e-06], ['telem->toBasetype', 3.4019391052900155e-06], ['(telem);', 3.4019391052900155e-06], ['_d_newarraymTX(ti,', 3.4019391052900155e-06], ['_d_newarraymiTX(ti,', 3.4019391052900155e-06], ['telem->isZeroInit', 3.4019391052900155e-06], ['LIBCALL_NEWARRAYMTX', 3.4019391052900155e-06], ['LIBCALL_NEWARRAYMITX;', 3.4019391052900155e-06], ['(Type::tsize_t->arrayOf', 3.4019391052900155e-06], ['(e->arguments->dim),', 3.4019391052900155e-06], ['*tpointer', 3.4019391052900155e-06], ['(tpointer->next->size', 3.4019391052900155e-06], ['tpointer->next->isZeroInit', 3.4019391052900155e-06], ['((*e->arguments)[0]));', 3.4019391052900155e-06], ['(IntegerExp', 3.4019391052900155e-06], ['ctype);', 3.4019391052900155e-06], ['(RealExp', 3.4019391052900155e-06], ['(ComplexExp', 3.4019391052900155e-06], ['*tnext;', 3.4019391052900155e-06], ['Type::tfloat32;', 3.4019391052900155e-06], ['Type::tfloat64;', 3.4019391052900155e-06], ['Type::tfloat80;', 3.4019391052900155e-06], ['build_complex', 3.4019391052900155e-06], ['(creall', 3.4019391052900155e-06], ['tnext),', 3.4019391052900155e-06], ['(cimagl', 3.4019391052900155e-06], ['tnext));', 3.4019391052900155e-06], ['e->len);', 3.4019391052900155e-06], ['e->len;', 3.4019391052900155e-06], ['(e->charAt', 3.4019391052900155e-06], ['etype);', 3.4019391052900155e-06], ['(e->len', 3.4019391052900155e-06], ['e->sz);', 3.4019391052900155e-06], ['e->string,', 3.4019391052900155e-06], ['string[length]', 3.4019391052900155e-06], ['terminator.', 3.4019391052900155e-06], ['(length,', 3.4019391052900155e-06], ['(e->len),', 3.4019391052900155e-06], ['(TupleExp', 3.4019391052900155e-06], ['(e->e0)', 3.4019391052900155e-06], ['(e->e0);', 3.4019391052900155e-06], ['e->exps->dim;', 3.4019391052900155e-06], ['(*e->exps)[i];', 3.4019391052900155e-06], ['(ArrayLiteralExp', 3.4019391052900155e-06], ['void[n]', 3.4019391052900155e-06], ['ubyte[n].', 3.4019391052900155e-06], ['Type::tuns8->sarrayOf', 3.4019391052900155e-06], ['e->getElement', 3.4019391052900155e-06], ['CONSTRUCTOR_NO_CLEARING.', 3.4019391052900155e-06], ['expr->type,', 3.4019391052900155e-06], ['etype));', 3.4019391052900155e-06], ['this->constp_)', 3.4019391052900155e-06], ['ctor,', 3.4019391052900155e-06], ['"A");', 3.4019391052900155e-06], ['(constant_p', 3.4019391052900155e-06], ['(LIBCALL_ARRAYLITERALTX,', 3.4019391052900155e-06], ['etype->pointerTo', 3.4019391052900155e-06], ['(etype->arrayOf', 3.4019391052900155e-06], ['(e->elements->dim));', 3.4019391052900155e-06], ['(mem);', 3.4019391052900155e-06], ['(AssocArrayLiteralExp', 3.4019391052900155e-06], ['assoc', 3.4019391052900155e-06], ['*ta', 3.4019391052900155e-06], ['(e->keys->dim', 3.4019391052900155e-06], ['KEYS', 3.4019391052900155e-06], ['*kelts', 3.4019391052900155e-06], ['e->keys->dim;', 3.4019391052900155e-06], ['(*e->keys)[i];', 3.4019391052900155e-06], ['key->type,', 3.4019391052900155e-06], ['ta->index));', 3.4019391052900155e-06], ['tkeys', 3.4019391052900155e-06], ['(ta->index,', 3.4019391052900155e-06], ['akeys', 3.4019391052900155e-06], ['(tkeys,', 3.4019391052900155e-06], ['kelts);', 3.4019391052900155e-06], ['VALUES.', 3.4019391052900155e-06], ['*velts', 3.4019391052900155e-06], ['e->values->dim;', 3.4019391052900155e-06], ['(*e->values)[i];', 3.4019391052900155e-06], ['value->type,', 3.4019391052900155e-06], ['ta->next));', 3.4019391052900155e-06], ['tvals', 3.4019391052900155e-06], ['(ta->next,', 3.4019391052900155e-06], ['avals', 3.4019391052900155e-06], ['(tvals,', 3.4019391052900155e-06], ['velts);', 3.4019391052900155e-06], ['_d_assocarrayliteralTX', 3.4019391052900155e-06], ['(ta->index->arrayOf', 3.4019391052900155e-06], ['(e->keys->dim),', 3.4019391052900155e-06], ['(akeys));', 3.4019391052900155e-06], ['(ta->next->arrayOf', 3.4019391052900155e-06], ['(e->values->dim),', 3.4019391052900155e-06], ['(avals));', 3.4019391052900155e-06], ['(LIBCALL_ASSOCARRAYLITERALTX,', 3.4019391052900155e-06], ['aatype', 3.4019391052900155e-06], ['(ta);', 3.4019391052900155e-06], ['(aatype),', 3.4019391052900155e-06], ['(aatype,', 3.4019391052900155e-06], ['ce));', 3.4019391052900155e-06], ['(e->elements', 3.4019391052900155e-06], ['sinit', 3.4019391052900155e-06], ['delayed', 3.4019391052900155e-06], ['!this->constp_)', 3.4019391052900155e-06], ['NullExp.', 3.4019391052900155e-06], ['e->sd->fields.dim);', 3.4019391052900155e-06], ['(*e->elements)[i];', 3.4019391052900155e-06], ['(!exp)', 3.4019391052900155e-06], ['e->sd->fields[i];', 3.4019391052900155e-06], ['field->type->toBasetype', 3.4019391052900155e-06], ['(ftype->ty', 3.4019391052900155e-06], ['!same_type_p', 3.4019391052900155e-06], ['ftype))', 3.4019391052900155e-06], ['(elem);', 3.4019391052900155e-06], ['(initializer_zerop', 3.4019391052900155e-06], ['(elem))', 3.4019391052900155e-06], ['(ftype),', 3.4019391052900155e-06], ['(ftype,', 3.4019391052900155e-06], ['elem);', 3.4019391052900155e-06], ['field->type);', 3.4019391052900155e-06], ['setup', 3.4019391052900155e-06], ['(e->sd->isNested', 3.4019391052900155e-06], ['e->elements->dim', 3.4019391052900155e-06], ['(e->sd->vthis);', 3.4019391052900155e-06], ['(e->sym', 3.4019391052900155e-06], ['(e->sym);', 3.4019391052900155e-06], ['ctor),', 3.4019391052900155e-06], ['(e->sd->isUnionDeclaration', 3.4019391052900155e-06], ['(ctor));', 3.4019391052900155e-06], ['(e->sd->structsize));', 3.4019391052900155e-06], ['saved_elems);', 3.4019391052900155e-06], ['(NullExp', 3.4019391052900155e-06], ['(VectorExp', 3.4019391052900155e-06], ['ArrayLiteralExp', 3.4019391052900155e-06], ['e->e1);', 3.4019391052900155e-06], ['ale->elements->dim);', 3.4019391052900155e-06], ['ale->elements->dim;', 3.4019391052900155e-06], ['ale->getElement', 3.4019391052900155e-06], ['(!CONSTANT_CLASS_P', 3.4019391052900155e-06], ['VECTOR_CST', 3.4019391052900155e-06], ['(VectorArrayExp', 3.4019391052900155e-06], ['(build_new_class_expr', 3.4019391052900155e-06], ['(e));', 3.4019391052900155e-06], ['*to', 3.4019391052900155e-06], ['tc->sym->isInterfaceDeclaration', 3.4019391052900155e-06], ['*from', 3.4019391052900155e-06], ['e->originalClass', 3.4019391052900155e-06], ['(to->isBaseOf', 3.4019391052900155e-06], ['mainly', 3.4019391052900155e-06], ['(ScopeExp', 3.4019391052900155e-06], ['(TypeExp', 3.4019391052900155e-06], ['E.', 3.4019391052900155e-06], ['const_p)', 3.4019391052900155e-06], ['(const_p);', 3.4019391052900155e-06], ['(e->loc);', 3.4019391052900155e-06], ['e->accept', 3.4019391052900155e-06], ['(const_p', 3.4019391052900155e-06], ['!initializer_constant_valid_p', 3.4019391052900155e-06], ['build_expr,', 3.4019391052900155e-06], ['Codegen', 3.4019391052900155e-06], ['improved', 3.4019391052900155e-06], ['dtor,', 3.4019391052900155e-06], ['build_expr_dtor,', 3.4019391052900155e-06], ['*tf)', 3.4019391052900155e-06], ['(cfun->decl);', 3.4019391052900155e-06], ['(&result);', 3.4019391052900155e-06], ['imports.cc', 3.4019391052900155e-06], ['modules/declarations.', 3.4019391052900155e-06], ['2014-2019', 3.4019391052900155e-06], ['ISYM', 3.4019391052900155e-06], ['make_import', 3.4019391052900155e-06], ['IMPORTED_DECL,', 3.4019391052900155e-06], ['IMPORTED_DECL_ASSOCIATED_DECL', 3.4019391052900155e-06], ['(import)', 3.4019391052900155e-06], ['(import);', 3.4019391052900155e-06], ['import;', 3.4019391052900155e-06], ['toplevel,', 3.4019391052900155e-06], ['m->md->loc', 3.4019391052900155e-06], ['(m->srcfile->toChars', 3.4019391052900155e-06], ['NAMESPACE_DECL,', 3.4019391052900155e-06], ['(m->toPrettyChars', 3.4019391052900155e-06], ['(m->isym);', 3.4019391052900155e-06], ['(!m->isRoot', 3.4019391052900155e-06], ['(m->mod);', 3.4019391052900155e-06], ['enums', 3.4019391052900155e-06], ['TYPE_DECL.', 3.4019391052900155e-06], ['ENUMERAL_TYPE)', 3.4019391052900155e-06], ['dsymbols.', 3.4019391052900155e-06], ['(ScopeDsymbol', 3.4019391052900155e-06], ['Alias', 3.4019391052900155e-06], ['(AliasDeclaration', 3.4019391052900155e-06], ['d->getType', 3.4019391052900155e-06], ['Tenum)', 3.4019391052900155e-06], ['((TypeEnum', 3.4019391052900155e-06], ['dsym->accept', 3.4019391052900155e-06], ['dsym->isym;', 3.4019391052900155e-06], ['overloadable', 3.4019391052900155e-06], ['(OverDeclaration', 3.4019391052900155e-06], ['(d->aliassym', 3.4019391052900155e-06], ['d->aliassym->accept', 3.4019391052900155e-06], ['d->aliassym->isym;', 3.4019391052900155e-06], ['(FuncAliasDeclaration', 3.4019391052900155e-06], ['d->toAliasFunc', 3.4019391052900155e-06], ['fd->accept', 3.4019391052900155e-06], ['fd->isym;', 3.4019391052900155e-06], ['routines,', 3.4019391052900155e-06], ['debug_hook', 3.4019391052900155e-06], ['(!d->isym)', 3.4019391052900155e-06], ['visitors', 3.4019391052900155e-06], ["'isym'.", 3.4019391052900155e-06], ['intrinsics.cc', 3.4019391052900155e-06], ['located.', 3.4019391052900155e-06], ['*module;', 3.4019391052900155e-06], ['decoration', 3.4019391052900155e-06], ['*deco;', 3.4019391052900155e-06], ['ctfeonly;', 3.4019391052900155e-06], ['intrinsic_decls[]', 3.4019391052900155e-06], ['DEF_D_INTRINSIC(CODE,', 3.4019391052900155e-06], ['CTFE)', 3.4019391052900155e-06], ['INTRINSIC_', 3.4019391052900155e-06], ['"intrinsics.def"', 3.4019391052900155e-06], ['DEF_D_INTRINSIC', 3.4019391052900155e-06], ['maybe_expand_intrinsic.', 3.4019391052900155e-06], ['(!decl->ident', 3.4019391052900155e-06], ['bitop', 3.4019391052900155e-06], ['BUILTINno;', 3.4019391052900155e-06], ['recognised', 3.4019391052900155e-06], ['!m->md)', 3.4019391052900155e-06], ['decl->isInstantiated', 3.4019391052900155e-06], ['TemplateDeclaration', 3.4019391052900155e-06], ['ti->tempdecl->isTemplateDeclaration', 3.4019391052900155e-06], ['*tname', 3.4019391052900155e-06], ['decl->ident->toChars', 3.4019391052900155e-06], ['*tmodule', 3.4019391052900155e-06], ['m->md->toChars', 3.4019391052900155e-06], ['*tdeco', 3.4019391052900155e-06], ['(td', 3.4019391052900155e-06], ['decl->type->deco', 3.4019391052900155e-06], ['INTRINSIC_LAST;', 3.4019391052900155e-06], ['(!intrinsic_decls[i].name)', 3.4019391052900155e-06], ['(intrinsic_decls[i].name,', 3.4019391052900155e-06], ['tname)', 3.4019391052900155e-06], ['(intrinsic_decls[i].module,', 3.4019391052900155e-06], ['tmodule)', 3.4019391052900155e-06], ['Instantiated', 3.4019391052900155e-06], ['deco,', 3.4019391052900155e-06], ['(tdeco', 3.4019391052900155e-06], ['(!td', 3.4019391052900155e-06], ['!td->onemember)', 3.4019391052900155e-06], ['td->onemember->isFuncDeclaration', 3.4019391052900155e-06], ['(fd->type,', 3.4019391052900155e-06], ['tdeco', 3.4019391052900155e-06], ['Matching', 3.4019391052900155e-06], ['deco', 3.4019391052900155e-06], ['strict,', 3.4019391052900155e-06], ['(intrinsic_decls[i].deco,', 3.4019391052900155e-06], ['tdeco)', 3.4019391052900155e-06], ['intrinsic_decls[i].code;', 3.4019391052900155e-06], ['(!decl->fbody)', 3.4019391052900155e-06], ['DECL_BUILT_IN_CLASS', 3.4019391052900155e-06], ['BUILT_IN_FRONTEND;', 3.4019391052900155e-06], ['(built_in_function)', 3.4019391052900155e-06], ['CTFE,', 3.4019391052900155e-06], ['`int', 3.4019391052900155e-06], ['pow(int,', 3.4019391052900155e-06], ["int)'.", 3.4019391052900155e-06], ['(mathfn_built_in', 3.4019391052900155e-06], ['BUILT_IN_POW)', 3.4019391052900155e-06], ['CTFE-only.', 3.4019391052900155e-06], ['(intrinsic_decls[i].ctfeonly)', 3.4019391052900155e-06], ['DECL_BUILT_IN_CTFE', 3.4019391052900155e-06], ["`...'", 3.4019391052900155e-06], ['callexp,', 3.4019391052900155e-06], ['*argarray', 3.4019391052900155e-06], ['argarray[i]', 3.4019391052900155e-06], ['(code),', 3.4019391052900155e-06], ['argarray);', 3.4019391052900155e-06], ['bsf().', 3.4019391052900155e-06], ['__builtin_ctz(arg).', 3.4019391052900155e-06], ['__builtin_ctz*', 3.4019391052900155e-06], ['BUILT_IN_CTZ', 3.4019391052900155e-06], ['BUILT_IN_CTZL', 3.4019391052900155e-06], ['BUILT_IN_CTZLL', 3.4019391052900155e-06], ['bsr().', 3.4019391052900155e-06], ['significant,', 3.4019391052900155e-06], ['__builtin_clz(arg).', 3.4019391052900155e-06], ['__builtin_clz*', 3.4019391052900155e-06], ['BUILT_IN_CLZ', 3.4019391052900155e-06], ['BUILT_IN_CLZL', 3.4019391052900155e-06], ['BUILT_IN_CLZLL', 3.4019391052900155e-06], ['type),', 3.4019391052900155e-06], ['bt(),', 3.4019391052900155e-06], ['btc(),', 3.4019391052900155e-06], ['btr(),', 3.4019391052900155e-06], ['bts().', 3.4019391052900155e-06], ['(size_t*', 3.4019391052900155e-06], ['Variants', 3.4019391052900155e-06], ["`bt'", 3.4019391052900155e-06], ["`btc'", 3.4019391052900155e-06], ['compliments', 3.4019391052900155e-06], ["`bts'", 3.4019391052900155e-06], ["`btr'", 3.4019391052900155e-06], ['resets', 3.4019391052900155e-06], ['(ptr));', 3.4019391052900155e-06], ['sizeof(*ptr)', 3.4019391052900155e-06], ['bitsize]', 3.4019391052900155e-06], ['(TRUNC_DIV_EXPR,', 3.4019391052900155e-06], ['bitsize));', 3.4019391052900155e-06], ['(bitnum', 3.4019391052900155e-06], ['(TRUNC_MOD_EXPR,', 3.4019391052900155e-06], ['integer_minus_one_node,', 3.4019391052900155e-06], ['bt().', 3.4019391052900155e-06], ['INTRINSIC_BT)', 3.4019391052900155e-06], ['INTRINSIC_BTC)', 3.4019391052900155e-06], ['BIT_XOR_EXPR', 3.4019391052900155e-06], ['INTRINSIC_BTS)', 3.4019391052900155e-06], ['ERROR_MARK;', 3.4019391052900155e-06], ['op=', 3.4019391052900155e-06], ['(bitnum),', 3.4019391052900155e-06], ['bitnum));', 3.4019391052900155e-06], ['temporary,', 3.4019391052900155e-06], ['(callexp));', 3.4019391052900155e-06], ['tmp));', 3.4019391052900155e-06], ['bswap().', 3.4019391052900155e-06], ['swaps', 3.4019391052900155e-06], ['end-to-end.', 3.4019391052900155e-06], ['__builtin_bswap*', 3.4019391052900155e-06], ['BUILT_IN_BSWAP32', 3.4019391052900155e-06], ['BUILT_IN_BSWAP64', 3.4019391052900155e-06], ['popcnt().', 3.4019391052900155e-06], ['__builtin_popcount*', 3.4019391052900155e-06], ['BUILT_IN_POPCOUNT', 3.4019391052900155e-06], ['BUILT_IN_POPCOUNTL', 3.4019391052900155e-06], ['BUILT_IN_POPCOUNTLL', 3.4019391052900155e-06], ['sqrt(),', 3.4019391052900155e-06], ['sqrtf(),', 3.4019391052900155e-06], ['sqrtl().', 3.4019391052900155e-06], ['__builtin_sqrt*', 3.4019391052900155e-06], ['INTRINSIC_SQRT)', 3.4019391052900155e-06], ['BUILT_IN_SQRT', 3.4019391052900155e-06], ['INTRINSIC_SQRTF)', 3.4019391052900155e-06], ['BUILT_IN_SQRTF', 3.4019391052900155e-06], ['INTRINSIC_SQRTL)', 3.4019391052900155e-06], ['BUILT_IN_SQRTL', 3.4019391052900155e-06], ['copysign().', 3.4019391052900155e-06], ['composed', 3.4019391052900155e-06], ['FROM.', 3.4019391052900155e-06], ['(from),', 3.4019391052900155e-06], ['to);', 3.4019391052900155e-06], ['__builtin_copysign*', 3.4019391052900155e-06], ['pow().', 3.4019391052900155e-06], ['raised', 3.4019391052900155e-06], ['EXPONENT.', 3.4019391052900155e-06], ['exptype', 3.4019391052900155e-06], ['(exponent);', 3.4019391052900155e-06], ['__builtin_pow*', 3.4019391052900155e-06], ['BUILT_IN_POW', 3.4019391052900155e-06], ['BUILT_IN_POWI', 3.4019391052900155e-06], ['(base),', 3.4019391052900155e-06], ['va_arg().', 3.4019391052900155e-06], ['(ref', 3.4019391052900155e-06], ['(va_list', 3.4019391052900155e-06], ['retrieves', 3.4019391052900155e-06], ['parmn,', 3.4019391052900155e-06], ['(call_expr_nargs', 3.4019391052900155e-06], ['(callexp)', 3.4019391052900155e-06], ['(VA_ARG_EXPR,', 3.4019391052900155e-06], ['(parmn', 3.4019391052900155e-06], ['va_start(),', 3.4019391052900155e-06], ['va_start(T)', 3.4019391052900155e-06], ['however,', 3.4019391052900155e-06], ['inout', 3.4019391052900155e-06], ['casting,', 3.4019391052900155e-06], ['too?', 3.4019391052900155e-06], ['(ap)', 3.4019391052900155e-06], ['nobody', 3.4019391052900155e-06], ['BUILT_IN_VA_START,', 3.4019391052900155e-06], ['adds(),', 3.4019391052900155e-06], ['addu(),', 3.4019391052900155e-06], ['subs(),', 3.4019391052900155e-06], ['subu(),', 3.4019391052900155e-06], ['negs(),', 3.4019391052900155e-06], ['muls(),', 3.4019391052900155e-06], ['mulu().', 3.4019391052900155e-06], ['sticky,', 3.4019391052900155e-06], ['y;', 3.4019391052900155e-06], ['negs()', 3.4019391052900155e-06], ['SUB_OVERFLOW', 3.4019391052900155e-06], ['y).', 3.4019391052900155e-06], ['*_OVERFLOW', 3.4019391052900155e-06], ['generate?', 3.4019391052900155e-06], ['internal_fn', 3.4019391052900155e-06], ['icode', 3.4019391052900155e-06], ['INTRINSIC_ADDS)', 3.4019391052900155e-06], ['IFN_ADD_OVERFLOW', 3.4019391052900155e-06], ['INTRINSIC_SUBS)', 3.4019391052900155e-06], ['INTRINSIC_MULS)', 3.4019391052900155e-06], ['IFN_MUL_OVERFLOW', 3.4019391052900155e-06], ['IFN_LAST;', 3.4019391052900155e-06], ['(icode', 3.4019391052900155e-06], ['IFN_LAST);', 3.4019391052900155e-06], ['build_call_expr_internal_loc', 3.4019391052900155e-06], ['icode,', 3.4019391052900155e-06], ['y);', 3.4019391052900155e-06], ['(overflow,', 3.4019391052900155e-06], ['volatileLoad().', 3.4019391052900155e-06], ['volatileStore().', 3.4019391052900155e-06], ['(*(volatile', 3.4019391052900155e-06], ['CALLEXP', 3.4019391052900155e-06], ['builtins,', 3.4019391052900155e-06], ['CTFE-only', 3.4019391052900155e-06], ['(DECL_BUILT_IN_CTFE', 3.4019391052900155e-06], ['!doing_semantic_analysis_p)', 3.4019391052900155e-06], ['(intrinsic)', 3.4019391052900155e-06], ['INTRINSIC_NONE:', 3.4019391052900155e-06], ['INTRINSIC_BSF:', 3.4019391052900155e-06], ['INTRINSIC_BSR:', 3.4019391052900155e-06], ['INTRINSIC_BT:', 3.4019391052900155e-06], ['INTRINSIC_BTC:', 3.4019391052900155e-06], ['INTRINSIC_BTR:', 3.4019391052900155e-06], ['INTRINSIC_BTS:', 3.4019391052900155e-06], ['INTRINSIC_BSWAP:', 3.4019391052900155e-06], ['INTRINSIC_POPCNT:', 3.4019391052900155e-06], ['INTRINSIC_COS:', 3.4019391052900155e-06], ['BUILT_IN_COSL,', 3.4019391052900155e-06], ['INTRINSIC_SIN:', 3.4019391052900155e-06], ['BUILT_IN_SINL,', 3.4019391052900155e-06], ['INTRINSIC_RNDTOL:', 3.4019391052900155e-06], ['llroundl', 3.4019391052900155e-06], ['stands', 3.4019391052900155e-06], ['rndtol.', 3.4019391052900155e-06], ['BUILT_IN_LLROUNDL,', 3.4019391052900155e-06], ['INTRINSIC_SQRT:', 3.4019391052900155e-06], ['INTRINSIC_SQRTF:', 3.4019391052900155e-06], ['INTRINSIC_SQRTL:', 3.4019391052900155e-06], ['INTRINSIC_LDEXP:', 3.4019391052900155e-06], ['BUILT_IN_LDEXPL,', 3.4019391052900155e-06], ['INTRINSIC_FABS:', 3.4019391052900155e-06], ['BUILT_IN_FABSL,', 3.4019391052900155e-06], ['INTRINSIC_RINT:', 3.4019391052900155e-06], ['BUILT_IN_RINTL,', 3.4019391052900155e-06], ['INTRINSIC_TAN:', 3.4019391052900155e-06], ['BUILT_IN_TANL,', 3.4019391052900155e-06], ['INTRINSIC_ISNAN:', 3.4019391052900155e-06], ['BUILT_IN_ISNAN,', 3.4019391052900155e-06], ['INTRINSIC_ISINFINITY:', 3.4019391052900155e-06], ['BUILT_IN_ISINF,', 3.4019391052900155e-06], ['INTRINSIC_ISFINITE:', 3.4019391052900155e-06], ['BUILT_IN_ISFINITE,', 3.4019391052900155e-06], ['INTRINSIC_EXP:', 3.4019391052900155e-06], ['BUILT_IN_EXPL,', 3.4019391052900155e-06], ['INTRINSIC_EXPM1:', 3.4019391052900155e-06], ['BUILT_IN_EXPM1L,', 3.4019391052900155e-06], ['INTRINSIC_EXP2:', 3.4019391052900155e-06], ['BUILT_IN_EXP2L,', 3.4019391052900155e-06], ['INTRINSIC_LOG:', 3.4019391052900155e-06], ['BUILT_IN_LOGL,', 3.4019391052900155e-06], ['INTRINSIC_LOG2:', 3.4019391052900155e-06], ['BUILT_IN_LOG2L,', 3.4019391052900155e-06], ['INTRINSIC_LOG10:', 3.4019391052900155e-06], ['BUILT_IN_LOG10L,', 3.4019391052900155e-06], ['INTRINSIC_ROUND:', 3.4019391052900155e-06], ['BUILT_IN_ROUNDL,', 3.4019391052900155e-06], ['INTRINSIC_FLOORF:', 3.4019391052900155e-06], ['INTRINSIC_FLOOR:', 3.4019391052900155e-06], ['INTRINSIC_FLOORL:', 3.4019391052900155e-06], ['INTRINSIC_FLOOR)', 3.4019391052900155e-06], ['BUILT_IN_FLOOR', 3.4019391052900155e-06], ['INTRINSIC_FLOORF)', 3.4019391052900155e-06], ['BUILT_IN_FLOORF', 3.4019391052900155e-06], ['BUILT_IN_FLOORL;', 3.4019391052900155e-06], ['INTRINSIC_CEILF:', 3.4019391052900155e-06], ['INTRINSIC_CEIL:', 3.4019391052900155e-06], ['INTRINSIC_CEILL:', 3.4019391052900155e-06], ['INTRINSIC_CEIL)', 3.4019391052900155e-06], ['BUILT_IN_CEIL', 3.4019391052900155e-06], ['INTRINSIC_CEILF)', 3.4019391052900155e-06], ['BUILT_IN_CEILF', 3.4019391052900155e-06], ['BUILT_IN_CEILL;', 3.4019391052900155e-06], ['INTRINSIC_TRUNC:', 3.4019391052900155e-06], ['BUILT_IN_TRUNCL,', 3.4019391052900155e-06], ['INTRINSIC_FMIN:', 3.4019391052900155e-06], ['BUILT_IN_FMINL,', 3.4019391052900155e-06], ['INTRINSIC_FMAX:', 3.4019391052900155e-06], ['BUILT_IN_FMAXL,', 3.4019391052900155e-06], ['INTRINSIC_COPYSIGN:', 3.4019391052900155e-06], ['INTRINSIC_FMA:', 3.4019391052900155e-06], ['BUILT_IN_FMAL,', 3.4019391052900155e-06], ['modules.cc', 3.4019391052900155e-06], ["this()',", 3.4019391052900155e-06], ["~this()',", 3.4019391052900155e-06], ["`unittest'", 3.4019391052900155e-06], ['aggregated', 3.4019391052900155e-06], ['variably', 3.4019391052900155e-06], ["`flags'", 3.4019391052900155e-06], ['accessors', 3.4019391052900155e-06], ['POD_structs', 3.4019391052900155e-06], ['CompilerDSO', 3.4019391052900155e-06], ['dso_slot_node;', 3.4019391052900155e-06], ['registering', 3.4019391052900155e-06], ['deregistering', 3.4019391052900155e-06], ['DSOs', 3.4019391052900155e-06], ['druntime,', 3.4019391052900155e-06], ['dso_initialized_node;', 3.4019391052900155e-06], ['start_minfo_node;', 3.4019391052900155e-06], ['stop_minfo_node;', 3.4019391052900155e-06], ['termination,', 3.4019391052900155e-06], ['unit', 3.4019391052900155e-06], ['*ctors;', 3.4019391052900155e-06], ['*dtors;', 3.4019391052900155e-06], ['*ctorgates;', 3.4019391052900155e-06], ['*sharedctors;', 3.4019391052900155e-06], ['*shareddtors;', 3.4019391052900155e-06], ['*sharedctorgates;', 3.4019391052900155e-06], ['*unitTests;', 3.4019391052900155e-06], ['libdruntime/object_.d.', 3.4019391052900155e-06], ['module_info_flags', 3.4019391052900155e-06], ['MIctorstart', 3.4019391052900155e-06], ['0x1,', 3.4019391052900155e-06], ['MIctordone', 3.4019391052900155e-06], ['0x2,', 3.4019391052900155e-06], ['MIstandalone', 3.4019391052900155e-06], ['0x4,', 3.4019391052900155e-06], ['MItlsctor', 3.4019391052900155e-06], ['0x8,', 3.4019391052900155e-06], ['MItlsdtor', 3.4019391052900155e-06], ['0x10,', 3.4019391052900155e-06], ['MIctor', 3.4019391052900155e-06], ['0x20,', 3.4019391052900155e-06], ['MIdtor', 3.4019391052900155e-06], ['0x40,', 3.4019391052900155e-06], ['MIxgetMembers', 3.4019391052900155e-06], ['0x80,', 3.4019391052900155e-06], ['MIictor', 3.4019391052900155e-06], ['0x100,', 3.4019391052900155e-06], ['MIunitTest', 3.4019391052900155e-06], ['0x200,', 3.4019391052900155e-06], ['MIimportedModules', 3.4019391052900155e-06], ['0x400,', 3.4019391052900155e-06], ['MIlocalClasses', 3.4019391052900155e-06], ['0x800,', 3.4019391052900155e-06], ['MIname', 3.4019391052900155e-06], ['0x1000', 3.4019391052900155e-06], ['*current_moduleinfo;', 3.4019391052900155e-06], ['*current_module_decl;', 3.4019391052900155e-06], ["this').", 3.4019391052900155e-06], ['*static_ctor_list;', 3.4019391052900155e-06], ['*static_dtor_list;', 3.4019391052900155e-06], ['current_module_decl;', 3.4019391052900155e-06], ['(!mod)', 3.4019391052900155e-06], ['Module::rootModule;', 3.4019391052900155e-06], ['"FZv");', 3.4019391052900155e-06], ['FuncDeclaration::genCfunc', 3.4019391052900155e-06], ['fd->loc', 3.4019391052900155e-06], ['(mod->srcfile->toChars', 3.4019391052900155e-06], ['fd->parent', 3.4019391052900155e-06], ['fd->protection.kind', 3.4019391052900155e-06], ['PROTprivate;', 3.4019391052900155e-06], ['fd->semanticRun', 3.4019391052900155e-06], ['PASSsemantic3done;', 3.4019391052900155e-06], ['ctors,', 3.4019391052900155e-06], ['dtors,', 3.4019391052900155e-06], ['increments', 3.4019391052900155e-06], ['order)', 3.4019391052900155e-06], ['GATES,', 3.4019391052900155e-06], ['FUNCTIONS.', 3.4019391052900155e-06], ['*functions,', 3.4019391052900155e-06], ['*gates)', 3.4019391052900155e-06], ['gates', 3.4019391052900155e-06], ['(gates);', 3.4019391052900155e-06], ['(*gates)[i];', 3.4019391052900155e-06], ['integer_one_node);', 3.4019391052900155e-06], ['var_expr);', 3.4019391052900155e-06], ['(functions);', 3.4019391052900155e-06], ['(*functions)[i];', 3.4019391052900155e-06], ['(expr_list)', 3.4019391052900155e-06], ['expr_list);', 3.4019391052900155e-06], ['(moduleinfo_type)', 3.4019391052900155e-06], ['moduleinfo_type', 3.4019391052900155e-06], ['(moduleinfo_type,', 3.4019391052900155e-06], ['"ModuleInfo",', 3.4019391052900155e-06], ['destructors,', 3.4019391052900155e-06], ['"__ModuleInfo",', 3.4019391052900155e-06], ['readonly,', 3.4019391052900155e-06], ['moduleinit', 3.4019391052900155e-06], ['CompilerDSOData,', 3.4019391052900155e-06], ['(compiler_dso_type)', 3.4019391052900155e-06], ['version;', 3.4019391052900155e-06], ['slot;', 3.4019391052900155e-06], ['_minfo_beg;', 3.4019391052900155e-06], ['_minfo_end;', 3.4019391052900155e-06], ['_deh_beg;', 3.4019391052900155e-06], ['_deh_end;', 3.4019391052900155e-06], ['(ptr_type_node),', 3.4019391052900155e-06], ['compiler_dso_type', 3.4019391052900155e-06], ['(compiler_dso_type,', 3.4019391052900155e-06], ['"CompilerDSOData",', 3.4019391052900155e-06], ['FUNCTION_DECL.', 3.4019391052900155e-06], ['get_dso_registry_fn', 3.4019391052900155e-06], ['(dso_type),', 3.4019391052900155e-06], ['dso_registry_fn', 3.4019391052900155e-06], ['("_d_dso_registry"),', 3.4019391052900155e-06], ['Depending', 3.4019391052900155e-06], ['CTOR_P,', 3.4019391052900155e-06], ['builds', 3.4019391052900155e-06], ['eiter', 3.4019391052900155e-06], ["`false'", 3.4019391052900155e-06], ["`true'", 3.4019391052900155e-06], ['ctor_p)', 3.4019391052900155e-06], ['("dso_ctor")', 3.4019391052900155e-06], ['("dso_dtor");', 3.4019391052900155e-06], ['dso_ctor/dso_dtor', 3.4019391052900155e-06], ['extern(C)', 3.4019391052900155e-06], ['dso_{c,d}tor', 3.4019391052900155e-06], ['condition)', 3.4019391052900155e-06], ['condition).', 3.4019391052900155e-06], ['if_cond', 3.4019391052900155e-06], ['dso_initialized_node,', 3.4019391052900155e-06], ['(dso_type);', 3.4019391052900155e-06], ['size_type_node));', 3.4019391052900155e-06], ['(dso_slot_node));', 3.4019391052900155e-06], ['(start_minfo_node));', 3.4019391052900155e-06], ['(stop_minfo_node));', 3.4019391052900155e-06], ['assign_expr', 3.4019391052900155e-06], ['(dso,', 3.4019391052900155e-06], ['(dso_type,', 3.4019391052900155e-06], ['assign_expr);', 3.4019391052900155e-06], ['(get_dso_registry_fn', 3.4019391052900155e-06], ['(dso));', 3.4019391052900155e-06], ['(if_cond,', 3.4019391052900155e-06], ['expr_list,', 3.4019391052900155e-06], ['void_node));', 3.4019391052900155e-06], ['dso_registry', 3.4019391052900155e-06], ['VISIBILITY_HIDDEN', 3.4019391052900155e-06], ['Place', 3.4019391052900155e-06], ['MINFO', 3.4019391052900155e-06], ['ctors/dtors', 3.4019391052900155e-06], ['minfo)', 3.4019391052900155e-06], ['(targetm_common.have_named_sections);', 3.4019391052900155e-06], ['Module.', 3.4019391052900155e-06], ['"__moduleRef",', 3.4019391052900155e-06], ['mref', 3.4019391052900155e-06], ["`.'", 3.4019391052900155e-06], ['__start_', 3.4019391052900155e-06], ['__stop_', 3.4019391052900155e-06], ['https://sourceware.org/binutils/docs-2.26/ld/Orphan-Sections.html.', 3.4019391052900155e-06], ['DECL_PRESERVE_P', 3.4019391052900155e-06], ['"minfo");', 3.4019391052900155e-06], ['(mref);', 3.4019391052900155e-06], ['(!first_module)', 3.4019391052900155e-06], ['start_minfo_node', 3.4019391052900155e-06], ['("__start_minfo",', 3.4019391052900155e-06], ['(start_minfo_node,', 3.4019391052900155e-06], ['stop_minfo_node', 3.4019391052900155e-06], ['("__stop_minfo",', 3.4019391052900155e-06], ['(stop_minfo_node,', 3.4019391052900155e-06], ['dso_slot', 3.4019391052900155e-06], ['dso_initialized.', 3.4019391052900155e-06], ['dso_slot_node', 3.4019391052900155e-06], ['("dso_slot"),', 3.4019391052900155e-06], ['(dso_slot_node)', 3.4019391052900155e-06], ['(dso_slot_node);', 3.4019391052900155e-06], ['(dso_slot_node,', 3.4019391052900155e-06], ['dso_initialized_node', 3.4019391052900155e-06], ['("dso_initialized"),', 3.4019391052900155e-06], ['(dso_initialized_node)', 3.4019391052900155e-06], ['(dso_initialized_node);', 3.4019391052900155e-06], ['dso_ctor()', 3.4019391052900155e-06], ['dso_dtor().', 3.4019391052900155e-06], ['dso_ctor', 3.4019391052900155e-06], ['(static_ctor_list,', 3.4019391052900155e-06], ['dso_ctor);', 3.4019391052900155e-06], ['dso_dtor', 3.4019391052900155e-06], ['(static_dtor_list,', 3.4019391052900155e-06], ['dso_dtor);', 3.4019391052900155e-06], ['Convenience', 3.4019391052900155e-06], ['layout_moduleinfo_fields.', 3.4019391052900155e-06], ['incrementing', 3.4019391052900155e-06], ['account,', 3.4019391052900155e-06], ['rec_type,', 3.4019391052900155e-06], ['HOST_WIDE_INT&', 3.4019391052900155e-06], ['(rec_type,', 3.4019391052900155e-06], ['as-needed', 3.4019391052900155e-06], ['basis,', 3.4019391052900155e-06], ['minimum.', 3.4019391052900155e-06], ['(decl->findGetMembers', 3.4019391052900155e-06], ['aimports_dim),', 3.4019391052900155e-06], ['aclasses.dim),', 3.4019391052900155e-06], ['Lastly,', 3.4019391052900155e-06], ['namelen),', 3.4019391052900155e-06], ['(offset,', 3.4019391052900155e-06], ['*sgetmembers;', 3.4019391052900155e-06], ['sgetmembers', 3.4019391052900155e-06], ['decl->findGetMembers', 3.4019391052900155e-06], ['MItlsctor;', 3.4019391052900155e-06], ['MItlsdtor;', 3.4019391052900155e-06], ['MIctor;', 3.4019391052900155e-06], ['MIdtor;', 3.4019391052900155e-06], ['(sgetmembers)', 3.4019391052900155e-06], ['MIxgetMembers;', 3.4019391052900155e-06], ['MIictor;', 3.4019391052900155e-06], ['MIunitTest;', 3.4019391052900155e-06], ['MIimportedModules;', 3.4019391052900155e-06], ['MIlocalClasses;', 3.4019391052900155e-06], ['(!decl->needmoduleinfo)', 3.4019391052900155e-06], ['MIstandalone;', 3.4019391052900155e-06], ['MIname;', 3.4019391052900155e-06], ['minfo', 3.4019391052900155e-06], ['(minfo));', 3.4019391052900155e-06], ['decl:', 3.4019391052900155e-06], ['*minit', 3.4019391052900155e-06], ['appearance,', 3.4019391052900155e-06], ['flags:', 3.4019391052900155e-06], ['tlsctor;', 3.4019391052900155e-06], ['tlsdtor;', 3.4019391052900155e-06], ['xgetMembers;', 3.4019391052900155e-06], ['dtor;', 3.4019391052900155e-06], ['ictor;', 3.4019391052900155e-06], ['unitTest;', 3.4019391052900155e-06], ['ModuleInfo*[]', 3.4019391052900155e-06], ['importedModules;', 3.4019391052900155e-06], ['TypeInfo_Class[]', 3.4019391052900155e-06], ['localClasses;', 3.4019391052900155e-06], ['char[N]', 3.4019391052900155e-06], ['MItlsctor)', 3.4019391052900155e-06], ['(decl->sctor));', 3.4019391052900155e-06], ['MItlsdtor)', 3.4019391052900155e-06], ['(decl->sdtor));', 3.4019391052900155e-06], ['MIctor)', 3.4019391052900155e-06], ['(decl->ssharedctor));', 3.4019391052900155e-06], ['MIdtor)', 3.4019391052900155e-06], ['(decl->sshareddtor));', 3.4019391052900155e-06], ['MIxgetMembers)', 3.4019391052900155e-06], ['(sgetmembers)));', 3.4019391052900155e-06], ['MIictor)', 3.4019391052900155e-06], ['(decl->sictor));', 3.4019391052900155e-06], ['MIunitTest)', 3.4019391052900155e-06], ['(decl->stest));', 3.4019391052900155e-06], ['MIimportedModules)', 3.4019391052900155e-06], ['aimports_dim);', 3.4019391052900155e-06], ['(mi->needmoduleinfo)', 3.4019391052900155e-06], ['(idx),', 3.4019391052900155e-06], ['(get_moduleinfo_decl', 3.4019391052900155e-06], ['(mi)));', 3.4019391052900155e-06], ['idx++;', 3.4019391052900155e-06], ['(aimports_dim));', 3.4019391052900155e-06], ['MIlocalClasses)', 3.4019391052900155e-06], ['aclasses.dim);', 3.4019391052900155e-06], ['aclasses.dim;', 3.4019391052900155e-06], ['aclasses[i];', 3.4019391052900155e-06], ['(aclasses.dim));', 3.4019391052900155e-06], ['MIname)', 3.4019391052900155e-06], ['0-terminated', 3.4019391052900155e-06], ['C-string,', 3.4019391052900155e-06], ['strtree', 3.4019391052900155e-06], ['(namelen,', 3.4019391052900155e-06], ['(strtree)', 3.4019391052900155e-06], ['namelen);', 3.4019391052900155e-06], ['strtree);', 3.4019391052900155e-06], ['minit);', 3.4019391052900155e-06], ['minfo);', 3.4019391052900155e-06], ['Send', 3.4019391052900155e-06], ['(!current_moduleinfo', 3.4019391052900155e-06], ['!current_module_decl);', 3.4019391052900155e-06], ['mi', 3.4019391052900155e-06], ['&mi;', 3.4019391052900155e-06], ['(decl->members)', 3.4019391052900155e-06], ['(!global.params.betterC', 3.4019391052900155e-06], ['("__entrypoint"))', 3.4019391052900155e-06], ['(mi.ctors', 3.4019391052900155e-06], ['mi.ctorgates)', 3.4019391052900155e-06], ['decl->sctor', 3.4019391052900155e-06], ['("*__modctor"),', 3.4019391052900155e-06], ['mi.ctors,', 3.4019391052900155e-06], ['mi.ctorgates);', 3.4019391052900155e-06], ['(mi.dtors)', 3.4019391052900155e-06], ['decl->sdtor', 3.4019391052900155e-06], ['("*__moddtor"),', 3.4019391052900155e-06], ['mi.dtors,', 3.4019391052900155e-06], ['(mi.sharedctors', 3.4019391052900155e-06], ['mi.sharedctorgates)', 3.4019391052900155e-06], ['decl->ssharedctor', 3.4019391052900155e-06], ['("*__modsharedctor"),', 3.4019391052900155e-06], ['mi.sharedctors,', 3.4019391052900155e-06], ['mi.sharedctorgates);', 3.4019391052900155e-06], ['(mi.shareddtors)', 3.4019391052900155e-06], ['decl->sshareddtor', 3.4019391052900155e-06], ['("*__modshareddtor"),', 3.4019391052900155e-06], ['mi.shareddtors,', 3.4019391052900155e-06], ['(mi.unitTests)', 3.4019391052900155e-06], ['decl->stest', 3.4019391052900155e-06], ['("*__modtest"),', 3.4019391052900155e-06], ['mi.unitTests,', 3.4019391052900155e-06], ['(cfun', 3.4019391052900155e-06], ['(current_module_decl', 3.4019391052900155e-06], ['(current_module_decl);', 3.4019391052900155e-06], ["`shared'", 3.4019391052900155e-06], ['derives', 3.4019391052900155e-06], ['non-shared', 3.4019391052900155e-06], ['(fd->isSharedStaticCtorDeclaration', 3.4019391052900155e-06], ['(current_moduleinfo->sharedctors,', 3.4019391052900155e-06], ['(fd->isStaticCtorDeclaration', 3.4019391052900155e-06], ['(current_moduleinfo->ctors,', 3.4019391052900155e-06], ["destructor's", 3.4019391052900155e-06], ['vgate', 3.4019391052900155e-06], ['(fd->isSharedStaticDtorDeclaration', 3.4019391052900155e-06], ['((SharedStaticDtorDeclaration', 3.4019391052900155e-06], ['(current_moduleinfo->sharedctorgates,', 3.4019391052900155e-06], ['(current_moduleinfo->shareddtors,', 3.4019391052900155e-06], ['(fd->isStaticDtorDeclaration', 3.4019391052900155e-06], ['((StaticDtorDeclaration', 3.4019391052900155e-06], ['(current_moduleinfo->ctorgates,', 3.4019391052900155e-06], ['(current_moduleinfo->dtors,', 3.4019391052900155e-06], ['(fd->isUnitTestDeclaration', 3.4019391052900155e-06], ['(current_moduleinfo->unitTests,', 3.4019391052900155e-06], ['Wrapup', 3.4019391052900155e-06], ['*vec,', 3.4019391052900155e-06], ['symtab->process_same_body_aliases', 3.4019391052900155e-06], ['external_scope,', 3.4019391052900155e-06], ['wrapup_global_declarations.', 3.4019391052900155e-06], ['vec[i];', 3.4019391052900155e-06], ['(&decl,', 3.4019391052900155e-06], ['static_ctor_list', 3.4019391052900155e-06], ['(static_ctor_list)', 3.4019391052900155e-06], ['("I"),', 3.4019391052900155e-06], ['static_ctor_list,', 3.4019391052900155e-06], ['DECL_STATIC_CONSTRUCTOR', 3.4019391052900155e-06], ['decl_init_priority_insert', 3.4019391052900155e-06], ['(static_dtor_list)', 3.4019391052900155e-06], ['("D"),', 3.4019391052900155e-06], ['static_dtor_list,', 3.4019391052900155e-06], ['DECL_STATIC_DESTRUCTOR', 3.4019391052900155e-06], ['decl_fini_priority_insert', 3.4019391052900155e-06], ['"gt-d-modules.h"', 3.4019391052900155e-06], ['Digital', 3.4019391052900155e-06], ['Mars', 3.4019391052900155e-06], ['https://github.com/dlang/dmd/.', 3.4019391052900155e-06], ['Programming', 3.4019391052900155e-06], ['documents', 3.4019391052900155e-06], ['https://dlang.org/.', 3.4019391052900155e-06], ['please', 3.4019391052900155e-06], ['https://issues.dlang.org/.', 3.4019391052900155e-06], ['repository', 3.4019391052900155e-06], ['runtime.cc', 3.4019391052900155e-06], ["`rt'", 3.4019391052900155e-06], ['LCT_VOID,', 3.4019391052900155e-06], ['LCT_BYTE,', 3.4019391052900155e-06], ['LCT_INT,', 3.4019391052900155e-06], ['LCT_UINT,', 3.4019391052900155e-06], ['LCT_BOOL,', 3.4019391052900155e-06], ['LCT_DCHAR,', 3.4019391052900155e-06], ['LCT_VOIDPTR,', 3.4019391052900155e-06], ['LCT_STRING,', 3.4019391052900155e-06], ['LCT_WSTRING,', 3.4019391052900155e-06], ['wstring', 3.4019391052900155e-06], ['LCT_DSTRING,', 3.4019391052900155e-06], ['dstring', 3.4019391052900155e-06], ['LCT_SIZE_T,', 3.4019391052900155e-06], ['LCT_ASSOCARRAY,', 3.4019391052900155e-06], ['void[void]', 3.4019391052900155e-06], ['LCT_ARRAY_VOID,', 3.4019391052900155e-06], ['LCT_ARRAY_SIZE_T,', 3.4019391052900155e-06], ['size_t[]', 3.4019391052900155e-06], ['LCT_ARRAY_BYTE,', 3.4019391052900155e-06], ['LCT_ARRAY_STRING,', 3.4019391052900155e-06], ['string[]', 3.4019391052900155e-06], ['LCT_ARRAY_WSTRING,', 3.4019391052900155e-06], ['wstring[]', 3.4019391052900155e-06], ['LCT_ARRAY_DSTRING,', 3.4019391052900155e-06], ['dstring[]', 3.4019391052900155e-06], ['LCT_ARRAYARRAY_BYTE,', 3.4019391052900155e-06], ['LCT_POINTER_ASSOCARRAY,', 3.4019391052900155e-06], ['void[void]*', 3.4019391052900155e-06], ['LCT_POINTER_VOIDPTR,', 3.4019391052900155e-06], ['LCT_ARRAYPTR_VOID,', 3.4019391052900155e-06], ['void[]*', 3.4019391052900155e-06], ['LCT_ARRAYPTR_BYTE,', 3.4019391052900155e-06], ['byte[]*', 3.4019391052900155e-06], ['LCT_TYPEINFO,', 3.4019391052900155e-06], ['LCT_CLASSINFO,', 3.4019391052900155e-06], ['LCT_OBJECT,', 3.4019391052900155e-06], ['LCT_CONST_TYPEINFO,', 3.4019391052900155e-06], ['const(TypeInfo)', 3.4019391052900155e-06], ['LCT_CONST_CLASSINFO,', 3.4019391052900155e-06], ['const(ClassInfo)', 3.4019391052900155e-06], ['LCT_END', 3.4019391052900155e-06], ['*libcall_types[LCT_END];', 3.4019391052900155e-06], ['libcall_decls[LIBCALL_LAST];', 3.4019391052900155e-06], ['readily', 3.4019391052900155e-06], ['proper,', 3.4019391052900155e-06], ['likewise', 3.4019391052900155e-06], ['constOf(),', 3.4019391052900155e-06], ['arrayOf()', 3.4019391052900155e-06], ['(libcall_type', 3.4019391052900155e-06], ['(libcall_types[type])', 3.4019391052900155e-06], ['LCT_VOID:', 3.4019391052900155e-06], ['Type::tvoid;', 3.4019391052900155e-06], ['LCT_BYTE:', 3.4019391052900155e-06], ['Type::tint8;', 3.4019391052900155e-06], ['LCT_INT:', 3.4019391052900155e-06], ['LCT_UINT:', 3.4019391052900155e-06], ['Type::tuns32;', 3.4019391052900155e-06], ['LCT_BOOL:', 3.4019391052900155e-06], ['Type::tbool;', 3.4019391052900155e-06], ['LCT_DCHAR:', 3.4019391052900155e-06], ['Type::tdchar;', 3.4019391052900155e-06], ['LCT_VOIDPTR:', 3.4019391052900155e-06], ['Type::tvoidptr;', 3.4019391052900155e-06], ['LCT_STRING:', 3.4019391052900155e-06], ['Type::tstring;', 3.4019391052900155e-06], ['LCT_WSTRING:', 3.4019391052900155e-06], ['Type::twstring;', 3.4019391052900155e-06], ['LCT_DSTRING:', 3.4019391052900155e-06], ['Type::tdstring;', 3.4019391052900155e-06], ['LCT_SIZE_T:', 3.4019391052900155e-06], ['LCT_ASSOCARRAY:', 3.4019391052900155e-06], ['TypeAArray::create', 3.4019391052900155e-06], ['(Type::tvoid,', 3.4019391052900155e-06], ['Type::tvoid);', 3.4019391052900155e-06], ['LCT_TYPEINFO:', 3.4019391052900155e-06], ['Type::dtypeinfo->type;', 3.4019391052900155e-06], ['LCT_CLASSINFO:', 3.4019391052900155e-06], ['Type::typeinfoclass->type;', 3.4019391052900155e-06], ['LCT_OBJECT:', 3.4019391052900155e-06], ['LCT_CONST_TYPEINFO:', 3.4019391052900155e-06], ['Type::dtypeinfo->type->constOf', 3.4019391052900155e-06], ['LCT_CONST_CLASSINFO:', 3.4019391052900155e-06], ['Type::typeinfoclass->type->constOf', 3.4019391052900155e-06], ['LCT_ARRAY_VOID:', 3.4019391052900155e-06], ['LCT_ARRAY_SIZE_T:', 3.4019391052900155e-06], ['Type::tsize_t->arrayOf', 3.4019391052900155e-06], ['LCT_ARRAY_BYTE:', 3.4019391052900155e-06], ['LCT_ARRAY_STRING:', 3.4019391052900155e-06], ['Type::tstring->arrayOf', 3.4019391052900155e-06], ['LCT_ARRAY_WSTRING:', 3.4019391052900155e-06], ['Type::twstring->arrayOf', 3.4019391052900155e-06], ['LCT_ARRAY_DSTRING:', 3.4019391052900155e-06], ['Type::tdstring->arrayOf', 3.4019391052900155e-06], ['LCT_ARRAYARRAY_BYTE:', 3.4019391052900155e-06], ['LCT_POINTER_ASSOCARRAY:', 3.4019391052900155e-06], ['(LCT_ASSOCARRAY)->pointerTo', 3.4019391052900155e-06], ['LCT_POINTER_VOIDPTR:', 3.4019391052900155e-06], ['Type::tvoidptr->arrayOf', 3.4019391052900155e-06], ['LCT_ARRAYPTR_VOID:', 3.4019391052900155e-06], ['LCT_ARRAYPTR_BYTE:', 3.4019391052900155e-06], ['RETURN_TYPE', 3.4019391052900155e-06], ['returned,', 3.4019391052900155e-06], ['FLAGS', 3.4019391052900155e-06], ['NPARAMS', 3.4019391052900155e-06], ['return_type,', 3.4019391052900155e-06], ["'void'", 3.4019391052900155e-06], ['nparams;', 3.4019391052900155e-06], ['(libcall_type)', 3.4019391052900155e-06], ['(ptype);', 3.4019391052900155e-06], ['tret', 3.4019391052900155e-06], ['(get_libcall_type', 3.4019391052900155e-06], ['(return_type));', 3.4019391052900155e-06], ['(varargs)', 3.4019391052900155e-06], ['VISIBILITY_DEFAULT;', 3.4019391052900155e-06], ['malloc', 3.4019391052900155e-06], ['noreturn.', 3.4019391052900155e-06], ['set_call_expr_flags', 3.4019391052900155e-06], ['flags);', 3.4019391052900155e-06], ['LIBCALL.', 3.4019391052900155e-06], ['Library', 3.4019391052900155e-06], ['stage,', 3.4019391052900155e-06], ['are,', 3.4019391052900155e-06], ["`Object'", 3.4019391052900155e-06], ["`TypeInfo'.", 3.4019391052900155e-06], ['libcall)', 3.4019391052900155e-06], ['(libcall_decls[libcall])', 3.4019391052900155e-06], ['(libcall)', 3.4019391052900155e-06], ['DEF_D_RUNTIME(CODE,', 3.4019391052900155e-06], ['PARAMS,', 3.4019391052900155e-06], ['FLAGS)', 3.4019391052900155e-06], ['LIBCALL_', 3.4019391052900155e-06], ['CODE:', 3.4019391052900155e-06], ['libcall_decls[libcall]', 3.4019391052900155e-06], ['(NAME,', 3.4019391052900155e-06], ['FLAGS,', 3.4019391052900155e-06], ['PARAMS);', 3.4019391052900155e-06], ['"runtime.def"', 3.4019391052900155e-06], ['DEF_D_RUNTIME', 3.4019391052900155e-06], ['LIBCALL,', 3.4019391052900155e-06], ['(libcall);', 3.4019391052900155e-06], ['knows', 3.4019391052900155e-06], ['doing.', 3.4019391052900155e-06], ['"tree-ssa-loop.h"', 3.4019391052900155e-06], ['"tree-chrec.h"', 3.4019391052900155e-06], ['"tree-ssa-propagate.h"', 3.4019391052900155e-06], ['"domwalk.h"', 3.4019391052900155e-06], ['"alloc-pool.h"', 3.4019391052900155e-06], ['"vr-values.h"', 3.4019391052900155e-06], ['"gimple-ssa-evrp-analyze.h"', 3.4019391052900155e-06], ['"omp-general.h"', 3.4019391052900155e-06], ['"tree-into-ssa.h"', 3.4019391052900155e-06], ['present', 3.4019391052900155e-06], ['IL.', 3.4019391052900155e-06], ['---------------------------------', 3.4019391052900155e-06], ['changing', 3.4019391052900155e-06], ['(stride', 3.4019391052900155e-06], ['...x[i]...', 3.4019391052900155e-06], ['benefits:', 3.4019391052900155e-06], ['vectorize', 3.4019391052900155e-06], ['[B].', 3.4019391052900155e-06], ['recognize', 3.4019391052900155e-06], ['evolutions,', 3.4019391052900155e-06], ['particularly', 3.4019391052900155e-06], ['assumed-shape', 3.4019391052900155e-06], ['Fortran,', 3.4019391052900155e-06], ['f1(x)', 3.4019391052900155e-06], ['*x.dim[0].stride;', 3.4019391052900155e-06], ['x_base', 3.4019391052900155e-06], ['*x.data;', 3.4019391052900155e-06], ['*x_base[tmp2]', 3.4019391052900155e-06], ['*x_base[tmp3]', 3.4019391052900155e-06], ['simple.', 3.4019391052900155e-06], ['IL,', 3.4019391052900155e-06], ['estimating', 3.4019391052900155e-06], ['---------', 3.4019391052900155e-06], ['phases:', 3.4019391052900155e-06], ['none.', 3.4019391052900155e-06], ['context-sensitive', 3.4019391052900155e-06], ['exist.)', 3.4019391052900155e-06], ['selected', 3.4019391052900155e-06], ['that:', 3.4019391052900155e-06], ['(!cond)', 3.4019391052900155e-06], ['Original', 3.4019391052900155e-06], ['INNER_UNLIKELY,', 3.4019391052900155e-06], ['INNER_DONT_KNOW,', 3.4019391052900155e-06], ['unrecorded', 3.4019391052900155e-06], ['identified.', 3.4019391052900155e-06], ['inner_likelihood;', 3.4019391052900155e-06], ['isolation.', 3.4019391052900155e-06], ['versioning_opportunity_p;', 3.4019391052900155e-06], ['calculation,', 3.4019391052900155e-06], ['MAX_TERMS', 3.4019391052900155e-06], ['(cached', 3.4019391052900155e-06], ['convenience).', 3.4019391052900155e-06], ['decomposition', 3.4019391052900155e-06], ['provided,', 3.4019391052900155e-06], ['TERMs', 3.4019391052900155e-06], ['auto_vec<address_term_info,', 3.4019391052900155e-06], ['MAX_TERMS>', 3.4019391052900155e-06], ['terms;', 3.4019391052900155e-06], ['[MIN_OFFSET,', 3.4019391052900155e-06], ['MAX_OFFSET).', 3.4019391052900155e-06], ['min_offset,', 3.4019391052900155e-06], ['max_offset;', 3.4019391052900155e-06], ['(ignoring', 3.4019391052900155e-06], ['address_info_hasher', 3.4019391052900155e-06], ['nofree_ptr_hash', 3.4019391052900155e-06], ['<address_info>', 3.4019391052900155e-06], ['worth_versioning_p', 3.4019391052900155e-06], ['meaningless', 3.4019391052900155e-06], ['rejected_p;', 3.4019391052900155e-06], ['benefits', 3.4019391052900155e-06], ['subloops_benefit_p;', 3.4019391052900155e-06], ['excluding', 3.4019391052900155e-06], ['num_insns;', 3.4019391052900155e-06], ['*outermost;', 3.4019391052900155e-06], ['subloops).', 3.4019391052900155e-06], ['m_next_block_in_loop', 3.4019391052900155e-06], ['block_list;', 3.4019391052900155e-06], ["We'd", 3.4019391052900155e-06], ['(keyed', 3.4019391052900155e-06], ['SSA_NAME_VERSION)', 3.4019391052900155e-06], ['bitmap_head', 3.4019391052900155e-06], ['unity_names;', 3.4019391052900155e-06], ['holds.', 3.4019391052900155e-06], ['*optimized_loop;', 3.4019391052900155e-06], ['~loop_versioning', 3.4019391052900155e-06], ['dominator', 3.4019391052900155e-06], ['before_dom_children', 3.4019391052900155e-06], ['after_dom_children', 3.4019391052900155e-06], ['&m_lv;', 3.4019391052900155e-06], ['context-dependent', 3.4019391052900155e-06], ['evrp_range_analyzer', 3.4019391052900155e-06], ['m_range_analyzer;', 3.4019391052900155e-06], ['substitute_and_fold_engine', 3.4019391052900155e-06], ['(loop_info', 3.4019391052900155e-06], ['&li)', 3.4019391052900155e-06], ['m_li', 3.4019391052900155e-06], ['(li)', 3.4019391052900155e-06], ['get_value', 3.4019391052900155e-06], ['&m_li;', 3.4019391052900155e-06], ['&get_loop_info', 3.4019391052900155e-06], ['m_loops[loop->num];', 3.4019391052900155e-06], ['expensive_stmt_p', 3.4019391052900155e-06], ['analyze_block', 3.4019391052900155e-06], ['(basic_block);', 3.4019391052900155e-06], ['analyze_blocks', 3.4019391052900155e-06], ['prune_loop_conditions', 3.4019391052900155e-06], ['decide_whether_loop_is_versionable', 3.4019391052900155e-06], ['version_loop', 3.4019391052900155e-06], ['optimizing.', 3.4019391052900155e-06], ['*m_fn;', 3.4019391052900155e-06], ['pass-specific', 3.4019391052900155e-06], ['bitmaps.', 3.4019391052900155e-06], ['bitmap_obstack', 3.4019391052900155e-06], ['m_bitmap_obstack;', 3.4019391052900155e-06], ['allocation.', 3.4019391052900155e-06], ['m_obstack;', 3.4019391052900155e-06], ['m_num_conditions;', 3.4019391052900155e-06], ['scale)', 3.4019391052900155e-06], ['m_maximum_scale;', 3.4019391052900155e-06], ['auto_vec<loop_info>', 3.4019391052900155e-06], ['m_loops;', 3.4019391052900155e-06], ['loop_info::block_list.', 3.4019391052900155e-06], ['auto_vec<basic_block>', 3.4019391052900155e-06], ['m_next_block_in_loop;', 3.4019391052900155e-06], ['auto_vec<struct', 3.4019391052900155e-06], ['m_loops_to_version;', 3.4019391052900155e-06], ['keyed', 3.4019391052900155e-06], ['offsets.', 3.4019391052900155e-06], ['hash_table', 3.4019391052900155e-06], ['<address_info_hasher>', 3.4019391052900155e-06], ['m_address_table;', 3.4019391052900155e-06], ['M_ADDRESS_TABLE,', 3.4019391052900155e-06], ['predictable', 3.4019391052900155e-06], ['auto_vec', 3.4019391052900155e-06], ['<address_info', 3.4019391052900155e-06], ['32>', 3.4019391052900155e-06], ['m_address_list;', 3.4019391052900155e-06], ['!SSA_NAME_IS_DEFAULT_DEF', 3.4019391052900155e-06], ['maybe_get_stmt,', 3.4019391052900155e-06], ['safe_dyn_cast', 3.4019391052900155e-06], ['(maybe_get_stmt', 3.4019391052900155e-06], ['from)', 3.4019391052900155e-06], ['nops.', 3.4019391052900155e-06], ['simulate', 3.4019391052900155e-06], ['structured.', 3.4019391052900155e-06], ['(CONVERT_EXPR_P', 3.4019391052900155e-06], ['++niters)', 3.4019391052900155e-06], ['(assign', 3.4019391052900155e-06], ['CONVERT_EXPR_CODE_P', 3.4019391052900155e-06], ['(gimple_assign_rhs_code', 3.4019391052900155e-06], ['address_term_infos', 3.4019391052900155e-06], ['compare_address_terms', 3.4019391052900155e-06], ['*a_uncast,', 3.4019391052900155e-06], ['*b_uncast)', 3.4019391052900155e-06], ['*a', 3.4019391052900155e-06], ['a_uncast;', 3.4019391052900155e-06], ['b_uncast;', 3.4019391052900155e-06], ['(a->expr', 3.4019391052900155e-06], ['b->expr)', 3.4019391052900155e-06], ['(a->expr)', 3.4019391052900155e-06], ['(b->expr)', 3.4019391052900155e-06], ['(a->multiplier', 3.4019391052900155e-06], ['b->multiplier)', 3.4019391052900155e-06], ['a->multiplier', 3.4019391052900155e-06], ['b->multiplier', 3.4019391052900155e-06], ['FLAGS.', 3.4019391052900155e-06], ['(address.base)', 3.4019391052900155e-06], ['address.base);', 3.4019391052900155e-06], ['"%T",', 3.4019391052900155e-06], ['address.terms[i].expr);', 3.4019391052900155e-06], ['(address.terms[i].multiplier', 3.4019391052900155e-06], ['address.terms[i].multiplier);', 3.4019391052900155e-06], ['[%wd,', 3.4019391052900155e-06], ['%wd]",', 3.4019391052900155e-06], ['address.min_offset,', 3.4019391052900155e-06], ['Hash', 3.4019391052900155e-06], ['address_info_hasher::hash', 3.4019391052900155e-06], ['*info)', 3.4019391052900155e-06], ['inchash::hash', 3.4019391052900155e-06], ['hash;', 3.4019391052900155e-06], ['(info->base', 3.4019391052900155e-06], ['(info->base)', 3.4019391052900155e-06], ['(info->terms.length', 3.4019391052900155e-06], ['info->terms.length', 3.4019391052900155e-06], ['(SSA_NAME_VERSION', 3.4019391052900155e-06], ['(info->terms[i].expr));', 3.4019391052900155e-06], ['hash.add_hwi', 3.4019391052900155e-06], ['(info->terms[i].multiplier);', 3.4019391052900155e-06], ['hash.end', 3.4019391052900155e-06], ['address_infos', 3.4019391052900155e-06], ['bases', 3.4019391052900155e-06], ['range).', 3.4019391052900155e-06], ['address_info_hasher::equal', 3.4019391052900155e-06], ['*b)', 3.4019391052900155e-06], ['(a->base', 3.4019391052900155e-06], ['b->base', 3.4019391052900155e-06], ['(!a->base', 3.4019391052900155e-06], ['!b->base', 3.4019391052900155e-06], ['(a->base,', 3.4019391052900155e-06], ['b->base,', 3.4019391052900155e-06], ['(a->terms.length', 3.4019391052900155e-06], ['b->terms.length', 3.4019391052900155e-06], ['a->terms.length', 3.4019391052900155e-06], ['(a->terms[i].expr', 3.4019391052900155e-06], ['b->terms[i].expr', 3.4019391052900155e-06], ['a->terms[i].multiplier', 3.4019391052900155e-06], ['b->terms[i].multiplier)', 3.4019391052900155e-06], ['loop_info::worth_versioning_p', 3.4019391052900155e-06], ['(!rejected_p', 3.4019391052900155e-06], ['(!bitmap_empty_p', 3.4019391052900155e-06], ['(&unity_names)', 3.4019391052900155e-06], ['subloops_benefit_p));', 3.4019391052900155e-06], ['loop_versioning::lv_dom_walker::lv_dom_walker', 3.4019391052900155e-06], ['&lv)', 3.4019391052900155e-06], ['(CDI_DOMINATORS),', 3.4019391052900155e-06], ['m_lv', 3.4019391052900155e-06], ['(lv),', 3.4019391052900155e-06], ['m_range_analyzer', 3.4019391052900155e-06], ['(false)', 3.4019391052900155e-06], ['loop_versioning::lv_dom_walker::before_dom_children', 3.4019391052900155e-06], ['m_range_analyzer.enter', 3.4019391052900155e-06], ['bb->loop_father->header)', 3.4019391052900155e-06], ['m_lv.prune_loop_conditions', 3.4019391052900155e-06], ['(bb->loop_father,', 3.4019391052900155e-06], ['m_range_analyzer.get_vr_values', 3.4019391052900155e-06], ['si', 3.4019391052900155e-06], ['(si);', 3.4019391052900155e-06], ['(&si))', 3.4019391052900155e-06], ['m_range_analyzer.record_ranges_from_stmt', 3.4019391052900155e-06], ['(si),', 3.4019391052900155e-06], ['loop_versioning::lv_dom_walker::after_dom_children', 3.4019391052900155e-06], ['m_range_analyzer.leave', 3.4019391052900155e-06], ['loop_versioning::name_prop::get_value', 3.4019391052900155e-06], ['bitmap_bit_p', 3.4019391052900155e-06], ['(&m_li.unity_names,', 3.4019391052900155e-06], ['(val)))', 3.4019391052900155e-06], ['(val));', 3.4019391052900155e-06], ['FN.', 3.4019391052900155e-06], ['loop_versioning::loop_versioning', 3.4019391052900155e-06], ['m_fn', 3.4019391052900155e-06], ['m_nloops', 3.4019391052900155e-06], ['(fn)),', 3.4019391052900155e-06], ['m_address_table', 3.4019391052900155e-06], ['(31)', 3.4019391052900155e-06], ['bitmap_obstack_initialize', 3.4019391052900155e-06], ['(&m_obstack);', 3.4019391052900155e-06], ['m_loops.safe_grow_cleared', 3.4019391052900155e-06], ['(m_nloops);', 3.4019391052900155e-06], ['m_loops[i].outermost', 3.4019391052900155e-06], ['get_loop', 3.4019391052900155e-06], ['bitmap_initialize', 3.4019391052900155e-06], ['(&m_loops[i].unity_names,', 3.4019391052900155e-06], ['&m_bitmap_obstack);', 3.4019391052900155e-06], ['nbbs', 3.4019391052900155e-06], ['last_basic_block_for_fn', 3.4019391052900155e-06], ['m_next_block_in_loop.safe_grow', 3.4019391052900155e-06], ['(nbbs);', 3.4019391052900155e-06], ['(bb->loop_father);', 3.4019391052900155e-06], ['m_next_block_in_loop[bb->index]', 3.4019391052900155e-06], ['li.block_list;', 3.4019391052900155e-06], ['li.block_list', 3.4019391052900155e-06], ['MAX_FIXED_MODE_SIZE', 3.4019391052900155e-06], ['unvectorizable', 3.4019391052900155e-06], ['efficiently', 3.4019391052900155e-06], ['omp_max_vf', 3.4019391052900155e-06], ['estimated_poly_value', 3.4019391052900155e-06], ['(omp_max_vf', 3.4019391052900155e-06], ['(m_maximum_scale,', 3.4019391052900155e-06], ['MAX_FIXED_MODE_SIZE);', 3.4019391052900155e-06], ['loop_versioning::~loop_versioning', 3.4019391052900155e-06], ['bitmap_obstack_release', 3.4019391052900155e-06], ["*doesn't*", 3.4019391052900155e-06], ['versioning;', 3.4019391052900155e-06], ['"taken', 3.4019391052900155e-06], ['ride".', 3.4019391052900155e-06], ['small,', 3.4019391052900155e-06], ['outer-loop', 3.4019391052900155e-06], ['loop_versioning::max_insns_for_loop', 3.4019391052900155e-06], ['(PARAM_LOOP_VERSIONING_MAX_OUTER_INSNS)', 3.4019391052900155e-06], ['(PARAM_LOOP_VERSIONING_MAX_INNER_INSNS));', 3.4019391052900155e-06], ['reasons', 3.4019391052900155e-06], ['correctness', 3.4019391052900155e-06], ['loop_versioning::expensive_stmt_p', 3.4019391052900155e-06], ['spent', 3.4019391052900155e-06], ['"expensive"', 3.4019391052900155e-06], ['overwhelm', 3.4019391052900155e-06], ['saving', 3.4019391052900155e-06], ['loop_versioning::version_for_unity', 3.4019391052900155e-06], ['(bitmap_set_bit', 3.4019391052900155e-06], ['(name)))', 3.4019391052900155e-06], ['LI.', 3.4019391052900155e-06], ['outermost_invariant_loop_for_expr', 3.4019391052900155e-06], ['li.outermost', 3.4019391052900155e-06], ['outermost;', 3.4019391052900155e-06], ['"want', 3.4019391052900155e-06], ['1",', 3.4019391052900155e-06], ['(outermost', 3.4019391052900155e-06], ['further");', 3.4019391052900155e-06], ['(outermost));', 3.4019391052900155e-06], ['allow"', 3.4019391052900155e-06], ['(li.outermost));', 3.4019391052900155e-06], ['request.', 3.4019391052900155e-06], ['"already', 3.4019391052900155e-06], ['asked', 3.4019391052900155e-06], ['containing"', 3.4019391052900155e-06], ['1\\n",', 3.4019391052900155e-06], ['practice', 3.4019391052900155e-06], ['whether:', 3.4019391052900155e-06], ['loop_versioning::acceptable_multiplier_p', 3.4019391052900155e-06], ['op1_tree,', 3.4019391052900155e-06], ['*result)', 3.4019391052900155e-06], ['(tree_fits_uhwi_p', 3.4019391052900155e-06], ['(op1_tree))', 3.4019391052900155e-06], ['(op1_tree);', 3.4019391052900155e-06], ['m_maximum_scale)', 3.4019391052900155e-06], ['op2;', 3.4019391052900155e-06], ['*SIZE', 3.4019391052900155e-06], ['loop_versioning::acceptable_type_p', 3.4019391052900155e-06], ['*size)', 3.4019391052900155e-06], ['exceeding', 3.4019391052900155e-06], ['loop_versioning::multiply_term_by', 3.4019391052900155e-06], ['term.multiplier,', 3.4019391052900155e-06], ['&term.multiplier);', 3.4019391052900155e-06], ['INNER_*', 3.4019391052900155e-06], ['probability.', 3.4019391052900155e-06], ['loop_versioning::get_inner_likelihood', 3.4019391052900155e-06], ['STRIDE.', 3.4019391052900155e-06], ['UNLIKELY_P', 3.4019391052900155e-06], ['E.g.', 3.4019391052900155e-06], ['for:', 3.4019391052900155e-06], ['circumstances.', 3.4019391052900155e-06], ['(See', 3.4019391052900155e-06], ['below.)', 3.4019391052900155e-06], ['However:', 3.4019391052900155e-06], ['worklist[MAX_NITERS];', 3.4019391052900155e-06], ['worklist[i];', 3.4019391052900155e-06], ['grouped', 3.4019391052900155e-06], ['(acceptable_multiplier_p', 3.4019391052900155e-06], ['multiplier))', 3.4019391052900155e-06], ['INNER_LIKELY;', 3.4019391052900155e-06], ['important', 3.4019391052900155e-06], ['a.dim[0].stride;', 3.4019391052900155e-06], ['(Strides', 3.4019391052900155e-06], ['dimensions', 3.4019391052900155e-06], ['specially.)', 3.4019391052900155e-06], ['(gphi', 3.4019391052900155e-06], ['gimple_phi_num_args', 3.4019391052900155e-06], ['(gimple_phi_arg_def', 3.4019391052900155e-06], ['j));', 3.4019391052900155e-06], ['descriptor)', 3.4019391052900155e-06], ['calculated.', 3.4019391052900155e-06], ['Things', 3.4019391052900155e-06], ['actively', 3.4019391052900155e-06], ['INNER_UNLIKELY', 3.4019391052900155e-06], ['INNER_DONT_KNOW;', 3.4019391052900155e-06], ["TERM's", 3.4019391052900155e-06], ['loop_versioning::dump_inner_likelihood', 3.4019391052900155e-06], ['INNER_UNLIKELY)', 3.4019391052900155e-06], ['interest', 3.4019391052900155e-06], ['OP_LOOP.', 3.4019391052900155e-06], ['loop_versioning::analyze_stride', 3.4019391052900155e-06], ['*op_loop)', 3.4019391052900155e-06], ['require:', 3.4019391052900155e-06], ['consecutive.', 3.4019391052900155e-06], ['deliberately', 3.4019391052900155e-06], ['conservative.', 3.4019391052900155e-06], ['gaps', 3.4019391052900155e-06], ['iterations)', 3.4019391052900155e-06], ['testcases', 3.4019391052900155e-06], ['enabling', 3.4019391052900155e-06], ['savings', 3.4019391052900155e-06], ['address.min_offset;', 3.4019391052900155e-06], ['(term.multiplier', 3.4019391052900155e-06], ['address.loop', 3.4019391052900155e-06], ['op_loop', 3.4019391052900155e-06], ['(address.loop,', 3.4019391052900155e-06], ['stride))', 3.4019391052900155e-06], ['term.versioning_opportunity_p', 3.4019391052900155e-06], ['versioning"', 3.4019391052900155e-06], ['opportunity\\n",', 3.4019391052900155e-06], ['stride);', 3.4019391052900155e-06], ['ADDRESS)', 3.4019391052900155e-06], ['multiplying', 3.4019391052900155e-06], ['varies', 3.4019391052900155e-06], ['iterations,', 3.4019391052900155e-06], ['a[index[i]', 3.4019391052900155e-06], ['loop_versioning::find_per_loop_multiplication', 3.4019391052900155e-06], ['(!mult', 3.4019391052900155e-06], ['*mult_loop', 3.4019391052900155e-06], ['(mult);', 3.4019391052900155e-06], ['(mult_loop))', 3.4019391052900155e-06], ['invariant1_p', 3.4019391052900155e-06], ['invariant2_p', 3.4019391052900155e-06], ['(invariant1_p', 3.4019391052900155e-06], ['invariant2_p)', 3.4019391052900155e-06], ['(invariant1_p)', 3.4019391052900155e-06], ['op1,', 3.4019391052900155e-06], ['mult_loop);', 3.4019391052900155e-06], ['ADDRESS.', 3.4019391052900155e-06], ['evolution', 3.4019391052900155e-06], ['find,', 3.4019391052900155e-06], ['wrt', 3.4019391052900155e-06], ['ADDRESS->LOOP.', 3.4019391052900155e-06], ['worthless', 3.4019391052900155e-06], ['loop_versioning::analyze_term_using_scevs', 3.4019391052900155e-06], ['*setter', 3.4019391052900155e-06], ['(!setter)', 3.4019391052900155e-06], ['*wrt_loop', 3.4019391052900155e-06], ['(setter);', 3.4019391052900155e-06], ['(wrt_loop))', 3.4019391052900155e-06], ['(analyze_scalar_evolution', 3.4019391052900155e-06], ['(wrt_loop,', 3.4019391052900155e-06], ['term.expr));', 3.4019391052900155e-06], ['accumulate', 3.4019391052900155e-06], ['multiplications,', 3.4019391052900155e-06], ['*assign;', 3.4019391052900155e-06], ['((assign', 3.4019391052900155e-06], ['(stride))', 3.4019391052900155e-06], ['(assign)', 3.4019391052900155e-06], ['"looking', 3.4019391052900155e-06], ['assign);', 3.4019391052900155e-06], ['(assign));', 3.4019391052900155e-06], ['Address', 3.4019391052900155e-06], ['mistakenly', 3.4019391052900155e-06], ['(less', 3.4019391052900155e-06], ['likely)', 3.4019391052900155e-06], ['copes', 3.4019391052900155e-06], ['x(i,', 3.4019391052900155e-06], [':)', 3.4019391052900155e-06], ['loop_versioning::analyze_arbitrary_term', 3.4019391052900155e-06], ['offers', 3.4019391052900155e-06], ['Pick', 3.4019391052900155e-06], ['(mult', 3.4019391052900155e-06], ['(alt)', 3.4019391052900155e-06], ['alt_l', 3.4019391052900155e-06], ['(alt,', 3.4019391052900155e-06], ['(alt_l', 3.4019391052900155e-06], ['term.inner_likelihood)', 3.4019391052900155e-06], ['alt;', 3.4019391052900155e-06], ['alt_l;', 3.4019391052900155e-06], ['difficulty', 3.4019391052900155e-06], ["(that's", 3.4019391052900155e-06], ['easy).', 3.4019391052900155e-06], ['bloat,', 3.4019391052900155e-06], ['a(:,:)', 3.4019391052900155e-06], ['idea,', 3.4019391052900155e-06], ['iterating', 3.4019391052900155e-06], ['(It', 3.4019391052900155e-06], ['impossible,', 3.4019391052900155e-06], ['transposed.)', 3.4019391052900155e-06], ['Similarly,', 3.4019391052900155e-06], ['a(:,:),', 3.4019391052900155e-06], ['b(:,:)', 3.4019391052900155e-06], ["isn't.", 3.4019391052900155e-06], ["b's", 3.4019391052900155e-06], ['identifiable', 3.4019391052900155e-06], ['"likely",', 3.4019391052900155e-06], ['know"', 3.4019391052900155e-06], ['"unlikely".', 3.4019391052900155e-06], ['STMT,', 3.4019391052900155e-06], ['deals', 3.4019391052900155e-06], ['fairly', 3.4019391052900155e-06], ['thing,', 3.4019391052900155e-06], ['know",', 3.4019391052900155e-06], ['principally', 3.4019391052900155e-06], ['x]', 3.4019391052900155e-06], ['and:', 3.4019391052900155e-06], ['y]', 3.4019391052900155e-06], ['"x"', 3.4019391052900155e-06], ['"y"', 3.4019391052900155e-06], ['appropriately', 3.4019391052900155e-06], ['(although', 3.4019391052900155e-06], ['course', 3.4019391052900155e-06], ['examples', 3.4019391052900155e-06], ['GEMM', 3.4019391052900155e-06], ['loop_versioning::analyze_address_fragment', 3.4019391052900155e-06], ['"analyzing', 3.4019391052900155e-06], ['apparent', 3.4019391052900155e-06], ['overlap', 3.4019391052900155e-06], ['former', 3.4019391052900155e-06], ['(!find_per_loop_multiplication', 3.4019391052900155e-06], ['!analyze_term_using_scevs', 3.4019391052900155e-06], ['!POINTER_TYPE_P', 3.4019391052900155e-06], ['(address.terms[i].expr)))', 3.4019391052900155e-06], ['address.terms[i]);', 3.4019391052900155e-06], ['bail', 3.4019391052900155e-06], ['suggests', 3.4019391052900155e-06], ['a[j', 3.4019391052900155e-06], ['stride][i]', 3.4019391052900155e-06], ['a[j][i', 3.4019391052900155e-06], ['nesting):', 3.4019391052900155e-06], ['a[i][j]', 3.4019391052900155e-06], ['(yet)', 3.4019391052900155e-06], ['hoisted', 3.4019391052900155e-06], ['reasons.', 3.4019391052900155e-06], ['uniqueness', 3.4019391052900155e-06], ['(chosen_stride', 3.4019391052900155e-06], ['(chosen_stride)', 3.4019391052900155e-06], ['(address.terms[i].versioning_opportunity_p)', 3.4019391052900155e-06], ['chosen_stride;', 3.4019391052900155e-06], ['INNER_DONT_KNOW.', 3.4019391052900155e-06], ['handles.', 3.4019391052900155e-06], ['(!chosen_stride)', 3.4019391052900155e-06], ['(version_stride', 3.4019391052900155e-06], ['INNER_DONT_KNOW', 3.4019391052900155e-06], ['address.terms[i].versioning_opportunity_p)', 3.4019391052900155e-06], ['(address.stmt,', 3.4019391052900155e-06], ['version_stride);', 3.4019391052900155e-06], ['loop_versioning::record_address_fragment', 3.4019391052900155e-06], ['(expr_invariant_in_loop_p', 3.4019391052900155e-06], ['expr))', 3.4019391052900155e-06], ['*address', 3.4019391052900155e-06], ['XOBNEW', 3.4019391052900155e-06], ['address_info);', 3.4019391052900155e-06], ['(address)', 3.4019391052900155e-06], ['address_info;', 3.4019391052900155e-06], ['address->stmt', 3.4019391052900155e-06], ['address->loop', 3.4019391052900155e-06], ['address->terms.quick_grow', 3.4019391052900155e-06], ['address->terms[0].expr', 3.4019391052900155e-06], ['address->terms[0].stride', 3.4019391052900155e-06], ['address->terms[0].inner_likelihood', 3.4019391052900155e-06], ['INNER_UNLIKELY;', 3.4019391052900155e-06], ['address->terms[0].versioning_opportunity_p', 3.4019391052900155e-06], ['address_terms,', 3.4019391052900155e-06], ['decreasing.', 3.4019391052900155e-06], ['(address->terms[i].expr))', 3.4019391052900155e-06], ['POINTER_PLUS_EXPR', 3.4019391052900155e-06], ['address->terms[i].multiplier);', 3.4019391052900155e-06], ['address_info::MAX_TERMS)', 3.4019391052900155e-06], ['address->terms.quick_push', 3.4019391052900155e-06], ['(address->terms[i]);', 3.4019391052900155e-06], ['address->terms[j].expr', 3.4019391052900155e-06], ['(op2);', 3.4019391052900155e-06], ['(multiply_term_by', 3.4019391052900155e-06], ['(address->terms[i],', 3.4019391052900155e-06], ['op2))', 3.4019391052900155e-06], ['symbolic', 3.4019391052900155e-06], ['(address->terms[0].expr)', 3.4019391052900155e-06], ['address->terms[0].expr;', 3.4019391052900155e-06], ['address->terms.ordered_remove', 3.4019391052900155e-06], ['unfolded', 3.4019391052900155e-06], ['with.)', 3.4019391052900155e-06], ['(address->terms[i].expr)', 3.4019391052900155e-06], ['MIN_OFFSET', 3.4019391052900155e-06], ['address->max_offset', 3.4019391052900155e-06], ['address->terms.qsort', 3.4019391052900155e-06], ['(compare_address_terms);', 3.4019391052900155e-06], ['"recording', 3.4019391052900155e-06], ['%T",', 3.4019391052900155e-06], ['multiplier);', 3.4019391052900155e-06], ['*address);', 3.4019391052900155e-06], ['Pool', 3.4019391052900155e-06], ['**slot', 3.4019391052900155e-06], ['m_address_table.find_slot', 3.4019391052900155e-06], ['*old_address', 3.4019391052900155e-06], ['*slot)', 3.4019391052900155e-06], ['paper', 3.4019391052900155e-06], ['gaps,', 3.4019391052900155e-06], ['3];', 3.4019391052900155e-06], ['2".', 3.4019391052900155e-06], ['vectorizer', 3.4019391052900155e-06], ['gapped', 3.4019391052900155e-06], ['problems,', 3.4019391052900155e-06], ['(old_address->min_offset', 3.4019391052900155e-06], ['address->min_offset)', 3.4019391052900155e-06], ['old_address->min_offset', 3.4019391052900155e-06], ['address->min_offset;', 3.4019391052900155e-06], ['(old_address->max_offset', 3.4019391052900155e-06], ['address->max_offset)', 3.4019391052900155e-06], ['old_address->max_offset', 3.4019391052900155e-06], ['address->max_offset;', 3.4019391052900155e-06], ['address;', 3.4019391052900155e-06], ['m_address_list.safe_push', 3.4019391052900155e-06], ['(address);', 3.4019391052900155e-06], ['loop_versioning::analyze_expr', 3.4019391052900155e-06], ['(handled_component_p', 3.4019391052900155e-06], ['ARRAY_REF', 3.4019391052900155e-06], ['MEM_REF.', 3.4019391052900155e-06], ['TARGET_MEM_REF);', 3.4019391052900155e-06], ['versioned.', 3.4019391052900155e-06], ['loop_versioning::analyze_block', 3.4019391052900155e-06], ['bb->loop_father;', 3.4019391052900155e-06], ['(expensive_stmt_p', 3.4019391052900155e-06], ['"expensive', 3.4019391052900155e-06], ['statement"', 3.4019391052900155e-06], ['versioning:', 3.4019391052900155e-06], ['tends', 3.4019391052900155e-06], ['(!loop->inner)', 3.4019391052900155e-06], ['gimple_num_ops', 3.4019391052900155e-06], ['nops;', 3.4019391052900155e-06], ['gimple_op', 3.4019391052900155e-06], ['op);', 3.4019391052900155e-06], ['growth,', 3.4019391052900155e-06], ['size-based', 3.4019391052900155e-06], ['aimed', 3.4019391052900155e-06], ['speed.', 3.4019391052900155e-06], ['estimate_num_insns', 3.4019391052900155e-06], ['&eni_size_weights);', 3.4019391052900155e-06], ['loop_versioning::analyze_blocks', 3.4019391052900155e-06], ['("analyze_blocks",', 3.4019391052900155e-06], ['(get_loop', 3.4019391052900155e-06], ['0)).rejected_p', 3.4019391052900155e-06], ['cold', 3.4019391052900155e-06], ['(!optimize_loop_for_speed_p', 3.4019391052900155e-06], ['(inner).rejected_p)', 3.4019391052900155e-06], ['possibility,', 3.4019391052900155e-06], ['*start_point', 3.4019391052900155e-06], ['obstack_alloc', 3.4019391052900155e-06], ['linfo.block_list;', 3.4019391052900155e-06], ['m_next_block_in_loop[bb->index])', 3.4019391052900155e-06], ['(!analyze_block', 3.4019391052900155e-06], ['(bb))', 3.4019391052900155e-06], ['fragments,', 3.4019391052900155e-06], ['grouping', 3.4019391052900155e-06], ['*address;', 3.4019391052900155e-06], ['(m_address_list,', 3.4019391052900155e-06], ['address)', 3.4019391052900155e-06], ['(*address);', 3.4019391052900155e-06], ['m_address_table.empty', 3.4019391052900155e-06], ['m_address_list.truncate', 3.4019391052900155e-06], ['start_point);', 3.4019391052900155e-06], ['VRS', 3.4019391052900155e-06], ['loop_versioning::prune_loop_conditions', 3.4019391052900155e-06], ['*vrs)', 3.4019391052900155e-06], ['value_range', 3.4019391052900155e-06], ['*vr', 3.4019391052900155e-06], ['vrs->get_value_range', 3.4019391052900155e-06], ['(vr', 3.4019391052900155e-06], ['!range_includes_p', 3.4019391052900155e-06], ['(vr,', 3.4019391052900155e-06], ['scheduled', 3.4019391052900155e-06], ['loop_versioning::prune_conditions', 3.4019391052900155e-06], ['("prune_loop_conditions",', 3.4019391052900155e-06], ['calculate_dominance_info', 3.4019391052900155e-06], ['(CDI_DOMINATORS);', 3.4019391052900155e-06], ['dom_walker.walk', 3.4019391052900155e-06], ['(m_fn));', 3.4019391052900155e-06], ['INNER', 3.4019391052900155e-06], ['immediately-enclosing', 3.4019391052900155e-06], ['OUTER.', 3.4019391052900155e-06], ['loop_versioning::merge_loop_info', 3.4019391052900155e-06], ['*inner)', 3.4019391052900155e-06], ['&outer_li', 3.4019391052900155e-06], ['(outer);', 3.4019391052900155e-06], ['(&inner_li.unity_names,', 3.4019391052900155e-06], ['(!bitmap_bit_p', 3.4019391052900155e-06], ['(inner),', 3.4019391052900155e-06], ['"hoisting', 3.4019391052900155e-06], ['bitmap_ior_into', 3.4019391052900155e-06], ['&inner_li.unity_names);', 3.4019391052900155e-06], ['(outer_li.outermost)', 3.4019391052900155e-06], ['(inner_li.outermost))', 3.4019391052900155e-06], ['outer_li.outermost', 3.4019391052900155e-06], ['inner_li.outermost;', 3.4019391052900155e-06], ['loop_versioning::add_loop_to_queue', 3.4019391052900155e-06], ['"queuing', 3.4019391052900155e-06], ['versioning\\n");', 3.4019391052900155e-06], ['m_loops_to_version.safe_push', 3.4019391052900155e-06], ['superloops.', 3.4019391052900155e-06], ['li.rejected_p', 3.4019391052900155e-06], ['benefited.', 3.4019391052900155e-06], ['decision', 3.4019391052900155e-06], ['loop_versioning::decide_whether_loop_is_versionable', 3.4019391052900155e-06], ['(li.rejected_p)', 3.4019391052900155e-06], ['decisions', 3.4019391052900155e-06], ['(inner_li.rejected_p)', 3.4019391052900155e-06], ['its"', 3.4019391052900155e-06], ['versioned\\n");', 3.4019391052900155e-06], ['(inner_li.worth_versioning_p', 3.4019391052900155e-06], ['li.subloops_benefit_p', 3.4019391052900155e-06], ['Accumulate', 3.4019391052900155e-06], ['loop-versioning-max-inner-insns;', 3.4019391052900155e-06], ['loop-versioning-max-outer-insns.', 3.4019391052900155e-06], ['(!inner_li.worth_versioning_p', 3.4019391052900155e-06], ['inner->inner)', 3.4019391052900155e-06], ['"counting', 3.4019391052900155e-06], ['inner_li.num_insns);', 3.4019391052900155e-06], ['inner_li.num_insns;', 3.4019391052900155e-06], ['limits.', 3.4019391052900155e-06], ['(li.worth_versioning_p', 3.4019391052900155e-06], ['max_num_insns', 3.4019391052900155e-06], ['against"', 3.4019391052900155e-06], ['li.num_insns,', 3.4019391052900155e-06], ['max_num_insns);', 3.4019391052900155e-06], ['(li.num_insns', 3.4019391052900155e-06], ['max_num_insns)', 3.4019391052900155e-06], ['(MSG_MISSED_OPTIMIZATION', 3.4019391052900155e-06], ['MSG_PRIORITY_USER_FACING,', 3.4019391052900155e-06], ['version");', 3.4019391052900155e-06], ['Hoist', 3.4019391052900155e-06], ['subloop);', 3.4019391052900155e-06], ['loop_versioning::make_versioning_decisions', 3.4019391052900155e-06], ['("make_versioning_decisions",', 3.4019391052900155e-06], ['(decide_whether_loop_is_versionable', 3.4019391052900155e-06], ['Commit', 3.4019391052900155e-06], ['further.', 3.4019391052900155e-06], ['(linfo.worth_versioning_p', 3.4019391052900155e-06], ['linfo.outermost', 3.4019391052900155e-06], ['individually', 3.4019391052900155e-06], ['(subloop).worth_versioning_p', 3.4019391052900155e-06], ['(subloop);', 3.4019391052900155e-06], ['!m_loops_to_version.is_empty', 3.4019391052900155e-06], ['loop_info.', 3.4019391052900155e-06], ['success.', 3.4019391052900155e-06], ['loop_versioning::version_loop', 3.4019391052900155e-06], ['ne_one', 3.4019391052900155e-06], ['(name)));', 3.4019391052900155e-06], ['ne_one);', 3.4019391052900155e-06], ['gcond.', 3.4019391052900155e-06], ['force_gimple_operand_1', 3.4019391052900155e-06], ['&stmts,', 3.4019391052900155e-06], ['is_gimple_condexpr,', 3.4019391052900155e-06], ['Version', 3.4019391052900155e-06], ['initialize_original_copy_tables', 3.4019391052900155e-06], ['cond_bb;', 3.4019391052900155e-06], ['li.optimized_loop', 3.4019391052900155e-06], ['loop_version', 3.4019391052900155e-06], ['&cond_bb,', 3.4019391052900155e-06], ['free_original_copy_tables', 3.4019391052900155e-06], ['(!li.optimized_loop)', 3.4019391052900155e-06], ['"tried', 3.4019391052900155e-06], ['when"', 3.4019391052900155e-06], ['"versioned', 3.4019391052900155e-06], ['feed', 3.4019391052900155e-06], ['COND.', 3.4019391052900155e-06], ['(cond_bb);', 3.4019391052900155e-06], ['loop_versioning::implement_versioning_decisions', 3.4019391052900155e-06], ['user-facing', 3.4019391052900155e-06], ['(version_loop', 3.4019391052900155e-06], ['(!any_succeeded_p)', 3.4019391052900155e-06], ['update_ssa', 3.4019391052900155e-06], ['(TODO_update_ssa);', 3.4019391052900155e-06], ['Simplify', 3.4019391052900155e-06], ['(linfo.optimized_loop)', 3.4019391052900155e-06], ['(linfo).substitute_and_fold', 3.4019391052900155e-06], ['(linfo.optimized_loop->header);', 3.4019391052900155e-06], ['TODO_*', 3.4019391052900155e-06], ['loop_versioning::run', 3.4019391052900155e-06], ['(scev_initialized_p', 3.4019391052900155e-06], ['(analyze_blocks', 3.4019391052900155e-06], ['pass_data_loop_versioning', 3.4019391052900155e-06], ['"lversion",', 3.4019391052900155e-06], ['TV_LOOP_VERSIONING,', 3.4019391052900155e-06], ['(pass_data_loop_versioning,', 3.4019391052900155e-06], ['flag_version_loops_for_strides;', 3.4019391052900155e-06], ['pass_loop_versioning::execute', 3.4019391052900155e-06], ['(fn).run', 3.4019391052900155e-06], ['make_pass_loop_versioning', 3.4019391052900155e-06], ['toir.cc', 3.4019391052900155e-06], ['"stmt.h"', 3.4019391052900155e-06], ['pop_binding_label', 3.4019391052900155e-06], ['*bl)', 3.4019391052900155e-06], ['*obl', 3.4019391052900155e-06], ['bl->level_chain;', 3.4019391052900155e-06], ['(ent->level', 3.4019391052900155e-06], ['bl)', 3.4019391052900155e-06], ['ent->in_try_scope', 3.4019391052900155e-06], ['ent->in_catch_scope', 3.4019391052900155e-06], ['(ent->fwdrefs)', 3.4019391052900155e-06], ['ref->level', 3.4019391052900155e-06], ['pop_label', 3.4019391052900155e-06], ['(!ent->bc_label)', 3.4019391052900155e-06], ['"variables"', 3.4019391052900155e-06], ['debugger', 3.4019391052900155e-06], ['d_function_chain->labels->remove', 3.4019391052900155e-06], ["'binding", 3.4019391052900155e-06], ["level'", 3.4019391052900155e-06], ['table,', 3.4019391052900155e-06], ['flow.', 3.4019391052900155e-06], ['Primarily', 3.4019391052900155e-06], ['*new_level', 3.4019391052900155e-06], ['new_level->level_chain', 3.4019391052900155e-06], ['new_level->kind', 3.4019391052900155e-06], ['new_level;', 3.4019391052900155e-06], ['*level', 3.4019391052900155e-06], ['level->level_chain;', 3.4019391052900155e-06], ['level->names;', 3.4019391052900155e-06], ['BLOCK_SUBBLOCKS', 3.4019391052900155e-06], ['subblock,', 3.4019391052900155e-06], ['superior.', 3.4019391052900155e-06], ['BLOCK_CHAIN', 3.4019391052900155e-06], ['(level->kind', 3.4019391052900155e-06], ['level_function)', 3.4019391052900155e-06], ['Dispose', 3.4019391052900155e-06], ['(d_function_chain->labels)', 3.4019391052900155e-06], ['d_function_chain->labels->traverse<tree,', 3.4019391052900155e-06], ['&pop_label>', 3.4019391052900155e-06], ['d_function_chain->labels)', 3.4019391052900155e-06], ['language_function', 3.4019391052900155e-06], ['d_function_chain;', 3.4019391052900155e-06], ['f->labels->traverse<binding_level', 3.4019391052900155e-06], ['&pop_binding_label>', 3.4019391052900155e-06], ['current_binding_level->blocks', 3.4019391052900155e-06], ['block_chainon', 3.4019391052900155e-06], ['(current_binding_level->blocks,', 3.4019391052900155e-06], ['(d_function_chain->stmt_list,', 3.4019391052900155e-06], ['d_function_chain->stmt_list->pop', 3.4019391052900155e-06], ['completely', 3.4019391052900155e-06], ['build_empty_stmt,', 3.4019391052900155e-06], ['advantage', 3.4019391052900155e-06], ['buildup', 3.4019391052900155e-06], ['EMPTY_STMT_P', 3.4019391052900155e-06], ['(tsi_one_before_end_p', 3.4019391052900155e-06], ['tsi_delink', 3.4019391052900155e-06], ['(&i);', 3.4019391052900155e-06], ['free_stmt_list', 3.4019391052900155e-06], ['IS_EMPTY_STMT', 3.4019391052900155e-06], ['(!TREE_SIDE_EFFECTS', 3.4019391052900155e-06], ['COMPOUND_EXPR)', 3.4019391052900155e-06], ['(EXPR_P', 3.4019391052900155e-06], ['!EXPR_HAS_LOCATION', 3.4019391052900155e-06], ['d_function_chain->stmt_list->last', 3.4019391052900155e-06], ['add_stmt(),', 3.4019391052900155e-06], ['appends', 3.4019391052900155e-06], ['current_binding_level.', 3.4019391052900155e-06], ['*func_;', 3.4019391052900155e-06], ['Stack', 3.4019391052900155e-06], ['"break"', 3.4019391052900155e-06], ['"continue",', 3.4019391052900155e-06], ['TREE_CHAIN.', 3.4019391052900155e-06], ['break_label_;', 3.4019391052900155e-06], ['continue_label_;', 3.4019391052900155e-06], ['this->func_', 3.4019391052900155e-06], ['S.', 3.4019391052900155e-06], ['user-declared', 3.4019391052900155e-06], ['contour', 3.4019391052900155e-06], ['start_scope', 3.4019391052900155e-06], ['(kind);', 3.4019391052900155e-06], ['start_scope,', 3.4019391052900155e-06], ['end_scope', 3.4019391052900155e-06], ['body;', 3.4019391052900155e-06], ['end_scope,', 3.4019391052900155e-06], ['finish_scope', 3.4019391052900155e-06], ['(scope);', 3.4019391052900155e-06], ['is_return_label', 3.4019391052900155e-06], ['(Identifier', 3.4019391052900155e-06], ['*ident)', 3.4019391052900155e-06], ['(this->func_->returnLabel)', 3.4019391052900155e-06], ['this->func_->returnLabel->ident', 3.4019391052900155e-06], ['specifying', 3.4019391052900155e-06], ['define_label', 3.4019391052900155e-06], ['this->check_previous_goto', 3.4019391052900155e-06], ['(ent->statement,', 3.4019391052900155e-06], ['LABEL', 3.4019391052900155e-06], ['do_label', 3.4019391052900155e-06], ['auto-vectorization', 3.4019391052900155e-06], ['excemption', 3.4019391052900155e-06], ['visitor,', 3.4019391052900155e-06], ['regardless.', 3.4019391052900155e-06], ['(TREE_USED', 3.4019391052900155e-06], ['LABEL.', 3.4019391052900155e-06], ['do_jump', 3.4019391052900155e-06], ['(fold_build1', 3.4019391052900155e-06], ['check_goto', 3.4019391052900155e-06], ['*from,', 3.4019391052900155e-06], ['*to)', 3.4019391052900155e-06], ['*fwdref', 3.4019391052900155e-06], ['ggc_alloc<d_label_use_entry>', 3.4019391052900155e-06], ['fwdref->level', 3.4019391052900155e-06], ['fwdref->statement', 3.4019391052900155e-06], ['from;', 3.4019391052900155e-06], ['fwdref->next', 3.4019391052900155e-06], ['fwdref;', 3.4019391052900155e-06], ['(ent->in_try_scope)', 3.4019391052900155e-06], ['(ent->in_catch_scope)', 3.4019391052900155e-06], ['statement;', 3.4019391052900155e-06], ['FWDREF', 3.4019391052900155e-06], ['labels.', 3.4019391052900155e-06], ['check_previous_goto', 3.4019391052900155e-06], ['*fwdref)', 3.4019391052900155e-06], ['(binding_level', 3.4019391052900155e-06], ['b->level_chain)', 3.4019391052900155e-06], ['fwdref->level)', 3.4019391052900155e-06], ['level_try', 3.4019391052900155e-06], ['b->kind', 3.4019391052900155e-06], ['location;', 3.4019391052900155e-06], ['(s->isLabelStatement', 3.4019391052900155e-06], ['(fwdref->statement->loc);', 3.4019391052900155e-06], ['(s->isCaseStatement', 3.4019391052900155e-06], ['"case', 3.4019391052900155e-06], ['(s->isDefaultStatement', 3.4019391052900155e-06], ['"default', 3.4019391052900155e-06], ['lookup_label', 3.4019391052900155e-06], ['("label', 3.4019391052900155e-06], ['function",', 3.4019391052900155e-06], ['"(unnamed)");', 3.4019391052900155e-06], ['htab', 3.4019391052900155e-06], ['(!d_function_chain->labels)', 3.4019391052900155e-06], ['d_function_chain->labels', 3.4019391052900155e-06], ['hash_map<Statement', 3.4019391052900155e-06], ['d_label_entry>::create_ggc', 3.4019391052900155e-06], ['(ident->toChars', 3.4019391052900155e-06], ['ggc_cleared_alloc<d_label_entry>', 3.4019391052900155e-06], ['ent->statement', 3.4019391052900155e-06], ['d_function_chain->labels->put', 3.4019391052900155e-06], ['*ent);', 3.4019391052900155e-06], ['(!existed);', 3.4019391052900155e-06], ['BC', 3.4019391052900155e-06], ['which.', 3.4019391052900155e-06], ['lookup_bc_label', 3.4019391052900155e-06], ['bc_kind', 3.4019391052900155e-06], ['(vec)', 3.4019391052900155e-06], ['LABEL_DECL)', 3.4019391052900155e-06], ['bc_break)', 3.4019391052900155e-06], ['bc_continue)', 3.4019391052900155e-06], ['ent->bc_label', 3.4019391052900155e-06], ['push_break_label', 3.4019391052900155e-06], ['bc_break);', 3.4019391052900155e-06], ['this->break_label_;', 3.4019391052900155e-06], ['pop_break_label', 3.4019391052900155e-06], ['(this->break_label_', 3.4019391052900155e-06], ['push_continue_label', 3.4019391052900155e-06], ['bc_continue);', 3.4019391052900155e-06], ['this->continue_label_;', 3.4019391052900155e-06], ['pop_continue_label', 3.4019391052900155e-06], ['(this->continue_label_', 3.4019391052900155e-06], ["(exit/failure/success)'", 3.4019391052900155e-06], ['try/catch/finally.', 3.4019391052900155e-06], ['placeholder.', 3.4019391052900155e-06], ['(OnScopeStatement', 3.4019391052900155e-06], ['(IfStatement', 3.4019391052900155e-06], ['(level_cond);', 3.4019391052900155e-06], ["'if'", 3.4019391052900155e-06], ['ifcond', 3.4019391052900155e-06], ["'then'", 3.4019391052900155e-06], ['(s->ifbody)', 3.4019391052900155e-06], ['(s->ifbody);', 3.4019391052900155e-06], ["'else", 3.4019391052900155e-06], ['(s->elsebody)', 3.4019391052900155e-06], ['(s->elsebody);', 3.4019391052900155e-06], ['(ifcond,', 3.4019391052900155e-06], ['elsebody);', 3.4019391052900155e-06], ['if-then', 3.4019391052900155e-06], ['`pragma', 3.4019391052900155e-06], ['(PragmaStatement', 3.4019391052900155e-06], ['`while', 3.4019391052900155e-06], ['(WhileStatement', 3.4019391052900155e-06], ['statments', 3.4019391052900155e-06], ['executed,', 3.4019391052900155e-06], ['(DoStatement', 3.4019391052900155e-06], ["'while'", 3.4019391052900155e-06], ['test,', 3.4019391052900155e-06], ['clauses.', 3.4019391052900155e-06], ['(ForStatement', 3.4019391052900155e-06], ['(s->_init)', 3.4019391052900155e-06], ['(s->_init);', 3.4019391052900155e-06], ['(s->condition)', 3.4019391052900155e-06], ['(s->increment)', 3.4019391052900155e-06], ['effects?', 3.4019391052900155e-06], ['(s->increment));', 3.4019391052900155e-06], ['(ForeachStatement', 3.4019391052900155e-06], ['(...;', 3.4019391052900155e-06], ["[x..y])'", 3.4019391052900155e-06], ['(ForeachRangeStatement', 3.4019391052900155e-06], ['(BreakStatement', 3.4019391052900155e-06], ['up.', 3.4019391052900155e-06], ['eg:', 3.4019391052900155e-06], ['label->statement->getRelatedLabeled', 3.4019391052900155e-06], ['bc_break));', 3.4019391052900155e-06], ['(ContinueStatement', 3.4019391052900155e-06], ['(label->statement,', 3.4019391052900155e-06], ['bc_continue));', 3.4019391052900155e-06], ['(GotoStatement', 3.4019391052900155e-06], ['(s->label->statement', 3.4019391052900155e-06], ['(s->tf', 3.4019391052900155e-06], ['s->label->statement->tf);', 3.4019391052900155e-06], ['(s->label->statement,', 3.4019391052900155e-06], ['s->label->ident);', 3.4019391052900155e-06], ['s->label->statement);', 3.4019391052900155e-06], ['Statements', 3.4019391052900155e-06], ['labeled.', 3.4019391052900155e-06], ['precedes', 3.4019391052900155e-06], ['(LabelStatement', 3.4019391052900155e-06], ['LabelDsymbol', 3.4019391052900155e-06], ['*sym;', 3.4019391052900155e-06], ['(s->ident))', 3.4019391052900155e-06], ['this->func_->returnLabel;', 3.4019391052900155e-06], ['(s->ident);', 3.4019391052900155e-06], ['(sym->statement,', 3.4019391052900155e-06], ['sym->ident);', 3.4019391052900155e-06], ['this->func_->fensure', 3.4019391052900155e-06], ['(this->func_->fensure);', 3.4019391052900155e-06], ['(SwitchStatement', 3.4019391052900155e-06], ['(level_switch);', 3.4019391052900155e-06], ['(s->condition);', 3.4019391052900155e-06], ['*condtype', 3.4019391052900155e-06], ['s->condition->type->toBasetype', 3.4019391052900155e-06], ['(s->condition->type->isString', 3.4019391052900155e-06], ['condtype->nextOf', 3.4019391052900155e-06], ['(etype->ty)', 3.4019391052900155e-06], ['LIBCALL_SWITCH_STRING;', 3.4019391052900155e-06], ['LIBCALL_SWITCH_USTRING;', 3.4019391052900155e-06], ['LIBCALL_SWITCH_DSTRING;', 3.4019391052900155e-06], ['::error', 3.4019391052900155e-06], ['("switch', 3.4019391052900155e-06], ['"some', 3.4019391052900155e-06], ['Apparently', 3.4019391052900155e-06], ['usable.', 3.4019391052900155e-06], ['condtype->sarrayOf', 3.4019391052900155e-06], ['(s->cases->dim);', 3.4019391052900155e-06], ['s->cases->sort', 3.4019391052900155e-06], ['cs->index', 3.4019391052900155e-06], ['(cs->exp->op', 3.4019391052900155e-06], ['s->error', 3.4019391052900155e-06], ['("case', 3.4019391052900155e-06], ['cs->exp->toChars', 3.4019391052900155e-06], ['(cs->exp,', 3.4019391052900155e-06], ['(condtype->arrayOf', 3.4019391052900155e-06], ['(s->cases->dim),', 3.4019391052900155e-06], ['(!condtype->isscalar', 3.4019391052900155e-06], ['condtype->toChars', 3.4019391052900155e-06], ['LABEL_DECLs', 3.4019391052900155e-06], ['refered', 3.4019391052900155e-06], ['(s->cases)', 3.4019391052900155e-06], ['(cs);', 3.4019391052900155e-06], ['(condition', 3.4019391052900155e-06], ['case)', 3.4019391052900155e-06], ['caselabel;', 3.4019391052900155e-06], ['ifcase', 3.4019391052900155e-06], ['(condtype),', 3.4019391052900155e-06], ['(cs->exp));', 3.4019391052900155e-06], ['caselabel);', 3.4019391052900155e-06], ['(ifcase,', 3.4019391052900155e-06], ['cs);', 3.4019391052900155e-06], ['(s->sdefault)', 3.4019391052900155e-06], ['defaultlabel', 3.4019391052900155e-06], ['(s->sdefault);', 3.4019391052900155e-06], ['(defaultlabel);', 3.4019391052900155e-06], ['(defaultlabel)', 3.4019391052900155e-06], ['s->sdefault);', 3.4019391052900155e-06], ['Switch', 3.4019391052900155e-06], ['casebody', 3.4019391052900155e-06], ['switch_expr,', 3.4019391052900155e-06], ['(casebody);', 3.4019391052900155e-06], ['switchexpr', 3.4019391052900155e-06], ['(condition),', 3.4019391052900155e-06], ['casebody);', 3.4019391052900155e-06], ['(switchexpr);', 3.4019391052900155e-06], ['SWITCH_ALL_CASES_P', 3.4019391052900155e-06], ['(switchexpr)', 3.4019391052900155e-06], ['SWITCH_BREAK_LABEL_P', 3.4019391052900155e-06], ["'break'", 3.4019391052900155e-06], ['(CaseStatement', 3.4019391052900155e-06], ['casevalue;', 3.4019391052900155e-06], ['(s->exp->type->isscalar', 3.4019391052900155e-06], ['(s->index,', 3.4019391052900155e-06], ['(Type::tint32));', 3.4019391052900155e-06], ['(casevalue,', 3.4019391052900155e-06], ['(DefaultStatement', 3.4019391052900155e-06], ["default'", 3.4019391052900155e-06], ['DefaultStatement', 3.4019391052900155e-06], ['(GotoDefaultStatement', 3.4019391052900155e-06], ['(s->sw->sdefault);', 3.4019391052900155e-06], ["case'", 3.4019391052900155e-06], ['(GotoCaseStatement', 3.4019391052900155e-06], ['(s->cs);', 3.4019391052900155e-06], ['Throw', 3.4019391052900155e-06], ['SwitchError', 3.4019391052900155e-06], ['DefaultStatement,', 3.4019391052900155e-06], ['(SwitchErrorStatement', 3.4019391052900155e-06], ['(d_assert_call', 3.4019391052900155e-06], ['(s->loc,', 3.4019391052900155e-06], ['LIBCALL_SWITCH_ERROR));', 3.4019391052900155e-06], ['exits', 3.4019391052900155e-06], ['supplies', 3.4019391052900155e-06], ['(ReturnStatement', 3.4019391052900155e-06], ['(s->exp', 3.4019391052900155e-06], ['(NULL_TREE));', 3.4019391052900155e-06], ['*)this->func_->type;', 3.4019391052900155e-06], ['this->func_->tintro', 3.4019391052900155e-06], ['this->func_->tintro->nextOf', 3.4019391052900155e-06], ['tf->nextOf', 3.4019391052900155e-06], ['((this->func_->isMain', 3.4019391052900155e-06], ['this->func_->isCMain', 3.4019391052900155e-06], ['(this->func_->nrvo_can', 3.4019391052900155e-06], ['this->func_->nrvo_var)', 3.4019391052900155e-06], ['DECL_RESULT;', 3.4019391052900155e-06], ['(this->func_));', 3.4019391052900155e-06], ['(s->exp,', 3.4019391052900155e-06], ['(ExpStatement', 3.4019391052900155e-06], ['(s->exp)', 3.4019391052900155e-06], ['(CompoundStatement', 3.4019391052900155e-06], ["(Tuple!(...))'", 3.4019391052900155e-06], ['`do', 3.4019391052900155e-06], ["(0)',", 3.4019391052900155e-06], ['(UnrolledLoopStatement', 3.4019391052900155e-06], ['(ScopeStatement', 3.4019391052900155e-06], ['(s->statement', 3.4019391052900155e-06], ['(WithStatement', 3.4019391052900155e-06], ['(level_with);', 3.4019391052900155e-06], ['(s->wthis)', 3.4019391052900155e-06], ['initialisation', 3.4019391052900155e-06], ["'with'", 3.4019391052900155e-06], ['s->wthis->_init->isExpInitializer', 3.4019391052900155e-06], ['(ie', 3.4019391052900155e-06], ['(s->wthis);', 3.4019391052900155e-06], ['(ie->exp);', 3.4019391052900155e-06], ["'throw", 3.4019391052900155e-06], ["Object'.", 3.4019391052900155e-06], ['Object.', 3.4019391052900155e-06], ['Foreign', 3.4019391052900155e-06], ['(ThrowStatement', 3.4019391052900155e-06], ['()->isClassHandle', 3.4019391052900155e-06], ['(!flag_exceptions)', 3.4019391052900155e-06], ['(!warned)', 3.4019391052900155e-06], ['"exception', 3.4019391052900155e-06], ['-fexceptions', 3.4019391052900155e-06], ['enable");', 3.4019391052900155e-06], ['id->isCPPclass', 3.4019391052900155e-06], ['classes");', 3.4019391052900155e-06], ['(cd->com', 3.4019391052900155e-06], ['id->com))', 3.4019391052900155e-06], ['COM', 3.4019391052900155e-06], ['objects");', 3.4019391052900155e-06], ['(get_object_type', 3.4019391052900155e-06], ['(build_libcall', 3.4019391052900155e-06], ['(LIBCALL_THROW,', 3.4019391052900155e-06], ['arg));', 3.4019391052900155e-06], ['try-catch', 3.4019391052900155e-06], ["(failure)'", 3.4019391052900155e-06], ['(TryCatchStatement', 3.4019391052900155e-06], ['(s->catches)', 3.4019391052900155e-06], ['s->catches->dim;', 3.4019391052900155e-06], ['*vcatch', 3.4019391052900155e-06], ['(*s->catches)[i];', 3.4019391052900155e-06], ['(level_catch);', 3.4019391052900155e-06], ['(BUILT_IN_EH_POINTER);', 3.4019391052900155e-06], ['catchtype', 3.4019391052900155e-06], ['(vcatch->type);', 3.4019391052900155e-06], ['(ehptr,', 3.4019391052900155e-06], ['*tcatch', 3.4019391052900155e-06], ['vcatch->type->toBasetype', 3.4019391052900155e-06], ['tcatch->isClassHandle', 3.4019391052900155e-06], ['LIBCALL_CXA_BEGIN_CATCH', 3.4019391052900155e-06], ['LIBCALL_BEGIN_CATCH;', 3.4019391052900155e-06], ['vcatch->type,', 3.4019391052900155e-06], ['ehptr);', 3.4019391052900155e-06], ['(vcatch->var)', 3.4019391052900155e-06], ['__gdc_begin_catch()', 3.4019391052900155e-06], ['uncaught', 3.4019391052900155e-06], ['(vcatch->handler)', 3.4019391052900155e-06], ['(vcatch->handler);', 3.4019391052900155e-06], ['callback.', 3.4019391052900155e-06], ['endcatch', 3.4019391052900155e-06], ['(LIBCALL_CXA_END_CATCH,', 3.4019391052900155e-06], ['catchbody,', 3.4019391052900155e-06], ['endcatch);', 3.4019391052900155e-06], ['(CATCH_EXPR,', 3.4019391052900155e-06], ['catchtype,', 3.4019391052900155e-06], ['catchbody));', 3.4019391052900155e-06], ['TRY_CATCH_EXPR', 3.4019391052900155e-06], ['push.', 3.4019391052900155e-06], ['(catches)', 3.4019391052900155e-06], ['(catches,', 3.4019391052900155e-06], ['(TRY_CATCH_EXPR,', 3.4019391052900155e-06], ['catches));', 3.4019391052900155e-06], ['try-finally', 3.4019391052900155e-06], ["(exit)'", 3.4019391052900155e-06], ['(TryFinallyStatement', 3.4019391052900155e-06], ['(level_finally);', 3.4019391052900155e-06], ['(s->finalbody)', 3.4019391052900155e-06], ['(s->finalbody);', 3.4019391052900155e-06], ['finally));', 3.4019391052900155e-06], ['`synchronized', 3.4019391052900155e-06], ['monitor/critical', 3.4019391052900155e-06], ['enter', 3.4019391052900155e-06], ['wrapped', 3.4019391052900155e-06], ['try/finally.', 3.4019391052900155e-06], ['(SynchronizedStatement', 3.4019391052900155e-06], ['Inline', 3.4019391052900155e-06], ['Assembler', 3.4019391052900155e-06], ['implemented,', 3.4019391052900155e-06], ['leverage', 3.4019391052900155e-06], ['GccAsmStatement', 3.4019391052900155e-06], ['(AsmStatement', 3.4019391052900155e-06], ['("D', 3.4019391052900155e-06], ['GDC.");', 3.4019391052900155e-06], ['INSN', 3.4019391052900155e-06], ['OUTPUTS,', 3.4019391052900155e-06], ['INPUTS,', 3.4019391052900155e-06], ['CLOBBERS.', 3.4019391052900155e-06], ['(GccAsmStatement', 3.4019391052900155e-06], ['*insn', 3.4019391052900155e-06], ['*)s->insn;', 3.4019391052900155e-06], ['s->args->dim;', 3.4019391052900155e-06], ['(*s->names)[i];', 3.4019391052900155e-06], ['*sname', 3.4019391052900155e-06], ['name->toChars', 3.4019391052900155e-06], ['(sname),', 3.4019391052900155e-06], ['sname)', 3.4019391052900155e-06], ['*constr', 3.4019391052900155e-06], ['*)(*s->constraints)[i];', 3.4019391052900155e-06], ['*)(constr->len', 3.4019391052900155e-06], ['constr->string', 3.4019391052900155e-06], ['(constr->len,', 3.4019391052900155e-06], ['*earg', 3.4019391052900155e-06], ['(*s->args)[i];', 3.4019391052900155e-06], ['(earg);', 3.4019391052900155e-06], ['s->outputargs)', 3.4019391052900155e-06], ['(outputs,', 3.4019391052900155e-06], ['(inputs,', 3.4019391052900155e-06], ['(s->clobbers)', 3.4019391052900155e-06], ['s->clobbers->dim;', 3.4019391052900155e-06], ['*clobber', 3.4019391052900155e-06], ['*)(*s->clobbers)[i];', 3.4019391052900155e-06], ['*)(clobber->len', 3.4019391052900155e-06], ['clobber->string', 3.4019391052900155e-06], ['(clobber->len,', 3.4019391052900155e-06], ['(clobbers,', 3.4019391052900155e-06], ['(s->labels)', 3.4019391052900155e-06], ['s->labels->dim;', 3.4019391052900155e-06], ['(*s->labels)[i];', 3.4019391052900155e-06], ['GotoStatement', 3.4019391052900155e-06], ['*gs', 3.4019391052900155e-06], ['(*s->gotos)[i];', 3.4019391052900155e-06], ['(gs->label->statement', 3.4019391052900155e-06], ['(gs->tf', 3.4019391052900155e-06], ['gs->label->statement->tf);', 3.4019391052900155e-06], ['*sident', 3.4019391052900155e-06], ['(sident),', 3.4019391052900155e-06], ['sident);', 3.4019391052900155e-06], ['(gs->label->statement,', 3.4019391052900155e-06], ['gs->label->ident);', 3.4019391052900155e-06], ['(labels,', 3.4019391052900155e-06], ['validation', 3.4019391052900155e-06], ['*insnstring', 3.4019391052900155e-06], ['*)(insn->len', 3.4019391052900155e-06], ['insn->string', 3.4019391052900155e-06], ['(insn->len,', 3.4019391052900155e-06], ['insnstring);', 3.4019391052900155e-06], ['resolve_asm_operand_names', 3.4019391052900155e-06], ['noutputs', 3.4019391052900155e-06], ['s->outputargs;', 3.4019391052900155e-06], ['ninputs', 3.4019391052900155e-06], ['(s->args->dim', 3.4019391052900155e-06], ['**oconstraints', 3.4019391052900155e-06], ['allows_mem,', 3.4019391052900155e-06], ['allows_reg,', 3.4019391052900155e-06], ['is_inout;', 3.4019391052900155e-06], ['outputs;', 3.4019391052900155e-06], ['oconstraints[i]', 3.4019391052900155e-06], ['constraint;', 3.4019391052900155e-06], ['(parse_output_constraint', 3.4019391052900155e-06], ['&allows_reg,', 3.4019391052900155e-06], ['&is_inout))', 3.4019391052900155e-06], ['(!allows_reg)', 3.4019391052900155e-06], ['(parse_input_constraint', 3.4019391052900155e-06], ['oconstraints,', 3.4019391052900155e-06], ['&allows_reg))', 3.4019391052900155e-06], ['(!allows_reg', 3.4019391052900155e-06], ['allows_mem)', 3.4019391052900155e-06], ['input;', 3.4019391052900155e-06], ['build5', 3.4019391052900155e-06], ['clobbers,', 3.4019391052900155e-06], ['(s->loc));', 3.4019391052900155e-06], ['syntax', 3.4019391052900155e-06], ['ASM_EXPR.', 3.4019391052900155e-06], ['(s->args', 3.4019391052900155e-06], ['s->clobbers', 3.4019391052900155e-06], ['ASM_INPUT_P', 3.4019391052900155e-06], ['Asm', 3.4019391052900155e-06], ["'pure'.", 3.4019391052900155e-06], ['ASM_VOLATILE_P', 3.4019391052900155e-06], ['!(s->stc', 3.4019391052900155e-06], ['STCpure);', 3.4019391052900155e-06], ['(ImportStatement', 3.4019391052900155e-06], ['(s->imports', 3.4019391052900155e-06], ['s->imports->dim;', 3.4019391052900155e-06], ['(*s->imports)[i];', 3.4019391052900155e-06], ['(fd->loc);', 3.4019391052900155e-06], ['v.build_stmt', 3.4019391052900155e-06], ['(fd->fbody);', 3.4019391052900155e-06], ['typeinfo.cc', 3.4019391052900155e-06], ['identification.', 3.4019391052900155e-06], ['retrieved', 3.4019391052900155e-06], ["`typeid()'.", 3.4019391052900155e-06], ['helpers,', 3.4019391052900155e-06], ["`new',", 3.4019391052900155e-06], ["`delete',", 3.4019391052900155e-06], ['forward,', 3.4019391052900155e-06], ["`object.d',", 3.4019391052900155e-06], ['`rt/typeinfo`.', 3.4019391052900155e-06], ['POD-structs', 3.4019391052900155e-06], ['user,', 3.4019391052900155e-06], ['TK_TYPEINFO_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo', 3.4019391052900155e-06], ['TK_CLASSINFO_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Class', 3.4019391052900155e-06], ['TK_INTERFACE_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Interface', 3.4019391052900155e-06], ['TK_STRUCT_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Struct', 3.4019391052900155e-06], ['TK_POINTER_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Pointer', 3.4019391052900155e-06], ['TK_ARRAY_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Array', 3.4019391052900155e-06], ['TK_STATICARRAY_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_StaticArray', 3.4019391052900155e-06], ['TK_ASSOCIATIVEARRAY_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_AssociativeArray', 3.4019391052900155e-06], ['TK_VECTOR_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Vector', 3.4019391052900155e-06], ['TK_ENUMERAL_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Enum', 3.4019391052900155e-06], ['TK_FUNCTION_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Function', 3.4019391052900155e-06], ['TK_DELEGATE_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Delegate', 3.4019391052900155e-06], ['TK_TYPELIST_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Tuple', 3.4019391052900155e-06], ['TK_CONST_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Const', 3.4019391052900155e-06], ['TK_IMMUTABLE_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Invariant', 3.4019391052900155e-06], ['TK_SHARED_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Shared', 3.4019391052900155e-06], ['TK_INOUT_TYPE,', 3.4019391052900155e-06], ['object.TypeInfo_Inout', 3.4019391052900155e-06], ['TK_CPPTI_TYPE,', 3.4019391052900155e-06], ['object.__cpp_type_info_ptr', 3.4019391052900155e-06], ['TK_END', 3.4019391052900155e-06], ['early,', 3.4019391052900155e-06], ['tinfo_types[TK_END];', 3.4019391052900155e-06], ['shared/const', 3.4019391052900155e-06], ['(type->isShared', 3.4019391052900155e-06], ['TK_SHARED_TYPE;', 3.4019391052900155e-06], ['(type->isConst', 3.4019391052900155e-06], ['TK_CONST_TYPE;', 3.4019391052900155e-06], ['(type->isImmutable', 3.4019391052900155e-06], ['TK_IMMUTABLE_TYPE;', 3.4019391052900155e-06], ['(type->isWild', 3.4019391052900155e-06], ['TK_INOUT_TYPE;', 3.4019391052900155e-06], ['(type->ty)', 3.4019391052900155e-06], ['TK_POINTER_TYPE;', 3.4019391052900155e-06], ['TK_ARRAY_TYPE;', 3.4019391052900155e-06], ['TK_STATICARRAY_TYPE;', 3.4019391052900155e-06], ['TK_ASSOCIATIVEARRAY_TYPE;', 3.4019391052900155e-06], ['TK_STRUCT_TYPE;', 3.4019391052900155e-06], ['TK_VECTOR_TYPE;', 3.4019391052900155e-06], ['Tenum:', 3.4019391052900155e-06], ['TK_ENUMERAL_TYPE;', 3.4019391052900155e-06], ['Tfunction:', 3.4019391052900155e-06], ['TK_FUNCTION_TYPE;', 3.4019391052900155e-06], ['TK_DELEGATE_TYPE;', 3.4019391052900155e-06], ['Ttuple:', 3.4019391052900155e-06], ['TK_TYPELIST_TYPE;', 3.4019391052900155e-06], ['TK_INTERFACE_TYPE;', 3.4019391052900155e-06], ['TK_CLASSINFO_TYPE;', 3.4019391052900155e-06], ['TK_TYPEINFO_TYPE;', 3.4019391052900155e-06], ['derivative', 3.4019391052900155e-06], ["`object.d'", 3.4019391052900155e-06], ['(tinfo_kind', 3.4019391052900155e-06], ['tk,', 3.4019391052900155e-06], ['(field_type', 3.4019391052900155e-06], ['(field_type,', 3.4019391052900155e-06], ['tinfo_types[tk]', 3.4019391052900155e-06], ['create_tinfo_types.', 3.4019391052900155e-06], ['*mod,', 3.4019391052900155e-06], ['(!base)', 3.4019391052900155e-06], ['Type::dtypeinfo;', 3.4019391052900155e-06], ['(!mod->_scope)', 3.4019391052900155e-06], ['mod->importAll', 3.4019391052900155e-06], ['(mod->md)', 3.4019391052900155e-06], ['mod->md->loc', 3.4019391052900155e-06], ['mod->loc;', 3.4019391052900155e-06], ['*tinfo', 3.4019391052900155e-06], ['ClassDeclaration::create', 3.4019391052900155e-06], ['tinfo->parent', 3.4019391052900155e-06], ['tinfo->semantic', 3.4019391052900155e-06], ['(mod->_scope);', 3.4019391052900155e-06], ['tinfo->baseClass', 3.4019391052900155e-06], ['documentation', 3.4019391052900155e-06], ['(TK_TYPEINFO_TYPE,', 3.4019391052900155e-06], ['(TK_CLASSINFO_TYPE,', 3.4019391052900155e-06], ['("TypeInfo_Class"),', 3.4019391052900155e-06], ['d_uint_type,', 3.4019391052900155e-06], ['existing,', 3.4019391052900155e-06], ['stubs.', 3.4019391052900155e-06], ['(!Type::dtypeinfo)', 3.4019391052900155e-06], ['(!Type::typeinfoclass)', 3.4019391052900155e-06], ['("TypeInfo_Class"));', 3.4019391052900155e-06], ['(!Type::typeinfointerface)', 3.4019391052900155e-06], ['("TypeInfo_Interface"));', 3.4019391052900155e-06], ['(!Type::typeinfostruct)', 3.4019391052900155e-06], ['("TypeInfo_Struct"));', 3.4019391052900155e-06], ['(!Type::typeinfopointer)', 3.4019391052900155e-06], ['("TypeInfo_Pointer"));', 3.4019391052900155e-06], ['(!Type::typeinfoarray)', 3.4019391052900155e-06], ['("TypeInfo_Array"));', 3.4019391052900155e-06], ['(!Type::typeinfostaticarray)', 3.4019391052900155e-06], ['("TypeInfo_StaticArray"));', 3.4019391052900155e-06], ['(!Type::typeinfoassociativearray)', 3.4019391052900155e-06], ['("TypeInfo_AssociativeArray"));', 3.4019391052900155e-06], ['(!Type::typeinfoenum)', 3.4019391052900155e-06], ['("TypeInfo_Enum"));', 3.4019391052900155e-06], ['(!Type::typeinfofunction)', 3.4019391052900155e-06], ['("TypeInfo_Function"));', 3.4019391052900155e-06], ['(!Type::typeinfodelegate)', 3.4019391052900155e-06], ['("TypeInfo_Delegate"));', 3.4019391052900155e-06], ['(!Type::typeinfotypelist)', 3.4019391052900155e-06], ['("TypeInfo_Tuple"));', 3.4019391052900155e-06], ['(!Type::typeinfoconst)', 3.4019391052900155e-06], ['("TypeInfo_Const"));', 3.4019391052900155e-06], ['(!Type::typeinfoinvariant)', 3.4019391052900155e-06], ['("TypeInfo_Invariant"),', 3.4019391052900155e-06], ['(!Type::typeinfoshared)', 3.4019391052900155e-06], ['("TypeInfo_Shared"),', 3.4019391052900155e-06], ['(!Type::typeinfowild)', 3.4019391052900155e-06], ['("TypeInfo_Wild"),', 3.4019391052900155e-06], ['(!Type::typeinfovector)', 3.4019391052900155e-06], ['("TypeInfo_Vector"));', 3.4019391052900155e-06], ['(!ClassDeclaration::cpp_type_info_ptr)', 3.4019391052900155e-06], ['*init_;', 3.4019391052900155e-06], ['layout_field', 3.4019391052900155e-06], ['(this->init_,', 3.4019391052900155e-06], ['layout_string', 3.4019391052900155e-06], ['__vptr', 3.4019391052900155e-06], ['__monitor', 3.4019391052900155e-06], ['layout_base', 3.4019391052900155e-06], ['layout_interfaces', 3.4019391052900155e-06], ['vtblInterfaces', 3.4019391052900155e-06], ['(cd->vtblInterfaces->dim),', 3.4019391052900155e-06], ['(offset)));', 3.4019391052900155e-06], ['Internally,', 3.4019391052900155e-06], ['void*[4]', 3.4019391052900155e-06], ['classinfo;', 3.4019391052900155e-06], ['b->fillVtbl', 3.4019391052900155e-06], ['&b->vtbl,', 3.4019391052900155e-06], ['(voffset', 3.4019391052900155e-06], ['0u);', 3.4019391052900155e-06], ['(voffset));', 3.4019391052900155e-06], ['(id->vtbl.dim));', 3.4019391052900155e-06], ['(b->offset));', 3.4019391052900155e-06], ['(cd->vtblInterfaces->dim', 3.4019391052900155e-06], ['interfacing', 3.4019391052900155e-06], ['vtable[]', 3.4019391052900155e-06], ['BCD', 3.4019391052900155e-06], ['layout_base_vtable', 3.4019391052900155e-06], ['*bcd,', 3.4019391052900155e-06], ['(*bcd->vtblInterfaces)[index];', 3.4019391052900155e-06], ['bs->sym;', 3.4019391052900155e-06], ['bvtbl;', 3.4019391052900155e-06], ['bvtbl', 3.4019391052900155e-06], ['!bs->fillVtbl', 3.4019391052900155e-06], ['&bvtbl,', 3.4019391052900155e-06], ['(id->vtblOffset', 3.4019391052900155e-06], ['(vtbl_interface_type_node));', 3.4019391052900155e-06], ['(bcd)),', 3.4019391052900155e-06], ['id->vtblOffset', 3.4019391052900155e-06], ['id->vtbl.dim;', 3.4019391052900155e-06], ['bcd)', 3.4019391052900155e-06], ['bs->vtbl[i]', 3.4019391052900155e-06], ['bvtbl[i];', 3.4019391052900155e-06], ['(make_thunk', 3.4019391052900155e-06], ['bs->offset));', 3.4019391052900155e-06], ['completed', 3.4019391052900155e-06], ['(this->type_,', 3.4019391052900155e-06], ['this->init_);', 3.4019391052900155e-06], ['(Type::dtypeinfo);', 3.4019391052900155e-06], ['TypeInfo_Const', 3.4019391052900155e-06], ['(TypeInfoConstDeclaration', 3.4019391052900155e-06], ['TypeInfo_Const.', 3.4019391052900155e-06], ['(Type::typeinfoconst);', 3.4019391052900155e-06], ['TypeInfo_Immutable', 3.4019391052900155e-06], ['(TypeInfoInvariantDeclaration', 3.4019391052900155e-06], ['TypeInfo_Invariant.', 3.4019391052900155e-06], ['(Type::typeinfoinvariant);', 3.4019391052900155e-06], ['TypeInfo_Shared', 3.4019391052900155e-06], ['(TypeInfoSharedDeclaration', 3.4019391052900155e-06], ['d->tinfo->unSharedOf', 3.4019391052900155e-06], ['TypeInfo_Shared.', 3.4019391052900155e-06], ['(Type::typeinfoshared);', 3.4019391052900155e-06], ['unshared', 3.4019391052900155e-06], ['TypeInfo_Inout', 3.4019391052900155e-06], ['(TypeInfoWildDeclaration', 3.4019391052900155e-06], ['TypeInfo_Inout.', 3.4019391052900155e-06], ['(Type::typeinfowild);', 3.4019391052900155e-06], ['TypeInfo_Enum', 3.4019391052900155e-06], ['(TypeInfoEnumDeclaration', 3.4019391052900155e-06], ['Tenum);', 3.4019391052900155e-06], ['EnumDeclaration', 3.4019391052900155e-06], ['*ed', 3.4019391052900155e-06], ['TypeInfo_Enum.', 3.4019391052900155e-06], ['(Type::typeinfoenum);', 3.4019391052900155e-06], ['memtype', 3.4019391052900155e-06], ['(memtype);', 3.4019391052900155e-06], ['(ed->toPrettyChars', 3.4019391052900155e-06], ['enum.', 3.4019391052900155e-06], ['(ed->members', 3.4019391052900155e-06], ['!d->tinfo->isZeroInit', 3.4019391052900155e-06], ['(ed->type->size', 3.4019391052900155e-06], ['(enum_initializer_decl', 3.4019391052900155e-06], ['(ed));', 3.4019391052900155e-06], ['TypeInfo_Pointer', 3.4019391052900155e-06], ['m_next;', 3.4019391052900155e-06], ['(TypeInfoPointerDeclaration', 3.4019391052900155e-06], ['TypeInfo_Pointer.', 3.4019391052900155e-06], ['(Type::typeinfopointer);', 3.4019391052900155e-06], ['pointer-to', 3.4019391052900155e-06], ['TypeInfo_Array', 3.4019391052900155e-06], ['(TypeInfoArrayDeclaration', 3.4019391052900155e-06], ['TypeInfo_Array.', 3.4019391052900155e-06], ['(Type::typeinfoarray);', 3.4019391052900155e-06], ['TypeInfo_StaticArray', 3.4019391052900155e-06], ['(TypeInfoStaticArrayDeclaration', 3.4019391052900155e-06], ['TypeInfo_StaticArray.', 3.4019391052900155e-06], ['(Type::typeinfostaticarray);', 3.4019391052900155e-06], ['(ti->dim->toInteger', 3.4019391052900155e-06], ['TypeInfo_AssociativeArray', 3.4019391052900155e-06], ['(TypeInfoAssociativeArrayDeclaration', 3.4019391052900155e-06], ['TypeInfo_AssociativeArray.', 3.4019391052900155e-06], ['(Type::typeinfoassociativearray);', 3.4019391052900155e-06], ['(ti->index));', 3.4019391052900155e-06], ['TypeInfo_Vector', 3.4019391052900155e-06], ['(TypeInfoVectorDeclaration', 3.4019391052900155e-06], ['Tvector);', 3.4019391052900155e-06], ['TypeVector', 3.4019391052900155e-06], ['TypeInfo_Vector.', 3.4019391052900155e-06], ['(Type::typeinfovector);', 3.4019391052900155e-06], ['(ti->basetype));', 3.4019391052900155e-06], ['TypeInfo_Function', 3.4019391052900155e-06], ['(TypeInfoFunctionDeclaration', 3.4019391052900155e-06], ['Tfunction', 3.4019391052900155e-06], ['TypeInfo_Function.', 3.4019391052900155e-06], ['(Type::typeinfofunction);', 3.4019391052900155e-06], ['TypeInfo_Delegate', 3.4019391052900155e-06], ['(TypeInfoDelegateDeclaration', 3.4019391052900155e-06], ['Tdelegate', 3.4019391052900155e-06], ['TypeInfo_Delegate.', 3.4019391052900155e-06], ['(Type::typeinfodelegate);', 3.4019391052900155e-06], ['ClassInfo/TypeInfo_Class', 3.4019391052900155e-06], ['Interface[]', 3.4019391052900155e-06], ['interfaces;', 3.4019391052900155e-06], ['write.', 3.4019391052900155e-06], ['ClassInfo.', 3.4019391052900155e-06], ['(Type::typeinfoclass);', 3.4019391052900155e-06], ['(!cd->members)', 3.4019391052900155e-06], ['(cd->structsize),', 3.4019391052900155e-06], ['(init));', 3.4019391052900155e-06], ['cd->ident->toChars', 3.4019391052900155e-06], ['(!(strlen', 3.4019391052900155e-06], ['9', 3.4019391052900155e-06], ['"TypeInfo_",', 3.4019391052900155e-06], ['9)', 3.4019391052900155e-06], ['cd->toPrettyChars', 3.4019391052900155e-06], ['(cd->vtbl.dim),', 3.4019391052900155e-06], ['(cd->baseClass))', 3.4019391052900155e-06], ['(cd->dtor)', 3.4019391052900155e-06], ['(cd->dtor))', 3.4019391052900155e-06], ['inv', 3.4019391052900155e-06], ['(cd->inv)', 3.4019391052900155e-06], ['(cd->inv))', 3.4019391052900155e-06], ['(inv);', 3.4019391052900155e-06], ['(cd->isCOMclass', 3.4019391052900155e-06], ['ClassFlags::isCPPclass;', 3.4019391052900155e-06], ['ClassFlags::hasGetMembers;', 3.4019391052900155e-06], ['(cd->ctor)', 3.4019391052900155e-06], ['ClassFlags::hasCtor;', 3.4019391052900155e-06], ['(bcd->dtor)', 3.4019391052900155e-06], ['ClassFlags::hasDtor;', 3.4019391052900155e-06], ['(cd->isAbstract', 3.4019391052900155e-06], ['ClassFlags::isAbstract;', 3.4019391052900155e-06], ['(!bcd->members)', 3.4019391052900155e-06], ['bcd->members->dim;', 3.4019391052900155e-06], ['*sm', 3.4019391052900155e-06], ['(*bcd->members)[i];', 3.4019391052900155e-06], ['(sm->hasPointers', 3.4019391052900155e-06], ['Lhaspointers;', 3.4019391052900155e-06], ['ClassFlags::noPointers;', 3.4019391052900155e-06], ['Lhaspointers:', 3.4019391052900155e-06], ['ddtor', 3.4019391052900155e-06], ['(cd->aggDelete)', 3.4019391052900155e-06], ['(cd->aggDelete))', 3.4019391052900155e-06], ['(ddtor);', 3.4019391052900155e-06], ['(cd->defaultCtor', 3.4019391052900155e-06], ['!(cd->defaultCtor->storage_class', 3.4019391052900155e-06], ['dctor', 3.4019391052900155e-06], ['(cd->defaultCtor);', 3.4019391052900155e-06], ['(dctor));', 3.4019391052900155e-06], ['(!(flags', 3.4019391052900155e-06], ['ClassFlags::noPointers))', 3.4019391052900155e-06], ['(cd->toPrettyChars', 3.4019391052900155e-06], ['(cd->isCOMinterface', 3.4019391052900155e-06], ['Interfaces.', 3.4019391052900155e-06], ['(interfaces', 3.4019391052900155e-06], ['(interfaces);', 3.4019391052900155e-06], ['cd,', 3.4019391052900155e-06], ['bcd,', 3.4019391052900155e-06], ['TypeInfo_Interface', 3.4019391052900155e-06], ['info;', 3.4019391052900155e-06], ['(TypeInfoInterfaceDeclaration', 3.4019391052900155e-06], ['(!ti->sym->vclassinfo)', 3.4019391052900155e-06], ['ti->sym->vclassinfo', 3.4019391052900155e-06], ['TypeInfo_Interface.', 3.4019391052900155e-06], ['(Type::typeinfointerface);', 3.4019391052900155e-06], ['tidecl', 3.4019391052900155e-06], ['(ti->sym->vclassinfo);', 3.4019391052900155e-06], ['(tidecl));', 3.4019391052900155e-06], ['(X86_64)', 3.4019391052900155e-06], ['(TypeInfoStructDeclaration', 3.4019391052900155e-06], ['TypeInfo_Struct.', 3.4019391052900155e-06], ['(Type::typeinfostruct);', 3.4019391052900155e-06], ['(!sd->members)', 3.4019391052900155e-06], ['(sd->toPrettyChars', 3.4019391052900155e-06], ['(sd->zeroInit)', 3.4019391052900155e-06], ['null_pointer_node', 3.4019391052900155e-06], ['(aggregate_initializer_decl', 3.4019391052900155e-06], ['(sd));', 3.4019391052900155e-06], ['(sd->structsize),', 3.4019391052900155e-06], ['xhash', 3.4019391052900155e-06], ['(sd->xhash))', 3.4019391052900155e-06], ['(xhash);', 3.4019391052900155e-06], ['sd->xhash->type;', 3.4019391052900155e-06], ['(!tf->isnothrow', 3.4019391052900155e-06], ['TRUSTsystem)', 3.4019391052900155e-06], ['(sd->xhash->loc,', 3.4019391052900155e-06], ['"toHash()', 3.4019391052900155e-06], ['"extern', 3.4019391052900155e-06], ['toHash()', 3.4019391052900155e-06], ['@safe,', 3.4019391052900155e-06], ['tf->toChars', 3.4019391052900155e-06], ['xeq', 3.4019391052900155e-06], ['(sd->xeq)', 3.4019391052900155e-06], ['(sd->xeq))', 3.4019391052900155e-06], ['(xeq);', 3.4019391052900155e-06], ['xcmp', 3.4019391052900155e-06], ['(sd->xcmp)', 3.4019391052900155e-06], ['(sd->xcmp))', 3.4019391052900155e-06], ['(xcmp);', 3.4019391052900155e-06], ['*fdx', 3.4019391052900155e-06], ['search_toString', 3.4019391052900155e-06], ['(fdx)', 3.4019391052900155e-06], ['(fdx)));', 3.4019391052900155e-06], ['StructFlags::Type', 3.4019391052900155e-06], ['(ti->hasPointers', 3.4019391052900155e-06], ['StructFlags::hasPointers;', 3.4019391052900155e-06], ['(m_flags));', 3.4019391052900155e-06], ['(sd->dtor))', 3.4019391052900155e-06], ['(sd->postblit', 3.4019391052900155e-06], ['!(sd->postblit->storage_class', 3.4019391052900155e-06], ['(sd->postblit)));', 3.4019391052900155e-06], ['(ti->alignsize', 3.4019391052900155e-06], ['(global.params.is64bit)', 3.4019391052900155e-06], ['arg1type', 3.4019391052900155e-06], ['(arg1type);', 3.4019391052900155e-06], ['arg2type', 3.4019391052900155e-06], ['(arg2type);', 3.4019391052900155e-06], ['(sd->getRTInfo)', 3.4019391052900155e-06], ['(sd->getRTInfo,', 3.4019391052900155e-06], ['(m_flags', 3.4019391052900155e-06], ['StructFlags::hasPointers)', 3.4019391052900155e-06], ['TypeInfo_Tuple', 3.4019391052900155e-06], ['(TypeInfoTupleDeclaration', 3.4019391052900155e-06], ['Ttuple);', 3.4019391052900155e-06], ['TypeTuple', 3.4019391052900155e-06], ['TypeInfo_Tuple.', 3.4019391052900155e-06], ['(Type::typeinfotypelist);', 3.4019391052900155e-06], ['Type::tvoidptr->sarrayOf', 3.4019391052900155e-06], ['ti->arguments->dim;', 3.4019391052900155e-06], ['(*ti->arguments)[i];', 3.4019391052900155e-06], ['(arg->type));', 3.4019391052900155e-06], ['public,', 3.4019391052900155e-06], ['unit,', 3.4019391052900155e-06], ['VISIBILITY_INTERNAL;', 3.4019391052900155e-06], ['layout_typeinfo,', 3.4019391052900155e-06], ['TypeInfoClassDeclaration', 3.4019391052900155e-06], ['tinfo_types[TK_CLASSINFO_TYPE];', 3.4019391052900155e-06], ['(decl->vtblInterfaces->dim)', 3.4019391052900155e-06], ['Interface,', 3.4019391052900155e-06], ['follow.', 3.4019391052900155e-06], ['(decl->vtblInterfaces->dim', 3.4019391052900155e-06], ['structsize);', 3.4019391052900155e-06], ['decl->vtblInterfaces->dim', 3.4019391052900155e-06], ['decl->vtblInterfaces->dim;', 3.4019391052900155e-06], ['(*decl->vtblInterfaces)[i];', 3.4019391052900155e-06], ['vtables.', 3.4019391052900155e-06], ['decl->baseClass;', 3.4019391052900155e-06], ['placed', 3.4019391052900155e-06], ['builtin_typeinfo_p', 3.4019391052900155e-06], ['Tnull)', 3.4019391052900155e-06], ['!type->mod;', 3.4019391052900155e-06], ['*next', 3.4019391052900155e-06], ['!type->mod', 3.4019391052900155e-06], ['((next->isTypeBasic', 3.4019391052900155e-06], ['!next->mod)', 3.4019391052900155e-06], ['MODimmutable)', 3.4019391052900155e-06], ['MODconst));', 3.4019391052900155e-06], ['(tid->ident->toChars', 3.4019391052900155e-06], ['tinfo_types[get_typeinfo_kind', 3.4019391052900155e-06], ['(tid->tinfo)];', 3.4019391052900155e-06], ['one-only.', 3.4019391052900155e-06], ['(!tid->isInstantiated', 3.4019391052900155e-06], ['(builtin_typeinfo_p', 3.4019391052900155e-06], ['(tid->tinfo))', 3.4019391052900155e-06], ['(tid->tinfo->ty', 3.4019391052900155e-06], ['tid->tinfo;', 3.4019391052900155e-06], ['(tc->sym);', 3.4019391052900155e-06], ['(decl->tinfo->ty', 3.4019391052900155e-06], ['decl->accept', 3.4019391052900155e-06], ['decl->isInterfaceDeclaration', 3.4019391052900155e-06], ['"__Interface"', 3.4019391052900155e-06], ['"__Class",', 3.4019391052900155e-06], ['(type->vtinfo));', 3.4019391052900155e-06], ['layout_classinfo,', 3.4019391052900155e-06], ['__cpp_type_info_ptr,', 3.4019391052900155e-06], ['.classinfo', 3.4019391052900155e-06], ['(ClassDeclaration::cpp_type_info_ptr);', 3.4019391052900155e-06], ['(vptr));', 3.4019391052900155e-06], ['RTTI', 3.4019391052900155e-06], ['extern,', 3.4019391052900155e-06], ['(ident),', 3.4019391052900155e-06], ['unknown_type_node);', 3.4019391052900155e-06], ['(typeinfo)', 3.4019391052900155e-06], ['(typeinfo));', 3.4019391052900155e-06], ['(decl->isCPPclass', 3.4019391052900155e-06], ['(!tinfo_types[TK_CPPTI_TYPE])', 3.4019391052900155e-06], ['(TK_CPPTI_TYPE,', 3.4019391052900155e-06], ['"_cpp_type_info_ptr",', 3.4019391052900155e-06], ['tinfo_types[TK_CPPTI_TYPE];', 3.4019391052900155e-06], ['decl->cpp_type_info_ptr_sym', 3.4019391052900155e-06], ['(decl->cpp_type_info_ptr_sym);', 3.4019391052900155e-06], ["Type's", 3.4019391052900155e-06], ['merged.', 3.4019391052900155e-06], ['type->merge2', 3.4019391052900155e-06], ['*ident;', 3.4019391052900155e-06], ['(!t->vtinfo)', 3.4019391052900155e-06], ['tk', 3.4019391052900155e-06], ['(tk)', 3.4019391052900155e-06], ['TK_SHARED_TYPE:', 3.4019391052900155e-06], ['TK_CONST_TYPE:', 3.4019391052900155e-06], ['TK_IMMUTABLE_TYPE:', 3.4019391052900155e-06], ['TK_INOUT_TYPE:', 3.4019391052900155e-06], ['TK_POINTER_TYPE:', 3.4019391052900155e-06], ['TK_ARRAY_TYPE:', 3.4019391052900155e-06], ['TK_VECTOR_TYPE:', 3.4019391052900155e-06], ['TK_INTERFACE_TYPE:', 3.4019391052900155e-06], ['Kinds', 3.4019391052900155e-06], ['TK_SHARED_TYPE)', 3.4019391052900155e-06], ["'shared'", 3.4019391052900155e-06], ["'shared", 3.4019391052900155e-06], ["const'.", 3.4019391052900155e-06], ['TypeInfoSharedDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Shared");', 3.4019391052900155e-06], ['TK_CONST_TYPE)', 3.4019391052900155e-06], ['TypeInfoConstDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Const");', 3.4019391052900155e-06], ['TK_IMMUTABLE_TYPE)', 3.4019391052900155e-06], ['TypeInfoInvariantDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Invariant");', 3.4019391052900155e-06], ['TK_INOUT_TYPE)', 3.4019391052900155e-06], ['TypeInfoWildDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Wild");', 3.4019391052900155e-06], ['TK_POINTER_TYPE)', 3.4019391052900155e-06], ['TypeInfoPointerDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Pointer");', 3.4019391052900155e-06], ['TK_ARRAY_TYPE)', 3.4019391052900155e-06], ['TypeInfoArrayDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Array");', 3.4019391052900155e-06], ['TK_VECTOR_TYPE)', 3.4019391052900155e-06], ['TypeInfoVectorDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Vector");', 3.4019391052900155e-06], ['TK_INTERFACE_TYPE)', 3.4019391052900155e-06], ['TypeInfoInterfaceDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Interface");', 3.4019391052900155e-06], ['TK_STATICARRAY_TYPE:', 3.4019391052900155e-06], ['("TypeInfo_StaticArray");', 3.4019391052900155e-06], ['TypeInfoStaticArrayDeclaration::create', 3.4019391052900155e-06], ['TK_ASSOCIATIVEARRAY_TYPE:', 3.4019391052900155e-06], ['("TypeInfo_AssociativeArray");', 3.4019391052900155e-06], ['TypeInfoAssociativeArrayDeclaration::create', 3.4019391052900155e-06], ['TK_STRUCT_TYPE:', 3.4019391052900155e-06], ['ABIs', 3.4019391052900155e-06], ['ptr_type_node', 3.4019391052900155e-06], ['("TypeInfo_Struct");', 3.4019391052900155e-06], ['TypeInfoStructDeclaration::create', 3.4019391052900155e-06], ['TK_ENUMERAL_TYPE:', 3.4019391052900155e-06], ['("TypeInfo_Enum");', 3.4019391052900155e-06], ['TypeInfoEnumDeclaration::create', 3.4019391052900155e-06], ['TK_FUNCTION_TYPE:', 3.4019391052900155e-06], ['TK_DELEGATE_TYPE:', 3.4019391052900155e-06], ['TK_FUNCTION_TYPE)', 3.4019391052900155e-06], ['TypeInfoFunctionDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Function");', 3.4019391052900155e-06], ['TK_DELEGATE_TYPE)', 3.4019391052900155e-06], ['TypeInfoDelegateDeclaration::create', 3.4019391052900155e-06], ['("TypeInfo_Delegate");', 3.4019391052900155e-06], ['TK_TYPELIST_TYPE:', 3.4019391052900155e-06], ['("TypeInfo_Tuple");', 3.4019391052900155e-06], ['TypeInfoTupleDeclaration::create', 3.4019391052900155e-06], ['TK_CLASSINFO_TYPE:', 3.4019391052900155e-06], ['TypeInfoDeclaration::create', 3.4019391052900155e-06], ['rt/typeinfo,', 3.4019391052900155e-06], ['(!builtin_typeinfo_p', 3.4019391052900155e-06], ['mod->members->push', 3.4019391052900155e-06], ['merged,', 3.4019391052900155e-06], ["vtinfo's.", 3.4019391052900155e-06], ['(!type->vtinfo)', 3.4019391052900155e-06], ['type->vtinfo', 3.4019391052900155e-06], ['t->vtinfo;', 3.4019391052900155e-06], ['(type->vtinfo', 3.4019391052900155e-06], ['speculative.', 3.4019391052900155e-06], ['(e.g:', 3.4019391052900155e-06], ['opEquals', 3.4019391052900155e-06], ['xopEquals', 3.4019391052900155e-06], ['`unresolved', 3.4019391052900155e-06], ["symbol'", 3.4019391052900155e-06], ['(TypeNext', 3.4019391052900155e-06], ['(t->next)', 3.4019391052900155e-06], ['t->next->accept', 3.4019391052900155e-06], ['t->basetype->accept', 3.4019391052900155e-06], ['t->index->accept', 3.4019391052900155e-06], ['sd->isInstantiated', 3.4019391052900155e-06], ['(ti->minst', 3.4019391052900155e-06], ['sd->requestTypeInfo)', 3.4019391052900155e-06], ['cd->isInstantiated', 3.4019391052900155e-06], ['!ti->minst)', 3.4019391052900155e-06], ['(!t->arguments)', 3.4019391052900155e-06], ['t->arguments->dim;', 3.4019391052900155e-06], ['*tprm', 3.4019391052900155e-06], ['(*t->arguments)[i]->type;', 3.4019391052900155e-06], ['(tprm)', 3.4019391052900155e-06], ['tprm->accept', 3.4019391052900155e-06], ['speculative_type_p', 3.4019391052900155e-06], ['"gt-d-typeinfo.h"', 3.4019391052900155e-06], ['types.cc', 3.4019391052900155e-06], ['ABI,', 3.4019391052900155e-06], ['(Type::tvalist->ty', 3.4019391052900155e-06], ['Type::tvalist))', 3.4019391052900155e-06], ['!empty_aggregate_p', 3.4019391052900155e-06], ['*t1,', 3.4019391052900155e-06], ['*t2)', 3.4019391052900155e-06], ['t1->toBasetype', 3.4019391052900155e-06], ['t2->toBasetype', 3.4019391052900155e-06], ['(tb1', 3.4019391052900155e-06], ['tb2)', 3.4019391052900155e-06], ['mutably', 3.4019391052900155e-06], ['tb1->equivalent', 3.4019391052900155e-06], ['(tb2))', 3.4019391052900155e-06], ["'Object'", 3.4019391052900155e-06], ['(ClassDeclaration::object)', 3.4019391052900155e-06], ['ClassDeclaration::object->type;', 3.4019391052900155e-06], ['("missing', 3.4019391052900155e-06], ['corrupt', 3.4019391052900155e-06], ['object.d");', 3.4019391052900155e-06], ['Type::terror;', 3.4019391052900155e-06], ['SIZE', 3.4019391052900155e-06], ['[arrays/void-arrays],', 3.4019391052900155e-06], ['[arrays/static-arrays],', 3.4019391052900155e-06], ['allowed,', 3.4019391052900155e-06], ['build_range_type', 3.4019391052900155e-06], ['(range,', 3.4019391052900155e-06], ['NFIELDS', 3.4019391052900155e-06], ['ident/type', 3.4019391052900155e-06], ['nfields,', 3.4019391052900155e-06], ['nfields);', 3.4019391052900155e-06], ['nfields;', 3.4019391052900155e-06], ['MOD.', 3.4019391052900155e-06], ['mod)', 3.4019391052900155e-06], ['MODimmutable:', 3.4019391052900155e-06], ['TYPE_QUAL_CONST;', 3.4019391052900155e-06], ['MODshared:', 3.4019391052900155e-06], ['qualtype', 3.4019391052900155e-06], ['quals);', 3.4019391052900155e-06], ["'shared'.", 3.4019391052900155e-06], ['(mod', 3.4019391052900155e-06], ['MODshared)', 3.4019391052900155e-06], ['(qualtype)', 3.4019391052900155e-06], ['qualtype;', 3.4019391052900155e-06], ['(field)));', 3.4019391052900155e-06], ['FIELDS', 3.4019391052900155e-06], ['chain,', 3.4019391052900155e-06], ['(ftype)', 3.4019391052900155e-06], ['anon_aggrname_p', 3.4019391052900155e-06], ['(TYPE_IDENTIFIER', 3.4019391052900155e-06], ['(ftype)))', 3.4019391052900155e-06], ['vfields', 3.4019391052900155e-06], ['(ftype);', 3.4019391052900155e-06], ['(vfields,', 3.4019391052900155e-06], ['(vfields);', 3.4019391052900155e-06], ['voffset,', 3.4019391052900155e-06], ['MEMBERS', 3.4019391052900155e-06], ['INHERITED_P', 3.4019391052900155e-06], ['(Dsymbols', 3.4019391052900155e-06], ['*members,', 3.4019391052900155e-06], ['inherited_p)', 3.4019391052900155e-06], ['members->dim;', 3.4019391052900155e-06], ['(*members)[i];', 3.4019391052900155e-06], ['sym->isVarDeclaration', 3.4019391052900155e-06], ['(!inherited_p', 3.4019391052900155e-06], ['tuple,', 3.4019391052900155e-06], ['(var->aliassym)', 3.4019391052900155e-06], ['TupleDeclaration', 3.4019391052900155e-06], ['var->aliassym->isTupleDeclaration', 3.4019391052900155e-06], ['tmembers;', 3.4019391052900155e-06], ['coerce', 3.4019391052900155e-06], ['td->objects->dim;', 3.4019391052900155e-06], ['*ro', 3.4019391052900155e-06], ['(*td->objects)[j];', 3.4019391052900155e-06], ['(ro->dyncast', 3.4019391052900155e-06], ['DYNCAST_EXPRESSION);', 3.4019391052900155e-06], ['ro;', 3.4019391052900155e-06], ['TOKdsymbol);', 3.4019391052900155e-06], ['DsymbolExp', 3.4019391052900155e-06], ['(DsymbolExp', 3.4019391052900155e-06], ['tmembers.push', 3.4019391052900155e-06], ['(se->s);', 3.4019391052900155e-06], ['(&tmembers,', 3.4019391052900155e-06], ['(var->isField', 3.4019391052900155e-06], ['var->ident', 3.4019391052900155e-06], ['var->ident->toChars', 3.4019391052900155e-06], ['(declaration_type', 3.4019391052900155e-06], ['inherited_p,', 3.4019391052900155e-06], ['var->offset);', 3.4019391052900155e-06], ['struct/union', 3.4019391052900155e-06], ['in-tact', 3.4019391052900155e-06], ['AnonDeclaration', 3.4019391052900155e-06], ['sym->isAnonDeclaration', 3.4019391052900155e-06], ['anon_cnt', 3.4019391052900155e-06], ['buf[32];', 3.4019391052900155e-06], ['anon_aggrname_format', 3.4019391052900155e-06], ['anon_cnt++);', 3.4019391052900155e-06], ['(ad->isunion', 3.4019391052900155e-06], ['(ad->loc),', 3.4019391052900155e-06], ['(ad->decl,', 3.4019391052900155e-06], ['Undoes', 3.4019391052900155e-06], ['setFieldOffset,', 3.4019391052900155e-06], ['accesses.', 3.4019391052900155e-06], ['(ad->anonoffset);', 3.4019391052900155e-06], ['(ad->anonstructsize,', 3.4019391052900155e-06], ['ad->anonalignsize,', 3.4019391052900155e-06], ['ad->anonoffset);', 3.4019391052900155e-06], ['*attrib', 3.4019391052900155e-06], ['sym->isAttribDeclaration', 3.4019391052900155e-06], ['(attrib', 3.4019391052900155e-06], ['attrib->include', 3.4019391052900155e-06], ['(decls,', 3.4019391052900155e-06], ['namespaces.', 3.4019391052900155e-06], ['(sym->isTemplateMixin', 3.4019391052900155e-06], ['sym->isNspace', 3.4019391052900155e-06], ['ScopeDsymbol', 3.4019391052900155e-06], ['*scopesym', 3.4019391052900155e-06], ['sym->isScopeDsymbol', 3.4019391052900155e-06], ['(scopesym->members)', 3.4019391052900155e-06], ['(scopesym->members,', 3.4019391052900155e-06], ['BASE.', 3.4019391052900155e-06], ['base->isClassDeclaration', 3.4019391052900155e-06], ['inherited_p', 3.4019391052900155e-06], ['base);', 3.4019391052900155e-06], ['cd->baseClass);', 3.4019391052900155e-06], ['(Object)', 3.4019391052900155e-06], ['objtype', 3.4019391052900155e-06], ['(cd->type));', 3.4019391052900155e-06], ['id->vtblInterfaces->dim', 3.4019391052900155e-06], ['"__vptr",', 3.4019391052900155e-06], ['TYPE_VFIELD', 3.4019391052900155e-06], ['DECL_FCONTEXT', 3.4019391052900155e-06], ['objtype;', 3.4019391052900155e-06], ['"__monitor",', 3.4019391052900155e-06], ['(cd->vtblInterfaces)', 3.4019391052900155e-06], ['bc->offset);', 3.4019391052900155e-06], ['(base->members)', 3.4019391052900155e-06], ['(base->members,', 3.4019391052900155e-06], ['base->fields.dim);', 3.4019391052900155e-06], ['created.', 3.4019391052900155e-06], ['base->fields.dim;', 3.4019391052900155e-06], ['base->fields[i];', 3.4019391052900155e-06], ['(var->csym', 3.4019391052900155e-06], ['STRUCTSIZE', 3.4019391052900155e-06], ['ALIGNSIZE.', 3.4019391052900155e-06], ['ATTRS', 3.4019391052900155e-06], ['finalized', 3.4019391052900155e-06], ['structsize,', 3.4019391052900155e-06], ['UserAttributeDeclaration', 3.4019391052900155e-06], ['*attrs)', 3.4019391052900155e-06], ['(attrs)', 3.4019391052900155e-06], ['attrs->getAttributes', 3.4019391052900155e-06], ['(&type,', 3.4019391052900155e-06], ['Front-end,', 3.4019391052900155e-06], ['CTYPE', 3.4019391052900155e-06], ['(TypeError', 3.4019391052900155e-06], ['(TypeNull', 3.4019391052900155e-06], ['[type/basic-data-types]', 3.4019391052900155e-06], ['cent', 3.4019391052900155e-06], ['ucent', 3.4019391052900155e-06], ['hardware.', 3.4019391052900155e-06], ['ifloat', 3.4019391052900155e-06], ['idouble', 3.4019391052900155e-06], ['ireal', 3.4019391052900155e-06], ['cfloat', 3.4019391052900155e-06], ['cdouble', 3.4019391052900155e-06], ['creal', 3.4019391052900155e-06], ['wchar', 3.4019391052900155e-06], ['UTF-16', 3.4019391052900155e-06], ['UTF-32', 3.4019391052900155e-06], ['(t->ty)', 3.4019391052900155e-06], ['Tvoid:', 3.4019391052900155e-06], ['Tbool:', 3.4019391052900155e-06], ['d_bool_type;', 3.4019391052900155e-06], ['Tint8:', 3.4019391052900155e-06], ['Tuns8:', 3.4019391052900155e-06], ['d_ubyte_type;', 3.4019391052900155e-06], ['Tint16:', 3.4019391052900155e-06], ['Tuns16:', 3.4019391052900155e-06], ['d_ushort_type;', 3.4019391052900155e-06], ['Tint32:', 3.4019391052900155e-06], ['Tuns32:', 3.4019391052900155e-06], ['d_uint_type;', 3.4019391052900155e-06], ['Tint64:', 3.4019391052900155e-06], ['Tuns64:', 3.4019391052900155e-06], ['d_ulong_type;', 3.4019391052900155e-06], ['Tint128:', 3.4019391052900155e-06], ['Tuns128:', 3.4019391052900155e-06], ['d_ucent_type;', 3.4019391052900155e-06], ['Tfloat32:', 3.4019391052900155e-06], ['Tfloat64:', 3.4019391052900155e-06], ['Tfloat80:', 3.4019391052900155e-06], ['Timaginary32:', 3.4019391052900155e-06], ['ifloat_type_node;', 3.4019391052900155e-06], ['Timaginary64:', 3.4019391052900155e-06], ['idouble_type_node;', 3.4019391052900155e-06], ['Timaginary80:', 3.4019391052900155e-06], ['ireal_type_node;', 3.4019391052900155e-06], ['char8_type_node;', 3.4019391052900155e-06], ['char16_type_node;', 3.4019391052900155e-06], ['char32_type_node;', 3.4019391052900155e-06], ['Derived', 3.4019391052900155e-06], ['(t->next));', 3.4019391052900155e-06], ['consisting', 3.4019391052900155e-06], ['[abi/arrays],', 3.4019391052900155e-06], ['(t->next)));', 3.4019391052900155e-06], ['compile-time,', 3.4019391052900155e-06], ['(t->dim->isConst', 3.4019391052900155e-06], ['t->dim->type->isintegral', 3.4019391052900155e-06], ['t->dim->toUInteger', 3.4019391052900155e-06], ['(t->next,', 3.4019391052900155e-06], ['dimension:', 3.4019391052900155e-06], ['t->dim->toChars', 3.4019391052900155e-06], ['t->basetype)->dim->toUInteger', 3.4019391052900155e-06], ['(t->elementType', 3.4019391052900155e-06], ['rationale', 3.4019391052900155e-06], ['(inner', 3.4019391052900155e-06], ['(Type::tuns8);', 3.4019391052900155e-06], ['sparsely', 3.4019391052900155e-06], ['populated.', 3.4019391052900155e-06], ['[abi/associative-arrays],', 3.4019391052900155e-06], ['consist', 3.4019391052900155e-06], ['opaque,', 3.4019391052900155e-06], ['[function/variadic]', 3.4019391052900155e-06], ['Variadic', 3.4019391052900155e-06], ['t->linkage', 3.4019391052900155e-06], ['(Type::typeinfotypelist->type);', 3.4019391052900155e-06], ['(t->parameters)', 3.4019391052900155e-06], ['n_args', 3.4019391052900155e-06], ['(t->parameters);', 3.4019391052900155e-06], ['n_args;', 3.4019391052900155e-06], ['(Parameter::getNth', 3.4019391052900155e-06], ['(t->parameters,', 3.4019391052900155e-06], ['void_list_node,', 3.4019391052900155e-06], ['variadic.', 3.4019391052900155e-06], ['void_list_node);', 3.4019391052900155e-06], ['(t->next', 3.4019391052900155e-06], ['(t->isref)', 3.4019391052900155e-06], ['parameters?', 3.4019391052900155e-06], ['fnparams);', 3.4019391052900155e-06], ['conventions.', 3.4019391052900155e-06], ['(t->linkage)', 3.4019391052900155e-06], ['LINKpascal:', 3.4019391052900155e-06], ['LINKwindows:', 3.4019391052900155e-06], ['[attribute/linkage]', 3.4019391052900155e-06], ['Windows', 3.4019391052900155e-06], ['Win32,', 3.4019391052900155e-06], ['stdcall', 3.4019391052900155e-06], ['convention.', 3.4019391052900155e-06], ['(!global.params.is64bit)', 3.4019391052900155e-06], ['"stdcall");', 3.4019391052900155e-06], ['LINKc:', 3.4019391052900155e-06], ['LINKcpp:', 3.4019391052900155e-06], ['LINKd:', 3.4019391052900155e-06], ['LINKobjc:', 3.4019391052900155e-06], ['[abi/function-calling-conventions]', 3.4019391052900155e-06], ['[abi/delegates],', 3.4019391052900155e-06], ['dgtype', 3.4019391052900155e-06], ['(Type::tvoidptr),', 3.4019391052900155e-06], ['("funcptr"),', 3.4019391052900155e-06], ['(dgtype));', 3.4019391052900155e-06], ['BOOLEAN_TYPE)', 3.4019391052900155e-06], ['Enums', 3.4019391052900155e-06], ['integral.', 3.4019391052900155e-06], ['these,', 3.4019391052900155e-06], ['ENUMERAL_TYPE.', 3.4019391052900155e-06], ['build_variant_type_copy', 3.4019391052900155e-06], ['(ENUMERAL_TYPE);', 3.4019391052900155e-06], ['ENUM_IS_SCOPED', 3.4019391052900155e-06], ['(flag_short_enums)', 3.4019391052900155e-06], ['t->size', 3.4019391052900155e-06], ['(t->sym->loc)', 3.4019391052900155e-06], ['t->sym->members->dim;', 3.4019391052900155e-06], ['EnumMember', 3.4019391052900155e-06], ['(*t->sym->members)[i]->isEnumMember', 3.4019391052900155e-06], ['seep', 3.4019391052900155e-06], ['(member', 3.4019391052900155e-06], ['(member->ident->toChars', 3.4019391052900155e-06], ['(member->value', 3.4019391052900155e-06], ['()->toInteger', 3.4019391052900155e-06], ['(member->loc),', 3.4019391052900155e-06], ['(values,', 3.4019391052900155e-06], ['TYPE_VALUES', 3.4019391052900155e-06], ['values;', 3.4019391052900155e-06], ['(t->sym->userAttribDecl)', 3.4019391052900155e-06], ['t->sym->userAttribDecl->getAttributes', 3.4019391052900155e-06], ['(&t->ctype,', 3.4019391052900155e-06], ['non-POD', 3.4019391052900155e-06], ['self-references.', 3.4019391052900155e-06], ['(t->sym->isUnionDeclaration', 3.4019391052900155e-06], ['t->sym->structsize;', 3.4019391052900155e-06], ['(t->sym->alignment', 3.4019391052900155e-06], ['t->sym->alignment', 3.4019391052900155e-06], ['t->sym->alignsize;', 3.4019391052900155e-06], ['variants.', 3.4019391052900155e-06], ['(t->sym->postblit', 3.4019391052900155e-06], ['t->sym->dtor)', 3.4019391052900155e-06], ['Whereas', 3.4019391052900155e-06], ['object-orientated', 3.4019391052900155e-06], ['self-references', 3.4019391052900155e-06], ['lang_specific', 3.4019391052900155e-06], ['(t->sym->structsize,', 3.4019391052900155e-06], ['t->sym->alignsize,', 3.4019391052900155e-06], ['basetype;', 3.4019391052900155e-06], ['final,', 3.4019391052900155e-06], ['derivations.', 3.4019391052900155e-06], ['(t->sym->storage_class', 3.4019391052900155e-06], ['TYPE_FINAL_P', 3.4019391052900155e-06], ['off.', 3.4019391052900155e-06], ['(!t->sym->isInterfaceDeclaration', 3.4019391052900155e-06], ['t->sym,', 3.4019391052900155e-06], ['t->sym->vtbl.dim;', 3.4019391052900155e-06], ['t->sym->vtbl[i]->isFuncDeclaration', 3.4019391052900155e-06], ['!chain_member', 3.4019391052900155e-06], ['(method,', 3.4019391052900155e-06], ['(basetype)))', 3.4019391052900155e-06], ['(basetype,', 3.4019391052900155e-06], ['(!t->ctype)', 3.4019391052900155e-06], ['treats', 3.4019391052900155e-06], ['e.g:', 3.4019391052900155e-06], ['(t->isNaked', 3.4019391052900155e-06], ['t->castMod', 3.4019391052900155e-06], ['(!tb->ctype)', 3.4019391052900155e-06], ['(tb->ctype,', 3.4019391052900155e-06], ['t->mod);', 3.4019391052900155e-06], ['go-gcc-diagnostics.cc', 3.4019391052900155e-06], ['Than', 3.4019391052900155e-06], ['McIntosh,', 3.4019391052900155e-06], ['go_be_error_at(const', 3.4019391052900155e-06], ['errmsg)', 3.4019391052900155e-06], ['error_at(gcc_loc,', 3.4019391052900155e-06], ['errmsg.c_str());', 3.4019391052900155e-06], ['go_be_warning_at(const', 3.4019391052900155e-06], ['warningmsg)', 3.4019391052900155e-06], ['warning_at(gcc_loc,', 3.4019391052900155e-06], ['warningmsg.c_str());', 3.4019391052900155e-06], ['go_be_fatal_error(const', 3.4019391052900155e-06], ['fatalmsg)', 3.4019391052900155e-06], ['fatal_error(gcc_loc,', 3.4019391052900155e-06], ['fatalmsg.c_str());', 3.4019391052900155e-06], ['go_be_inform(const', 3.4019391052900155e-06], ['infomsg)', 3.4019391052900155e-06], ['inform(gcc_loc,', 3.4019391052900155e-06], ['infomsg.c_str());', 3.4019391052900155e-06], ['go_be_get_quotechars(const', 3.4019391052900155e-06], ['open_qu,', 3.4019391052900155e-06], ['close_qu)', 3.4019391052900155e-06], ['*open_qu', 3.4019391052900155e-06], ['open_quote;', 3.4019391052900155e-06], ['*close_qu', 3.4019391052900155e-06], ['close_quote;', 3.4019391052900155e-06], ['go-gcc.cc', 3.4019391052900155e-06], ['Ian', 3.4019391052900155e-06], ['Lance', 3.4019391052900155e-06], ['Taylor,', 3.4019391052900155e-06], ['"C",', 3.4019391052900155e-06], ['tree.h', 3.4019391052900155e-06], ['<gmp.h>', 3.4019391052900155e-06], ['"realmpfr.h"', 3.4019391052900155e-06], ['Gcc_tree(tree', 3.4019391052900155e-06], ['t_(t)', 3.4019391052900155e-06], ['get_tree()', 3.4019391052900155e-06], ['set_tree(tree', 3.4019391052900155e-06], ['gcc,', 3.4019391052900155e-06], ['Btype(tree', 3.4019391052900155e-06], ['Bexpression(tree', 3.4019391052900155e-06], ['Bstatement(tree', 3.4019391052900155e-06], ['Bfunction(tree', 3.4019391052900155e-06], ['Bblock', 3.4019391052900155e-06], ['Bblock(tree', 3.4019391052900155e-06], ['Blabel', 3.4019391052900155e-06], ['Blabel(tree', 3.4019391052900155e-06], ['complicated,', 3.4019391052900155e-06], ['if,', 3.4019391052900155e-06], ['say,', 3.4019391052900155e-06], ['non-zero-sized', 3.4019391052900155e-06], ['miscompilation.', 3.4019391052900155e-06], ['orig_type_(NULL)', 3.4019391052900155e-06], ['orig_type)', 3.4019391052900155e-06], ['orig_type_(orig_type)', 3.4019391052900155e-06], ['get_tree(Location)', 3.4019391052900155e-06], ['get_decl()', 3.4019391052900155e-06], ['orig_type_;', 3.4019391052900155e-06], ['Bvariable::get_tree(Location', 3.4019391052900155e-06], ['(this->orig_type_', 3.4019391052900155e-06], ['TREE_TYPE(this->t_)', 3.4019391052900155e-06], ['this->orig_type_)', 3.4019391052900155e-06], ['*(orig_type*)&decl.', 3.4019391052900155e-06], ['this->t_);', 3.4019391052900155e-06], ['build_pointer_type(this->orig_type_),', 3.4019391052900155e-06], ['instantiations', 3.4019391052900155e-06], ['proper.', 3.4019391052900155e-06], ['Gcc_backend', 3.4019391052900155e-06], ['Backend', 3.4019391052900155e-06], ['error_type()', 3.4019391052900155e-06], ['this->make_type(error_mark_node);', 3.4019391052900155e-06], ['void_type()', 3.4019391052900155e-06], ['this->make_type(void_type_node);', 3.4019391052900155e-06], ['bool_type()', 3.4019391052900155e-06], ['this->make_type(boolean_type_node);', 3.4019391052900155e-06], ['integer_type(bool,', 3.4019391052900155e-06], ['float_type(int);', 3.4019391052900155e-06], ['complex_type(int);', 3.4019391052900155e-06], ['pointer_type(Btype*);', 3.4019391052900155e-06], ['function_type(const', 3.4019391052900155e-06], ['Btyped_identifier&,', 3.4019391052900155e-06], ['struct_type(const', 3.4019391052900155e-06], ['array_type(Btype*,', 3.4019391052900155e-06], ['placeholder_pointer_type(const', 3.4019391052900155e-06], ['set_placeholder_pointer_type(Btype*,', 3.4019391052900155e-06], ['set_placeholder_function_type(Btype*,', 3.4019391052900155e-06], ['placeholder_struct_type(const', 3.4019391052900155e-06], ['set_placeholder_struct_type(Btype*', 3.4019391052900155e-06], ['placeholder_array_type(const', 3.4019391052900155e-06], ['set_placeholder_array_type(Btype*,', 3.4019391052900155e-06], ['named_type(const', 3.4019391052900155e-06], ['circular_pointer_type(Btype*,', 3.4019391052900155e-06], ['is_circular_pointer_type(Btype*);', 3.4019391052900155e-06], ['type_size(Btype*);', 3.4019391052900155e-06], ['type_alignment(Btype*);', 3.4019391052900155e-06], ['type_field_alignment(Btype*);', 3.4019391052900155e-06], ['type_field_offset(Btype*,', 3.4019391052900155e-06], ['Expressions.', 3.4019391052900155e-06], ['zero_expression(Btype*);', 3.4019391052900155e-06], ['error_expression()', 3.4019391052900155e-06], ['this->make_expression(error_mark_node);', 3.4019391052900155e-06], ['nil_pointer_expression()', 3.4019391052900155e-06], ['this->make_expression(null_pointer_node);', 3.4019391052900155e-06], ['var_expression(Bvariable*', 3.4019391052900155e-06], ['indirect_expression(Btype*,', 3.4019391052900155e-06], ['named_constant_expression(Btype*', 3.4019391052900155e-06], ['integer_constant_expression(Btype*', 3.4019391052900155e-06], ['float_constant_expression(Btype*', 3.4019391052900155e-06], ['complex_constant_expression(Btype*', 3.4019391052900155e-06], ['string_constant_expression(const', 3.4019391052900155e-06], ['boolean_constant_expression(bool', 3.4019391052900155e-06], ['real_part_expression(Bexpression*', 3.4019391052900155e-06], ['imag_part_expression(Bexpression*', 3.4019391052900155e-06], ['complex_expression(Bexpression*', 3.4019391052900155e-06], ['convert_expression(Btype*', 3.4019391052900155e-06], ['function_code_expression(Bfunction*,', 3.4019391052900155e-06], ['address_expression(Bexpression*,', 3.4019391052900155e-06], ['struct_field_expression(Bexpression*,', 3.4019391052900155e-06], ['compound_expression(Bstatement*,', 3.4019391052900155e-06], ['conditional_expression(Bfunction*,', 3.4019391052900155e-06], ['unary_expression(Operator,', 3.4019391052900155e-06], ['binary_expression(Operator,', 3.4019391052900155e-06], ['constructor_expression(Btype*,', 3.4019391052900155e-06], ['array_constructor_expression(Btype*,', 3.4019391052900155e-06], ['long>&,', 3.4019391052900155e-06], ['pointer_offset_expression(Bexpression*', 3.4019391052900155e-06], ['array_index_expression(Bexpression*', 3.4019391052900155e-06], ['call_expression(Bfunction*', 3.4019391052900155e-06], ['static_chain,', 3.4019391052900155e-06], ['Statements.', 3.4019391052900155e-06], ['error_statement()', 3.4019391052900155e-06], ['this->make_statement(error_mark_node);', 3.4019391052900155e-06], ['expression_statement(Bfunction*,', 3.4019391052900155e-06], ['init_statement(Bfunction*,', 3.4019391052900155e-06], ['assignment_statement(Bfunction*,', 3.4019391052900155e-06], ['return_statement(Bfunction*,', 3.4019391052900155e-06], ['if_statement(Bfunction*,', 3.4019391052900155e-06], ['switch_statement(Bfunction*', 3.4019391052900155e-06], ['compound_statement(Bstatement*,', 3.4019391052900155e-06], ['Bstatement*);', 3.4019391052900155e-06], ['statement_list(const', 3.4019391052900155e-06], ['exception_handler_statement(Bstatement*', 3.4019391052900155e-06], ['Blocks.', 3.4019391052900155e-06], ['block(Bfunction*,', 3.4019391052900155e-06], ['std::vector<Bvariable*>&,', 3.4019391052900155e-06], ['block_add_statements(Bblock*,', 3.4019391052900155e-06], ['block_statement(Bblock*);', 3.4019391052900155e-06], ['error_variable()', 3.4019391052900155e-06], ['Bvariable(error_mark_node);', 3.4019391052900155e-06], ['global_variable(const', 3.4019391052900155e-06], ['global_variable_set_init(Bvariable*,', 3.4019391052900155e-06], ['local_variable(Bfunction*,', 3.4019391052900155e-06], ['Bvariable*,', 3.4019391052900155e-06], ['parameter_variable(Bfunction*,', 3.4019391052900155e-06], ['static_chain_variable(Bfunction*,', 3.4019391052900155e-06], ['temporary_variable(Bfunction*,', 3.4019391052900155e-06], ['Bstatement**);', 3.4019391052900155e-06], ['implicit_variable(const', 3.4019391052900155e-06], ['int64_t);', 3.4019391052900155e-06], ['implicit_variable_set_init(Bvariable*,', 3.4019391052900155e-06], ['implicit_variable_reference(const', 3.4019391052900155e-06], ['immutable_struct(const', 3.4019391052900155e-06], ['immutable_struct_set_init(Bvariable*,', 3.4019391052900155e-06], ['immutable_struct_reference(const', 3.4019391052900155e-06], ['Labels.', 3.4019391052900155e-06], ['label(Bfunction*,', 3.4019391052900155e-06], ['label_definition_statement(Blabel*);', 3.4019391052900155e-06], ['goto_statement(Blabel*,', 3.4019391052900155e-06], ['label_address(Blabel*,', 3.4019391052900155e-06], ['error_function()', 3.4019391052900155e-06], ['this->make_function(error_mark_node);', 3.4019391052900155e-06], ['function(Btype*', 3.4019391052900155e-06], ['function_defer_statement(Bfunction*', 3.4019391052900155e-06], ['function_set_parameters(Bfunction*', 3.4019391052900155e-06], ['function_set_body(Bfunction*', 3.4019391052900155e-06], ['lookup_builtin(const', 3.4019391052900155e-06], ['std::string&);', 3.4019391052900155e-06], ['write_global_definitions(const', 3.4019391052900155e-06], ['std::vector<Btype*>&,', 3.4019391052900155e-06], ['std::vector<Bfunction*>&,', 3.4019391052900155e-06], ['write_export_data(const', 3.4019391052900155e-06], ['make_expression(tree', 3.4019391052900155e-06], ['Bexpression(t);', 3.4019391052900155e-06], ['make_statement(tree', 3.4019391052900155e-06], ['Bstatement(t);', 3.4019391052900155e-06], ['make_type(tree', 3.4019391052900155e-06], ['Btype(t);', 3.4019391052900155e-06], ['make_function(tree', 3.4019391052900155e-06], ['Bfunction(t);', 3.4019391052900155e-06], ['fill_in_struct(Btype*,', 3.4019391052900155e-06], ['fill_in_array(Btype*,', 3.4019391052900155e-06], ['non_zero_size_type(tree);', 3.4019391052900155e-06], ['convert_tree(tree,', 3.4019391052900155e-06], ['define_builtin(built_in_function', 3.4019391052900155e-06], ['noreturn_p);', 3.4019391052900155e-06], ['Bfunction*>', 3.4019391052900155e-06], ['builtin_functions_;', 3.4019391052900155e-06], ['get_identifier_from_string(const', 3.4019391052900155e-06], ['get_identifier_with_length(str.data(),', 3.4019391052900155e-06], ['str.length());', 3.4019391052900155e-06], ['Gcc_backend::Gcc_backend()', 3.4019391052900155e-06], ['fetch_and_add', 3.4019391052900155e-06], ['++', 3.4019391052900155e-06], ['--.', 3.4019391052900155e-06], ['BITS_PER_UNIT)->get_tree();', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_1,', 3.4019391052900155e-06], ['"__sync_fetch_and_add_1",', 3.4019391052900155e-06], ['2)->get_tree();', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_2,', 3.4019391052900155e-06], ['"__sync_fetch_and_add_2",', 3.4019391052900155e-06], ['4)->get_tree();', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_4,', 3.4019391052900155e-06], ['"__sync_fetch_and_add_4",', 3.4019391052900155e-06], ['8)->get_tree();', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_8,', 3.4019391052900155e-06], ['"__sync_fetch_and_add_8",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXPECT,', 3.4019391052900155e-06], ['"__builtin_expect",', 3.4019391052900155e-06], ['build_function_type_list(long_integer_type_node,', 3.4019391052900155e-06], ['__builtin_memcmp', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_MEMCMP,', 3.4019391052900155e-06], ['"__builtin_memcmp",', 3.4019391052900155e-06], ['"memcmp",', 3.4019391052900155e-06], ['runtime/internal/sys.', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_CTZ,', 3.4019391052900155e-06], ['"__builtin_ctz",', 3.4019391052900155e-06], ['"ctz",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_CTZLL,', 3.4019391052900155e-06], ['"__builtin_ctzll",', 3.4019391052900155e-06], ['"ctzll",', 3.4019391052900155e-06], ['long_long_unsigned_type_node,', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_BSWAP32,', 3.4019391052900155e-06], ['"__builtin_bswap32",', 3.4019391052900155e-06], ['"bswap32",', 3.4019391052900155e-06], ['build_function_type_list(uint32_type_node,', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_BSWAP64,', 3.4019391052900155e-06], ['"__builtin_bswap64",', 3.4019391052900155e-06], ['"bswap64",', 3.4019391052900155e-06], ['build_function_type_list(uint64_type_node,', 3.4019391052900155e-06], ['math_function_type', 3.4019391052900155e-06], ['math_function_type_long', 3.4019391052900155e-06], ['math_function_type_two', 3.4019391052900155e-06], ['math_function_type_long_two', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ACOS,', 3.4019391052900155e-06], ['"__builtin_acos",', 3.4019391052900155e-06], ['"acos",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ACOSL,', 3.4019391052900155e-06], ['"__builtin_acosl",', 3.4019391052900155e-06], ['"acosl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ASIN,', 3.4019391052900155e-06], ['"__builtin_asin",', 3.4019391052900155e-06], ['"asin",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ASINL,', 3.4019391052900155e-06], ['"__builtin_asinl",', 3.4019391052900155e-06], ['"asinl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ATAN,', 3.4019391052900155e-06], ['"__builtin_atan",', 3.4019391052900155e-06], ['"atan",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ATANL,', 3.4019391052900155e-06], ['"__builtin_atanl",', 3.4019391052900155e-06], ['"atanl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ATAN2,', 3.4019391052900155e-06], ['"__builtin_atan2",', 3.4019391052900155e-06], ['"atan2",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_ATAN2L,', 3.4019391052900155e-06], ['"__builtin_atan2l",', 3.4019391052900155e-06], ['"atan2l",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_CEIL,', 3.4019391052900155e-06], ['"__builtin_ceil",', 3.4019391052900155e-06], ['"ceil",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_CEILL,', 3.4019391052900155e-06], ['"__builtin_ceill",', 3.4019391052900155e-06], ['"ceill",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_COS,', 3.4019391052900155e-06], ['"__builtin_cos",', 3.4019391052900155e-06], ['"cos",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_COSL,', 3.4019391052900155e-06], ['"__builtin_cosl",', 3.4019391052900155e-06], ['"cosl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXP,', 3.4019391052900155e-06], ['"__builtin_exp",', 3.4019391052900155e-06], ['"exp",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXPL,', 3.4019391052900155e-06], ['"__builtin_expl",', 3.4019391052900155e-06], ['"expl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXPM1,', 3.4019391052900155e-06], ['"__builtin_expm1",', 3.4019391052900155e-06], ['"expm1",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXPM1L,', 3.4019391052900155e-06], ['"__builtin_expm1l",', 3.4019391052900155e-06], ['"expm1l",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FABS,', 3.4019391052900155e-06], ['"__builtin_fabs",', 3.4019391052900155e-06], ['"fabs",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FABSL,', 3.4019391052900155e-06], ['"__builtin_fabsl",', 3.4019391052900155e-06], ['"fabsl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FLOOR,', 3.4019391052900155e-06], ['"__builtin_floor",', 3.4019391052900155e-06], ['"floor",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FLOORL,', 3.4019391052900155e-06], ['"__builtin_floorl",', 3.4019391052900155e-06], ['"floorl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FMOD,', 3.4019391052900155e-06], ['"__builtin_fmod",', 3.4019391052900155e-06], ['"fmod",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_FMODL,', 3.4019391052900155e-06], ['"__builtin_fmodl",', 3.4019391052900155e-06], ['"fmodl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LDEXP,', 3.4019391052900155e-06], ['"__builtin_ldexp",', 3.4019391052900155e-06], ['"ldexp",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LDEXPL,', 3.4019391052900155e-06], ['"__builtin_ldexpl",', 3.4019391052900155e-06], ['"ldexpl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG,', 3.4019391052900155e-06], ['"__builtin_log",', 3.4019391052900155e-06], ['"log",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOGL,', 3.4019391052900155e-06], ['"__builtin_logl",', 3.4019391052900155e-06], ['"logl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG1P,', 3.4019391052900155e-06], ['"__builtin_log1p",', 3.4019391052900155e-06], ['"log1p",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG1PL,', 3.4019391052900155e-06], ['"__builtin_log1pl",', 3.4019391052900155e-06], ['"log1pl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG10,', 3.4019391052900155e-06], ['"__builtin_log10",', 3.4019391052900155e-06], ['"log10",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG10L,', 3.4019391052900155e-06], ['"__builtin_log10l",', 3.4019391052900155e-06], ['"log10l",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG2,', 3.4019391052900155e-06], ['"__builtin_log2",', 3.4019391052900155e-06], ['"log2",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_LOG2L,', 3.4019391052900155e-06], ['"__builtin_log2l",', 3.4019391052900155e-06], ['"log2l",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SIN,', 3.4019391052900155e-06], ['"__builtin_sin",', 3.4019391052900155e-06], ['"sin",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SINL,', 3.4019391052900155e-06], ['"__builtin_sinl",', 3.4019391052900155e-06], ['"sinl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SQRT,', 3.4019391052900155e-06], ['"__builtin_sqrt",', 3.4019391052900155e-06], ['"sqrt",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_SQRTL,', 3.4019391052900155e-06], ['"__builtin_sqrtl",', 3.4019391052900155e-06], ['"sqrtl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_TAN,', 3.4019391052900155e-06], ['"__builtin_tan",', 3.4019391052900155e-06], ['"tan",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_TANL,', 3.4019391052900155e-06], ['"__builtin_tanl",', 3.4019391052900155e-06], ['"tanl",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_TRUNC,', 3.4019391052900155e-06], ['"__builtin_trunc",', 3.4019391052900155e-06], ['"trunc",', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_TRUNCL,', 3.4019391052900155e-06], ['"__builtin_truncl",', 3.4019391052900155e-06], ['"truncl",', 3.4019391052900155e-06], ['runtime.getcallerpc.', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_RETURN_ADDRESS,', 3.4019391052900155e-06], ['__builtin_dwarf_cfa', 3.4019391052900155e-06], ['runtime.getcallersp.', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_DWARF_CFA,', 3.4019391052900155e-06], ['__builtin_extract_return_addr', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_EXTRACT_RETURN_ADDR,', 3.4019391052900155e-06], ['"__builtin_extract_return_addr",', 3.4019391052900155e-06], ['__builtin_trap', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_TRAP,', 3.4019391052900155e-06], ['"__builtin_trap",', 3.4019391052900155e-06], ['__builtin_prefetch.', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_PREFETCH,', 3.4019391052900155e-06], ['"__builtin_prefetch",', 3.4019391052900155e-06], ['build_varargs_function_type_list(void_type_node,', 3.4019391052900155e-06], ['__builtin_unreachable', 3.4019391052900155e-06], ['this->define_builtin(BUILT_IN_UNREACHABLE,', 3.4019391052900155e-06], ['"__builtin_unreachable",', 3.4019391052900155e-06], ['Gcc_backend::integer_type(bool', 3.4019391052900155e-06], ['is_unsigned,', 3.4019391052900155e-06], ['(is_unsigned)', 3.4019391052900155e-06], ['short_unsigned_type_node;', 3.4019391052900155e-06], ['make_unsigned_type(bits);', 3.4019391052900155e-06], ['signed_char_type_node;', 3.4019391052900155e-06], ['make_signed_type(bits);', 3.4019391052900155e-06], ['Gcc_backend::float_type(int', 3.4019391052900155e-06], ['FLOAT_TYPE_SIZE)', 3.4019391052900155e-06], ['DOUBLE_TYPE_SIZE)', 3.4019391052900155e-06], ['LONG_DOUBLE_TYPE_SIZE)', 3.4019391052900155e-06], ['bits;', 3.4019391052900155e-06], ['Gcc_backend::complex_type(int', 3.4019391052900155e-06], ['FLOAT_TYPE_SIZE', 3.4019391052900155e-06], ['DOUBLE_TYPE_SIZE', 3.4019391052900155e-06], ['LONG_DOUBLE_TYPE_SIZE', 3.4019391052900155e-06], ['build_complex_type(type);', 3.4019391052900155e-06], ['Gcc_backend::pointer_type(Btype*', 3.4019391052900155e-06], ['to_type_tree', 3.4019391052900155e-06], ['(to_type_tree', 3.4019391052900155e-06], ['build_pointer_type(to_type_tree);', 3.4019391052900155e-06], ['Gcc_backend::function_type(const', 3.4019391052900155e-06], ['Btyped_identifier&', 3.4019391052900155e-06], ['result_struct,', 3.4019391052900155e-06], ['&args;', 3.4019391052900155e-06], ['(receiver.btype', 3.4019391052900155e-06], ['receiver.btype->get_tree();', 3.4019391052900155e-06], ['parameters.begin();', 3.4019391052900155e-06], ['parameters.end();', 3.4019391052900155e-06], ['Varargs', 3.4019391052900155e-06], ['entirely', 3.4019391052900155e-06], ['varargs.', 3.4019391052900155e-06], ['void_list_node;', 3.4019391052900155e-06], ['(results.empty())', 3.4019391052900155e-06], ['(results.size()', 3.4019391052900155e-06], ['results.front().btype->get_tree();', 3.4019391052900155e-06], ['gcc_assert(result_struct', 3.4019391052900155e-06], ['result_struct->get_tree();', 3.4019391052900155e-06], ['libffi', 3.4019391052900155e-06], ['SPARC,', 3.4019391052900155e-06], ['harm', 3.4019391052900155e-06], ['https://gcc.gnu.org/PR72814', 3.4019391052900155e-06], ['int_size_in_bytes(result)', 3.4019391052900155e-06], ['build_function_type(result,', 3.4019391052900155e-06], ['this->make_type(build_pointer_type(fntype));', 3.4019391052900155e-06], ['Gcc_backend::struct_type(const', 3.4019391052900155e-06], ['this->fill_in_struct(this->make_type(make_node(RECORD_TYPE)),', 3.4019391052900155e-06], ['Gcc_backend::fill_in_struct(Btype*', 3.4019391052900155e-06], ['fields.begin();', 3.4019391052900155e-06], ['fields.end();', 3.4019391052900155e-06], ['get_identifier_from_string(p->name);', 3.4019391052900155e-06], ['build_decl(p->location.gcc_location(),', 3.4019391052900155e-06], ['fill_tree;', 3.4019391052900155e-06], ['&DECL_CHAIN(field);', 3.4019391052900155e-06], ['TYPE_FIELDS(fill_tree)', 3.4019391052900155e-06], ['Gcc_backend::array_type(Btype*', 3.4019391052900155e-06], ['this->fill_in_array(this->make_type(make_node(ARRAY_TYPE)),', 3.4019391052900155e-06], ['Gcc_backend::fill_in_array(Btype*', 3.4019391052900155e-06], ['element_type->get_tree();', 3.4019391052900155e-06], ['length->get_tree();', 3.4019391052900155e-06], ['(element_type_tree', 3.4019391052900155e-06], ['gcc_assert(TYPE_SIZE(element_type_tree)', 3.4019391052900155e-06], ['fold_convert(sizetype,', 3.4019391052900155e-06], ['length_tree);', 3.4019391052900155e-06], ['index_type_tree', 3.4019391052900155e-06], ['build_index_type(fold_build2(MINUS_EXPR,', 3.4019391052900155e-06], ['length_tree,', 3.4019391052900155e-06], ['size_one_node));', 3.4019391052900155e-06], ['TREE_TYPE(fill_tree)', 3.4019391052900155e-06], ['element_type_tree;', 3.4019391052900155e-06], ['TYPE_DOMAIN(fill_tree)', 3.4019391052900155e-06], ['index_type_tree;', 3.4019391052900155e-06], ['TYPE_ADDR_SPACE(fill_tree)', 3.4019391052900155e-06], ['TYPE_ADDR_SPACE(element_type_tree);', 3.4019391052900155e-06], ['(TYPE_STRUCTURAL_EQUALITY_P(element_type_tree))', 3.4019391052900155e-06], ['(TYPE_CANONICAL(element_type_tree)', 3.4019391052900155e-06], ['TYPE_CANONICAL(index_type_tree)', 3.4019391052900155e-06], ['index_type_tree)', 3.4019391052900155e-06], ['TYPE_CANONICAL(fill_tree)', 3.4019391052900155e-06], ['build_array_type(TYPE_CANONICAL(element_type_tree),', 3.4019391052900155e-06], ['TYPE_CANONICAL(index_type_tree));', 3.4019391052900155e-06], ['Gcc_backend::placeholder_pointer_type(const', 3.4019391052900155e-06], ['build_distinct_type_copy(ptr_type_node);', 3.4019391052900155e-06], ['Gcc_backend::set_placeholder_pointer_type(Btype*', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(pt)', 3.4019391052900155e-06], ['(tt', 3.4019391052900155e-06], ['placeholder->set_tree(error_mark_node);', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(tt)', 3.4019391052900155e-06], ['TREE_TYPE(pt)', 3.4019391052900155e-06], ['TREE_TYPE(tt);', 3.4019391052900155e-06], ['TYPE_CANONICAL(pt)', 3.4019391052900155e-06], ['TYPE_CANONICAL(tt);', 3.4019391052900155e-06], ['(TYPE_NAME(pt)', 3.4019391052900155e-06], ['build_variant_type_copy(pt);', 3.4019391052900155e-06], ['DECL_ORIGINAL_TYPE(TYPE_NAME(pt))', 3.4019391052900155e-06], ['Gcc_backend::set_placeholder_function_type(Btype*', 3.4019391052900155e-06], ['this->set_placeholder_pointer_type(placeholder,', 3.4019391052900155e-06], ['Gcc_backend::placeholder_struct_type(const', 3.4019391052900155e-06], ['too,', 3.4019391052900155e-06], ['propagates', 3.4019391052900155e-06], ['SET_TYPE_STRUCTURAL_EQUALITY(ret);', 3.4019391052900155e-06], ['Gcc_backend::set_placeholder_struct_type(', 3.4019391052900155e-06], ['TYPE_FIELDS(t)', 3.4019391052900155e-06], ['this->fill_in_struct(placeholder,', 3.4019391052900155e-06], ['(TYPE_NAME(t)', 3.4019391052900155e-06], ['TYPE_SIZE(copy)', 3.4019391052900155e-06], ['bc', 3.4019391052900155e-06], ['this->fill_in_struct(bc,', 3.4019391052900155e-06], ['bc;', 3.4019391052900155e-06], ['Gcc_backend::placeholder_array_type(const', 3.4019391052900155e-06], ['make_node(ARRAY_TYPE);', 3.4019391052900155e-06], ['Gcc_backend::set_placeholder_array_type(Btype*', 3.4019391052900155e-06], ['TREE_TYPE(t)', 3.4019391052900155e-06], ['this->fill_in_array(placeholder,', 3.4019391052900155e-06], ['Gcc_backend::named_type(const', 3.4019391052900155e-06], ['(TYPE_NAME(type)', 3.4019391052900155e-06], ['location.gcc_location()', 3.4019391052900155e-06], ['BUILTINS_LOCATION', 3.4019391052900155e-06], ['INTEGER_TYPE', 3.4019391052900155e-06], ['BOOLEAN_TYPE))', 3.4019391052900155e-06], ['TYPE_NAME(type)', 3.4019391052900155e-06], ['build_variant_type_copy(type);', 3.4019391052900155e-06], ['copy);', 3.4019391052900155e-06], ['DECL_ORIGINAL_TYPE(decl)', 3.4019391052900155e-06], ['Gcc_backend::circular_pointer_type(Btype*,', 3.4019391052900155e-06], ['this->make_type(ptr_type_node);', 3.4019391052900155e-06], ['Gcc_backend::is_circular_pointer_type(Btype*', 3.4019391052900155e-06], ['btype->get_tree()', 3.4019391052900155e-06], ['Gcc_backend::type_size(Btype*', 3.4019391052900155e-06], ['TYPE_SIZE_UNIT(t);', 3.4019391052900155e-06], ['gcc_assert(tree_fits_uhwi_p', 3.4019391052900155e-06], ['val_wide', 3.4019391052900155e-06], ['TREE_INT_CST_LOW(t);', 3.4019391052900155e-06], ['static_cast<int64_t>(val_wide);', 3.4019391052900155e-06], ['HOST_WIDE_INT>(ret)', 3.4019391052900155e-06], ['val_wide)', 3.4019391052900155e-06], ['Gcc_backend::type_alignment(Btype*', 3.4019391052900155e-06], ['TYPE_ALIGN_UNIT(t);', 3.4019391052900155e-06], ['Gcc_backend::type_field_alignment(Btype*', 3.4019391052900155e-06], ['go_field_alignment(t);', 3.4019391052900155e-06], ['Gcc_backend::type_field_offset(Btype*', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(struct_tree)', 3.4019391052900155e-06], ['TYPE_FIELDS(struct_tree);', 3.4019391052900155e-06], ['--index)', 3.4019391052900155e-06], ['offset_wide', 3.4019391052900155e-06], ['int_byte_position(field);', 3.4019391052900155e-06], ['static_cast<int64_t>(offset_wide);', 3.4019391052900155e-06], ['gcc_assert(ret', 3.4019391052900155e-06], ['offset_wide);', 3.4019391052900155e-06], ['Gcc_backend::zero_expression(Btype*', 3.4019391052900155e-06], ['build_zero_cst(t);', 3.4019391052900155e-06], ['Gcc_backend::var_expression(Bvariable*', 3.4019391052900155e-06], ['var->get_tree(location);', 3.4019391052900155e-06], ['Gcc_backend::indirect_expression(Btype*', 3.4019391052900155e-06], ['indirecting.', 3.4019391052900155e-06], ['target_type_tree', 3.4019391052900155e-06], ['TREE_TYPE(TREE_TYPE(expr_tree));', 3.4019391052900155e-06], ['(VOID_TYPE_P(target_type_tree))', 3.4019391052900155e-06], ['build_pointer_type(type_tree),', 3.4019391052900155e-06], ['(known_valid)', 3.4019391052900155e-06], ['TREE_THIS_NOTRAP(ret)', 3.4019391052900155e-06], ['Gcc_backend::named_constant_expression(Btype*', 3.4019391052900155e-06], ['val->get_tree();', 3.4019391052900155e-06], ['const_val;', 3.4019391052900155e-06], ['this->make_expression(decl);', 3.4019391052900155e-06], ['Gcc_backend::integer_constant_expression(Btype*', 3.4019391052900155e-06], ['double_int_to_tree(t,', 3.4019391052900155e-06], ['mpz_get_double_int(t,', 3.4019391052900155e-06], ['Gcc_backend::float_constant_expression(Btype*', 3.4019391052900155e-06], ['TYPE_MODE(t),', 3.4019391052900155e-06], ['build_real(t,', 3.4019391052900155e-06], ['r2);', 3.4019391052900155e-06], ['Gcc_backend::complex_constant_expression(Btype*', 3.4019391052900155e-06], ['r3;', 3.4019391052900155e-06], ['real_from_mpfr(&r3,', 3.4019391052900155e-06], ['r4;', 3.4019391052900155e-06], ['real_convert(&r4,', 3.4019391052900155e-06], ['&r3);', 3.4019391052900155e-06], ['build_complex(t,', 3.4019391052900155e-06], ['r2),', 3.4019391052900155e-06], ['r4));', 3.4019391052900155e-06], ['Gcc_backend::string_constant_expression(const', 3.4019391052900155e-06], ['index_type', 3.4019391052900155e-06], ['build_index_type(size_int(val.length()));', 3.4019391052900155e-06], ['const_char_type', 3.4019391052900155e-06], ['build_qualified_type(unsigned_char_type_node,', 3.4019391052900155e-06], ['TYPE_QUAL_CONST);', 3.4019391052900155e-06], ['string_type', 3.4019391052900155e-06], ['build_array_type(const_char_type,', 3.4019391052900155e-06], ['index_type);', 3.4019391052900155e-06], ['TYPE_STRING_FLAG(string_type)', 3.4019391052900155e-06], ['string_val', 3.4019391052900155e-06], ['build_string(val.length(),', 3.4019391052900155e-06], ['val.data());', 3.4019391052900155e-06], ['TREE_TYPE(string_val)', 3.4019391052900155e-06], ['string_type;', 3.4019391052900155e-06], ['this->make_expression(string_val);', 3.4019391052900155e-06], ['Gcc_backend::boolean_constant_expression(bool', 3.4019391052900155e-06], ['bool_cst', 3.4019391052900155e-06], ['this->make_expression(bool_cst);', 3.4019391052900155e-06], ['Gcc_backend::real_part_expression(Bexpression*', 3.4019391052900155e-06], ['Gcc_backend::imag_part_expression(Bexpression*', 3.4019391052900155e-06], ['Gcc_backend::complex_expression(Bexpression*', 3.4019391052900155e-06], ['real_tree', 3.4019391052900155e-06], ['breal->get_tree();', 3.4019391052900155e-06], ['bimag->get_tree();', 3.4019391052900155e-06], ['(real_tree', 3.4019391052900155e-06], ['gcc_assert(TYPE_MAIN_VARIANT(TREE_TYPE(real_tree))', 3.4019391052900155e-06], ['TYPE_MAIN_VARIANT(TREE_TYPE(imag_tree)));', 3.4019391052900155e-06], ['gcc_assert(SCALAR_FLOAT_TYPE_P(TREE_TYPE(real_tree)));', 3.4019391052900155e-06], ['build_complex_type(TREE_TYPE(real_tree)),', 3.4019391052900155e-06], ['real_tree,', 3.4019391052900155e-06], ['imag_tree);', 3.4019391052900155e-06], ['Gcc_backend::convert_expression(Btype*', 3.4019391052900155e-06], ['(this->type_size(type)', 3.4019391052900155e-06], ['fold(convert_to_integer(type_tree,', 3.4019391052900155e-06], ['REAL_TYPE)', 3.4019391052900155e-06], ['fold(convert_to_real(type_tree,', 3.4019391052900155e-06], ['fold(convert_to_complex(type_tree,', 3.4019391052900155e-06], ['TREE_CODE(TREE_TYPE(expr_tree))', 3.4019391052900155e-06], ['fold(convert_to_pointer(type_tree,', 3.4019391052900155e-06], ['Gcc_backend::function_code_expression(Bfunction*', 3.4019391052900155e-06], ['bfunc,', 3.4019391052900155e-06], ['bfunc->get_tree();', 3.4019391052900155e-06], ['Gcc_backend::address_expression(Bexpression*', 3.4019391052900155e-06], ['BSTRUCT.', 3.4019391052900155e-06], ['Gcc_backend::struct_field_expression(Bexpression*', 3.4019391052900155e-06], ['bstruct,', 3.4019391052900155e-06], ['bstruct->get_tree();', 3.4019391052900155e-06], ['TREE_TYPE(struct_tree)', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(TREE_TYPE(struct_tree))', 3.4019391052900155e-06], ['TYPE_FIELDS(TREE_TYPE(struct_tree));', 3.4019391052900155e-06], ['erroneous.', 3.4019391052900155e-06], ['struct_tree,', 3.4019391052900155e-06], ['(TREE_CONSTANT(struct_tree))', 3.4019391052900155e-06], ['BEXPR.', 3.4019391052900155e-06], ['Gcc_backend::compound_expression(Bstatement*', 3.4019391052900155e-06], ['stat', 3.4019391052900155e-06], ['(stat', 3.4019391052900155e-06], ['TREE_TYPE(expr),', 3.4019391052900155e-06], ['stat,', 3.4019391052900155e-06], ['THEN_EXPR', 3.4019391052900155e-06], ['CONDITION', 3.4019391052900155e-06], ['ELSE_EXPR', 3.4019391052900155e-06], ['Gcc_backend::conditional_expression(Bfunction*,', 3.4019391052900155e-06], ['then_expr,', 3.4019391052900155e-06], ['then_expr->get_tree();', 3.4019391052900155e-06], ['else_expr', 3.4019391052900155e-06], ['else_expr->get_tree();', 3.4019391052900155e-06], ['Gcc_backend::unary_expression(Operator', 3.4019391052900155e-06], ['TREE_TYPE(expr_tree);', 3.4019391052900155e-06], ['TRUTH_NOT_EXPR;', 3.4019391052900155e-06], ['tree_code.', 3.4019391052900155e-06], ['operator_to_tree_code(Operator', 3.4019391052900155e-06], ['EQ_EXPR;', 3.4019391052900155e-06], ['TRUTH_ANDIF_EXPR;', 3.4019391052900155e-06], ['Gcc_backend::binary_expression(Operator', 3.4019391052900155e-06], ['left->get_tree();', 3.4019391052900155e-06], ['right->get_tree();', 3.4019391052900155e-06], ['(left_tree', 3.4019391052900155e-06], ['operator_to_tree_code(op,', 3.4019391052900155e-06], ['TREE_TYPE(left_tree));', 3.4019391052900155e-06], ['TREE_TYPE(left_tree)', 3.4019391052900155e-06], ['TREE_TYPE(right_tree);', 3.4019391052900155e-06], ['left_tree);', 3.4019391052900155e-06], ['operators,', 3.4019391052900155e-06], ['left_tree,', 3.4019391052900155e-06], ['BTYPE', 3.4019391052900155e-06], ['VALS.', 3.4019391052900155e-06], ['Gcc_backend::constructor_expression(Btype*', 3.4019391052900155e-06], ['TYPE_FIELDS(type_tree);', 3.4019391052900155e-06], ['TREE_TYPE(val)', 3.4019391052900155e-06], ['(int_size_in_bytes(TREE_TYPE(field))', 3.4019391052900155e-06], ['this->convert_tree(TREE_TYPE(field),', 3.4019391052900155e-06], ['(!TREE_CONSTANT(elt->value))', 3.4019391052900155e-06], ['Gcc_backend::array_constructor_expression(', 3.4019391052900155e-06], ['array_btype,', 3.4019391052900155e-06], ['long>&', 3.4019391052900155e-06], ['array_btype->get_tree();', 3.4019391052900155e-06], ['gcc_assert(indexes.size()', 3.4019391052900155e-06], ['TREE_TYPE(type_tree);', 3.4019391052900155e-06], ['int_size_in_bytes(element_type);', 3.4019391052900155e-06], ['size_int(indexes[i]);', 3.4019391052900155e-06], ['(vals[i])->get_tree();', 3.4019391052900155e-06], ['(!TREE_CONSTANT(val))', 3.4019391052900155e-06], ['BASE[INDEX].', 3.4019391052900155e-06], ['Gcc_backend::pointer_offset_expression(Bexpression*', 3.4019391052900155e-06], ['base_tree', 3.4019391052900155e-06], ['base->get_tree();', 3.4019391052900155e-06], ['TREE_TYPE(TREE_TYPE(base_tree));', 3.4019391052900155e-06], ['(base_tree', 3.4019391052900155e-06], ['TREE_TYPE(base_tree)', 3.4019391052900155e-06], ['TYPE_SIZE_UNIT(element_type_tree);', 3.4019391052900155e-06], ['element_size);', 3.4019391052900155e-06], ['POINTER_PLUS_EXPR,', 3.4019391052900155e-06], ['TREE_TYPE(base_tree),', 3.4019391052900155e-06], ['base_tree,', 3.4019391052900155e-06], ['this->make_expression(ptr);', 3.4019391052900155e-06], ['ARRAY[INDEX]', 3.4019391052900155e-06], ['Gcc_backend::array_index_expression(Bexpression*', 3.4019391052900155e-06], ['array_tree', 3.4019391052900155e-06], ['array->get_tree();', 3.4019391052900155e-06], ['(array_tree', 3.4019391052900155e-06], ['TREE_TYPE(array_tree)', 3.4019391052900155e-06], ['(TREE_TYPE(array_tree)', 3.4019391052900155e-06], ['build4_loc(location.gcc_location(),', 3.4019391052900155e-06], ['ARRAY_REF,', 3.4019391052900155e-06], ['TREE_TYPE(TREE_TYPE(array_tree)),', 3.4019391052900155e-06], ['FN_EXPR', 3.4019391052900155e-06], ['FN_ARGS.', 3.4019391052900155e-06], ['Gcc_backend::call_expression(Bfunction*,', 3.4019391052900155e-06], ['fn_expr,', 3.4019391052900155e-06], ['chain_expr,', 3.4019391052900155e-06], ['fn_expr->get_tree();', 3.4019391052900155e-06], ['TREE_TYPE(fn)', 3.4019391052900155e-06], ['gcc_assert(FUNCTION_POINTER_TYPE_P(TREE_TYPE(fn)));', 3.4019391052900155e-06], ['TREE_TYPE(TREE_TYPE(TREE_TYPE(fn)));', 3.4019391052900155e-06], ['fn_args.size();', 3.4019391052900155e-06], ['fn_args.at(i)->get_tree();', 3.4019391052900155e-06], ['(TREE_CODE(fndecl)', 3.4019391052900155e-06], ['TREE_OPERAND(fndecl,', 3.4019391052900155e-06], ['80387', 3.4019391052900155e-06], ['math.', 3.4019391052900155e-06], ['(optimize', 3.4019391052900155e-06], ['TREE_CODE(fndecl)', 3.4019391052900155e-06], ['fndecl_built_in_p', 3.4019391052900155e-06], ['BUILT_IN_NORMAL)', 3.4019391052900155e-06], ['DECL_IS_BUILTIN', 3.4019391052900155e-06], ['((SCALAR_FLOAT_TYPE_P(rettype)', 3.4019391052900155e-06], ['SCALAR_FLOAT_TYPE_P(TREE_TYPE(args[0])))', 3.4019391052900155e-06], ['(COMPLEX_FLOAT_TYPE_P(rettype)', 3.4019391052900155e-06], ['COMPLEX_FLOAT_TYPE_P(TREE_TYPE(args[0])))))', 3.4019391052900155e-06], ['excess_precision_type(TREE_TYPE(args[0]));', 3.4019391052900155e-06], ['excess_fndecl', 3.4019391052900155e-06], ['mathfn_built_in(excess_type,', 3.4019391052900155e-06], ['DECL_FUNCTION_CODE(fndecl));', 3.4019391052900155e-06], ['(excess_fndecl', 3.4019391052900155e-06], ['excess_fndecl);', 3.4019391052900155e-06], ['(SCALAR_FLOAT_TYPE_P(TREE_TYPE(args[i]))', 3.4019391052900155e-06], ['COMPLEX_FLOAT_TYPE_P(TREE_TYPE(args[i])))', 3.4019391052900155e-06], ['::convert(excess_type,', 3.4019391052900155e-06], ['args[i]);', 3.4019391052900155e-06], ['build_call_array_loc(location.gcc_location(),', 3.4019391052900155e-06], ['(chain_expr)', 3.4019391052900155e-06], ['CALL_EXPR_STATIC_CHAIN', 3.4019391052900155e-06], ['chain_expr->get_tree();', 3.4019391052900155e-06], ['change.', 3.4019391052900155e-06], ['convert_to_real.', 3.4019391052900155e-06], ['build1_loc(location.gcc_location(),', 3.4019391052900155e-06], ['Gcc_backend::expression_statement(Bfunction*,', 3.4019391052900155e-06], ['this->make_statement(expr->get_tree());', 3.4019391052900155e-06], ['Variable', 3.4019391052900155e-06], ['Gcc_backend::init_statement(Bfunction*,', 3.4019391052900155e-06], ['var_tree', 3.4019391052900155e-06], ['(var_tree', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(var_tree)', 3.4019391052900155e-06], ['VAR_DECL);', 3.4019391052900155e-06], ['vice-versa.', 3.4019391052900155e-06], ['omitting', 3.4019391052900155e-06], ['(int_size_in_bytes(TREE_TYPE(var_tree))', 3.4019391052900155e-06], ['int_size_in_bytes(TREE_TYPE(init_tree))', 3.4019391052900155e-06], ['DECL_INITIAL(var_tree)', 3.4019391052900155e-06], ['build1_loc(DECL_SOURCE_LOCATION(var_tree),', 3.4019391052900155e-06], ['var_tree);', 3.4019391052900155e-06], ['build2_loc(DECL_SOURCE_LOCATION(var_tree),', 3.4019391052900155e-06], ['Assignment.', 3.4019391052900155e-06], ['Gcc_backend::assignment_statement(Bfunction*', 3.4019391052900155e-06], ['lhs_tree', 3.4019391052900155e-06], ['lhs->get_tree();', 3.4019391052900155e-06], ['rhs->get_tree();', 3.4019391052900155e-06], ['(lhs_tree', 3.4019391052900155e-06], ['avoiding', 3.4019391052900155e-06], ['(TREE_TYPE(lhs_tree)', 3.4019391052900155e-06], ['int_size_in_bytes(TREE_TYPE(lhs_tree))', 3.4019391052900155e-06], ['TREE_TYPE(rhs_tree)', 3.4019391052900155e-06], ['int_size_in_bytes(TREE_TYPE(rhs_tree))', 3.4019391052900155e-06], ['this->compound_statement(this->expression_statement(bfn,', 3.4019391052900155e-06], ['lhs),', 3.4019391052900155e-06], ['this->expression_statement(bfn,', 3.4019391052900155e-06], ['rhs));', 3.4019391052900155e-06], ['this->convert_tree(TREE_TYPE(lhs_tree),', 3.4019391052900155e-06], ['rhs_tree,', 3.4019391052900155e-06], ['this->make_statement(fold_build2_loc(location.gcc_location(),', 3.4019391052900155e-06], ['lhs_tree,', 3.4019391052900155e-06], ['rhs_tree));', 3.4019391052900155e-06], ['Return.', 3.4019391052900155e-06], ['Gcc_backend::return_statement(Bfunction*', 3.4019391052900155e-06], ['bfunction,', 3.4019391052900155e-06], ['bfunction->get_tree();', 3.4019391052900155e-06], ['(fntree', 3.4019391052900155e-06], ['DECL_RESULT(fntree);', 3.4019391052900155e-06], ['function_type', 3.4019391052900155e-06], ['res_type', 3.4019391052900155e-06], ['(res_type', 3.4019391052900155e-06], ['int_size_in_bytes(res_type)', 3.4019391052900155e-06], ['append_to_statement_list(ret,', 3.4019391052900155e-06], ['(vals.empty())', 3.4019391052900155e-06], ['(vals.size()', 3.4019391052900155e-06], ['vals.front()->get_tree();', 3.4019391052900155e-06], ['vals.front()->get_tree());', 3.4019391052900155e-06], ['rettmp', 3.4019391052900155e-06], ['create_tmp_var(rettype,', 3.4019391052900155e-06], ['"RESULT");', 3.4019391052900155e-06], ['TYPE_FIELDS(rettype);', 3.4019391052900155e-06], ['p++,', 3.4019391052900155e-06], ['rettmp,', 3.4019391052900155e-06], ['(*p)->get_tree());', 3.4019391052900155e-06], ['append_to_statement_list(set,', 3.4019391052900155e-06], ['rettmp);', 3.4019391052900155e-06], ['ret_expr', 3.4019391052900155e-06], ['append_to_statement_list(ret_expr,', 3.4019391052900155e-06], ['attempts', 3.4019391052900155e-06], ['FINALLY_STMT', 3.4019391052900155e-06], ['executed.', 3.4019391052900155e-06], ['defers', 3.4019391052900155e-06], ['BSTAT;', 3.4019391052900155e-06], ['EXCEPT_STMT;', 3.4019391052900155e-06], ['FINALLY_STMT;', 3.4019391052900155e-06], ['Gcc_backend::exception_handler_statement(Bstatement*', 3.4019391052900155e-06], ['except_stmt', 3.4019391052900155e-06], ['except_stmt->get_tree();', 3.4019391052900155e-06], ['finally_stmt', 3.4019391052900155e-06], ['finally_stmt->get_tree();', 3.4019391052900155e-06], ['(stat_tree', 3.4019391052900155e-06], ['(except_tree', 3.4019391052900155e-06], ['TRY_CATCH_EXPR,', 3.4019391052900155e-06], ['CATCH_EXPR,', 3.4019391052900155e-06], ['except_tree));', 3.4019391052900155e-06], ['(finally_tree', 3.4019391052900155e-06], ['TRY_FINALLY_EXPR,', 3.4019391052900155e-06], ['finally_tree);', 3.4019391052900155e-06], ['this->make_statement(stat_tree);', 3.4019391052900155e-06], ['If.', 3.4019391052900155e-06], ['Gcc_backend::if_statement(Bfunction*,', 3.4019391052900155e-06], ['then_block->get_tree();', 3.4019391052900155e-06], ['else_block->get_tree();', 3.4019391052900155e-06], ['(cond_tree', 3.4019391052900155e-06], ['Switch.', 3.4019391052900155e-06], ['Gcc_backend::switch_statement(', 3.4019391052900155e-06], ['switch_location)', 3.4019391052900155e-06], ['gcc_assert(cases.size()', 3.4019391052900155e-06], ['statements.size());', 3.4019391052900155e-06], ['pc', 3.4019391052900155e-06], ['cases.begin();', 3.4019391052900155e-06], ['++ps,', 3.4019391052900155e-06], ['++pc)', 3.4019391052900155e-06], ['(pc->empty())', 3.4019391052900155e-06], ['EXPR_LOCATION((*ps)->get_tree())', 3.4019391052900155e-06], ['build_case_label(NULL_TREE,', 3.4019391052900155e-06], ['pc->begin();', 3.4019391052900155e-06], ['pc->end();', 3.4019391052900155e-06], ['++pcv)', 3.4019391052900155e-06], ['(*pcv)->get_tree();', 3.4019391052900155e-06], ['EXPR_LOCATION(t);', 3.4019391052900155e-06], ['build_case_label((*pcv)->get_tree(),', 3.4019391052900155e-06], ['(*ps)->get_tree();', 3.4019391052900155e-06], ['value->get_tree();', 3.4019391052900155e-06], ['build2_loc(switch_location.gcc_location(),', 3.4019391052900155e-06], ['SWITCH_EXPR,', 3.4019391052900155e-06], ['tv,', 3.4019391052900155e-06], ['stmt_list);', 3.4019391052900155e-06], ['this->make_statement(t);', 3.4019391052900155e-06], ['Pair', 3.4019391052900155e-06], ['Gcc_backend::compound_statement(Bstatement*', 3.4019391052900155e-06], ['s1,', 3.4019391052900155e-06], ['s2)', 3.4019391052900155e-06], ['s1->get_tree();', 3.4019391052900155e-06], ['s2->get_tree();', 3.4019391052900155e-06], ['(stmt_list', 3.4019391052900155e-06], ['Gcc_backend::statement_list(const', 3.4019391052900155e-06], ['dual', 3.4019391052900155e-06], ['blocks:', 3.4019391052900155e-06], ['Bblock.', 3.4019391052900155e-06], ['Gcc_backend::block(Bfunction*', 3.4019391052900155e-06], ['start_location,', 3.4019391052900155e-06], ['make_node(BLOCK);', 3.4019391052900155e-06], ['gcc_assert(fndecl', 3.4019391052900155e-06], ['(DECL_INITIAL(fndecl)', 3.4019391052900155e-06], ['DECL_INITIAL(fndecl)', 3.4019391052900155e-06], ['DECL_INITIAL(fndecl);', 3.4019391052900155e-06], ['superbind_tree', 3.4019391052900155e-06], ['enclosing->get_tree();', 3.4019391052900155e-06], ['BIND_EXPR_BLOCK(superbind_tree);', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(superblock_tree)', 3.4019391052900155e-06], ['&BLOCK_VARS(block_tree);', 3.4019391052900155e-06], ['vars.begin();', 3.4019391052900155e-06], ['vars.end();', 3.4019391052900155e-06], ['(*pp', 3.4019391052900155e-06], ['TREE_USED(block_tree)', 3.4019391052900155e-06], ['build3_loc(start_location.gcc_location(),', 3.4019391052900155e-06], ['BIND_EXPR,', 3.4019391052900155e-06], ['BLOCK_VARS(block_tree),', 3.4019391052900155e-06], ['block_tree);', 3.4019391052900155e-06], ['TREE_SIDE_EFFECTS(bind_tree)', 3.4019391052900155e-06], ['Bblock(bind_tree);', 3.4019391052900155e-06], ['Gcc_backend::block_add_statements(Bblock*', 3.4019391052900155e-06], ['append_to_statement_list(s,', 3.4019391052900155e-06], ['BIND_EXPR_BODY(bind_tree)', 3.4019391052900155e-06], ['Gcc_backend::block_statement(Bblock*', 3.4019391052900155e-06], ['bblock)', 3.4019391052900155e-06], ['this->make_statement(bind_tree);', 3.4019391052900155e-06], ['go-c.h.', 3.4019391052900155e-06], ['Gcc_backend::non_zero_size_type(tree', 3.4019391052900155e-06], ['(int_size_in_bytes(type)', 3.4019391052900155e-06], ['(TREE_CODE(type))', 3.4019391052900155e-06], ['(TYPE_FIELDS(type)', 3.4019391052900155e-06], ['ns', 3.4019391052900155e-06], ['TYPE_FIELDS(type);', 3.4019391052900155e-06], ['TREE_TYPE(field);', 3.4019391052900155e-06], ['TYPE_FIELDS(type))', 3.4019391052900155e-06], ['non_zero_size_type(ft);', 3.4019391052900155e-06], ['build_decl(DECL_SOURCE_LOCATION(field),', 3.4019391052900155e-06], ['DECL_NAME(field),', 3.4019391052900155e-06], ['DECL_CONTEXT(f)', 3.4019391052900155e-06], ['&DECL_CHAIN(f);', 3.4019391052900155e-06], ['TYPE_FIELDS(ns)', 3.4019391052900155e-06], ['layout_type(ns);', 3.4019391052900155e-06], ['(go_non_zero_struct', 3.4019391052900155e-06], ['build_decl(UNKNOWN_LOCATION,', 3.4019391052900155e-06], ['get_identifier("dummy"),', 3.4019391052900155e-06], ['TYPE_FIELDS(type)', 3.4019391052900155e-06], ['go_non_zero_struct', 3.4019391052900155e-06], ['non_zero_size_type(TREE_TYPE(type));', 3.4019391052900155e-06], ['build_array_type_nelts(element_type,', 3.4019391052900155e-06], ['EXPR_TREE', 3.4019391052900155e-06], ['TYPE_TREE.', 3.4019391052900155e-06], ['representations.', 3.4019391052900155e-06], ['Gcc_backend::convert_tree(tree', 3.4019391052900155e-06], ['expr_tree,', 3.4019391052900155e-06], ['TREE_TYPE(expr_tree))', 3.4019391052900155e-06], ['TREE_CODE(TREE_TYPE(expr_tree)));', 3.4019391052900155e-06], ['(POINTER_TYPE_P(type_tree)', 3.4019391052900155e-06], ['INTEGRAL_TYPE_P(type_tree)', 3.4019391052900155e-06], ['SCALAR_FLOAT_TYPE_P(type_tree)', 3.4019391052900155e-06], ['COMPLEX_FLOAT_TYPE_P(type_tree))', 3.4019391052900155e-06], ['gcc_assert(int_size_in_bytes(type_tree)', 3.4019391052900155e-06], ['int_size_in_bytes(TREE_TYPE(expr_tree)));', 3.4019391052900155e-06], ['(TYPE_MAIN_VARIANT(type_tree)', 3.4019391052900155e-06], ['TYPE_MAIN_VARIANT(TREE_TYPE(expr_tree)))', 3.4019391052900155e-06], ['Gcc_backend::global_variable(const', 3.4019391052900155e-06], ['orig_type_tree', 3.4019391052900155e-06], ['((is_external', 3.4019391052900155e-06], ['!is_hidden)', 3.4019391052900155e-06], ['int_size_in_bytes(type_tree)', 3.4019391052900155e-06], ['this->non_zero_size_type(type_tree);', 3.4019391052900155e-06], ['get_identifier_from_string(var_name),', 3.4019391052900155e-06], ['(is_external)', 3.4019391052900155e-06], ['(in_unique_section)', 3.4019391052900155e-06], ['Bvariable(decl,', 3.4019391052900155e-06], ['orig_type_tree);', 3.4019391052900155e-06], ['Gcc_backend::global_variable_set_init(Bvariable*', 3.4019391052900155e-06], ['gcc_assert(TREE_CONSTANT(expr_tree));', 3.4019391052900155e-06], ['DECL_INITIAL(var_decl)', 3.4019391052900155e-06], ['section,', 3.4019391052900155e-06], ['(symtab_node::get(var_decl)', 3.4019391052900155e-06], ['symtab_node::get(var_decl)->implicit_section)', 3.4019391052900155e-06], ['(expr_tree),', 3.4019391052900155e-06], ['Gcc_backend::local_variable(Bfunction*', 3.4019391052900155e-06], ['decl_var,', 3.4019391052900155e-06], ['(decl_var', 3.4019391052900155e-06], ['DECL_HAS_VALUE_EXPR_P(decl)', 3.4019391052900155e-06], ['SET_DECL_VALUE_EXPR(decl,', 3.4019391052900155e-06], ['decl_var->get_decl());', 3.4019391052900155e-06], ['Gcc_backend::parameter_variable(Bfunction*', 3.4019391052900155e-06], ['Gcc_backend::static_chain_variable(Bfunction*', 3.4019391052900155e-06], ['DECL_IGNORED_P(decl)', 3.4019391052900155e-06], ['push_struct_function(fndecl);', 3.4019391052900155e-06], ['gcc_assert(f->static_chain_decl', 3.4019391052900155e-06], ['f->static_chain_decl', 3.4019391052900155e-06], ['DECL_STATIC_CHAIN(fndecl)', 3.4019391052900155e-06], ['Gcc_backend::temporary_variable(Bfunction*', 3.4019391052900155e-06], ['binit,', 3.4019391052900155e-06], ['pstatement)', 3.4019391052900155e-06], ['gcc_assert(function', 3.4019391052900155e-06], ['binit->get_tree();', 3.4019391052900155e-06], ['(!TREE_ADDRESSABLE(type_tree))', 3.4019391052900155e-06], ['create_tmp_var(type_tree,', 3.4019391052900155e-06], ['"GOTMP");', 3.4019391052900155e-06], ['gcc_assert(bblock', 3.4019391052900155e-06], ['create_tmp_var_name("GOTMP"),', 3.4019391052900155e-06], ['DECL_ARTIFICIAL(var)', 3.4019391052900155e-06], ['DECL_IGNORED_P(var)', 3.4019391052900155e-06], ['TREE_USED(var)', 3.4019391052900155e-06], ['DECL_CONTEXT(var)', 3.4019391052900155e-06], ['BIND_EXPR_BLOCK(bind_tree);', 3.4019391052900155e-06], ['gcc_assert(TREE_CODE(block_tree)', 3.4019391052900155e-06], ['DECL_CHAIN(var)', 3.4019391052900155e-06], ['BLOCK_VARS(block_tree)', 3.4019391052900155e-06], ['BIND_EXPR_VARS(bind_tree)', 3.4019391052900155e-06], ['DECL_INITIAL(var)', 3.4019391052900155e-06], ['this->convert_tree(type_tree,', 3.4019391052900155e-06], ['TREE_ADDRESSABLE(var)', 3.4019391052900155e-06], ['this->make_statement(build1_loc(location.gcc_location(),', 3.4019391052900155e-06], ['var));', 3.4019391052900155e-06], ['BINIT,', 3.4019391052900155e-06], ['BINIT', 3.4019391052900155e-06], ['void_type_node))', 3.4019391052900155e-06], ['this->compound_statement(this->expression_statement(function,', 3.4019391052900155e-06], ['binit),', 3.4019391052900155e-06], ['*pstatement);', 3.4019391052900155e-06], ['Bvariable(var);', 3.4019391052900155e-06], ['compiler-defined.', 3.4019391052900155e-06], ['Gcc_backend::implicit_variable(const', 3.4019391052900155e-06], ['is_constant,', 3.4019391052900155e-06], ['!is_hidden;', 3.4019391052900155e-06], ['DECL_COMMON(decl)', 3.4019391052900155e-06], ['implicit_variable', 3.4019391052900155e-06], ['SET_DECL_ALIGN(decl,', 3.4019391052900155e-06], ['DECL_USER_ALIGN(decl)', 3.4019391052900155e-06], ['initalizer', 3.4019391052900155e-06], ['Gcc_backend::implicit_variable_set_init(Bvariable*', 3.4019391052900155e-06], ['Gcc_backend::implicit_variable_reference(const', 3.4019391052900155e-06], ['Gcc_backend::immutable_struct(const', 3.4019391052900155e-06], ['Gcc_backend::immutable_struct_set_init(Bvariable*', 3.4019391052900155e-06], ['initializer)', 3.4019391052900155e-06], ['initializer->get_tree();', 3.4019391052900155e-06], ['unneeded', 3.4019391052900155e-06], ['(init_tree),', 3.4019391052900155e-06], ['Gcc_backend::immutable_struct_reference(const', 3.4019391052900155e-06], ['Gcc_backend::label(Bfunction*', 3.4019391052900155e-06], ['(DECL_STRUCT_FUNCTION(func_tree)', 3.4019391052900155e-06], ['push_struct_function(func_tree);', 3.4019391052900155e-06], ['push_cfun(DECL_STRUCT_FUNCTION(func_tree));', 3.4019391052900155e-06], ['create_artificial_label(location.gcc_location());', 3.4019391052900155e-06], ['Blabel(decl);', 3.4019391052900155e-06], ['Gcc_backend::label_definition_statement(Blabel*', 3.4019391052900155e-06], ['fold_build1_loc(DECL_SOURCE_LOCATION(lab),', 3.4019391052900155e-06], ['LABEL_EXPR,', 3.4019391052900155e-06], ['Gcc_backend::goto_statement(Blabel*', 3.4019391052900155e-06], ['GOTO_EXPR,', 3.4019391052900155e-06], ['Gcc_backend::label_address(Blabel*', 3.4019391052900155e-06], ['TREE_USED(lab)', 3.4019391052900155e-06], ['TREE_ADDRESSABLE(lab)', 3.4019391052900155e-06], ['Gcc_backend::function(Btype*', 3.4019391052900155e-06], ['fntype->get_tree();', 3.4019391052900155e-06], ['gcc_assert(FUNCTION_POINTER_TYPE_P(functype));', 3.4019391052900155e-06], ['this->error_function();', 3.4019391052900155e-06], ['functype);', 3.4019391052900155e-06], ['function_is_visible)', 3.4019391052900155e-06], ['function_is_declaration)', 3.4019391052900155e-06], ['DECL_ARTIFICIAL(resdecl)', 3.4019391052900155e-06], ['DECL_IGNORED_P(resdecl)', 3.4019391052900155e-06], ['DECL_CONTEXT(resdecl)', 3.4019391052900155e-06], ['DECL_RESULT(decl)', 3.4019391052900155e-06], ['function_is_inlinable)', 3.4019391052900155e-06], ['DECL_UNINLINABLE(decl)', 3.4019391052900155e-06], ['function_no_split_stack)', 3.4019391052900155e-06], ['("no_split_stack");', 3.4019391052900155e-06], ['DECL_ATTRIBUTES(decl)', 3.4019391052900155e-06], ['tree_cons(attr,', 3.4019391052900155e-06], ['function_does_not_return)', 3.4019391052900155e-06], ['function_in_unique_section)', 3.4019391052900155e-06], ['function_only_inline)', 3.4019391052900155e-06], ['DECL_DECLARED_INLINE_P(decl)', 3.4019391052900155e-06], ['runtime.setdeferretaddr(L1)', 3.4019391052900155e-06], ['realfn()', 3.4019391052900155e-06], ['L1:', 3.4019391052900155e-06], ['realfn', 3.4019391052900155e-06], ['basic-block', 3.4019391052900155e-06], ['reordering', 3.4019391052900155e-06], ['assumption.', 3.4019391052900155e-06], ['Optimizing', 3.4019391052900155e-06], ['epilogue.', 3.4019391052900155e-06], ['small.', 3.4019391052900155e-06], ['name.find("..thunk");', 3.4019391052900155e-06], ['name.length();', 3.4019391052900155e-06], ['++pos)', 3.4019391052900155e-06], ['(name[pos]', 3.4019391052900155e-06], ['name[pos]', 3.4019391052900155e-06], ['name.length())', 3.4019391052900155e-06], ['cl_optimization', 3.4019391052900155e-06], ['cur_opts;', 3.4019391052900155e-06], ['cl_optimization_save(&cur_opts,', 3.4019391052900155e-06], ['&global_options);', 3.4019391052900155e-06], ['global_options.x_optimize_size', 3.4019391052900155e-06], ['global_options.x_optimize_fast', 3.4019391052900155e-06], ['global_options.x_optimize_debug', 3.4019391052900155e-06], ['DECL_FUNCTION_SPECIFIC_OPTIMIZATION(decl)', 3.4019391052900155e-06], ['build_optimization_node(&global_options);', 3.4019391052900155e-06], ['cl_optimization_restore(&global_options,', 3.4019391052900155e-06], ['&cur_opts);', 3.4019391052900155e-06], ['Bfunction(decl);', 3.4019391052900155e-06], ['C++:', 3.4019391052900155e-06], ['finish:', 3.4019391052900155e-06], ['UNDEFER;', 3.4019391052900155e-06], ['CHECK_DEFER;', 3.4019391052900155e-06], ['finish;', 3.4019391052900155e-06], ['Gcc_backend::function_defer_statement(Bfunction*', 3.4019391052900155e-06], ['undefer_tree', 3.4019391052900155e-06], ['undefer->get_tree();', 3.4019391052900155e-06], ['defer->get_tree();', 3.4019391052900155e-06], ['(undefer_tree', 3.4019391052900155e-06], ['this->label(function,', 3.4019391052900155e-06], ['label_def', 3.4019391052900155e-06], ['this->label_definition_statement(blabel);', 3.4019391052900155e-06], ['append_to_statement_list(label_def->get_tree(),', 3.4019391052900155e-06], ['jump_stmt', 3.4019391052900155e-06], ['this->goto_statement(blabel,', 3.4019391052900155e-06], ['jump_stmt->get_tree();', 3.4019391052900155e-06], ['build2(COMPOUND_EXPR,', 3.4019391052900155e-06], ['defer_tree,', 3.4019391052900155e-06], ['jump);', 3.4019391052900155e-06], ['build2(CATCH_EXPR,', 3.4019391052900155e-06], ['try_catch', 3.4019391052900155e-06], ['build2(TRY_CATCH_EXPR,', 3.4019391052900155e-06], ['undefer_tree,', 3.4019391052900155e-06], ['append_to_statement_list(try_catch,', 3.4019391052900155e-06], ['PARAM_VARS', 3.4019391052900155e-06], ['Gcc_backend::function_set_parameters(Bfunction*', 3.4019391052900155e-06], ['param_vars)', 3.4019391052900155e-06], ['&params;', 3.4019391052900155e-06], ['param_vars.begin();', 3.4019391052900155e-06], ['param_vars.end();', 3.4019391052900155e-06], ['gcc_assert(*pp', 3.4019391052900155e-06], ['DECL_ARGUMENTS(func_tree)', 3.4019391052900155e-06], ['CODE_BLOCK.', 3.4019391052900155e-06], ['Gcc_backend::function_set_body(Bfunction*', 3.4019391052900155e-06], ['code_stmt->get_tree();', 3.4019391052900155e-06], ['DECL_SAVED_TREE(func_tree)', 3.4019391052900155e-06], ['Gcc_backend::lookup_builtin(const', 3.4019391052900155e-06], ['(this->builtin_functions_.count(name)', 3.4019391052900155e-06], ['this->builtin_functions_[name];', 3.4019391052900155e-06], ['TYPE_DECLS,', 3.4019391052900155e-06], ['CONSTANT_DECLS,', 3.4019391052900155e-06], ['FUNCTION_DECLS,', 3.4019391052900155e-06], ['VARIABLE_DECLS', 3.4019391052900155e-06], ['globally,', 3.4019391052900155e-06], ['Gcc_backend::write_global_definitions(', 3.4019391052900155e-06], ['constant_decls,', 3.4019391052900155e-06], ['function_decls,', 3.4019391052900155e-06], ['variable_decls)', 3.4019391052900155e-06], ['type_decls.size()', 3.4019391052900155e-06], ['constant_decls.size()', 3.4019391052900155e-06], ['function_decls.size()', 3.4019391052900155e-06], ['variable_decls.size();', 3.4019391052900155e-06], ['defs', 3.4019391052900155e-06], ['tree[count_definitions];', 3.4019391052900155e-06], ['non-erroneous', 3.4019391052900155e-06], ['Gimple', 3.4019391052900155e-06], ['variable_decls.begin();', 3.4019391052900155e-06], ['variable_decls.end();', 3.4019391052900155e-06], ['(*p)->get_decl();', 3.4019391052900155e-06], ['(std::vector<Btype*>::const_iterator', 3.4019391052900155e-06], ['type_decls.begin();', 3.4019391052900155e-06], ['type_decls.end();', 3.4019391052900155e-06], ['IS_TYPE_OR_DECL_P(type_tree))', 3.4019391052900155e-06], ['TYPE_NAME(type_tree);', 3.4019391052900155e-06], ['gcc_assert(defs[i]', 3.4019391052900155e-06], ['constant_decls.begin();', 3.4019391052900155e-06], ['constant_decls.end();', 3.4019391052900155e-06], ['((*p)->get_tree()', 3.4019391052900155e-06], ['(std::vector<Bfunction*>::const_iterator', 3.4019391052900155e-06], ['function_decls.begin();', 3.4019391052900155e-06], ['function_decls.end();', 3.4019391052900155e-06], ['allocate_struct_function(decl,', 3.4019391052900155e-06], ['cgraph_node::finalize_function(decl,', 3.4019391052900155e-06], ['wrapup_global_declarations(defs,', 3.4019391052900155e-06], ['defs;', 3.4019391052900155e-06], ['Gcc_backend::write_export_data(const', 3.4019391052900155e-06], ['go_write_export_data(bytes,', 3.4019391052900155e-06], ['BCODE', 3.4019391052900155e-06], ['LIBNAME', 3.4019391052900155e-06], ['NORETURN_P', 3.4019391052900155e-06], ['noreturn', 3.4019391052900155e-06], ['Gcc_backend::define_builtin(built_in_function', 3.4019391052900155e-06], ['noreturn_p)', 3.4019391052900155e-06], ['add_builtin_function(name,', 3.4019391052900155e-06], ['set_builtin_decl(bcode,', 3.4019391052900155e-06], ['this->builtin_functions_[name]', 3.4019391052900155e-06], ['(libname', 3.4019391052900155e-06], ['add_builtin_function(libname,', 3.4019391052900155e-06], ['this->builtin_functions_[libname]', 3.4019391052900155e-06], ['go_get_backend()', 3.4019391052900155e-06], ['go-linemap.cc', 3.4019391052900155e-06], ['Linemap.', 3.4019391052900155e-06], ['Gcc_linemap', 3.4019391052900155e-06], ['Gcc_linemap()', 3.4019391052900155e-06], ['Linemap(),', 3.4019391052900155e-06], ['in_file_(false)', 3.4019391052900155e-06], ['start_file(const', 3.4019391052900155e-06], ['start_line(unsigned', 3.4019391052900155e-06], ['line_number,', 3.4019391052900155e-06], ['line_size);', 3.4019391052900155e-06], ['get_location(unsigned', 3.4019391052900155e-06], ['column);', 3.4019391052900155e-06], ['stop();', 3.4019391052900155e-06], ['to_string(Location);', 3.4019391052900155e-06], ['location_file(Location);', 3.4019391052900155e-06], ['location_line(Location);', 3.4019391052900155e-06], ['get_predeclared_location();', 3.4019391052900155e-06], ['get_unknown_location();', 3.4019391052900155e-06], ['is_predeclared(Location);', 3.4019391052900155e-06], ['is_unknown(Location);', 3.4019391052900155e-06], ['in_file_;', 3.4019391052900155e-06], ['Linemap::instance_', 3.4019391052900155e-06], ['Gcc_linemap::start_file(const', 3.4019391052900155e-06], ['*file_name,', 3.4019391052900155e-06], ['line_begin)', 3.4019391052900155e-06], ['(this->in_file_)', 3.4019391052900155e-06], ['Stringify', 3.4019391052900155e-06], ['Gcc_linemap::to_string(Location', 3.4019391052900155e-06], ['*lmo;', 3.4019391052900155e-06], ['resolved_location;', 3.4019391052900155e-06], ['Screen', 3.4019391052900155e-06], ['locations;', 3.4019391052900155e-06], ['file:line', 3.4019391052900155e-06], ['linemap_resolve_location', 3.4019391052900155e-06], ['location.gcc_location(),', 3.4019391052900155e-06], ['LRK_SPELLING_LOCATION,', 3.4019391052900155e-06], ['&lmo);', 3.4019391052900155e-06], ['(lmo', 3.4019391052900155e-06], ['RESERVED_LOCATION_COUNT)', 3.4019391052900155e-06], ['LINEMAP_FILE', 3.4019391052900155e-06], ['(lmo);', 3.4019391052900155e-06], ['(!path)', 3.4019391052900155e-06], ['clutter.', 3.4019391052900155e-06], ['lbasename(path)', 3.4019391052900155e-06], ['":"', 3.4019391052900155e-06], ['SOURCE_LINE', 3.4019391052900155e-06], ['(lmo,', 3.4019391052900155e-06], ['location.gcc_location());', 3.4019391052900155e-06], ['Gcc_linemap::location_file(Location', 3.4019391052900155e-06], ['LOCATION_FILE(loc.gcc_location());', 3.4019391052900155e-06], ['Gcc_linemap::location_line(Location', 3.4019391052900155e-06], ['LOCATION_LINE(loc.gcc_location());', 3.4019391052900155e-06], ['Gcc_linemap::stop()', 3.4019391052900155e-06], ['Gcc_linemap::start_line(unsigned', 3.4019391052900155e-06], ['linesize)', 3.4019391052900155e-06], ['linemap_line_start(line_table,', 3.4019391052900155e-06], ['linesize);', 3.4019391052900155e-06], ['Gcc_linemap::get_location(unsigned', 3.4019391052900155e-06], ['column)', 3.4019391052900155e-06], ['Location(linemap_position_for_column(line_table,', 3.4019391052900155e-06], ['column));', 3.4019391052900155e-06], ['Gcc_linemap::get_unknown_location()', 3.4019391052900155e-06], ['Location(UNKNOWN_LOCATION);', 3.4019391052900155e-06], ['Gcc_linemap::get_predeclared_location()', 3.4019391052900155e-06], ['Location(BUILTINS_LOCATION);', 3.4019391052900155e-06], ['Gcc_linemap::is_predeclared(Location', 3.4019391052900155e-06], ['BUILTINS_LOCATION;', 3.4019391052900155e-06], ['Gcc_linemap::is_unknown(Location', 3.4019391052900155e-06], ['UNKNOWN_LOCATION;', 3.4019391052900155e-06], ['go_get_linemap()', 3.4019391052900155e-06], ['Gcc_linemap;', 3.4019391052900155e-06], ['go-sha1.cc', 3.4019391052900155e-06], ['"sha1.h"', 3.4019391052900155e-06], ['Gcc_sha1_helper', 3.4019391052900155e-06], ['Go_sha1_helper', 3.4019391052900155e-06], ['Gcc_sha1_helper()', 3.4019391052900155e-06], ['ctx_(new', 3.4019391052900155e-06], ['sha1_ctx)', 3.4019391052900155e-06], ['sha1_init_ctx(this->ctx_);', 3.4019391052900155e-06], ['~Gcc_sha1_helper();', 3.4019391052900155e-06], ['Incorporate', 3.4019391052900155e-06], ["'len'", 3.4019391052900155e-06], ["'buffer'", 3.4019391052900155e-06], ['process_bytes(const', 3.4019391052900155e-06], ['finish();', 3.4019391052900155e-06], ['sha1_ctx', 3.4019391052900155e-06], ['*ctx_;', 3.4019391052900155e-06], ['Gcc_sha1_helper::~Gcc_sha1_helper()', 3.4019391052900155e-06], ['ctx_;', 3.4019391052900155e-06], ['Gcc_sha1_helper::process_bytes(const', 3.4019391052900155e-06], ['sha1_process_bytes(buffer,', 3.4019391052900155e-06], ['this->ctx_);', 3.4019391052900155e-06], ['Gcc_sha1_helper::finish()', 3.4019391052900155e-06], ['checksum[checksum_len];', 3.4019391052900155e-06], ['align;', 3.4019391052900155e-06], ['sha1_finish_ctx(this->ctx_,', 3.4019391052900155e-06], ['u.checksum);', 3.4019391052900155e-06], ['std::string(u.checksum,', 3.4019391052900155e-06], ['checksum_len);', 3.4019391052900155e-06], ['go_create_sha1_helper()', 3.4019391052900155e-06], ['Gcc_sha1_helper();', 3.4019391052900155e-06], ['project', 3.4019391052900155e-06], ['http://code.google.com/p/gofrontend.', 3.4019391052900155e-06], ['project.', 3.4019391052900155e-06], ['ast-dump.cc', 3.4019391052900155e-06], ['activate', 3.4019391052900155e-06], ['Go_dump', 3.4019391052900155e-06], ['ast_dump_flag("ast");', 3.4019391052900155e-06], ['headers.', 3.4019391052900155e-06], ['Ast_dump_traverse_blocks_and_functions(Ast_dump_context*', 3.4019391052900155e-06], ['traverse_variables),', 3.4019391052900155e-06], ['block(Block*);', 3.4019391052900155e-06], ['Ast_dump_traverse_statements(Ast_dump_context*', 3.4019391052900155e-06], ['Traverse(traverse_statements),', 3.4019391052900155e-06], ['enclose', 3.4019391052900155e-06], ['brackets.', 3.4019391052900155e-06], ['Ast_dump_traverse_blocks_and_functions::block(Block', 3.4019391052900155e-06], ['this->ast_dump_context_->indent();', 3.4019391052900155e-06], ['statememts.', 3.4019391052900155e-06], ['adts(this->ast_dump_context_);', 3.4019391052900155e-06], ['block->traverse(&adts);', 3.4019391052900155e-06], ['this->ast_dump_context_->unindent();', 3.4019391052900155e-06], ['Ast_dump_traverse_statements::statement(Block*', 3.4019391052900155e-06], ['statement->dump_statement(this->ast_dump_context_);', 3.4019391052900155e-06], ['(statement->is_block_statement())', 3.4019391052900155e-06], ['adtbf(this->ast_dump_context_);', 3.4019391052900155e-06], ['statement->traverse(block,', 3.4019391052900155e-06], ['&adtbf);', 3.4019391052900155e-06], ['Ast_dump_traverse_blocks_and_functions::function(Named_object*', 3.4019391052900155e-06], ['this->ast_dump_context_->dump_typed_identifier_list(', 3.4019391052900155e-06], ['func->type()->parameters());', 3.4019391052900155e-06], ['func->result_variables();', 3.4019391052900155e-06], ['!res->empty())', 3.4019391052900155e-06], ['(";', 3.4019391052900155e-06], ['res->begin())', 3.4019391052900155e-06], ['(*it);', 3.4019391052900155e-06], ['resvar', 3.4019391052900155e-06], ['no->result_var_value();', 3.4019391052900155e-06], ['this->ast_dump_context_->dump_type(resvar->type());', 3.4019391052900155e-06], ['this->ast_dump_context_->dump_type(func->type());', 3.4019391052900155e-06], ['preinits', 3.4019391052900155e-06], ['Ast_dump_traverse_blocks_and_functions::variable(Named_object*', 3.4019391052900155e-06], ['(var->has_pre_init())', 3.4019391052900155e-06], ['"//', 3.4019391052900155e-06], ['var->preinit()->traverse(this);', 3.4019391052900155e-06], ['Ast_dump_context.', 3.4019391052900155e-06], ['Ast_dump_context::Ast_dump_context(std::ostream*', 3.4019391052900155e-06], ['*/,', 3.4019391052900155e-06], ['dump_subblocks', 3.4019391052900155e-06], ['indent_(0),', 3.4019391052900155e-06], ['dump_subblocks_(dump_subblocks),', 3.4019391052900155e-06], ['ostream_(out),', 3.4019391052900155e-06], ['gogo_(NULL)', 3.4019391052900155e-06], ['%basename%.dump.ast', 3.4019391052900155e-06], ['kAstDumpFileExtension', 3.4019391052900155e-06], ['Ast_dump_context::dump(Gogo*', 3.4019391052900155e-06], ['dumpname(basename);', 3.4019391052900155e-06], ['dumpname', 3.4019391052900155e-06], ['out.open(dumpname.c_str());', 3.4019391052900155e-06], ['%s:%m,', 3.4019391052900155e-06], ['dumpname.c_str());', 3.4019391052900155e-06], ['this->gogo_', 3.4019391052900155e-06], ['this->ostream_', 3.4019391052900155e-06], ['&out;', 3.4019391052900155e-06], ['gogo->traverse(&adtbf);', 3.4019391052900155e-06], ['Ast_dump_context::dump_type(const', 3.4019391052900155e-06], ['"(nil', 3.4019391052900155e-06], ['type)";', 3.4019391052900155e-06], ['printer', 3.4019391052900155e-06], ['(this->gogo_', 3.4019391052900155e-06], ['"("', 3.4019391052900155e-06], ['t->mangled_name(this->gogo_)', 3.4019391052900155e-06], ['Ast_dump_context::dump_block(Block*', 3.4019391052900155e-06], ['b->traverse(&adtbf);', 3.4019391052900155e-06], ['Ast_dump_context::dump_expression(const', 3.4019391052900155e-06], ['e->dump_expression(this);', 3.4019391052900155e-06], ['Ast_dump_context::dump_expression_list(const', 3.4019391052900155e-06], ['el,', 3.4019391052900155e-06], ['as_pairs', 3.4019391052900155e-06], ['(el', 3.4019391052900155e-06], ['el->begin();', 3.4019391052900155e-06], ['el->end();', 3.4019391052900155e-06], ['el->begin())', 3.4019391052900155e-06], ['(*it', 3.4019391052900155e-06], ['"NULL";', 3.4019391052900155e-06], ['(as_pairs)', 3.4019391052900155e-06], ['++it;', 3.4019391052900155e-06], ['Ast_dump_context::dump_typed_identifier(const', 3.4019391052900155e-06], ['ti)', 3.4019391052900155e-06], ['ti->name()', 3.4019391052900155e-06], ['this->dump_type(ti->type());', 3.4019391052900155e-06], ['Ast_dump_context::dump_typed_identifier_list(', 3.4019391052900155e-06], ['ti_list)', 3.4019391052900155e-06], ['(ti_list', 3.4019391052900155e-06], ['ti_list->begin();', 3.4019391052900155e-06], ['ti_list->end();', 3.4019391052900155e-06], ['ti_list->begin())', 3.4019391052900155e-06], ['this->dump_typed_identifier(&(*it));', 3.4019391052900155e-06], ['Ast_dump_context::dump_temp_variable_name(const', 3.4019391052900155e-06], ['go_assert(s->classification()', 3.4019391052900155e-06], ['Statement::STATEMENT_TEMPORARY);', 3.4019391052900155e-06], ['Ast_dump_context::dump_label_name(const', 3.4019391052900155e-06], ['Unnamed_label*', 3.4019391052900155e-06], ['"label."', 3.4019391052900155e-06], ['op_string(Operator', 3.4019391052900155e-06], ['parsed,', 3.4019391052900155e-06], ['"+";', 3.4019391052900155e-06], ['"!";', 3.4019391052900155e-06], ['"^";', 3.4019391052900155e-06], ['"|";', 3.4019391052900155e-06], ['"&";', 3.4019391052900155e-06], ['"||";', 3.4019391052900155e-06], ['"&&";', 3.4019391052900155e-06], ['"/";', 3.4019391052900155e-06], ['"<<";', 3.4019391052900155e-06], ['"//";', 3.4019391052900155e-06], ['"&^";', 3.4019391052900155e-06], ['OPERATOR_CHANOP:', 3.4019391052900155e-06], ['"+=";', 3.4019391052900155e-06], ['"-=";', 3.4019391052900155e-06], ['"|=";', 3.4019391052900155e-06], ['"^=";', 3.4019391052900155e-06], ['"*=";', 3.4019391052900155e-06], ['"/=";', 3.4019391052900155e-06], ['"%=";', 3.4019391052900155e-06], ['OPERATOR_LSHIFTEQ:', 3.4019391052900155e-06], ['"<<=";', 3.4019391052900155e-06], ['OPERATOR_RSHIFTEQ:', 3.4019391052900155e-06], ['">>=";', 3.4019391052900155e-06], ['"&=";', 3.4019391052900155e-06], ['"&^=";', 3.4019391052900155e-06], ['OPERATOR_PLUSPLUS:', 3.4019391052900155e-06], ['"++";', 3.4019391052900155e-06], ['OPERATOR_MINUSMINUS:', 3.4019391052900155e-06], ['"--";', 3.4019391052900155e-06], ['OPERATOR_COLON:', 3.4019391052900155e-06], ['OPERATOR_COLONEQ:', 3.4019391052900155e-06], ['":=";', 3.4019391052900155e-06], ['OPERATOR_SEMICOLON:', 3.4019391052900155e-06], ['";";', 3.4019391052900155e-06], ['OPERATOR_DOT:', 3.4019391052900155e-06], ['OPERATOR_ELLIPSIS:', 3.4019391052900155e-06], ['"...";', 3.4019391052900155e-06], ['OPERATOR_COMMA:', 3.4019391052900155e-06], ['OPERATOR_LPAREN:', 3.4019391052900155e-06], ['OPERATOR_RPAREN:', 3.4019391052900155e-06], ['OPERATOR_LCURLY:', 3.4019391052900155e-06], ['OPERATOR_RCURLY:', 3.4019391052900155e-06], ['OPERATOR_LSQUARE:', 3.4019391052900155e-06], ['OPERATOR_RSQUARE:', 3.4019391052900155e-06], ['Ast_dump_context::dump_operator(Operator', 3.4019391052900155e-06], ['op_string(op);', 3.4019391052900155e-06], ['indent.', 3.4019391052900155e-06], ['Ast_dump_context::offset_', 3.4019391052900155e-06], ['indenting', 3.4019391052900155e-06], ['spaces', 3.4019391052900155e-06], ['Ast_dump_context::print_indent()', 3.4019391052900155e-06], ['this->indent_', 3.4019391052900155e-06], ['this->offset_;', 3.4019391052900155e-06], ['Gogo::dump_ast(const', 3.4019391052900155e-06], ['(::ast_dump_flag.is_enabled())', 3.4019391052900155e-06], ['adc;', 3.4019391052900155e-06], ['adc.dump(this,', 3.4019391052900155e-06], ['basename);', 3.4019391052900155e-06], ['String_dump', 3.4019391052900155e-06], ['Ast_dump_context::write_c_string(const', 3.4019391052900155e-06], ['Ast_dump_context::write_string(const', 3.4019391052900155e-06], ['stm,', 3.4019391052900155e-06], ['stm->dump_statement(&adc);', 3.4019391052900155e-06], ['expr->dump_expression(&adc);', 3.4019391052900155e-06], ['debug_go_expression(const', 3.4019391052900155e-06], ['Ast_dump_context::dump_to_stream(expr,', 3.4019391052900155e-06], ['Linemap::location_to_string(expr->location());', 3.4019391052900155e-06], ['debug_go_statement(const', 3.4019391052900155e-06], ['"<null>\\n";', 3.4019391052900155e-06], ['Linemap::location_to_string(stmt->location());', 3.4019391052900155e-06], ['*ncstmt', 3.4019391052900155e-06], ['const_cast<Statement*>(stmt);', 3.4019391052900155e-06], ['Block_statement*', 3.4019391052900155e-06], ['bs', 3.4019391052900155e-06], ['ncstmt->block_statement();', 3.4019391052900155e-06], ['(bs', 3.4019391052900155e-06], ['bs->block()', 3.4019391052900155e-06], ['Ast_dump_context::dump_to_stream(stmt,', 3.4019391052900155e-06], ['debug_go_statement_deep(const', 3.4019391052900155e-06], ['statement->dump_statement(&adc);', 3.4019391052900155e-06], ['debug_go_block(const', 3.4019391052900155e-06], ['block->enclosing()', 3.4019391052900155e-06], ['"):\\n";', 3.4019391052900155e-06], ['std::vector<Statement*>*', 3.4019391052900155e-06], ['block->statements();', 3.4019391052900155e-06], ['(stmts', 3.4019391052900155e-06], ['stmts->size();', 3.4019391052900155e-06], ['debug_go_statement(stmts->at(i));', 3.4019391052900155e-06], ['std:cerr.', 3.4019391052900155e-06], ['debug_go_block_deep(const', 3.4019391052900155e-06], ['ncblock', 3.4019391052900155e-06], ['const_cast<Block*>(block);', 3.4019391052900155e-06], ['adc.dump_block(ncblock);', 3.4019391052900155e-06], ['Unordered_map(const', 3.4019391052900155e-06], ['unsigned)', 3.4019391052900155e-06], ['idx_map;', 3.4019391052900155e-06], ['Type_dumper(const', 3.4019391052900155e-06], ['top_(type),', 3.4019391052900155e-06], ['ntypes_(0)', 3.4019391052900155e-06], ['this->worklist_.push_back(type);', 3.4019391052900155e-06], ['visit();', 3.4019391052900155e-06], ['stringResult()', 3.4019391052900155e-06], ['ss_.str();', 3.4019391052900155e-06], ['emitpre(unsigned', 3.4019391052900155e-06], ['typeref(const', 3.4019391052900155e-06], ['visit_forward_declaration_type(const', 3.4019391052900155e-06], ['fdt);', 3.4019391052900155e-06], ['visit_function_type(const', 3.4019391052900155e-06], ['visit_struct_type(const', 3.4019391052900155e-06], ['st);', 3.4019391052900155e-06], ['visit_array_type(const', 3.4019391052900155e-06], ['at);', 3.4019391052900155e-06], ['visit_map_type(const', 3.4019391052900155e-06], ['visit_channel_type(const', 3.4019391052900155e-06], ['visit_interface_type(const', 3.4019391052900155e-06], ['visit_methods(const', 3.4019391052900155e-06], ['*tag);', 3.4019391052900155e-06], ['lookup(const', 3.4019391052900155e-06], ['Type*);', 3.4019391052900155e-06], ['notag', 3.4019391052900155e-06], ['0xffffffff;', 3.4019391052900155e-06], ['top_;', 3.4019391052900155e-06], ['idx_map', 3.4019391052900155e-06], ['types_;', 3.4019391052900155e-06], ['ntypes_;', 3.4019391052900155e-06], ['std::list<const', 3.4019391052900155e-06], ['worklist_;', 3.4019391052900155e-06], ['ss_;', 3.4019391052900155e-06], ['installing', 3.4019391052900155e-06], ["'types_'.", 3.4019391052900155e-06], ['<found,', 3.4019391052900155e-06], ['N>', 3.4019391052900155e-06], ["'found'", 3.4019391052900155e-06], ['index/tag', 3.4019391052900155e-06], ['N.', 3.4019391052900155e-06], ['Type_dumper::lookup(const', 3.4019391052900155e-06], ['std::pair<const', 3.4019391052900155e-06], ['std::make_pair(t,', 3.4019391052900155e-06], ['this->ntypes_);', 3.4019391052900155e-06], ['std::pair<idx_map::iterator,', 3.4019391052900155e-06], ['this->types_.insert(entry);', 3.4019391052900155e-06], ['this->ntypes_++;', 3.4019391052900155e-06], ['this->top_)', 3.4019391052900155e-06], ['this->worklist_.push_back(t);', 3.4019391052900155e-06], ['std::make_pair(ins.second,', 3.4019391052900155e-06], ['ins.first->second);', 3.4019391052900155e-06], ['preamble', 3.4019391052900155e-06], ['(via', 3.4019391052900155e-06], ['"notag"', 3.4019391052900155e-06], ['spaces.', 3.4019391052900155e-06], ['Type_dumper::emitpre(unsigned', 3.4019391052900155e-06], ['tbuf[50],', 3.4019391052900155e-06], ['pbuf[50],', 3.4019391052900155e-06], ['buf[200];', 3.4019391052900155e-06], ['tbuf[0]', 3.4019391052900155e-06], ['notag)', 3.4019391052900155e-06], ['snprintf(tbuf,', 3.4019391052900155e-06], ['"T%u",', 3.4019391052900155e-06], ['tag);', 3.4019391052900155e-06], ['pbuf[0]', 3.4019391052900155e-06], ['(ptr', 3.4019391052900155e-06], ['snprintf(pbuf,', 3.4019391052900155e-06], ['pbuf,', 3.4019391052900155e-06], ['"%p",', 3.4019391052900155e-06], ['"%8s', 3.4019391052900155e-06], ['%16s', 3.4019391052900155e-06], ['pbuf);', 3.4019391052900155e-06], ['simple/primitive', 3.4019391052900155e-06], ['int64)', 3.4019391052900155e-06], ['"pref"', 3.4019391052900155e-06], ['"suf"', 3.4019391052900155e-06], ['Type_dumper::typeref(const', 3.4019391052900155e-06], ['pref,', 3.4019391052900155e-06], ['suf)', 3.4019391052900155e-06], ['(pref', 3.4019391052900155e-06], ['pref;', 3.4019391052900155e-06], ['underlying,', 3.4019391052900155e-06], ['this->typeref("*",', 3.4019391052900155e-06], ['t->points_to(),', 3.4019391052900155e-06], ['"error_type";', 3.4019391052900155e-06], ['t->integer_type();', 3.4019391052900155e-06], ['(it->is_abstract())', 3.4019391052900155e-06], ['"abstract_int";', 3.4019391052900155e-06], ['(it->is_unsigned()', 3.4019391052900155e-06], ['"u"', 3.4019391052900155e-06], ['it->bits();', 3.4019391052900155e-06], ['Float_type*', 3.4019391052900155e-06], ['t->float_type();', 3.4019391052900155e-06], ['(ft->is_abstract())', 3.4019391052900155e-06], ['"abstract_float";', 3.4019391052900155e-06], ['"float"', 3.4019391052900155e-06], ['ft->bits();', 3.4019391052900155e-06], ['Complex_type*', 3.4019391052900155e-06], ['ct', 3.4019391052900155e-06], ['t->complex_type();', 3.4019391052900155e-06], ['(ct->is_abstract())', 3.4019391052900155e-06], ['"abstract_complex";', 3.4019391052900155e-06], ['"complex"', 3.4019391052900155e-06], ['ct->bits();', 3.4019391052900155e-06], ['"bool";', 3.4019391052900155e-06], ['"string";', 3.4019391052900155e-06], ['"nil_type";', 3.4019391052900155e-06], ['"void_type";', 3.4019391052900155e-06], ['"<???', 3.4019391052900155e-06], ['">', 3.4019391052900155e-06], ['(suf', 3.4019391052900155e-06], ['suf;', 3.4019391052900155e-06], ['Type_dumper::visit_forward_declaration_type(const', 3.4019391052900155e-06], ['fdt)', 3.4019391052900155e-06], ['"forward_declaration_type', 3.4019391052900155e-06], ['(fdt->is_defined())', 3.4019391052900155e-06], ['this->typeref("->', 3.4019391052900155e-06], ['fdt->real_type(),', 3.4019391052900155e-06], ['fdt->name()', 3.4019391052900155e-06], ['"\'";', 3.4019391052900155e-06], ['Type_dumper::visit_function_type(const', 3.4019391052900155e-06], ['"function\\n";', 3.4019391052900155e-06], ['rec', 3.4019391052900155e-06], ['ft->receiver();', 3.4019391052900155e-06], ['(rec', 3.4019391052900155e-06], ['this->typeref("receiver', 3.4019391052900155e-06], ['rec->type(),', 3.4019391052900155e-06], ['ft->results();', 3.4019391052900155e-06], ['Type_dumper::visit_struct_type(const', 3.4019391052900155e-06], ['st)', 3.4019391052900155e-06], ['"struct\\n";', 3.4019391052900155e-06], ['Type_dumper::visit_array_type(const', 3.4019391052900155e-06], ['at)', 3.4019391052900155e-06], ['(at->int_length(&len))', 3.4019391052900155e-06], ['at->element_type(),', 3.4019391052900155e-06], ['Type_dumper::visit_map_type(const', 3.4019391052900155e-06], ['mt)', 3.4019391052900155e-06], ['mt->val_type(),', 3.4019391052900155e-06], ['Type_dumper::visit_methods(const', 3.4019391052900155e-06], ['*tag)', 3.4019391052900155e-06], ['\'"', 3.4019391052900155e-06], ['p->name()', 3.4019391052900155e-06], ['Type_dumper::visit_interface_type(const', 3.4019391052900155e-06], ['it)', 3.4019391052900155e-06], ['(it->methods_are_finalized()', 3.4019391052900155e-06], ['it->methods()', 3.4019391052900155e-06], ['it->local_methods());', 3.4019391052900155e-06], ['"empty_interface\\n";', 3.4019391052900155e-06], ['"interface";', 3.4019391052900155e-06], ['it->methods_are_finalized())', 3.4019391052900155e-06], ['[unfinalized]\\n";', 3.4019391052900155e-06], ['"[parse_methods]");', 3.4019391052900155e-06], ['visit_methods(it->methods(),', 3.4019391052900155e-06], ['"[all_methods]");', 3.4019391052900155e-06], ['Type_dumper::visit_channel_type(const', 3.4019391052900155e-06], ['ct)', 3.4019391052900155e-06], ['"channel', 3.4019391052900155e-06], ['(ct->may_send())', 3.4019391052900155e-06], ['send";', 3.4019391052900155e-06], ['(ct->may_receive())', 3.4019391052900155e-06], ['receive";', 3.4019391052900155e-06], ['ct->element_type(),', 3.4019391052900155e-06], ['Type_dumper::visit()', 3.4019391052900155e-06], ['this->worklist_.empty())', 3.4019391052900155e-06], ['this->worklist_.front();', 3.4019391052900155e-06], ['this->worklist_.pop_front();', 3.4019391052900155e-06], ['this->emitpre(tag,', 3.4019391052900155e-06], ['switch(t->classification())', 3.4019391052900155e-06], ['this->visit_forward_declaration_type(t->forward_declaration_type());', 3.4019391052900155e-06], ['this->visit_function_type(t->function_type());', 3.4019391052900155e-06], ['this->visit_struct_type(t->struct_type());', 3.4019391052900155e-06], ['this->visit_array_type(t->array_type());', 3.4019391052900155e-06], ['this->visit_map_type(t->map_type());', 3.4019391052900155e-06], ['this->visit_channel_type(t->channel_type());', 3.4019391052900155e-06], ['this->visit_interface_type(t->interface_type());', 3.4019391052900155e-06], ['"<unknown/unrecognized', 3.4019391052900155e-06], ['">\\n";', 3.4019391052900155e-06], ['deep', 3.4019391052900155e-06], ['opposed', 3.4019391052900155e-06], ['shallow', 3.4019391052900155e-06], ['dump;', 3.4019391052900155e-06], ['debug_go_type(const', 3.4019391052900155e-06], ['"<NULL', 3.4019391052900155e-06], ['type>\\n";', 3.4019391052900155e-06], ['dumper(type);', 3.4019391052900155e-06], ['dumper.visit();', 3.4019391052900155e-06], ['dumper.stringResult();', 3.4019391052900155e-06], ['debug_go_type(Type*', 3.4019391052900155e-06], ['debug_go_type(ctype);', 3.4019391052900155e-06], ['escape.cc', 3.4019391052900155e-06], ['(based', 3.4019391052900155e-06], ['algorithm).', 3.4019391052900155e-06], ['<limits>', 3.4019391052900155e-06], ['<stack>', 3.4019391052900155e-06], ['"escape.h"', 3.4019391052900155e-06], ['sense', 3.4019391052900155e-06], ['Node::type()', 3.4019391052900155e-06], ['this->object()->is_variable())', 3.4019391052900155e-06], ['this->object()->var_value()->type();', 3.4019391052900155e-06], ['this->object()->is_function())', 3.4019391052900155e-06], ['this->object()->func_value()->type();', 3.4019391052900155e-06], ['this->expr()->type();', 3.4019391052900155e-06], ['(this->child()->type()->deref()->is_void_type())', 3.4019391052900155e-06], ['pointer-ness.', 3.4019391052900155e-06], ['this->child()->type();', 3.4019391052900155e-06], ['(this->child()->type()->is_slice_type())', 3.4019391052900155e-06], ['"indirect"', 3.4019391052900155e-06], ['element).', 3.4019391052900155e-06], ['this->child()->type()->array_type()->element_type();', 3.4019391052900155e-06], ['(this->child()->type()->is_string_type())', 3.4019391052900155e-06], ['this->child()->type()->deref();', 3.4019391052900155e-06], ['this->statement()->temporary_statement()', 3.4019391052900155e-06], ['this->statement()->temporary_statement()->type();', 3.4019391052900155e-06], ['Node::location()', 3.4019391052900155e-06], ['this->object()->location();', 3.4019391052900155e-06], ['this->expr()->location();', 3.4019391052900155e-06], ['this->statement()->location();', 3.4019391052900155e-06], ['this->child()->location();', 3.4019391052900155e-06], ['Node::definition_location()', 3.4019391052900155e-06], ['this->expr()->var_expression();', 3.4019391052900155e-06], ['Enclosed_var_expression*', 3.4019391052900155e-06], ['eve', 3.4019391052900155e-06], ['this->expr()->enclosed_var_expression();', 3.4019391052900155e-06], ['(eve', 3.4019391052900155e-06], ['eve->variable();', 3.4019391052900155e-06], ['cmd/gc', 3.4019391052900155e-06], ['prefixes', 3.4019391052900155e-06], ['variable/expressions.', 3.4019391052900155e-06], ['strip_packed_prefix(Gogo*', 3.4019391052900155e-06], ['packed_prefix', 3.4019391052900155e-06], ['gogo->pkgpath()', 3.4019391052900155e-06], ['fmt.find(packed_prefix);', 3.4019391052900155e-06], ['std::string::npos;', 3.4019391052900155e-06], ['fmt.find(packed_prefix))', 3.4019391052900155e-06], ['fmt.erase(pos,', 3.4019391052900155e-06], ['packed_prefix.length());', 3.4019391052900155e-06], ['Nconv', 3.4019391052900155e-06], ['Node::ast_format(Gogo*', 3.4019391052900155e-06], ['(this->is_sink())', 3.4019391052900155e-06], ['".sink";', 3.4019391052900155e-06], ['no->message_name();', 3.4019391052900155e-06], ['is_call', 3.4019391052900155e-06], ['e->call_expression()', 3.4019391052900155e-06], ['e->call_expression()->fn();', 3.4019391052900155e-06], ['e->func_expression();;', 3.4019391052900155e-06], ['is_closure', 3.4019391052900155e-06], ['fe->closure()', 3.4019391052900155e-06], ['(is_closure)', 3.4019391052900155e-06], ['"(func', 3.4019391052900155e-06], ['literal)()";', 3.4019391052900155e-06], ['Ast_dump_context::dump_to_stream(this->expr(),', 3.4019391052900155e-06], ['this->statement();', 3.4019391052900155e-06], ['Goto_unnamed_statement*', 3.4019391052900155e-06], ['s->goto_unnamed_statement();', 3.4019391052900155e-06], ['(unnamed', 3.4019391052900155e-06], ['unnamed->unnamed_label()->derived_from();', 3.4019391052900155e-06], ['(derived', 3.4019391052900155e-06], ['(derived->classification())', 3.4019391052900155e-06], ['Statement::STATEMENT_FOR:', 3.4019391052900155e-06], ['Statement::STATEMENT_FOR_RANGE:', 3.4019391052900155e-06], ['loop";', 3.4019391052900155e-06], ['"switch";', 3.4019391052900155e-06], ['switch";', 3.4019391052900155e-06], ['s->temporary_statement();', 3.4019391052900155e-06], ['(tmp', 3.4019391052900155e-06], ["Temporary's", 3.4019391052900155e-06], ['convenient.', 3.4019391052900155e-06], ['(tmp->init()', 3.4019391052900155e-06], ['Ast_dump_context::dump_to_stream(tmp->init(),', 3.4019391052900155e-06], [']";', 3.4019391052900155e-06], ['Ast_dump_context::dump_to_stream(s,', 3.4019391052900155e-06], ['"*("', 3.4019391052900155e-06], ['this->child()->ast_format(gogo)', 3.4019391052900155e-06], ['ss.str());', 3.4019391052900155e-06], ['trim', 3.4019391052900155e-06], ['s.substr(0,', 3.4019391052900155e-06], ["s.find_last_not_of('", 3.4019391052900155e-06], ['Jconv', 3.4019391052900155e-06], ['Node::details()', 3.4019391052900155e-06], ['details;', 3.4019391052900155e-06], ['(!this->is_sink())', 3.4019391052900155e-06], ['l("', 3.4019391052900155e-06], ['Linemap::location_to_line(this->location())', 3.4019391052900155e-06], ['e->var_expression()', 3.4019391052900155e-06], ['(node_object)', 3.4019391052900155e-06], ['depth.', 3.4019391052900155e-06], ['(node_object->is_variable())', 3.4019391052900155e-06], ['node_object->var_value();', 3.4019391052900155e-06], ['var->is_varargs_parameter();', 3.4019391052900155e-06], ['var->is_in_heap();', 3.4019391052900155e-06], ['var->init()', 3.4019391052900155e-06], ['"PEXTERN";', 3.4019391052900155e-06], ['(var->is_parameter())', 3.4019391052900155e-06], ['"PPARAM";', 3.4019391052900155e-06], ['(var->is_closure())', 3.4019391052900155e-06], ['"PAUTO";', 3.4019391052900155e-06], ['(node_object->is_result_variable())', 3.4019391052900155e-06], ['"PPARAMOUT";', 3.4019391052900155e-06], ['(node_object->is_function()', 3.4019391052900155e-06], ['node_object->is_function_declaration())', 3.4019391052900155e-06], ['"PFUNC";', 3.4019391052900155e-06], ['e->enclosed_var_expression()', 3.4019391052900155e-06], ['e->enclosed_var_expression()->variable();', 3.4019391052900155e-06], ['(enclosed->is_variable())', 3.4019391052900155e-06], ['enclosed->var_value();', 3.4019391052900155e-06], ['enclosed->result_var_value();', 3.4019391052900155e-06], ['(!class_name.empty())', 3.4019391052900155e-06], ['class("', 3.4019391052900155e-06], ['",heap";', 3.4019391052900155e-06], ['((this->encoding()', 3.4019391052900155e-06], ['Node::ESCAPE_UNKNOWN:', 3.4019391052900155e-06], ['esc(h)";', 3.4019391052900155e-06], ['esc(no)";', 3.4019391052900155e-06], ['Node::ESCAPE_NEVER:', 3.4019391052900155e-06], ['esc(N)";', 3.4019391052900155e-06], ['esc("', 3.4019391052900155e-06], ['this->encoding()', 3.4019391052900155e-06], ['ld("', 3.4019391052900155e-06], ['(is_varargs)', 3.4019391052900155e-06], ['isddd(1)";', 3.4019391052900155e-06], ['addrtaken";', 3.4019391052900155e-06], ['(is_assigned)', 3.4019391052900155e-06], ['assigned";', 3.4019391052900155e-06], ['details.str();', 3.4019391052900155e-06], ['Node::op_format()', 3.4019391052900155e-06], ['adc(&op,', 3.4019391052900155e-06], ['adc.dump_operator(e->unary_expression()->op());', 3.4019391052900155e-06], ['adc.dump_operator(e->binary_expression()->op());', 3.4019391052900155e-06], ['call";', 3.4019391052900155e-06], ['(e->func_expression()->is_runtime_function())', 3.4019391052900155e-06], ['(e->func_expression()->runtime_code())', 3.4019391052900155e-06], ['Runtime::GOPANIC:', 3.4019391052900155e-06], ['"panic";', 3.4019391052900155e-06], ['Runtime::GROWSLICE:', 3.4019391052900155e-06], ['"append";', 3.4019391052900155e-06], ['Runtime::SLICECOPY:', 3.4019391052900155e-06], ['Runtime::SLICESTRINGCOPY:', 3.4019391052900155e-06], ['Runtime::TYPEDSLICECOPY:', 3.4019391052900155e-06], ['"copy";', 3.4019391052900155e-06], ['"make";', 3.4019391052900155e-06], ['Runtime::DEFERPROC:', 3.4019391052900155e-06], ['Runtime::GORECOVER:', 3.4019391052900155e-06], ['"recover";', 3.4019391052900155e-06], ['Runtime::CLOSE:', 3.4019391052900155e-06], ['"close";', 3.4019391052900155e-06], ['"new";', 3.4019391052900155e-06], ['Expression::EXPRESSION_RECEIVE:', 3.4019391052900155e-06], ['(this->statement()->classification())', 3.4019391052900155e-06], ['Statement::STATEMENT_RETURN:', 3.4019391052900155e-06], ['"return";', 3.4019391052900155e-06], ['op.str();', 3.4019391052900155e-06], ['state,', 3.4019391052900155e-06], ['Node::state(Escape_context*', 3.4019391052900155e-06], ['var_no', 3.4019391052900155e-06], ['Node::make_node(var_no);', 3.4019391052900155e-06], ['var_node->state(context,', 3.4019391052900155e-06], ['Node::Escape_state;', 3.4019391052900155e-06], ['context->current_function();', 3.4019391052900155e-06], ['this->state_->fn', 3.4019391052900155e-06], ['go_assert(this->state_', 3.4019391052900155e-06], ['Node::~Node()', 3.4019391052900155e-06], ['excluded', 3.4019391052900155e-06], ['Node::encoding()', 3.4019391052900155e-06], ['Node::make_node(no)->encoding();', 3.4019391052900155e-06], ['this->encoding_;', 3.4019391052900155e-06], ['Node::set_encoding(int', 3.4019391052900155e-06], ['enc)', 3.4019391052900155e-06], ['(this->expr()->var_expression()', 3.4019391052900155e-06], ['Node::make_node(no)->set_encoding(enc);', 3.4019391052900155e-06], ['(this->expr()->func_expression()', 3.4019391052900155e-06], ['(heap', 3.4019391052900155e-06], ['expression).', 3.4019391052900155e-06], ['this->expr()->func_expression()->closure();', 3.4019391052900155e-06], ['(closure', 3.4019391052900155e-06], ['Node::make_node(closure)->set_encoding(enc);', 3.4019391052900155e-06], ['Node::is_big(Escape_context*', 3.4019391052900155e-06], ['t->is_call_multiple_result_type()', 3.4019391052900155e-06], ['t->is_sink_type()', 3.4019391052900155e-06], ['t->is_void_type()', 3.4019391052900155e-06], ['t->is_abstract())', 3.4019391052900155e-06], ['t->backend_type_size(context->gogo(),', 3.4019391052900155e-06], ['1024', 3.4019391052900155e-06], ['1024);', 3.4019391052900155e-06], ['(this->expr()->allocation_expression()', 3.4019391052900155e-06], ['t->deref()->backend_type_size(context->gogo(),', 3.4019391052900155e-06], ['(this->expr()->call_expression()', 3.4019391052900155e-06], ['this->expr()->call_expression();', 3.4019391052900155e-06], ['fn->is_runtime_function()', 3.4019391052900155e-06], ['(fn->runtime_code()', 3.4019391052900155e-06], ['Runtime::MAKESLICE', 3.4019391052900155e-06], ['fn->runtime_code()', 3.4019391052900155e-06], ['Runtime::MAKESLICE64))', 3.4019391052900155e-06], ['(tre->statement()', 3.4019391052900155e-06], ['tre->statement()->init()', 3.4019391052900155e-06], ['tre->statement()->init();', 3.4019391052900155e-06], ['(e->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['big;', 3.4019391052900155e-06], ['Node::is_sink()', 3.4019391052900155e-06], ['this->object()->is_sink())', 3.4019391052900155e-06], ['this->expr()->is_sink_expression())', 3.4019391052900155e-06], ['Node::objects;', 3.4019391052900155e-06], ['std::map<Expression*,', 3.4019391052900155e-06], ['Node::expressions;', 3.4019391052900155e-06], ['std::map<Statement*,', 3.4019391052900155e-06], ['Node::statements;', 3.4019391052900155e-06], ['Node::indirects;', 3.4019391052900155e-06], ['Node::make_node(Named_object*', 3.4019391052900155e-06], ['(Node::objects.find(no)', 3.4019391052900155e-06], ['Node::objects.end())', 3.4019391052900155e-06], ['Node::objects[no];', 3.4019391052900155e-06], ['Node(no);', 3.4019391052900155e-06], ['val(no,', 3.4019391052900155e-06], ['Node::objects.insert(val);', 3.4019391052900155e-06], ['Node::make_node(Expression*', 3.4019391052900155e-06], ['(Node::expressions.find(e)', 3.4019391052900155e-06], ['Node::expressions.end())', 3.4019391052900155e-06], ['Node::expressions[e];', 3.4019391052900155e-06], ['Node(e);', 3.4019391052900155e-06], ['std::pair<Expression*,', 3.4019391052900155e-06], ['val(e,', 3.4019391052900155e-06], ['Node::expressions.insert(val);', 3.4019391052900155e-06], ['Node::make_node(Statement*', 3.4019391052900155e-06], ['(Node::statements.find(s)', 3.4019391052900155e-06], ['Node::statements.end())', 3.4019391052900155e-06], ['Node::statements[s];', 3.4019391052900155e-06], ['Node(s);', 3.4019391052900155e-06], ['std::pair<Statement*,', 3.4019391052900155e-06], ['val(s,', 3.4019391052900155e-06], ['Node::statements.insert(val);', 3.4019391052900155e-06], ['child.', 3.4019391052900155e-06], ['Node::make_indirect_node(Node*', 3.4019391052900155e-06], ['child)', 3.4019391052900155e-06], ['Node(child);', 3.4019391052900155e-06], ['Node::indirects.push_back(n);', 3.4019391052900155e-06], ['exisiting', 3.4019391052900155e-06], ['flags)', 3.4019391052900155e-06], ['Node::max_encoding(int', 3.4019391052900155e-06], ['((e', 3.4019391052900155e-06], ['~ESCAPE_MASK)', 3.4019391052900155e-06], ['Node::note_inout_flows(int', 3.4019391052900155e-06], ['Level', 3.4019391052900155e-06], ['level)', 3.4019391052900155e-06], ['Flow+level', 3.4019391052900155e-06], ['00', 3.4019391052900155e-06], ['flow,', 3.4019391052900155e-06], ['level+1', 3.4019391052900155e-06], ['maxEncodedLevel.', 3.4019391052900155e-06], ['Esc', 3.4019391052900155e-06], ['6x2bits', 3.4019391052900155e-06], ['4x3bits', 3.4019391052900155e-06], ['3x4bits', 3.4019391052900155e-06], ['Node::max_encoding(e|ESCAPE_CONTENT_ESCAPES,', 3.4019391052900155e-06], ['ESCAPE_MAX_ENCODED_LEVEL)', 3.4019391052900155e-06], ['Level::From(ESCAPE_MAX_ENCODED_LEVEL);', 3.4019391052900155e-06], ['ESCAPE_BITS_PER_OUTPUT_IN_TAG', 3.4019391052900155e-06], ['(old', 3.4019391052900155e-06], ['(encoded', 3.4019391052900155e-06], ['old))', 3.4019391052900155e-06], ['encoded;', 3.4019391052900155e-06], ['encoded_flow', 3.4019391052900155e-06], ['(((encoded_flow', 3.4019391052900155e-06], ['ESCAPE_BITS_MASK_FOR_TAG)', 3.4019391052900155e-06], ['old)', 3.4019391052900155e-06], ['Failed', 3.4019391052900155e-06], ['encode.', 3.4019391052900155e-06], ['~(ESCAPE_BITS_MASK_FOR_TAG', 3.4019391052900155e-06], ['shift))', 3.4019391052900155e-06], ['encoded_flow;', 3.4019391052900155e-06], ['Escape_context.', 3.4019391052900155e-06], ['Escape_context::Escape_context(Gogo*', 3.4019391052900155e-06], ['recursive)', 3.4019391052900155e-06], ['current_function_(NULL),', 3.4019391052900155e-06], ['recursive_(recursive),', 3.4019391052900155e-06], ['sink_(Node::make_node(Named_object::make_sink())),', 3.4019391052900155e-06], ['loop_depth_(0),', 3.4019391052900155e-06], ['flood_id_(0),', 3.4019391052900155e-06], ['pdepth_(0)', 3.4019391052900155e-06], ['lives', 3.4019391052900155e-06], ['this->sink_->state(this,', 3.4019391052900155e-06], ['debug_function_name(Named_object*', 3.4019391052900155e-06], ['"<S>";', 3.4019391052900155e-06], ['(fn->func_value()->is_method())', 3.4019391052900155e-06], ['"T.m"', 3.4019391052900155e-06], ['"(*T).m"', 3.4019391052900155e-06], ['fn->func_value()->type()->receiver()->type();', 3.4019391052900155e-06], ['(rt->classification())', 3.4019391052900155e-06], ['rt->named_type()->name()', 3.4019391052900155e-06], ['rt->points_to()->named_type();', 3.4019391052900155e-06], ['"(*"', 3.4019391052900155e-06], ['nt->name()', 3.4019391052900155e-06], ['")."', 3.4019391052900155e-06], ['Escape_context::current_function_name()', 3.4019391052900155e-06], ['debug_function_name(this->current_function_);', 3.4019391052900155e-06], ['FNTYPE.', 3.4019391052900155e-06], ['Escape_context::init_retvals(Node*', 3.4019391052900155e-06], ['fntype)', 3.4019391052900155e-06], ['fntype->results()', 3.4019391052900155e-06], ['state->retvals.clear();', 3.4019391052900155e-06], ['fntype->results()->begin();', 3.4019391052900155e-06], ['fntype->results()->end();', 3.4019391052900155e-06], ['".out%d",', 3.4019391052900155e-06], ['dummy_var', 3.4019391052900155e-06], ['dummy_var->set_is_used();', 3.4019391052900155e-06], ['dummy_no', 3.4019391052900155e-06], ['dummy_var);', 3.4019391052900155e-06], ['dummy_node', 3.4019391052900155e-06], ['Node::make_node(dummy_no);', 3.4019391052900155e-06], ['dummy_node_state', 3.4019391052900155e-06], ['dummy_node->state(this,', 3.4019391052900155e-06], ['dummy_node_state->loop_depth', 3.4019391052900155e-06], ['state->retvals.push_back(dummy_node);', 3.4019391052900155e-06], ['Escape_context::add_dereference(Node*', 3.4019391052900155e-06], ['n->expr();', 3.4019391052900155e-06], ['e->type()->points_to()', 3.4019391052900155e-06], ['!e->type()->points_to()->is_void_type())', 3.4019391052900155e-06], ['deref_expr', 3.4019391052900155e-06], ['Node::make_node(deref_expr);', 3.4019391052900155e-06], ['OIND', 3.4019391052900155e-06], ['flavor.', 3.4019391052900155e-06], ['Node::make_indirect_node(n);', 3.4019391052900155e-06], ['ind->state(this,', 3.4019391052900155e-06], ['NULL)->loop_depth;', 3.4019391052900155e-06], ['Escape_context::track(Node*', 3.4019391052900155e-06], ['this->noesc_.push_back(n);', 3.4019391052900155e-06], ['Escape_note::make_tag(int', 3.4019391052900155e-06], ['encoding)', 3.4019391052900155e-06], ['"esc:0x%x",', 3.4019391052900155e-06], ['encoding);', 3.4019391052900155e-06], ['Escape_note::parse_tag(std::string*', 3.4019391052900155e-06], ['tag->substr(0,', 3.4019391052900155e-06], ['"esc:")', 3.4019391052900155e-06], ['(int)strtol(tag->substr(4).c_str(),', 3.4019391052900155e-06], ['(encoding', 3.4019391052900155e-06], ['encoding;', 3.4019391052900155e-06], ['-fgo-optimize-alloc', 3.4019391052900155e-06], ['activates', 3.4019391052900155e-06], ['Go_optimize', 3.4019391052900155e-06], ['optimize_allocation_flag("allocs",', 3.4019391052900155e-06], ['escape_hash_match(std::string', 3.4019391052900155e-06], ['suffix,', 3.4019391052900155e-06], ['(suffix.empty())', 3.4019391052900155e-06], ['(suffix.at(0)', 3.4019391052900155e-06], ['!escape_hash_match(suffix.substr(1),', 3.4019391052900155e-06], ['name.c_str();', 3.4019391052900155e-06], ['sha1_helper', 3.4019391052900155e-06], ['sha1_helper->process_bytes(p,', 3.4019391052900155e-06], ['strlen(p));', 3.4019391052900155e-06], ['sha1_helper->finish();', 3.4019391052900155e-06], ['sha1_helper;', 3.4019391052900155e-06], ['suffix.size()', 3.4019391052900155e-06], ['s.size()', 3.4019391052900155e-06], ['s.at(i);', 3.4019391052900155e-06], ['k++,', 3.4019391052900155e-06], ['j--,', 3.4019391052900155e-06], ['c>>=1)', 3.4019391052900155e-06], ['suffix.at(j)', 3.4019391052900155e-06], ['((c&1)', 3.4019391052900155e-06], ['Gogo::analyze_escape()', 3.4019391052900155e-06], ['(!optimize_allocation_flag.is_enabled()', 3.4019391052900155e-06], ['!this->compiling_runtime())', 3.4019391052900155e-06], ['this->discover_analysis_sets();', 3.4019391052900155e-06], ['this->debug_escape_hash()', 3.4019391052900155e-06], ['(std::vector<Analysis_set>::iterator', 3.4019391052900155e-06], ['this->analysis_sets_.begin();', 3.4019391052900155e-06], ['this->analysis_sets_.end();', 3.4019391052900155e-06], ['escape_hash_match(this->debug_escape_hash(),', 3.4019391052900155e-06], ['(*fn)->message_name());', 3.4019391052900155e-06], ['(!match)', 3.4019391052900155e-06], ['Escape', 3.4019391052900155e-06], ['knows.', 3.4019391052900155e-06], ['(*fn)->func_value()->type();', 3.4019391052900155e-06], ['disables', 3.4019391052900155e-06], ['triggers', 3.4019391052900155e-06], ['Escape_context(this,', 3.4019391052900155e-06], ['p->second);', 3.4019391052900155e-06], ['(std::vector<Named_object*>::reverse_iterator', 3.4019391052900155e-06], ['stack.rbegin();', 3.4019391052900155e-06], ['stack.rend();', 3.4019391052900155e-06], ['context->set_current_function(*fn);', 3.4019391052900155e-06], ['this->assign_connectivity(context,', 3.4019391052900155e-06], ['std::set<Node*>', 3.4019391052900155e-06], ['dsts', 3.4019391052900155e-06], ['context->dsts();', 3.4019391052900155e-06], ['Unordered_map(Node*,', 3.4019391052900155e-06], ['escapes;', 3.4019391052900155e-06], ['(;;)', 3.4019391052900155e-06], ['Reflood', 3.4019391052900155e-06], ["roots'", 3.4019391052900155e-06], ['states', 3.4019391052900155e-06], ['increase.', 3.4019391052900155e-06], ['rare.', 3.4019391052900155e-06], ['((*n)->object()', 3.4019391052900155e-06], ['((*n)->expr()', 3.4019391052900155e-06], ['((*n)->expr()->var_expression()', 3.4019391052900155e-06], ['(*n)->expr()->enclosed_var_expression()', 3.4019391052900155e-06], ['(*n)->expr()->func_expression()', 3.4019391052900155e-06], ['(escapes[*n]', 3.4019391052900155e-06], ['(*n)->encoding())', 3.4019391052900155e-06], ['"Reflooding', 3.4019391052900155e-06], ['debug_function_name((*n)->state(context,', 3.4019391052900155e-06], ['NULL)->fn).c_str(),', 3.4019391052900155e-06], ['(done)', 3.4019391052900155e-06], ['this->tag_function(context,', 3.4019391052900155e-06], ['noesc', 3.4019391052900155e-06], ['context->non_escaping_nodes();', 3.4019391052900155e-06], ['noesc.begin();', 3.4019391052900155e-06], ['noesc.end();', 3.4019391052900155e-06], ['(*n)->state(context,', 3.4019391052900155e-06], ['((*n)->encoding()', 3.4019391052900155e-06], ['escape",', 3.4019391052900155e-06], ['strip_packed_prefix(this,', 3.4019391052900155e-06], ['debug_function_name(state->fn)).c_str(),', 3.4019391052900155e-06], ['Escape_analysis_discover(Gogo*', 3.4019391052900155e-06], ['traverse_func_declarations),', 3.4019391052900155e-06], ['component_ids_()', 3.4019391052900155e-06], ['function_declaration(Named_object*);', 3.4019391052900155e-06], ['visit(Named_object*);', 3.4019391052900155e-06], ['visit_code(Named_object*,', 3.4019391052900155e-06], ['Unordered_map(Named_object*,', 3.4019391052900155e-06], ['Component_ids;', 3.4019391052900155e-06], ['discovery.', 3.4019391052900155e-06], ['Component_ids', 3.4019391052900155e-06], ['component_ids_;', 3.4019391052900155e-06], ['of.', 3.4019391052900155e-06], ['std::stack<Named_object*>', 3.4019391052900155e-06], ['stack_;', 3.4019391052900155e-06], ['Escape_analysis_discover::id', 3.4019391052900155e-06], ['Escape_analysis_discover::function(Named_object*', 3.4019391052900155e-06], ['Escape_analysis_discover::function_declaration(Named_object*', 3.4019391052900155e-06], ['component,', 3.4019391052900155e-06], ['Finding', 3.4019391052900155e-06], ['Sedgewick,', 3.4019391052900155e-06], ['Algorithms,', 3.4019391052900155e-06], ['Edition,', 3.4019391052900155e-06], ['p.', 3.4019391052900155e-06], ['482,', 3.4019391052900155e-06], ['adaptations.', 3.4019391052900155e-06], ['(fn->func_value()->enclosing()', 3.4019391052900155e-06], ['Refusing', 3.4019391052900155e-06], ['appears.', 3.4019391052900155e-06], ['convenient', 3.4019391052900155e-06], ['Second,', 3.4019391052900155e-06], ['(min)', 3.4019391052900155e-06], ['n+1,', 3.4019391052900155e-06], ['component:', 3.4019391052900155e-06], ['closures.', 3.4019391052900155e-06], ['n+1', 3.4019391052900155e-06], ['precise', 3.4019391052900155e-06], ['non-recursive', 3.4019391052900155e-06], ['Escape_analysis_discover::visit(Named_object*', 3.4019391052900155e-06], ['Component_ids::const_iterator', 3.4019391052900155e-06], ['this->component_ids_.find(fn);', 3.4019391052900155e-06], ['this->component_ids_.end())', 3.4019391052900155e-06], ['visited.', 3.4019391052900155e-06], ['this->stack_.push(fn);', 3.4019391052900155e-06], ['this->visit_code(fn,', 3.4019391052900155e-06], ['((min', 3.4019391052900155e-06], ['((fn->is_function()', 3.4019391052900155e-06], ['fn->func_value()->enclosing()', 3.4019391052900155e-06], ['fn->is_function_declaration()))', 3.4019391052900155e-06], ['!this->stack_.empty();', 3.4019391052900155e-06], ['this->stack_.pop())', 3.4019391052900155e-06], ['this->stack_.top();', 3.4019391052900155e-06], ['this->stack_.pop();', 3.4019391052900155e-06], ['group.push_back(n);', 3.4019391052900155e-06], ['this->component_ids_[n]', 3.4019391052900155e-06], ['group.push_back(fn);', 3.4019391052900155e-06], ['std::reverse(group.begin(),', 3.4019391052900155e-06], ['group.end());', 3.4019391052900155e-06], ['this->gogo_->add_analysis_set(group,', 3.4019391052900155e-06], ['recursive);', 3.4019391052900155e-06], ['Escape_discover_expr(Escape_analysis_discover*', 3.4019391052900155e-06], ['ead,', 3.4019391052900155e-06], ['ead_(ead),', 3.4019391052900155e-06], ['min_(min)', 3.4019391052900155e-06], ['min()', 3.4019391052900155e-06], ['this->min_;', 3.4019391052900155e-06], ['expression(Expression**', 3.4019391052900155e-06], ['pexpr);', 3.4019391052900155e-06], ['Escape_analysis_discover*', 3.4019391052900155e-06], ['ead_;', 3.4019391052900155e-06], ['min_;', 3.4019391052900155e-06], ['Escape_discover_expr::expression(Expression**', 3.4019391052900155e-06], ['e->call_expression()->fn()->func_expression()', 3.4019391052900155e-06], ['Method', 3.4019391052900155e-06], ['e->call_expression()->fn()->func_expression()->named_object();', 3.4019391052900155e-06], ['Closure.', 3.4019391052900155e-06], ['e->func_expression()->named_object();', 3.4019391052900155e-06], ['this->min_', 3.4019391052900155e-06], ['std::min(this->min_,', 3.4019391052900155e-06], ['this->ead_->visit(fn));', 3.4019391052900155e-06], ['Escape_analysis_discover::visit_code(Named_object*', 3.4019391052900155e-06], ['ede(this,', 3.4019391052900155e-06], ['fn->func_value()->traverse(&ede);', 3.4019391052900155e-06], ['ede.min();', 3.4019391052900155e-06], ['analyze.', 3.4019391052900155e-06], ['Gogo::discover_analysis_sets()', 3.4019391052900155e-06], ['ead(this);', 3.4019391052900155e-06], ['this->traverse(&ead);', 3.4019391052900155e-06], ['Escape_analysis_loop()', 3.4019391052900155e-06], ['Traverse(traverse_statements)', 3.4019391052900155e-06], ['Escape_analysis_loop::statement(Block*,', 3.4019391052900155e-06], ['(s->label_statement()', 3.4019391052900155e-06], ['s->label_statement()->label()->set_nonlooping();', 3.4019391052900155e-06], ['(s->goto_statement()', 3.4019391052900155e-06], ['(s->goto_statement()->label()->nonlooping())', 3.4019391052900155e-06], ['s->goto_statement()->label()->set_looping();', 3.4019391052900155e-06], ['interesting', 3.4019391052900155e-06], ["context's", 3.4019391052900155e-06], ['Escape_analysis_assign(Escape_context*', 3.4019391052900155e-06], ['context_(context),', 3.4019391052900155e-06], ['fn_(fn)', 3.4019391052900155e-06], ['call(Call_expression*', 3.4019391052900155e-06], ['assign(Node*', 3.4019391052900155e-06], ['assign_deref(Node*', 3.4019391052900155e-06], ['assign_from_note(std::string*', 3.4019391052900155e-06], ['flows(Node*', 3.4019391052900155e-06], ['fn_;', 3.4019391052900155e-06], ['following.', 3.4019391052900155e-06], ['is_self_assignment(Expression*', 3.4019391052900155e-06], ['lue', 3.4019391052900155e-06], ['(lhs->field_reference_expression()', 3.4019391052900155e-06], ['lhs->field_reference_expression()->expr()->unary_expression()', 3.4019391052900155e-06], ['lhs->unary_expression());', 3.4019391052900155e-06], ['(lue', 3.4019391052900155e-06], ['lue->op()', 3.4019391052900155e-06], ['lue->operand()->var_expression()', 3.4019391052900155e-06], ['raie', 3.4019391052900155e-06], ['rhs->array_index_expression();', 3.4019391052900155e-06], ['rsie', 3.4019391052900155e-06], ['rhs->string_index_expression();', 3.4019391052900155e-06], ['rarray', 3.4019391052900155e-06], ['(raie', 3.4019391052900155e-06], ['raie->end()', 3.4019391052900155e-06], ['raie->array()->type()->is_slice_type()', 3.4019391052900155e-06], ['raie->array()', 3.4019391052900155e-06], ['(rsie', 3.4019391052900155e-06], ['rsie->type()->is_string_type()', 3.4019391052900155e-06], ['rsie->string()', 3.4019391052900155e-06], ['rue', 3.4019391052900155e-06], ['rarray->field_reference_expression()', 3.4019391052900155e-06], ['rarray->field_reference_expression()->expr()->unary_expression()', 3.4019391052900155e-06], ['rarray->unary_expression()', 3.4019391052900155e-06], ['(rue', 3.4019391052900155e-06], ['rue->op()', 3.4019391052900155e-06], ['rue->operand()->var_expression()', 3.4019391052900155e-06], ['lve->named_object()', 3.4019391052900155e-06], ['rve->named_object();', 3.4019391052900155e-06], ['Escape_analysis_assign::statement(Block*,', 3.4019391052900155e-06], ['enter/exit', 3.4019391052900155e-06], ['is_for_statement', 3.4019391052900155e-06], ['(s->is_block_statement()', 3.4019391052900155e-06], ['s->block_statement()->is_lowered_for_statement());', 3.4019391052900155e-06], ['this->context_->decrease_loop_depth();', 3.4019391052900155e-06], ['s->unnamed_label_statement()', 3.4019391052900155e-06], ['s->expression_statement()', 3.4019391052900155e-06], ['!s->is_block_statement())', 3.4019391052900155e-06], ['(s->classification())', 3.4019391052900155e-06], ['Statement::STATEMENT_VARIABLE_DECLARATION:', 3.4019391052900155e-06], ['s->variable_declaration_statement()->var();', 3.4019391052900155e-06], ['Node::make_node(var);', 3.4019391052900155e-06], ['var_node->state(this->context_,', 3.4019391052900155e-06], ['this->context_->loop_depth();', 3.4019391052900155e-06], ['var->var_value()->init()', 3.4019391052900155e-06], ['init_node', 3.4019391052900155e-06], ['Node::make_node(var->var_value()->init());', 3.4019391052900155e-06], ['this->assign(var_node,', 3.4019391052900155e-06], ['init_node);', 3.4019391052900155e-06], ['Statement::STATEMENT_TEMPORARY:', 3.4019391052900155e-06], ['s->temporary_statement()->init();', 3.4019391052900155e-06], ['Node::make_node(init);', 3.4019391052900155e-06], ['(s->temporary_statement()->value_escapes())', 3.4019391052900155e-06], ['this->assign(Node::make_node(s),', 3.4019391052900155e-06], ['Statement::STATEMENT_LABEL:', 3.4019391052900155e-06], ['Label_statement*', 3.4019391052900155e-06], ['label_stmt', 3.4019391052900155e-06], ['s->label_statement();', 3.4019391052900155e-06], ['(label_stmt->label()->looping())', 3.4019391052900155e-06], ['label_type', 3.4019391052900155e-06], ['(label_stmt->label()->looping()', 3.4019391052900155e-06], ['"looping"', 3.4019391052900155e-06], ['"nonlooping");', 3.4019391052900155e-06], ['label",', 3.4019391052900155e-06], ['label_stmt->label()->name().c_str(),', 3.4019391052900155e-06], ['label_type.c_str());', 3.4019391052900155e-06], ['statements;', 3.4019391052900155e-06], ['s->assignment_statement();', 3.4019391052900155e-06], ['assn->lhs();', 3.4019391052900155e-06], ['assn->rhs();', 3.4019391052900155e-06], ['lhs_node', 3.4019391052900155e-06], ['Node::make_node(lhs);', 3.4019391052900155e-06], ['rhs_node', 3.4019391052900155e-06], ['Node::make_node(rhs);', 3.4019391052900155e-06], ['Filter', 3.4019391052900155e-06], ['(is_self_assignment(lhs,', 3.4019391052900155e-06], ['self-assignment', 3.4019391052900155e-06], ['lhs_node->ast_format(gogo).c_str());', 3.4019391052900155e-06], ['this->assign(lhs_node,', 3.4019391052900155e-06], ['rhs_node);', 3.4019391052900155e-06], ['Statement::STATEMENT_SEND:', 3.4019391052900155e-06], ['sent_node', 3.4019391052900155e-06], ['Node::make_node(s->send_statement()->val());', 3.4019391052900155e-06], ['sent_node);', 3.4019391052900155e-06], ['(this->context_->loop_depth()', 3.4019391052900155e-06], ['fallthrough', 3.4019391052900155e-06], ['Statement::STATEMENT_GO:', 3.4019391052900155e-06], ['f(x)', 3.4019391052900155e-06], ['f(x).', 3.4019391052900155e-06], ['Thunk_statement*', 3.4019391052900155e-06], ['s->thunk_statement();', 3.4019391052900155e-06], ['(thunk->call()->call_expression()', 3.4019391052900155e-06], ['thunk->call()->call_expression();', 3.4019391052900155e-06], ['func_node', 3.4019391052900155e-06], ['func_node);', 3.4019391052900155e-06], ['moved-to-heap', 3.4019391052900155e-06], ['move_to_heap(Gogo*', 3.4019391052900155e-06], ['(expr->var_expression()', 3.4019391052900155e-06], ['expr->var_expression()->named_object();', 3.4019391052900155e-06], ['(expr->enclosed_var_expression()', 3.4019391052900155e-06], ['expr->enclosed_var_expression()->variable();', 3.4019391052900155e-06], ['((no->is_variable()', 3.4019391052900155e-06], ['!no->var_value()->is_global())', 3.4019391052900155e-06], ['Node::make_node(expr);', 3.4019391052900155e-06], ['go_inform(n->definition_location(),', 3.4019391052900155e-06], ['"moved', 3.4019391052900155e-06], ['heap:', 3.4019391052900155e-06], ['go_error_at(expr->location(),', 3.4019391052900155e-06], ['Escape_analysis_assign::expression(Expression**', 3.4019391052900155e-06], ['Big', 3.4019391052900155e-06], ['n->is_big(this->context_))', 3.4019391052900155e-06], ['stack",', 3.4019391052900155e-06], ['*pexpr);', 3.4019391052900155e-06], ['n->set_encoding(Node::ESCAPE_HEAP);', 3.4019391052900155e-06], ['(*pexpr)->address_taken(true);', 3.4019391052900155e-06], ['((*pexpr)->func_expression()', 3.4019391052900155e-06], ['(*pexpr)->traverse_subexpressions(this);', 3.4019391052900155e-06], ['(*pexpr)->call_expression();', 3.4019391052900155e-06], ['(bce->code())', 3.4019391052900155e-06], ['Builtin_call_expression::BUILTIN_PANIC:', 3.4019391052900155e-06], ['panic_arg', 3.4019391052900155e-06], ['panic_arg);', 3.4019391052900155e-06], ['Builtin_call_expression::BUILTIN_APPEND:', 3.4019391052900155e-06], ['leak.', 3.4019391052900155e-06], ['(call->is_varargs())', 3.4019391052900155e-06], ['slice2...)', 3.4019391052900155e-06], ['slice2', 3.4019391052900155e-06], ['appended);', 3.4019391052900155e-06], ['"special', 3.4019391052900155e-06], ['treatment', 3.4019391052900155e-06], ['slice2...)");', 3.4019391052900155e-06], ['call->args()->begin()', 3.4019391052900155e-06], ['Node::make_node(*pa);', 3.4019391052900155e-06], ['Builtin_call_expression::BUILTIN_COPY:', 3.4019391052900155e-06], ['content.', 3.4019391052900155e-06], ['Runtime::MAPASSIGN:', 3.4019391052900155e-06], ['key_node', 3.4019391052900155e-06], ['key_node);', 3.4019391052900155e-06], ['Runtime::IFACEE2T2:', 3.4019391052900155e-06], ['Runtime::IFACEI2T2:', 3.4019391052900155e-06], ['non-interface,', 3.4019391052900155e-06], ['IFACEI2T2(type,', 3.4019391052900155e-06], ['v,', 3.4019391052900155e-06], ['(void*)&tmp_x)', 3.4019391052900155e-06], ['tmp_x.', 3.4019391052900155e-06], ['IFACEX2Y2', 3.4019391052900155e-06], ['Those', 3.4019391052900155e-06], ['::assign.', 3.4019391052900155e-06], ['src_node', 3.4019391052900155e-06], ['Node::make_node(call->args()->at(1));', 3.4019391052900155e-06], ['dst_node;', 3.4019391052900155e-06], ['call->args()->at(2);', 3.4019391052900155e-06], ['tmp_x', 3.4019391052900155e-06], ['statement.cc,', 3.4019391052900155e-06], ['Tuple_type_guard_assignment_statement::lower_to_object_type.', 3.4019391052900155e-06], ['(arg2->conversion_expression()', 3.4019391052900155e-06], ['arg2->conversion_expression()->expr()->unary_expression()', 3.4019391052900155e-06], ['arg2->unary_expression());', 3.4019391052900155e-06], ['(ue', 3.4019391052900155e-06], ['ue->op()', 3.4019391052900155e-06], ['(!ue->operand()->type()->has_pointer())', 3.4019391052900155e-06], ['non-pointer.', 3.4019391052900155e-06], ['Node::make_node(ue->operand());', 3.4019391052900155e-06], ['this->context_->add_dereference(Node::make_node(arg2));', 3.4019391052900155e-06], ['this->assign(dst_node,', 3.4019391052900155e-06], ['src_node);', 3.4019391052900155e-06], ['this->call(call);', 3.4019391052900155e-06], ['Runtime::NEW.', 3.4019391052900155e-06], ['(*pexpr)->conversion_expression();', 3.4019391052900155e-06], ['tce_node', 3.4019391052900155e-06], ['Node::make_node(tce);', 3.4019391052900155e-06], ['Node::make_node(tce->expr());', 3.4019391052900155e-06], ['this->context_->track(tce_node);', 3.4019391052900155e-06], ['this->assign(tce_node,', 3.4019391052900155e-06], ['converted);', 3.4019391052900155e-06], ['this->context_->track(array_node);', 3.4019391052900155e-06], ['(*pexpr)->slice_literal()->vals()', 3.4019391052900155e-06], ['(*pexpr)->array_literal()->vals());', 3.4019391052900155e-06], ['(*pexpr)->struct_literal()->vals();', 3.4019391052900155e-06], ['slice_node', 3.4019391052900155e-06], ['ptr_node', 3.4019391052900155e-06], ['Node::make_node((*pexpr)->slice_value_expression()->valmem());', 3.4019391052900155e-06], ['this->assign(slice_node,', 3.4019391052900155e-06], ['ptr_node);', 3.4019391052900155e-06], ['pointer_node', 3.4019391052900155e-06], ['lit_node', 3.4019391052900155e-06], ['Node::make_node((*pexpr)->heap_expression()->expr());', 3.4019391052900155e-06], ['this->context_->track(pointer_node);', 3.4019391052900155e-06], ['escapes,', 3.4019391052900155e-06], ['this->assign(pointer_node,', 3.4019391052900155e-06], ['lit_node);', 3.4019391052900155e-06], ['bound_node', 3.4019391052900155e-06], ['this->context_->track(bound_node);', 3.4019391052900155e-06], ['(*pexpr)->bound_method_expression()->first_argument();', 3.4019391052900155e-06], ['obj_node', 3.4019391052900155e-06], ['Node::make_node(obj);', 3.4019391052900155e-06], ['obj_node);', 3.4019391052900155e-06], ['Map_construction_expression*', 3.4019391052900155e-06], ['mce', 3.4019391052900155e-06], ['(*pexpr)->map_literal();', 3.4019391052900155e-06], ['map_node', 3.4019391052900155e-06], ['Node::make_node(mce);', 3.4019391052900155e-06], ['this->context_->track(map_node);', 3.4019391052900155e-06], ['(mce->vals()', 3.4019391052900155e-06], ['mce->vals()->begin();', 3.4019391052900155e-06], ['mce->vals()->end();', 3.4019391052900155e-06], ['(*pexpr)->func_expression();', 3.4019391052900155e-06], ['closure_node', 3.4019391052900155e-06], ['Node::make_node(fe);', 3.4019391052900155e-06], ['this->context_->track(closure_node);', 3.4019391052900155e-06], ['&struct{f', 3.4019391052900155e-06], ['[]*Variable}{...}.', 3.4019391052900155e-06], ['Link', 3.4019391052900155e-06], ['enclosed.', 3.4019391052900155e-06], ['Heap_expression*', 3.4019391052900155e-06], ['he', 3.4019391052900155e-06], ['fe->closure()->heap_expression();', 3.4019391052900155e-06], ['he->expr()->struct_literal();', 3.4019391052900155e-06], ['sce->vals()->begin();', 3.4019391052900155e-06], ['sce->vals()->end();', 3.4019391052900155e-06], ['this->context_->track(enclosed_node);', 3.4019391052900155e-06], ['this->assign(closure_node,', 3.4019391052900155e-06], ['enclosed_node);', 3.4019391052900155e-06], ['(*pexpr)->unary_expression()->operand();', 3.4019391052900155e-06], ['(operand->var_expression()', 3.4019391052900155e-06], ['operand->var_expression()->named_object();', 3.4019391052900155e-06], ['(operand->enclosed_var_expression()', 3.4019391052900155e-06], ['operand->enclosed_var_expression()->variable();', 3.4019391052900155e-06], ['((var->is_variable()', 3.4019391052900155e-06], ['var->var_value()->is_parameter())', 3.4019391052900155e-06], ['var->is_result_variable()))', 3.4019391052900155e-06], ['OPERATOR_AND', 3.4019391052900155e-06], ['(*pexpr)->unary_expression()->op()', 3.4019391052900155e-06], ['*x,', 3.4019391052900155e-06], ['expr_state', 3.4019391052900155e-06], ['operand_node', 3.4019391052900155e-06], ['Node::make_node(operand);', 3.4019391052900155e-06], ['operand_state', 3.4019391052900155e-06], ['operand_node->state(this->context_,', 3.4019391052900155e-06], ['(operand_state->loop_depth', 3.4019391052900155e-06], ['expr_state->loop_depth', 3.4019391052900155e-06], ['operand_state->loop_depth;', 3.4019391052900155e-06], ['(*pexpr)->array_index_expression();', 3.4019391052900155e-06], ['elem_state', 3.4019391052900155e-06], ['array_state', 3.4019391052900155e-06], ['array_node->state(this->context_,', 3.4019391052900155e-06], ['elem_state->loop_depth', 3.4019391052900155e-06], ['!aie->array()->type()->is_slice_type())', 3.4019391052900155e-06], ['aie->array(),', 3.4019391052900155e-06], ['aie->location());', 3.4019391052900155e-06], ['addr_node', 3.4019391052900155e-06], ['Node::make_node(addr);', 3.4019391052900155e-06], ['n->set_child(addr_node);', 3.4019391052900155e-06], ['this->context_->track(addr_node);', 3.4019391052900155e-06], ['addr_node->state(this->context_,', 3.4019391052900155e-06], ['Node::make_node((*pexpr)->field_reference_expression()->expr());', 3.4019391052900155e-06], ['field_state', 3.4019391052900155e-06], ['struct_state', 3.4019391052900155e-06], ['struct_node->state(this->context_,', 3.4019391052900155e-06], ['field_state->loop_depth', 3.4019391052900155e-06], ['struct_state->loop_depth;', 3.4019391052900155e-06], ['Escape_analysis_assign::call(Call_expression*', 3.4019391052900155e-06], ['call->get_function_type();', 3.4019391052900155e-06], ['fntype->receiver()->type()->interface_type()', 3.4019391052900155e-06], ['(fn->named_object()->is_function()', 3.4019391052900155e-06], ['fn->named_object()->func_value()->enclosing()', 3.4019391052900155e-06], ['arg_nodes;', 3.4019391052900155e-06], ['(call->fn()->interface_field_reference_expression()', 3.4019391052900155e-06], ['call->fn()->interface_field_reference_expression();', 3.4019391052900155e-06], ['field_node', 3.4019391052900155e-06], ['Node::make_node(ifre->expr());', 3.4019391052900155e-06], ['arg_nodes.push_back(field_node);', 3.4019391052900155e-06], ['arg_nodes.push_back(Node::make_node(*p));', 3.4019391052900155e-06], ['(indirect)', 3.4019391052900155e-06], ['theSink.', 3.4019391052900155e-06], ['#14409.', 3.4019391052900155e-06], ['fn_node', 3.4019391052900155e-06], ['NULL)->retvals;', 3.4019391052900155e-06], ['this->assign_deref(*p,', 3.4019391052900155e-06], ['fn_node);', 3.4019391052900155e-06], ['untagged', 3.4019391052900155e-06], ['fn->named_object()->is_function()', 3.4019391052900155e-06], ['!fntype->is_tagged())', 3.4019391052900155e-06], ['group",', 3.4019391052900155e-06], ['fn->named_object()->func_value();', 3.4019391052900155e-06], ['f->block()->bindings();', 3.4019391052900155e-06], ['f->result_variables();', 3.4019391052900155e-06], ['result_node', 3.4019391052900155e-06], ['Node::make_node(*p1);', 3.4019391052900155e-06], ['state->retvals.push_back(result_node);', 3.4019391052900155e-06], ['rcvr_name', 3.4019391052900155e-06], ['fntype->receiver()->name();', 3.4019391052900155e-06], ['(rcvr_name.empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(rcvr_name)', 3.4019391052900155e-06], ['!fntype->receiver()->type()->has_pointer())', 3.4019391052900155e-06], ['callee_bindings->lookup_local(fntype->receiver()->name());', 3.4019391052900155e-06], ['this->assign_deref(rcvr_node,', 3.4019391052900155e-06], ['this->assign(rcvr_node,', 3.4019391052900155e-06], ['++p1,', 3.4019391052900155e-06], ['(p1->name().empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(p1->name()))', 3.4019391052900155e-06], ['callee_bindings->lookup_local(p1->name());', 3.4019391052900155e-06], ['(*p)->expr();', 3.4019391052900155e-06], ['(arg->var_expression()', 3.4019391052900155e-06], ['arg->var_expression()->named_object()', 3.4019391052900155e-06], ['param_no)', 3.4019391052900155e-06], ['this->assign(param_node,', 3.4019391052900155e-06], ['recursive",', 3.4019391052900155e-06], ['(!call_state->retvals.empty())', 3.4019391052900155e-06], ['"esc', 3.4019391052900155e-06], ['decorated', 3.4019391052900155e-06], ['Receiver.', 3.4019391052900155e-06], ['arg_nodes.end())', 3.4019391052900155e-06], ['fntype->receiver()->note();', 3.4019391052900155e-06], ['this->context_->add_dereference(*p));', 3.4019391052900155e-06], ['(!Type::are_identical(fntype->receiver()->type(),', 3.4019391052900155e-06], ['til->end()', 3.4019391052900155e-06], ['++pn,', 3.4019391052900155e-06], ['(!Type::are_identical(pn->type(),', 3.4019391052900155e-06], ['pn->type();', 3.4019391052900155e-06], ['t->has_pointer())', 3.4019391052900155e-06], ['pn->note();', 3.4019391052900155e-06], ['!call->is_deferred()', 3.4019391052900155e-06], ['!call->is_concurrent())', 3.4019391052900155e-06], ['non-escaping?', 3.4019391052900155e-06], ['limiting', 3.4019391052900155e-06], ['somehow', 3.4019391052900155e-06], ['examined', 3.4019391052900155e-06], ['[DST]*f(x)', 3.4019391052900155e-06], ['[SRC]y,', 3.4019391052900155e-06], ['Escape_analysis_assign::assign(Node*', 3.4019391052900155e-06], ['go_inform(dst->location(),', 3.4019391052900155e-06], ['escassign:', 3.4019391052900155e-06], ['%s(%s)[%s]', 3.4019391052900155e-06], ['%s(%s)[%s]",', 3.4019391052900155e-06], ['dst->details().c_str(),', 3.4019391052900155e-06], ['dst->op_format().c_str(),', 3.4019391052900155e-06], ['src->op_format().c_str());', 3.4019391052900155e-06], ['(dst->is_indirect())', 3.4019391052900155e-06], ['this->context_->sink()', 3.4019391052900155e-06], ['dst->expr();', 3.4019391052900155e-06], ['var->var_value()->is_global())', 3.4019391052900155e-06], ['strct', 3.4019391052900155e-06], ['(strct->heap_expression()', 3.4019391052900155e-06], ['indirection.', 3.4019391052900155e-06], ['DST.x', 3.4019391052900155e-06], ['Node::make_node(strct);', 3.4019391052900155e-06], ['(!are->array()->type()->is_slice_type())', 3.4019391052900155e-06], ['DST[i]', 3.4019391052900155e-06], ['Node::make_node(are->array());', 3.4019391052900155e-06], ['(e->unary_expression()->op()', 3.4019391052900155e-06], ['Expression::EXPRESSION_MAP_INDEX:', 3.4019391052900155e-06], ["map's", 3.4019391052900155e-06], ['e->map_index_expression()->index();', 3.4019391052900155e-06], ['index_node', 3.4019391052900155e-06], ['Node::make_node(index);', 3.4019391052900155e-06], ['index_node);', 3.4019391052900155e-06], ['Temporary_statement.', 3.4019391052900155e-06], ['dst->expr()->temporary_reference_expression()->statement();', 3.4019391052900155e-06], ['(t->value_escapes())', 3.4019391052900155e-06], ['Node::make_node(t);', 3.4019391052900155e-06], ['here:', 3.4019391052900155e-06], ['unmodified.', 3.4019391052900155e-06], ['(src->object()', 3.4019391052900155e-06], ['Expression::EXPRESSION_ENCLOSED_VAR_REFERENCE:', 3.4019391052900155e-06], ['&T{...}.', 3.4019391052900155e-06], ['[...]T{...}.', 3.4019391052900155e-06], ['map[T]V{...}.', 3.4019391052900155e-06], ['T{...}.', 3.4019391052900155e-06], ['slice{ptr,', 3.4019391052900155e-06], ['cap}', 3.4019391052900155e-06], ['new(T).', 3.4019391052900155e-06], ['x.M.', 3.4019391052900155e-06], ['str1', 3.4019391052900155e-06], ['str2', 3.4019391052900155e-06], ['Expression::EXPRESSION_UNSAFE_CONVERSION:', 3.4019391052900155e-06], ['e->unsafe_conversion_expression()->expr();', 3.4019391052900155e-06], ['underlying_node);', 3.4019391052900155e-06], ['leaked', 3.4019391052900155e-06], ['append.', 3.4019391052900155e-06], ['make(...).', 3.4019391052900155e-06], ['fe->named_object()->is_function()', 3.4019391052900155e-06], ['fe->named_object()->func_value()->is_method()', 3.4019391052900155e-06], ['(call->is_deferred()', 3.4019391052900155e-06], ['call->is_concurrent()))', 3.4019391052900155e-06], ['RECEIVER.', 3.4019391052900155e-06], ['rcvr_node);', 3.4019391052900155e-06], ['Result', 3.4019391052900155e-06], ['Node::make_node(e);', 3.4019391052900155e-06], ['call_state->retvals;', 3.4019391052900155e-06], ['Expression::EXPRESSION_CALL_RESULT:', 3.4019391052900155e-06], ['Call_result_expression*', 3.4019391052900155e-06], ['cre', 3.4019391052900155e-06], ['e->call_result_expression();', 3.4019391052900155e-06], ['cre->call()->call_expression();', 3.4019391052900155e-06], ['Runtime::IFACEE2E2:', 3.4019391052900155e-06], ['Runtime::IFACEI2E2:', 3.4019391052900155e-06], ['Runtime::IFACEE2I2:', 3.4019391052900155e-06], ['Runtime::IFACEI2I2:', 3.4019391052900155e-06], ['Runtime::IFACEE2T2P:', 3.4019391052900155e-06], ['Runtime::IFACEI2T2P:', 3.4019391052900155e-06], ['IFACEI2E2(v),', 3.4019391052900155e-06], ['IFACEI2I2(type,', 3.4019391052900155e-06], ['IFACEX2T2', 3.4019391052900155e-06], ['signature,', 3.4019391052900155e-06], ['::expression.', 3.4019391052900155e-06], ['(cre->index()', 3.4019391052900155e-06], ['ret_node', 3.4019391052900155e-06], ['call_node->state(context_,', 3.4019391052900155e-06], ['NULL)->retvals[cre->index()];', 3.4019391052900155e-06], ['ret_node);', 3.4019391052900155e-06], ['(e->func_expression()->closure()', 3.4019391052900155e-06], ['tce->expr();', 3.4019391052900155e-06], ['Node::make_node(underlying));', 3.4019391052900155e-06], ['(!e->type()->has_pointer())', 3.4019391052900155e-06], ['Expression::EXPRESSION_TYPE_GUARD:', 3.4019391052900155e-06], ['Expression::EXPRESSION_STRING_INDEX:', 3.4019391052900155e-06], ['(left->unary_expression()', 3.4019391052900155e-06], ['left->unary_expression()->op()', 3.4019391052900155e-06], ['(*x).f', 3.4019391052900155e-06], ['(aie->array()->type()->is_slice_type())', 3.4019391052900155e-06], ['aie->array();', 3.4019391052900155e-06], ['go_assert(src->child()', 3.4019391052900155e-06], ['src->child());', 3.4019391052900155e-06], ['(!aie->array()->type()->is_slice_type())', 3.4019391052900155e-06], ['array_node);', 3.4019391052900155e-06], ['sie', 3.4019391052900155e-06], ['e->string_index_expression();', 3.4019391052900155e-06], ['(e->type()->is_string_type())', 3.4019391052900155e-06], ['sie->string();', 3.4019391052900155e-06], ['go_assert(left', 3.4019391052900155e-06], ['Conversions,', 3.4019391052900155e-06], ['access,', 3.4019391052900155e-06], ['preserve', 3.4019391052900155e-06], ['left_node', 3.4019391052900155e-06], ['Node::make_node(left);', 3.4019391052900155e-06], ['left_node);', 3.4019391052900155e-06], ['(e->binary_expression()->op())', 3.4019391052900155e-06], ['Node::make_node(e->binary_expression()->left());', 3.4019391052900155e-06], ['left);', 3.4019391052900155e-06], ['Node::make_node(e->binary_expression()->right());', 3.4019391052900155e-06], ['(e->unary_expression()->op())', 3.4019391052900155e-06], ['op_node', 3.4019391052900155e-06], ['Node::make_node(e->unary_expression()->operand());', 3.4019391052900155e-06], ['op_node);', 3.4019391052900155e-06], ['*x', 3.4019391052900155e-06], ['Node::make_node(temp));', 3.4019391052900155e-06], ['src.', 3.4019391052900155e-06], ['(src->statement()', 3.4019391052900155e-06], ['src->statement()->temporary_statement()', 3.4019391052900155e-06], ['Escape_analysis_assign::assign_deref(Node*', 3.4019391052900155e-06], ['indirections', 3.4019391052900155e-06], ['Escape_analysis_assign::assign_from_note(std::string*', 3.4019391052900155e-06], ['Escape_note::parse_tag(note);', 3.4019391052900155e-06], ['Literal', 3.4019391052900155e-06], ['how.', 3.4019391052900155e-06], ['(this->context_->gogo()->debug_escape_level()', 3.4019391052900155e-06], ['"assignfromtag::', 3.4019391052900155e-06], ['src=%s', 3.4019391052900155e-06], ['em=%s",', 3.4019391052900155e-06], ['src->ast_format(context_->gogo()).c_str(),', 3.4019391052900155e-06], ['Escape_note::make_tag(enc).c_str());', 3.4019391052900155e-06], ['Node::ESCAPE_UNKNOWN)', 3.4019391052900155e-06], ['Lost', 3.4019391052900155e-06], ['(reached', 3.4019391052900155e-06], ['indirection)', 3.4019391052900155e-06], ['((enc', 3.4019391052900155e-06], ['ESCAPE_CONTENT_ESCAPES)', 3.4019391052900155e-06], ['save_enc', 3.4019391052900155e-06], ['lowest-level', 3.4019391052900155e-06], ['purposes).', 3.4019391052900155e-06], ['Two-bit', 3.4019391052900155e-06], ['example.', 3.4019391052900155e-06], ['options)', 3.4019391052900155e-06], ['01', 3.4019391052900155e-06], ['0-level', 3.4019391052900155e-06], ['1-level,', 3.4019391052900155e-06], ['escapes),', 3.4019391052900155e-06], ['11', 3.4019391052900155e-06], ['2-level,', 3.4019391052900155e-06], ['escapes).', 3.4019391052900155e-06], ['src;', 3.4019391052900155e-06], ['this->context_->add_dereference(n);', 3.4019391052900155e-06], ['this->assign(*p,', 3.4019391052900155e-06], ['ESCAPE_BITS_PER_OUTPUT_IN_TAG;', 3.4019391052900155e-06], ['ESCAPE_HEAP,', 3.4019391052900155e-06], ['save_enc;', 3.4019391052900155e-06], ['Escape_analysis_assign::flows(Node*', 3.4019391052900155e-06], ['capturing', 3.4019391052900155e-06], ['(src->type()', 3.4019391052900155e-06], ['!src->type()->has_pointer())', 3.4019391052900155e-06], ['(dst->is_sink()', 3.4019391052900155e-06], ['this->context_->sink())', 3.4019391052900155e-06], ['(dst', 3.4019391052900155e-06], ['dst_state->flows.find(src)', 3.4019391052900155e-06], ['dst_state->flows.end())', 3.4019391052900155e-06], ['"flows::', 3.4019391052900155e-06], ['(dst_state->flows.empty())', 3.4019391052900155e-06], ['this->context_->add_dst(dst);', 3.4019391052900155e-06], ['dst_state->flows.insert(src);', 3.4019391052900155e-06], ['Gogo::assign_connectivity(Escape_context*', 3.4019391052900155e-06], ['save_depth', 3.4019391052900155e-06], ['context->loop_depth();', 3.4019391052900155e-06], ['context->set_loop_depth(1);', 3.4019391052900155e-06], ['ea(context,', 3.4019391052900155e-06], ['fn->func_value()->result_variables();', 3.4019391052900155e-06], ['res_node', 3.4019391052900155e-06], ['res_state', 3.4019391052900155e-06], ['res_node->state(context,', 3.4019391052900155e-06], ['res_state->fn', 3.4019391052900155e-06], ['res_state->loop_depth', 3.4019391052900155e-06], ['recursive,', 3.4019391052900155e-06], ['(context->recursive())', 3.4019391052900155e-06], ['ea.flows(context->sink(),', 3.4019391052900155e-06], ['res_node);', 3.4019391052900155e-06], ['fntype->parameters()->copy()', 3.4019391052900155e-06], ['Typed_identifier_list);', 3.4019391052900155e-06], ['params->push_back(*fntype->receiver());', 3.4019391052900155e-06], ['callee_bindings->lookup_local(p->name());', 3.4019391052900155e-06], ['param_state', 3.4019391052900155e-06], ['param_node->state(context,', 3.4019391052900155e-06], ['param_state->fn', 3.4019391052900155e-06], ['param_state->loop_depth', 3.4019391052900155e-06], ['(!p->type()->has_pointer())', 3.4019391052900155e-06], ['function?', 3.4019391052900155e-06], ['param_node->set_encoding(Node::ESCAPE_HEAP);', 3.4019391052900155e-06], ['param_node->set_encoding(Node::ESCAPE_NONE);', 3.4019391052900155e-06], ['context->track(param_node);', 3.4019391052900155e-06], ['el;', 3.4019391052900155e-06], ['fn->func_value()->traverse(&el);', 3.4019391052900155e-06], ['fn->func_value()->traverse(&ea);', 3.4019391052900155e-06], ['context->set_loop_depth(save_depth);', 3.4019391052900155e-06], ['Escape_analysis_flood(Escape_context*', 3.4019391052900155e-06], ['upstream.', 3.4019391052900155e-06], ['flood(Level,', 3.4019391052900155e-06], ['flooded.', 3.4019391052900155e-06], ['Whenever', 3.4019391052900155e-06], ['whenever', 3.4019391052900155e-06], ['dereference,', 3.4019391052900155e-06], ['/value/', 3.4019391052900155e-06], ["flood's", 3.4019391052900155e-06], ['gc/esc.go:escwalkBody.', 3.4019391052900155e-06], ['Escape_analysis_flood::flood(Level', 3.4019391052900155e-06], ['(src_state->flood_id', 3.4019391052900155e-06], ['this->context_->flood_id())', 3.4019391052900155e-06], ['Esclevels', 3.4019391052900155e-06], ['"min"', 3.4019391052900155e-06], ['convergence.', 3.4019391052900155e-06], ['level.min(src_state->level);', 3.4019391052900155e-06], ['src_state->level)', 3.4019391052900155e-06], ['extraloopdepth,', 3.4019391052900155e-06], ['extraloopdepth', 3.4019391052900155e-06], ['improvement', 3.4019391052900155e-06], ["what's", 3.4019391052900155e-06], ['seen?', 3.4019391052900155e-06], ['(src_state->max_extra_loop_depth', 3.4019391052900155e-06], ['src_state->loop_depth', 3.4019391052900155e-06], ['extra_loop_depth;', 3.4019391052900155e-06], ['src_state->flood_id', 3.4019391052900155e-06], ['this->context_->flood_id();', 3.4019391052900155e-06], ['src_state->level', 3.4019391052900155e-06], ['level;', 3.4019391052900155e-06], ['mod_loop_depth', 3.4019391052900155e-06], ['std::max(extra_loop_depth,', 3.4019391052900155e-06], ['src_state->loop_depth);', 3.4019391052900155e-06], ['"escwalk:', 3.4019391052900155e-06], ['level:{%d', 3.4019391052900155e-06], ['%d}', 3.4019391052900155e-06], ['depth:%d', 3.4019391052900155e-06], ['"op=%s', 3.4019391052900155e-06], ['%s(%s)', 3.4019391052900155e-06], ['"scope:%s[%d]', 3.4019391052900155e-06], ['"extraloopdepth=%d",', 3.4019391052900155e-06], ['this->context_->pdepth(),', 3.4019391052900155e-06], ['src->op_format().c_str(),', 3.4019391052900155e-06], ['debug_function_name(src_state->fn).c_str(),', 3.4019391052900155e-06], ['src_state->loop_depth,', 3.4019391052900155e-06], ['this->context_->increase_pdepth();', 3.4019391052900155e-06], ['Input', 3.4019391052900155e-06], ['parameter?', 3.4019391052900155e-06], ['src->expr()->var_expression()', 3.4019391052900155e-06], ['src->expr()->var_expression()->named_object();', 3.4019391052900155e-06], ['src->object();', 3.4019391052900155e-06], ['src_is_param', 3.4019391052900155e-06], ['(src_no', 3.4019391052900155e-06], ['src_no->is_variable()', 3.4019391052900155e-06], ['src_no->var_value()->is_parameter());', 3.4019391052900155e-06], ['dst->expr()->var_expression()', 3.4019391052900155e-06], ['dst->expr()->var_expression()->named_object();', 3.4019391052900155e-06], ['dst->object();', 3.4019391052900155e-06], ['dst_no->is_result_variable();', 3.4019391052900155e-06], ['src_state->fn', 3.4019391052900155e-06], ['dst_state->fn', 3.4019391052900155e-06], ['Node::ESCAPE_HEAP)', 3.4019391052900155e-06], ['handles:', 3.4019391052900155e-06], ['&in', 3.4019391052900155e-06], ['&tmp', 3.4019391052900155e-06], ['*in', 3.4019391052900155e-06], ['level=%d",', 3.4019391052900155e-06], ['level.value());', 3.4019391052900155e-06], ['%d}",', 3.4019391052900155e-06], ['level.suffix_value());', 3.4019391052900155e-06], ['((src->encoding()', 3.4019391052900155e-06], ['Node::ESCAPE_RETURN', 3.4019391052900155e-06], ['ESCAPE_CONTENT_ESCAPES);', 3.4019391052900155e-06], ['Node::note_inout_flows(src->encoding(),', 3.4019391052900155e-06], ['dst_no->result_var_value()->index(),', 3.4019391052900155e-06], ['level);', 3.4019391052900155e-06], ['gc/esc.go:escwalkBody,', 3.4019391052900155e-06], ['flooding', 3.4019391052900155e-06], ['Inlined', 3.4019391052900155e-06], ['convenience.', 3.4019391052900155e-06], ['ESCAPE_CONTENT_ESCAPES.', 3.4019391052900155e-06], ['pointer-to-struct', 3.4019391052900155e-06], ['vs', 3.4019391052900155e-06], ['Node::ESCAPE_HEAP', 3.4019391052900155e-06], ['"mark', 3.4019391052900155e-06], ['depth).', 3.4019391052900155e-06], ['(dst->encoding()', 3.4019391052900155e-06], ['Node::ESCAPE_HEAP);', 3.4019391052900155e-06], ['encoding,', 3.4019391052900155e-06], ['src->encoding();', 3.4019391052900155e-06], ['int(Node::ESCAPE_HEAP))', 3.4019391052900155e-06], ['(level.suffix_value()', 3.4019391052900155e-06], ['(e->enclosed_var_expression()', 3.4019391052900155e-06], ['Node::make_node(e->enclosed_var_expression()->variable());', 3.4019391052900155e-06], ['enclosed_node,', 3.4019391052900155e-06], ['(e->heap_expression()', 3.4019391052900155e-06], ['OPERATOR_AND))', 3.4019391052900155e-06], ['(e->heap_expression())', 3.4019391052900155e-06], ['e->heap_expression()->expr();', 3.4019391052900155e-06], ['leaks,', 3.4019391052900155e-06], ['underyling', 3.4019391052900155e-06], ['underlying->address_taken(src_leaks);', 3.4019391052900155e-06], ['(osrcesc', 3.4019391052900155e-06], ['underlying);', 3.4019391052900155e-06], ['%d},', 3.4019391052900155e-06], ['"dst.eld=%d,', 3.4019391052900155e-06], ['src.eld=%d",', 3.4019391052900155e-06], ['dst_state->loop_depth,', 3.4019391052900155e-06], ['(e->slice_literal()', 3.4019391052900155e-06], ['e->slice_literal();', 3.4019391052900155e-06], ['(slice->vals()', 3.4019391052900155e-06], ['slice->vals()->begin();', 3.4019391052900155e-06], ['slice->vals()->end();', 3.4019391052900155e-06], ['Node::make_node(*p),', 3.4019391052900155e-06], ['appendee.', 3.4019391052900155e-06], ['call->args()->front();', 3.4019391052900155e-06], ['Node::make_node(appendee),', 3.4019391052900155e-06], ['(src_state->retvals.size()', 3.4019391052900155e-06], ['went', 3.4019391052900155e-06], ['.outN', 3.4019391052900155e-06], ['#10466.', 3.4019391052900155e-06], ['go_assert(src_state->retvals.size()', 3.4019391052900155e-06], ['escwalk', 3.4019391052900155e-06], ['src:', 3.4019391052900155e-06], ['src_state->retvals[0]->ast_format(gogo).c_str());', 3.4019391052900155e-06], ['src_state->retvals[0];', 3.4019391052900155e-06], ['(e->allocation_expression()', 3.4019391052900155e-06], ['Runtime::NEW', 3.4019391052900155e-06], ['((e->map_literal()', 3.4019391052900155e-06], ['e->string_concat_expression()', 3.4019391052900155e-06], ['e->bound_method_expression()', 3.4019391052900155e-06], ['(e->conversion_expression()', 3.4019391052900155e-06], ['!e->array_index_expression()->array()->type()->is_slice_type())', 3.4019391052900155e-06], ['Flow', 3.4019391052900155e-06], ['e->type_guard_expression()', 3.4019391052900155e-06], ['e->array_index_expression()->end()', 3.4019391052900155e-06], ['e->type()->is_string_type()))', 3.4019391052900155e-06], ['e->string_index_expression()->string();', 3.4019391052900155e-06], ['e->array_index_expression()', 3.4019391052900155e-06], ['e->map_index_expression()', 3.4019391052900155e-06], ['OPERATOR_MULT))', 3.4019391052900155e-06], ['underlying->unary_expression()->operand();', 3.4019391052900155e-06], ['(e->map_index_expression()', 3.4019391052900155e-06], ['e->map_index_expression()->map();', 3.4019391052900155e-06], ['Node::make_node(t),', 3.4019391052900155e-06], ['this->context_->decrease_pdepth();', 3.4019391052900155e-06], ['modeled', 3.4019391052900155e-06], ['Analysis_set.', 3.4019391052900155e-06], ['gc/esc.go:escflood.', 3.4019391052900155e-06], ['Gogo::propagate_escape(Escape_context*', 3.4019391052900155e-06], ['dst)', 3.4019391052900155e-06], ['(dst->object()', 3.4019391052900155e-06], ['(dst->expr()->var_expression()', 3.4019391052900155e-06], ['dst->expr()->enclosed_var_expression()', 3.4019391052900155e-06], ['dst->expr()->func_expression()', 3.4019391052900155e-06], ['dst->state(context,', 3.4019391052900155e-06], ['"escflood:%d:', 3.4019391052900155e-06], ['scope:%s[%d]",', 3.4019391052900155e-06], ['context->flood_id(),', 3.4019391052900155e-06], ['debug_function_name(state->fn).c_str(),', 3.4019391052900155e-06], ['state->loop_depth);', 3.4019391052900155e-06], ['eaf(context);', 3.4019391052900155e-06], ['state->flows.begin();', 3.4019391052900155e-06], ['state->flows.end();', 3.4019391052900155e-06], ['context->increase_flood_id();', 3.4019391052900155e-06], ['eaf.flood(Level::From(0),', 3.4019391052900155e-06], ['Escape_analysis_tag(Escape_context*', 3.4019391052900155e-06], ['tag(Named_object*', 3.4019391052900155e-06], ['Escape_analysis_tag::tag(Named_object*', 3.4019391052900155e-06], ['fdcl', 3.4019391052900155e-06], ['fn->func_declaration_value();', 3.4019391052900155e-06], ['((fdcl->pragmas()', 3.4019391052900155e-06], ['GOPRAGMA_NOESCAPE)', 3.4019391052900155e-06], ['fdcl->type();', 3.4019391052900155e-06], ['(fntype->receiver()->name().empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(fntype->receiver()->name()))', 3.4019391052900155e-06], ['Unnamed', 3.4019391052900155e-06], ['fntype->add_receiver_note(Node::ESCAPE_NONE);', 3.4019391052900155e-06], ['bindings->lookup(fntype->receiver()->name());', 3.4019391052900155e-06], ['((rcvr_node->encoding()', 3.4019391052900155e-06], ['(fntype->receiver()->type()->has_pointer())', 3.4019391052900155e-06], ['fntype->add_receiver_note(rcvr_node->encoding());', 3.4019391052900155e-06], ['bindings->lookup(p->name());', 3.4019391052900155e-06], ['((param_node->encoding()', 3.4019391052900155e-06], ['param_node->encoding());', 3.4019391052900155e-06], ['Gogo::tag_function(Escape_context*', 3.4019391052900155e-06], ['eat(context);', 3.4019391052900155e-06], ['eat.tag(fn);', 3.4019391052900155e-06], ['Gogo::reclaim_escape_nodes()', 3.4019391052900155e-06], ['Node::reclaim_nodes();', 3.4019391052900155e-06], ['Node::reclaim_nodes()', 3.4019391052900155e-06], ['(std::map<Named_object*,', 3.4019391052900155e-06], ['Node::objects.begin();', 3.4019391052900155e-06], ['Node::objects.end();', 3.4019391052900155e-06], ['Node::objects.clear();', 3.4019391052900155e-06], ['(std::map<Expression*,', 3.4019391052900155e-06], ['Node::expressions.begin();', 3.4019391052900155e-06], ['Node::expressions.end();', 3.4019391052900155e-06], ['Node::expressions.clear();', 3.4019391052900155e-06], ['(std::map<Statement*,', 3.4019391052900155e-06], ['Node::statements.begin();', 3.4019391052900155e-06], ['Node::statements.end();', 3.4019391052900155e-06], ['Node::statements.clear();', 3.4019391052900155e-06], ['Node::indirects.begin();', 3.4019391052900155e-06], ['Node::indirects.end();', 3.4019391052900155e-06], ['Node::indirects.clear();', 3.4019391052900155e-06], ['"math.h"', 3.4019391052900155e-06], ['json;', 3.4019391052900155e-06], ['OUTF.', 3.4019391052900155e-06], ['json::objects', 3.4019391052900155e-06], ['value::dump', 3.4019391052900155e-06], ['*outf)', 3.4019391052900155e-06], ['pp_buffer', 3.4019391052900155e-06], ['(&pp)->stream', 3.4019391052900155e-06], ['outf;', 3.4019391052900155e-06], ['pp_flush', 3.4019391052900155e-06], ['json::object,', 3.4019391052900155e-06], ['unordered', 3.4019391052900155e-06], ["json:object's", 3.4019391052900155e-06], ['object::~object', 3.4019391052900155e-06], ['(const_cast', 3.4019391052900155e-06], ['*>((*it).first));', 3.4019391052900155e-06], ['((*it).second);', 3.4019391052900155e-06], ['json::object.', 3.4019391052900155e-06], ['object::print', 3.4019391052900155e-06], ['guaranteed.', 3.4019391052900155e-06], ["'{');", 3.4019391052900155e-06], ['const_cast', 3.4019391052900155e-06], ['*>((*it).first);', 3.4019391052900155e-06], ['(*it).second;', 3.4019391052900155e-06], ['pp_printf', 3.4019391052900155e-06], ['"\\"%s\\":', 3.4019391052900155e-06], ['key);', 3.4019391052900155e-06], ['escaping?', 3.4019391052900155e-06], ['value->print', 3.4019391052900155e-06], ["'}');", 3.4019391052900155e-06], ['KEY,', 3.4019391052900155e-06], ['KEY', 3.4019391052900155e-06], ['necessary).', 3.4019391052900155e-06], ['object::set', 3.4019391052900155e-06], ['**ptr', 3.4019391052900155e-06], ['m_map.get', 3.4019391052900155e-06], ['m_map.put', 3.4019391052900155e-06], ['(xstrdup', 3.4019391052900155e-06], ['(key),', 3.4019391052900155e-06], ["json::array's", 3.4019391052900155e-06], ['array::~array', 3.4019391052900155e-06], ['json::array.', 3.4019391052900155e-06], ['array::print', 3.4019391052900155e-06], ["'[');", 3.4019391052900155e-06], ['v->print', 3.4019391052900155e-06], ["']');", 3.4019391052900155e-06], ['V.', 3.4019391052900155e-06], ['array::append', 3.4019391052900155e-06], ['m_elements.safe_push', 3.4019391052900155e-06], ['json::number,', 3.4019391052900155e-06], ['json::number.', 3.4019391052900155e-06], ['number::print', 3.4019391052900155e-06], ['tmp[1024];', 3.4019391052900155e-06], ['(tmp),', 3.4019391052900155e-06], ['"%g",', 3.4019391052900155e-06], ['m_value);', 3.4019391052900155e-06], ['json::string,', 3.4019391052900155e-06], ["json::string's", 3.4019391052900155e-06], ['string::string', 3.4019391052900155e-06], ['*utf8)', 3.4019391052900155e-06], ['m_utf8', 3.4019391052900155e-06], ['json::string.', 3.4019391052900155e-06], ['string::print', 3.4019391052900155e-06], ['m_utf8;', 3.4019391052900155e-06], ['ptr++)', 3.4019391052900155e-06], ['ch', 3.4019391052900155e-06], ['(ch)', 3.4019391052900155e-06], ['\'"\':', 3.4019391052900155e-06], ['"\\\\\\"");', 3.4019391052900155e-06], ["'\\\\':", 3.4019391052900155e-06], ["'\\b':", 3.4019391052900155e-06], ['"\\\\b");', 3.4019391052900155e-06], ["'\\f':", 3.4019391052900155e-06], ['"\\\\f");', 3.4019391052900155e-06], ["'\\n':", 3.4019391052900155e-06], ["'\\r':", 3.4019391052900155e-06], ['"\\\\r");', 3.4019391052900155e-06], ['"\\\\t");', 3.4019391052900155e-06], ['ch);', 3.4019391052900155e-06], ['json::literal,', 3.4019391052900155e-06], ['json::literal.', 3.4019391052900155e-06], ['literal::print', 3.4019391052900155e-06], ['(m_kind)', 3.4019391052900155e-06], ['JSON_TRUE:', 3.4019391052900155e-06], ['JSON_FALSE:', 3.4019391052900155e-06], ['JSON_NULL:', 3.4019391052900155e-06], ['\x0c', 3.4019391052900155e-06], ['JV->print', 3.4019391052900155e-06], ['EXPECTED_JSON.', 3.4019391052900155e-06], ['&jv,', 3.4019391052900155e-06], ['*expected_json)', 3.4019391052900155e-06], ['jv.print', 3.4019391052900155e-06], ['(expected_json,', 3.4019391052900155e-06], ['pair,', 3.4019391052900155e-06], ['impose', 3.4019391052900155e-06], ['ordering.', 3.4019391052900155e-06], ['obj.set', 3.4019391052900155e-06], ['("foo",', 3.4019391052900155e-06], ['(obj,', 3.4019391052900155e-06], ['"{\\"foo\\":', 3.4019391052900155e-06], ['\\"bar\\"}");', 3.4019391052900155e-06], ['arr;', 3.4019391052900155e-06], ['"[]");', 3.4019391052900155e-06], ['"[\\"foo\\"]");', 3.4019391052900155e-06], ['"[\\"foo\\",', 3.4019391052900155e-06], ['\\"bar\\"]");', 3.4019391052900155e-06], ['"0");', 3.4019391052900155e-06], ['(42),', 3.4019391052900155e-06], ['"42");', 3.4019391052900155e-06], ['(-100),', 3.4019391052900155e-06], ['"-100");', 3.4019391052900155e-06], ['("foo");', 3.4019391052900155e-06], ['(foo,', 3.4019391052900155e-06], ['"\\"foo\\"");', 3.4019391052900155e-06], ['contains_quotes', 3.4019391052900155e-06], ['("before', 3.4019391052900155e-06], ['\\"quoted\\"', 3.4019391052900155e-06], ['after");', 3.4019391052900155e-06], ['(contains_quotes,', 3.4019391052900155e-06], ['"\\"before', 3.4019391052900155e-06], ['\\\\\\"quoted\\\\\\"', 3.4019391052900155e-06], ['after\\"");', 3.4019391052900155e-06], ['(JSON_TRUE),', 3.4019391052900155e-06], ['(JSON_FALSE),', 3.4019391052900155e-06], ['(JSON_NULL),', 3.4019391052900155e-06], ['json_cc_tests', 3.4019391052900155e-06], ['export.cc', 3.4019391052900155e-06], ['Export.', 3.4019391052900155e-06], ['Export::magic_len;', 3.4019391052900155e-06], ['Export::cur_magic[Export::magic_len]', 3.4019391052900155e-06], ["'3',", 3.4019391052900155e-06], ['Magic', 3.4019391052900155e-06], ['(still', 3.4019391052900155e-06], ['supported).', 3.4019391052900155e-06], ['Export::v1_magic[Export::magic_len]', 3.4019391052900155e-06], ["'1',", 3.4019391052900155e-06], ['Export::v2_magic[Export::magic_len]', 3.4019391052900155e-06], ["'2',", 3.4019391052900155e-06], ['Export::checksum_len;', 3.4019391052900155e-06], ['Export::Export(Stream*', 3.4019391052900155e-06], ['stream)', 3.4019391052900155e-06], ['stream_(stream),', 3.4019391052900155e-06], ['type_index_(1),', 3.4019391052900155e-06], ['packages_()', 3.4019391052900155e-06], ['go_assert(Export::checksum_len', 3.4019391052900155e-06], ['Go_sha1_helper::checksum_len);', 3.4019391052900155e-06], ['distinct.', 3.4019391052900155e-06], ['Type_hash_alias_identical', 3.4019391052900155e-06], ['type->hash_for_method(NULL,', 3.4019391052900155e-06], ['Type::COMPARE_ALIASES));', 3.4019391052900155e-06], ['Type_alias_identical', 3.4019391052900155e-06], ['Type::are_identical(t1,', 3.4019391052900155e-06], ['Type::COMPARE_ALIASES),', 3.4019391052900155e-06], ['Mapping', 3.4019391052900155e-06], ['nicer', 3.4019391052900155e-06], ['Export,', 3.4019391052900155e-06], ['export.h', 3.4019391052900155e-06], ['types.h.', 3.4019391052900155e-06], ['Unordered_map_hash(const', 3.4019391052900155e-06], ['Type_hash_alias_identical,', 3.4019391052900155e-06], ['Type_alias_identical)', 3.4019391052900155e-06], ['Type_refs;', 3.4019391052900155e-06], ['Type_refs', 3.4019391052900155e-06], ['type_refs;', 3.4019391052900155e-06], ['functor', 3.4019391052900155e-06], ['Sort_bindings', 3.4019391052900155e-06], ['n1->name()', 3.4019391052900155e-06], ['n2->name();', 3.4019391052900155e-06], ['NO.', 3.4019391052900155e-06], ['should_export(Named_object*', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(no->name()))', 3.4019391052900155e-06], ['(Gogo::is_special_name(no->name()))', 3.4019391052900155e-06], ['no->func_value()->type()->is_method())', 3.4019391052900155e-06], ['no->func_declaration_value()->type()->is_method())', 3.4019391052900155e-06], ['sinks.', 3.4019391052900155e-06], ['exporting.', 3.4019391052900155e-06], ['Export::export_globals(const', 3.4019391052900155e-06], ['packages,', 3.4019391052900155e-06], ['far,', 3.4019391052900155e-06], ['confusions.', 3.4019391052900155e-06], ['irrelevant', 3.4019391052900155e-06], ['exports;', 3.4019391052900155e-06], ['exports.reserve(bindings->size_definitions());', 3.4019391052900155e-06], ['(should_export(*p))', 3.4019391052900155e-06], ['exports.push_back(*p);', 3.4019391052900155e-06], ['(p->second->is_function_declaration()', 3.4019391052900155e-06], ['should_export(p->second))', 3.4019391052900155e-06], ['exports.push_back(p->second);', 3.4019391052900155e-06], ['std::sort(exports.begin(),', 3.4019391052900155e-06], ['exports.end(),', 3.4019391052900155e-06], ['Sort_bindings());', 3.4019391052900155e-06], ['mentioned.', 3.4019391052900155e-06], ['type_imports;', 3.4019391052900155e-06], ['unexported_type_index', 3.4019391052900155e-06], ['this->prepare_types(&exports,', 3.4019391052900155e-06], ['&type_imports);', 3.4019391052900155e-06], ['readable,', 3.4019391052900155e-06], ['conceptually', 3.4019391052900155e-06], ['this->write_bytes(Export::cur_magic,', 3.4019391052900155e-06], ['Export::magic_len);', 3.4019391052900155e-06], ['(prefix.empty())', 3.4019391052900155e-06], ['this->write_c_string("pkgpath', 3.4019391052900155e-06], ['this->write_string(pkgpath);', 3.4019391052900155e-06], ['this->write_c_string("prefix', 3.4019391052900155e-06], ['this->write_string(prefix);', 3.4019391052900155e-06], ['this->write_packages(packages);', 3.4019391052900155e-06], ['this->write_imports(imports,', 3.4019391052900155e-06], ['type_imports);', 3.4019391052900155e-06], ['this->write_imported_init_fns(package_name,', 3.4019391052900155e-06], ['imported_init_fns);', 3.4019391052900155e-06], ['area', 3.4019391052900155e-06], ['this->write_types(unexported_type_index);', 3.4019391052900155e-06], ['non-type', 3.4019391052900155e-06], ['exports.begin();', 3.4019391052900155e-06], ['exports.end();', 3.4019391052900155e-06], ['(*p)->export_named_object(this);', 3.4019391052900155e-06], ['this->stream_->checksum();', 3.4019391052900155e-06], ['"checksum', 3.4019391052900155e-06], ['checksum.begin();', 3.4019391052900155e-06], ['checksum.end();', 3.4019391052900155e-06], ['this->stream_->write_checksum(s);', 3.4019391052900155e-06], ['Find_types_to_prepare(Export*', 3.4019391052900155e-06], ['exp_(exp),', 3.4019391052900155e-06], ['imports_(imports)', 3.4019391052900155e-06], ['type(Type*', 3.4019391052900155e-06], ['traverse_function(Function_type*);', 3.4019391052900155e-06], ['traverse_named_type(Named_type*);', 3.4019391052900155e-06], ['Exporters.', 3.4019391052900155e-06], ['Export*', 3.4019391052900155e-06], ['exp_;', 3.4019391052900155e-06], ['imports_;', 3.4019391052900155e-06], ['Find_types_to_prepare::type(Type*', 3.4019391052900155e-06], ['forwarders;', 3.4019391052900155e-06], ['(type->forward_declaration_type()', 3.4019391052900155e-06], ['exported,', 3.4019391052900155e-06], ['Pointer_type::do_export', 3.4019391052900155e-06], ['sorted,', 3.4019391052900155e-06], ['set_type_index', 3.4019391052900155e-06], ['(!this->exp_->set_type_index(type))', 3.4019391052900155e-06], ['traverses', 3.4019391052900155e-06], ['it->local_methods();', 3.4019391052900155e-06], ['Type::traverse(p->type(),', 3.4019391052900155e-06], ['this->traverse_function(p->type()->function_type());', 3.4019391052900155e-06], ['this->traverse_named_type(nt);', 3.4019391052900155e-06], ['Find_types_to_prepare::traverse_function(Function_type*', 3.4019391052900155e-06], ['(this->remember_type(type))', 3.4019391052900155e-06], ['Type::traverse(receiver->type(),', 3.4019391052900155e-06], ['parameters->traverse(this);', 3.4019391052900155e-06], ['type->results();', 3.4019391052900155e-06], ['results->traverse(this);', 3.4019391052900155e-06], ['Find_types_to_prepare::traverse_named_type(Named_type*', 3.4019391052900155e-06], ['nt->named_object()->package();', 3.4019391052900155e-06], ['this->imports_->insert(package);', 3.4019391052900155e-06], ['(*pm)->func_value();', 3.4019391052900155e-06], ['this->traverse_function(fn->type());', 3.4019391052900155e-06], ['fn->block()->traverse(this);', 3.4019391052900155e-06], ['pm->second;', 3.4019391052900155e-06], ['(mno->is_function_declaration())', 3.4019391052900155e-06], ['this->traverse_function(mno->func_declaration_value()->type());', 3.4019391052900155e-06], ['importer', 3.4019391052900155e-06], ['Export::prepare_types(const', 3.4019391052900155e-06], ['exports,', 3.4019391052900155e-06], ['(*p)->type_value()->interface_type();', 3.4019391052900155e-06], ['this->set_type_index((*p)->type_value());', 3.4019391052900155e-06], ["they've", 3.4019391052900155e-06], ['find(this,', 3.4019391052900155e-06], ['imports);', 3.4019391052900155e-06], ['(no->classification())', 3.4019391052900155e-06], ['!t->is_abstract())', 3.4019391052900155e-06], ['Type::traverse(t,', 3.4019391052900155e-06], ['Type::traverse(no->type_value()->real_type(),', 3.4019391052900155e-06], ['find.traverse_named_type(no->type_value());', 3.4019391052900155e-06], ['Type::traverse(no->var_value()->type(),', 3.4019391052900155e-06], ['find.traverse_function(fn->type());', 3.4019391052900155e-06], ['fn->block()->traverse(&find);', 3.4019391052900155e-06], ['find.traverse_function(no->func_declaration_value()->type());', 3.4019391052900155e-06], ['else.', 3.4019391052900155e-06], ['Export::set_type_index(Type*', 3.4019391052900155e-06], ['type_refs.insert(std::make_pair(type,', 3.4019391052900155e-06], ['++this->type_index_;', 3.4019391052900155e-06], ['packages_compare(const', 3.4019391052900155e-06], ['a->package_name()', 3.4019391052900155e-06], ['b->package_name();', 3.4019391052900155e-06], ['Export::write_packages(const', 3.4019391052900155e-06], ['packages)', 3.4019391052900155e-06], ['std::vector<Package*>', 3.4019391052900155e-06], ['packages.begin();', 3.4019391052900155e-06], ['packages.end();', 3.4019391052900155e-06], ['(p->second->pkgpath_symbol()', 3.4019391052900155e-06], ['Gogo::pkgpath_for_symbol(p->second->pkgpath()))', 3.4019391052900155e-06], ['out.push_back(p->second);', 3.4019391052900155e-06], ['std::sort(out.begin(),', 3.4019391052900155e-06], ['out.end(),', 3.4019391052900155e-06], ['(std::vector<Package*>::const_iterator', 3.4019391052900155e-06], ['out.begin();', 3.4019391052900155e-06], ['out.end();', 3.4019391052900155e-06], ['this->write_string((*p)->pkgpath_symbol());', 3.4019391052900155e-06], ['import_compare(const', 3.4019391052900155e-06], ['a.first', 3.4019391052900155e-06], ['b.first;', 3.4019391052900155e-06], ['Export::write_imports(const', 3.4019391052900155e-06], ['Package*)&', 3.4019391052900155e-06], ['type_imports)', 3.4019391052900155e-06], ['seen;', 3.4019391052900155e-06], ['std::vector<std::pair<std::string,', 3.4019391052900155e-06], ['sorted_imports;', 3.4019391052900155e-06], ['imports.begin();', 3.4019391052900155e-06], ['imports.end();', 3.4019391052900155e-06], ['sorted_imports.push_back(std::make_pair(p->first,', 3.4019391052900155e-06], ['p->second));', 3.4019391052900155e-06], ['seen.insert(p->second);', 3.4019391052900155e-06], ['std::sort(sorted_imports.begin(),', 3.4019391052900155e-06], ['sorted_imports.end(),', 3.4019391052900155e-06], ['import_compare);', 3.4019391052900155e-06], ['(std::vector<std::pair<std::string,', 3.4019391052900155e-06], ['sorted_imports.begin();', 3.4019391052900155e-06], ['sorted_imports.end();', 3.4019391052900155e-06], ['this->write_c_string("import', 3.4019391052900155e-06], ['this->write_string(p->second->package_name());', 3.4019391052900155e-06], ['this->write_string(p->second->pkgpath());', 3.4019391052900155e-06], ['\\"");', 3.4019391052900155e-06], ['this->write_string(p->first);', 3.4019391052900155e-06], ['this->write_c_string("\\"\\n");', 3.4019391052900155e-06], ['this->packages_.insert(p->second);', 3.4019391052900155e-06], ['indirect_imports;', 3.4019391052900155e-06], ['(Unordered_set(const', 3.4019391052900155e-06], ['Package*)::const_iterator', 3.4019391052900155e-06], ['type_imports.begin();', 3.4019391052900155e-06], ['type_imports.end();', 3.4019391052900155e-06], ['(seen.find(*p)', 3.4019391052900155e-06], ['seen.end())', 3.4019391052900155e-06], ['indirect_imports.push_back(*p);', 3.4019391052900155e-06], ['std::sort(indirect_imports.begin(),', 3.4019391052900155e-06], ['indirect_imports.end(),', 3.4019391052900155e-06], ['indirect_imports.begin();', 3.4019391052900155e-06], ['indirect_imports.end();', 3.4019391052900155e-06], ['this->write_c_string("indirectimport', 3.4019391052900155e-06], ['Export::add_init_graph_edge(Init_graph*', 3.4019391052900155e-06], ['sink)', 3.4019391052900155e-06], ['Init_graph::iterator', 3.4019391052900155e-06], ['init_graph->find(src);', 3.4019391052900155e-06], ['init_graph->end())', 3.4019391052900155e-06], ['it->second.insert(sink);', 3.4019391052900155e-06], ['std::set<unsigned>', 3.4019391052900155e-06], ['succs.insert(sink);', 3.4019391052900155e-06], ['(*init_graph)[src]', 3.4019391052900155e-06], ['Constructs', 3.4019391052900155e-06], ['portion', 3.4019391052900155e-06], ['Export::populate_init_graph(Init_graph*', 3.4019391052900155e-06], ['unsigned>&', 3.4019391052900155e-06], ['init_idx)', 3.4019391052900155e-06], ['srcit', 3.4019391052900155e-06], ['init_idx.find(ii->init_name());', 3.4019391052900155e-06], ['go_assert(srcit', 3.4019391052900155e-06], ['srcit->second;', 3.4019391052900155e-06], ['init_idx.find(*pci);', 3.4019391052900155e-06], ['go_assert(it', 3.4019391052900155e-06], ['add_init_graph_edge(init_graph,', 3.4019391052900155e-06], ['Export::write_imported_init_fns(const', 3.4019391052900155e-06], ['imported_init_fns)', 3.4019391052900155e-06], ['(import_init_fn.empty()', 3.4019391052900155e-06], ['imported_init_fns.empty())', 3.4019391052900155e-06], ['Maps', 3.4019391052900155e-06], ['clause.', 3.4019391052900155e-06], ['init_idx;', 3.4019391052900155e-06], ['this->write_c_string("init");', 3.4019391052900155e-06], ['this->write_string(import_init_fn);', 3.4019391052900155e-06], ['init_idx[import_init_fn]', 3.4019391052900155e-06], ['(imported_init_fns.empty())', 3.4019391052900155e-06], ['std::map<int,', 3.4019391052900155e-06], ['level_map;', 3.4019391052900155e-06], ['Init_graph', 3.4019391052900155e-06], ['init_graph;', 3.4019391052900155e-06], ['level_map', 3.4019391052900155e-06], ['inits_at_level;', 3.4019391052900155e-06], ['(already', 3.4019391052900155e-06], ['exports.', 3.4019391052900155e-06], ['import_init_fn)', 3.4019391052900155e-06], ['this->write_string(ii->package_name());', 3.4019391052900155e-06], ['this->write_string(ii->init_name());', 3.4019391052900155e-06], ['init_idx.', 3.4019391052900155e-06], ['go_assert(init_idx.find(ii->init_name())', 3.4019391052900155e-06], ['init_idx.size();', 3.4019391052900155e-06], ['init_idx[ii->init_name()]', 3.4019391052900155e-06], ['indication', 3.4019391052900155e-06], ['older', 3.4019391052900155e-06], ['file).', 3.4019391052900155e-06], ['fcns', 3.4019391052900155e-06], ['(handled', 3.4019391052900155e-06], ['function).', 3.4019391052900155e-06], ['inits_at_level.find(ii->priority());', 3.4019391052900155e-06], ['l.push_back(ii->init_name());', 3.4019391052900155e-06], ['inits_at_level[ii->priority()]', 3.4019391052900155e-06], ['it->second.push_back(ii->init_name());', 3.4019391052900155e-06], ['populating', 3.4019391052900155e-06], ['populate_init_graph(&init_graph,', 3.4019391052900155e-06], ['init_idx);', 3.4019391052900155e-06], ['fcns.', 3.4019391052900155e-06], ['go_assert(init_idx[import_init_fn]', 3.4019391052900155e-06], ['init_idx[ii->init_name()];', 3.4019391052900155e-06], ['relationships.', 3.4019391052900155e-06], ['*A', 3.4019391052900155e-06], ['*C', 3.4019391052900155e-06], ['*D', 3.4019391052900155e-06], ['*E', 3.4019391052900155e-06], ['|/', 3.4019391052900155e-06], ['*F', 3.4019391052900155e-06], ['*G', 3.4019391052900155e-06], ['suppose', 3.4019391052900155e-06], ['gccgo,', 3.4019391052900155e-06], ['Packages', 3.4019391052900155e-06], ["*'s", 3.4019391052900155e-06], ['"A";', 3.4019391052900155e-06], ['"C".', 3.4019391052900155e-06], ['F..import', 3.4019391052900155e-06], ['G..import', 3.4019391052900155e-06], ['D..import', 3.4019391052900155e-06], ['E..import', 3.4019391052900155e-06], ['convey', 3.4019391052900155e-06], ['consumers', 3.4019391052900155e-06], ['"A",', 3.4019391052900155e-06], ['K-1', 3.4019391052900155e-06], ['K.', 3.4019391052900155e-06], ['G),', 3.4019391052900155e-06], ['(inits_at_level.size()', 3.4019391052900155e-06], ['(level_map::reverse_iterator', 3.4019391052900155e-06], ['inits_at_level.rbegin();', 3.4019391052900155e-06], ['inits_at_level.rend();', 3.4019391052900155e-06], ['std::vector<std::string>&', 3.4019391052900155e-06], ['fcns_at_level', 3.4019391052900155e-06], ['fcns_at_level.begin();', 3.4019391052900155e-06], ['fcns_at_level.end();', 3.4019391052900155e-06], ['++sit)', 3.4019391052900155e-06], ['init_idx[*sit];', 3.4019391052900155e-06], ['inits_at_level.find(level', 3.4019391052900155e-06], ['(it2', 3.4019391052900155e-06], ['fcns_at_lm1', 3.4019391052900155e-06], ['it2->second;', 3.4019391052900155e-06], ['fcns_at_lm1.begin();', 3.4019391052900155e-06], ['fcns_at_lm1.end();', 3.4019391052900155e-06], ['++mit)', 3.4019391052900155e-06], ['init_idx[*mit];', 3.4019391052900155e-06], ['this->write_c_string("init_graph");', 3.4019391052900155e-06], ['(Init_graph::const_iterator', 3.4019391052900155e-06], ['init_graph.begin();', 3.4019391052900155e-06], ['init_graph.end();', 3.4019391052900155e-06], ['++ki)', 3.4019391052900155e-06], ['ki->first;', 3.4019391052900155e-06], ['std::set<unsigned>&', 3.4019391052900155e-06], ['successors', 3.4019391052900155e-06], ['ki->second;', 3.4019391052900155e-06], ['(std::set<unsigned>::const_iterator', 3.4019391052900155e-06], ['successors.begin();', 3.4019391052900155e-06], ['successors.end();', 3.4019391052900155e-06], ['++vi)', 3.4019391052900155e-06], ['this->write_unsigned(src);', 3.4019391052900155e-06], ['(*vi);', 3.4019391052900155e-06], ['this->write_unsigned(sink);', 3.4019391052900155e-06], ['Export::write_types(int', 3.4019391052900155e-06], ['unexported_type_index)', 3.4019391052900155e-06], ['types(static_cast<size_t>(this->type_index_));', 3.4019391052900155e-06], ['(Type_refs::const_iterator', 3.4019391052900155e-06], ['type_refs.begin();', 3.4019391052900155e-06], ['type_refs.end();', 3.4019391052900155e-06], ['types.at(p->second)', 3.4019391052900155e-06], ['Stream_to_string', 3.4019391052900155e-06], ['type_data;', 3.4019391052900155e-06], ['Export::Stream*', 3.4019391052900155e-06], ['orig_stream', 3.4019391052900155e-06], ['this->stream_;', 3.4019391052900155e-06], ['&type_data;', 3.4019391052900155e-06], ['std::vector<size_t>', 3.4019391052900155e-06], ['type_sizes(static_cast<size_t>(this->type_index_));', 3.4019391052900155e-06], ['type_sizes[0]', 3.4019391052900155e-06], ['this->write_type_definition(types[i],', 3.4019391052900155e-06], ['type_data.string().size();', 3.4019391052900155e-06], ['type_sizes[i]', 3.4019391052900155e-06], ['start_size;', 3.4019391052900155e-06], ['cur_size;', 3.4019391052900155e-06], ['Back', 3.4019391052900155e-06], ['orig_stream;', 3.4019391052900155e-06], ['SIZES..."', 3.4019391052900155e-06], ['used;', 3.4019391052900155e-06], ['Indexes', 3.4019391052900155e-06], ['SIZES...', 3.4019391052900155e-06], ['MAXP1-1', 3.4019391052900155e-06], ['listing', 3.4019391052900155e-06], ['this->type_index_,', 3.4019391052900155e-06], ['unexported_type_index);', 3.4019391052900155e-06], ['long>(type_sizes[i]));', 3.4019391052900155e-06], ['this->write_string(type_data.string());', 3.4019391052900155e-06], ['Export::write_type_definition(const', 3.4019391052900155e-06], ['this->write_c_string("type', 3.4019391052900155e-06], ['"%d', 3.4019391052900155e-06], ['this->write_c_string("\\"");', 3.4019391052900155e-06], ['this->write_string(package->pkgpath());', 3.4019391052900155e-06], ['this->write_c_string(".");', 3.4019391052900155e-06], ['this->write_string(nt->named_object()->name());', 3.4019391052900155e-06], ['this->write_c_string("\\"', 3.4019391052900155e-06], ['this->write_c_string("=', 3.4019391052900155e-06], ['type->export_type(this);', 3.4019391052900155e-06], ['Type::export_type', 3.4019391052900155e-06], ['newline', 3.4019391052900155e-06], ['Export::write_name(const', 3.4019391052900155e-06], ['this->write_c_string("?");', 3.4019391052900155e-06], ['this->write_string(Gogo::message_name(name));', 3.4019391052900155e-06], ['Export::write_int(int', 3.4019391052900155e-06], ['Export::write_unsigned(unsigned', 3.4019391052900155e-06], ['Export::type_index(const', 3.4019391052900155e-06], ['Type_refs::const_iterator', 3.4019391052900155e-06], ['type_refs.find(type);', 3.4019391052900155e-06], ['type_refs.end());', 3.4019391052900155e-06], ['Export::write_type(const', 3.4019391052900155e-06], ['Export::write_type_to(const', 3.4019391052900155e-06], ['Export_function_body*', 3.4019391052900155e-06], ['Export::write_escape(std::string*', 3.4019391052900155e-06], ['note)', 3.4019391052900155e-06], ['(note', 3.4019391052900155e-06], ['*note', 3.4019391052900155e-06], ['"esc:0x0")', 3.4019391052900155e-06], ['go_assert(note->find("esc:")', 3.4019391052900155e-06], ['"<%s>",', 3.4019391052900155e-06], ['note->c_str());', 3.4019391052900155e-06], ['Export::register_builtin_types(Gogo*', 3.4019391052900155e-06], ['"int8",', 3.4019391052900155e-06], ['BUILTIN_INT8);', 3.4019391052900155e-06], ['"int16",', 3.4019391052900155e-06], ['BUILTIN_INT16);', 3.4019391052900155e-06], ['"int32",', 3.4019391052900155e-06], ['BUILTIN_INT32);', 3.4019391052900155e-06], ['"int64",', 3.4019391052900155e-06], ['BUILTIN_INT64);', 3.4019391052900155e-06], ['"uint8",', 3.4019391052900155e-06], ['BUILTIN_UINT8);', 3.4019391052900155e-06], ['"uint16",', 3.4019391052900155e-06], ['BUILTIN_UINT16);', 3.4019391052900155e-06], ['"uint32",', 3.4019391052900155e-06], ['BUILTIN_UINT32);', 3.4019391052900155e-06], ['"uint64",', 3.4019391052900155e-06], ['BUILTIN_UINT64);', 3.4019391052900155e-06], ['"float32",', 3.4019391052900155e-06], ['BUILTIN_FLOAT32);', 3.4019391052900155e-06], ['"float64",', 3.4019391052900155e-06], ['BUILTIN_FLOAT64);', 3.4019391052900155e-06], ['"complex64",', 3.4019391052900155e-06], ['BUILTIN_COMPLEX64);', 3.4019391052900155e-06], ['"complex128",', 3.4019391052900155e-06], ['BUILTIN_COMPLEX128);', 3.4019391052900155e-06], ['"int",', 3.4019391052900155e-06], ['BUILTIN_INT);', 3.4019391052900155e-06], ['"uint",', 3.4019391052900155e-06], ['BUILTIN_UINT);', 3.4019391052900155e-06], ['"uintptr",', 3.4019391052900155e-06], ['BUILTIN_UINTPTR);', 3.4019391052900155e-06], ['"bool",', 3.4019391052900155e-06], ['BUILTIN_BOOL);', 3.4019391052900155e-06], ['"string",', 3.4019391052900155e-06], ['BUILTIN_STRING);', 3.4019391052900155e-06], ['"error",', 3.4019391052900155e-06], ['BUILTIN_ERROR);', 3.4019391052900155e-06], ['"byte",', 3.4019391052900155e-06], ['BUILTIN_BYTE);', 3.4019391052900155e-06], ['"rune",', 3.4019391052900155e-06], ['BUILTIN_RUNE);', 3.4019391052900155e-06], ['Export::register_builtin_type(Gogo*', 3.4019391052900155e-06], ['Builtin_code', 3.4019391052900155e-06], ['gogo->lookup_global(name);', 3.4019391052900155e-06], ['named_object->is_type());', 3.4019391052900155e-06], ['type_refs.insert(std::make_pair(named_object->type_value(),', 3.4019391052900155e-06], ['go_assert(ins.second);', 3.4019391052900155e-06], ['fails--we', 3.4019391052900155e-06], ['duplications', 3.4019391052900155e-06], ['named_object->type_value()->real_type();', 3.4019391052900155e-06], ['type_refs.insert(std::make_pair(real_type,', 3.4019391052900155e-06], ['Export::Stream.', 3.4019391052900155e-06], ['Export::Stream::Stream()', 3.4019391052900155e-06], ['this->sha1_helper_', 3.4019391052900155e-06], ['go_assert(this->sha1_helper_', 3.4019391052900155e-06], ['Export::Stream::~Stream()', 3.4019391052900155e-06], ['by.', 3.4019391052900155e-06], ['Export::Stream::write_and_sum_bytes(const', 3.4019391052900155e-06], ['this->sha1_helper_->process_bytes(bytes,', 3.4019391052900155e-06], ['this->do_write(bytes,', 3.4019391052900155e-06], ['Export::Stream::checksum()', 3.4019391052900155e-06], ['this->sha1_helper_->finish();', 3.4019391052900155e-06], ['this->sha1_helper_;', 3.4019391052900155e-06], ['Export::Stream::write_checksum(const', 3.4019391052900155e-06], ['this->do_write(s.data(),', 3.4019391052900155e-06], ['s.length());', 3.4019391052900155e-06], ['Stream_to_section.', 3.4019391052900155e-06], ['Stream_to_section::Stream_to_section(Backend*', 3.4019391052900155e-06], ['backend)', 3.4019391052900155e-06], ['backend_(backend)', 3.4019391052900155e-06], ['Stream_to_section::do_write(const', 3.4019391052900155e-06], ['this->backend_->write_export_data', 3.4019391052900155e-06], ['expressions.cc', 3.4019391052900155e-06], ['<algorithm>', 3.4019391052900155e-06], ['Expression::Expression(Expression_classification', 3.4019391052900155e-06], ['Expression::~Expression()', 3.4019391052900155e-06], ['Expression::traverse(Expression**', 3.4019391052900155e-06], ['pexpr,', 3.4019391052900155e-06], ['Traverse*', 3.4019391052900155e-06], ['((traverse->traverse_mask()', 3.4019391052900155e-06], ['Traverse::traverse_expressions)', 3.4019391052900155e-06], ['traverse->expression(pexpr);', 3.4019391052900155e-06], ['expr->do_traverse(traverse);', 3.4019391052900155e-06], ['Expression::traverse_subexpressions(Traverse*', 3.4019391052900155e-06], ['this->do_traverse(traverse);', 3.4019391052900155e-06], ['do_traverse', 3.4019391052900155e-06], ['Expression::do_traverse(Traverse*)', 3.4019391052900155e-06], ['By', 3.4019391052900155e-06], ['Expression::do_discarding_value()', 3.4019391052900155e-06], ['Expression::do_export(Export_function_body*)', 3.4019391052900155e-06], ['Expression::unused_value_error()', 3.4019391052900155e-06], ['this->report_error(_("value', 3.4019391052900155e-06], ['used"));', 3.4019391052900155e-06], ['discover', 3.4019391052900155e-06], ['Expression::set_is_error()', 3.4019391052900155e-06], ['EXPRESSION_ERROR;', 3.4019391052900155e-06], ['conveniently.', 3.4019391052900155e-06], ['Expression::report_error(const', 3.4019391052900155e-06], ['msg);', 3.4019391052900155e-06], ['Expression::determine_type(const', 3.4019391052900155e-06], ['this->do_determine_type(context);', 3.4019391052900155e-06], ['Expression::determine_type_no_context()', 3.4019391052900155e-06], ['this->do_determine_type(&context);', 3.4019391052900155e-06], ['Expression::is_same_variable(Expression*', 3.4019391052900155e-06], ['(a->classification()', 3.4019391052900155e-06], ['b->classification())', 3.4019391052900155e-06], ['av', 3.4019391052900155e-06], ['a->var_expression();', 3.4019391052900155e-06], ['(av', 3.4019391052900155e-06], ['av->named_object()', 3.4019391052900155e-06], ['b->var_expression()->named_object();', 3.4019391052900155e-06], ['af', 3.4019391052900155e-06], ['a->field_reference_expression();', 3.4019391052900155e-06], ['(af', 3.4019391052900155e-06], ['bf', 3.4019391052900155e-06], ['b->field_reference_expression();', 3.4019391052900155e-06], ['(af->field_index()', 3.4019391052900155e-06], ['bf->field_index()', 3.4019391052900155e-06], ['Expression::is_same_variable(af->expr(),', 3.4019391052900155e-06], ['bf->expr()));', 3.4019391052900155e-06], ['au', 3.4019391052900155e-06], ['a->unary_expression();', 3.4019391052900155e-06], ['(au', 3.4019391052900155e-06], ['bu', 3.4019391052900155e-06], ['b->unary_expression();', 3.4019391052900155e-06], ['(au->op()', 3.4019391052900155e-06], ['bu->op()', 3.4019391052900155e-06], ['Expression::is_same_variable(au->operand(),', 3.4019391052900155e-06], ['bu->operand()));', 3.4019391052900155e-06], ['Expression::convert_for_assignment(Gogo*,', 3.4019391052900155e-06], ['(lhs_type->is_error()', 3.4019391052900155e-06], ['rhs_type->is_error()', 3.4019391052900155e-06], ['rhs->is_error_expression())', 3.4019391052900155e-06], ['are_identical', 3.4019391052900155e-06], ['Type::are_identical(lhs_type,', 3.4019391052900155e-06], ['rhs_type,', 3.4019391052900155e-06], ['Type::COMPARE_TAGS),', 3.4019391052900155e-06], ['lhs_type->interface_type()', 3.4019391052900155e-06], ['(rhs_type->interface_type()', 3.4019391052900155e-06], ['Expression::convert_type_to_interface(lhs_type,', 3.4019391052900155e-06], ['Expression::convert_interface_to_interface(lhs_type,', 3.4019391052900155e-06], ['rhs_type->interface_type()', 3.4019391052900155e-06], ['Expression::convert_interface_to_type(lhs_type,', 3.4019391052900155e-06], ['(lhs_type->is_slice_type()', 3.4019391052900155e-06], ['rhs_type->is_nil_type())', 3.4019391052900155e-06], ['Assigning', 3.4019391052900155e-06], ['Expression::make_slice_value(lhs_type,', 3.4019391052900155e-06], ['(are_identical)', 3.4019391052900155e-06], ['(lhs_type->forwarded()', 3.4019391052900155e-06], ['rhs_type->forwarded())', 3.4019391052900155e-06], ['Different', 3.4019391052900155e-06], ['(lhs_type->is_numeric_type())', 3.4019391052900155e-06], ['((lhs_type->struct_type()', 3.4019391052900155e-06], ['rhs_type->struct_type()', 3.4019391052900155e-06], ['(lhs_type->array_type()', 3.4019391052900155e-06], ['rhs_type->array_type()', 3.4019391052900155e-06], ['gotten', 3.4019391052900155e-06], ['Expression::convert_type_to_interface(Type*', 3.4019391052900155e-06], ['RHS_TYPE', 3.4019391052900155e-06], ['(!lhs_interface_type->implements_interface(rhs_type,', 3.4019391052900155e-06], ['LHS_TYPE', 3.4019391052900155e-06], ['rhs_type->named_type();', 3.4019391052900155e-06], ['rhs_type->struct_type();', 3.4019391052900155e-06], ['rhs_type->deref()->named_type();', 3.4019391052900155e-06], ['rhs_type->deref()->struct_type();', 3.4019391052900155e-06], ['rhs_named_type->interface_method_table(lhs_interface_type,', 3.4019391052900155e-06], ['(rhs_struct_type', 3.4019391052900155e-06], ['rhs_struct_type->interface_method_table(lhs_interface_type,', 3.4019391052900155e-06], ['(rhs_type->points_to()', 3.4019391052900155e-06], ['OBJ.', 3.4019391052900155e-06], ['Expression::make_heap_expression(rhs,', 3.4019391052900155e-06], ['Expression::get_interface_type_descriptor(Expression*', 3.4019391052900155e-06], ['go_assert(rhs->type()->interface_type()', 3.4019391052900155e-06], ['rhs->location();', 3.4019391052900155e-06], ['(rhs->type()->interface_type()->is_empty())', 3.4019391052900155e-06], ['INTERFACE_INFO_TYPE_DESCRIPTOR,', 3.4019391052900155e-06], ['Expression::make_field_reference(descriptor,', 3.4019391052900155e-06], ['mtable,', 3.4019391052900155e-06], ['Expression::make_conditional(eq,', 3.4019391052900155e-06], ['Expression::convert_interface_to_interface(Type', 3.4019391052900155e-06], ['for_type_guard,', 3.4019391052900155e-06], ['(Type::are_identical(lhs_type,', 3.4019391052900155e-06], ['rhs->type(),', 3.4019391052900155e-06], ['examination', 3.4019391052900155e-06], ['rhs_type_expr', 3.4019391052900155e-06], ['(for_type_guard)', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::ASSERTITAB,', 3.4019391052900155e-06], ['rhs_type_expr;', 3.4019391052900155e-06], ['fail,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::REQUIREITAB,', 3.4019391052900155e-06], ['Expression::convert_interface_to_type(Type', 3.4019391052900155e-06], ['rhs_descriptor', 3.4019391052900155e-06], ['rhs_inter_expr', 3.4019391052900155e-06], ['check_iface', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::ASSERTI2T,', 3.4019391052900155e-06], ['rhs_descriptor,', 3.4019391052900155e-06], ['rhs_inter_expr);', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(lhs_type),', 3.4019391052900155e-06], ['Expression::make_dereference(obj,', 3.4019391052900155e-06], ['Expression::make_compound(check_iface,', 3.4019391052900155e-06], ['Expression::get_backend(Translate_context*', 3.4019391052900155e-06], ['this->do_get_backend(context);', 3.4019391052900155e-06], ['Expression::backend_numeric_constant_expression(Translate_context*', 3.4019391052900155e-06], ['(!val->to_int(&ival))', 3.4019391052900155e-06], ['ival);', 3.4019391052900155e-06], ['(!val->to_float(&fval))', 3.4019391052900155e-06], ['gogo->backend()->float_constant_expression(btype,', 3.4019391052900155e-06], ['(!val->to_complex(&cval))', 3.4019391052900155e-06], ['gogo->backend()->complex_constant_expression(btype,', 3.4019391052900155e-06], ['Expression::check_bounds(Expression*', 3.4019391052900155e-06], ['bound_type', 3.4019391052900155e-06], ['val_type_size;', 3.4019391052900155e-06], ['(val_type->integer_type()', 3.4019391052900155e-06], ['val_type->integer_type()->bits();', 3.4019391052900155e-06], ['val_type->integer_type()->is_unsigned();', 3.4019391052900155e-06], ['(!val_type->is_numeric_type()', 3.4019391052900155e-06], ['!Type::are_convertible(bound_type,', 3.4019391052900155e-06], ['(val_type->complex_type()', 3.4019391052900155e-06], ['val_type->complex_type()->bits();', 3.4019391052900155e-06], ['val_type->float_type()->bits();', 3.4019391052900155e-06], ['(!val_is_unsigned)', 3.4019391052900155e-06], ['Expression::make_binary(OPERATOR_LT,', 3.4019391052900155e-06], ['bound_type->integer_type()->bits();', 3.4019391052900155e-06], ['val_is_unsigned))', 3.4019391052900155e-06], ['maxval', 3.4019391052900155e-06], ['2^(bound_type_size', 3.4019391052900155e-06], ['maxval;', 3.4019391052900155e-06], ['mpz_init(maxval);', 3.4019391052900155e-06], ['mpz_mul_2exp(maxval,', 3.4019391052900155e-06], ['mpz_sub_ui(maxval,', 3.4019391052900155e-06], ['maxval,', 3.4019391052900155e-06], ['Expression::make_integer_z(&maxval,', 3.4019391052900155e-06], ['mpz_clear(maxval);', 3.4019391052900155e-06], ['negative_index,', 3.4019391052900155e-06], ['index_overflows,', 3.4019391052900155e-06], ['Expression::dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['this->do_dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['cascading', 3.4019391052900155e-06], ['Error_expression', 3.4019391052900155e-06], ['Error_expression(Location', 3.4019391052900155e-06], ['Expression(EXPRESSION_ERROR,', 3.4019391052900155e-06], ['nc->set_unsigned_long(NULL,', 3.4019391052900155e-06], ['Error_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"_Error_"', 3.4019391052900155e-06], ['Expression::make_error(Location', 3.4019391052900155e-06], ['Error_expression(location);', 3.4019391052900155e-06], ['Type_expression', 3.4019391052900155e-06], ['Type_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_TYPE,', 3.4019391052900155e-06], ['do_check_types(Gogo*)', 3.4019391052900155e-06], ['do_get_backend(Translate_context*)', 3.4019391052900155e-06], ['Type_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_type(Type*', 3.4019391052900155e-06], ['Type_expression(type,', 3.4019391052900155e-06], ['Parser_expression::do_type()', 3.4019391052900155e-06], ['Var_expression.', 3.4019391052900155e-06], ['Var_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['this->variable_->var_value();', 3.4019391052900155e-06], ['var->lower_init_expression(gogo,', 3.4019391052900155e-06], ['Var_expression::do_type()', 3.4019391052900155e-06], ['this->variable_->var_value()->type();', 3.4019391052900155e-06], ['this->variable_->result_var_value()->type();', 3.4019391052900155e-06], ['Var_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->variable_->var_value()->determine_type();', 3.4019391052900155e-06], ['Var_expression::do_address_taken(bool', 3.4019391052900155e-06], ['Node::make_node(this)->set_encoding(Node::ESCAPE_HEAP);', 3.4019391052900155e-06], ['Var_expression::do_inlining_cost()', 3.4019391052900155e-06], ['(this->variable_->var_value()->is_parameter())', 3.4019391052900155e-06], ['0x100000;', 3.4019391052900155e-06], ['Var_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['efb->write_string(Gogo::unpack_hidden_name(this->variable_->name()));', 3.4019391052900155e-06], ['Var_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->variable_->get_backend_variable(context->gogo(),', 3.4019391052900155e-06], ['context->function());', 3.4019391052900155e-06], ['is_in_heap;', 3.4019391052900155e-06], ['btype;', 3.4019391052900155e-06], ['this->variable_->var_value()->is_in_heap();', 3.4019391052900155e-06], ['this->variable_->var_value()->type()->get_backend(gogo);', 3.4019391052900155e-06], ['this->variable_->result_var_value()->is_in_heap();', 3.4019391052900155e-06], ['this->variable_->result_var_value()->type()->get_backend(gogo);', 3.4019391052900155e-06], ['context->backend()->var_expression(bvar,', 3.4019391052900155e-06], ['context->backend()->indirect_expression(btype,', 3.4019391052900155e-06], ['Var_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['this->variable_->message_name()', 3.4019391052900155e-06], ['Expression::make_var_reference(Named_object*', 3.4019391052900155e-06], ['(var->is_sink())', 3.4019391052900155e-06], ['Expression::make_sink(location);', 3.4019391052900155e-06], ['Creating', 3.4019391052900155e-06], ['wasteful.', 3.4019391052900155e-06], ['Var_expression(var,', 3.4019391052900155e-06], ['Enclosed_var_expression.', 3.4019391052900155e-06], ['Enclosed_var_expression::do_traverse(Traverse*)', 3.4019391052900155e-06], ['Enclosed_var_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['Enclosed_var_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['Enclosed_var_expression::do_address_taken(bool', 3.4019391052900155e-06], ['Enclosed_var_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['adc)', 3.4019391052900155e-06], ['adc->ostream()', 3.4019391052900155e-06], ['this->variable_->message_name();', 3.4019391052900155e-06], ['Expression::make_enclosing_var_reference(Expression*', 3.4019391052900155e-06], ['Enclosed_var_expression(reference,', 3.4019391052900155e-06], ['Temporary_reference_expression.', 3.4019391052900155e-06], ['Temporary_reference_expression::do_type()', 3.4019391052900155e-06], ['Temporary_reference_expression::do_address_taken(bool)', 3.4019391052900155e-06], ['Temporary_reference_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['Correct', 3.4019391052900155e-06], ['base()', 3.4019391052900155e-06], ['circularity', 3.4019391052900155e-06], ['(!this->is_lvalue_', 3.4019391052900155e-06], ['stype->points_to()', 3.4019391052900155e-06], ['stype->points_to()->is_void_type())', 3.4019391052900155e-06], ['this->type()->base()->get_backend(gogo);', 3.4019391052900155e-06], ['Temporary_reference_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_temporary_reference(Temporary_statement*', 3.4019391052900155e-06], ['Temporary_reference_expression(statement,', 3.4019391052900155e-06], ['Set_and_use_temporary_expression.', 3.4019391052900155e-06], ['Set_and_use_temporary_expression::do_type()', 3.4019391052900155e-06], ['Set_and_use_temporary_expression::do_determine_type(', 3.4019391052900155e-06], ['Set_and_use_temporary_expression::do_address_taken(bool)', 3.4019391052900155e-06], ['Set_and_use_temporary_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['lvar_ref', 3.4019391052900155e-06], ['lvar_ref,', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(set,', 3.4019391052900155e-06], ['Dump.', 3.4019391052900155e-06], ['Set_and_use_temporary_expression::do_dump_expression(', 3.4019391052900155e-06], ["'(';", 3.4019391052900155e-06], ["')';", 3.4019391052900155e-06], ['set-and-use', 3.4019391052900155e-06], ['Expression::make_set_and_use_temporary(Temporary_statement*', 3.4019391052900155e-06], ['Set_and_use_temporary_expression(statement,', 3.4019391052900155e-06], ['expression--a', 3.4019391052900155e-06], ['Sink_expression', 3.4019391052900155e-06], ['Sink_expression(Location', 3.4019391052900155e-06], ['Expression(EXPRESSION_SINK,', 3.4019391052900155e-06], ['Sink_expression(this->location());', 3.4019391052900155e-06], ['Sink_expression::do_type()', 3.4019391052900155e-06], ['Type::make_sink_type();', 3.4019391052900155e-06], ['Sink_expression::do_determine_type(const', 3.4019391052900155e-06], ['write-only', 3.4019391052900155e-06], ['drop.', 3.4019391052900155e-06], ['Sink_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['!this->type_->is_sink_type());', 3.4019391052900155e-06], ['fn_ctx', 3.4019391052900155e-06], ['this->type_->get_backend(context->gogo());', 3.4019391052900155e-06], ['gogo->backend()->temporary_variable(fn_ctx,', 3.4019391052900155e-06], ['bt,', 3.4019391052900155e-06], ['var_ref;', 3.4019391052900155e-06], ['Sink_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"_"', 3.4019391052900155e-06], ['Expression::make_sink(Location', 3.4019391052900155e-06], ['Sink_expression(location);', 3.4019391052900155e-06], ['Func_expression.', 3.4019391052900155e-06], ['unchanging.', 3.4019391052900155e-06], ['Func_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Expression::traverse(&this->closure_,', 3.4019391052900155e-06], ['traverse));', 3.4019391052900155e-06], ['Func_expression::do_type()', 3.4019391052900155e-06], ['(this->function_->is_function())', 3.4019391052900155e-06], ['this->function_->func_value()->type();', 3.4019391052900155e-06], ['(this->function_->is_function_declaration())', 3.4019391052900155e-06], ['this->function_->func_declaration_value()->type();', 3.4019391052900155e-06], ['Func_expression::get_code_pointer(Gogo*', 3.4019391052900155e-06], ['no->func_value()->get_or_make_decl(gogo,', 3.4019391052900155e-06], ['no->func_declaration_value()->get_or_make_decl(gogo,', 3.4019391052900155e-06], ['gogo->backend()->function_code_expression(fndecl,', 3.4019391052900155e-06], ['closes', 3.4019391052900155e-06], ['over.', 3.4019391052900155e-06], ['Func_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->function_;', 3.4019391052900155e-06], ['descriptor;', 3.4019391052900155e-06], ['no->func_value()->descriptor(gogo,', 3.4019391052900155e-06], ['(no->func_declaration_value()->type()->is_builtin())', 3.4019391052900155e-06], ['called"),', 3.4019391052900155e-06], ['no->func_declaration_value()->descriptor(gogo,', 3.4019391052900155e-06], ['bdesc', 3.4019391052900155e-06], ['descriptor->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->address_expression(bdesc,', 3.4019391052900155e-06], ['go_assert(this->function_->func_value()->enclosing()', 3.4019391052900155e-06], ['*bexpr', 3.4019391052900155e-06], ['this->closure_->get_backend(context);', 3.4019391052900155e-06], ['Introduce', 3.4019391052900155e-06], ['fields).', 3.4019391052900155e-06], ['Func_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['{closure', 3.4019391052900155e-06], ['this->closure_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['Expression::make_func_reference(Named_object*', 3.4019391052900155e-06], ['Func_expression(function,', 3.4019391052900155e-06], ['Detect', 3.4019391052900155e-06], ['(function->is_function_declaration())', 3.4019391052900155e-06], ['fe->set_runtime_code(Runtime::name_to_code(function->name()));', 3.4019391052900155e-06], ['fe;', 3.4019391052900155e-06], ['Func_descriptor_expression.', 3.4019391052900155e-06], ['Func_descriptor_expression::Func_descriptor_expression(Named_object*', 3.4019391052900155e-06], ['Expression(EXPRESSION_FUNC_DESCRIPTOR,', 3.4019391052900155e-06], ['fn->location()),', 3.4019391052900155e-06], ['fn_(fn),', 3.4019391052900155e-06], ['dvar_(NULL)', 3.4019391052900155e-06], ['go_assert(!fn->is_function()', 3.4019391052900155e-06], ['!fn->func_value()->needs_closure());', 3.4019391052900155e-06], ['Func_descriptor_expression::do_traverse(Traverse*)', 3.4019391052900155e-06], ['Func_descriptor_expression::make_func_descriptor_type()', 3.4019391052900155e-06], ['(Func_descriptor_expression::descriptor_type', 3.4019391052900155e-06], ['Type::make_builtin_struct_type(1,', 3.4019391052900155e-06], ['"fn",', 3.4019391052900155e-06], ['uintptr_type);', 3.4019391052900155e-06], ['Func_descriptor_expression::descriptor_type', 3.4019391052900155e-06], ['Type::make_builtin_named_type("functionDescriptor",', 3.4019391052900155e-06], ['struct_type);', 3.4019391052900155e-06], ['Func_descriptor_expression::do_type()', 3.4019391052900155e-06], ['Func_descriptor_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['(this->dvar_', 3.4019391052900155e-06], ['context->backend()->var_expression(this->dvar_,', 3.4019391052900155e-06], ['var_name(gogo->function_descriptor_name(no));', 3.4019391052900155e-06], ['!no->func_declaration_value()->asm_name().empty()', 3.4019391052900155e-06], ['Linemap::is_predeclared_location(no->location()))', 3.4019391052900155e-06], ['no->is_function()', 3.4019391052900155e-06], ['!no->func_value()->asm_name().empty()', 3.4019391052900155e-06], ['no->func_value()->asm_name().compare(0,', 3.4019391052900155e-06], ['"syscall.")', 3.4019391052900155e-06], ['is_descriptor)', 3.4019391052900155e-06], ['context->backend()->immutable_struct_reference(var_name,', 3.4019391052900155e-06], ['hash/equality', 3.4019391052900155e-06], ['runtime,', 3.4019391052900155e-06], ['(no->name().find("hash")', 3.4019391052900155e-06], ['no->name().find("equal")', 3.4019391052900155e-06], ['std::string::npos))', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(no->name())', 3.4019391052900155e-06], ['!is_exported_runtime)', 3.4019391052900155e-06], ['Gogo::is_thunk(no));', 3.4019391052900155e-06], ['context->backend()->immutable_struct(var_name,', 3.4019391052900155e-06], ['vals->push_back(Expression::make_func_code_reference(this->fn_,', 3.4019391052900155e-06], ['Expression::make_struct_composite_literal(this->type(),', 3.4019391052900155e-06], ['bcontext(gogo,', 3.4019391052900155e-06], ['bcontext.set_is_const();', 3.4019391052900155e-06], ['init->get_backend(&bcontext);', 3.4019391052900155e-06], ['context->backend()->immutable_struct_set_init(bvar,', 3.4019391052900155e-06], ['bloc,', 3.4019391052900155e-06], ['this->dvar_', 3.4019391052900155e-06], ['Func_descriptor_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"[descriptor', 3.4019391052900155e-06], ['this->fn_->name()', 3.4019391052900155e-06], ['Func_descriptor_expression*', 3.4019391052900155e-06], ['Expression::make_func_descriptor(Named_object*', 3.4019391052900155e-06], ['Func_descriptor_expression(fn);', 3.4019391052900155e-06], ['converted.', 3.4019391052900155e-06], ['Expression::make_func_descriptor_type()', 3.4019391052900155e-06], ['Func_code_reference_expression', 3.4019391052900155e-06], ['Func_code_reference_expression(Named_object*', 3.4019391052900155e-06], ['Expression(EXPRESSION_FUNC_CODE_REFERENCE,', 3.4019391052900155e-06], ['function_(function)', 3.4019391052900155e-06], ['do_traverse(Traverse*)', 3.4019391052900155e-06], ['Expression::make_func_code_reference(this->function_,', 3.4019391052900155e-06], ['"[raw', 3.4019391052900155e-06], ['this->function_->name()', 3.4019391052900155e-06], ['Func_code_reference_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['Func_expression::get_code_pointer(context->gogo(),', 3.4019391052900155e-06], ['Expression::make_func_code_reference(Named_object*', 3.4019391052900155e-06], ['Func_code_reference_expression(function,', 3.4019391052900155e-06], ['Unknown_expression.', 3.4019391052900155e-06], ['Unknown_expression::name()', 3.4019391052900155e-06], ['this->named_object_->name();', 3.4019391052900155e-06], ['Unknown_expression::do_lower(Gogo*,', 3.4019391052900155e-06], ['this->named_object_;', 3.4019391052900155e-06], ['(!no->is_unknown())', 3.4019391052900155e-06], ['no->unknown_value()->real_named_object();', 3.4019391052900155e-06], ['this->named_object_->message_name().c_str());', 3.4019391052900155e-06], ['(real->classification())', 3.4019391052900155e-06], ['Expression::make_const_reference(real,', 3.4019391052900155e-06], ['Expression::make_type(real->type_value(),', 3.4019391052900155e-06], ['real->message_name().c_str());', 3.4019391052900155e-06], ['real->var_value()->set_is_used();', 3.4019391052900155e-06], ['Expression::make_var_reference(real,', 3.4019391052900155e-06], ['Expression::make_func_reference(real,', 3.4019391052900155e-06], ['"unexpected', 3.4019391052900155e-06], ['package");', 3.4019391052900155e-06], ['Unknown_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"_Unknown_("', 3.4019391052900155e-06], ['this->named_object_->name()', 3.4019391052900155e-06], ['Unknown_expression*', 3.4019391052900155e-06], ['Expression::make_unknown_reference(Named_object*', 3.4019391052900155e-06], ['Unknown_expression(no,', 3.4019391052900155e-06], ['Boolean_expression', 3.4019391052900155e-06], ['Boolean_expression(bool', 3.4019391052900155e-06], ['Expression(EXPRESSION_BOOLEAN,', 3.4019391052900155e-06], ['val_(val),', 3.4019391052900155e-06], ['type_(NULL)', 3.4019391052900155e-06], ['context->backend()->boolean_constant_expression(this->val_);', 3.4019391052900155e-06], ['efb->write_c_string(this->val_', 3.4019391052900155e-06], ['"$true"', 3.4019391052900155e-06], ['"$false");', 3.4019391052900155e-06], ['(this->val_', 3.4019391052900155e-06], ['Boolean_expression::do_type()', 3.4019391052900155e-06], ['Boolean_expression::do_determine_type(const', 3.4019391052900155e-06], ['Boolean_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['imp->require_c_string("true");', 3.4019391052900155e-06], ['imp->require_c_string("false");', 3.4019391052900155e-06], ['Expression::make_boolean(bool', 3.4019391052900155e-06], ['Boolean_expression(val,', 3.4019391052900155e-06], ['String_expression.', 3.4019391052900155e-06], ['String_expression::do_type()', 3.4019391052900155e-06], ['Type::make_string_type();', 3.4019391052900155e-06], ['String_expression::do_determine_type(const', 3.4019391052900155e-06], ['context->type->is_string_type())', 3.4019391052900155e-06], ['String_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['Type::make_string_type()->get_backend(gogo);', 3.4019391052900155e-06], ['init(2);', 3.4019391052900155e-06], ['str_cst', 3.4019391052900155e-06], ['gogo->backend()->string_constant_expression(this->val_);', 3.4019391052900155e-06], ['init[0]', 3.4019391052900155e-06], ['gogo->backend()->address_expression(str_cst,', 3.4019391052900155e-06], ['Type::lookup_integer_type("int")->get_backend(gogo);', 3.4019391052900155e-06], ['mpz_init_set_ui(lenval,', 3.4019391052900155e-06], ['this->val_.length());', 3.4019391052900155e-06], ['init[1]', 3.4019391052900155e-06], ['gogo->backend()->integer_constant_expression(int_btype,', 3.4019391052900155e-06], ['lenval);', 3.4019391052900155e-06], ['mpz_clear(lenval);', 3.4019391052900155e-06], ['String_expression::export_string(String_dump*', 3.4019391052900155e-06], ['String_expression*', 3.4019391052900155e-06], ['s.reserve(str->val_.length()', 3.4019391052900155e-06], ['str->val_.begin();', 3.4019391052900155e-06], ['str->val_.end();', 3.4019391052900155e-06], ["'\\n')", 3.4019391052900155e-06], ['"\\\\n";', 3.4019391052900155e-06], ["'\\t')", 3.4019391052900155e-06], ['"\\\\t";', 3.4019391052900155e-06], ['"\\\\x";', 3.4019391052900155e-06], ['exp->write_string(s);', 3.4019391052900155e-06], ['String_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['String_expression::export_string(efb,', 3.4019391052900155e-06], ['String_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['imp->require_c_string("\\"");', 3.4019391052900155e-06], ['\'"\'', 3.4019391052900155e-06], ["'n')", 3.4019391052900155e-06], ["'\\n';", 3.4019391052900155e-06], ["'\\t';", 3.4019391052900155e-06], ["'x')", 3.4019391052900155e-06], ['vh', 3.4019391052900155e-06], ['vl', 3.4019391052900155e-06], ['(vh', 3.4019391052900155e-06], ['vl;', 3.4019391052900155e-06], ['Expression::make_string(val,', 3.4019391052900155e-06], ['String_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['String_expression::export_string(ast_dump_context,', 3.4019391052900155e-06], ['Expression::make_string(const', 3.4019391052900155e-06], ['String_expression(val,', 3.4019391052900155e-06], ['String_info_expression', 3.4019391052900155e-06], ['String_info_expression(Expression*', 3.4019391052900155e-06], ['Expression(EXPRESSION_STRING_INFO,', 3.4019391052900155e-06], ['string_(string),', 3.4019391052900155e-06], ['string_info_(string_info)', 3.4019391052900155e-06], ['String_info_expression(this->string_->copy(),', 3.4019391052900155e-06], ['this->string_->issue_nil_check();', 3.4019391052900155e-06], ['string_;', 3.4019391052900155e-06], ['string_info_;', 3.4019391052900155e-06], ['String_info_expression::do_type()', 3.4019391052900155e-06], ['GENERIC.', 3.4019391052900155e-06], ['String_info_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['bstring', 3.4019391052900155e-06], ['this->string_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->struct_field_expression(bstring,', 3.4019391052900155e-06], ['String_info_expression::do_dump_expression(', 3.4019391052900155e-06], ['"stringinfo(";', 3.4019391052900155e-06], ['this->string_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['(this->string_info_', 3.4019391052900155e-06], ['STRING_INFO_DATA', 3.4019391052900155e-06], ['"data"', 3.4019391052900155e-06], ['this->string_info_', 3.4019391052900155e-06], ['STRING_INFO_LENGTH', 3.4019391052900155e-06], ['Expression::make_string_info(Expression*', 3.4019391052900155e-06], ['String_info_expression(string,', 3.4019391052900155e-06], ['Integer_expression', 3.4019391052900155e-06], ['Integer_expression(const', 3.4019391052900155e-06], ['is_character_constant,', 3.4019391052900155e-06], ['Expression(EXPRESSION_INTEGER,', 3.4019391052900155e-06], ['is_character_constant_(is_character_constant)', 3.4019391052900155e-06], ['mpz_init_set(this->val_,', 3.4019391052900155e-06], ['*val);', 3.4019391052900155e-06], ['export_integer(String_dump*', 3.4019391052900155e-06], ['dump_integer(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_character(&this->val_,', 3.4019391052900155e-06], ['Expression::make_integer_z(&this->val_,', 3.4019391052900155e-06], ['is_character_constant_;', 3.4019391052900155e-06], ['Integer_expression::do_numeric_constant_value(Numeric_constant*', 3.4019391052900155e-06], ['nc->set_rune(this->type_,', 3.4019391052900155e-06], ['nc->set_int(this->type_,', 3.4019391052900155e-06], ['Integer_expression::do_type()', 3.4019391052900155e-06], ['Integer_expression::do_determine_type(const', 3.4019391052900155e-06], ['Integer_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['nc.set_rune(NULL,', 3.4019391052900155e-06], ['nc.set_int(NULL,', 3.4019391052900155e-06], ['Integer_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['reason.', 3.4019391052900155e-06], ['<,', 3.4019391052900155e-06], ['<=,', 3.4019391052900155e-06], ['mpz_sizeinbase(this->val_,', 3.4019391052900155e-06], ['int_type;', 3.4019391052900155e-06], ['nc.set_int(resolved_type,', 3.4019391052900155e-06], ['Integer_expression::export_integer(String_dump*', 3.4019391052900155e-06], ['mpz_get_str(NULL,', 3.4019391052900155e-06], ['exp->write_c_string(s);', 3.4019391052900155e-06], ['free(s);', 3.4019391052900155e-06], ['Integer_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['efb->write_c_string("\'");', 3.4019391052900155e-06], ['Integer_expression::do_import(Import_expression*', 3.4019391052900155e-06], ["'i')", 3.4019391052900155e-06], ['plus_pos', 3.4019391052900155e-06], ["num.find('+',", 3.4019391052900155e-06], ['minus_pos', 3.4019391052900155e-06], ["num.find('-',", 3.4019391052900155e-06], ['pos;', 3.4019391052900155e-06], ['(plus_pos', 3.4019391052900155e-06], ['minus_pos;', 3.4019391052900155e-06], ['(minus_pos', 3.4019391052900155e-06], ['plus_pos;', 3.4019391052900155e-06], ['real_str', 3.4019391052900155e-06], ['(mpfr_init_set_str(real,', 3.4019391052900155e-06], ['real_str.c_str(),', 3.4019391052900155e-06], ['real_str.c_str());', 3.4019391052900155e-06], ['imag_str;', 3.4019391052900155e-06], ['num.substr(pos);', 3.4019391052900155e-06], ['imag_str.substr(0,', 3.4019391052900155e-06], ['imag_str.size()', 3.4019391052900155e-06], ['(mpfr_init_set_str(imag,', 3.4019391052900155e-06], ['imag_str.c_str(),', 3.4019391052900155e-06], ['imag_str.c_str());', 3.4019391052900155e-06], ['mpc_init2(cval,', 3.4019391052900155e-06], ['mpc_set_fr_fr(cval,', 3.4019391052900155e-06], ['Expression::make_complex(&cval,', 3.4019391052900155e-06], ["(num.find('.')", 3.4019391052900155e-06], ["num.find('E')", 3.4019391052900155e-06], ['is_character_constant', 3.4019391052900155e-06], ["'\\'');", 3.4019391052900155e-06], ['num.length()', 3.4019391052900155e-06], ['(mpz_init_set_str(val,', 3.4019391052900155e-06], ['Expression::make_character(&val,', 3.4019391052900155e-06], ['Expression::make_integer_z(&val,', 3.4019391052900155e-06], ['(mpfr_init_set_str(val,', 3.4019391052900155e-06], ['Expression::make_float(&val,', 3.4019391052900155e-06], ['Integer_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Integer_expression::export_integer(ast_dump_context,', 3.4019391052900155e-06], ['multi-precision', 3.4019391052900155e-06], ['Expression::make_integer_z(const', 3.4019391052900155e-06], ['Expression::make_integer_ul(unsigned', 3.4019391052900155e-06], ['mpz_init_set_ui(zval,', 3.4019391052900155e-06], ['Expression::make_integer_sl(long', 3.4019391052900155e-06], ['mpz_init_set_si(zval,', 3.4019391052900155e-06], ['uninitialized', 3.4019391052900155e-06], ['mpz_t.', 3.4019391052900155e-06], ['set_mpz_from_int64(mpz_t*', 3.4019391052900155e-06], ['zval,', 3.4019391052900155e-06], ['long>(val);', 3.4019391052900155e-06], ['(static_cast<int64_t>(ul)', 3.4019391052900155e-06], ['uv;', 3.4019391052900155e-06], ['static_cast<uint64_t>(val);', 3.4019391052900155e-06], ['static_cast<uint64_t>(-', 3.4019391052900155e-06], ['0xffffffffUL;', 3.4019391052900155e-06], ['hval;', 3.4019391052900155e-06], ['mpz_init_set_ui(hval,', 3.4019391052900155e-06], ['long>(uv', 3.4019391052900155e-06], ['32));', 3.4019391052900155e-06], ['mpz_mul_2exp(hval,', 3.4019391052900155e-06], ['hval,', 3.4019391052900155e-06], ['mpz_add(*zval,', 3.4019391052900155e-06], ['*zval,', 3.4019391052900155e-06], ['hval);', 3.4019391052900155e-06], ['mpz_clear(hval);', 3.4019391052900155e-06], ['mpz_neg(*zval,', 3.4019391052900155e-06], ['*zval);', 3.4019391052900155e-06], ['int64_t.', 3.4019391052900155e-06], ['Expression::make_integer_int64(int64_t', 3.4019391052900155e-06], ['Expression::make_character(const', 3.4019391052900155e-06], ['Floats.', 3.4019391052900155e-06], ['Float_expression', 3.4019391052900155e-06], ['Float_expression(const', 3.4019391052900155e-06], ['Expression(EXPRESSION_FLOAT,', 3.4019391052900155e-06], ['mpfr_init_set(this->val_,', 3.4019391052900155e-06], ['export_float(String_dump*', 3.4019391052900155e-06], ['dump_float(Ast_dump_context*', 3.4019391052900155e-06], ['nc->set_float(this->type_,', 3.4019391052900155e-06], ['Expression::make_float(&this->val_,', 3.4019391052900155e-06], ['Float_expression::do_type()', 3.4019391052900155e-06], ['Float_expression::do_determine_type(const', 3.4019391052900155e-06], ['(context->type->integer_type()', 3.4019391052900155e-06], ['context->type->float_type()', 3.4019391052900155e-06], ['context->type->complex_type()', 3.4019391052900155e-06], ['Float_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['nc.set_float(NULL,', 3.4019391052900155e-06], ['Float_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['nc.set_float(resolved_type,', 3.4019391052900155e-06], ['Float_expression::export_float(String_dump', 3.4019391052900155e-06], ['exponent;', 3.4019391052900155e-06], ['mpfr_get_str(NULL,', 3.4019391052900155e-06], ['&exponent,', 3.4019391052900155e-06], ['exp->write_c_string("-");', 3.4019391052900155e-06], ['exp->write_c_string("0.");', 3.4019391052900155e-06], ['exp->write_c_string(*s', 3.4019391052900155e-06], ['mpfr_free_str(s);', 3.4019391052900155e-06], ['"E%ld",', 3.4019391052900155e-06], ['Float_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['Float_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Float_expression::export_float(ast_dump_context,', 3.4019391052900155e-06], ['Expression::make_float(const', 3.4019391052900155e-06], ['Float_expression(val,', 3.4019391052900155e-06], ['numbers.', 3.4019391052900155e-06], ['Complex_expression', 3.4019391052900155e-06], ['Complex_expression(const', 3.4019391052900155e-06], ['Expression(EXPRESSION_COMPLEX,', 3.4019391052900155e-06], ['mpc_init2(this->val_,', 3.4019391052900155e-06], ['mpc_set(this->val_,', 3.4019391052900155e-06], ['export_complex(String_dump*', 3.4019391052900155e-06], ['dump_complex(Ast_dump_context*', 3.4019391052900155e-06], ['nc->set_complex(this->type_,', 3.4019391052900155e-06], ['Expression::make_complex(&this->val_,', 3.4019391052900155e-06], ['Complex_expression::do_type()', 3.4019391052900155e-06], ['Complex_expression::do_determine_type(const', 3.4019391052900155e-06], ['Complex_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['nc.set_complex(NULL,', 3.4019391052900155e-06], ['Complex_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['nc.set_complex(resolved_type,', 3.4019391052900155e-06], ['Complex_expression::export_complex(String_dump*', 3.4019391052900155e-06], ['(!mpfr_zero_p(mpc_realref(val)))', 3.4019391052900155e-06], ['(mpfr_sgn(mpc_imagref(val))', 3.4019391052900155e-06], ['exp->write_c_string("+");', 3.4019391052900155e-06], ['exp->write_c_string("i");', 3.4019391052900155e-06], ['Complex_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['Complex_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Complex_expression::export_complex(ast_dump_context,', 3.4019391052900155e-06], ['Expression::make_complex(const', 3.4019391052900155e-06], ['Complex_expression(val,', 3.4019391052900155e-06], ['Find_named_object(Named_object*', 3.4019391052900155e-06], ['no_(no),', 3.4019391052900155e-06], ['no_;', 3.4019391052900155e-06], ['Const_expression(Named_object*', 3.4019391052900155e-06], ['Expression(EXPRESSION_CONST_REFERENCE,', 3.4019391052900155e-06], ['constant_(constant),', 3.4019391052900155e-06], ['seen_(false)', 3.4019391052900155e-06], ['named_object()', 3.4019391052900155e-06], ['this->constant_;', 3.4019391052900155e-06], ['check_for_init_loop();', 3.4019391052900155e-06], ['do_string_constant_value(std::string*', 3.4019391052900155e-06], ['this->constant_->const_value()->expr()->export_expression(efb);', 3.4019391052900155e-06], ['constant_;', 3.4019391052900155e-06], ['recursion', 3.4019391052900155e-06], ['seen_;', 3.4019391052900155e-06], ['Const_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Const_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['(this->constant_->const_value()->expr()->classification()', 3.4019391052900155e-06], ['EXPRESSION_IOTA)', 3.4019391052900155e-06], ['(iota_value', 3.4019391052900155e-06], ['"iota', 3.4019391052900155e-06], ['declarations");', 3.4019391052900155e-06], ['iota_value', 3.4019391052900155e-06], ['Expression::make_integer_ul(iota_value,', 3.4019391052900155e-06], ['gogo->lower_constant(this->constant_);', 3.4019391052900155e-06], ['Const_expression::do_numeric_constant_value(Numeric_constant*', 3.4019391052900155e-06], ['(!nc->set_type(ctype,', 3.4019391052900155e-06], ['Const_expression::do_string_constant_value(std::string*', 3.4019391052900155e-06], ['e->string_constant_value(val);', 3.4019391052900155e-06], ['Const_expression::do_type()', 3.4019391052900155e-06], ['this->constant_->const_value();', 3.4019391052900155e-06], ['(this->seen_', 3.4019391052900155e-06], ['nc->lowering())', 3.4019391052900155e-06], ['(nc->type()', 3.4019391052900155e-06], ['!nc->type()->is_error_type())', 3.4019391052900155e-06], ['(!this->seen_)', 3.4019391052900155e-06], ['nc->location();', 3.4019391052900155e-06], ['nc->set_type(this->type_);', 3.4019391052900155e-06], ['nc->type();', 3.4019391052900155e-06], ['nc->expr()->type();', 3.4019391052900155e-06], ['(ret->is_error_type())', 3.4019391052900155e-06], ['nc->set_type(ret);', 3.4019391052900155e-06], ['Const_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->constant_->const_value()->expr()->type());', 3.4019391052900155e-06], ['!ctype->is_abstract())', 3.4019391052900155e-06], ['context->type->is_numeric_type()', 3.4019391052900155e-06], ['cetype->is_numeric_type())', 3.4019391052900155e-06], ['context->type->is_string_type()', 3.4019391052900155e-06], ['cetype->is_string_type())', 3.4019391052900155e-06], ['context->type->is_boolean_type()', 3.4019391052900155e-06], ['cetype->is_boolean_type())', 3.4019391052900155e-06], ['(cetype->is_abstract())', 3.4019391052900155e-06], ['cetype->make_non_abstract_type();', 3.4019391052900155e-06], ['cetype;', 3.4019391052900155e-06], ['Const_expression::check_for_init_loop()', 3.4019391052900155e-06], ['find_named_object(this->constant_);', 3.4019391052900155e-06], ['&find_named_object);', 3.4019391052900155e-06], ['(find_named_object.found())', 3.4019391052900155e-06], ['Const_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['this->check_for_init_loop();', 3.4019391052900155e-06], ['this->type_->is_numeric_type())', 3.4019391052900155e-06], ['(this->constant_->const_value()->expr()->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['Const_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->type_->is_error()))', 3.4019391052900155e-06], ['this->type_->is_numeric_type()', 3.4019391052900155e-06], ['(this->constant_->const_value()->type()', 3.4019391052900155e-06], ['this->constant_->const_value()->type()->is_abstract()))', 3.4019391052900155e-06], ['(expr->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['nc.set_type(this->type_,', 3.4019391052900155e-06], ['nc.expression(this->location());', 3.4019391052900155e-06], ['Expression::make_cast(this->type_,', 3.4019391052900155e-06], ['expr->get_backend(context);', 3.4019391052900155e-06], ['Const_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['this->constant_->name();', 3.4019391052900155e-06], ['Expression::make_const_reference(Named_object*', 3.4019391052900155e-06], ['Const_expression(constant,', 3.4019391052900155e-06], ['Find_named_object::expression(Expression**', 3.4019391052900155e-06], ['Expression::EXPRESSION_CONST_REFERENCE:', 3.4019391052900155e-06], ['Const_expression*', 3.4019391052900155e-06], ['static_cast<Const_expression*>(*pexpr);', 3.4019391052900155e-06], ['(ce->named_object()', 3.4019391052900155e-06], ['explicitly,', 3.4019391052900155e-06], ['initializers.', 3.4019391052900155e-06], ['ce->check_for_init_loop();', 3.4019391052900155e-06], ['((*pexpr)->var_expression()->named_object()', 3.4019391052900155e-06], ['((*pexpr)->func_expression()->named_object()', 3.4019391052900155e-06], ['Nil_expression', 3.4019391052900155e-06], ['Nil_expression(Location', 3.4019391052900155e-06], ['Expression(EXPRESSION_NIL,', 3.4019391052900155e-06], ['Type::make_nil_type();', 3.4019391052900155e-06], ['context->backend()->nil_pointer_expression();', 3.4019391052900155e-06], ['efb->write_c_string("$nil");', 3.4019391052900155e-06], ['"nil";', 3.4019391052900155e-06], ['Nil_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['imp->require_c_string("nil");', 3.4019391052900155e-06], ['Expression::make_nil(Location', 3.4019391052900155e-06], ['Nil_expression(location);', 3.4019391052900155e-06], ['marker.', 3.4019391052900155e-06], ['Const_expression::do_lower,', 3.4019391052900155e-06], ['have.', 3.4019391052900155e-06], ['Iota_expression(Location', 3.4019391052900155e-06], ['Parser_expression(EXPRESSION_IOTA,', 3.4019391052900155e-06], ['"iota";', 3.4019391052900155e-06], ['Expression::make_iota()', 3.4019391052900155e-06], ['iota_expression(Linemap::unknown_location());', 3.4019391052900155e-06], ['&iota_expression;', 3.4019391052900155e-06], ['Type_conversion_expression.', 3.4019391052900155e-06], ['Type_conversion_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Type_conversion_expression::do_lower(Gogo*,', 3.4019391052900155e-06], ['(val->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['According', 3.4019391052900155e-06], ['(http://golang.org/ref/spec#Conversions_to_and_from_a_string_type):', 3.4019391052900155e-06], ['"outside', 3.4019391052900155e-06], ['\'\\uFFFD\'."', 3.4019391052900155e-06], ['(val->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['nc.is_int())', 3.4019391052900155e-06], ['(!nc.set_type(Type::lookup_integer_type("int"),', 3.4019391052900155e-06], ['Numeric_constant::NC_UL_NEGATIVE)', 3.4019391052900155e-06], ['Expression::make_string("\\ufffd",', 3.4019391052900155e-06], ['is_byte', 3.4019391052900155e-06], ['element_type->integer_type()->is_byte());', 3.4019391052900155e-06], ['is_rune', 3.4019391052900155e-06], ['element_type->integer_type()->is_rune());', 3.4019391052900155e-06], ['(is_byte', 3.4019391052900155e-06], ['is_rune)', 3.4019391052900155e-06], ['(val->string_constant_value(&s))', 3.4019391052900155e-06], ['(is_byte)', 3.4019391052900155e-06], ['s.data()', 3.4019391052900155e-06], ['Lex::fetch_char(p,', 3.4019391052900155e-06], ['encoding");', 3.4019391052900155e-06], ['Expression::make_slice_composite_literal(type,', 3.4019391052900155e-06], ['Type_conversion_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['(this->type()->is_error_type()', 3.4019391052900155e-06], ['this->expr_->is_error_expression())', 3.4019391052900155e-06], ['(((this->type()->is_string_type()', 3.4019391052900155e-06], ['this->expr_->type()->is_slice_type())', 3.4019391052900155e-06], ['this->expr_->type()->interface_type()', 3.4019391052900155e-06], ['Type_conversion_expression::do_is_constant()', 3.4019391052900155e-06], ['(!this->expr_->is_constant())', 3.4019391052900155e-06], ['[]byte(nil).', 3.4019391052900155e-06], ['!type->is_boolean_type()', 3.4019391052900155e-06], ['Type_conversion_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['Type_conversion_expression::do_numeric_constant_value(', 3.4019391052900155e-06], ['(!this->type_->is_numeric_type())', 3.4019391052900155e-06], ['(!this->expr_->numeric_constant_value(nc))', 3.4019391052900155e-06], ['nc->set_type(this->type_,', 3.4019391052900155e-06], ['Type_conversion_expression::do_string_constant_value(std::string*', 3.4019391052900155e-06], ['(this->type_->is_string_type()', 3.4019391052900155e-06], ['this->expr_->type()->integer_type()', 3.4019391052900155e-06], ['(this->expr_->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['(nc.to_unsigned_long(&ival)', 3.4019391052900155e-06], ['val->clear();', 3.4019391052900155e-06], ['Lex::append_char(ival,', 3.4019391052900155e-06], ['[]int', 3.4019391052900155e-06], ['Type_conversion_expression::do_determine_type(const', 3.4019391052900155e-06], ['subcontext(this->type_,', 3.4019391052900155e-06], ['convertible.', 3.4019391052900155e-06], ['Type_conversion_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['expr_type->is_error())', 3.4019391052900155e-06], ['Type_conversion_expression::do_copy()', 3.4019391052900155e-06], ['Type_conversion_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['Type_conversion_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['intval;', 3.4019391052900155e-06], ['(this->expr_->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['nc.to_int(&intval)', 3.4019391052900155e-06], ['mpz_fits_ushort_p(intval))', 3.4019391052900155e-06], ['Lex::append_char(mpz_get_ui(intval),', 3.4019391052900155e-06], ['mpz_clear(intval);', 3.4019391052900155e-06], ['se', 3.4019391052900155e-06], ['Expression::make_string(s,', 3.4019391052900155e-06], ['se->get_backend(context);', 3.4019391052900155e-06], ['i2s_expr', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::INTSTRING,', 3.4019391052900155e-06], ['i2s_expr,', 3.4019391052900155e-06], ['expr_type->array_type();', 3.4019391052900155e-06], ['a->element_type()->forwarded();', 3.4019391052900155e-06], ['Runtime::SLICEBYTETOSTRING;', 3.4019391052900155e-06], ['Runtime::SLICERUNETOSTRING;', 3.4019391052900155e-06], ['this->expr_)->get_backend(context);', 3.4019391052900155e-06], ['Runtime::STRINGTOSLICEBYTE;', 3.4019391052900155e-06], ['Runtime::STRINGTOSLICERUNE;', 3.4019391052900155e-06], ['go_assert(Type::are_convertible(type,', 3.4019391052900155e-06], ['((type->is_unsafe_pointer_type()', 3.4019391052900155e-06], ['(expr_type->points_to()', 3.4019391052900155e-06], ['expr_type->integer_type()))', 3.4019391052900155e-06], ['(expr_type->is_unsafe_pointer_type()', 3.4019391052900155e-06], ['Cost', 3.4019391052900155e-06], ['Type_conversion_expression::do_inlining_cost()', 3.4019391052900155e-06], ['Type_conversion_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['efb->type_context();', 3.4019391052900155e-06], ['efb->set_type_context(this->type_);', 3.4019391052900155e-06], ['efb->set_type_context(old_context);', 3.4019391052900155e-06], ['Type_conversion_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['imp->require_c_string("$convert(");', 3.4019391052900155e-06], ['Type_conversion_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_cast(Type*', 3.4019391052900155e-06], ['val->is_error_expression())', 3.4019391052900155e-06], ['Type_conversion_expression(type,', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression.', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression::do_copy()', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['(t->is_error_type()', 3.4019391052900155e-06], ['et->is_error_type())', 3.4019391052900155e-06], ['go_assert(et->array_type()', 3.4019391052900155e-06], ['t->is_slice_type()', 3.4019391052900155e-06], ['et->is_slice_type());', 3.4019391052900155e-06], ['(t->struct_type()', 3.4019391052900155e-06], ['et->named_type()', 3.4019391052900155e-06], ['!Type::are_convertible(t,', 3.4019391052900155e-06], ['go_assert(et->struct_type()', 3.4019391052900155e-06], ['Type::are_convertible(t,', 3.4019391052900155e-06], ['go_assert(et->map_type()', 3.4019391052900155e-06], ['go_assert(et->channel_type()', 3.4019391052900155e-06], ['(et->is_unsafe_pointer_type())', 3.4019391052900155e-06], ['go_assert(t->points_to()', 3.4019391052900155e-06], ['t->integer_type()', 3.4019391052900155e-06], ['Type::lookup_integer_type("uintptr")->real_type()));', 3.4019391052900155e-06], ['(t->interface_type()', 3.4019391052900155e-06], ['empty_iface', 3.4019391052900155e-06], ['t->interface_type()->is_empty();', 3.4019391052900155e-06], ['go_assert(et->interface_type()', 3.4019391052900155e-06], ['et->interface_type()->is_empty()', 3.4019391052900155e-06], ['empty_iface);', 3.4019391052900155e-06], ['go_assert(et->is_boolean_type()', 3.4019391052900155e-06], ['et->points_to()', 3.4019391052900155e-06], ['(t->function_type()', 3.4019391052900155e-06], ['t->get_backend(gogo);', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(Type*', 3.4019391052900155e-06], ['Unsafe_type_conversion_expression(type,', 3.4019391052900155e-06], ['Unary_expression.', 3.4019391052900155e-06], ['address_taken', 3.4019391052900155e-06], ['Unary_expression::check_operand_address_taken(Gogo*)', 3.4019391052900155e-06], ['set_does_not_escape,', 3.4019391052900155e-06], ['(this->escapes_)', 3.4019391052900155e-06], ['int(Node::ESCAPE_NONE))', 3.4019391052900155e-06], ['this->expr_->address_taken(this->escapes_);', 3.4019391052900155e-06], ['Unary_expression::do_lower(Gogo*,', 3.4019391052900155e-06], ['expr->is_type_expression())', 3.4019391052900155e-06], ['Expression::make_type(Type::make_pointer_type(expr->type()),', 3.4019391052900155e-06], ['*(*T)(unsafe.Pointer)(&x)', 3.4019391052900155e-06], ['here?', 3.4019391052900155e-06], ['math/unsafe.go', 3.4019391052900155e-06], ['casing.', 3.4019391052900155e-06], ['EXPRESSION_CONVERSION)', 3.4019391052900155e-06], ['te', 3.4019391052900155e-06], ['static_cast<Type_conversion_expression*>(e);', 3.4019391052900155e-06], ['te->expr();', 3.4019391052900155e-06], ['static_cast<Unary_expression*>(e);', 3.4019391052900155e-06], ['(ue->op_', 3.4019391052900155e-06], ['(!ue->expr_->is_addressable()', 3.4019391052900155e-06], ['!ue->create_temp_)', 3.4019391052900155e-06], ['go_error_at(ue->location(),', 3.4019391052900155e-06], ['ue->expr_;', 3.4019391052900155e-06], ['ue->set_does_not_escape();', 3.4019391052900155e-06], ['Catching', 3.4019391052900155e-06], ['TYPE_VOID', 3.4019391052900155e-06], ['places.', 3.4019391052900155e-06], ['expr->type()->is_unsafe_pointer_type())', 3.4019391052900155e-06], ['%<unsafe.Pointer%>");', 3.4019391052900155e-06], ['Unary_expression::do_type', 3.4019391052900155e-06], ['disappear', 3.4019391052900155e-06], ['OPERATOR_MINUS', 3.4019391052900155e-06], ['OPERATOR_XOR)', 3.4019391052900155e-06], ['(expr->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['(Unary_expression::eval_constant(op,', 3.4019391052900155e-06], ['&result,', 3.4019391052900155e-06], ['result.expression(loc);', 3.4019391052900155e-06], ['Unary_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['this->create_temp_', 3.4019391052900155e-06], ['(this->create_temp_', 3.4019391052900155e-06], ['Unary_expression::do_is_constant()', 3.4019391052900155e-06], ['this->expr_->var_expression();', 3.4019391052900155e-06], ['this->expr_->is_constant();', 3.4019391052900155e-06], ['Unary_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['Unary_expression::base_is_static_initializer(this->expr_);', 3.4019391052900155e-06], ['this->expr_->is_static_initializer();', 3.4019391052900155e-06], ['Unary_expression::base_is_static_initializer(Expression*', 3.4019391052900155e-06], ['fre', 3.4019391052900155e-06], ['expr->field_reference_expression();', 3.4019391052900155e-06], ['(fre', 3.4019391052900155e-06], ['Unary_expression::base_is_static_initializer(fre->expr());', 3.4019391052900155e-06], ['aind', 3.4019391052900155e-06], ['expr->array_index_expression();', 3.4019391052900155e-06], ['(aind', 3.4019391052900155e-06], ['(aind->end()', 3.4019391052900155e-06], ['aind->start()->is_constant()', 3.4019391052900155e-06], ['Unary_expression::base_is_static_initializer(aind->array()));', 3.4019391052900155e-06], ['expr->var_expression();', 3.4019391052900155e-06], ['(expr->is_composite_literal()', 3.4019391052900155e-06], ['expr->is_static_initializer())', 3.4019391052900155e-06], ['(expr->string_expression()', 3.4019391052900155e-06], ['(greater', 3.4019391052900155e-06], ['threshold),', 3.4019391052900155e-06], ['taken,', 3.4019391052900155e-06], ['Unary_expression::Nil_check_classification', 3.4019391052900155e-06], ['Unary_expression::requires_nil_check(Gogo*', 3.4019391052900155e-06], ['go_assert(this->op_', 3.4019391052900155e-06], ['OPERATOR_MULT);', 3.4019391052900155e-06], ['(!ptype->is_void_type())', 3.4019391052900155e-06], ['ptype->backend_type_size(gogo,', 3.4019391052900155e-06], ['&type_size);', 3.4019391052900155e-06], ['NIL_CHECK_ERROR_ENCOUNTERED;', 3.4019391052900155e-06], ['size_cutoff', 3.4019391052900155e-06], ['gogo->nil_check_size_threshold();', 3.4019391052900155e-06], ['(size_cutoff', 3.4019391052900155e-06], ['(type_size', 3.4019391052900155e-06], ['size_cutoff))', 3.4019391052900155e-06], ['this->issue_nil_check_;', 3.4019391052900155e-06], ['UNC,', 3.4019391052900155e-06], ['*ISSUED_ERROR.', 3.4019391052900155e-06], ['Unary_expression::eval_constant(Operator', 3.4019391052900155e-06], ['unc,', 3.4019391052900155e-06], ['*nc', 3.4019391052900155e-06], ['*unc;', 3.4019391052900155e-06], ['(unc->is_int()', 3.4019391052900155e-06], ['unc->is_rune())', 3.4019391052900155e-06], ['(unc->is_float())', 3.4019391052900155e-06], ['unc->get_float(&uval);', 3.4019391052900155e-06], ['mpfr_neg(val,', 3.4019391052900155e-06], ['nc->set_float(unc->type(),', 3.4019391052900155e-06], ['mpfr_clear(uval);', 3.4019391052900155e-06], ['(unc->is_complex())', 3.4019391052900155e-06], ['unc->get_complex(&uval);', 3.4019391052900155e-06], ['mpc_neg(val,', 3.4019391052900155e-06], ['nc->set_complex(unc->type(),', 3.4019391052900155e-06], ['mpc_clear(uval);', 3.4019391052900155e-06], ['(!unc->is_int()', 3.4019391052900155e-06], ['!unc->is_rune())', 3.4019391052900155e-06], ['unc->get_rune(&uval);', 3.4019391052900155e-06], ['unc->get_int(&uval);', 3.4019391052900155e-06], ['mpz_neg(val,', 3.4019391052900155e-06], ['mpz_cmp_si(uval,', 3.4019391052900155e-06], ['unc->type();', 3.4019391052900155e-06], ['(utype->integer_type()', 3.4019391052900155e-06], ['utype->integer_type()->is_abstract())', 3.4019391052900155e-06], ['mpz_com(val,', 3.4019391052900155e-06], ['UVAL.', 3.4019391052900155e-06], ['((mpz_sizeinbase(uval,', 3.4019391052900155e-06], ['HOST_WIDE_INT*', 3.4019391052900155e-06], ['phwi', 3.4019391052900155e-06], ['HOST_WIDE_INT[count];', 3.4019391052900155e-06], ['memset(phwi,', 3.4019391052900155e-06], ['sizeof(HOST_WIDE_INT));', 3.4019391052900155e-06], ['utype->integer_type()->bits();', 3.4019391052900155e-06], ['mpz_sgn(uval)', 3.4019391052900155e-06], ['mpz_add(uval,', 3.4019391052900155e-06], ['ecount;', 3.4019391052900155e-06], ['mpz_export(phwi,', 3.4019391052900155e-06], ['&ecount,', 3.4019391052900155e-06], ['go_assert(ecount', 3.4019391052900155e-06], ['Trim', 3.4019391052900155e-06], ['((obits', 3.4019391052900155e-06], ['go_assert(ocount', 3.4019391052900155e-06], ['ocount;', 3.4019391052900155e-06], ['phwi[i]', 3.4019391052900155e-06], ['~phwi[i];', 3.4019391052900155e-06], ['clearbits', 3.4019391052900155e-06], ['obits;', 3.4019391052900155e-06], ['(clearbits', 3.4019391052900155e-06], ['phwi[ocount', 3.4019391052900155e-06], ['(((unsigned', 3.4019391052900155e-06], ['(HOST_WIDE_INT)', 3.4019391052900155e-06], ['clearbits);', 3.4019391052900155e-06], ['mpz_import(val,', 3.4019391052900155e-06], ['ocount,', 3.4019391052900155e-06], ['phwi);', 3.4019391052900155e-06], ['mpz_tstbit(val,', 3.4019391052900155e-06], ['phwi;', 3.4019391052900155e-06], ['mpz_clear(uval);', 3.4019391052900155e-06], ['(!nc->set_type(unc->type(),', 3.4019391052900155e-06], ['Unary_expression::do_numeric_constant_value(Numeric_constant*', 3.4019391052900155e-06], ['unc;', 3.4019391052900155e-06], ['(!this->expr_->numeric_constant_value(&unc))', 3.4019391052900155e-06], ['Unary_expression::eval_constant(this->op_,', 3.4019391052900155e-06], ['&unc,', 3.4019391052900155e-06], ['Unary_expression::do_type()', 3.4019391052900155e-06], ['subtype->points_to();', 3.4019391052900155e-06], ['Unary_expression::do_determine_type(const', 3.4019391052900155e-06], ['something.', 3.4019391052900155e-06], ['context->type->points_to());', 3.4019391052900155e-06], ['Type::make_pointer_type(context->type));', 3.4019391052900155e-06], ['Unary_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!type->is_boolean_type())', 3.4019391052900155e-06], ['(!this->expr_->is_addressable())', 3.4019391052900155e-06], ['this->expr_->issue_nil_check();', 3.4019391052900155e-06], ['(type->points_to()->is_error())', 3.4019391052900155e-06], ['Unary_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['bvar_expr', 3.4019391052900155e-06], ['bval', 3.4019391052900155e-06], ['sut->expression()->get_backend(context);', 3.4019391052900155e-06], ['bassign', 3.4019391052900155e-06], ['bvar_expr,', 3.4019391052900155e-06], ['bval,', 3.4019391052900155e-06], ['bvar_addr', 3.4019391052900155e-06], ['gogo->backend()->address_expression(bvar_expr,', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(bassign,', 3.4019391052900155e-06], ['bvar_addr,', 3.4019391052900155e-06], ['this->expr_->type()->get_backend(gogo);', 3.4019391052900155e-06], ['go_assert(!this->expr_->is_composite_literal()', 3.4019391052900155e-06], ['this->expr_->is_static_initializer());', 3.4019391052900155e-06], ['(this->expr_->classification()', 3.4019391052900155e-06], ['static_cast<Unary_expression*>(this->expr_);', 3.4019391052900155e-06], ['go_assert(ue->op()', 3.4019391052900155e-06], ['OPERATOR_AND);', 3.4019391052900155e-06], ['(this->is_gc_root_', 3.4019391052900155e-06], ['this->is_slice_init_)', 3.4019391052900155e-06], ['(this->is_gc_root_)', 3.4019391052900155e-06], ['mutable,', 3.4019391052900155e-06], ['gogo->gc_root_name();', 3.4019391052900155e-06], ['gogo->initializer_name();', 3.4019391052900155e-06], ['this->expr_->type()->array_type();', 3.4019391052900155e-06], ['go_assert(at', 3.4019391052900155e-06], ['read-only,', 3.4019391052900155e-06], ['(context->function()', 3.4019391052900155e-06], ['context->is_const());', 3.4019391052900155e-06], ['gogo->backend()->implicit_variable(var_name,', 3.4019391052900155e-06], ['gogo->backend()->implicit_variable_set_init(implicit,', 3.4019391052900155e-06], ['(this->is_slice_init_', 3.4019391052900155e-06], ['!copy_to_heap', 3.4019391052900155e-06], ['this->expr_->type()->has_pointer())', 3.4019391052900155e-06], ['gogo->backend()->address_expression(root,', 3.4019391052900155e-06], ['gogo->add_gc_root(Expression::make_backend(root,', 3.4019391052900155e-06], ['((this->expr_->is_composite_literal()', 3.4019391052900155e-06], ['this->expr_->string_expression()', 3.4019391052900155e-06], ['this->expr_->is_static_initializer())', 3.4019391052900155e-06], ['var_name(gogo->initializer_name());', 3.4019391052900155e-06], ['gogo->backend()->immutable_struct(var_name,', 3.4019391052900155e-06], ['gogo->backend()->immutable_struct_set_init(decl,', 3.4019391052900155e-06], ['gogo->backend()->var_expression(decl,', 3.4019391052900155e-06], ['go_assert(!this->create_temp_', 3.4019391052900155e-06], ['this->expr_->is_variable());', 3.4019391052900155e-06], ['gogo->backend()->address_expression(bexpr,', 3.4019391052900155e-06], ['ptype->get_backend(gogo);', 3.4019391052900155e-06], ['nil-checking', 3.4019391052900155e-06], ['tbexpr', 3.4019391052900155e-06], ['Expression::make_nil(loc)->get_backend(context);', 3.4019391052900155e-06], ['tbexpr,', 3.4019391052900155e-06], ['ubexpr,', 3.4019391052900155e-06], ['gogo->backend()->indirect_expression(pbtype,', 3.4019391052900155e-06], ['Unary_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['efb->write_c_string("+");', 3.4019391052900155e-06], ['efb->write_c_string("-");', 3.4019391052900155e-06], ['efb->write_c_string("!");', 3.4019391052900155e-06], ['efb->write_c_string("^");', 3.4019391052900155e-06], ['efb->write_c_string("&");', 3.4019391052900155e-06], ['efb->write_c_string("*");', 3.4019391052900155e-06], ['Unary_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['(imp->get_char())', 3.4019391052900155e-06], ["'+':", 3.4019391052900155e-06], ["'!':", 3.4019391052900155e-06], ['OPERATOR_NOT;', 3.4019391052900155e-06], ["'^':", 3.4019391052900155e-06], ["'&':", 3.4019391052900155e-06], ["'*':", 3.4019391052900155e-06], ['Expression::make_unary(op,', 3.4019391052900155e-06], ['Unary_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_unary(Operator', 3.4019391052900155e-06], ['Unary_expression(op,', 3.4019391052900155e-06], ['Expression::make_dereference(Expression*', 3.4019391052900155e-06], ['Nil_check_classification', 3.4019391052900155e-06], ['docheck,', 3.4019391052900155e-06], ['deref->unary_expression()->set_requires_nil_check(true);', 3.4019391052900155e-06], ['deref->unary_expression()->set_requires_nil_check(false);', 3.4019391052900155e-06], ['deref;', 3.4019391052900155e-06], ['Expression::deref()', 3.4019391052900155e-06], ['static_cast<Unary_expression*>(this);', 3.4019391052900155e-06], ['(ue->op()', 3.4019391052900155e-06], ['ue->operand();', 3.4019391052900155e-06], ['Binary_expression.', 3.4019391052900155e-06], ['Binary_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Expression::traverse(&this->right_,', 3.4019391052900155e-06], ['Binary_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['(!this->left_->is_static_initializer()', 3.4019391052900155e-06], ['!this->right_->is_static_initializer())', 3.4019391052900155e-06], ['Addresses', 3.4019391052900155e-06], ['arbitray', 3.4019391052900155e-06], ['lu', 3.4019391052900155e-06], ['this->left_->unary_expression();', 3.4019391052900155e-06], ['ru', 3.4019391052900155e-06], ['this->right_->unary_expression();', 3.4019391052900155e-06], ['(lu', 3.4019391052900155e-06], ['lu->op()', 3.4019391052900155e-06], ['LEFT_TYPE', 3.4019391052900155e-06], ['RIGHT_TYPE.', 3.4019391052900155e-06], ['abstract.', 3.4019391052900155e-06], ['Binary_expression::operation_type(Operator', 3.4019391052900155e-06], ['(left_type', 3.4019391052900155e-06], ['!left_type->is_abstract()', 3.4019391052900155e-06], ['!right_type->is_abstract()', 3.4019391052900155e-06], ['left_type->base()', 3.4019391052900155e-06], ['right_type->base()', 3.4019391052900155e-06], ['error--let', 3.4019391052900155e-06], ['(!left_type->is_abstract()', 3.4019391052900155e-06], ['left_type->named_type()', 3.4019391052900155e-06], ['right_type->named_type()', 3.4019391052900155e-06], ['(!left_type->is_abstract())', 3.4019391052900155e-06], ['(!right_type->is_abstract())', 3.4019391052900155e-06], ['(left_type->complex_type()', 3.4019391052900155e-06], ['(right_type->complex_type()', 3.4019391052900155e-06], ['(right_type->float_type()', 3.4019391052900155e-06], ['left_type->integer_type()->is_rune())', 3.4019391052900155e-06], ['right_type->integer_type()->is_rune())', 3.4019391052900155e-06], ['Binary_expression::cmp_to_bool(Operator', 3.4019391052900155e-06], ['OP.', 3.4019391052900155e-06], ['Binary_expression::compare_constant(Operator', 3.4019391052900155e-06], ['cmp;', 3.4019391052900155e-06], ['Binary_expression::compare_complex(left_nc,', 3.4019391052900155e-06], ['Binary_expression::compare_float(left_nc,', 3.4019391052900155e-06], ['Binary_expression::compare_integer(left_nc,', 3.4019391052900155e-06], ['Binary_expression::compare_integer(const', 3.4019391052900155e-06], ['mpz_cmp(left_val,', 3.4019391052900155e-06], ['Binary_expression::compare_float(const', 3.4019391052900155e-06], ['mpfr_prec_round(left_val,', 3.4019391052900155e-06], ['mpfr_prec_round(right_val,', 3.4019391052900155e-06], ['mpfr_cmp(left_val,', 3.4019391052900155e-06], ['Binary_expression::compare_complex(const', 3.4019391052900155e-06], ['type->complex_type()->bits();', 3.4019391052900155e-06], ['mpfr_prec_round(mpc_realref(left_val),', 3.4019391052900155e-06], ['mpfr_prec_round(mpc_imagref(left_val),', 3.4019391052900155e-06], ['mpfr_prec_round(mpc_realref(right_val),', 3.4019391052900155e-06], ['mpfr_prec_round(mpc_imagref(right_val),', 3.4019391052900155e-06], ['mpc_cmp(left_val,', 3.4019391052900155e-06], ['right_val)', 3.4019391052900155e-06], ['appropriate,', 3.4019391052900155e-06], ['*ISSUED_ERROR', 3.4019391052900155e-06], ['Binary_expression::eval_constant(Operator', 3.4019391052900155e-06], ['numeric.', 3.4019391052900155e-06], ['is_shift', 3.4019391052900155e-06], ['(!is_shift', 3.4019391052900155e-06], ['(is_shift', 3.4019391052900155e-06], ['((left_type->integer_type()', 3.4019391052900155e-06], ['!left_type->is_abstract())', 3.4019391052900155e-06], ['!right_type->is_abstract())))', 3.4019391052900155e-06], ['Binary_expression::eval_complex(op,', 3.4019391052900155e-06], ['Binary_expression::eval_float(op,', 3.4019391052900155e-06], ['Binary_expression::eval_integer(op,', 3.4019391052900155e-06], ['nc->set_type(type,', 3.4019391052900155e-06], ['(!r)', 3.4019391052900155e-06], ['Binary_expression::eval_integer(Operator', 3.4019391052900155e-06], ['mpz_add(val,', 3.4019391052900155e-06], ['mpz_ior(val,', 3.4019391052900155e-06], ['mpz_xor(val,', 3.4019391052900155e-06], ['mpz_mul(val,', 3.4019391052900155e-06], ['mpz_tdiv_q(val,', 3.4019391052900155e-06], ['mpz_tdiv_r(val,', 3.4019391052900155e-06], ['mpz_mul_2exp(val,', 3.4019391052900155e-06], ['(mpz_cmp_ui(left_val,', 3.4019391052900155e-06], ['mpz_tdiv_q_2exp(val,', 3.4019391052900155e-06], ['mpz_fdiv_q_2exp(val,', 3.4019391052900155e-06], ['tval;', 3.4019391052900155e-06], ['mpz_init(tval);', 3.4019391052900155e-06], ['mpz_com(tval,', 3.4019391052900155e-06], ['tval);', 3.4019391052900155e-06], ['mpz_clear(tval);', 3.4019391052900155e-06], ['(left_nc->is_rune()', 3.4019391052900155e-06], ['right_nc->is_rune()))', 3.4019391052900155e-06], ['Binary_expression::eval_float(Operator', 3.4019391052900155e-06], ['mpfr_add(val,', 3.4019391052900155e-06], ['mpfr_sub(val,', 3.4019391052900155e-06], ['mpfr_mul(val,', 3.4019391052900155e-06], ['(!mpfr_zero_p(right_val))', 3.4019391052900155e-06], ['mpfr_div(val,', 3.4019391052900155e-06], ['nc->set_float(NULL,', 3.4019391052900155e-06], ['Binary_expression::eval_complex(Operator', 3.4019391052900155e-06], ['mpc_add(val,', 3.4019391052900155e-06], ['mpc_sub(val,', 3.4019391052900155e-06], ['mpc_mul(val,', 3.4019391052900155e-06], ['(mpc_cmp_si(right_val,', 3.4019391052900155e-06], ['mpc_div(val,', 3.4019391052900155e-06], ['nc->set_complex(NULL,', 3.4019391052900155e-06], ["Go's", 3.4019391052900155e-06], ['unlimited', 3.4019391052900155e-06], ['Binary_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['(left->numeric_constant_value(&left_nc)', 3.4019391052900155e-06], ['right->numeric_constant_value(&right_nc))', 3.4019391052900155e-06], ['(!Binary_expression::compare_constant(op,', 3.4019391052900155e-06], ['&result))', 3.4019391052900155e-06], ['Expression::make_cast(Type::make_boolean_type(),', 3.4019391052900155e-06], ['Expression::make_boolean(result,', 3.4019391052900155e-06], ['(!Binary_expression::eval_constant(op,', 3.4019391052900155e-06], ['(left->type()->is_string_type()', 3.4019391052900155e-06], ['right->type()->is_string_type())', 3.4019391052900155e-06], ['left_string;', 3.4019391052900155e-06], ['right_string;', 3.4019391052900155e-06], ['(left->string_constant_value(&left_string)', 3.4019391052900155e-06], ['right->string_constant_value(&right_string))', 3.4019391052900155e-06], ['Expression::make_string(left_string', 3.4019391052900155e-06], ['right_string,', 3.4019391052900155e-06], ['left_string.compare(right_string);', 3.4019391052900155e-06], ['Expression::make_boolean(r,', 3.4019391052900155e-06], ['(left->type()->struct_type()', 3.4019391052900155e-06], ['right->type()->struct_type()', 3.4019391052900155e-06], ['this->lower_struct_comparison(gogo,', 3.4019391052900155e-06], ['(left->type()->array_type()', 3.4019391052900155e-06], ['!left->type()->is_slice_type()', 3.4019391052900155e-06], ['right->type()->array_type()', 3.4019391052900155e-06], ['!right->type()->is_slice_type())', 3.4019391052900155e-06], ['this->lower_array_comparison(gogo,', 3.4019391052900155e-06], ['((left->type()->interface_type()', 3.4019391052900155e-06], ['(left->type()->interface_type()', 3.4019391052900155e-06], ['this->lower_interface_value_comparison(gogo,', 3.4019391052900155e-06], ['String_concat_expression,', 3.4019391052900155e-06], ['additions.', 3.4019391052900155e-06], ['(this->left_->type()->is_string_type()', 3.4019391052900155e-06], ['exprs;', 3.4019391052900155e-06], ['left_sce', 3.4019391052900155e-06], ['this->left_->string_concat_expression();', 3.4019391052900155e-06], ['(left_sce', 3.4019391052900155e-06], ['left_sce->exprs();', 3.4019391052900155e-06], ['exprs->push_back(this->left_);', 3.4019391052900155e-06], ['right_sce', 3.4019391052900155e-06], ['this->right_->string_concat_expression();', 3.4019391052900155e-06], ['(right_sce', 3.4019391052900155e-06], ['exprs->append(right_sce->exprs());', 3.4019391052900155e-06], ['exprs->push_back(this->right_);', 3.4019391052900155e-06], ['Expression::make_string_concat(exprs);', 3.4019391052900155e-06], ['Binary_expression::lower_struct_comparison(Gogo*', 3.4019391052900155e-06], ['this->left_->type()->struct_type();', 3.4019391052900155e-06], ['this->right_->type()->struct_type();', 3.4019391052900155e-06], ['(st2', 3.4019391052900155e-06], ['(st', 3.4019391052900155e-06], ['!Type::are_identical(st,', 3.4019391052900155e-06], ['st2,', 3.4019391052900155e-06], ['(st->compare_is_identity(gogo)', 3.4019391052900155e-06], ['st->total_field_count()', 3.4019391052900155e-06], ['(left->var_expression()', 3.4019391052900155e-06], ['left->temporary_reference_expression()', 3.4019391052900155e-06], ['Statement::make_temporary(left->type(),', 3.4019391052900155e-06], ['inserter->insert(left_temp);', 3.4019391052900155e-06], ['Expression::make_set_and_use_temporary(left_temp,', 3.4019391052900155e-06], ['(right->var_expression()', 3.4019391052900155e-06], ['right->temporary_reference_expression()', 3.4019391052900155e-06], ['Statement::make_temporary(right->type(),', 3.4019391052900155e-06], ['inserter->insert(right_temp);', 3.4019391052900155e-06], ['Expression::make_set_and_use_temporary(right_temp,', 3.4019391052900155e-06], ['field_index', 3.4019391052900155e-06], ['++field_index)', 3.4019391052900155e-06], ['(Gogo::is_sink_name(pf->field_name()))', 3.4019391052900155e-06], ['(field_index', 3.4019391052900155e-06], ['(left_temp', 3.4019391052900155e-06], ['left->copy();', 3.4019391052900155e-06], ['Expression::make_temporary_reference(left_temp,', 3.4019391052900155e-06], ['(right_temp', 3.4019391052900155e-06], ['right->copy();', 3.4019391052900155e-06], ['Expression::make_temporary_reference(right_temp,', 3.4019391052900155e-06], ['f2', 3.4019391052900155e-06], ['Expression::make_field_reference(right,', 3.4019391052900155e-06], ['f1,', 3.4019391052900155e-06], ['f2,', 3.4019391052900155e-06], ['Expression::make_binary(OPERATOR_ANDAND,', 3.4019391052900155e-06], ['Binary_expression::lower_array_comparison(Gogo*', 3.4019391052900155e-06], ['this->left_->type()->array_type();', 3.4019391052900155e-06], ['this->right_->type()->array_type();', 3.4019391052900155e-06], ['(at2', 3.4019391052900155e-06], ['!Type::are_identical(at,', 3.4019391052900155e-06], ['at2,', 3.4019391052900155e-06], ['(at->compare_is_identity(gogo))', 3.4019391052900155e-06], ['at->type_functions(gogo,', 3.4019391052900155e-06], ['this->left_->type()->named_type(),', 3.4019391052900155e-06], ['Expression::make_func_reference(equal_fn,', 3.4019391052900155e-06], ['this->left_));', 3.4019391052900155e-06], ['this->right_));', 3.4019391052900155e-06], ['Expression::make_call(func,', 3.4019391052900155e-06], ['Binary_expression::lower_interface_value_comparison(Gogo*,', 3.4019391052900155e-06], ['ift;', 3.4019391052900155e-06], ['left_type->interface_type();', 3.4019391052900155e-06], ['(!ift->implements_interface(right_type,', 3.4019391052900155e-06], ['right_type->interface_type();', 3.4019391052900155e-06], ['(!ift->implements_interface(left_type,', 3.4019391052900155e-06], ['!this->left_->is_addressable())', 3.4019391052900155e-06], ['Statement::make_temporary(left_type,', 3.4019391052900155e-06], ['(right_type->interface_type()', 3.4019391052900155e-06], ['right_type->points_to()', 3.4019391052900155e-06], ['!this->right_->is_addressable())', 3.4019391052900155e-06], ['Statement::make_temporary(right_type,', 3.4019391052900155e-06], ['Binary_expression::lower_compare_to_memcmp(Gogo*,', 3.4019391052900155e-06], ['this->left_);', 3.4019391052900155e-06], ['Expression::make_type_info(this->left_->type(),', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MEMCMP,', 3.4019391052900155e-06], ['Expression::make_binary(this->op_,', 3.4019391052900155e-06], ['Binary_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['(this->left_->type()->is_error_type()', 3.4019391052900155e-06], ['this->right_->type()->is_error_type()', 3.4019391052900155e-06], ['this->left_->is_error_expression()', 3.4019391052900155e-06], ['this->right_->is_error_expression())', 3.4019391052900155e-06], ['((this->op_', 3.4019391052900155e-06], ['left_type->integer_type()', 3.4019391052900155e-06], ['OPERATOR_MOD);', 3.4019391052900155e-06], ['(is_shift_op', 3.4019391052900155e-06], ['(is_idiv_op', 3.4019391052900155e-06], ['(gogo->check_divide_by_zero()', 3.4019391052900155e-06], ['gogo->check_divide_overflow())))', 3.4019391052900155e-06], ['(!this->left_->is_variable()', 3.4019391052900155e-06], ['!this->left_->is_constant())', 3.4019391052900155e-06], ['(!this->right_->is_variable()', 3.4019391052900155e-06], ['!this->right_->is_constant())', 3.4019391052900155e-06], ['Binary_expression::operand_address(Statement_inserter*', 3.4019391052900155e-06], ['(!expr->is_addressable())', 3.4019391052900155e-06], ['Statement::make_temporary(expr->type(),', 3.4019391052900155e-06], ['static_cast<Unary_expression*>(expr)->set_does_not_escape();', 3.4019391052900155e-06], ['void_type', 3.4019391052900155e-06], ['unsafe_pointer_type', 3.4019391052900155e-06], ['Type::make_pointer_type(void_type);', 3.4019391052900155e-06], ['Expression::make_cast(unsafe_pointer_type,', 3.4019391052900155e-06], ['Binary_expression::do_numeric_constant_value(Numeric_constant*', 3.4019391052900155e-06], ['(!this->left_->numeric_constant_value(&left_nc))', 3.4019391052900155e-06], ['(!this->right_->numeric_constant_value(&right_nc))', 3.4019391052900155e-06], ['Binary_expression::eval_constant(this->op_,', 3.4019391052900155e-06], ['Binary_expression::do_discarding_value()', 3.4019391052900155e-06], ['this->right_->discarding_value();', 3.4019391052900155e-06], ['Binary_expression::do_type()', 3.4019391052900155e-06], ['(!Binary_expression::operation_type(this->op_,', 3.4019391052900155e-06], ['Binary_expression::do_determine_type(const', 3.4019391052900155e-06], ['tleft', 3.4019391052900155e-06], ['tright', 3.4019391052900155e-06], ['non-abstract', 3.4019391052900155e-06], ['check_types', 3.4019391052900155e-06], ['is_constant_expr', 3.4019391052900155e-06], ['(this->left_->is_constant()', 3.4019391052900155e-06], ['this->right_->is_constant());', 3.4019391052900155e-06], ['(is_constant_expr', 3.4019391052900155e-06], ['!is_shift_op)', 3.4019391052900155e-06], ['plays', 3.4019391052900155e-06], ['role', 3.4019391052900155e-06], ['(!tleft->is_abstract())', 3.4019391052900155e-06], ['(!tright->is_abstract())', 3.4019391052900155e-06], ['((tleft->integer_type()', 3.4019391052900155e-06], ['tright->integer_type()', 3.4019391052900155e-06], ['tright->float_type()', 3.4019391052900155e-06], ['tright->complex_type()', 3.4019391052900155e-06], ['(tright->complex_type()', 3.4019391052900155e-06], ['(tright->float_type()', 3.4019391052900155e-06], ['!context->may_be_abstract)', 3.4019391052900155e-06], ['subcontext.type->make_non_abstract_type();', 3.4019391052900155e-06], ['this->left_->determine_type(&subcontext);', 3.4019391052900155e-06], ['unusable', 3.4019391052900155e-06], ['(tleft->is_abstract()', 3.4019391052900155e-06], ['!subcontext.may_be_abstract', 3.4019391052900155e-06], ['subcontext.type->interface_type()', 3.4019391052900155e-06], ['subcontext.type->integer_type()', 3.4019391052900155e-06], ['this->report_error(("invalid', 3.4019391052900155e-06], ['context-determined', 3.4019391052900155e-06], ['shift"));', 3.4019391052900155e-06], ['this->right_->determine_type(&subcontext);', 3.4019391052900155e-06], ['OTYPE', 3.4019391052900155e-06], ['Binary_expression::check_operator_type(Operator', 3.4019391052900155e-06], ['(!type->is_boolean_type()', 3.4019391052900155e-06], ['!otype->is_boolean_type())', 3.4019391052900155e-06], ['(!Type::are_compatible_for_comparison(false,', 3.4019391052900155e-06], ['((!type->is_numeric_type()', 3.4019391052900155e-06], ['(!otype->is_numeric_type()', 3.4019391052900155e-06], ['!otype->is_string_type()))', 3.4019391052900155e-06], ['(!type->is_numeric_type()', 3.4019391052900155e-06], ['!otype->is_numeric_type())', 3.4019391052900155e-06], ['otype->integer_type()', 3.4019391052900155e-06], ['Binary_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(left_type->is_error()', 3.4019391052900155e-06], ['right_type->is_error())', 3.4019391052900155e-06], ['OPERATOR_GE)', 3.4019391052900155e-06], ['right_type->is_nil_type())', 3.4019391052900155e-06], ['nil"));', 3.4019391052900155e-06], ['(!Type::are_assignable(left_type,', 3.4019391052900155e-06], ['!Type::are_assignable(right_type,', 3.4019391052900155e-06], ['this->location())', 3.4019391052900155e-06], ['!Binary_expression::check_operator_type(this->op_,', 3.4019391052900155e-06], ['(!Type::are_compatible_for_binop(left_type,', 3.4019391052900155e-06], ['right_type))', 3.4019391052900155e-06], ['OPERATOR_MOD)', 3.4019391052900155e-06], ['rconst;', 3.4019391052900155e-06], ['this->right_->numeric_constant_value(&rconst)', 3.4019391052900155e-06], ['rconst.to_unsigned_long(&rval)', 3.4019391052900155e-06], ['this->report_error(_("integer', 3.4019391052900155e-06], ['zero"));', 3.4019391052900155e-06], ['operand"));', 3.4019391052900155e-06], ['(right_type->is_string_type())', 3.4019391052900155e-06], ['!right_type->integer_type()->is_unsigned()))', 3.4019391052900155e-06], ['(this->right_->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['this->report_error(_("negative', 3.4019391052900155e-06], ['count"));', 3.4019391052900155e-06], ['rloc', 3.4019391052900155e-06], ['this->right_->location();', 3.4019391052900155e-06], ['rloc);', 3.4019391052900155e-06], ['Binary_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['Expression::comparison(context,', 3.4019391052900155e-06], ['this->op_,', 3.4019391052900155e-06], ['left_type->complex_type()', 3.4019391052900155e-06], ['Expression::make_unary(OPERATOR_XOR,', 3.4019391052900155e-06], ['+,', 3.4019391052900155e-06], ['String_concat_expression', 3.4019391052900155e-06], ['go_assert(!left_type->is_string_type());', 3.4019391052900155e-06], ['provides,', 3.4019391052900155e-06], ['routine.', 3.4019391052900155e-06], ['this->left_->type()->complex_type()', 3.4019391052900155e-06], ['complex_code;', 3.4019391052900155e-06], ['(this->left_->type()->complex_type()->bits())', 3.4019391052900155e-06], ['Runtime::COMPLEX64_DIV;', 3.4019391052900155e-06], ['Runtime::COMPLEX128_DIV;', 3.4019391052900155e-06], ['complex_div', 3.4019391052900155e-06], ['Runtime::make_call(complex_code,', 3.4019391052900155e-06], ['complex_div->get_backend(context);', 3.4019391052900155e-06], ['this->left_->get_backend(context);', 3.4019391052900155e-06], ['this->right_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->binary_expression(this->op_,', 3.4019391052900155e-06], ['mpz_init_set_ui(zero,', 3.4019391052900155e-06], ['0UL);', 3.4019391052900155e-06], ['neg_one;', 3.4019391052900155e-06], ['mpz_init_set_si(neg_one,', 3.4019391052900155e-06], ['left_btype', 3.4019391052900155e-06], ['left_type->get_backend(gogo);', 3.4019391052900155e-06], ['right_btype', 3.4019391052900155e-06], ['right_type->get_backend(gogo);', 3.4019391052900155e-06], ['well-defined.', 3.4019391052900155e-06], ['go_assert(left_type->integer_type()', 3.4019391052900155e-06], ['left_type->integer_type()->bits();', 3.4019391052900155e-06], ['(!this->right_->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['long>(bits))', 3.4019391052900155e-06], ['bitsval;', 3.4019391052900155e-06], ['mpz_init_set_ui(bitsval,', 3.4019391052900155e-06], ['bits);', 3.4019391052900155e-06], ['bits_expr', 3.4019391052900155e-06], ['bitsval);', 3.4019391052900155e-06], ['bits_expr,', 3.4019391052900155e-06], ['!left_type->integer_type()->is_unsigned())', 3.4019391052900155e-06], ['neg_expr', 3.4019391052900155e-06], ['neg_expr,', 3.4019391052900155e-06], ['mpz_clear(bitsval);', 3.4019391052900155e-06], ['(is_idiv_op)', 3.4019391052900155e-06], ['(gogo->check_divide_by_zero())', 3.4019391052900155e-06], ['__go_runtime_error(RUNTIME_ERROR_DIVISION_BY_ZERO)', 3.4019391052900155e-06], ['errcode', 3.4019391052900155e-06], ['RUNTIME_ERROR_DIVISION_BY_ZERO;', 3.4019391052900155e-06], ['gogo->runtime_error(errcode,', 3.4019391052900155e-06], ['(__go_runtime_error(...),', 3.4019391052900155e-06], ['(gogo->check_divide_overflow())', 3.4019391052900155e-06], ['one_expr', 3.4019391052900155e-06], ['one);', 3.4019391052900155e-06], ['(type->integer_type()->is_unsigned())', 3.4019391052900155e-06], ['one_expr,', 3.4019391052900155e-06], ['Computing', 3.4019391052900155e-06], ['-fwrapv.', 3.4019391052900155e-06], ['negate_expr', 3.4019391052900155e-06], ['Expression::make_unary(OPERATOR_MINUS,', 3.4019391052900155e-06], ['negate_expr->get_backend(context);', 3.4019391052900155e-06], ['mpz_clear(zero);', 3.4019391052900155e-06], ['mpz_clear(neg_one);', 3.4019391052900155e-06], ['Binary_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['efb->write_c_string("(");', 3.4019391052900155e-06], ['this->left_->export_expression(efb);', 3.4019391052900155e-06], ['this->right_->export_expression(efb);', 3.4019391052900155e-06], ['Binary_expression::do_import(Import_expression*', 3.4019391052900155e-06], ['OPERATOR_OROR;', 3.4019391052900155e-06], ['OPERATOR_EQEQ;', 3.4019391052900155e-06], ['OPERATOR_NOTEQ;', 3.4019391052900155e-06], ['OPERATOR_LT;', 3.4019391052900155e-06], ['OPERATOR_LE;', 3.4019391052900155e-06], ['OPERATOR_GT;', 3.4019391052900155e-06], ['OPERATOR_GE;', 3.4019391052900155e-06], ['OPERATOR_OR;', 3.4019391052900155e-06], ['OPERATOR_DIV;', 3.4019391052900155e-06], ['OPERATOR_MOD;', 3.4019391052900155e-06], ['OPERATOR_LSHIFT;', 3.4019391052900155e-06], ['OPERATOR_BITCLEAR;', 3.4019391052900155e-06], ['"unrecognized', 3.4019391052900155e-06], ['operator");', 3.4019391052900155e-06], ['Expression::make_binary(op,', 3.4019391052900155e-06], ['Binary_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->right_);', 3.4019391052900155e-06], ['Expression::make_binary(Operator', 3.4019391052900155e-06], ['Binary_expression(op,', 3.4019391052900155e-06], ['Expression::comparison(Translate_context*', 3.4019391052900155e-06], ['right->type();', 3.4019391052900155e-06], ['(left_type->is_string_type()', 3.4019391052900155e-06], ['right_type->is_string_type())', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::EQSTRING,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::CMPSTRING,', 3.4019391052900155e-06], ['zexpr;', 3.4019391052900155e-06], ['((left_type->interface_type()', 3.4019391052900155e-06], ['!right_type->is_nil_type())', 3.4019391052900155e-06], ['!left_type->is_nil_type()', 3.4019391052900155e-06], ['Comparing', 3.4019391052900155e-06], ['(right_type->points_to()', 3.4019391052900155e-06], ['right;', 3.4019391052900155e-06], ['go_assert(right->is_addressable());', 3.4019391052900155e-06], ['Expression::make_type_descriptor(right_type,', 3.4019391052900155e-06], ['Runtime::make_call((left_type->interface_type()->is_empty()', 3.4019391052900155e-06], ['Runtime::EFACEVALEQ', 3.4019391052900155e-06], ['Runtime::IFACEVALEQ),', 3.4019391052900155e-06], ['pointer_arg);', 3.4019391052900155e-06], ['compare_function;', 3.4019391052900155e-06], ['(left_type->interface_type()->is_empty()', 3.4019391052900155e-06], ['right_type->interface_type()->is_empty())', 3.4019391052900155e-06], ['Runtime::EFACEEQ;', 3.4019391052900155e-06], ['(!left_type->interface_type()->is_empty()', 3.4019391052900155e-06], ['!right_type->interface_type()->is_empty())', 3.4019391052900155e-06], ['Runtime::IFACEEQ;', 3.4019391052900155e-06], ['(left_type->interface_type()->is_empty())', 3.4019391052900155e-06], ['go_assert(!left_type->interface_type()->is_empty());', 3.4019391052900155e-06], ['go_assert(right_type->interface_type()->is_empty());', 3.4019391052900155e-06], ['Runtime::IFACEEFACEEQ;', 3.4019391052900155e-06], ['Runtime::make_call(compare_function,', 3.4019391052900155e-06], ['OPERATOR_NOTEQ))', 3.4019391052900155e-06], ['(right_type->is_nil_type())', 3.4019391052900155e-06], ['(left_type->array_type()', 3.4019391052900155e-06], ['left_type->array_type()->length()', 3.4019391052900155e-06], ['left_type->array_type();', 3.4019391052900155e-06], ['is_lvalue', 3.4019391052900155e-06], ['at->get_value_pointer(context->gogo(),', 3.4019391052900155e-06], ['is_lvalue);', 3.4019391052900155e-06], ['left_bexpr', 3.4019391052900155e-06], ['left->get_backend(context);', 3.4019391052900155e-06], ['right_bexpr', 3.4019391052900155e-06], ['right->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->binary_expression(op,', 3.4019391052900155e-06], ['left_bexpr,', 3.4019391052900155e-06], ['right_bexpr,', 3.4019391052900155e-06], ['(result_type', 3.4019391052900155e-06], ['gogo->backend()->convert_expression(result_type->get_backend(gogo),', 3.4019391052900155e-06], ['String_concat_expression.', 3.4019391052900155e-06], ['String_concat_expression::do_is_constant()', 3.4019391052900155e-06], ['(!(*pe)->is_constant())', 3.4019391052900155e-06], ['String_concat_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['(!(*pe)->is_static_initializer())', 3.4019391052900155e-06], ['String_concat_expression::do_type()', 3.4019391052900155e-06], ['(!Binary_expression::operation_type(OPERATOR_PLUS,', 3.4019391052900155e-06], ['(*pe)->type(),', 3.4019391052900155e-06], ['&t1))', 3.4019391052900155e-06], ['String_concat_expression::do_determine_type(const', 3.4019391052900155e-06], ['(!t->is_abstract())', 3.4019391052900155e-06], ['(*pe)->determine_type(&subcontext);', 3.4019391052900155e-06], ['String_concat_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(t->is_error())', 3.4019391052900155e-06], ['(!Type::are_compatible_for_binop(t,', 3.4019391052900155e-06], ['t1))', 3.4019391052900155e-06], ['this->report_error("incompatible', 3.4019391052900155e-06], ['(!Binary_expression::check_operator_type(OPERATOR_PLUS,', 3.4019391052900155e-06], ['String_concat_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['Statement_inserter*)', 3.4019391052900155e-06], ['nil_arg', 3.4019391052900155e-06], ['Expression::make_integer_ul(this->exprs_->size(),', 3.4019391052900155e-06], ['arg_type->set_is_array_incomparable();', 3.4019391052900155e-06], ['Expression::make_array_composite_literal(arg_type,', 3.4019391052900155e-06], ['Runtime::CONCATSTRING2;', 3.4019391052900155e-06], ['Runtime::CONCATSTRING3;', 3.4019391052900155e-06], ['Runtime::CONCATSTRING4;', 3.4019391052900155e-06], ['Runtime::CONCATSTRING5;', 3.4019391052900155e-06], ['Expression::make_slice_composite_literal(arg_type,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::CONCATSTRINGS,', 3.4019391052900155e-06], ['sce);', 3.4019391052900155e-06], ['String_concat_expression::do_dump_expression(', 3.4019391052900155e-06], ['"concat(";', 3.4019391052900155e-06], ['ast_dump_context->dump_expression_list(this->exprs_,', 3.4019391052900155e-06], ['Expression::make_string_concat(Expression_list*', 3.4019391052900155e-06], ['exprs)', 3.4019391052900155e-06], ['String_concat_expression(exprs);', 3.4019391052900155e-06], ['Bound_method_expression.', 3.4019391052900155e-06], ['Bound_method_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Bound_method_expression::do_type()', 3.4019391052900155e-06], ['fntype->copy_without_receiver();', 3.4019391052900155e-06], ['Bound_method_expression::do_determine_type(const', 3.4019391052900155e-06], ['!fntype->is_method())', 3.4019391052900155e-06], ['subcontext(fntype->receiver()->type(),', 3.4019391052900155e-06], ['Bound_method_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!fn->is_function()', 3.4019391052900155e-06], ['!fn->is_function_declaration())', 3.4019391052900155e-06], ['this->report_error(_("object', 3.4019391052900155e-06], ['method"));', 3.4019391052900155e-06], ['fntype->receiver()->type()->deref();', 3.4019391052900155e-06], ['this->expr_->type());', 3.4019391052900155e-06], ['etype->deref();', 3.4019391052900155e-06], ['(!Type::are_identical(rtype,', 3.4019391052900155e-06], ['this->report_error(_("method', 3.4019391052900155e-06], ['Bound_method_expression::Method_value_thunks', 3.4019391052900155e-06], ['Bound_method_expression::method_value_thunks;', 3.4019391052900155e-06], ['METHOD.', 3.4019391052900155e-06], ['Bound_method_expression::create_thunk(Gogo*', 3.4019391052900155e-06], ['val(fn,', 3.4019391052900155e-06], ['std::pair<Method_value_thunks::iterator,', 3.4019391052900155e-06], ['Bound_method_expression::method_value_thunks.insert(val);', 3.4019391052900155e-06], ['fn->location();', 3.4019391052900155e-06], ['orig_fntype;', 3.4019391052900155e-06], ['!orig_fntype->is_method())', 3.4019391052900155e-06], ['orig_fntype->receiver()->type(),', 3.4019391052900155e-06], ['Expression::make_bound_method(arg,', 3.4019391052900155e-06], ['Expression::make_call(bme,', 3.4019391052900155e-06], ['FIELD_INDEXES.', 3.4019391052900155e-06], ['declaring', 3.4019391052900155e-06], ['Field_indexes', 3.4019391052900155e-06], ['expressions.h.', 3.4019391052900155e-06], ['bme_check_nil(const', 3.4019391052900155e-06], ['Method::Field_indexes*', 3.4019391052900155e-06], ['field_indexes,', 3.4019391052900155e-06], ['ref)', 3.4019391052900155e-06], ['(field_indexes', 3.4019391052900155e-06], ['bme_check_nil(field_indexes->next,', 3.4019391052900155e-06], ['(*ref)->type()->deref()->struct_type();', 3.4019391052900155e-06], ['go_assert(stype', 3.4019391052900155e-06], ['field_indexes->field_index', 3.4019391052900155e-06], ['stype->field_count());', 3.4019391052900155e-06], ['((*ref)->type()->struct_type()', 3.4019391052900155e-06], ['go_assert((*ref)->type()->points_to()', 3.4019391052900155e-06], ['*ref,', 3.4019391052900155e-06], ['Expression::make_dereference(*ref,', 3.4019391052900155e-06], ['Expression::NIL_CHECK_DEFAULT,', 3.4019391052900155e-06], ['go_assert((*ref)->type()->struct_type()', 3.4019391052900155e-06], ['stype);', 3.4019391052900155e-06], ['Expression::make_field_reference(*ref,', 3.4019391052900155e-06], ['field_indexes->field_index,', 3.4019391052900155e-06], ['Call_expression::do_lower,', 3.4019391052900155e-06], ['Bound_method_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['Bound_method_expression::create_thunk(gogo,', 3.4019391052900155e-06], ['this->method_,', 3.4019391052900155e-06], ['this->function_);', 3.4019391052900155e-06], ['below,', 3.4019391052900155e-06], ['(!expr->is_variable())', 3.4019391052900155e-06], ['etemp', 3.4019391052900155e-06], ['inserter->insert(etemp);', 3.4019391052900155e-06], ['Expression::make_temporary_reference(etemp,', 3.4019391052900155e-06], ['*fntype;', 3.4019391052900155e-06], ['val->type()->points_to()', 3.4019391052900155e-06], ['Expression::make_dereference(val,', 3.4019391052900155e-06], ['NULL).', 3.4019391052900155e-06], ['this->expr_->type().', 3.4019391052900155e-06], ['not-NULL', 3.4019391052900155e-06], ['val->type(),', 3.4019391052900155e-06], ['ret->heap_expression()->set_allocate_on_stack();', 3.4019391052900155e-06], ['(this->method_->field_indexes()', 3.4019391052900155e-06], ['bme_check_nil(this->method_->field_indexes(),', 3.4019391052900155e-06], ['(this->method_->is_value_method()', 3.4019391052900155e-06], ['nil_check,', 3.4019391052900155e-06], ['pretending', 3.4019391052900155e-06], ['Expression::make_compound(crash,', 3.4019391052900155e-06], ['Expression::make_conditional(nil_check,', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(this->type(),', 3.4019391052900155e-06], ['Bound_method_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['ast_dump_context->dump_type(this->expr_type_);', 3.4019391052900155e-06], ['Expression::make_bound_method(Expression*', 3.4019391052900155e-06], ['Bound_method_expression(expr,', 3.4019391052900155e-06], ['Builtin_call_expression::Builtin_call_expression(Gogo*', 3.4019391052900155e-06], ['code_(BUILTIN_INVALID),', 3.4019391052900155e-06], ['recover_arg_is_set_(false)', 3.4019391052900155e-06], ['fnexp', 3.4019391052900155e-06], ['this->fn()->func_expression();', 3.4019391052900155e-06], ['(fnexp', 3.4019391052900155e-06], ['BUILTIN_INVALID;', 3.4019391052900155e-06], ['name(fnexp->named_object()->name());', 3.4019391052900155e-06], ['"append")', 3.4019391052900155e-06], ['BUILTIN_APPEND;', 3.4019391052900155e-06], ['"cap")', 3.4019391052900155e-06], ['BUILTIN_CAP;', 3.4019391052900155e-06], ['"close")', 3.4019391052900155e-06], ['BUILTIN_CLOSE;', 3.4019391052900155e-06], ['"complex")', 3.4019391052900155e-06], ['BUILTIN_COMPLEX;', 3.4019391052900155e-06], ['"copy")', 3.4019391052900155e-06], ['BUILTIN_COPY;', 3.4019391052900155e-06], ['"delete")', 3.4019391052900155e-06], ['BUILTIN_DELETE;', 3.4019391052900155e-06], ['"imag")', 3.4019391052900155e-06], ['BUILTIN_IMAG;', 3.4019391052900155e-06], ['"len")', 3.4019391052900155e-06], ['BUILTIN_LEN;', 3.4019391052900155e-06], ['"make")', 3.4019391052900155e-06], ['BUILTIN_MAKE;', 3.4019391052900155e-06], ['"new")', 3.4019391052900155e-06], ['BUILTIN_NEW;', 3.4019391052900155e-06], ['"panic")', 3.4019391052900155e-06], ['BUILTIN_PANIC;', 3.4019391052900155e-06], ['"print")', 3.4019391052900155e-06], ['BUILTIN_PRINT;', 3.4019391052900155e-06], ['"println")', 3.4019391052900155e-06], ['"real")', 3.4019391052900155e-06], ['BUILTIN_REAL;', 3.4019391052900155e-06], ['"recover")', 3.4019391052900155e-06], ['"Alignof")', 3.4019391052900155e-06], ['BUILTIN_ALIGNOF;', 3.4019391052900155e-06], ['"Offsetof")', 3.4019391052900155e-06], ['BUILTIN_OFFSETOF;', 3.4019391052900155e-06], ['"Sizeof")', 3.4019391052900155e-06], ['BUILTIN_SIZEOF;', 3.4019391052900155e-06], ['Builtin_call_expression::do_is_recover_call()', 3.4019391052900155e-06], ['Builtin_call_expression::do_set_recover_arg(Expression*', 3.4019391052900155e-06], ['args->empty());', 3.4019391052900155e-06], ['new_args->push_back(arg);', 3.4019391052900155e-06], ['this->set_args(new_args);', 3.4019391052900155e-06], ['this->recover_arg_is_set_', 3.4019391052900155e-06], ['Builtin_call_expression::do_lower(Gogo*,', 3.4019391052900155e-06], ['(this->is_varargs()', 3.4019391052900155e-06], ['BUILTIN_APPEND)', 3.4019391052900155e-06], ['(arg->bound_method_expression()', 3.4019391052900155e-06], ['arg->interface_field_reference_expression()', 3.4019391052900155e-06], ['Offsetof"));', 3.4019391052900155e-06], ['(!farg->implicit())', 3.4019391052900155e-06], ['(farg->expr()->deref()', 3.4019391052900155e-06], ['farg->expr())', 3.4019391052900155e-06], ['Offsetof', 3.4019391052900155e-06], ['"indirection', 3.4019391052900155e-06], ['field"));', 3.4019391052900155e-06], ['farg->expr()->field_reference_expression();', 3.4019391052900155e-06], ['(this->is_constant())', 3.4019391052900155e-06], ['nc.expression(loc);', 3.4019391052900155e-06], ['(!arg->is_type_expression())', 3.4019391052900155e-06], ['go_error_at(arg->location(),', 3.4019391052900155e-06], ['Expression::make_allocation(arg->type(),', 3.4019391052900155e-06], ['this->lower_make(inserter);', 3.4019391052900155e-06], ['function->func_value()->set_calls_recover();', 3.4019391052900155e-06], ['eface', 3.4019391052900155e-06], ['Expression::make_cast(eface,', 3.4019391052900155e-06], ['(args->front()->type()->map_type()', 3.4019391052900155e-06], ['args->front()->type()->map_type();', 3.4019391052900155e-06], ['map_temp', 3.4019391052900155e-06], ['Statement::make_temporary(mt,', 3.4019391052900155e-06], ['inserter->insert(map_temp);', 3.4019391052900155e-06], ['key_temp', 3.4019391052900155e-06], ['Statement::make_temporary(mt->key_type(),', 3.4019391052900155e-06], ['inserter->insert(key_temp);', 3.4019391052900155e-06], ['Expression::make_temporary_reference(map_temp,', 3.4019391052900155e-06], ['Expression::make_temporary_reference(key_temp,', 3.4019391052900155e-06], ['deferred,', 3.4019391052900155e-06], ['(!this->is_deferred())', 3.4019391052900155e-06], ['Expression::make_allocation(mt->key_type(),', 3.4019391052900155e-06], ['atemp', 3.4019391052900155e-06], ['inserter->insert(atemp);', 3.4019391052900155e-06], ['Expression::make_dereference(a,', 3.4019391052900155e-06], ['Statement::make_assignment(a,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAPDELETE,', 3.4019391052900155e-06], ['lock.', 3.4019391052900155e-06], ['!(*pa)->is_constant())', 3.4019391052900155e-06], ['Builtin_call_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['this->flatten_append(gogo,', 3.4019391052900155e-06], ['this->args()->front()->type();', 3.4019391052900155e-06], ['((*pa)->is_nil_expression())', 3.4019391052900155e-06], ['Expression::make_slice_value(at,', 3.4019391052900155e-06], ['(!(*pa)->is_variable())', 3.4019391052900155e-06], ['(*pa)->type()->interface_type()', 3.4019391052900155e-06], ['((*pa)->type()->map_type()', 3.4019391052900155e-06], ['(*pa)->type()->channel_type()', 3.4019391052900155e-06], ['Builtin_call_expression::lower_make(Statement_inserter*', 3.4019391052900155e-06], ['(!first_arg->is_type_expression())', 3.4019391052900155e-06], ['first_arg->type();', 3.4019391052900155e-06], ['(!type->in_heap())', 3.4019391052900155e-06], ['int_context(Type::lookup_integer_type("int"),', 3.4019391052900155e-06], ['len_arg;', 3.4019391052900155e-06], ['this->report_error(_("length', 3.4019391052900155e-06], ['len_arg->determine_type(&int_context);', 3.4019391052900155e-06], ['(len_arg->type()->integer_type()', 3.4019391052900155e-06], ['go_error_at(len_arg->location(),', 3.4019391052900155e-06], ['(!this->check_int_value(len_arg,', 3.4019391052900155e-06], ['&len_small))', 3.4019391052900155e-06], ['nccap;', 3.4019391052900155e-06], ['vcap;', 3.4019391052900155e-06], ['(is_slice', 3.4019391052900155e-06], ['cap_arg->determine_type(&int_context);', 3.4019391052900155e-06], ['(cap_arg->type()->integer_type()', 3.4019391052900155e-06], ['go_error_at(cap_arg->location(),', 3.4019391052900155e-06], ['(!this->check_int_value(cap_arg,', 3.4019391052900155e-06], ['&cap_small))', 3.4019391052900155e-06], ['cap_arg->numeric_constant_value(&nccap)', 3.4019391052900155e-06], ['nccap.to_unsigned_long(&vcap)', 3.4019391052900155e-06], ['vcap)', 3.4019391052900155e-06], ['this->report_error(_("len', 3.4019391052900155e-06], ['cap"));', 3.4019391052900155e-06], ['make"));', 3.4019391052900155e-06], ['type_loc', 3.4019391052900155e-06], ['first_arg->location();', 3.4019391052900155e-06], ['(!len_arg->is_constant())', 3.4019391052900155e-06], ['inserter->insert(len_temp);', 3.4019391052900155e-06], ['(cap_arg', 3.4019391052900155e-06], ['len_small;', 3.4019391052900155e-06], ['(len_temp', 3.4019391052900155e-06], ['len_arg->copy();', 3.4019391052900155e-06], ['(!cap_arg->is_constant())', 3.4019391052900155e-06], ['cap_temp', 3.4019391052900155e-06], ['inserter->insert(cap_temp);', 3.4019391052900155e-06], ['Expression::make_temporary_reference(cap_temp,', 3.4019391052900155e-06], ['Runtime::MAKESLICE;', 3.4019391052900155e-06], ['(!len_small', 3.4019391052900155e-06], ['!cap_small)', 3.4019391052900155e-06], ['Runtime::MAKESLICE64;', 3.4019391052900155e-06], ['cap_arg);', 3.4019391052900155e-06], ['len_arg->copy(),', 3.4019391052900155e-06], ['cap_arg->copy(),', 3.4019391052900155e-06], ['Expression::make_slice_value(type,', 3.4019391052900155e-06], ['(is_map)', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAKEMAP64,', 3.4019391052900155e-06], ['Map_type::bucket_size)', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAKEMAP_SMALL,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAKEMAP,', 3.4019391052900155e-06], ['(is_chan)', 3.4019391052900155e-06], ['Runtime::MAKECHAN;', 3.4019391052900155e-06], ['Runtime::MAKECHAN64;', 3.4019391052900155e-06], ['len_arg);', 3.4019391052900155e-06], ['order_evaluations.', 3.4019391052900155e-06], ['right-hand-side', 3.4019391052900155e-06], ['left-hand-side;', 3.4019391052900155e-06], ['append(a,', 3.4019391052900155e-06], ['grow.', 3.4019391052900155e-06], ['ENCLOSING', 3.4019391052900155e-06], ['Builtin_call_expression::flatten_append(Gogo*', 3.4019391052900155e-06], ['assign_lhs,', 3.4019391052900155e-06], ['!args->empty());', 3.4019391052900155e-06], ['go_assert(slice_type->is_slice_type());', 3.4019391052900155e-06], ['append(s)', 3.4019391052900155e-06], ['s.', 3.4019391052900155e-06], ['uint_type', 3.4019391052900155e-06], ['Implementing', 3.4019391052900155e-06], ['inserter->insert(s1tmp);', 3.4019391052900155e-06], ['len(s1tmp)', 3.4019391052900155e-06], ['lenfn', 3.4019391052900155e-06], ['gogo->lookup_global("len");', 3.4019391052900155e-06], ['inserter->insert(l1tmp);', 3.4019391052900155e-06], ['len2;', 3.4019391052900155e-06], ['go_assert(args->size()', 3.4019391052900155e-06], ['inserter->insert(s2tmp);', 3.4019391052900155e-06], ['len(s2tmp)', 3.4019391052900155e-06], ['call_args->push_back(Expression::make_temporary_reference(s2tmp,', 3.4019391052900155e-06], ['inserter->insert(l2tmp);', 3.4019391052900155e-06], ['Expression::make_temporary_reference(l2tmp,', 3.4019391052900155e-06], ['((*pa)->is_variable())', 3.4019391052900155e-06], ['add->push_back(*pa);', 3.4019391052900155e-06], ['inserter->insert(tmp);', 3.4019391052900155e-06], ['add->push_back(Expression::make_temporary_reference(tmp,', 3.4019391052900155e-06], ['len(add)', 3.4019391052900155e-06], ['Expression::make_integer_ul(add->size(),', 3.4019391052900155e-06], ['len2,', 3.4019391052900155e-06], ['inserter->insert(ntmp);', 3.4019391052900155e-06], ['uint(ntmp)', 3.4019391052900155e-06], ['uint(cap(s1tmp))', 3.4019391052900155e-06], ['growslice(type,', 3.4019391052900155e-06], ['s1tmp,', 3.4019391052900155e-06], ['ntmp)', 3.4019391052900155e-06], ['s1tmp[:ntmp]', 3.4019391052900155e-06], ['overflowed,', 3.4019391052900155e-06], ['growslice', 3.4019391052900155e-06], ['panic.', 3.4019391052900155e-06], ['capfn', 3.4019391052900155e-06], ['gogo->lookup_global("cap");', 3.4019391052900155e-06], ['capref', 3.4019391052900155e-06], ['Expression::make_func_reference(capfn,', 3.4019391052900155e-06], ['Expression::make_call(capref,', 3.4019391052900155e-06], ['c1tmp', 3.4019391052900155e-06], ['inserter->insert(c1tmp);', 3.4019391052900155e-06], ['Expression::make_type_descriptor(element_type,', 3.4019391052900155e-06], ['slice_type->array_type()->get_value_pointer(gogo,', 3.4019391052900155e-06], ['Expression::make_cast(unsafe_ptr_type,', 3.4019391052900155e-06], ['a3', 3.4019391052900155e-06], ['a4', 3.4019391052900155e-06], ['a5', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::GROWSLICE,', 3.4019391052900155e-06], ['a4,', 3.4019391052900155e-06], ['a5);', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(slice_type,', 3.4019391052900155e-06], ['ref->array_index_expression()->set_needs_bounds_check(false);', 3.4019391052900155e-06], ['Expression::make_conditional(cond,', 3.4019391052900155e-06], ['then_block', 3.4019391052900155e-06], ['Statement::make_assignment(assign_lhs,', 3.4019391052900155e-06], ['then_block->add_statement(assign);', 3.4019391052900155e-06], ['Statement::make_assignment(assign_lhs->copy(),', 3.4019391052900155e-06], ['barrier.', 3.4019391052900155e-06], ['assign->set_omit_write_barrier();', 3.4019391052900155e-06], ['else_block->add_statement(assign);', 3.4019391052900155e-06], ['assign_lhs->copy(),', 3.4019391052900155e-06], ['copy(s1tmp[l1tmp:],', 3.4019391052900155e-06], ['s2tmp)', 3.4019391052900155e-06], ['Expression::make_array_index(a1,', 3.4019391052900155e-06], ['a1->array_index_expression()->set_needs_bounds_check(false);', 3.4019391052900155e-06], ['Expression::make_temporary_reference(s2tmp,', 3.4019391052900155e-06], ['copyfn', 3.4019391052900155e-06], ['gogo->lookup_global("copy");', 3.4019391052900155e-06], ['copyref', 3.4019391052900155e-06], ['Expression::make_func_reference(copyfn,', 3.4019391052900155e-06], ['call_args->push_back(a1);', 3.4019391052900155e-06], ['call_args->push_back(a2);', 3.4019391052900155e-06], ['Expression::make_call(copyref,', 3.4019391052900155e-06], ['s1tmp[l1tmp+i]', 3.4019391052900155e-06], ['add->begin();', 3.4019391052900155e-06], ['add->end();', 3.4019391052900155e-06], ['lhs->array_index_expression()->set_needs_bounds_check(false);', 3.4019391052900155e-06], ['!gogo->assign_needs_write_barrier(lhs))', 3.4019391052900155e-06], ['Statement::make_assignment(lhs,', 3.4019391052900155e-06], ['function->func_value();', 3.4019391052900155e-06], ['gogo->assign_with_write_barrier(f,', 3.4019391052900155e-06], ['*SMALL', 3.4019391052900155e-06], ['Builtin_call_expression::check_int_value(Expression*', 3.4019391052900155e-06], ['is_length,', 3.4019391052900155e-06], ['*small)', 3.4019391052900155e-06], ['(e->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['(nc.to_unsigned_long(&v))', 3.4019391052900155e-06], ['"negative', 3.4019391052900155e-06], ['(e->type()->integer_type()', 3.4019391052900155e-06], ['e->type()->integer_type()->bits();', 3.4019391052900155e-06], ['reject', 3.4019391052900155e-06], ['intbits;', 3.4019391052900155e-06], ['imag', 3.4019391052900155e-06], ['complex64', 3.4019391052900155e-06], ['float64,', 3.4019391052900155e-06], ['Builtin_call_expression::real_imag_type(Type*', 3.4019391052900155e-06], ['"complex64")', 3.4019391052900155e-06], ['Type::lookup_float_type("float32");', 3.4019391052900155e-06], ['"complex128")', 3.4019391052900155e-06], ['argments.', 3.4019391052900155e-06], ['real_imag_type,', 3.4019391052900155e-06], ['Builtin_call_expression::complex_type(Type*', 3.4019391052900155e-06], ['"float32")', 3.4019391052900155e-06], ['Type::lookup_complex_type("complex64");', 3.4019391052900155e-06], ['"float64")', 3.4019391052900155e-06], ['Builtin_call_expression::one_arg()', 3.4019391052900155e-06], ['Find_call_expression()', 3.4019391052900155e-06], ['Find_call_expression::expression(Expression**', 3.4019391052900155e-06], ['(!expr->is_constant()', 3.4019391052900155e-06], ['expr->receive_expression()', 3.4019391052900155e-06], ['len(s)', 3.4019391052900155e-06], ['cap(s)', 3.4019391052900155e-06], ['receives', 3.4019391052900155e-06], ['(non-constant)', 3.4019391052900155e-06], ['calls."', 3.4019391052900155e-06], ['Builtin_call_expression::array_len_is_constant(Expression*', 3.4019391052900155e-06], ['go_assert(expr->type()->deref()->array_type()', 3.4019391052900155e-06], ['!expr->type()->deref()->is_slice_type());', 3.4019391052900155e-06], ['(expr->is_constant())', 3.4019391052900155e-06], ['find_call;', 3.4019391052900155e-06], ['&find_call);', 3.4019391052900155e-06], ['!find_call.found();', 3.4019391052900155e-06], ['constant:', 3.4019391052900155e-06], ['unsafe.Sizeof,', 3.4019391052900155e-06], ['unsafe.Offsetof,', 3.4019391052900155e-06], ['unsafe.Alignof.', 3.4019391052900155e-06], ['Builtin_call_expression::do_is_constant()', 3.4019391052900155e-06], ['Builtin_call_expression::array_len_is_constant(arg);', 3.4019391052900155e-06], ['this->one_arg()', 3.4019391052900155e-06], ['arg->field_reference_expression()', 3.4019391052900155e-06], ['args->front()->is_constant()', 3.4019391052900155e-06], ['args->back()->is_constant();', 3.4019391052900155e-06], ['Builtin_call_expression::do_numeric_constant_value(Numeric_constant*', 3.4019391052900155e-06], ['(arg->string_constant_value(&sval))', 3.4019391052900155e-06], ['nc->set_unsigned_long(Type::lookup_integer_type("int"),', 3.4019391052900155e-06], ['sval.length());', 3.4019391052900155e-06], ['arg_type->array_type()->length();', 3.4019391052900155e-06], ['(!nc->set_type(Type::lookup_integer_type("int"),', 3.4019391052900155e-06], ['BUILTIN_SIZEOF', 3.4019391052900155e-06], ['(arg_type->is_error())', 3.4019391052900155e-06], ['(arg_type->is_abstract())', 3.4019391052900155e-06], ['arg_type->make_non_abstract_type();', 3.4019391052900155e-06], ['BUILTIN_SIZEOF)', 3.4019391052900155e-06], ['arg_type->backend_type_size(this->gogo_,', 3.4019391052900155e-06], ['arg_type->backend_type_align(this->gogo_,', 3.4019391052900155e-06], ['unsafe.Alignof(s.f)', 3.4019391052900155e-06], ['arg_type->backend_type_field_align(this->gogo_,', 3.4019391052900155e-06], ['struct_expr', 3.4019391052900155e-06], ['farg->expr();', 3.4019391052900155e-06], ['struct_expr->type();', 3.4019391052900155e-06], ['(st->struct_type()', 3.4019391052900155e-06], ['(st->named_type()', 3.4019391052900155e-06], ['st->named_type()->convert(this->gogo_);', 3.4019391052900155e-06], ['(st->is_error_type())', 3.4019391052900155e-06], ['st->struct_type()->backend_field_offset(this->gogo_,', 3.4019391052900155e-06], ['farg->field_index(),', 3.4019391052900155e-06], ['&offset);', 3.4019391052900155e-06], ['(farg->implicit()', 3.4019391052900155e-06], ['struct_expr->field_reference_expression()', 3.4019391052900155e-06], ['struct_expr->field_reference_expression();', 3.4019391052900155e-06], ['total_offset);', 3.4019391052900155e-06], ['BUILTIN_REAL', 3.4019391052900155e-06], ['BUILTIN_IMAG)', 3.4019391052900155e-06], ['argnc;', 3.4019391052900155e-06], ['(!arg->numeric_constant_value(&argnc))', 3.4019391052900155e-06], ['(!argnc.to_complex(&val))', 3.4019391052900155e-06], ['Builtin_call_expression::real_imag_type(argnc.type());', 3.4019391052900155e-06], ['BUILTIN_COMPLEX)', 3.4019391052900155e-06], ['rnc;', 3.4019391052900155e-06], ['(!args->front()->numeric_constant_value(&rnc))', 3.4019391052900155e-06], ['(!args->back()->numeric_constant_value(&inc))', 3.4019391052900155e-06], ['(rnc.type()', 3.4019391052900155e-06], ['!rnc.type()->is_abstract()', 3.4019391052900155e-06], ['inc.type()', 3.4019391052900155e-06], ['!inc.type()->is_abstract()', 3.4019391052900155e-06], ['!Type::are_identical(rnc.type(),', 3.4019391052900155e-06], ['inc.type(),', 3.4019391052900155e-06], ['(!rnc.to_float(&r))', 3.4019391052900155e-06], ['(!inc.to_float(&i))', 3.4019391052900155e-06], ['rnc.type();', 3.4019391052900155e-06], ['inc.type();', 3.4019391052900155e-06], ['mpc_set_fr_fr(val,', 3.4019391052900155e-06], ['mpfr_clear(i);', 3.4019391052900155e-06], ['Builtin_call_expression::complex_type(arg_type);', 3.4019391052900155e-06], ['nc->set_complex(type,', 3.4019391052900155e-06], ['consistency', 3.4019391052900155e-06], ['Builtin_call_expression::do_discarding_value()', 3.4019391052900155e-06], ['Builtin_call_expression::do_type()', 3.4019391052900155e-06], ['Type::make_pointer_type(args->front()->type());', 3.4019391052900155e-06], ['*ret', 3.4019391052900155e-06], ['(!ret->is_slice_type())', 3.4019391052900155e-06], ['Builtin_call_expression::real_imag_type(t);', 3.4019391052900155e-06], ['Builtin_call_expression::complex_type(t);', 3.4019391052900155e-06], ['Builtin_call_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->fn()->determine_type_no_context();', 3.4019391052900155e-06], ['is_print;', 3.4019391052900155e-06], ['Builtin_call_expression::complex_type(context->type);', 3.4019391052900155e-06], ['other,', 3.4019391052900155e-06], ['Builtin_call_expression::real_imag_type(context->type);', 3.4019391052900155e-06], ['(!t1->is_abstract())', 3.4019391052900155e-06], ['(!t2->is_abstract())', 3.4019391052900155e-06], ['t2;', 3.4019391052900155e-06], ['(!this->is_varargs()', 3.4019391052900155e-06], ['!args->empty()', 3.4019391052900155e-06], ['args->front()->type()->is_slice_type())', 3.4019391052900155e-06], ['args->front()->type()->array_type()->element_type();', 3.4019391052900155e-06], ['subcontext;', 3.4019391052900155e-06], ['arg_type;', 3.4019391052900155e-06], ['(is_print)', 3.4019391052900155e-06], ['nonabstract', 3.4019391052900155e-06], ['uint64', 3.4019391052900155e-06], ['nonnegative,', 3.4019391052900155e-06], ['int64', 3.4019391052900155e-06], ['(atype->is_abstract())', 3.4019391052900155e-06], ['(atype->integer_type()', 3.4019391052900155e-06], ['(nc.to_int(&val))', 3.4019391052900155e-06], ['(want_type', 3.4019391052900155e-06], ['(atype->float_type()', 3.4019391052900155e-06], ['(atype->complex_type()', 3.4019391052900155e-06], ['(atype->is_abstract_string_type())', 3.4019391052900155e-06], ['(atype->is_abstract_boolean_type())', 3.4019391052900155e-06], ['want_type;', 3.4019391052900155e-06], ['(trailing_arg_types', 3.4019391052900155e-06], ['trailing_arg_types;', 3.4019391052900155e-06], ['Builtin_call_expression::check_one_arg()', 3.4019391052900155e-06], ['args->front()->type()->is_error())', 3.4019391052900155e-06], ['Builtin_call_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['this->one_arg()->type();', 3.4019391052900155e-06], ['!arg_type->is_string_type()', 3.4019391052900155e-06], ['arg_type->map_type()', 3.4019391052900155e-06], ['BUILTIN_PRINT)', 3.4019391052900155e-06], ['BUILTIN_PRINT', 3.4019391052900155e-06], ['"print"', 3.4019391052900155e-06], ['"println"));', 3.4019391052900155e-06], ['(*p)->type();', 3.4019391052900155e-06], ['type->is_string_type()', 3.4019391052900155e-06], ['type->integer_type()', 3.4019391052900155e-06], ['type->interface_type()', 3.4019391052900155e-06], ['type->is_slice_type())', 3.4019391052900155e-06], ['((*p)->is_type_expression())', 3.4019391052900155e-06], ['anyhow,', 3.4019391052900155e-06], ['this->report_error(_("unsupported', 3.4019391052900155e-06], ['"builtin', 3.4019391052900155e-06], ['(this->one_arg()->type()->channel_type()', 3.4019391052900155e-06], ['(!this->one_arg()->type()->channel_type()->may_send())', 3.4019391052900155e-06], ['this->report_error(_("cannot', 3.4019391052900155e-06], ['receive-only', 3.4019391052900155e-06], ['this->check_one_arg();', 3.4019391052900155e-06], ['!this->args()->empty()', 3.4019391052900155e-06], ['!this->recover_arg_is_set_)', 3.4019391052900155e-06], ['reference"));', 3.4019391052900155e-06], ['(arg1_type->is_error()', 3.4019391052900155e-06], ['arg2_type->is_error())', 3.4019391052900155e-06], ['(arg1_type->is_slice_type())', 3.4019391052900155e-06], ['arg1_type->array_type()->element_type();', 3.4019391052900155e-06], ['this->report_error(_("left', 3.4019391052900155e-06], ['(arg2_type->is_slice_type())', 3.4019391052900155e-06], ['arg2_type->array_type()->element_type();', 3.4019391052900155e-06], ['(!Type::are_identical(e1,', 3.4019391052900155e-06], ['this->report_error(_("element', 3.4019391052900155e-06], ['same"));', 3.4019391052900155e-06], ['(e1->integer_type()', 3.4019391052900155e-06], ['!e1->integer_type()->is_byte())', 3.4019391052900155e-06], ['this->report_error(_("first', 3.4019391052900155e-06], ['[]byte"));', 3.4019391052900155e-06], ['this->report_error(_("second', 3.4019391052900155e-06], ['(!slice_type->is_slice_type())', 3.4019391052900155e-06], ['(slice_type->is_error_type())', 3.4019391052900155e-06], ['(slice_type->is_nil_type())', 3.4019391052900155e-06], ['(!element_type->in_heap())', 3.4019391052900155e-06], ['(!args->back()->type()->is_slice_type()', 3.4019391052900155e-06], ['!args->back()->type()->is_string_type())', 3.4019391052900155e-06], ['non-slice/non-string");', 3.4019391052900155e-06], ['(args->back()->type()->is_string_type()', 3.4019391052900155e-06], ['element_type->integer_type()', 3.4019391052900155e-06], ['element_type->integer_type()->is_byte())', 3.4019391052900155e-06], ['Permit', 3.4019391052900155e-06], ['check_type', 3.4019391052900155e-06], ['(!Type::are_assignable(check_type,', 3.4019391052900155e-06], ['(!Type::are_assignable(element_type,', 3.4019391052900155e-06], ['(this->one_arg()->type()->complex_type()', 3.4019391052900155e-06], ['args->front()->type()->is_error()', 3.4019391052900155e-06], ['args->back()->is_error_expression()', 3.4019391052900155e-06], ['args->back()->type()->is_error())', 3.4019391052900155e-06], ['(!Type::are_identical(args->front()->type(),', 3.4019391052900155e-06], ['(args->front()->type()->float_type()', 3.4019391052900155e-06], ['"floating-point', 3.4019391052900155e-06], ['Builtin_call_expression::do_copy()', 3.4019391052900155e-06], ['Builtin_call_expression(this->gogo_,', 3.4019391052900155e-06], ['this->fn()->copy(),', 3.4019391052900155e-06], ['this->args()->copy()),', 3.4019391052900155e-06], ['this->is_varargs(),', 3.4019391052900155e-06], ['(this->varargs_are_lowered())', 3.4019391052900155e-06], ['bce->set_varargs_are_lowered();', 3.4019391052900155e-06], ['(this->is_deferred())', 3.4019391052900155e-06], ['(this->is_concurrent())', 3.4019391052900155e-06], ['Builtin_call_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['go_assert(arg_type->array_type()', 3.4019391052900155e-06], ['!arg_type->is_slice_type());', 3.4019391052900155e-06], ['BUILTIN_LEN)', 3.4019391052900155e-06], ['(arg_type->is_string_type())', 3.4019391052900155e-06], ['Expression::make_string_info(arg,', 3.4019391052900155e-06], ['arg_type->array_type()->get_length(gogo,', 3.4019391052900155e-06], ['(arg_type->map_type()', 3.4019391052900155e-06], ['arg_type->array_type()->get_capacity(gogo,', 3.4019391052900155e-06], ['(arg_type->channel_type()', 3.4019391052900155e-06], ['capacity.', 3.4019391052900155e-06], ['int_type->integer_type()->bits()', 3.4019391052900155e-06], ['eoff', 3.4019391052900155e-06], ['Expression::make_integer_ul(off,', 3.4019391052900155e-06], ['eoff,', 3.4019391052900155e-06], ['Expression::make_dereference(parg,', 3.4019391052900155e-06], ['location)->get_backend(context);', 3.4019391052900155e-06], ['is_ln', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::PRINTLOCK,', 3.4019391052900155e-06], ['(call_args', 3.4019391052900155e-06], ['call_args->begin();', 3.4019391052900155e-06], ['call_args->end();', 3.4019391052900155e-06], ['(is_ln', 3.4019391052900155e-06], ['call_args->begin())', 3.4019391052900155e-06], ['print_space', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::PRINTSP,', 3.4019391052900155e-06], ['print_space,', 3.4019391052900155e-06], ['Runtime::PRINTSTRING;', 3.4019391052900155e-06], ['type->integer_type()->is_unsigned())', 3.4019391052900155e-06], ['Runtime::PRINTUINT;', 3.4019391052900155e-06], ['Runtime::PRINTINT;', 3.4019391052900155e-06], ['Expression::make_cast(dtype,', 3.4019391052900155e-06], ['Runtime::PRINTFLOAT;', 3.4019391052900155e-06], ['Expression::make_cast(ctype,', 3.4019391052900155e-06], ['Runtime::PRINTCOMPLEX;', 3.4019391052900155e-06], ['(type->is_boolean_type())', 3.4019391052900155e-06], ['Runtime::PRINTBOOL;', 3.4019391052900155e-06], ['Runtime::PRINTPOINTER;', 3.4019391052900155e-06], ['(type->interface_type()->is_empty())', 3.4019391052900155e-06], ['Runtime::PRINTEFACE;', 3.4019391052900155e-06], ['Runtime::PRINTIFACE;', 3.4019391052900155e-06], ['Runtime::PRINTSLICE;', 3.4019391052900155e-06], ['(is_ln)', 3.4019391052900155e-06], ['print_nl', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::PRINTNL,', 3.4019391052900155e-06], ['print_nl,', 3.4019391052900155e-06], ['unlock', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::PRINTUNLOCK,', 3.4019391052900155e-06], ['unlock,', 3.4019391052900155e-06], ['print_stmts->get_backend(context);', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::GOPANIC,', 3.4019391052900155e-06], ['panic->get_backend(context);', 3.4019391052900155e-06], ['specially,', 3.4019391052900155e-06], ['test7', 3.4019391052900155e-06], ['test/recover1.go.', 3.4019391052900155e-06], ['Runtime::make_call((this->is_deferred()', 3.4019391052900155e-06], ['Runtime::DEFERREDRECOVER', 3.4019391052900155e-06], ['Runtime::GORECOVER),', 3.4019391052900155e-06], ['Expression::make_conditional(arg,', 3.4019391052900155e-06], ['cond->get_backend(context);', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::CLOSE,', 3.4019391052900155e-06], ['close->get_backend(context);', 3.4019391052900155e-06], ['(!this->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['nc.get_int(&ival);', 3.4019391052900155e-06], ['int_cst', 3.4019391052900155e-06], ['Expression::make_integer_z(&ival,', 3.4019391052900155e-06], ['int_cst->get_backend(context);', 3.4019391052900155e-06], ['args->back();', 3.4019391052900155e-06], ['arg1->type();', 3.4019391052900155e-06], ['arg1_type->array_type();', 3.4019391052900155e-06], ['go_assert(arg1->is_variable());', 3.4019391052900155e-06], ['arg2->type();', 3.4019391052900155e-06], ['go_assert(arg2->is_variable());', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::SLICESTRINGCOPY,', 3.4019391052900155e-06], ['(et->has_pointer())', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::TYPEDSLICECOPY,', 3.4019391052900155e-06], ['Expression::make_type_info(et,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::SLICECOPY,', 3.4019391052900155e-06], ['sz);', 3.4019391052900155e-06], ['Handled', 3.4019391052900155e-06], ['Builtin_call_expression::flatten_append.', 3.4019391052900155e-06], ['bcomplex', 3.4019391052900155e-06], ['gogo->backend()->real_part_expression(bcomplex,', 3.4019391052900155e-06], ['gogo->backend()->imag_part_expression(bcomplex,', 3.4019391052900155e-06], ['breal', 3.4019391052900155e-06], ['bimag', 3.4019391052900155e-06], ['args->back()->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->complex_expression(breal,', 3.4019391052900155e-06], ['Builtin_call_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['(!this->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['"value', 3.4019391052900155e-06], ['(nc.is_int())', 3.4019391052900155e-06], ['nc.get_int(&val);', 3.4019391052900155e-06], ['(nc.is_float())', 3.4019391052900155e-06], ['nc.get_float(&fval);', 3.4019391052900155e-06], ['(nc.is_complex())', 3.4019391052900155e-06], ['nc.get_complex(&cval);', 3.4019391052900155e-06], ['ways.', 3.4019391052900155e-06], ['consider.', 3.4019391052900155e-06], ['scope,', 3.4019391052900155e-06], ['pops', 3.4019391052900155e-06], ['ignores', 3.4019391052900155e-06], ['efficient,', 3.4019391052900155e-06], ['unfortunately', 3.4019391052900155e-06], ['reshuffle', 3.4019391052900155e-06], ['retains', 3.4019391052900155e-06], ['Call_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Call_multiple_result_type', 3.4019391052900155e-06], ['*fntype', 3.4019391052900155e-06], ['Type::traverse(fntype,', 3.4019391052900155e-06], ['(Expression::traverse(&this->fn_,', 3.4019391052900155e-06], ['(this->args_->traverse(traverse)', 3.4019391052900155e-06], ['Call_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['(this->fn_->is_type_expression()', 3.4019391052900155e-06], ['Expression::make_cast(this->fn_->type(),', 3.4019391052900155e-06], ['this->args_->front(),', 3.4019391052900155e-06], ['do_type', 3.4019391052900155e-06], ['reported.', 3.4019391052900155e-06], ['this->args_->front()->call_expression()->result_count();', 3.4019391052900155e-06], ['(rc', 3.4019391052900155e-06], ['((fntype->parameters()', 3.4019391052900155e-06], ['(fntype->parameters()->size()', 3.4019391052900155e-06], ['(fntype->is_varargs()', 3.4019391052900155e-06], ['fntype->parameters()->size()', 3.4019391052900155e-06], ['rc)))', 3.4019391052900155e-06], ['fntype->is_builtin()))', 3.4019391052900155e-06], ['this->args_->front()->call_expression();', 3.4019391052900155e-06], ['call->set_is_multi_value_arg();', 3.4019391052900155e-06], ['go_error_at(call->location(),', 3.4019391052900155e-06], ['_("multiple-value', 3.4019391052900155e-06], ['single-value', 3.4019391052900155e-06], ['context"));', 3.4019391052900155e-06], ['Expression::make_error(call->location());', 3.4019391052900155e-06], ['args->push_back(Expression::make_call_result(call,', 3.4019391052900155e-06], ['Recognize', 3.4019391052900155e-06], ['Builtin_call_expression(gogo,', 3.4019391052900155e-06], ['this->args_,', 3.4019391052900155e-06], ['(this->result_count()', 3.4019391052900155e-06], ['"res%d",', 3.4019391052900155e-06], ['sfl->push_back(Struct_field(Typed_identifier(buf,', 3.4019391052900155e-06], ['Statement::make_temporary(st,', 3.4019391052900155e-06], ['inserter->insert(this->call_temp_);', 3.4019391052900155e-06], ['packaging', 3.4019391052900155e-06], ['(fntype->is_varargs())', 3.4019391052900155e-06], ['go_assert(parameters', 3.4019391052900155e-06], ['!parameters->empty());', 3.4019391052900155e-06], ['varargs_type', 3.4019391052900155e-06], ['parameters->back().type();', 3.4019391052900155e-06], ['this->lower_varargs(gogo,', 3.4019391052900155e-06], ['parameters->size(),', 3.4019391052900155e-06], ['SLICE_STORAGE_MAY_ESCAPE);', 3.4019391052900155e-06], ['this->fn_->bound_method_expression();', 3.4019391052900155e-06], ['methodfn', 3.4019391052900155e-06], ['bme->first_argument();', 3.4019391052900155e-06], ['(first_arg->type()->points_to()', 3.4019391052900155e-06], ['!first_arg->type()->is_error())', 3.4019391052900155e-06], ['static_cast<Unary_expression*>(first_arg);', 3.4019391052900155e-06], ['ue->set_create_temp();', 3.4019391052900155e-06], ['stub,', 3.4019391052900155e-06], ['bme->first_argument_type();', 3.4019391052900155e-06], ['(fatype', 3.4019391052900155e-06], ['(fatype->points_to()', 3.4019391052900155e-06], ['Type::make_pointer_type(fatype);', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(fatype,', 3.4019391052900155e-06], ['new_args->push_back(first_arg);', 3.4019391052900155e-06], ['new_args->push_back(*p);', 3.4019391052900155e-06], ['this->fn_', 3.4019391052900155e-06], ['Expression::make_func_reference(methodfn,', 3.4019391052900155e-06], ['bme->location());', 3.4019391052900155e-06], ['getcallerpc', 3.4019391052900155e-06], ['getcallersp', 3.4019391052900155e-06], ['unwind', 3.4019391052900155e-06], ['efficient.', 3.4019391052900155e-06], ['technique', 3.4019391052900155e-06], ['fe->named_object()->package()', 3.4019391052900155e-06], ['Gogo::unpack_hidden_name(fe->named_object()->name());', 3.4019391052900155e-06], ['"getcallerpc")', 3.4019391052900155e-06], ['this->lower_to_builtin(&builtin_return_address,', 3.4019391052900155e-06], ['&arg);', 3.4019391052900155e-06], ['"getcallersp")', 3.4019391052900155e-06], ['builtin_dwarf_cfa;', 3.4019391052900155e-06], ['this->lower_to_builtin(&builtin_dwarf_cfa,', 3.4019391052900155e-06], ['fe->named_object()->func_declaration_value()->has_imported_body())', 3.4019391052900155e-06], ['gogo->add_imported_inlinable_function(fe->named_object());', 3.4019391052900155e-06], ["occurs--it's", 3.4019391052900155e-06], ['calling.', 3.4019391052900155e-06], ['VARARGS_TYPE', 3.4019391052900155e-06], ['PARAM_COUNT', 3.4019391052900155e-06], ['calling;', 3.4019391052900155e-06], ['Call_expression::lower_varargs(Gogo*', 3.4019391052900155e-06], ['param_count,', 3.4019391052900155e-06], ['Slice_storage_escape_disp', 3.4019391052900155e-06], ['escape_disp)', 3.4019391052900155e-06], ['go_assert(varargs_type->is_slice_type());', 3.4019391052900155e-06], ['arg_count', 3.4019391052900155e-06], ['(arg_count', 3.4019391052900155e-06], ['param_count', 3.4019391052900155e-06], ['check_types.', 3.4019391052900155e-06], ['old_args', 3.4019391052900155e-06], ['(old_args', 3.4019391052900155e-06], ['old_args->empty())', 3.4019391052900155e-06], ['pa;', 3.4019391052900155e-06], ['old_args->begin();', 3.4019391052900155e-06], ['(static_cast<size_t>(i)', 3.4019391052900155e-06], ['param_count)', 3.4019391052900155e-06], ['issued_error', 3.4019391052900155e-06], ['old_args->end())', 3.4019391052900155e-06], ['old_args->end()', 3.4019391052900155e-06], ['this->is_varargs_)', 3.4019391052900155e-06], ['((*pa)->type()->is_slice_type())', 3.4019391052900155e-06], ['non-slice"));', 3.4019391052900155e-06], ['varargs_type->array_type()->element_type();', 3.4019391052900155e-06], ['patype', 3.4019391052900155e-06], ['paloc', 3.4019391052900155e-06], ['(!this->check_argument_type(i,', 3.4019391052900155e-06], ['patype,', 3.4019391052900155e-06], ['paloc,', 3.4019391052900155e-06], ['issued_error))', 3.4019391052900155e-06], ['vals->push_back(*pa);', 3.4019391052900155e-06], ['Expression::make_slice_composite_literal(varargs_type,', 3.4019391052900155e-06], ['(escape_disp', 3.4019391052900155e-06], ['SLICE_STORAGE_DOES_NOT_ESCAPE)', 3.4019391052900155e-06], ['sce;', 3.4019391052900155e-06], ['new_args->push_back(val);', 3.4019391052900155e-06], ['(push_empty_arg)', 3.4019391052900155e-06], ['new_args->push_back(Expression::make_nil(loc));', 3.4019391052900155e-06], ['OLD_ARGS', 3.4019391052900155e-06], ['Call_expression', 3.4019391052900155e-06], ['Builtin_call_expression', 3.4019391052900155e-06], ['this->varargs_are_lowered_', 3.4019391052900155e-06], ['Call_expression::lower_to_builtin(Named_object**', 3.4019391052900155e-06], ['pno,', 3.4019391052900155e-06], ['(*pno', 3.4019391052900155e-06], ['*pno', 3.4019391052900155e-06], ['Gogo::declare_builtin_rf_address(name,', 3.4019391052900155e-06], ['Expression::make_func_reference(*pno,', 3.4019391052900155e-06], ['Expression::make_integer_ul(*arg,', 3.4019391052900155e-06], ['args->push_back(a);', 3.4019391052900155e-06], ['uintptr.', 3.4019391052900155e-06], ['Expression::make_cast(uintptr_type,', 3.4019391052900155e-06], ['Call_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['(this->is_flattened_)', 3.4019391052900155e-06], ['this->is_flattened_', 3.4019391052900155e-06], ['!this->args_->empty()', 3.4019391052900155e-06], ['fntype->parameters()', 3.4019391052900155e-06], ['!fntype->parameters()->empty())', 3.4019391052900155e-06], ['this->fn_->interface_field_reference_expression()', 3.4019391052900155e-06], ['fntype->parameters()->begin();', 3.4019391052900155e-06], ['fntype->parameters()->end());', 3.4019391052900155e-06], ['(Type::are_identical(pp->type(),', 3.4019391052900155e-06], ['*pa;', 3.4019391052900155e-06], ['(!arg->is_variable())', 3.4019391052900155e-06], ['Temporary_statement', 3.4019391052900155e-06], ['*temp', 3.4019391052900155e-06], ['args->push_back(arg);', 3.4019391052900155e-06], ['Call_expression::get_function_type()', 3.4019391052900155e-06], ['this->fn_->type()->function_type();', 3.4019391052900155e-06], ['Call_expression::result_count()', 3.4019391052900155e-06], ['(fntype->results()', 3.4019391052900155e-06], ['fntype->results()->size();', 3.4019391052900155e-06], ['Call_expression::results()', 3.4019391052900155e-06], ['this->call_temp_;', 3.4019391052900155e-06], ['Call_expression::set_expected_result_count(size_t', 3.4019391052900155e-06], ['go_assert(this->expected_result_count_', 3.4019391052900155e-06], ['Call_expression::is_recover_call()', 3.4019391052900155e-06], ['this->do_is_recover_call();', 3.4019391052900155e-06], ['Call_expression::set_recover_arg(Expression*', 3.4019391052900155e-06], ['this->do_set_recover_arg(arg);', 3.4019391052900155e-06], ['Virtual', 3.4019391052900155e-06], ['Call_expression::do_is_recover_call()', 3.4019391052900155e-06], ['Call_expression::do_set_recover_arg(Expression*)', 3.4019391052900155e-06], ['Call_expression::issue_error()', 3.4019391052900155e-06], ['(this->issued_error_)', 3.4019391052900155e-06], ['this->issued_error_', 3.4019391052900155e-06], ['Call_expression::is_erroneous_call()', 3.4019391052900155e-06], ['this->fn()->is_error_expression())', 3.4019391052900155e-06], ['((*pa)->type()->is_error_type()', 3.4019391052900155e-06], ['(*pa)->is_error_expression())', 3.4019391052900155e-06], ['Call_expression::do_type()', 3.4019391052900155e-06], ['(results->size()', 3.4019391052900155e-06], ['results->begin()->type();', 3.4019391052900155e-06], ['Type::make_call_multiple_result_type(this);', 3.4019391052900155e-06], ['Call_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->fn_->determine_type_no_context();', 3.4019391052900155e-06], ['(rtype->points_to()', 3.4019391052900155e-06], ['Type::make_pointer_type(rtype);', 3.4019391052900155e-06], ['subcontext(rtype,', 3.4019391052900155e-06], ['subcontext(pt->type(),', 3.4019391052900155e-06], ['++pt;', 3.4019391052900155e-06], ['(*pa)->determine_type_no_context();', 3.4019391052900155e-06], ['ahead,', 3.4019391052900155e-06], ['Call_expression::determining_types()', 3.4019391052900155e-06], ['(this->types_are_determined_)', 3.4019391052900155e-06], ['this->types_are_determined_', 3.4019391052900155e-06], ['I.', 3.4019391052900155e-06], ['Call_expression::check_argument_type(int', 3.4019391052900155e-06], ['parameter_type,', 3.4019391052900155e-06], ['argument_location,', 3.4019391052900155e-06], ['(!Type::are_assignable(parameter_type,', 3.4019391052900155e-06], ['(!issued_error)', 3.4019391052900155e-06], ['Call_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(this->expected_result_count_', 3.4019391052900155e-06], ['this->result_count())', 3.4019391052900155e-06], ['(this->issue_error())', 3.4019391052900155e-06], ['this->report_error(_("function', 3.4019391052900155e-06], ['mismatch"));', 3.4019391052900155e-06], ['is_method', 3.4019391052900155e-06], ['fntype->is_method();', 3.4019391052900155e-06], ['go_assert(this->args_', 3.4019391052900155e-06], ['!this->args_->empty());', 3.4019391052900155e-06], ['this->args_->front();', 3.4019391052900155e-06], ['(!Type::are_assignable(rtype->deref(),', 3.4019391052900155e-06], ['first_arg->type()->deref(),', 3.4019391052900155e-06], ['receiver"));', 3.4019391052900155e-06], ['lower_varargs()', 3.4019391052900155e-06], ['(this->is_varargs_', 3.4019391052900155e-06], ['!this->varargs_are_lowered_)', 3.4019391052900155e-06], ['(!fntype->is_varargs())', 3.4019391052900155e-06], ['non-variadic', 3.4019391052900155e-06], ['!parameters->empty())', 3.4019391052900155e-06], ['(!is_method', 3.4019391052900155e-06], ['(this->args_->size()', 3.4019391052900155e-06], ['this->args_->front()->call_expression()->result_count()', 3.4019391052900155e-06], ['F(G())', 3.4019391052900155e-06], ['mismatch.', 3.4019391052900155e-06], ['(this->args_->front()->call_expression()->result_count()', 3.4019391052900155e-06], ['parameters->size())', 3.4019391052900155e-06], ['++pt,', 3.4019391052900155e-06], ['this->check_argument_type(i', 3.4019391052900155e-06], ['pt->type(),', 3.4019391052900155e-06], ['(*pa)->location(),', 3.4019391052900155e-06], ['Call_expression::do_copy()', 3.4019391052900155e-06], ['Expression::make_call(this->fn_->copy(),', 3.4019391052900155e-06], ['this->args_->copy()),', 3.4019391052900155e-06], ['call->set_is_deferred();', 3.4019391052900155e-06], ['call->set_is_concurrent();', 3.4019391052900155e-06], ['inevitably', 3.4019391052900155e-06], ['last.', 3.4019391052900155e-06], ['Call_expression::do_must_eval_in_order()', 3.4019391052900155e-06], ['this->result_count()', 3.4019391052900155e-06], ['Call_expression::interface_method_function(', 3.4019391052900155e-06], ['interface_method,', 3.4019391052900155e-06], ['first_arg_ptr,', 3.4019391052900155e-06], ['interface_method->get_underlying_object();', 3.4019391052900155e-06], ['*first_arg_ptr', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(unsafe_ptr_type,', 3.4019391052900155e-06], ['interface_method->get_function();', 3.4019391052900155e-06], ['Call_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['(this->call_', 3.4019391052900155e-06], ['(this->fn_->is_error_expression())', 3.4019391052900155e-06], ['this->fn_->interface_field_reference_expression();', 3.4019391052900155e-06], ['has_closure', 3.4019391052900155e-06], ['func->closure()', 3.4019391052900155e-06], ['has_closure_arg;', 3.4019391052900155e-06], ['(is_interface_method)', 3.4019391052900155e-06], ['fn_args;', 3.4019391052900155e-06], ['this->args_->empty())', 3.4019391052900155e-06], ['fntype->parameters()->empty())', 3.4019391052900155e-06], ['go_assert(!is_interface_method', 3.4019391052900155e-06], ['fntype->is_method()', 3.4019391052900155e-06], ['this->args_->front()->get_backend(context);', 3.4019391052900155e-06], ['fn_args.resize(nargs);', 3.4019391052900155e-06], ['(*pe)->get_backend(context);', 3.4019391052900155e-06], ['++pp,', 3.4019391052900155e-06], ['*pe,', 3.4019391052900155e-06], ['arg->get_backend(context);', 3.4019391052900155e-06], ['go_assert(i', 3.4019391052900155e-06], ['func->named_object();', 3.4019391052900155e-06], ['Expression::make_func_code_reference(no,', 3.4019391052900155e-06], ['func->closure();', 3.4019391052900155e-06], ['(!is_interface_method)', 3.4019391052900155e-06], ['pfntype', 3.4019391052900155e-06], ['Type::make_pointer_type(Type::make_void_type()));', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(pfntype,', 3.4019391052900155e-06], ['Expression::make_dereference(fn,', 3.4019391052900155e-06], ['first_arg;', 3.4019391052900155e-06], ['this->interface_method_function(interface_method,', 3.4019391052900155e-06], ['&first_arg,', 3.4019391052900155e-06], ['first_arg->get_backend(context);', 3.4019391052900155e-06], ['(has_closure_arg)', 3.4019391052900155e-06], ['closure->get_backend(context);', 3.4019391052900155e-06], ['go_assert(closure', 3.4019391052900155e-06], ['fn->get_backend(context);', 3.4019391052900155e-06], ['!is_interface_method)', 3.4019391052900155e-06], ['bft', 3.4019391052900155e-06], ['fntype->get_backend_fntype(gogo);', 3.4019391052900155e-06], ['gogo->backend()->convert_expression(bft,', 3.4019391052900155e-06], ['(context->function())', 3.4019391052900155e-06], ['gogo->backend()->call_expression(bfunction,', 3.4019391052900155e-06], ['bassn', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(bassn,', 3.4019391052900155e-06], ['this->call_,', 3.4019391052900155e-06], ['expressin.', 3.4019391052900155e-06], ['Call_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['this->fn_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['(args_', 3.4019391052900155e-06], ['ast_dump_context->dump_expression_list(this->args_);', 3.4019391052900155e-06], ['Expression::make_call(Expression*', 3.4019391052900155e-06], ['Call_result_expression.', 3.4019391052900155e-06], ['Call_result_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(traverse->remember_expression(this->call_))', 3.4019391052900155e-06], ['Expression::traverse(&this->call_,', 3.4019391052900155e-06], ['Call_result_expression::do_type()', 3.4019391052900155e-06], ['THIS->CALL_', 3.4019391052900155e-06], ['Call_expression::do_must_eval_in_order', 3.4019391052900155e-06], ['ce->get_function_type();', 3.4019391052900155e-06], ['(!ce->fn()->type()->is_error())', 3.4019391052900155e-06], ['results->size()', 3.4019391052900155e-06], ['this->index_;', 3.4019391052900155e-06], ['pr->type();', 3.4019391052900155e-06], ['trigger', 3.4019391052900155e-06], ['do_type.', 3.4019391052900155e-06], ['Call_result_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['Call_result_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->call_->determine_type_no_context();', 3.4019391052900155e-06], ['Call_result_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['go_assert(this->call_->is_error_expression());', 3.4019391052900155e-06], ['ce->results();', 3.4019391052900155e-06], ['(ts', 3.4019391052900155e-06], ['Expression::make_field_reference(ref,', 3.4019391052900155e-06], ['Call_result_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['(struct)', 3.4019391052900155e-06], ['"@(";', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->call_);', 3.4019391052900155e-06], ['Expression::make_call_result(Call_expression*', 3.4019391052900155e-06], ['Call_result_expression(call,', 3.4019391052900155e-06], ['Index_expression.', 3.4019391052900155e-06], ['Index_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->left_,', 3.4019391052900155e-06], ['Expression::traverse(&this->start_,', 3.4019391052900155e-06], ['Expression::traverse(&this->end_,', 3.4019391052900155e-06], ['TRAVERSE_EXIT))', 3.4019391052900155e-06], ['Index_expression::do_lower(Gogo*,', 3.4019391052900155e-06], ['Expression::make_array_index(left,', 3.4019391052900155e-06], ['type->points_to()->array_type()', 3.4019391052900155e-06], ['!type->points_to()->is_slice_type())', 3.4019391052900155e-06], ['Expression::make_dereference(left,', 3.4019391052900155e-06], ['dereferenced.', 3.4019391052900155e-06], ['not--the', 3.4019391052900155e-06], ['deref->issue_nil_check();', 3.4019391052900155e-06], ['Expression::make_array_index(deref,', 3.4019391052900155e-06], ['string");', 3.4019391052900155e-06], ['Expression::make_string_index(left,', 3.4019391052900155e-06], ['map");', 3.4019391052900155e-06], ['Expression::make_map_index(left,', 3.4019391052900155e-06], ['(expr[expr:expr:expr],', 3.4019391052900155e-06], ['expr[expr:expr]', 3.4019391052900155e-06], ['expr[expr])', 3.4019391052900155e-06], ['Index_expression::dump_index_expression(Ast_dump_context*', 3.4019391052900155e-06], ['cap)', 3.4019391052900155e-06], ['expr->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['start->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['end->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['cap->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['Index_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_index(Expression*', 3.4019391052900155e-06], ['Index_expression(left,', 3.4019391052900155e-06], ['Array_index_expression.', 3.4019391052900155e-06], ['Array_index_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->array_,', 3.4019391052900155e-06], ['(Expression::traverse(&this->cap_,', 3.4019391052900155e-06], ['Array_index_expression::do_type()', 3.4019391052900155e-06], ['type->element_type();', 3.4019391052900155e-06], ['this->array_->type()->deref();', 3.4019391052900155e-06], ['Type::make_array_type(type->element_type(),', 3.4019391052900155e-06], ['Array_index_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->array_->determine_type_no_context();', 3.4019391052900155e-06], ['(this->cap_->is_constant())', 3.4019391052900155e-06], ['this->cap_->determine_type(&index_context);', 3.4019391052900155e-06], ['this->cap_->determine_type_no_context();', 3.4019391052900155e-06], ['Array_index_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['this->cap_->type()->integer_type()', 3.4019391052900155e-06], ['!this->cap_->type()->is_error()', 3.4019391052900155e-06], ['!this->cap_->is_nil_expression()', 3.4019391052900155e-06], ['!this->cap_->is_error_expression()', 3.4019391052900155e-06], ['(!this->cap_->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['lvalnc;', 3.4019391052900155e-06], ['lval;', 3.4019391052900155e-06], ['lval_valid', 3.4019391052900155e-06], ['array_type->length()->numeric_constant_value(&lvalnc)', 3.4019391052900155e-06], ['lvalnc.to_int(&lval));', 3.4019391052900155e-06], ['mpz_sizeinbase(ival,', 3.4019391052900155e-06], ['mpz_sizeinbase(eval,', 3.4019391052900155e-06], ['this->cap_->numeric_constant_value(&cnc)', 3.4019391052900155e-06], ['cnc.to_int(&cval))', 3.4019391052900155e-06], ['(mpz_sgn(cval)', 3.4019391052900155e-06], ['mpz_sizeinbase(cval,', 3.4019391052900155e-06], ['mpz_cmp(cval,', 3.4019391052900155e-06], ['start");', 3.4019391052900155e-06], ['(eval_valid', 3.4019391052900155e-06], ['length");', 3.4019391052900155e-06], ['mpz_clear(cval);', 3.4019391052900155e-06], ['(eval_valid)', 3.4019391052900155e-06], ['(lval_valid)', 3.4019391052900155e-06], ['mpz_clear(lval);', 3.4019391052900155e-06], ['!array_type->is_slice_type())', 3.4019391052900155e-06], ['(!this->array_->is_addressable())', 3.4019391052900155e-06], ['unaddressable', 3.4019391052900155e-06], ['this->array_->address_taken(false);', 3.4019391052900155e-06], ['assigment,', 3.4019391052900155e-06], ['Array_index_expression::do_must_eval_subexpressions_in_order(', 3.4019391052900155e-06], ['skip)', 3.4019391052900155e-06], ['*skip', 3.4019391052900155e-06], ['this->array_->type()->is_slice_type()', 3.4019391052900155e-06], ['slices', 3.4019391052900155e-06], ['indexes.', 3.4019391052900155e-06], ['Array_index_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['this->array_;', 3.4019391052900155e-06], ['(array->is_error_expression()', 3.4019391052900155e-06], ['array->type()->is_error_type()', 3.4019391052900155e-06], ['end->type()->is_error_type()))', 3.4019391052900155e-06], ['(cap->is_error_expression()', 3.4019391052900155e-06], ['cap->type()->is_error_type())))', 3.4019391052900155e-06], ['(array->type()->is_slice_type()', 3.4019391052900155e-06], ['!array->is_variable())', 3.4019391052900155e-06], ['this->array_', 3.4019391052900155e-06], ['(!start->is_variable())', 3.4019391052900155e-06], ['!end->is_nil_expression()', 3.4019391052900155e-06], ['!end->is_variable())', 3.4019391052900155e-06], ['!cap->is_variable())', 3.4019391052900155e-06], ['this->cap_', 3.4019391052900155e-06], ['Array_index_expression::do_is_addressable()', 3.4019391052900155e-06], ['(this->array_->type()->is_slice_type())', 3.4019391052900155e-06], ['this->array_->is_addressable();', 3.4019391052900155e-06], ['Array_index_expression::do_address_taken(bool', 3.4019391052900155e-06], ['&x[0],', 3.4019391052900155e-06], ["x's", 3.4019391052900155e-06], ['(!this->array_->type()->is_slice_type())', 3.4019391052900155e-06], ['this->array_->address_taken(escapes);', 3.4019391052900155e-06], ['Array_index_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['go_assert(!array_type->is_slice_type()', 3.4019391052900155e-06], ['this->array_->is_variable());', 3.4019391052900155e-06], ['int_type->get_backend(gogo);', 3.4019391052900155e-06], ['fixed-length', 3.4019391052900155e-06], ['disallows', 3.4019391052900155e-06], ['this->end_->is_nil_expression())', 3.4019391052900155e-06], ['array_type->get_length(gogo,', 3.4019391052900155e-06], ['len->get_backend(context);', 3.4019391052900155e-06], ['array_type->get_capacity(gogo,', 3.4019391052900155e-06], ['cap->get_backend(context);', 3.4019391052900155e-06], ['capacity;', 3.4019391052900155e-06], ['cap_arg;', 3.4019391052900155e-06], ['this->start_->get_backend(context);', 3.4019391052900155e-06], ['RUNTIME_ERROR_ARRAY_INDEX_OUT_OF_BOUNDS', 3.4019391052900155e-06], ['RUNTIME_ERROR_ARRAY_SLICE_OUT_OF_BOUNDS)', 3.4019391052900155e-06], ['RUNTIME_ERROR_SLICE_INDEX_OUT_OF_BOUNDS', 3.4019391052900155e-06], ['RUNTIME_ERROR_SLICE_SLICE_OUT_OF_BOUNDS));', 3.4019391052900155e-06], ['gogo->backend()->binary_expression((this->end_', 3.4019391052900155e-06], ['OPERATOR_GE', 3.4019391052900155e-06], ['OPERATOR_GT),', 3.4019391052900155e-06], ['capacity),', 3.4019391052900155e-06], ['indexing.', 3.4019391052900155e-06], ['l-value,', 3.4019391052900155e-06], ['this->array_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->array_index_expression(array,', 3.4019391052900155e-06], ['Slice.', 3.4019391052900155e-06], ['ele_type', 3.4019391052900155e-06], ['this->array_->type()->array_type()->element_type();', 3.4019391052900155e-06], ['ele_btype', 3.4019391052900155e-06], ['ele_type->get_backend(gogo);', 3.4019391052900155e-06], ['gogo->backend()->indirect_expression(ele_btype,', 3.4019391052900155e-06], ['Expression::check_bounds(this->cap_,', 3.4019391052900155e-06], ['cap_too_small', 3.4019391052900155e-06], ['cap_too_large', 3.4019391052900155e-06], ['bad_cap', 3.4019391052900155e-06], ['cap_too_small,', 3.4019391052900155e-06], ['cap_too_large,', 3.4019391052900155e-06], ['bad_cap,', 3.4019391052900155e-06], ['this->end_->get_backend(context);', 3.4019391052900155e-06], ['end_too_small', 3.4019391052900155e-06], ['end_too_large', 3.4019391052900155e-06], ['bad_end', 3.4019391052900155e-06], ['end_too_small,', 3.4019391052900155e-06], ['end_too_large,', 3.4019391052900155e-06], ['bad_end,', 3.4019391052900155e-06], ['result_length', 3.4019391052900155e-06], ['result_capacity', 3.4019391052900155e-06], ['val.', 3.4019391052900155e-06], ['unnecessarily.', 3.4019391052900155e-06], ['result_capacity,', 3.4019391052900155e-06], ['gogo->backend()->pointer_offset_expression(val,', 3.4019391052900155e-06], ['struct_btype', 3.4019391052900155e-06], ['init.push_back(val);', 3.4019391052900155e-06], ['init.push_back(result_length);', 3.4019391052900155e-06], ['init.push_back(result_capacity);', 3.4019391052900155e-06], ['gogo->backend()->constructor_expression(struct_btype,', 3.4019391052900155e-06], ['struct_btype,', 3.4019391052900155e-06], ['Array_index_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['CAP', 3.4019391052900155e-06], ['Expression::make_array_index(Expression*', 3.4019391052900155e-06], ['Array_index_expression(array,', 3.4019391052900155e-06], ['String_index_expression.', 3.4019391052900155e-06], ['String_index_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->string_,', 3.4019391052900155e-06], ['String_index_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['(string->is_error_expression()', 3.4019391052900155e-06], ['string->type()->is_error_type()', 3.4019391052900155e-06], ['end->type()->is_error_type())))', 3.4019391052900155e-06], ['(!this->string_->is_variable())', 3.4019391052900155e-06], ['this->string_', 3.4019391052900155e-06], ['(!this->start_->is_variable())', 3.4019391052900155e-06], ['!this->end_->is_variable())', 3.4019391052900155e-06], ['String_index_expression::do_type()', 3.4019391052900155e-06], ['this->string_->type();', 3.4019391052900155e-06], ['String_index_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->string_->determine_type_no_context();', 3.4019391052900155e-06], ['String_index_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['sval_valid', 3.4019391052900155e-06], ['this->string_->string_constant_value(&sval);', 3.4019391052900155e-06], ['mpz_cmp_ui(eval,', 3.4019391052900155e-06], ['String_index_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['(this->string_->type()->points_to()', 3.4019391052900155e-06], ['Expression::make_dereference(this->string_,', 3.4019391052900155e-06], ['RUNTIME_ERROR_STRING_INDEX_OUT_OF_BOUNDS', 3.4019391052900155e-06], ['RUNTIME_ERROR_STRING_SLICE_OUT_OF_BOUNDS);', 3.4019391052900155e-06], ['Type_conversion_expression', 3.4019391052900155e-06], ['Expression::make_binary(OPERATOR_GE,', 3.4019391052900155e-06], ['STRING_INFO_DATA,', 3.4019391052900155e-06], ['bstart', 3.4019391052900155e-06], ['start->get_backend(context);', 3.4019391052900155e-06], ['bytes->get_backend(context);', 3.4019391052900155e-06], ['bstart,', 3.4019391052900155e-06], ['gogo->backend()->indirect_expression(ubtype,', 3.4019391052900155e-06], ['byte_btype', 3.4019391052900155e-06], ['bytes->type()->points_to()->get_backend(gogo);', 3.4019391052900155e-06], ['byte_btype,', 3.4019391052900155e-06], ['Expression::make_integer_sl(-1,', 3.4019391052900155e-06], ['bounds_check', 3.4019391052900155e-06], ['bounds_check,', 3.4019391052900155e-06], ['strslice', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::STRING_SLICE,', 3.4019391052900155e-06], ['string_arg,', 3.4019391052900155e-06], ['end);', 3.4019391052900155e-06], ['bstrslice', 3.4019391052900155e-06], ['strslice->get_backend(context);', 3.4019391052900155e-06], ['str_btype', 3.4019391052900155e-06], ['strslice->type()->get_backend(gogo);', 3.4019391052900155e-06], ['str_btype,', 3.4019391052900155e-06], ['bstrslice,', 3.4019391052900155e-06], ['String_index_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_string_index(Expression*', 3.4019391052900155e-06], ['String_index_expression(string,', 3.4019391052900155e-06], ['Map_index.', 3.4019391052900155e-06], ['Map_index_expression::get_map_type()', 3.4019391052900155e-06], ['this->map_->type()->map_type();', 3.4019391052900155e-06], ['mt;', 3.4019391052900155e-06], ['Map_index_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->map_,', 3.4019391052900155e-06], ['Expression::traverse(&this->index_,', 3.4019391052900155e-06], ['dereferenced', 3.4019391052900155e-06], ['recomputation.', 3.4019391052900155e-06], ['Map_index_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['(this->index()->is_error_expression()', 3.4019391052900155e-06], ['this->index()->type()->is_error_type()', 3.4019391052900155e-06], ['mt->is_error_type())', 3.4019391052900155e-06], ['(!Type::are_identical(mt->key_type(),', 3.4019391052900155e-06], ['(this->index_->type()->interface_type()', 3.4019391052900155e-06], ['!this->index_->is_variable())', 3.4019391052900155e-06], ['(!this->index_->is_variable())', 3.4019391052900155e-06], ['this->get_value_pointer(gogo);', 3.4019391052900155e-06], ['(this->value_pointer_->is_error_expression()', 3.4019391052900155e-06], ['this->value_pointer_->type()->is_error_type())', 3.4019391052900155e-06], ['(!this->value_pointer_->is_variable())', 3.4019391052900155e-06], ['this->value_pointer_,', 3.4019391052900155e-06], ['Map_index_expression::do_type()', 3.4019391052900155e-06], ['Map_index_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->map_->determine_type_no_context();', 3.4019391052900155e-06], ['subcontext(key_type,', 3.4019391052900155e-06], ['this->index_->determine_type(&subcontext);', 3.4019391052900155e-06], ['Map_index_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!Type::are_assignable(mt->key_type(),', 3.4019391052900155e-06], ['index"));', 3.4019391052900155e-06], ['Map_index_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['go_assert(this->value_pointer_', 3.4019391052900155e-06], ['this->value_pointer_->is_variable());', 3.4019391052900155e-06], ['Expression::make_dereference(this->value_pointer_,', 3.4019391052900155e-06], ['val->get_backend(context);', 3.4019391052900155e-06], ['Map_index_expression::get_value_pointer(Gogo*', 3.4019391052900155e-06], ['map_ref', 3.4019391052900155e-06], ['this->map_;', 3.4019391052900155e-06], ['index_ptr', 3.4019391052900155e-06], ['type->fat_zero_value(gogo);', 3.4019391052900155e-06], ['map_index;', 3.4019391052900155e-06], ['(zero', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAPACCESS1,', 3.4019391052900155e-06], ['index_ptr);', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::MAPACCESS1_FAT,', 3.4019391052900155e-06], ['index_ptr,', 3.4019391052900155e-06], ['type->val_type();', 3.4019391052900155e-06], ['Expression::make_unsafe_cast(Type::make_pointer_type(val_type),', 3.4019391052900155e-06], ['map_index,', 3.4019391052900155e-06], ['this->value_pointer_;', 3.4019391052900155e-06], ['Map_index_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['this->map_,', 3.4019391052900155e-06], ['Map_index_expression*', 3.4019391052900155e-06], ['Expression::make_map_index(Expression*', 3.4019391052900155e-06], ['Map_index_expression(map,', 3.4019391052900155e-06], ['Field_reference_expression.', 3.4019391052900155e-06], ['lower,', 3.4019391052900155e-06], ['go:"track"', 3.4019391052900155e-06], ['Field_reference_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['this->expr_->type()->struct_type();', 3.4019391052900155e-06], ['(struct_type', 3.4019391052900155e-06], ['struct_type->field(this->field_index_);', 3.4019391052900155e-06], ['(!field->has_tag())', 3.4019391052900155e-06], ['(field->tag().find("go:\\"track\\"")', 3.4019391052900155e-06], ['References', 3.4019391052900155e-06], ['function->func_value()->is_type_specific_function())', 3.4019391052900155e-06], ['__go_fieldtrack', 3.4019391052900155e-06], ['(this->called_fieldtrack_)', 3.4019391052900155e-06], ['this->called_fieldtrack_', 3.4019391052900155e-06], ['"fieldtrack', 3.4019391052900155e-06], ['\\"";', 3.4019391052900155e-06], ['this->expr_->type()->unalias()->named_type();', 3.4019391052900155e-06], ['s.append(gogo->pkgpath());', 3.4019391052900155e-06], ['s.append(nt->named_object()->package()->pkgpath());', 3.4019391052900155e-06], ['s.append(Gogo::unpack_hidden_name(nt->name()));', 3.4019391052900155e-06], ['s.append(field->field_name());', 3.4019391052900155e-06], ['s.push_back(\'"\');', 3.4019391052900155e-06], ['bytes;', 3.4019391052900155e-06], ['collects', 3.4019391052900155e-06], ['[...]byte.', 3.4019391052900155e-06], ['length_expr', 3.4019391052900155e-06], ['Expression::make_integer_ul(s.length(),', 3.4019391052900155e-06], ['gogo->lookup_global("byte")->type_value();', 3.4019391052900155e-06], ['Type::make_array_type(byte_type,', 3.4019391052900155e-06], ['length_expr);', 3.4019391052900155e-06], ['bytes->push_back(Expression::make_integer_ul(c,', 3.4019391052900155e-06], ['Expression::make_composite_literal(array_type,', 3.4019391052900155e-06], ['Variable(array_type,', 3.4019391052900155e-06], ['"fieldtrack.%d",', 3.4019391052900155e-06], ['gogo->add_variable(buf,', 3.4019391052900155e-06], ['Expression::make_var_reference(no,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::FIELDTRACK,', 3.4019391052900155e-06], ['strings,', 3.4019391052900155e-06], ['executable', 3.4019391052900155e-06], ['function->func_value()->set_in_unique_section();', 3.4019391052900155e-06], ['var->set_in_unique_section();', 3.4019391052900155e-06], ['Field_reference_expression::do_type()', 3.4019391052900155e-06], ['struct_type->field(this->field_index_)->type();', 3.4019391052900155e-06], ['Field_reference_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['go_assert(struct_type->field(this->field_index_)', 3.4019391052900155e-06], ['Field_reference_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['bstruct', 3.4019391052900155e-06], ['context->gogo()->backend()->struct_field_expression(bstruct,', 3.4019391052900155e-06], ['this->field_index_,', 3.4019391052900155e-06], ['Field_reference_expression::do_dump_expression(', 3.4019391052900155e-06], ['this->field_index_;', 3.4019391052900155e-06], ['Expression::make_field_reference(Expression*', 3.4019391052900155e-06], ['Field_reference_expression(expr,', 3.4019391052900155e-06], ['Interface_field_reference_expression.', 3.4019391052900155e-06], ['Interface_field_reference_expression::get_function()', 3.4019391052900155e-06], ['(ref->type()->points_to()', 3.4019391052900155e-06], ['Expression::make_dereference(ref,', 3.4019391052900155e-06], ['Expression::make_interface_info(ref,', 3.4019391052900155e-06], ['mtable_type', 3.4019391052900155e-06], ['mtable->type()->points_to()->struct_type();', 3.4019391052900155e-06], ['mtable_type->find_local_field(name,', 3.4019391052900155e-06], ['go_assert(field', 3.4019391052900155e-06], ['Expression::make_field_reference(mtable,', 3.4019391052900155e-06], ['Interface_field_reference_expression::get_underlying_object()', 3.4019391052900155e-06], ['(expr->type()->points_to()', 3.4019391052900155e-06], ['Expression::make_dereference(expr,', 3.4019391052900155e-06], ['Expression::make_interface_info(expr,', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_type()', 3.4019391052900155e-06], ['expr_type->points_to();', 3.4019391052900155e-06], ['expr_type->interface_type();', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_determine_type(const', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!type->is_error_type())', 3.4019391052900155e-06], ['interface",', 3.4019391052900155e-06], ['Gogo::message_name(this->name_).c_str());', 3.4019391052900155e-06], ['Interface_field_reference_expression::Interface_method_thunks', 3.4019391052900155e-06], ['Interface_field_reference_expression::interface_method_thunks;', 3.4019391052900155e-06], ['Interface_field_reference_expression::create_thunk(Gogo*', 3.4019391052900155e-06], ['std::pair<Interface_type*,', 3.4019391052900155e-06], ['Method_thunks*>', 3.4019391052900155e-06], ['val(type,', 3.4019391052900155e-06], ['std::pair<Interface_method_thunks::iterator,', 3.4019391052900155e-06], ['Interface_field_reference_expression::interface_method_thunks.insert(val);', 3.4019391052900155e-06], ['Method_thunks();', 3.4019391052900155e-06], ['(Method_thunks::const_iterator', 3.4019391052900155e-06], ['ins.first->second->begin();', 3.4019391052900155e-06], ['ins.first->second->end();', 3.4019391052900155e-06], ['(p->first', 3.4019391052900155e-06], ['type->location();', 3.4019391052900155e-06], ['method_id', 3.4019391052900155e-06], ['type->find_method(name);', 3.4019391052900155e-06], ['(method_id', 3.4019391052900155e-06], ['method_id->type()->function_type();', 3.4019391052900155e-06], ['*ifre', 3.4019391052900155e-06], ['Expression::make_interface_field_reference(arg,', 3.4019391052900155e-06], ['Expression::make_call(ifre,', 3.4019391052900155e-06], ['ins.first->second->push_back(std::make_pair(name,', 3.4019391052900155e-06], ['new_no));', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->expr_->type()->interface_type();', 3.4019391052900155e-06], ['Interface_field_reference_expression::create_thunk(context->gogo(),', 3.4019391052900155e-06], ['earlier,', 3.4019391052900155e-06], ['this->expr_->type(),', 3.4019391052900155e-06], ['vals->push_back(this->expr_);', 3.4019391052900155e-06], ['Expression::make_heap_expression(expr,', 3.4019391052900155e-06], ['bnil_check', 3.4019391052900155e-06], ['nil_check->get_backend(context);', 3.4019391052900155e-06], ['bcrash', 3.4019391052900155e-06], ['bcond', 3.4019391052900155e-06], ['bnil_check,', 3.4019391052900155e-06], ['bcrash,', 3.4019391052900155e-06], ['cond_statement', 3.4019391052900155e-06], ['bcond);', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(cond_statement,', 3.4019391052900155e-06], ['Interface_field_reference_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_interface_field_reference(Expression*', 3.4019391052900155e-06], ['Interface_field_reference_expression(expr,', 3.4019391052900155e-06], ['selector.', 3.4019391052900155e-06], ['LEFT.NAME.', 3.4019391052900155e-06], ['Selector_expression', 3.4019391052900155e-06], ['Selector_expression(Expression*', 3.4019391052900155e-06], ['Parser_expression(EXPRESSION_SELECTOR,', 3.4019391052900155e-06], ['left_(left),', 3.4019391052900155e-06], ['name_(name)', 3.4019391052900155e-06], ['Selector_expression(this->left_->copy(),', 3.4019391052900155e-06], ['lower_method_expression(Gogo*);', 3.4019391052900155e-06], ['left_;', 3.4019391052900155e-06], ['name_;', 3.4019391052900155e-06], ['Selector_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['this->lower_method_expression(gogo);', 3.4019391052900155e-06], ['left->type(),', 3.4019391052900155e-06], ['T.M', 3.4019391052900155e-06], ['(*T).M.', 3.4019391052900155e-06], ['Selector_expression::lower_method_expression(Gogo*', 3.4019391052900155e-06], ['name(this->name_);', 3.4019391052900155e-06], ['is_pointer;', 3.4019391052900155e-06], ['("method', 3.4019391052900155e-06], ['"pointer', 3.4019391052900155e-06], ['nt->method_function(name,', 3.4019391052900155e-06], ['!is_pointer)', 3.4019391052900155e-06], ['nt->interface_type();', 3.4019391052900155e-06], ['it->find_method(name);', 3.4019391052900155e-06], ['((method', 3.4019391052900155e-06], ['(left_type->named_type()', 3.4019391052900155e-06], ['(!is_ambiguous)', 3.4019391052900155e-06], ['ambiguous', 3.4019391052900155e-06], ['nt->message_name().c_str());', 3.4019391052900155e-06], ['!is_pointer', 3.4019391052900155e-06], ['!method->is_value_method())', 3.4019391052900155e-06], ['(use', 3.4019391052900155e-06], ['%<(*%s).%s%>)",', 3.4019391052900155e-06], ['method_type;', 3.4019391052900155e-06], ['go_assert(method_type->is_method());', 3.4019391052900155e-06], ['imethod->type()->function_type();', 3.4019391052900155e-06], ['go_assert(method_type', 3.4019391052900155e-06], ['!method_type->is_method());', 3.4019391052900155e-06], ['"$this";', 3.4019391052900155e-06], ['parameters->push_back(Typed_identifier(receiver_name,', 3.4019391052900155e-06], ['method_parameters', 3.4019391052900155e-06], ['method_type->parameters();', 3.4019391052900155e-06], ['(method_parameters', 3.4019391052900155e-06], ['method_parameters->begin();', 3.4019391052900155e-06], ['method_parameters->end();', 3.4019391052900155e-06], ['(!p->name().empty())', 3.4019391052900155e-06], ['parameters->push_back(*p);', 3.4019391052900155e-06], ['"$param%d",', 3.4019391052900155e-06], ['parameters->push_back(Typed_identifier(buf,', 3.4019391052900155e-06], ['method_results', 3.4019391052900155e-06], ['method_type->results();', 3.4019391052900155e-06], ['(method_results', 3.4019391052900155e-06], ['method_results->begin();', 3.4019391052900155e-06], ['method_results->end();', 3.4019391052900155e-06], ['results->push_back(*p);', 3.4019391052900155e-06], ['(method_type->is_varargs())', 3.4019391052900155e-06], ['fntype->set_is_varargs();', 3.4019391052900155e-06], ['(method->needs_stub_method()', 3.4019391052900155e-06], ['method->stub_object()', 3.4019391052900155e-06], ['method->named_object());', 3.4019391052900155e-06], ['Expression::make_func_reference(mno,', 3.4019391052900155e-06], ['Expression::make_cast(fntype,', 3.4019391052900155e-06], ['f,', 3.4019391052900155e-06], ['static_cast<Type_conversion_expression*>(f);', 3.4019391052900155e-06], ['tce->set_may_convert_function_types();', 3.4019391052900155e-06], ['gogo->start_function(gogo->thunk_name(),', 3.4019391052900155e-06], ['gogo->lookup(receiver_name,', 3.4019391052900155e-06], ['Expression::make_var_reference(vno,', 3.4019391052900155e-06], ['ve,', 3.4019391052900155e-06], ['Expression::make_interface_field_reference(ve,', 3.4019391052900155e-06], ['(bm->is_error_expression())', 3.4019391052900155e-06], ['(parameters->size()', 3.4019391052900155e-06], ['args->push_back(Expression::make_var_reference(vno,', 3.4019391052900155e-06], ['Expression::make_call(bm,', 3.4019391052900155e-06], ['method_type->is_varargs(),', 3.4019391052900155e-06], ['gogo->flatten_block(no,', 3.4019391052900155e-06], ['Expression::make_func_reference(no,', 3.4019391052900155e-06], ['Selector_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_selector(Expression*', 3.4019391052900155e-06], ['Selector_expression(left,', 3.4019391052900155e-06], ['Allocation_expression.', 3.4019391052900155e-06], ['Allocation_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Allocation_expression::do_type()', 3.4019391052900155e-06], ['Allocation_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!this->type_->in_heap())', 3.4019391052900155e-06], ['Allocation_expression::do_copy()', 3.4019391052900155e-06], ['Allocation_expression*', 3.4019391052900155e-06], ['Allocation_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['alloc->set_allocate_on_stack();', 3.4019391052900155e-06], ['alloc;', 3.4019391052900155e-06], ['Allocation_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['gogo->backend()->var_expression(temp,', 3.4019391052900155e-06], ['gogo->backend()->address_expression(ret,', 3.4019391052900155e-06], ['gogo->allocate_memory(this->type_,', 3.4019391052900155e-06], ['gogo->backend()->pointer_type(btype);', 3.4019391052900155e-06], ['gogo->backend()->convert_expression(pbtype,', 3.4019391052900155e-06], ['Allocation_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"new(";', 3.4019391052900155e-06], ['Expression::make_allocation(Type*', 3.4019391052900155e-06], ['Allocation_expression(type,', 3.4019391052900155e-06], ['Ordered_value_list.', 3.4019391052900155e-06], ['Ordered_value_list::traverse_vals(Traverse*', 3.4019391052900155e-06], ['(this->traverse_order_', 3.4019391052900155e-06], ['(this->vals_->traverse(traverse)', 3.4019391052900155e-06], ['this->traverse_order_->begin();', 3.4019391052900155e-06], ['this->traverse_order_->end();', 3.4019391052900155e-06], ['(Expression::traverse(&this->vals_->at(*p),', 3.4019391052900155e-06], ['Struct_construction_expression.', 3.4019391052900155e-06], ['Struct_construction_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Struct_construction_expression::is_constant_struct()', 3.4019391052900155e-06], ['Struct_construction_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['Struct_construction_expression::do_determine_type(const', 3.4019391052900155e-06], ['subcontext(pf->type(),', 3.4019391052900155e-06], ['elsewhere;', 3.4019391052900155e-06], ['(*pv)->determine_type_no_context();', 3.4019391052900155e-06], ['Struct_construction_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(this->vals()->size()', 3.4019391052900155e-06], ['st->field_count())', 3.4019391052900155e-06], ['(!Type::are_assignable(pf->type(),', 3.4019391052900155e-06], ['go_assert(pv', 3.4019391052900155e-06], ['this->vals()->end());', 3.4019391052900155e-06], ['Struct_construction_expression::do_copy()', 3.4019391052900155e-06], ['Struct_construction_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['(this->traverse_order()', 3.4019391052900155e-06], ['ret->set_traverse_order(this->traverse_order());', 3.4019391052900155e-06], ['Struct_construction_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['(this->is_constant_struct()', 3.4019391052900155e-06], ['Struct_construction_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['fbtype', 3.4019391052900155e-06], ['pf->type()->get_backend(gogo);', 3.4019391052900155e-06], ['pf->type(),', 3.4019391052900155e-06], ['init.push_back(val->get_backend(context));', 3.4019391052900155e-06], ['(this->type_->struct_type()->has_padding())', 3.4019391052900155e-06], ['Feed', 3.4019391052900155e-06], ['*fbtype', 3.4019391052900155e-06], ['Struct_construction_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['Struct_construction_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_struct_composite_literal(Type*', 3.4019391052900155e-06], ['go_assert(type->struct_type()', 3.4019391052900155e-06], ['Array_construction_expression.', 3.4019391052900155e-06], ['Array_construction_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Array_construction_expression::is_constant_array()', 3.4019391052900155e-06], ['Array_construction_expression::do_is_static_initializer()', 3.4019391052900155e-06], ['Array_construction_expression::do_determine_type(const', 3.4019391052900155e-06], ['subcontext(this->type_->array_type()->element_type(),', 3.4019391052900155e-06], ['Array_construction_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['this->type_->array_type();', 3.4019391052900155e-06], ['!Type::are_assignable(element_type,', 3.4019391052900155e-06], ['Array_construction_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['(this->is_constant_array()', 3.4019391052900155e-06], ['Array_construction_expression::get_constructor(Translate_context*', 3.4019391052900155e-06], ['array_btype)', 3.4019391052900155e-06], ['this->type_->array_type()->element_type();', 3.4019391052900155e-06], ['long>', 3.4019391052900155e-06], ['indexes.push_back(i);', 3.4019391052900155e-06], ['indexes.push_back(*pi);', 3.4019391052900155e-06], ['ebtype', 3.4019391052900155e-06], ['element_type->get_backend(gogo);', 3.4019391052900155e-06], ['*zv', 3.4019391052900155e-06], ['gogo->backend()->zero_expression(ebtype);', 3.4019391052900155e-06], ['vals.push_back(zv);', 3.4019391052900155e-06], ['vals.push_back(val_expr->get_backend(context));', 3.4019391052900155e-06], ['gogo->backend()->array_constructor_expression(array_btype,', 3.4019391052900155e-06], ['Array_construction_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['"%lu",', 3.4019391052900155e-06], ['*pi);', 3.4019391052900155e-06], ['efb->write_c_string(":");', 3.4019391052900155e-06], ['Array_construction_expression::do_dump_expression(', 3.4019391052900155e-06], ['this->type_->array_type()->length();', 3.4019391052900155e-06], ['"["', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(length);', 3.4019391052900155e-06], ['this->dump_slice_storage_expression(ast_dump_context);', 3.4019391052900155e-06], ['this->indexes_->end();', 3.4019391052900155e-06], ['(pi', 3.4019391052900155e-06], ['this->indexes_->begin())', 3.4019391052900155e-06], ['*pi', 3.4019391052900155e-06], ["':';", 3.4019391052900155e-06], ['ast_dump_context->dump_expression(*pv);', 3.4019391052900155e-06], ['Fixed_array_construction_expression.', 3.4019391052900155e-06], ['Fixed_array_construction_expression::Fixed_array_construction_expression(', 3.4019391052900155e-06], ['Array_construction_expression(EXPRESSION_FIXED_ARRAY_CONSTRUCTION,', 3.4019391052900155e-06], ['Fixed_array_construction_expression::do_copy()', 3.4019391052900155e-06], ['this->type()->copy_expressions();', 3.4019391052900155e-06], ['Fixed_array_construction_expression(t,', 3.4019391052900155e-06], ['Fixed_array_construction_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['type->get_backend(context->gogo());', 3.4019391052900155e-06], ['this->get_constructor(context,', 3.4019391052900155e-06], ['btype);', 3.4019391052900155e-06], ['Expression::make_array_composite_literal(Type*', 3.4019391052900155e-06], ['Slice_construction_expression.', 3.4019391052900155e-06], ['Slice_construction_expression::Slice_construction_expression(', 3.4019391052900155e-06], ['Array_construction_expression(EXPRESSION_SLICE_CONSTRUCTION,', 3.4019391052900155e-06], ['valtype_(NULL),', 3.4019391052900155e-06], ['array_val_(NULL),', 3.4019391052900155e-06], ['slice_storage_(NULL),', 3.4019391052900155e-06], ['storage_escapes_(true)', 3.4019391052900155e-06], ['vals->empty())', 3.4019391052900155e-06], ['(this->indexes()', 3.4019391052900155e-06], ['Expression::make_integer_ul(lenval,', 3.4019391052900155e-06], ['this->valtype_', 3.4019391052900155e-06], ['array_type;', 3.4019391052900155e-06], ['Slice_construction_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(this->Array_construction_expression::do_traverse(traverse)', 3.4019391052900155e-06], ['(Type::traverse(this->valtype_,', 3.4019391052900155e-06], ['Expression::traverse(&this->array_val_,', 3.4019391052900155e-06], ['Expression::traverse(&this->slice_storage_,', 3.4019391052900155e-06], ['flattening,', 3.4019391052900155e-06], ['do_get_backend().', 3.4019391052900155e-06], ['Slice_construction_expression::create_array_val()', 3.4019391052900155e-06], ['this->type()->array_type();', 3.4019391052900155e-06], ['go_assert(this->valtype_', 3.4019391052900155e-06], ['this->vals();', 3.4019391052900155e-06], ['Fixed_array_construction_expression(', 3.4019391052900155e-06], ['this->valtype_,', 3.4019391052900155e-06], ['Slice_construction_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['(this->type()->array_type()', 3.4019391052900155e-06], ['this->Array_construction_expression::do_flatten(gogo,', 3.4019391052900155e-06], ['stack-allocated', 3.4019391052900155e-06], ['(!this->storage_escapes_', 3.4019391052900155e-06], ['go_assert(this->array_val_);', 3.4019391052900155e-06], ['Statement::make_temporary(this->valtype_,', 3.4019391052900155e-06], ['storeage', 3.4019391052900155e-06], ['temp,', 3.4019391052900155e-06], ['dump).', 3.4019391052900155e-06], ['Slice_construction_expression::', 3.4019391052900155e-06], ['dump_slice_storage_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"storage="', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->slice_storage_);', 3.4019391052900155e-06], ['Slice_construction_expression::do_copy()', 3.4019391052900155e-06], ['Slice_construction_expression(this->type()->copy_expressions(),', 3.4019391052900155e-06], ['Slice_construction_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->array_val_->is_static_initializer();', 3.4019391052900155e-06], ['context->function()', 3.4019391052900155e-06], ['!is_static_initializer;', 3.4019391052900155e-06], ['space;', 3.4019391052900155e-06], ['go_assert(!this->storage_escapes_);', 3.4019391052900155e-06], ['this->slice_storage_,', 3.4019391052900155e-06], ['(!copy_to_heap)', 3.4019391052900155e-06], ['once.', 3.4019391052900155e-06], ['space->unary_expression()->set_is_slice_init();', 3.4019391052900155e-06], ['go_assert(this->storage_escapes_', 3.4019391052900155e-06], ['Expression::make_heap_expression(this->array_val_,', 3.4019391052900155e-06], ['this->valtype_->array_type();', 3.4019391052900155e-06], ['at->length();', 3.4019391052900155e-06], ['slice_val', 3.4019391052900155e-06], ['Expression::make_slice_value(this->type(),', 3.4019391052900155e-06], ['slice_val->get_backend(context);', 3.4019391052900155e-06], ['Expression::make_slice_composite_literal(Type*', 3.4019391052900155e-06], ['Map_construction_expression.', 3.4019391052900155e-06], ['Map_construction_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['this->vals_->traverse(traverse)', 3.4019391052900155e-06], ['__go_construct_map.', 3.4019391052900155e-06], ['Map_construction_expression::do_flatten(Gogo*', 3.4019391052900155e-06], ['(!this->is_error_expression()', 3.4019391052900155e-06], ['val_type);', 3.4019391052900155e-06], ['value_pairs', 3.4019391052900155e-06], ['key_value_pair', 3.4019391052900155e-06], ['(key->is_error_expression()', 3.4019391052900155e-06], ['key->type()->is_error_type())', 3.4019391052900155e-06], ['(key->type()->interface_type()', 3.4019391052900155e-06], ['!key->is_variable())', 3.4019391052900155e-06], ['(val->is_error_expression()', 3.4019391052900155e-06], ['val->type()->is_error_type())', 3.4019391052900155e-06], ['(val->type()->interface_type()', 3.4019391052900155e-06], ['!val->is_variable())', 3.4019391052900155e-06], ['key_value_pair->push_back(key);', 3.4019391052900155e-06], ['key_value_pair->push_back(val);', 3.4019391052900155e-06], ['value_pairs->push_back(', 3.4019391052900155e-06], ['Expression::make_struct_composite_literal(this->element_type_,', 3.4019391052900155e-06], ['key_value_pair,', 3.4019391052900155e-06], ['ctor_type', 3.4019391052900155e-06], ['Type::make_array_type(this->element_type_,', 3.4019391052900155e-06], ['ctor_type->set_is_array_incomparable();', 3.4019391052900155e-06], ['Fixed_array_construction_expression(ctor_type,', 3.4019391052900155e-06], ['value_pairs,', 3.4019391052900155e-06], ['constructor->issue_nil_check();', 3.4019391052900155e-06], ['this->constructor_temp_->set_is_address_taken();', 3.4019391052900155e-06], ['inserter->insert(this->constructor_temp_);', 3.4019391052900155e-06], ['Map_construction_expression::do_determine_type(const', 3.4019391052900155e-06], ['key_context(mt->key_type(),', 3.4019391052900155e-06], ['val_context(mt->val_type(),', 3.4019391052900155e-06], ['(*pv)->determine_type(&key_context);', 3.4019391052900155e-06], ['(*pv)->determine_type(&val_context);', 3.4019391052900155e-06], ['Map_construction_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(!Type::are_assignable(key_type,', 3.4019391052900155e-06], ['(!Type::are_assignable(val_type,', 3.4019391052900155e-06], ['construction"),', 3.4019391052900155e-06], ['Map_construction_expression::do_copy()', 3.4019391052900155e-06], ['Map_construction_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['Map_construction_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['ventries;', 3.4019391052900155e-06], ['this->vals_->empty())', 3.4019391052900155e-06], ['go_assert(this->constructor_temp_', 3.4019391052900155e-06], ['this->vals_->size()', 3.4019391052900155e-06], ['ctor_ref', 3.4019391052900155e-06], ['Expression::make_temporary_reference(this->constructor_temp_,', 3.4019391052900155e-06], ['ctor_ref,', 3.4019391052900155e-06], ['(this->element_type_', 3.4019391052900155e-06], ['mt->val_type());', 3.4019391052900155e-06], ['uintptr_t', 3.4019391052900155e-06], ['uintptr_t,', 3.4019391052900155e-06], ['entry_size', 3.4019391052900155e-06], ['Expression::make_type_info(this->element_type_,', 3.4019391052900155e-06], ['field_index;', 3.4019391052900155e-06], ['valfield', 3.4019391052900155e-06], ['this->element_type_->find_local_field("__val",', 3.4019391052900155e-06], ['&field_index);', 3.4019391052900155e-06], ['val_offset', 3.4019391052900155e-06], ['Expression::make_struct_field_offset(this->element_type_,', 3.4019391052900155e-06], ['valfield);', 3.4019391052900155e-06], ['map_ctor', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::CONSTRUCT_MAP,', 3.4019391052900155e-06], ['entry_size,', 3.4019391052900155e-06], ['val_offset,', 3.4019391052900155e-06], ['ventries);', 3.4019391052900155e-06], ['map_ctor->get_backend(context);', 3.4019391052900155e-06], ['Map_construction_expression::do_export(Export_function_body*', 3.4019391052900155e-06], ['Map_construction_expression::do_dump_expression(', 3.4019391052900155e-06], ['Composite_literal_expression.', 3.4019391052900155e-06], ['Composite_literal_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['itself."', 3.4019391052900155e-06], ['bug482.go', 3.4019391052900155e-06], ['(this->has_keys_', 3.4019391052900155e-06], ['resolvable', 3.4019391052900155e-06], ['Type::TYPE_NAMED)', 3.4019391052900155e-06], ['type->named_type()->real_type();', 3.4019391052900155e-06], ['Type::TYPE_FORWARD)', 3.4019391052900155e-06], ['this->vals_->traverse(traverse);', 3.4019391052900155e-06], ['Composite_literal_expression::do_lower(Gogo*', 3.4019391052900155e-06], ['type->deref();', 3.4019391052900155e-06], ['(!type->is_error())', 3.4019391052900155e-06], ['("may', 3.4019391052900155e-06], ['(type->struct_type()', 3.4019391052900155e-06], ['this->lower_struct(gogo,', 3.4019391052900155e-06], ['this->lower_array(type);', 3.4019391052900155e-06], ['this->lower_map(gogo,', 3.4019391052900155e-06], ['(is_pointer)', 3.4019391052900155e-06], ['Composite_literal_expression::lower_struct(Gogo*', 3.4019391052900155e-06], ['type->named_type()', 3.4019391052900155e-06], ['st->fields()->begin();', 3.4019391052900155e-06], ['st->fields()->end();', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(pf->field_name())', 3.4019391052900155e-06], ['pf->is_embedded_builtin(gogo))', 3.4019391052900155e-06], ['Gogo::message_name(pf->field_name()).c_str(),', 3.4019391052900155e-06], ['field_count', 3.4019391052900155e-06], ['st->field_count();', 3.4019391052900155e-06], ['vals(field_count);', 3.4019391052900155e-06], ['new(std::vector<unsigned', 3.4019391052900155e-06], ['long>);', 3.4019391052900155e-06], ['name_expr', 3.4019391052900155e-06], ['(name_expr', 3.4019391052900155e-06], ['"mixture', 3.4019391052900155e-06], ['initializers");', 3.4019391052900155e-06], ['(name_expr->classification())', 3.4019391052900155e-06], ['EXPRESSION_UNKNOWN_REFERENCE:', 3.4019391052900155e-06], ['name_expr->unknown_expression()->name();', 3.4019391052900155e-06], ['name_expr->unknown_expression()->named_object();', 3.4019391052900155e-06], ['no->package()', 3.4019391052900155e-06], ['type->named_type()->named_object()->package())', 3.4019391052900155e-06], ['no->package()->forget_usage(name_expr);', 3.4019391052900155e-06], ['EXPRESSION_CONST_REFERENCE:', 3.4019391052900155e-06], ['static_cast<Const_expression*>(name_expr)->named_object();', 3.4019391052900155e-06], ['EXPRESSION_TYPE:', 3.4019391052900155e-06], ['name_expr->type();', 3.4019391052900155e-06], ['name_expr->var_expression()->named_object();', 3.4019391052900155e-06], ['name_expr->enclosed_var_expression()->variable();', 3.4019391052900155e-06], ['EXPRESSION_FUNC_REFERENCE:', 3.4019391052900155e-06], ['name_expr->func_expression()->named_object();', 3.4019391052900155e-06], ['(bad_key)', 3.4019391052900155e-06], ['name_expr;', 3.4019391052900155e-06], ['(!Gogo::is_hidden_name(name)', 3.4019391052900155e-06], ["'z')", 3.4019391052900155e-06], ['gno', 3.4019391052900155e-06], ['gogo->lookup_global(name.c_str());', 3.4019391052900155e-06], ['(gno', 3.4019391052900155e-06], ['gogo->pack_hidden_name(name,', 3.4019391052900155e-06], ['sf', 3.4019391052900155e-06], ['st->find_local_field(name,', 3.4019391052900155e-06], ['(sf', 3.4019391052900155e-06], ['(vals[index]', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(sf->field_name())', 3.4019391052900155e-06], ['sf->is_embedded_builtin(gogo)))', 3.4019391052900155e-06], ['Gogo::message_name(sf->field_name()).c_str(),', 3.4019391052900155e-06], ['vals[index]', 3.4019391052900155e-06], ['traverse_order->push_back(static_cast<unsigned', 3.4019391052900155e-06], ['long>(index));', 3.4019391052900155e-06], ['(!this->all_are_names_)', 3.4019391052900155e-06], ['weird', 3.4019391052900155e-06], ['bug462', 3.4019391052900155e-06], ['(external_expr', 3.4019391052900155e-06], ['go_error_at(external_expr->location(),', 3.4019391052900155e-06], ['external_no->message_name().c_str(),', 3.4019391052900155e-06], ['list->reserve(field_count);', 3.4019391052900155e-06], ['field_count;', 3.4019391052900155e-06], ['list->push_back(vals[i]);', 3.4019391052900155e-06], ['ret->set_traverse_order(traverse_order);', 3.4019391052900155e-06], ['Index/value/traversal-order', 3.4019391052900155e-06], ['triple.', 3.4019391052900155e-06], ['IVT_triple', 3.4019391052900155e-06], ['traversal_order;', 3.4019391052900155e-06], ['IVT_triple(unsigned', 3.4019391052900155e-06], ['index(i),', 3.4019391052900155e-06], ['traversal_order(to),', 3.4019391052900155e-06], ['expr(e)', 3.4019391052900155e-06], ['IVT_triple&', 3.4019391052900155e-06], ['this->index', 3.4019391052900155e-06], ['other.index;', 3.4019391052900155e-06], ['Composite_literal_expression::lower_array(Type*', 3.4019391052900155e-06], ['this->vals_);', 3.4019391052900155e-06], ['long>;', 3.4019391052900155e-06], ['indexes->reserve(this->vals_->size());', 3.4019391052900155e-06], ['vals->reserve(this->vals_->size());', 3.4019391052900155e-06], ['index_expr', 3.4019391052900155e-06], ['(index_expr', 3.4019391052900155e-06], ['(!indexes->empty())', 3.4019391052900155e-06], ['(indexes->empty()', 3.4019391052900155e-06], ['!vals->empty())', 3.4019391052900155e-06], ['indexes->push_back(i);', 3.4019391052900155e-06], ['(!index_expr->numeric_constant_value(&nc))', 3.4019391052900155e-06], ['(nc.to_unsigned_long(&index))', 3.4019391052900155e-06], ['negative");', 3.4019391052900155e-06], ['ntype', 3.4019391052900155e-06], ['ntype->integer_type();', 3.4019391052900155e-06], ['(sizeof(index)', 3.4019391052900155e-06], ['static_cast<size_t>(inttype->bits()', 3.4019391052900155e-06], ['(inttype->bits()', 3.4019391052900155e-06], ['(!indexes->empty()', 3.4019391052900155e-06], ['indexes->back())', 3.4019391052900155e-06], ['++index;', 3.4019391052900155e-06], ['(indexes->empty())', 3.4019391052900155e-06], ['(indexes_out_of_order)', 3.4019391052900155e-06], ['std::vector<IVT_triple>', 3.4019391052900155e-06], ['v.reserve(indexes->size());', 3.4019391052900155e-06], ['indexes->begin();', 3.4019391052900155e-06], ['torder', 3.4019391052900155e-06], ['++torder)', 3.4019391052900155e-06], ['v.push_back(IVT_triple(*pi,', 3.4019391052900155e-06], ['torder,', 3.4019391052900155e-06], ['*pe));', 3.4019391052900155e-06], ['v.end());', 3.4019391052900155e-06], ['indexes->reserve(v.size());', 3.4019391052900155e-06], ['vals->reserve(v.size());', 3.4019391052900155e-06], ['traverse_order->reserve(v.size());', 3.4019391052900155e-06], ['(V::const_iterator', 3.4019391052900155e-06], ['indexes->push_back(p->index);', 3.4019391052900155e-06], ['vals->push_back(p->expr);', 3.4019391052900155e-06], ['traverse_order->push_back(p->traversal_order);', 3.4019391052900155e-06], ['Array_construction_expression*', 3.4019391052900155e-06], ['ace', 3.4019391052900155e-06], ['ret->array_literal();', 3.4019391052900155e-06], ['(ace', 3.4019391052900155e-06], ['ace->set_traverse_order(traverse_order);', 3.4019391052900155e-06], ['[...]{...}.', 3.4019391052900155e-06], ['Composite_literal_expression::make_array(', 3.4019391052900155e-06], ['vals)', 3.4019391052900155e-06], ['type->array_type();', 3.4019391052900155e-06], ['at->length()->is_nil_expression())', 3.4019391052900155e-06], ['Type::lookup_integer_type("int")->integer_type();', 3.4019391052900155e-06], ['(sizeof(size)', 3.4019391052900155e-06], ['static_cast<size_t>(it->bits()', 3.4019391052900155e-06], ['(it->bits()', 3.4019391052900155e-06], ['elen', 3.4019391052900155e-06], ['Expression::make_integer_ul(size,', 3.4019391052900155e-06], ['Type::make_array_type(at->element_type(),', 3.4019391052900155e-06], ['elen);', 3.4019391052900155e-06], ['!at->length()->is_error_expression()', 3.4019391052900155e-06], ['(at->length()->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['(this->vals_->size()', 3.4019391052900155e-06], ['indexes->back();', 3.4019391052900155e-06], ['(max', 3.4019391052900155e-06], ['("some', 3.4019391052900155e-06], ['"are', 3.4019391052900155e-06], ['Composite_literal_expression::lower_map(Gogo*', 3.4019391052900155e-06], ['nt;', 3.4019391052900155e-06], ['(!this->has_keys_)', 3.4019391052900155e-06], ['keys");', 3.4019391052900155e-06], ['("map', 3.4019391052900155e-06], ['"have', 3.4019391052900155e-06], ['((*p)->unknown_expression()', 3.4019391052900155e-06], ['(*p)->unknown_expression()->clear_is_composite_literal_key();', 3.4019391052900155e-06], ['&*p);', 3.4019391052900155e-06], ['go_assert((*p)->is_error_expression());', 3.4019391052900155e-06], ['(!(*p)->is_constant())', 3.4019391052900155e-06], ['nval;', 3.4019391052900155e-06], ['((*p)->string_constant_value(&sval))', 3.4019391052900155e-06], ['Gogo::hash_string(sval,', 3.4019391052900155e-06], ['st.find(h);', 3.4019391052900155e-06], ['st.end())', 3.4019391052900155e-06], ['st.insert(val);', 3.4019391052900155e-06], ['(*lit)->string_constant_value(&s);', 3.4019391052900155e-06], ['sval)', 3.4019391052900155e-06], ['("duplicate', 3.4019391052900155e-06], ['((*p)->numeric_constant_value(&nval))', 3.4019391052900155e-06], ['nval.hash(0);', 3.4019391052900155e-06], ['nt.find(h);', 3.4019391052900155e-06], ['nt.end())', 3.4019391052900155e-06], ['nt.insert(val);', 3.4019391052900155e-06], ['(*lit)->numeric_constant_value(&rval);', 3.4019391052900155e-06], ['(nval.equals(rval))', 3.4019391052900155e-06], ['Map_construction_expression(type,', 3.4019391052900155e-06], ['Composite_literal_expression::do_copy()', 3.4019391052900155e-06], ['Composite_literal_expression*', 3.4019391052900155e-06], ['Composite_literal_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['this->depth_,', 3.4019391052900155e-06], ['this->has_keys_,', 3.4019391052900155e-06], ['this->all_are_names_,', 3.4019391052900155e-06], ['ret->key_path_', 3.4019391052900155e-06], ['this->key_path_;', 3.4019391052900155e-06], ['Composite_literal_expression::do_dump_expression(', 3.4019391052900155e-06], ['"composite(";', 3.4019391052900155e-06], ['this->has_keys_);', 3.4019391052900155e-06], ['"})";', 3.4019391052900155e-06], ['Expression::make_composite_literal(Type*', 3.4019391052900155e-06], ['Composite_literal_expression(type,', 3.4019391052900155e-06], ['Expression::is_composite_literal()', 3.4019391052900155e-06], ['EXPRESSION_COMPOSITE_LITERAL:', 3.4019391052900155e-06], ['Expression::is_nonconstant_composite_literal()', 3.4019391052900155e-06], ['Struct_construction_expression', 3.4019391052900155e-06], ['*psce', 3.4019391052900155e-06], ['Struct_construction_expression*>(this);', 3.4019391052900155e-06], ['!psce->is_constant_struct();', 3.4019391052900155e-06], ['Fixed_array_construction_expression', 3.4019391052900155e-06], ['Fixed_array_construction_expression*>(this);', 3.4019391052900155e-06], ['Slice_construction_expression', 3.4019391052900155e-06], ['Slice_construction_expression*>(this);', 3.4019391052900155e-06], ['temporary_variable.', 3.4019391052900155e-06], ['Expression::is_variable()', 3.4019391052900155e-06], ['EXPRESSION_TEMPORARY_REFERENCE:', 3.4019391052900155e-06], ['EXPRESSION_SET_AND_USE_TEMPORARY:', 3.4019391052900155e-06], ['Expression::is_local_variable()', 3.4019391052900155e-06], ['this->var_expression();', 3.4019391052900155e-06], ['(no->is_result_variable()', 3.4019391052900155e-06], ['!no->var_value()->is_global()));', 3.4019391052900155e-06], ['Type_guard_expression.', 3.4019391052900155e-06], ['Type_guard_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Type_guard_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['Type_guard_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['(expr_type->interface_type()', 3.4019391052900155e-06], ['(!expr_type->is_error()', 3.4019391052900155e-06], ['this->report_error(_("type', 3.4019391052900155e-06], ['(!expr_type->interface_type()->implements_interface(this->type_,', 3.4019391052900155e-06], ['(!this->type_->is_error())', 3.4019391052900155e-06], ['this->report_error(_("impossible', 3.4019391052900155e-06], ['("impossible', 3.4019391052900155e-06], ['Type_guard_expression::do_copy()', 3.4019391052900155e-06], ['Type_guard_expression(this->expr_->copy(),', 3.4019391052900155e-06], ['Type_guard_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['conversion;', 3.4019391052900155e-06], ['Expression::convert_interface_to_interface(this->type_,', 3.4019391052900155e-06], ['Expression::convert_for_assignment(context->gogo(),', 3.4019391052900155e-06], ['gogo->backend()->convert_expression(bt,', 3.4019391052900155e-06], ['Type_guard_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['Expression::make_type_guard(Expression*', 3.4019391052900155e-06], ['Type_guard_expression(expr,', 3.4019391052900155e-06], ['Heap_expression.', 3.4019391052900155e-06], ['Heap_expression::do_type()', 3.4019391052900155e-06], ['Heap_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['etype->is_error())', 3.4019391052900155e-06], ['Expression::make_allocation(etype,', 3.4019391052900155e-06], ['alloc->allocation_expression()->set_allocate_on_stack();', 3.4019391052900155e-06], ['alloc->get_backend(context);', 3.4019391052900155e-06], ['space_temp', 3.4019391052900155e-06], ['expr_btype', 3.4019391052900155e-06], ['etype->get_backend(gogo);', 3.4019391052900155e-06], ['barrier,', 3.4019391052900155e-06], ['typedmemmove.', 3.4019391052900155e-06], ['Heap_expression', 3.4019391052900155e-06], ['assn;', 3.4019391052900155e-06], ['(!etype->has_pointer()', 3.4019391052900155e-06], ['this->allocate_on_stack_)', 3.4019391052900155e-06], ['gogo->backend()->indirect_expression(expr_btype,', 3.4019391052900155e-06], ['gogo->backend()->assignment_statement(fndecl,', 3.4019391052900155e-06], ['edecl;', 3.4019391052900155e-06], ['btemp', 3.4019391052900155e-06], ['expr_btype,', 3.4019391052900155e-06], ['&edecl);', 3.4019391052900155e-06], ['btempref', 3.4019391052900155e-06], ['gogo->backend()->var_expression(btemp,', 3.4019391052900155e-06], ['gogo->backend()->address_expression(btempref,', 3.4019391052900155e-06], ['Expression::make_type_descriptor(etype,', 3.4019391052900155e-06], ['etype_ptr', 3.4019391052900155e-06], ['Type::make_pointer_type(etype);', 3.4019391052900155e-06], ['elhs', 3.4019391052900155e-06], ['Expression::make_backend(space,', 3.4019391052900155e-06], ['erhs', 3.4019391052900155e-06], ['Expression::make_backend(addr,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::TYPEDMEMMOVE,', 3.4019391052900155e-06], ['elhs,', 3.4019391052900155e-06], ['erhs);', 3.4019391052900155e-06], ['gogo->backend()->expression_statement(fndecl,', 3.4019391052900155e-06], ['bcall);', 3.4019391052900155e-06], ['gogo->backend()->compound_statement(edecl,', 3.4019391052900155e-06], ['gogo->backend()->compound_statement(decl,', 3.4019391052900155e-06], ['assn);', 3.4019391052900155e-06], ['Heap_expression::do_dump_expression(', 3.4019391052900155e-06], ['"&(";', 3.4019391052900155e-06], ['Expression::make_heap_expression(Expression*', 3.4019391052900155e-06], ['Heap_expression(expr,', 3.4019391052900155e-06], ['Receive_expression.', 3.4019391052900155e-06], ['Receive_expression::do_type()', 3.4019391052900155e-06], ['Receive_expression::do_check_types(Gogo*)', 3.4019391052900155e-06], ['this->channel_->type();', 3.4019391052900155e-06], ['(!type->channel_type()->may_receive())', 3.4019391052900155e-06], ['send-only', 3.4019391052900155e-06], ['Flattening', 3.4019391052900155e-06], ['receives.', 3.4019391052900155e-06], ['Receive_expression::do_flatten(Gogo*,', 3.4019391052900155e-06], ['(this->channel_->is_error_expression())', 3.4019391052900155e-06], ['(this->temp_receiver_', 3.4019391052900155e-06], ['this->temp_receiver_', 3.4019391052900155e-06], ['Statement::make_temporary(element_type,', 3.4019391052900155e-06], ['this->temp_receiver_->set_is_address_taken();', 3.4019391052900155e-06], ['inserter->insert(this->temp_receiver_);', 3.4019391052900155e-06], ['Receive_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['go_assert(this->channel_->type()->is_error());', 3.4019391052900155e-06], ['recv_ref', 3.4019391052900155e-06], ['recv_addr,', 3.4019391052900155e-06], ['recv', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::CHANRECV1,', 3.4019391052900155e-06], ['this->channel_,', 3.4019391052900155e-06], ['recv_addr);', 3.4019391052900155e-06], ['Expression::make_compound(recv,', 3.4019391052900155e-06], ['recv_ref,', 3.4019391052900155e-06], ['Receive_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(channel_);', 3.4019391052900155e-06], ['Receive_expression*', 3.4019391052900155e-06], ['Expression::make_receive(Expression*', 3.4019391052900155e-06], ['Receive_expression(channel,', 3.4019391052900155e-06], ['Type_descriptor_expression', 3.4019391052900155e-06], ['Type_descriptor_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_TYPE_DESCRIPTOR,', 3.4019391052900155e-06], ['this->type_->type_descriptor_pointer(context->gogo(),', 3.4019391052900155e-06], ['Type_descriptor_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Type_descriptor_expression::do_dump_expression(', 3.4019391052900155e-06], ['Expression::make_type_descriptor(Type*', 3.4019391052900155e-06], ['Type_descriptor_expression(type,', 3.4019391052900155e-06], ['Garbage', 3.4019391052900155e-06], ['Collection', 3.4019391052900155e-06], ['GC_symbol_expression', 3.4019391052900155e-06], ['GC_symbol_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_GC_SYMBOL,', 3.4019391052900155e-06], ['this->type_->gc_symbol_pointer(context->gogo());', 3.4019391052900155e-06], ['GC_symbol_expression::do_dump_expression(', 3.4019391052900155e-06], ['"gcdata(";', 3.4019391052900155e-06], ['Expression::make_gc_symbol(Type*', 3.4019391052900155e-06], ['GC_symbol_expression(type);', 3.4019391052900155e-06], ['Ptrmask_symbol_expression', 3.4019391052900155e-06], ['Ptrmask_symbol_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_PTRMASK_SYMBOL,', 3.4019391052900155e-06], ['Ptrmask_symbol_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['gcprog,', 3.4019391052900155e-06], ['ptrdata;', 3.4019391052900155e-06], ['(!this->type_->needs_gcprog(gogo,', 3.4019391052900155e-06], ['&ptrsize,', 3.4019391052900155e-06], ['&ptrdata))', 3.4019391052900155e-06], ['this->type_->gc_symbol_pointer(gogo);', 3.4019391052900155e-06], ['this->type_->gc_ptrmask_var(gogo,', 3.4019391052900155e-06], ['ptrdata);', 3.4019391052900155e-06], ['baddr', 3.4019391052900155e-06], ['gogo->backend()->address_expression(bref,', 3.4019391052900155e-06], ['pointer_uint8_type', 3.4019391052900155e-06], ['Type::make_pointer_type(uint8_type);', 3.4019391052900155e-06], ['pointer_uint8_type->get_backend(gogo);', 3.4019391052900155e-06], ['gogo->backend()->convert_expression(ubtype,', 3.4019391052900155e-06], ['baddr,', 3.4019391052900155e-06], ['Ptrmask_symbol_expression::do_dump_expression(', 3.4019391052900155e-06], ['"ptrmask(";', 3.4019391052900155e-06], ['Expression::make_ptrmask_symbol(Type*', 3.4019391052900155e-06], ['Ptrmask_symbol_expression(type);', 3.4019391052900155e-06], ['inefficient', 3.4019391052900155e-06], ['Type_info_expression', 3.4019391052900155e-06], ['Type_info_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_TYPE_INFO,', 3.4019391052900155e-06], ['type_info_(type_info)', 3.4019391052900155e-06], ['type_info_;', 3.4019391052900155e-06], ['chosen', 3.4019391052900155e-06], ['Type_info_expression::do_type()', 3.4019391052900155e-06], ['Type_info_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->type_->backend_type_align(gogo,', 3.4019391052900155e-06], ['this->type_->backend_type_field_align(gogo,', 3.4019391052900155e-06], ['this->type_->backend_type_ptrdata(gogo,', 3.4019391052900155e-06], ['this->type_->descriptor_ptrdata(gogo,', 3.4019391052900155e-06], ['Expression::make_integer_int64(val,', 3.4019391052900155e-06], ['this->type(),', 3.4019391052900155e-06], ['Type_info_expression::do_dump_expression(', 3.4019391052900155e-06], ['"typeinfo(";', 3.4019391052900155e-06], ['(this->type_info_', 3.4019391052900155e-06], ['TYPE_INFO_ALIGNMENT', 3.4019391052900155e-06], ['"alignment"', 3.4019391052900155e-06], ['TYPE_INFO_FIELD_ALIGNMENT', 3.4019391052900155e-06], ['"field', 3.4019391052900155e-06], ['alignment"', 3.4019391052900155e-06], ['TYPE_INFO_SIZE', 3.4019391052900155e-06], ['"size"', 3.4019391052900155e-06], ['TYPE_INFO_BACKEND_PTRDATA', 3.4019391052900155e-06], ['"backend_ptrdata"', 3.4019391052900155e-06], ['TYPE_INFO_DESCRIPTOR_PTRDATA', 3.4019391052900155e-06], ['"descriptor_ptrdata"', 3.4019391052900155e-06], ['Expression::make_type_info(Type*', 3.4019391052900155e-06], ['Type_info_expression(type,', 3.4019391052900155e-06], ['type_info);', 3.4019391052900155e-06], ['Slice_info_expression', 3.4019391052900155e-06], ['Slice_info_expression(Expression*', 3.4019391052900155e-06], ['Expression(EXPRESSION_SLICE_INFO,', 3.4019391052900155e-06], ['slice_(slice),', 3.4019391052900155e-06], ['slice_info_(slice_info)', 3.4019391052900155e-06], ['Slice_info_expression(this->slice_->copy(),', 3.4019391052900155e-06], ['this->slice_->issue_nil_check();', 3.4019391052900155e-06], ['slice_;', 3.4019391052900155e-06], ['slice_info_;', 3.4019391052900155e-06], ['Slice_info_expression::do_type()', 3.4019391052900155e-06], ['this->slice_->type()->array_type()->element_type());', 3.4019391052900155e-06], ['Slice_info_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['bslice', 3.4019391052900155e-06], ['this->slice_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->struct_field_expression(bslice,', 3.4019391052900155e-06], ['Slice_info_expression::do_dump_expression(', 3.4019391052900155e-06], ['"sliceinfo(";', 3.4019391052900155e-06], ['this->slice_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['(this->slice_info_', 3.4019391052900155e-06], ['SLICE_INFO_VALUE_POINTER', 3.4019391052900155e-06], ['"values"', 3.4019391052900155e-06], ['SLICE_INFO_LENGTH', 3.4019391052900155e-06], ['SLICE_INFO_CAPACITY', 3.4019391052900155e-06], ['"capacity', 3.4019391052900155e-06], ['Expression::make_slice_info(Expression*', 3.4019391052900155e-06], ['Slice_info_expression(slice,', 3.4019391052900155e-06], ['Slice_value_expression.', 3.4019391052900155e-06], ['Slice_value_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Expression::traverse(&this->valmem_,', 3.4019391052900155e-06], ['Expression::traverse(&this->len_,', 3.4019391052900155e-06], ['Slice_value_expression::do_copy()', 3.4019391052900155e-06], ['Slice_value_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['this->valmem_->copy(),', 3.4019391052900155e-06], ['this->len_->copy(),', 3.4019391052900155e-06], ['this->cap_->copy(),', 3.4019391052900155e-06], ['Slice_value_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['vals(3);', 3.4019391052900155e-06], ['this->valmem_->get_backend(context);', 3.4019391052900155e-06], ['this->len_->get_backend(context);', 3.4019391052900155e-06], ['vals[2]', 3.4019391052900155e-06], ['Slice_value_expression::do_dump_expression(', 3.4019391052900155e-06], ['"slicevalue(";', 3.4019391052900155e-06], ['"values:', 3.4019391052900155e-06], ['this->valmem_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['this->len_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['capacity:', 3.4019391052900155e-06], ['this->cap_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['Expression::make_slice_value(Type*', 3.4019391052900155e-06], ['at,', 3.4019391052900155e-06], ['go_assert(at->is_slice_type());', 3.4019391052900155e-06], ['go_assert(valmem->is_nil_expression()', 3.4019391052900155e-06], ['(at->array_type()->element_type()', 3.4019391052900155e-06], ['valmem->type()->points_to()));', 3.4019391052900155e-06], ['Slice_value_expression(at,', 3.4019391052900155e-06], ['Interface_info_expression', 3.4019391052900155e-06], ['Interface_info_expression(Expression*', 3.4019391052900155e-06], ['Expression(EXPRESSION_INTERFACE_INFO,', 3.4019391052900155e-06], ['iface_(iface),', 3.4019391052900155e-06], ['iface_info_(iface_info)', 3.4019391052900155e-06], ['Interface_info_expression(this->iface_->copy(),', 3.4019391052900155e-06], ['this->iface_->issue_nil_check();', 3.4019391052900155e-06], ['iface_;', 3.4019391052900155e-06], ['iface_info_;', 3.4019391052900155e-06], ['Interface_info_expression::do_type()', 3.4019391052900155e-06], ['Unordered_map(Interface_type*,', 3.4019391052900155e-06], ['Type*)', 3.4019391052900155e-06], ['Hashtable;', 3.4019391052900155e-06], ['Hashtable', 3.4019391052900155e-06], ['result_types;', 3.4019391052900155e-06], ['this->iface_->type()->interface_type();', 3.4019391052900155e-06], ['Hashtable::const_iterator', 3.4019391052900155e-06], ['result_types.find(itype);', 3.4019391052900155e-06], ['result_types.end())', 3.4019391052900155e-06], ['pdt', 3.4019391052900155e-06], ['(itype->is_empty())', 3.4019391052900155e-06], ['sfl->push_back(', 3.4019391052900155e-06], ['Struct_field(Typed_identifier("__type_descriptor",', 3.4019391052900155e-06], ['pdt,', 3.4019391052900155e-06], ['itype->methods()->begin();', 3.4019391052900155e-06], ['itype->methods()->end();', 3.4019391052900155e-06], ['p->type()->function_type();', 3.4019391052900155e-06], ['go_assert(ft->receiver()', 3.4019391052900155e-06], ['mparams', 3.4019391052900155e-06], ['mparams->reserve(params->size()', 3.4019391052900155e-06], ['mparams->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['ft->location()));', 3.4019391052900155e-06], ['mparams->push_back(*pp);', 3.4019391052900155e-06], ['mresults', 3.4019391052900155e-06], ['(ft->results()', 3.4019391052900155e-06], ['ft->results()->copy());', 3.4019391052900155e-06], ['Backend_function_type*', 3.4019391052900155e-06], ['mft', 3.4019391052900155e-06], ['Type::make_backend_function_type(NULL,', 3.4019391052900155e-06], ['mparams,', 3.4019391052900155e-06], ['mresults,', 3.4019391052900155e-06], ['ft->location());', 3.4019391052900155e-06], ['fname', 3.4019391052900155e-06], ['Gogo::unpack_hidden_name(p->name());', 3.4019391052900155e-06], ['sfl->push_back(Struct_field(Typed_identifier(fname,', 3.4019391052900155e-06], ['mft,', 3.4019391052900155e-06], ['Pointer_type', 3.4019391052900155e-06], ['Interface_info_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['biface', 3.4019391052900155e-06], ['this->iface_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->struct_field_expression(biface,', 3.4019391052900155e-06], ['Interface_info_expression::do_dump_expression(', 3.4019391052900155e-06], ['is_empty', 3.4019391052900155e-06], ['this->iface_->type()->interface_type()->is_empty();', 3.4019391052900155e-06], ['"interfaceinfo(";', 3.4019391052900155e-06], ['this->iface_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['(this->iface_info_', 3.4019391052900155e-06], ['INTERFACE_INFO_METHODS', 3.4019391052900155e-06], ['!is_empty', 3.4019391052900155e-06], ['"methods"', 3.4019391052900155e-06], ['INTERFACE_INFO_TYPE_DESCRIPTOR', 3.4019391052900155e-06], ['"type_descriptor"', 3.4019391052900155e-06], ['INTERFACE_INFO_OBJECT', 3.4019391052900155e-06], ['"object"', 3.4019391052900155e-06], ['Expression::make_interface_info(Expression*', 3.4019391052900155e-06], ['Interface_info_expression(iface,', 3.4019391052900155e-06], ['Interface_value_expression', 3.4019391052900155e-06], ['Interface_value_expression(Type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_INTERFACE_VALUE,', 3.4019391052900155e-06], ['first_field_(first_field),', 3.4019391052900155e-06], ['obj_(obj)', 3.4019391052900155e-06], ['Interface_value_expression(this->type_->copy_expressions(),', 3.4019391052900155e-06], ['this->first_field_->copy(),', 3.4019391052900155e-06], ['this->obj_->copy(),', 3.4019391052900155e-06], ['(either', 3.4019391052900155e-06], ['first_field_;', 3.4019391052900155e-06], ['obj_;', 3.4019391052900155e-06], ['Interface_value_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->first_field_,', 3.4019391052900155e-06], ['Expression::traverse(&this->obj_,', 3.4019391052900155e-06], ['Interface_value_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['vals(2);', 3.4019391052900155e-06], ['this->first_field_->get_backend(context);', 3.4019391052900155e-06], ['this->obj_->get_backend(context);', 3.4019391052900155e-06], ['Interface_value_expression::do_dump_expression(', 3.4019391052900155e-06], ['"interfacevalue(";', 3.4019391052900155e-06], ['(this->type_->interface_type()->is_empty()', 3.4019391052900155e-06], ['"type_descriptor:', 3.4019391052900155e-06], ['"methods:', 3.4019391052900155e-06], ['this->first_field_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['this->obj_->dump_expression(ast_dump_context);', 3.4019391052900155e-06], ['Expression::make_interface_value(Type*', 3.4019391052900155e-06], ['Interface_value_expression(type,', 3.4019391052900155e-06], ['types:', 3.4019391052900155e-06], ['Interface_mtable_expression', 3.4019391052900155e-06], ['Interface_mtable_expression(Interface_type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_INTERFACE_MTABLE,', 3.4019391052900155e-06], ['itype_(itype),', 3.4019391052900155e-06], ['is_pointer_(is_pointer),', 3.4019391052900155e-06], ['method_table_type_(NULL),', 3.4019391052900155e-06], ['this->itype_->copy_expressions()->interface_type();', 3.4019391052900155e-06], ['this->is_pointer_,', 3.4019391052900155e-06], ['itype_;', 3.4019391052900155e-06], ['is_pointer_;', 3.4019391052900155e-06], ['method_table_type_;', 3.4019391052900155e-06], ['Interface_mtable_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Type::traverse(this->itype_,', 3.4019391052900155e-06], ['Interface_mtable_expression::do_type()', 3.4019391052900155e-06], ['(this->method_table_type_', 3.4019391052900155e-06], ['tid("__type_descriptor",', 3.4019391052900155e-06], ['Type::make_type_descriptor_ptr_type(),', 3.4019391052900155e-06], ['sfl->push_back(Struct_field(tid));', 3.4019391052900155e-06], ['descriptors;', 3.4019391052900155e-06], ['method(p->name(),', 3.4019391052900155e-06], ['unsafe_ptr_type,', 3.4019391052900155e-06], ['sfl->push_back(Struct_field(method));', 3.4019391052900155e-06], ['this->method_table_type_', 3.4019391052900155e-06], ['Interface_mtable_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['gogo->interface_method_table_name(this->itype_,', 3.4019391052900155e-06], ['this->is_pointer_);', 3.4019391052900155e-06], ['(this->type_->named_type()', 3.4019391052900155e-06], ['(this->type_->named_type()->named_object()->package()', 3.4019391052900155e-06], ['this->itype_->package()))', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(p->name()))', 3.4019391052900155e-06], ['(is_public', 3.4019391052900155e-06], ['this->type_->named_type()->named_object()->package()', 3.4019391052900155e-06], ['gogo->backend()->immutable_struct_reference(mangled_name,', 3.4019391052900155e-06], ['td_type;', 3.4019391052900155e-06], ['(!this->is_pointer_)', 3.4019391052900155e-06], ['std::vector<Backend::Btyped_identifier>', 3.4019391052900155e-06], ['bstructfields;', 3.4019391052900155e-06], ['svals', 3.4019391052900155e-06], ['tdescriptor', 3.4019391052900155e-06], ['Expression::make_type_descriptor(td_type,', 3.4019391052900155e-06], ['svals->push_back(tdescriptor);', 3.4019391052900155e-06], ['tdesc_btype', 3.4019391052900155e-06], ['tdescriptor->type()->get_backend(gogo);', 3.4019391052900155e-06], ['btd("_type",', 3.4019391052900155e-06], ['tdesc_btype,', 3.4019391052900155e-06], ['bstructfields.push_back(btd);', 3.4019391052900155e-06], ['this->type_->named_type();', 3.4019391052900155e-06], ['go_assert(nt', 3.4019391052900155e-06], ['nt->method_function(p->name(),', 3.4019391052900155e-06], ['st->method_function(p->name(),', 3.4019391052900155e-06], ['go_assert(m', 3.4019391052900155e-06], ['m->named_object();', 3.4019391052900155e-06], ['go_assert(no->is_function()', 3.4019391052900155e-06], ['no->is_function_declaration());', 3.4019391052900155e-06], ['fcn_btype', 3.4019391052900155e-06], ['m->type()->get_backend_fntype(gogo);', 3.4019391052900155e-06], ['bmtype(p->name(),', 3.4019391052900155e-06], ['fcn_btype,', 3.4019391052900155e-06], ['bstructfields.push_back(bmtype);', 3.4019391052900155e-06], ['svals->push_back(Expression::make_func_code_reference(no,', 3.4019391052900155e-06], ['gogo->backend()->struct_type(bstructfields);', 3.4019391052900155e-06], ['ctor_bexprs;', 3.4019391052900155e-06], ['svals->begin();', 3.4019391052900155e-06], ['svals->end();', 3.4019391052900155e-06], ['ctor_bexprs.push_back((*pe)->get_backend(context));', 3.4019391052900155e-06], ['ctor_bexprs,', 3.4019391052900155e-06], ['gogo->backend()->immutable_struct(mangled_name,', 3.4019391052900155e-06], ['gogo->backend()->immutable_struct_set_init(this->bvar_,', 3.4019391052900155e-06], ['mangled_name,', 3.4019391052900155e-06], ['Interface_mtable_expression::do_dump_expression(', 3.4019391052900155e-06], ['"__go_"', 3.4019391052900155e-06], ['(this->is_pointer_', 3.4019391052900155e-06], ['"pimt__"', 3.4019391052900155e-06], ['"imt_");', 3.4019391052900155e-06], ['ast_dump_context->dump_type(this->itype_);', 3.4019391052900155e-06], ['"__";', 3.4019391052900155e-06], ['Expression::make_interface_mtable_ref(Interface_type*', 3.4019391052900155e-06], ['This,', 3.4019391052900155e-06], ['Type_info_expression,', 3.4019391052900155e-06], ['q.v.,', 3.4019391052900155e-06], ['Struct_field_offset_expression', 3.4019391052900155e-06], ['Struct_field_offset_expression(Struct_type*', 3.4019391052900155e-06], ['Expression(EXPRESSION_STRUCT_FIELD_OFFSET,', 3.4019391052900155e-06], ['field_(field)', 3.4019391052900155e-06], ['field_;', 3.4019391052900155e-06], ['Struct_field_offset_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->type_->fields();', 3.4019391052900155e-06], ['Struct_field_list::const_iterator', 3.4019391052900155e-06], ['(&*p', 3.4019391052900155e-06], ['this->field_)', 3.4019391052900155e-06], ['go_assert(&*p', 3.4019391052900155e-06], ['this->field_);', 3.4019391052900155e-06], ['gogo->backend()->type_field_offset(btype,', 3.4019391052900155e-06], ['uptr_type', 3.4019391052900155e-06], ['Expression::make_integer_int64(offset,', 3.4019391052900155e-06], ['uptr_type,', 3.4019391052900155e-06], ['ret->get_backend(context);', 3.4019391052900155e-06], ['Struct_field_offset_expression::do_dump_expression(', 3.4019391052900155e-06], ['"unsafe.Offsetof(";', 3.4019391052900155e-06], ['Gogo::message_name(this->field_->field_name());', 3.4019391052900155e-06], ['Expression::make_struct_field_offset(Struct_type*', 3.4019391052900155e-06], ['Struct_field_offset_expression(type,', 3.4019391052900155e-06], ['Label_addr_expression', 3.4019391052900155e-06], ['Label_addr_expression(Label*', 3.4019391052900155e-06], ['Expression(EXPRESSION_LABEL_ADDR,', 3.4019391052900155e-06], ['label_(label)', 3.4019391052900155e-06], ['Label_addr_expression(this->label_,', 3.4019391052900155e-06], ['this->label_->get_addr(context,', 3.4019391052900155e-06], ['this->label_->name();', 3.4019391052900155e-06], ['taking.', 3.4019391052900155e-06], ['label_;', 3.4019391052900155e-06], ['Expression::make_label_addr(Label*', 3.4019391052900155e-06], ['Label_addr_expression(label,', 3.4019391052900155e-06], ['Conditional_expression.', 3.4019391052900155e-06], ['Conditional_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['(Expression::traverse(&this->cond_,', 3.4019391052900155e-06], ['Expression::traverse(&this->then_,', 3.4019391052900155e-06], ['Expression::traverse(&this->else_,', 3.4019391052900155e-06], ['Conditional_expression::do_type()', 3.4019391052900155e-06], ['(Type::are_identical(this->then_->type(),', 3.4019391052900155e-06], ['this->else_->type(),', 3.4019391052900155e-06], ['this->then_->type();', 3.4019391052900155e-06], ['(this->then_->is_nil_expression()', 3.4019391052900155e-06], ['this->else_->is_nil_expression())', 3.4019391052900155e-06], ['(!this->then_->is_nil_expression()', 3.4019391052900155e-06], ['this->then_->type()', 3.4019391052900155e-06], ['this->else_->type());', 3.4019391052900155e-06], ['result_type;', 3.4019391052900155e-06], ['Conditional_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->cond_->determine_type_no_context();', 3.4019391052900155e-06], ['this->then_->determine_type(context);', 3.4019391052900155e-06], ['this->else_->determine_type(context);', 3.4019391052900155e-06], ['Conditional_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['result_btype', 3.4019391052900155e-06], ['this->cond_->get_backend(context);', 3.4019391052900155e-06], ['this->then_->get_backend(context);', 3.4019391052900155e-06], ['belse', 3.4019391052900155e-06], ['this->else_->get_backend(context);', 3.4019391052900155e-06], ['result_btype,', 3.4019391052900155e-06], ['belse,', 3.4019391052900155e-06], ['Conditional_expression::do_dump_expression(', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->cond_);', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->then_);', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->else_);', 3.4019391052900155e-06], ['Expression::make_conditional(Expression*', 3.4019391052900155e-06], ['Conditional_expression(cond,', 3.4019391052900155e-06], ['Compound_expression.', 3.4019391052900155e-06], ['Compound_expression::do_traverse(Traverse*', 3.4019391052900155e-06], ['Compound_expression::do_type()', 3.4019391052900155e-06], ['Compound_expression::do_determine_type(const', 3.4019391052900155e-06], ['this->init_->determine_type_no_context();', 3.4019391052900155e-06], ['Compound_expression::do_get_backend(Translate_context*', 3.4019391052900155e-06], ['this->init_->get_backend(context);', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(init_stmt,', 3.4019391052900155e-06], ['Compound_expression::do_dump_expression(', 3.4019391052900155e-06], ['ast_dump_context->dump_expression(this->init_);', 3.4019391052900155e-06], ['Expression::make_compound(Expression*', 3.4019391052900155e-06], ['Compound_expression(init,', 3.4019391052900155e-06], ['Backend_expression.', 3.4019391052900155e-06], ['Backend_expression::do_traverse(Traverse*)', 3.4019391052900155e-06], ['Backend_expression::do_copy()', 3.4019391052900155e-06], ['Backend_expression(this->bexpr_,', 3.4019391052900155e-06], ['Backend_expression::do_dump_expression(Ast_dump_context*', 3.4019391052900155e-06], ['"backend_expression<";', 3.4019391052900155e-06], ['Expression::make_backend(Bexpression*', 3.4019391052900155e-06], ['Backend_expression(bexpr,', 3.4019391052900155e-06], ['Expression::import_expression(Import_expression*', 3.4019391052900155e-06], ["'+'", 3.4019391052900155e-06], ["'!'", 3.4019391052900155e-06], ["'^'", 3.4019391052900155e-06], ["'&'", 3.4019391052900155e-06], ['Unary_expression::do_import(imp,', 3.4019391052900155e-06], ['Binary_expression::do_import(imp,', 3.4019391052900155e-06], ['(imp->match_c_string("$true")', 3.4019391052900155e-06], ['imp->match_c_string("$false")', 3.4019391052900155e-06], ['(imp->match_c_string("true")', 3.4019391052900155e-06], ['imp->match_c_string("false"))))', 3.4019391052900155e-06], ['Boolean_expression::do_import(imp,', 3.4019391052900155e-06], ['String_expression::do_import(imp,', 3.4019391052900155e-06], ["'9'))", 3.4019391052900155e-06], ['floats', 3.4019391052900155e-06], ['Integer_expression::do_import(imp,', 3.4019391052900155e-06], ['(imp->match_c_string("$nil")', 3.4019391052900155e-06], ['imp->match_c_string("nil")))', 3.4019391052900155e-06], ['Nil_expression::do_import(imp,', 3.4019391052900155e-06], ['(imp->match_c_string("$convert")', 3.4019391052900155e-06], ['imp->match_c_string("convert")))', 3.4019391052900155e-06], ['Type_conversion_expression::do_import(imp,', 3.4019391052900155e-06], ['Import_function_body*', 3.4019391052900155e-06], ['ifb', 3.4019391052900155e-06], ['imp->ifb();', 3.4019391052900155e-06], ['(ifb', 3.4019391052900155e-06], ['(ifb->saw_error())', 3.4019391052900155e-06], ['ifb->read_identifier();', 3.4019391052900155e-06], ['(id.empty())', 3.4019391052900155e-06], ['long>(ifb->off()));', 3.4019391052900155e-06], ['ifb->block()->bindings()->lookup(id);', 3.4019391052900155e-06], ['id.c_str());', 3.4019391052900155e-06], ['Expression::make_var_reference(var,', 3.4019391052900155e-06], ['Expression_list.', 3.4019391052900155e-06], ['Expression_list::traverse(Traverse*', 3.4019391052900155e-06], ['Expression_list::copy()', 3.4019391052900155e-06], ['ret->push_back(NULL);', 3.4019391052900155e-06], ['ret->push_back((*p)->copy());', 3.4019391052900155e-06], ['Expression_list::contains_error()', 3.4019391052900155e-06], ['(*p)->is_error_expression())', 3.4019391052900155e-06], ['Numeric_constant.', 3.4019391052900155e-06], ['Numeric_constant::~Numeric_constant()', 3.4019391052900155e-06], ['Numeric_constant::Numeric_constant(const', 3.4019391052900155e-06], ['classification_(a.classification_),', 3.4019391052900155e-06], ['type_(a.type_)', 3.4019391052900155e-06], ['Numeric_constant::operator=(const', 3.4019391052900155e-06], ['a.classification_;', 3.4019391052900155e-06], ['a.type_;', 3.4019391052900155e-06], ['Numeric_constant::equals(const', 3.4019391052900155e-06], ['a.classification_)', 3.4019391052900155e-06], ['a.type_', 3.4019391052900155e-06], ['a.type_,', 3.4019391052900155e-06], ['Type::COMPARE_ALIASES,', 3.4019391052900155e-06], ['mpz_cmp(this->u_.int_val,', 3.4019391052900155e-06], ['a.u_.int_val)', 3.4019391052900155e-06], ['mpfr_cmp(this->u_.float_val,', 3.4019391052900155e-06], ['a.u_.float_val)', 3.4019391052900155e-06], ['mpc_cmp(this->u_.complex_val,', 3.4019391052900155e-06], ['a.u_.complex_val)', 3.4019391052900155e-06], ['Numeric_constant::clear()', 3.4019391052900155e-06], ['mpz_clear(this->u_.int_val);', 3.4019391052900155e-06], ['mpfr_clear(this->u_.float_val);', 3.4019391052900155e-06], ['mpc_clear(this->u_.complex_val);', 3.4019391052900155e-06], ['NC_INVALID;', 3.4019391052900155e-06], ['Numeric_constant::set_unsigned_long(Type*', 3.4019391052900155e-06], ['mpz_init_set_ui(this->u_.int_val,', 3.4019391052900155e-06], ['Numeric_constant::set_int(Type*', 3.4019391052900155e-06], ['Numeric_constant::set_rune(Type*', 3.4019391052900155e-06], ['NC_RUNE;', 3.4019391052900155e-06], ['Numeric_constant::set_float(Type*', 3.4019391052900155e-06], ['NC_FLOAT;', 3.4019391052900155e-06], ['infinity', 3.4019391052900155e-06], ['!type->float_type()->is_abstract())', 3.4019391052900155e-06], ['(Numeric_constant::is_float_neg_zero(val,', 3.4019391052900155e-06], ['mpfr_init_set_ui(this->u_.float_val,', 3.4019391052900155e-06], ['Numeric_constant::set_complex(Type*', 3.4019391052900155e-06], ['NC_COMPLEX;', 3.4019391052900155e-06], ['set_float.', 3.4019391052900155e-06], ['!type->complex_type()->is_abstract())', 3.4019391052900155e-06], ['type->complex_type()->bits()', 3.4019391052900155e-06], ['mpfr_init_set(real,', 3.4019391052900155e-06], ['(Numeric_constant::is_float_neg_zero(real,', 3.4019391052900155e-06], ['mpfr_init_set(imag,', 3.4019391052900155e-06], ['(Numeric_constant::is_float_neg_zero(imag,', 3.4019391052900155e-06], ['mpfr_set_ui(imag,', 3.4019391052900155e-06], ['mpc_set_fr_fr(this->u_.complex_val,', 3.4019391052900155e-06], ['BITS,', 3.4019391052900155e-06], ['BITS', 3.4019391052900155e-06], ['Numeric_constant::is_float_neg_zero(const', 3.4019391052900155e-06], ['(!mpfr_signbit(val))', 3.4019391052900155e-06], ['(mpfr_zero_p(val))', 3.4019391052900155e-06], ['(bits)', 3.4019391052900155e-06], ['denormalized', 3.4019391052900155e-06], ['-126,', 3.4019391052900155e-06], ['24', 3.4019391052900155e-06], ['-126', 3.4019391052900155e-06], ['(24', 3.4019391052900155e-06], ['-149.', 3.4019391052900155e-06], ['-149;', 3.4019391052900155e-06], ['Minimum', 3.4019391052900155e-06], ['-1022,', 3.4019391052900155e-06], ['53', 3.4019391052900155e-06], ['-1074;', 3.4019391052900155e-06], ['mpfr_get_exp(val)', 3.4019391052900155e-06], ['Numeric_constant::get_int(mpz_t*', 3.4019391052900155e-06], ['go_assert(this->is_int());', 3.4019391052900155e-06], ['Numeric_constant::get_rune(mpz_t*', 3.4019391052900155e-06], ['go_assert(this->is_rune());', 3.4019391052900155e-06], ['Numeric_constant::get_float(mpfr_t*', 3.4019391052900155e-06], ['go_assert(this->is_float());', 3.4019391052900155e-06], ['Numeric_constant::get_complex(mpc_t*', 3.4019391052900155e-06], ['go_assert(this->is_complex());', 3.4019391052900155e-06], ['Numeric_constant::to_unsigned_long(unsigned', 3.4019391052900155e-06], ['long*', 3.4019391052900155e-06], ['this->mpz_to_unsigned_long(this->u_.int_val,', 3.4019391052900155e-06], ['this->mpfr_to_unsigned_long(this->u_.float_val,', 3.4019391052900155e-06], ['this->mpfr_to_unsigned_long(mpc_realref(this->u_.complex_val),', 3.4019391052900155e-06], ['Numeric_constant::mpz_to_unsigned_long(const', 3.4019391052900155e-06], ['NC_UL_NEGATIVE;', 3.4019391052900155e-06], ['ui', 3.4019391052900155e-06], ['mpz_get_ui(ival);', 3.4019391052900155e-06], ['(mpz_cmp_ui(ival,', 3.4019391052900155e-06], ['ui)', 3.4019391052900155e-06], ['NC_UL_BIG;', 3.4019391052900155e-06], ['ui;', 3.4019391052900155e-06], ['NC_UL_VALID;', 3.4019391052900155e-06], ['Numeric_constant::mpfr_to_unsigned_long(const', 3.4019391052900155e-06], ['To_unsigned_long', 3.4019391052900155e-06], ['this->mpz_to_unsigned_long(ival,', 3.4019391052900155e-06], ['Numeric_constant::to_memory_size(int64_t*', 3.4019391052900155e-06], ['this->mpz_to_memory_size(this->u_.int_val,', 3.4019391052900155e-06], ['this->mpfr_to_memory_size(this->u_.float_val,', 3.4019391052900155e-06], ['this->mpfr_to_memory_size(mpc_realref(this->u_.complex_val),', 3.4019391052900155e-06], ['Numeric_constant::mpz_to_memory_size(const', 3.4019391052900155e-06], ['(mpz_fits_slong_p(ival))', 3.4019391052900155e-06], ['static_cast<int64_t>(mpz_get_si(ival));', 3.4019391052900155e-06], ['63', 3.4019391052900155e-06], ['(mpz_sizeinbase(ival,', 3.4019391052900155e-06], ['q,', 3.4019391052900155e-06], ['mpz_init(q);', 3.4019391052900155e-06], ['mpz_init(r);', 3.4019391052900155e-06], ['mpz_tdiv_q_2exp(q,', 3.4019391052900155e-06], ['mpz_tdiv_r_2exp(r,', 3.4019391052900155e-06], ['go_assert(mpz_fits_ulong_p(q)', 3.4019391052900155e-06], ['mpz_fits_ulong_p(r));', 3.4019391052900155e-06], ['((static_cast<int64_t>(mpz_get_ui(q))', 3.4019391052900155e-06], ['static_cast<int64_t>(mpz_get_ui(r)));', 3.4019391052900155e-06], ['mpz_clear(r);', 3.4019391052900155e-06], ['mpz_clear(q);', 3.4019391052900155e-06], ['Numeric_constant::mpfr_to_memory_size(const', 3.4019391052900155e-06], ['this->mpz_to_memory_size(ival,', 3.4019391052900155e-06], ['Numeric_constant::to_int(mpz_t*', 3.4019391052900155e-06], ['(!mpfr_zero_p(mpc_imagref(this->u_.complex_val))', 3.4019391052900155e-06], ['!mpfr_integer_p(mpc_realref(this->u_.complex_val)))', 3.4019391052900155e-06], ['Numeric_constant::to_float(mpfr_t*', 3.4019391052900155e-06], ['mpfr_init_set_z(*val,', 3.4019391052900155e-06], ['Numeric_constant::to_complex(mpc_t*', 3.4019391052900155e-06], ['mpc_set_z(*val,', 3.4019391052900155e-06], ['mpc_set_fr(*val,', 3.4019391052900155e-06], ['Numeric_constant::type()', 3.4019391052900155e-06], ['and,', 3.4019391052900155e-06], ['ISSUE_ERROR', 3.4019391052900155e-06], ['Numeric_constant::set_type(Type*', 3.4019391052900155e-06], ['type->is_error())', 3.4019391052900155e-06], ['this->check_int_type(type->integer_type(),', 3.4019391052900155e-06], ['this->check_float_type(type->float_type(),', 3.4019391052900155e-06], ['this->check_complex_type(type->complex_type(),', 3.4019391052900155e-06], ['Numeric_constant::check_int_type(Integer_type*', 3.4019391052900155e-06], ['mpz_init_set(val,', 3.4019391052900155e-06], ['(!mpfr_integer_p(mpc_realref(this->u_.complex_val))', 3.4019391052900155e-06], ['!mpfr_zero_p(mpc_imagref(this->u_.complex_val)))', 3.4019391052900155e-06], ['(type->is_unsigned())', 3.4019391052900155e-06], ['nonnegative', 3.4019391052900155e-06], ['BITS.', 3.4019391052900155e-06], ['type->bits();', 3.4019391052900155e-06], ['sign.', 3.4019391052900155e-06], ['(mpz_scan1(val,', 3.4019391052900155e-06], ['long>(type->bits()', 3.4019391052900155e-06], ['mpz_scan0(val,', 3.4019391052900155e-06], ['type->bits())', 3.4019391052900155e-06], ['ULONG_MAX));', 3.4019391052900155e-06], ['"integer', 3.4019391052900155e-06], ['Numeric_constant::check_float_type(Float_type*', 3.4019391052900155e-06], ['mpfr_init_set_z(val,', 3.4019391052900155e-06], ['(mpfr_nan_p(val)', 3.4019391052900155e-06], ['mpfr_inf_p(val)', 3.4019391052900155e-06], ['mpfr_zero_p(val))', 3.4019391052900155e-06], ['Infinity', 3.4019391052900155e-06], ['mpfr_get_exp(val);', 3.4019391052900155e-06], ['mpfr_init(t);', 3.4019391052900155e-06], ['mpfr_set(t,', 3.4019391052900155e-06], ['mpfr_set(val,', 3.4019391052900155e-06], ['mpfr_clear(t);', 3.4019391052900155e-06], ['this->set_float(type,', 3.4019391052900155e-06], ['Numeric_constant::check_complex_type(Complex_type*', 3.4019391052900155e-06], ['mpc_set_z(val,', 3.4019391052900155e-06], ['mpc_set_fr(val,', 3.4019391052900155e-06], ['(!mpfr_nan_p(mpc_realref(val))', 3.4019391052900155e-06], ['!mpfr_inf_p(mpc_realref(val))', 3.4019391052900155e-06], ['!mpfr_zero_p(mpc_realref(val))', 3.4019391052900155e-06], ['mpfr_get_exp(mpc_realref(val))', 3.4019391052900155e-06], ['(!mpfr_nan_p(mpc_imagref(val))', 3.4019391052900155e-06], ['!mpfr_inf_p(mpc_imagref(val))', 3.4019391052900155e-06], ['!mpfr_zero_p(mpc_imagref(val))', 3.4019391052900155e-06], ['mpfr_get_exp(mpc_imagref(val))', 3.4019391052900155e-06], ['mpc_set(t,', 3.4019391052900155e-06], ['mpc_clear(t);', 3.4019391052900155e-06], ['this->set_complex(type,', 3.4019391052900155e-06], ['Numeric_constant::expression(Location', 3.4019391052900155e-06], ['Expression::make_integer_z(&this->u_.int_val,', 3.4019391052900155e-06], ['Expression::make_character(&this->u_.int_val,', 3.4019391052900155e-06], ['Expression::make_float(&this->u_.float_val,', 3.4019391052900155e-06], ['Expression::make_complex(&this->u_.complex_val,', 3.4019391052900155e-06], ['seed.', 3.4019391052900155e-06], ['Numeric_constant::hash(unsigned', 3.4019391052900155e-06], ['PRIME', 3.4019391052900155e-06], ['97;', 3.4019391052900155e-06], ['1.0;', 3.4019391052900155e-06], ['mpz_get_ui(this->u_.int_val);', 3.4019391052900155e-06], ['mpfr_init(m);', 3.4019391052900155e-06], ['mpc_abs(m,', 3.4019391052900155e-06], ['mpfr_get_ui(m,', 3.4019391052900155e-06], ['mpfr_clear(m);', 3.4019391052900155e-06], ['mpfr_get_d_2exp(&e,', 3.4019391052900155e-06], ['4294967295.0;', 3.4019391052900155e-06], ['long>(e', 3.4019391052900155e-06], ['static_cast<long>(f));', 3.4019391052900155e-06], ['(static_cast<unsigned', 3.4019391052900155e-06], ['int>(val)', 3.4019391052900155e-06], ['go-diagnostics.cc', 3.4019391052900155e-06], ['error/warning', 3.4019391052900155e-06], ['mformat_value()', 3.4019391052900155e-06], ['std::string(xstrerror(errno));', 3.4019391052900155e-06], ['sprintf().', 3.4019391052900155e-06], ['comments', 3.4019391052900155e-06], ['go-diagnostics.h', 3.4019391052900155e-06], ['specifiers.', 3.4019391052900155e-06], ['expand_format(const', 3.4019391052900155e-06], ['fmt)', 3.4019391052900155e-06], ["'%')", 3.4019391052900155e-06], ['(*c)', 3.4019391052900155e-06], ['malformed', 3.4019391052900155e-06], ["'%':", 3.4019391052900155e-06], ["'<':", 3.4019391052900155e-06], ["'>':", 3.4019391052900155e-06], ["'m')", 3.4019391052900155e-06], ['specifiers,', 3.4019391052900155e-06], ['expand_format', 3.4019391052900155e-06], ['%m,', 3.4019391052900155e-06], ['%q)', 3.4019391052900155e-06], ['printf-style', 3.4019391052900155e-06], ['pragma', 3.4019391052900155e-06], ['suppress', 3.4019391052900155e-06], ['‘std::__cxx11::string', 3.4019391052900155e-06], ['__va_list_tag*)’', 3.4019391052900155e-06], ['‘gnu_printf’', 3.4019391052900155e-06], ['[-Wsuggest-attribute=format]', 3.4019391052900155e-06], ['happening', 3.4019391052900155e-06], ['checker', 3.4019391052900155e-06], ['gnu_printf),', 3.4019391052900155e-06], ['gnu_printf', 3.4019391052900155e-06], ['GO_ATTRIBUTE_GCC_DIAG(1,0);', 3.4019391052900155e-06], ['"-Wsuggest-attribute=format"', 3.4019391052900155e-06], ['mbuf', 3.4019391052900155e-06], ['expanded_fmt', 3.4019391052900155e-06], ['expand_format(fmt);', 3.4019391052900155e-06], ['nwr', 3.4019391052900155e-06], ['vasprintf(&mbuf,', 3.4019391052900155e-06], ['expanded_fmt.c_str(),', 3.4019391052900155e-06], ['(nwr', 3.4019391052900155e-06], ['go_be_error_at(Linemap::unknown_location(),', 3.4019391052900155e-06], ['"memory', 3.4019391052900155e-06], ['vasprintf");', 3.4019391052900155e-06], ['go_assert(0);', 3.4019391052900155e-06], ['std::string(mbuf);', 3.4019391052900155e-06], ['free(mbuf);', 3.4019391052900155e-06], ['cached_open_quote', 3.4019391052900155e-06], ['cached_close_quote', 3.4019391052900155e-06], ['go_open_quote()', 3.4019391052900155e-06], ['(cached_open_quote', 3.4019391052900155e-06], ['cached_open_quote;', 3.4019391052900155e-06], ['go_close_quote()', 3.4019391052900155e-06], ['(cached_close_quote', 3.4019391052900155e-06], ['cached_close_quote;', 3.4019391052900155e-06], ['go_error_at(const', 3.4019391052900155e-06], ['go_be_error_at(location,', 3.4019391052900155e-06], ['go_warning_at(const', 3.4019391052900155e-06], ['go_be_warning_at(location,', 3.4019391052900155e-06], ['go_fatal_error(const', 3.4019391052900155e-06], ['go_be_fatal_error(location,', 3.4019391052900155e-06], ['go_inform(const', 3.4019391052900155e-06], ['go_be_inform(location,', 3.4019391052900155e-06], ['go-dump.cc', 3.4019391052900155e-06], ['Go_dump*', 3.4019391052900155e-06], ['Go_dump::Go_dump(const', 3.4019391052900155e-06], ['next_(dumps),', 3.4019391052900155e-06], ['is_enabled_(false)', 3.4019391052900155e-06], ['Go_dump::enable_by_name(const', 3.4019391052900155e-06], ['(Go_dump*', 3.4019391052900155e-06], ['go_enable_dump(const', 3.4019391052900155e-06], ['Go_dump::enable_by_name(name)', 3.4019391052900155e-06], ['go-encode-id.cc', 3.4019391052900155e-06], ['packagepath', 3.4019391052900155e-06], ['encoding/decoding', 3.4019391052900155e-06], ['"go-location.h"', 3.4019391052900155e-06], ['assembler.', 3.4019391052900155e-06], ['alphanumeric', 3.4019391052900155e-06], ['characters,', 3.4019391052900155e-06], ['dot.', 3.4019391052900155e-06], ['char_needs_encoding(char', 3.4019391052900155e-06], ["'B':", 3.4019391052900155e-06], ["'C':", 3.4019391052900155e-06], ["'D':", 3.4019391052900155e-06], ["'E':", 3.4019391052900155e-06], ["'F':", 3.4019391052900155e-06], ["'G':", 3.4019391052900155e-06], ["'H':", 3.4019391052900155e-06], ["'I':", 3.4019391052900155e-06], ["'J':", 3.4019391052900155e-06], ["'K':", 3.4019391052900155e-06], ["'L':", 3.4019391052900155e-06], ["'M':", 3.4019391052900155e-06], ["'N':", 3.4019391052900155e-06], ["'O':", 3.4019391052900155e-06], ["'P':", 3.4019391052900155e-06], ["'Q':", 3.4019391052900155e-06], ["'R':", 3.4019391052900155e-06], ["'S':", 3.4019391052900155e-06], ["'T':", 3.4019391052900155e-06], ["'U':", 3.4019391052900155e-06], ["'V':", 3.4019391052900155e-06], ["'W':", 3.4019391052900155e-06], ["'Y':", 3.4019391052900155e-06], ["'Z':", 3.4019391052900155e-06], ["'b':", 3.4019391052900155e-06], ["'c':", 3.4019391052900155e-06], ["'e':", 3.4019391052900155e-06], ["'h':", 3.4019391052900155e-06], ["'i':", 3.4019391052900155e-06], ["'j':", 3.4019391052900155e-06], ["'k':", 3.4019391052900155e-06], ["'n':", 3.4019391052900155e-06], ["'o':", 3.4019391052900155e-06], ["'r':", 3.4019391052900155e-06], ["'s':", 3.4019391052900155e-06], ["'t':", 3.4019391052900155e-06], ["'u':", 3.4019391052900155e-06], ["'w':", 3.4019391052900155e-06], ["'x':", 3.4019391052900155e-06], ["'y':", 3.4019391052900155e-06], ["'z':", 3.4019391052900155e-06], ["'1':", 3.4019391052900155e-06], ["'2':", 3.4019391052900155e-06], ["'3':", 3.4019391052900155e-06], ["'4':", 3.4019391052900155e-06], ["'5':", 3.4019391052900155e-06], ["'6':", 3.4019391052900155e-06], ["'7':", 3.4019391052900155e-06], ["'8':", 3.4019391052900155e-06], ["'9':", 3.4019391052900155e-06], ["'_':", 3.4019391052900155e-06], ["'.':", 3.4019391052900155e-06], ['non-ASCII', 3.4019391052900155e-06], ['go_id_needs_encoding(const', 3.4019391052900155e-06], ['str.begin();', 3.4019391052900155e-06], ['str.end();', 3.4019391052900155e-06], ['(char_needs_encoding(*p))', 3.4019391052900155e-06], ['Pull', 3.4019391052900155e-06], ['*PC.', 3.4019391052900155e-06], ['read.', 3.4019391052900155e-06], ['fetch_utf8_char(const', 3.4019391052900155e-06], ['pc)', 3.4019391052900155e-06], ['++len;', 3.4019391052900155e-06], ['((1', 3.4019391052900155e-06], ['(7', 3.4019391052900155e-06], ['p[i];', 3.4019391052900155e-06], ['0x3f;', 3.4019391052900155e-06], ['assembler-friendly', 3.4019391052900155e-06], ['detail', 3.4019391052900155e-06], ['names.cc.', 3.4019391052900155e-06], ['Short', 3.4019391052900155e-06], ['version:', 3.4019391052900155e-06], ['non-ASCII-alphanumeric', 3.4019391052900155e-06], ['..uXXXX', 3.4019391052900155e-06], ['..UXXXXXXXX,', 3.4019391052900155e-06], ['non-alphanumerics', 3.4019391052900155e-06], ['".zXX".', 3.4019391052900155e-06], ['go_encode_id(const', 3.4019391052900155e-06], ['(Lex::is_invalid_identifier(id))', 3.4019391052900155e-06], ['unambiguous', 3.4019391052900155e-06], ['..z,', 3.4019391052900155e-06], ['..u', 3.4019391052900155e-06], ['..U.', 3.4019391052900155e-06], ['go_assert(id.find("..z")', 3.4019391052900155e-06], ['go_assert(id.find("..u")', 3.4019391052900155e-06], ['go_assert(id.find("..U")', 3.4019391052900155e-06], ['id.c_str();', 3.4019391052900155e-06], ['id.length();', 3.4019391052900155e-06], ['".0"', 3.4019391052900155e-06], ["'U',", 3.4019391052900155e-06], ['".0",', 3.4019391052900155e-06], ['(p[0]', 3.4019391052900155e-06], ["'0')", 3.4019391052900155e-06], ['!char_needs_encoding(c))', 3.4019391052900155e-06], ['"..z%02x",', 3.4019391052900155e-06], ['0x10000)', 3.4019391052900155e-06], ['"..u%04x",', 3.4019391052900155e-06], ['"..U%08x",', 3.4019391052900155e-06], ['(ret.empty())', 3.4019391052900155e-06], ["'_';", 3.4019391052900155e-06], ['unicode', 3.4019391052900155e-06], ['codepoint.', 3.4019391052900155e-06], ['insure', 3.4019391052900155e-06], ['meaningful.', 3.4019391052900155e-06], ['hex_digits_to_unicode_codepoint(const', 3.4019391052900155e-06], ['*digits,', 3.4019391052900155e-06], ['ndig)', 3.4019391052900155e-06], ['ndig;', 3.4019391052900155e-06], ['Lex::hex_val(digits[i]);', 3.4019391052900155e-06], ['Decode/demangle', 3.4019391052900155e-06], ['go_encode_id().', 3.4019391052900155e-06], ['unused;', 3.4019391052900155e-06], ['appearing', 3.4019391052900155e-06], ['traces.', 3.4019391052900155e-06], ['go_decode_id(const', 3.4019391052900155e-06], ['&encoded)', 3.4019391052900155e-06], ['encoded.c_str();', 3.4019391052900155e-06], ['encoded.length();', 3.4019391052900155e-06], ['".".', 3.4019391052900155e-06], ['(strncmp(p+1,', 3.4019391052900155e-06], ['strncmp(p+1,', 3.4019391052900155e-06], ['"..z",', 3.4019391052900155e-06], ['go_selectively_encode_id(const', 3.4019391052900155e-06], ['(go_id_needs_encoding(id))', 3.4019391052900155e-06], ['go_encode_id(id);', 3.4019391052900155e-06], ['std::string();', 3.4019391052900155e-06], ['tags.', 3.4019391052900155e-06], ['alphanumerics', 3.4019391052900155e-06], ['.xNN,', 3.4019391052900155e-06], ['go_mangle_struct_tag(const', 3.4019391052900155e-06], ['tag.c_str();', 3.4019391052900155e-06], ['tag.length();', 3.4019391052900155e-06], ['ret.append(p,', 3.4019391052900155e-06], ['(!char_needs_encoding(c)', 3.4019391052900155e-06], ['".x%02x",', 3.4019391052900155e-06], ['go-optimize.cc', 3.4019391052900155e-06], ['Go_optimize*', 3.4019391052900155e-06], ['Go_optimize::Go_optimize(const', 3.4019391052900155e-06], ['enabled)', 3.4019391052900155e-06], ['next_(optimizations),', 3.4019391052900155e-06], ['is_enabled_(enabled)', 3.4019391052900155e-06], ['Go_optimize::enable_by_name(const', 3.4019391052900155e-06], ['(Go_optimize*', 3.4019391052900155e-06], ['Enable/disable', 3.4019391052900155e-06], ['go_enable_optimize(const', 3.4019391052900155e-06], ['Go_optimize::enable_by_name(name,', 3.4019391052900155e-06], ['(bool)value)', 3.4019391052900155e-06], ['go.cc', 3.4019391052900155e-06], ['"parse.h"', 3.4019391052900155e-06], ['structures', 3.4019391052900155e-06], ['go_create_gogo(const', 3.4019391052900155e-06], ['go_create_gogo_args*', 3.4019391052900155e-06], ['go_assert(::gogo', 3.4019391052900155e-06], ['::gogo', 3.4019391052900155e-06], ['Gogo(args->backend,', 3.4019391052900155e-06], ['args->linemap,', 3.4019391052900155e-06], ['args->int_type_size,', 3.4019391052900155e-06], ['args->pointer_size);', 3.4019391052900155e-06], ['(args->pkgpath', 3.4019391052900155e-06], ['::gogo->set_pkgpath(args->pkgpath);', 3.4019391052900155e-06], ['(args->prefix', 3.4019391052900155e-06], ['::gogo->set_prefix(args->prefix);', 3.4019391052900155e-06], ['(args->relative_import_path', 3.4019391052900155e-06], ['::gogo->set_relative_import_path(args->relative_import_path);', 3.4019391052900155e-06], ['::gogo->set_check_divide_by_zero(args->check_divide_by_zero);', 3.4019391052900155e-06], ['::gogo->set_check_divide_overflow(args->check_divide_overflow);', 3.4019391052900155e-06], ['(args->compiling_runtime)', 3.4019391052900155e-06], ['::gogo->set_compiling_runtime(args->compiling_runtime);', 3.4019391052900155e-06], ['(args->c_header', 3.4019391052900155e-06], ['::gogo->set_c_header(args->c_header);', 3.4019391052900155e-06], ['::gogo->set_debug_escape_level(args->debug_escape_level);', 3.4019391052900155e-06], ['(args->debug_escape_hash', 3.4019391052900155e-06], ['::gogo->set_debug_escape_hash(args->debug_escape_hash);', 3.4019391052900155e-06], ['::gogo->set_nil_check_size_threshold(args->nil_check_size_threshold);', 3.4019391052900155e-06], ['go_parse_input_files(const', 3.4019391052900155e-06], ['filenames,', 3.4019391052900155e-06], ['filename_count,', 3.4019391052900155e-06], ['only_check_syntax,', 3.4019391052900155e-06], ['go_assert(filename_count', 3.4019391052900155e-06], ['Lex::Linknames', 3.4019391052900155e-06], ['all_linknames;', 3.4019391052900155e-06], ['filename_count;', 3.4019391052900155e-06], ['filenames[i];', 3.4019391052900155e-06], ['FILE*', 3.4019391052900155e-06], ['stdin;', 3.4019391052900155e-06], ['fopen(filename,', 3.4019391052900155e-06], ['"r");', 3.4019391052900155e-06], ['(file', 3.4019391052900155e-06], ['go_fatal_error(Linemap::unknown_location(),', 3.4019391052900155e-06], ['Lex', 3.4019391052900155e-06], ['lexer(filename,', 3.4019391052900155e-06], ['::gogo->linemap());', 3.4019391052900155e-06], ['parse(&lexer,', 3.4019391052900155e-06], ['::gogo);', 3.4019391052900155e-06], ['parse.program();', 3.4019391052900155e-06], ['fclose(file);', 3.4019391052900155e-06], ['Lex::Linknames*', 3.4019391052900155e-06], ['linknames', 3.4019391052900155e-06], ['lexer.get_and_clear_linknames();', 3.4019391052900155e-06], ['(linknames', 3.4019391052900155e-06], ['(!::gogo->current_file_imported_unsafe())', 3.4019391052900155e-06], ['linknames->begin();', 3.4019391052900155e-06], ['linknames->end();', 3.4019391052900155e-06], ['go_error_at(p->second.loc,', 3.4019391052900155e-06], ['("//go:linkname', 3.4019391052900155e-06], ['\\"unsafe\\""));', 3.4019391052900155e-06], ['all_linknames.insert(linknames->begin(),', 3.4019391052900155e-06], ['linknames->end());', 3.4019391052900155e-06], ['::gogo->define_global_names();', 3.4019391052900155e-06], ['all_linknames.begin();', 3.4019391052900155e-06], ['all_linknames.end();', 3.4019391052900155e-06], ['::gogo->add_linkname(p->first,', 3.4019391052900155e-06], ['p->second.is_exported,', 3.4019391052900155e-06], ['p->second.ext_name,', 3.4019391052900155e-06], ['p->second.loc);', 3.4019391052900155e-06], ['::gogo->finalize_methods();', 3.4019391052900155e-06], ['terminating', 3.4019391052900155e-06], ['::gogo->check_return_statements();', 3.4019391052900155e-06], ['::gogo->lower_parse_tree();', 3.4019391052900155e-06], ['linemap.', 3.4019391052900155e-06], ['::gogo->linemap()->stop();', 3.4019391052900155e-06], ['::gogo->create_function_descriptors();', 3.4019391052900155e-06], ['::gogo->verify_types();', 3.4019391052900155e-06], ['::gogo->determine_types();', 3.4019391052900155e-06], ['::gogo->check_types();', 3.4019391052900155e-06], ['(only_check_syntax)', 3.4019391052900155e-06], ['::gogo->analyze_escape();', 3.4019391052900155e-06], ['::gogo->do_exports();', 3.4019391052900155e-06], ['::gogo->order_evaluations();', 3.4019391052900155e-06], ['short-cut', 3.4019391052900155e-06], ['(&&,', 3.4019391052900155e-06], ['||)', 3.4019391052900155e-06], ['::gogo->remove_shortcuts();', 3.4019391052900155e-06], ['::gogo->convert_named_types();', 3.4019391052900155e-06], ['::gogo->build_recover_thunks();', 3.4019391052900155e-06], ['complicated', 3.4019391052900155e-06], ['::gogo->simplify_thunk_statements();', 3.4019391052900155e-06], ['::gogo->write_specific_type_functions();', 3.4019391052900155e-06], ['::gogo->add_write_barriers();', 3.4019391052900155e-06], ['::gogo->flatten();', 3.4019391052900155e-06], ['::gogo->reclaim_escape_nodes();', 3.4019391052900155e-06], ['ast,', 3.4019391052900155e-06], ['filename[0]', 3.4019391052900155e-06], ['::gogo->dump_ast(filenames[0]);', 3.4019391052900155e-06], ['go_write_globals()', 3.4019391052900155e-06], ['::gogo->write_globals();', 3.4019391052900155e-06], ['langhooks', 3.4019391052900155e-06], ['go_get_gogo()', 3.4019391052900155e-06], ['::gogo;', 3.4019391052900155e-06], ['gogo.cc', 3.4019391052900155e-06], ['"filenames.h"', 3.4019391052900155e-06], ['Gogo.', 3.4019391052900155e-06], ['Gogo::Gogo(Backend*', 3.4019391052900155e-06], ['backend,', 3.4019391052900155e-06], ['linemap,', 3.4019391052900155e-06], ['pointer_size)', 3.4019391052900155e-06], ['backend_(backend),', 3.4019391052900155e-06], ['linemap_(linemap),', 3.4019391052900155e-06], ['package_(NULL),', 3.4019391052900155e-06], ['functions_(),', 3.4019391052900155e-06], ['globals_(new', 3.4019391052900155e-06], ['file_block_names_(),', 3.4019391052900155e-06], ['imports_(),', 3.4019391052900155e-06], ['imported_unsafe_(false),', 3.4019391052900155e-06], ['current_file_imported_unsafe_(false),', 3.4019391052900155e-06], ['packages_(),', 3.4019391052900155e-06], ['init_functions_(),', 3.4019391052900155e-06], ['var_deps_(),', 3.4019391052900155e-06], ['need_init_fn_(false),', 3.4019391052900155e-06], ['init_fn_name_(),', 3.4019391052900155e-06], ['imported_init_fns_(),', 3.4019391052900155e-06], ['pkgpath_(),', 3.4019391052900155e-06], ['pkgpath_symbol_(),', 3.4019391052900155e-06], ['prefix_(),', 3.4019391052900155e-06], ['pkgpath_set_(false),', 3.4019391052900155e-06], ['pkgpath_from_option_(false),', 3.4019391052900155e-06], ['prefix_from_option_(false),', 3.4019391052900155e-06], ['relative_import_path_(),', 3.4019391052900155e-06], ['c_header_(),', 3.4019391052900155e-06], ['check_divide_by_zero_(true),', 3.4019391052900155e-06], ['check_divide_overflow_(true),', 3.4019391052900155e-06], ['compiling_runtime_(false),', 3.4019391052900155e-06], ['debug_escape_level_(0),', 3.4019391052900155e-06], ['nil_check_size_threshold_(4096),', 3.4019391052900155e-06], ['verify_types_(),', 3.4019391052900155e-06], ['interface_types_(),', 3.4019391052900155e-06], ['specific_type_functions_(),', 3.4019391052900155e-06], ['specific_type_functions_are_written_(false),', 3.4019391052900155e-06], ['named_types_are_converted_(false),', 3.4019391052900155e-06], ['analysis_sets_(),', 3.4019391052900155e-06], ['gc_roots_(),', 3.4019391052900155e-06], ['imported_inlinable_functions_(),', 3.4019391052900155e-06], ['imported_inline_functions_()', 3.4019391052900155e-06], ['Type::make_integer_type("uint8",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINT8);', 3.4019391052900155e-06], ['this->add_named_type(uint8_type);', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("uint16",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINT16));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("uint32",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINT32));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("uint64",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINT64));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("int8",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_INT8));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("int16",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_INT16));', 3.4019391052900155e-06], ['Type::make_integer_type("int32",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_INT32);', 3.4019391052900155e-06], ['this->add_named_type(int32_type);', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("int64",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_INT64));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_float_type("float32",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_FLOAT32));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_float_type("float64",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_FLOAT64));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_complex_type("complex64",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_COMPLEX64));', 3.4019391052900155e-06], ['this->add_named_type(Type::make_complex_type("complex128",', 3.4019391052900155e-06], ['128,', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_COMPLEX128));', 3.4019391052900155e-06], ['pointer_size;', 3.4019391052900155e-06], ['(int_type_size', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("uint",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINT));', 3.4019391052900155e-06], ['Type::make_integer_type("int",', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_INT);', 3.4019391052900155e-06], ['this->add_named_type(int_type);', 3.4019391052900155e-06], ['this->add_named_type(Type::make_integer_type("uintptr",', 3.4019391052900155e-06], ['pointer_size,', 3.4019391052900155e-06], ['RUNTIME_TYPE_KIND_UINTPTR));', 3.4019391052900155e-06], ['"byte"', 3.4019391052900155e-06], ['"uint8".', 3.4019391052900155e-06], ['uint8_type->integer_type()->set_is_byte();', 3.4019391052900155e-06], ['Named_object::make_type("byte",', 3.4019391052900155e-06], ['uint8_type,', 3.4019391052900155e-06], ['byte_type->type_value()->set_is_alias();', 3.4019391052900155e-06], ['this->add_named_type(byte_type->type_value());', 3.4019391052900155e-06], ['"rune"', 3.4019391052900155e-06], ['"int32".', 3.4019391052900155e-06], ['int32_type->integer_type()->set_is_rune();', 3.4019391052900155e-06], ['rune_type', 3.4019391052900155e-06], ['Named_object::make_type("rune",', 3.4019391052900155e-06], ['rune_type->type_value()->set_is_alias();', 3.4019391052900155e-06], ['this->add_named_type(rune_type->type_value());', 3.4019391052900155e-06], ['this->add_named_type(Type::make_named_bool_type());', 3.4019391052900155e-06], ['this->add_named_type(Type::make_named_string_type());', 3.4019391052900155e-06], ['Error()', 3.4019391052900155e-06], ['}.', 3.4019391052900155e-06], ['*methods', 3.4019391052900155e-06], ['*results', 3.4019391052900155e-06], ['Type::lookup_string_type(),', 3.4019391052900155e-06], ['*method_type', 3.4019391052900155e-06], ['methods->push_back(Typed_identifier("Error",', 3.4019391052900155e-06], ['method_type,', 3.4019391052900155e-06], ['Interface_type', 3.4019391052900155e-06], ['*error_iface', 3.4019391052900155e-06], ['Type::make_interface_type(methods,', 3.4019391052900155e-06], ['error_iface->finalize_methods();', 3.4019391052900155e-06], ['Named_type', 3.4019391052900155e-06], ['*error_type', 3.4019391052900155e-06], ['Named_object::make_type("error",', 3.4019391052900155e-06], ['error_iface,', 3.4019391052900155e-06], ['loc)->type_value();', 3.4019391052900155e-06], ['this->add_named_type(error_type);', 3.4019391052900155e-06], ['this->globals_->add_constant(Typed_identifier("true",', 3.4019391052900155e-06], ['this->globals_->add_constant(Typed_identifier("false",', 3.4019391052900155e-06], ['this->globals_->add_constant(Typed_identifier("nil",', 3.4019391052900155e-06], ['Type::make_nil_type(),', 3.4019391052900155e-06], ['abstract_int_type', 3.4019391052900155e-06], ['this->globals_->add_constant(Typed_identifier("iota",', 3.4019391052900155e-06], ['abstract_int_type,', 3.4019391052900155e-06], ['Expression::make_iota(),', 3.4019391052900155e-06], ['new_type->set_is_varargs();', 3.4019391052900155e-06], ['new_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("new",', 3.4019391052900155e-06], ['new_type,', 3.4019391052900155e-06], ['make_type', 3.4019391052900155e-06], ['make_type->set_is_varargs();', 3.4019391052900155e-06], ['make_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("make",', 3.4019391052900155e-06], ['make_type,', 3.4019391052900155e-06], ['len_result', 3.4019391052900155e-06], ['len_result->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['len_type', 3.4019391052900155e-06], ['len_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("len",', 3.4019391052900155e-06], ['len_type,', 3.4019391052900155e-06], ['cap_result', 3.4019391052900155e-06], ['cap_result->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['cap_type', 3.4019391052900155e-06], ['cap_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("cap",', 3.4019391052900155e-06], ['cap_type,', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("print",', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("println",', 3.4019391052900155e-06], ['panic_parms', 3.4019391052900155e-06], ['panic_parms->push_back(Typed_identifier("e",', 3.4019391052900155e-06], ['*panic_type', 3.4019391052900155e-06], ['panic_parms,', 3.4019391052900155e-06], ['panic_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("panic",', 3.4019391052900155e-06], ['panic_type,', 3.4019391052900155e-06], ['recover_result', 3.4019391052900155e-06], ['recover_result->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['recover_type', 3.4019391052900155e-06], ['recover_result,', 3.4019391052900155e-06], ['recover_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("recover",', 3.4019391052900155e-06], ['recover_type,', 3.4019391052900155e-06], ['close_type', 3.4019391052900155e-06], ['close_type->set_is_varargs();', 3.4019391052900155e-06], ['close_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("close",', 3.4019391052900155e-06], ['close_type,', 3.4019391052900155e-06], ['copy_result', 3.4019391052900155e-06], ['copy_result->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['copy_type', 3.4019391052900155e-06], ['copy_result,', 3.4019391052900155e-06], ['copy_type->set_is_varargs();', 3.4019391052900155e-06], ['copy_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("copy",', 3.4019391052900155e-06], ['copy_type,', 3.4019391052900155e-06], ['append_type', 3.4019391052900155e-06], ['append_type->set_is_varargs();', 3.4019391052900155e-06], ['append_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("append",', 3.4019391052900155e-06], ['append_type,', 3.4019391052900155e-06], ['complex_type', 3.4019391052900155e-06], ['complex_type->set_is_varargs();', 3.4019391052900155e-06], ['complex_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("complex",', 3.4019391052900155e-06], ['complex_type,', 3.4019391052900155e-06], ['real_type->set_is_varargs();', 3.4019391052900155e-06], ['real_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("real",', 3.4019391052900155e-06], ['real_type,', 3.4019391052900155e-06], ['imag_type', 3.4019391052900155e-06], ['imag_type->set_is_varargs();', 3.4019391052900155e-06], ['imag_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("imag",', 3.4019391052900155e-06], ['imag_type,', 3.4019391052900155e-06], ['delete_type', 3.4019391052900155e-06], ['delete_type->set_is_varargs();', 3.4019391052900155e-06], ['delete_type->set_is_builtin();', 3.4019391052900155e-06], ['this->globals_->add_function_declaration("delete",', 3.4019391052900155e-06], ['delete_type,', 3.4019391052900155e-06], ['Gogo::pkgpath_for_symbol(const', 3.4019391052900155e-06], ['go_encode_id(pkgpath);', 3.4019391052900155e-06], ['hash.', 3.4019391052900155e-06], ['Gogo::hash_string(const', 3.4019391052900155e-06], ['s,', 3.4019391052900155e-06], ['h)', 3.4019391052900155e-06], ['--len)', 3.4019391052900155e-06], ['*p++;', 3.4019391052900155e-06], ['h*=', 3.4019391052900155e-06], ['16777619;', 3.4019391052900155e-06], ['h;', 3.4019391052900155e-06], ['reflection', 3.4019391052900155e-06], ['Gogo::pkgpath()', 3.4019391052900155e-06], ['Gogo::set_pkgpath(const', 3.4019391052900155e-06], ['go_assert(!this->pkgpath_set_);', 3.4019391052900155e-06], ['this->pkgpath_from_option_', 3.4019391052900155e-06], ['Gogo::pkgpath_symbol()', 3.4019391052900155e-06], ['Gogo::set_prefix(const', 3.4019391052900155e-06], ['go_assert(!this->prefix_from_option_);', 3.4019391052900155e-06], ['this->prefix_from_option_', 3.4019391052900155e-06], ['hidden,', 3.4019391052900155e-06], ['rejected', 3.4019391052900155e-06], ['go_encode_id', 3.4019391052900155e-06], ['(avoid', 3.4019391052900155e-06], ['..u,', 3.4019391052900155e-06], ['..U,', 3.4019391052900155e-06], ['..z).', 3.4019391052900155e-06], ['Gogo::append_possibly_hidden_name(std::string', 3.4019391052900155e-06], ['ideal.', 3.4019391052900155e-06], ['(!Gogo::is_hidden_name(name))', 3.4019391052900155e-06], ['Gogo::hidden_name_pkgpath(name);', 3.4019391052900155e-06], ['lastR', 3.4019391052900155e-06], ['result->at(result->length()', 3.4019391052900155e-06], ['pkgpath.at(0);', 3.4019391052900155e-06], ['(lastR', 3.4019391052900155e-06], ['(firstP', 3.4019391052900155e-06], ["'U'", 3.4019391052900155e-06], ["'z'))", 3.4019391052900155e-06], ['"_.";', 3.4019391052900155e-06], ['n.append(pkgpath);', 3.4019391052900155e-06], ['n.append(1,', 3.4019391052900155e-06], ['n.append(Gogo::unpack_hidden_name(name));', 3.4019391052900155e-06], ['Munge', 3.4019391052900155e-06], ['Gogo::message_name(const', 3.4019391052900155e-06], ['go_localize_identifier(Gogo::unpack_hidden_name(name).c_str());', 3.4019391052900155e-06], ['Gogo::package_name()', 3.4019391052900155e-06], ['go_assert(this->package_', 3.4019391052900155e-06], ['Gogo::set_package_name(const', 3.4019391052900155e-06], ['(this->package_->package_name()', 3.4019391052900155e-06], ['Gogo::message_name(this->package_->package_name()).c_str());', 3.4019391052900155e-06], ['compiling,', 3.4019391052900155e-06], ['reflect.Type.PkgPath', 3.4019391052900155e-06], ['(this->pkgpath_set_)', 3.4019391052900155e-06], ['(!this->prefix_from_option_', 3.4019391052900155e-06], ['"main")', 3.4019391052900155e-06], ['Gogo::pkgpath_for_symbol(package_name);', 3.4019391052900155e-06], ['(!this->prefix_from_option_)', 3.4019391052900155e-06], ['(Gogo::pkgpath_for_symbol(this->prefix_)', 3.4019391052900155e-06], ['Gogo::pkgpath_for_symbol(package_name));', 3.4019391052900155e-06], ['this->register_package(this->pkgpath_,', 3.4019391052900155e-06], ['this->pkgpath_symbol_,', 3.4019391052900155e-06], ['this->package_->set_package_name(package_name,', 3.4019391052900155e-06], ['uloc', 3.4019391052900155e-06], ['this->declare_function(Gogo::pack_hidden_name("main",', 3.4019391052900155e-06], ['Type::make_function_type', 3.4019391052900155e-06], ['uloc),', 3.4019391052900155e-06], ['uloc);', 3.4019391052900155e-06], ['Gogo::is_main_package()', 3.4019391052900155e-06], ['(this->package_name()', 3.4019391052900155e-06], ['!this->pkgpath_from_option_', 3.4019391052900155e-06], ['!this->prefix_from_option_);', 3.4019391052900155e-06], ['Gogo::import_package(const', 3.4019391052900155e-06], ['must_exist,', 3.4019391052900155e-06], ['(filename.empty())', 3.4019391052900155e-06], ['empty");', 3.4019391052900155e-06], ['*pf', 3.4019391052900155e-06], ['filename.data();', 3.4019391052900155e-06], ['filename.length();', 3.4019391052900155e-06], ['Lex::fetch_char(pf,', 3.4019391052900155e-06], ['sequence");', 3.4019391052900155e-06], ['NUL");', 3.4019391052900155e-06], ['backslash;', 3.4019391052900155e-06], ['slash");', 3.4019391052900155e-06], ['(Lex::is_unicode_space(c))', 3.4019391052900155e-06], ['0x7f', 3.4019391052900155e-06], ['strchr("!\\"#$%&\'()*,:;<=>?[]^`{|}",', 3.4019391052900155e-06], ['\'%c\'",', 3.4019391052900155e-06], ['(IS_ABSOLUTE_PATH(filename.c_str()))', 3.4019391052900155e-06], ['path");', 3.4019391052900155e-06], ['(local_name', 3.4019391052900155e-06], ['init");', 3.4019391052900155e-06], ['(filename', 3.4019391052900155e-06], ['"unsafe")', 3.4019391052900155e-06], ['this->import_unsafe(local_name,', 3.4019391052900155e-06], ['Imports::const_iterator', 3.4019391052900155e-06], ['this->imports_.find(filename);', 3.4019391052900155e-06], ['this->imports_.end())', 3.4019391052900155e-06], ['local_name;', 3.4019391052900155e-06], ['is_local_name_exported;', 3.4019391052900155e-06], ['(ln.empty())', 3.4019391052900155e-06], ['go_assert(!ln.empty());', 3.4019391052900155e-06], ['Lex::is_exported_name(ln);', 3.4019391052900155e-06], ['package->bindings();', 3.4019391052900155e-06], ['this->add_dot_import_object(p->second);', 3.4019391052900155e-06], ['package->add_alias(dot_alias,', 3.4019391052900155e-06], ['package->add_alias(ln,', 3.4019391052900155e-06], ['this->pack_hidden_name(ln,', 3.4019391052900155e-06], ['is_ln_exported);', 3.4019391052900155e-06], ['this->package_->bindings()->add_package(ln,', 3.4019391052900155e-06], ['package);', 3.4019391052900155e-06], ['Import::Stream*', 3.4019391052900155e-06], ['Import::open_package(filename,', 3.4019391052900155e-06], ['this->relative_import_path_);', 3.4019391052900155e-06], ['(stream', 3.4019391052900155e-06], ['(must_exist)', 3.4019391052900155e-06], ['found",', 3.4019391052900155e-06], ['filename.c_str());', 3.4019391052900155e-06], ['Import*', 3.4019391052900155e-06], ['imp', 3.4019391052900155e-06], ['Import(stream,', 3.4019391052900155e-06], ['imp->register_builtin_types(this);', 3.4019391052900155e-06], ['imp->import(this,', 3.4019391052900155e-06], ['is_local_name_exported);', 3.4019391052900155e-06], ['(package->pkgpath()', 3.4019391052900155e-06], ['this->pkgpath())', 3.4019391052900155e-06], ['("imported', 3.4019391052900155e-06], ['"being', 3.4019391052900155e-06], ['option)"));', 3.4019391052900155e-06], ['this->imports_.insert(std::make_pair(filename,', 3.4019391052900155e-06], ['imp->clear_stream();', 3.4019391052900155e-06], ['stream;', 3.4019391052900155e-06], ['imp;', 3.4019391052900155e-06], ['Gogo::lookup_init(const', 3.4019391052900155e-06], ['tmp("",', 3.4019391052900155e-06], ['Import_init_set::iterator', 3.4019391052900155e-06], ['this->imported_init_fns_.find(&tmp);', 3.4019391052900155e-06], ['this->imported_init_fns_.end())', 3.4019391052900155e-06], ['*it', 3.4019391052900155e-06], ['Gogo::add_import_init_fn(const', 3.4019391052900155e-06], ['prio)', 3.4019391052900155e-06], ['P2,', 3.4019391052900155e-06], ['P2', 3.4019391052900155e-06], ['P1', 3.4019391052900155e-06], ['(perhaps', 3.4019391052900155e-06], ['indirectly),', 3.4019391052900155e-06], ['priorities.', 3.4019391052900155e-06], ['OK,', 3.4019391052900155e-06], ['(ii->package_name()', 3.4019391052900155e-06], ['Gogo::message_name(init_name).c_str());', 3.4019391052900155e-06], ['"used', 3.4019391052900155e-06], ['Gogo::message_name(ii->package_name()).c_str());', 3.4019391052900155e-06], ['Gogo::message_name(package_name).c_str());', 3.4019391052900155e-06], ['ii->set_priority(prio);', 3.4019391052900155e-06], ['nii', 3.4019391052900155e-06], ['Import_init(package_name,', 3.4019391052900155e-06], ['prio);', 3.4019391052900155e-06], ['this->imported_init_fns_.insert(nii);', 3.4019391052900155e-06], ['Gogo::in_global_scope()', 3.4019391052900155e-06], ['Gogo::update_init_priority(Import_init*', 3.4019391052900155e-06], ['ii,', 3.4019391052900155e-06], ['*>*', 3.4019391052900155e-06], ['visited)', 3.4019391052900155e-06], ['visited->insert(ii);', 3.4019391052900155e-06], ['succ', 3.4019391052900155e-06], ['(visited->find(succ)', 3.4019391052900155e-06], ['visited->end())', 3.4019391052900155e-06], ['update_init_priority(succ,', 3.4019391052900155e-06], ['visited);', 3.4019391052900155e-06], ['std::max(succ_prior,', 3.4019391052900155e-06], ['succ->priority());', 3.4019391052900155e-06], ['succ_prior)', 3.4019391052900155e-06], ['ii->set_priority(succ_prior', 3.4019391052900155e-06], ['Gogo::recompute_init_priorities()', 3.4019391052900155e-06], ['std::set<Import_init', 3.4019391052900155e-06], ['nonroots;', 3.4019391052900155e-06], ['nonroots.insert(ii);', 3.4019391052900155e-06], ['visited;', 3.4019391052900155e-06], ['(nonroots.find(ii)', 3.4019391052900155e-06], ['nonroots.end())', 3.4019391052900155e-06], ['update_init_priority(ii,', 3.4019391052900155e-06], ['&visited);', 3.4019391052900155e-06], ['INIT_STMTS', 3.4019391052900155e-06], ['Gogo::init_imports(std::vector<Bstatement*>&', 3.4019391052900155e-06], ['*bfunction)', 3.4019391052900155e-06], ['go_assert(this->is_main_package());', 3.4019391052900155e-06], ['(this->imported_init_fns_.empty())', 3.4019391052900155e-06], ['unknown_loc', 3.4019391052900155e-06], ['func_type', 3.4019391052900155e-06], ['func_type->get_backend_fntype(this);', 3.4019391052900155e-06], ['Recompute', 3.4019391052900155e-06], ['recompute_init_priorities();', 3.4019391052900155e-06], ['((*p)->priority()', 3.4019391052900155e-06], ['"internal', 3.4019391052900155e-06], ['(*p)->package_name().c_str());', 3.4019391052900155e-06], ['v.push_back(*p);', 3.4019391052900155e-06], ['v.end(),', 3.4019391052900155e-06], ['priority_compare);', 3.4019391052900155e-06], ['Import_init*>::const_iterator', 3.4019391052900155e-06], ['user_name', 3.4019391052900155e-06], ['ii->package_name()', 3.4019391052900155e-06], ['".init";', 3.4019391052900155e-06], ['init_name(ii->init_name());', 3.4019391052900155e-06], ['pfunc', 3.4019391052900155e-06], ['this->backend()->function(fntype,', 3.4019391052900155e-06], ['user_name,', 3.4019391052900155e-06], ['pfunc_code', 3.4019391052900155e-06], ['this->backend()->function_code_expression(pfunc,', 3.4019391052900155e-06], ['pfunc_call', 3.4019391052900155e-06], ['this->backend()->call_expression(bfunction,', 3.4019391052900155e-06], ['pfunc_code,', 3.4019391052900155e-06], ['init_stmts.push_back(this->backend()->expression_statement(bfunction,', 3.4019391052900155e-06], ['pfunc_call));', 3.4019391052900155e-06], ['gcRoot', 3.4019391052900155e-06], ['Total', 3.4019391052900155e-06], ['gcdata.', 3.4019391052900155e-06], ['*byte', 3.4019391052900155e-06], ['gcRootList', 3.4019391052900155e-06], ['*gcRootList', 3.4019391052900155e-06], ['[...]gcRoot', 3.4019391052900155e-06], ['Gogo::register_gc_vars(const', 3.4019391052900155e-06], ['std::vector<Named_object*>&', 3.4019391052900155e-06], ['var_gc,', 3.4019391052900155e-06], ['init_bfn)', 3.4019391052900155e-06], ['(var_gc.empty()', 3.4019391052900155e-06], ['this->gc_roots_.empty())', 3.4019391052900155e-06], ['pvt', 3.4019391052900155e-06], ['this->lookup_global("byte")->type_value();', 3.4019391052900155e-06], ['pointer_byte_type', 3.4019391052900155e-06], ['root_type', 3.4019391052900155e-06], ['Type::make_builtin_struct_type(4,', 3.4019391052900155e-06], ['"decl",', 3.4019391052900155e-06], ['"size",', 3.4019391052900155e-06], ['"ptrdata",', 3.4019391052900155e-06], ['"gcdata",', 3.4019391052900155e-06], ['pointer_byte_type);', 3.4019391052900155e-06], ['builtin_loc', 3.4019391052900155e-06], ['roots_len', 3.4019391052900155e-06], ['var_gc.size()', 3.4019391052900155e-06], ['this->gc_roots_.size();', 3.4019391052900155e-06], ['Expression::make_integer_ul(roots_len,', 3.4019391052900155e-06], ['root_array_type', 3.4019391052900155e-06], ['Type::make_array_type(root_type,', 3.4019391052900155e-06], ['root_array_type->set_is_array_incomparable();', 3.4019391052900155e-06], ['root_list_type', 3.4019391052900155e-06], ['Type::make_builtin_struct_type(3,', 3.4019391052900155e-06], ['"next",', 3.4019391052900155e-06], ['"count",', 3.4019391052900155e-06], ['"roots",', 3.4019391052900155e-06], ['root_array_type);', 3.4019391052900155e-06], ['roots_init', 3.4019391052900155e-06], ['var_gc.begin();', 3.4019391052900155e-06], ['var_gc.end();', 3.4019391052900155e-06], ['no_loc', 3.4019391052900155e-06], ['Expression::make_var_reference(*p,', 3.4019391052900155e-06], ['decl_addr->unary_expression()->set_does_not_escape();', 3.4019391052900155e-06], ['Expression::make_cast(pvt,', 3.4019391052900155e-06], ['decl_addr,', 3.4019391052900155e-06], ['init->push_back(decl_addr);', 3.4019391052900155e-06], ['Expression::make_ptrmask_symbol(decl->type());', 3.4019391052900155e-06], ['this->gc_roots_.begin();', 3.4019391052900155e-06], ['this->gc_roots_.end();', 3.4019391052900155e-06], ['expr->location();', 3.4019391052900155e-06], ['init->push_back(Expression::make_cast(pvt,', 3.4019391052900155e-06], ['eloc));', 3.4019391052900155e-06], ['expr->type()->points_to();', 3.4019391052900155e-06], ['Expression::make_ptrmask_symbol(type);', 3.4019391052900155e-06], ['eloc);', 3.4019391052900155e-06], ['root_list_init', 3.4019391052900155e-06], ['root_list_init->push_back(Expression::make_nil(builtin_loc));', 3.4019391052900155e-06], ['root_list_init->push_back(Expression::make_integer_ul(roots_len,', 3.4019391052900155e-06], ['builtin_loc));', 3.4019391052900155e-06], ['roots_ctor', 3.4019391052900155e-06], ['Expression::make_array_composite_literal(root_array_type,', 3.4019391052900155e-06], ['roots_init,', 3.4019391052900155e-06], ['root_list_init->push_back(roots_ctor);', 3.4019391052900155e-06], ['root_list_ctor', 3.4019391052900155e-06], ['Expression::make_struct_composite_literal(root_list_type,', 3.4019391052900155e-06], ['root_list_init,', 3.4019391052900155e-06], ['root_addr', 3.4019391052900155e-06], ['root_list_ctor,', 3.4019391052900155e-06], ['root_addr->unary_expression()->set_is_gc_root();', 3.4019391052900155e-06], ['register_roots', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::REGISTER_GC_ROOTS,', 3.4019391052900155e-06], ['builtin_loc,', 3.4019391052900155e-06], ['root_addr);', 3.4019391052900155e-06], ['context(this,', 3.4019391052900155e-06], ['register_roots->get_backend(&context);', 3.4019391052900155e-06], ['init_stmts.push_back(this->backend()->expression_statement(init_bfn,', 3.4019391052900155e-06], ['bcall));', 3.4019391052900155e-06], ['Gogo::initialization_function_decl()', 3.4019391052900155e-06], ['this->get_init_fn_name();', 3.4019391052900155e-06], ['CODE_STMT', 3.4019391052900155e-06], ['Gogo::create_initialization_function(Named_object*', 3.4019391052900155e-06], ['initfn,', 3.4019391052900155e-06], ['thought', 3.4019391052900155e-06], ['go_assert(this->is_main_package()', 3.4019391052900155e-06], ['this->need_init_fn_);', 3.4019391052900155e-06], ['(initfn', 3.4019391052900155e-06], ['Bind', 3.4019391052900155e-06], ['initfn->func_value()->get_or_make_decl(this,', 3.4019391052900155e-06], ['pkg_loc', 3.4019391052900155e-06], ['this->backend()->block(fndecl,', 3.4019391052900155e-06], ['pkg_loc,', 3.4019391052900155e-06], ['pkg_loc);', 3.4019391052900155e-06], ['(!this->backend()->function_set_body(fndecl,', 3.4019391052900155e-06], ['initfn;', 3.4019391052900155e-06], ['accumulate.', 3.4019391052900155e-06], ['Unordered_set(Named_object*)', 3.4019391052900155e-06], ['Vars;', 3.4019391052900155e-06], ['Temporary_statement*.', 3.4019391052900155e-06], ['Seen_objects;', 3.4019391052900155e-06], ['Find_vars()', 3.4019391052900155e-06], ['vars_(),', 3.4019391052900155e-06], ['seen_objects_()', 3.4019391052900155e-06], ['Vars::const_iterator', 3.4019391052900155e-06], ['this->vars_.begin();', 3.4019391052900155e-06], ['this->vars_.end();', 3.4019391052900155e-06], ['Accumulated', 3.4019391052900155e-06], ['Vars', 3.4019391052900155e-06], ['vars_;', 3.4019391052900155e-06], ['Objects', 3.4019391052900155e-06], ['Seen_objects', 3.4019391052900155e-06], ['seen_objects_;', 3.4019391052900155e-06], ['Find_vars::expression(Expression**', 3.4019391052900155e-06], ['e->var_expression();', 3.4019391052900155e-06], ['(!v->is_variable()', 3.4019391052900155e-06], ['v->package()', 3.4019391052900155e-06], ['this->seen_objects_.insert(v);', 3.4019391052900155e-06], ['(v->var_value()->is_global())', 3.4019391052900155e-06], ['this->vars_.insert(v);', 3.4019391052900155e-06], ['v->var_value()->init();', 3.4019391052900155e-06], ['see.', 3.4019391052900155e-06], ['e->func_expression();', 3.4019391052900155e-06], ['e->bound_method_expression();', 3.4019391052900155e-06], ['fe->named_object()', 3.4019391052900155e-06], ['(f->is_function()', 3.4019391052900155e-06], ['f->package()', 3.4019391052900155e-06], ['this->seen_objects_.insert(f);', 3.4019391052900155e-06], ['(f->func_value()->block()->traverse(this)', 3.4019391052900155e-06], ['(tre', 3.4019391052900155e-06], ['tre->statement();', 3.4019391052900155e-06], ['ts->init();', 3.4019391052900155e-06], ['this->seen_objects_.insert(ts);', 3.4019391052900155e-06], ['PREINIT,', 3.4019391052900155e-06], ['DEP', 3.4019391052900155e-06], ['VAR.', 3.4019391052900155e-06], ['expression_requires(Expression*', 3.4019391052900155e-06], ['dep,', 3.4019391052900155e-06], ['(preinit', 3.4019391052900155e-06], ['preinit->traverse(&find_vars);', 3.4019391052900155e-06], ['Var_init()', 3.4019391052900155e-06], ['var_(NULL),', 3.4019391052900155e-06], ['init_(NULL),', 3.4019391052900155e-06], ['Var_init(Named_object*', 3.4019391052900155e-06], ['var_(var),', 3.4019391052900155e-06], ['var()', 3.4019391052900155e-06], ['this->var_;', 3.4019391052900155e-06], ['add_ref(Named_object*', 3.4019391052900155e-06], ['refs()', 3.4019391052900155e-06], ['clear_refs();', 3.4019391052900155e-06], ['dep_count()', 3.4019391052900155e-06], ['this->dep_count_;', 3.4019391052900155e-06], ['add_dependency()', 3.4019391052900155e-06], ['++this->dep_count_;', 3.4019391052900155e-06], ['Decrement', 3.4019391052900155e-06], ['remove_dependency()', 3.4019391052900155e-06], ['--this->dep_count_;', 3.4019391052900155e-06], ['var_;', 3.4019391052900155e-06], ['init_;', 3.4019391052900155e-06], ['refs_;', 3.4019391052900155e-06], ['dep_count_;', 3.4019391052900155e-06], ['Var_init::add_ref(Named_object*', 3.4019391052900155e-06], ['std::vector<Named_object*>;', 3.4019391052900155e-06], ['this->refs_->push_back(var);', 3.4019391052900155e-06], ['Var_init::clear_refs()', 3.4019391052900155e-06], ['v1,', 3.4019391052900155e-06], ['v2)', 3.4019391052900155e-06], ['v1.var()->name()', 3.4019391052900155e-06], ['v2.var()->name();', 3.4019391052900155e-06], ['std::list<Var_init>', 3.4019391052900155e-06], ['Var_inits;', 3.4019391052900155e-06], ['rule', 3.4019391052900155e-06], ['V2', 3.4019391052900155e-06], ['V2.', 3.4019391052900155e-06], ['sort_var_inits(Gogo*', 3.4019391052900155e-06], ['Var_inits*', 3.4019391052900155e-06], ['var_inits)', 3.4019391052900155e-06], ['(var_inits->empty())', 3.4019391052900155e-06], ['Var_init*>', 3.4019391052900155e-06], ['var_to_init;', 3.4019391052900155e-06], ['std::map<Var_init,', 3.4019391052900155e-06], ['Init_deps;', 3.4019391052900155e-06], ['Init_deps', 3.4019391052900155e-06], ['init_deps;', 3.4019391052900155e-06], ['var_to_init[var]', 3.4019391052900155e-06], ['&*pvar;', 3.4019391052900155e-06], ['(var->var_value()->has_pre_init())', 3.4019391052900155e-06], ['var->var_value()->preinit()->traverse(&find_vars);', 3.4019391052900155e-06], ['gogo->var_depends_on(var->var_value());', 3.4019391052900155e-06], ['dinit', 3.4019391052900155e-06], ['(dinit', 3.4019391052900155e-06], ['Expression::traverse(&dinit,', 3.4019391052900155e-06], ['pvar->add_ref(*p);', 3.4019391052900155e-06], ['init_deps,', 3.4019391052900155e-06], ['pvar->refs();', 3.4019391052900155e-06], ['(refs', 3.4019391052900155e-06], ['refs->begin();', 3.4019391052900155e-06], ['refs->end();', 3.4019391052900155e-06], ['++pdep)', 3.4019391052900155e-06], ['*pdep;', 3.4019391052900155e-06], ['dep)', 3.4019391052900155e-06], ['preinitializer', 3.4019391052900155e-06], ['(var->var_value()->init()', 3.4019391052900155e-06], ['gogo->var_depends_on(var->var_value())', 3.4019391052900155e-06], ['"depends', 3.4019391052900155e-06], ['itself"),', 3.4019391052900155e-06], ['Var_init*', 3.4019391052900155e-06], ['dep_init', 3.4019391052900155e-06], ['var_to_init[dep];', 3.4019391052900155e-06], ['(dep_init', 3.4019391052900155e-06], ['init_deps[*dep_init].insert(&(*pvar));', 3.4019391052900155e-06], ['pvar->add_dependency();', 3.4019391052900155e-06], ['deprefs', 3.4019391052900155e-06], ['dep_init->refs();', 3.4019391052900155e-06], ['(deprefs', 3.4019391052900155e-06], ['deprefs->begin();', 3.4019391052900155e-06], ['deprefs->end();', 3.4019391052900155e-06], ['++pdepdep)', 3.4019391052900155e-06], ['(*pdepdep', 3.4019391052900155e-06], ['other"),', 3.4019391052900155e-06], ['var->message_name().c_str(),', 3.4019391052900155e-06], ['go_inform(dep->location(),', 3.4019391052900155e-06], ['var_to_init.clear();', 3.4019391052900155e-06], ['pvar->clear_refs();', 3.4019391052900155e-06], ['sorted.', 3.4019391052900155e-06], ['(!init_deps.empty()', 3.4019391052900155e-06], ['!init_loop)', 3.4019391052900155e-06], ['VAR_INITS', 3.4019391052900155e-06], ['ready;', 3.4019391052900155e-06], ['(!var_inits->empty())', 3.4019391052900155e-06], ['Var_inits::iterator', 3.4019391052900155e-06], ['v1;;', 3.4019391052900155e-06], ['(v1', 3.4019391052900155e-06], ['v1', 3.4019391052900155e-06], ['++v1)', 3.4019391052900155e-06], ['(v1->dep_count()', 3.4019391052900155e-06], ['go_assert(v1', 3.4019391052900155e-06], ['var_inits->end());', 3.4019391052900155e-06], ['READY', 3.4019391052900155e-06], ['V1.', 3.4019391052900155e-06], ['ready.splice(ready.end(),', 3.4019391052900155e-06], ['*var_inits,', 3.4019391052900155e-06], ['v1);', 3.4019391052900155e-06], ['Init_deps::iterator', 3.4019391052900155e-06], ['init_deps.find(*v1);', 3.4019391052900155e-06], ['(p1', 3.4019391052900155e-06], ['init_deps.end())', 3.4019391052900155e-06], ['p1->second;', 3.4019391052900155e-06], ['(std::set<Var_init*>::iterator', 3.4019391052900155e-06], ['resolved.begin();', 3.4019391052900155e-06], ['resolved.end();', 3.4019391052900155e-06], ['(*pv)->remove_dependency();', 3.4019391052900155e-06], ['init_deps.erase(p1);', 3.4019391052900155e-06], ['var_inits->swap(ready);', 3.4019391052900155e-06], ['go_assert(init_deps.empty());', 3.4019391052900155e-06], ['dependency;', 3.4019391052900155e-06], ['PREINIT', 3.4019391052900155e-06], ['VAR,', 3.4019391052900155e-06], ['Gogo::check_self_dep(Named_object*', 3.4019391052900155e-06], ['var->var_value()->preinit();', 3.4019391052900155e-06], ['this->var_depends_on(var->var_value());', 3.4019391052900155e-06], ['expression_requires(init,', 3.4019391052900155e-06], ['Gogo::write_globals()', 3.4019391052900155e-06], ['this->build_interface_method_tables();', 3.4019391052900155e-06], ['no->func_declaration_value()->build_backend_descriptor(this);', 3.4019391052900155e-06], ['Lists', 3.4019391052900155e-06], ['std::vector<Btype*>', 3.4019391052900155e-06], ['type_decls;', 3.4019391052900155e-06], ['var_decls;', 3.4019391052900155e-06], ['const_decls;', 3.4019391052900155e-06], ['std::vector<Bfunction*>', 3.4019391052900155e-06], ['func_decls;', 3.4019391052900155e-06], ['Bfunction,', 3.4019391052900155e-06], ['init_stmts;', 3.4019391052900155e-06], ['var_init_stmts;', 3.4019391052900155e-06], ['init_fndecl->func_value()->get_or_make_decl(this,', 3.4019391052900155e-06], ['this->init_imports(init_stmts,', 3.4019391052900155e-06], ['registered', 3.4019391052900155e-06], ['bindings->size_definitions();', 3.4019391052900155e-06], ['var_gc;', 3.4019391052900155e-06], ['var_gc.reserve(count_definitions);', 3.4019391052900155e-06], ['go_assert(!no->is_type_declaration()', 3.4019391052900155e-06], ['!no->is_function_declaration());', 3.4019391052900155e-06], ['no->func_value()->is_sink())', 3.4019391052900155e-06], ['no->const_value()->is_sink()))', 3.4019391052900155e-06], ['ideal', 3.4019391052900155e-06], ['non-integral', 3.4019391052900155e-06], ['(no->is_const())', 3.4019391052900155e-06], ['no->const_value()->expr()->type();', 3.4019391052900155e-06], ['(type->is_abstract()', 3.4019391052900155e-06], ['!type->is_numeric_type())', 3.4019391052900155e-06], ['no->get_backend(this,', 3.4019391052900155e-06], ['no->get_backend_variable(this,', 3.4019391052900155e-06], ['var_decls.push_back(bvar);', 3.4019391052900155e-06], ['(!var->has_pre_init())', 3.4019391052900155e-06], ['global_var_set_init', 3.4019391052900155e-06], ['zero-value', 3.4019391052900155e-06], ['var->type();', 3.4019391052900155e-06], ['init_cast', 3.4019391052900155e-06], ['Expression::make_cast(var_type,', 3.4019391052900155e-06], ['init_cast->is_static_initializer();', 3.4019391052900155e-06], ['Non-constant', 3.4019391052900155e-06], ['var_init_fn;', 3.4019391052900155e-06], ['init_fndecl->func_value();', 3.4019391052900155e-06], ['init_fndecl;', 3.4019391052900155e-06], ['var_binit', 3.4019391052900155e-06], ['var->get_init(this,', 3.4019391052900155e-06], ['var_init_fn);', 3.4019391052900155e-06], ['(var_binit', 3.4019391052900155e-06], ['(expression_requires(var->init(),', 3.4019391052900155e-06], ['this->var_depends_on(var),', 3.4019391052900155e-06], ['no))', 3.4019391052900155e-06], ['"upon', 3.4019391052900155e-06], ['this->backend()->global_variable_set_init(bvar,', 3.4019391052900155e-06], ['(is_sink)', 3.4019391052900155e-06], ['var->location();', 3.4019391052900155e-06], ['this->backend()->var_expression(bvar,', 3.4019391052900155e-06], ['this->backend()->assignment_statement(init_bfn,', 3.4019391052900155e-06], ['var_expr,', 3.4019391052900155e-06], ['var_binit,', 3.4019391052900155e-06], ['fndecl.', 3.4019391052900155e-06], ['var->get_init_block(this,', 3.4019391052900155e-06], ['init_fndecl,', 3.4019391052900155e-06], ['(var_init_stmt', 3.4019391052900155e-06], ['!var->has_pre_init())', 3.4019391052900155e-06], ['var_init_stmts.push_back(var_init_stmt);', 3.4019391052900155e-06], ['var_init_stmt));', 3.4019391052900155e-06], ['(this->var_depends_on(var)', 3.4019391052900155e-06], ['preinit.', 3.4019391052900155e-06], ['participate', 3.4019391052900155e-06], ['sorting,', 3.4019391052900155e-06], ['no->var_value()->type()->get_backend(this);', 3.4019391052900155e-06], ['this->backend()->zero_expression(btype);', 3.4019391052900155e-06], ['zero_stmt', 3.4019391052900155e-06], ['zero_stmt));', 3.4019391052900155e-06], ['(!is_sink', 3.4019391052900155e-06], ['var->type()->has_pointer())', 3.4019391052900155e-06], ['runtime.gcRoots', 3.4019391052900155e-06], ['(this->compiling_runtime()', 3.4019391052900155e-06], ['this->package_name()', 3.4019391052900155e-06], ['"gcRoots"', 3.4019391052900155e-06], ['Gogo::unpack_hidden_name(no->name())', 3.4019391052900155e-06], ['"gcRootsIndex"))', 3.4019391052900155e-06], ['var_gc.push_back(no);', 3.4019391052900155e-06], ['this->imported_inline_functions_.begin();', 3.4019391052900155e-06], ['this->imported_inline_functions_.end();', 3.4019391052900155e-06], ['(*p)->get_backend(this,', 3.4019391052900155e-06], ['this->register_gc_vars(var_gc,', 3.4019391052900155e-06], ['registered.', 3.4019391052900155e-06], ['init_stmts.push_back(this->backend()->statement_list(var_init_stmts));', 3.4019391052900155e-06], ['sorting', 3.4019391052900155e-06], ['workable', 3.4019391052900155e-06], ['(!var_inits.empty())', 3.4019391052900155e-06], ['sort_var_inits(this,', 3.4019391052900155e-06], ['&var_inits);', 3.4019391052900155e-06], ['(Var_inits::const_iterator', 3.4019391052900155e-06], ['var_inits.begin();', 3.4019391052900155e-06], ['var_inits.end();', 3.4019391052900155e-06], ['init_stmts.push_back(p->init());', 3.4019391052900155e-06], ['EMPTY_ARGS', 3.4019391052900155e-06], ['this->init_functions_.begin();', 3.4019391052900155e-06], ['this->init_functions_.end();', 3.4019391052900155e-06], ['func_loc', 3.4019391052900155e-06], ['(*p)->func_value();', 3.4019391052900155e-06], ['func_code', 3.4019391052900155e-06], ['this->backend()->function_code_expression(initfn,', 3.4019391052900155e-06], ['this->backend()->call_expression(init_bfn,', 3.4019391052900155e-06], ['ist', 3.4019391052900155e-06], ['init_stmts.push_back(ist);', 3.4019391052900155e-06], ['actions.', 3.4019391052900155e-06], ['init_fncode', 3.4019391052900155e-06], ['this->backend()->statement_list(init_stmts);', 3.4019391052900155e-06], ['this->is_main_package())', 3.4019391052900155e-06], ['this->create_initialization_function(init_fndecl,', 3.4019391052900155e-06], ['init_fncode);', 3.4019391052900155e-06], ['func_decls.push_back(init_fndecl->func_value()->get_decl());', 3.4019391052900155e-06], ['go_assert(count_definitions', 3.4019391052900155e-06], ['this->current_bindings()->size_definitions());', 3.4019391052900155e-06], ['this->backend()->write_global_definitions(type_decls,', 3.4019391052900155e-06], ['func_decls,', 3.4019391052900155e-06], ['Gogo::current_block()', 3.4019391052900155e-06], ['(this->functions_.empty())', 3.4019391052900155e-06], ['PFUNCTION', 3.4019391052900155e-06], ['Gogo::lookup(const', 3.4019391052900155e-06], ['Named_object**', 3.4019391052900155e-06], ['pfunction)', 3.4019391052900155e-06], ['(Open_functions::const_reverse_iterator', 3.4019391052900155e-06], ['this->functions_.rbegin();', 3.4019391052900155e-06], ['this->functions_.rend();', 3.4019391052900155e-06], ['p->blocks.back()->bindings()->lookup(name);', 3.4019391052900155e-06], ['p->function;', 3.4019391052900155e-06], ['(ret->package()', 3.4019391052900155e-06], ['ret->package()->package_name();', 3.4019391052900155e-06], ['ret->package()->note_usage(dot_alias);', 3.4019391052900155e-06], ['did,', 3.4019391052900155e-06], ['hide', 3.4019391052900155e-06], ['define_global_names', 3.4019391052900155e-06], ['connect', 3.4019391052900155e-06], ['Gogo::lookup_in_block(const', 3.4019391052900155e-06], ['this->functions_.back().blocks.back()->bindings()->lookup_local(name);', 3.4019391052900155e-06], ['Gogo::lookup_global(const', 3.4019391052900155e-06], ['this->globals_->lookup(name);', 3.4019391052900155e-06], ['Gogo::add_imported_package(const', 3.4019391052900155e-06], ['real_name,', 3.4019391052900155e-06], ['alias_arg,', 3.4019391052900155e-06], ['is_alias_exported,', 3.4019391052900155e-06], ['padd_to_globals)', 3.4019391052900155e-06], ['this->register_package(pkgpath,', 3.4019391052900155e-06], ['ret->set_package_name(real_name,', 3.4019391052900155e-06], ['ret->add_alias(dot_alias,', 3.4019391052900155e-06], ['alias_arg;', 3.4019391052900155e-06], ['(alias.empty())', 3.4019391052900155e-06], ['is_alias_exported', 3.4019391052900155e-06], ['Lex::is_exported_name(alias);', 3.4019391052900155e-06], ['ret->add_alias(alias,', 3.4019391052900155e-06], ['this->pack_hidden_name(alias,', 3.4019391052900155e-06], ['is_alias_exported);', 3.4019391052900155e-06], ['this->package_->bindings()->add_package(alias,', 3.4019391052900155e-06], ['(!no->is_package())', 3.4019391052900155e-06], ['Package', 3.4019391052900155e-06], ['led', 3.4019391052900155e-06], ['PKGPATH_SYMBOL', 3.4019391052900155e-06], ['guess', 3.4019391052900155e-06], ['Gogo::register_package(const', 3.4019391052900155e-06], ['std::pair<Packages::iterator,', 3.4019391052900155e-06], ['this->packages_.insert(std::make_pair(pkgpath,', 3.4019391052900155e-06], ['go_assert(package', 3.4019391052900155e-06], ['package->pkgpath()', 3.4019391052900155e-06], ['pkgpath);', 3.4019391052900155e-06], ['(!pkgpath_symbol.empty())', 3.4019391052900155e-06], ['package->set_pkgpath_symbol(pkgpath_symbol);', 3.4019391052900155e-06], ['(Linemap::is_unknown_location(package->location()))', 3.4019391052900155e-06], ['Package(pkgpath,', 3.4019391052900155e-06], ['pkgpath.', 3.4019391052900155e-06], ['Gogo::pkgpath_symbol_for_package(const', 3.4019391052900155e-06], ['Packages::iterator', 3.4019391052900155e-06], ['this->packages_.find(pkgpath);', 3.4019391052900155e-06], ['this->packages_.end());', 3.4019391052900155e-06], ['p->second->pkgpath_symbol();', 3.4019391052900155e-06], ['Gogo::start_function(const', 3.4019391052900155e-06], ['add_method_to_type,', 3.4019391052900155e-06], ['at_top_level', 3.4019391052900155e-06], ['(at_top_level', 3.4019391052900155e-06], ['this->functions_.back().function);', 3.4019391052900155e-06], ['Function(type,', 3.4019391052900155e-06], ['(type->is_method())', 3.4019391052900155e-06], ['this_param', 3.4019391052900155e-06], ['receiver->name();', 3.4019391052900155e-06], ['(rname.empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(rname))', 3.4019391052900155e-06], ['"r.%u",', 3.4019391052900155e-06], ['block->bindings()->add_variable(rname,', 3.4019391052900155e-06], ['this_param);', 3.4019391052900155e-06], ['type->is_varargs();', 3.4019391052900155e-06], ['(pname.empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(pname))', 3.4019391052900155e-06], ['"p.%u",', 3.4019391052900155e-06], ['block->bindings()->add_variable(pname,', 3.4019391052900155e-06], ['function->create_result_variables(this);', 3.4019391052900155e-06], ['nested_name;', 3.4019391052900155e-06], ['(Gogo::unpack_hidden_name(name)', 3.4019391052900155e-06], ['!type->is_method())', 3.4019391052900155e-06], ['((type->parameters()', 3.4019391052900155e-06], ['!type->parameters()->empty())', 3.4019391052900155e-06], ['(type->results()', 3.4019391052900155e-06], ['!type->results()->empty()))', 3.4019391052900155e-06], ['values");', 3.4019391052900155e-06], ['this->init_function_name();', 3.4019391052900155e-06], ['&name;', 3.4019391052900155e-06], ['this->nested_function_name(enclosing);', 3.4019391052900155e-06], ['(Gogo::is_sink_name(*pname))', 3.4019391052900155e-06], ['sname(this->sink_function_name());', 3.4019391052900155e-06], ['Named_object::make_function(sname,', 3.4019391052900155e-06], ['ret->func_value()->set_is_sink();', 3.4019391052900155e-06], ['this->package_->bindings()->add_named_object(ret);', 3.4019391052900155e-06], ['(add_method_to_type)', 3.4019391052900155e-06], ['ahead', 3.4019391052900155e-06], ['rtype->forward_declaration_type()->add_existing_method(ret);', 3.4019391052900155e-06], ['this->package_->bindings()->add_function(*pname,', 3.4019391052900155e-06], ['(!ret->is_function()', 3.4019391052900155e-06], ['ret->func_value()', 3.4019391052900155e-06], ['rname(this->redefined_function_name());', 3.4019391052900155e-06], ['this->package_->bindings()->add_function(rname,', 3.4019391052900155e-06], ['(!add_method_to_type)', 3.4019391052900155e-06], ['go_assert(at_top_level);', 3.4019391052900155e-06], ['rtype->named_type()->add_method(name,', 3.4019391052900155e-06], ['(!ret->is_function())', 3.4019391052900155e-06], ['type_no', 3.4019391052900155e-06], ['rtype->forward_declaration_type()->named_object();', 3.4019391052900155e-06], ['(type_no->is_unknown())', 3.4019391052900155e-06], ['alternative', 3.4019391052900155e-06], ['confusing.', 3.4019391052900155e-06], ['this->declare_package_type(type_no->name(),', 3.4019391052900155e-06], ['type_no->location());', 3.4019391052900155e-06], ['go_assert(declared', 3.4019391052900155e-06], ['type_no->unknown_value()->real_named_object());', 3.4019391052900155e-06], ['rtype->forward_declaration_type()->add_method(name,', 3.4019391052900155e-06], ['"be', 3.4019391052900155e-06], ['this->package_->bindings()->add_method(ret);', 3.4019391052900155e-06], ['this->functions_.resize(this->functions_.size()', 3.4019391052900155e-06], ['Open_function&', 3.4019391052900155e-06], ['of(this->functions_.back());', 3.4019391052900155e-06], ['of.function', 3.4019391052900155e-06], ['of.blocks.push_back(block);', 3.4019391052900155e-06], ['(is_init)', 3.4019391052900155e-06], ['this->init_functions_.push_back(ret);', 3.4019391052900155e-06], ['Gogo::finish_function(Location', 3.4019391052900155e-06], ['this->finish_block(location);', 3.4019391052900155e-06], ['go_assert(this->functions_.back().blocks.empty());', 3.4019391052900155e-06], ['this->functions_.pop_back();', 3.4019391052900155e-06], ['Gogo::current_function()', 3.4019391052900155e-06], ['Gogo::start_block(Location', 3.4019391052900155e-06], ['Block(this->current_block(),', 3.4019391052900155e-06], ['this->functions_.back().blocks.push_back(block);', 3.4019391052900155e-06], ['Gogo::finish_block(Location', 3.4019391052900155e-06], ['this->functions_.back().blocks.pop_back();', 3.4019391052900155e-06], ['block->set_end_location(location);', 3.4019391052900155e-06], ['Gogo::add_erroneous_name(const', 3.4019391052900155e-06], ['this->package_->bindings()->add_erroneous_name(name);', 3.4019391052900155e-06], ['Gogo::add_unknown_name(const', 3.4019391052900155e-06], ['this->package_->bindings()->add_unknown_name(name,', 3.4019391052900155e-06], ['Gogo::declare_function(const', 3.4019391052900155e-06], ['this->current_bindings()->add_function_declaration(name,', 3.4019391052900155e-06], ['rtype->named_type()->add_method_declaration(name,', 3.4019391052900155e-06], ['rtype->forward_declaration_type();', 3.4019391052900155e-06], ['ftype->add_method_declaration(name,', 3.4019391052900155e-06], ['type)");', 3.4019391052900155e-06], ['Named_object::make_erroneous_name(name);', 3.4019391052900155e-06], ['Gogo::add_label_definition(const', 3.4019391052900155e-06], ['func->add_label_definition(this,', 3.4019391052900155e-06], ['this->add_statement(Statement::make_label_statement(label,', 3.4019391052900155e-06], ['Gogo::add_label_reference(const', 3.4019391052900155e-06], ['func->add_label_reference(this,', 3.4019391052900155e-06], ['issue_goto_errors);', 3.4019391052900155e-06], ['Gogo::bindings_snapshot(Location', 3.4019391052900155e-06], ['Bindings_snapshot(this->current_block(),', 3.4019391052900155e-06], ['Gogo::add_statement(Statement*', 3.4019391052900155e-06], ['Gogo::add_block(Block*', 3.4019391052900155e-06], ['Statement::make_block_statement(block,', 3.4019391052900155e-06], ['Gogo::add_constant(const', 3.4019391052900155e-06], ['this->current_bindings()->add_constant(tid,', 3.4019391052900155e-06], ['iota_value);', 3.4019391052900155e-06], ['Gogo::add_type(const', 3.4019391052900155e-06], ['this->current_bindings()->add_type(name,', 3.4019391052900155e-06], ['no->is_type())', 3.4019391052900155e-06], ['no->type_value()->set_in_function(f,', 3.4019391052900155e-06], ['Gogo::add_named_type(Named_type*', 3.4019391052900155e-06], ['go_assert(this->in_global_scope());', 3.4019391052900155e-06], ['this->current_bindings()->add_named_type(type);', 3.4019391052900155e-06], ['Gogo::declare_type(const', 3.4019391052900155e-06], ['bindings->add_type_declaration(name,', 3.4019391052900155e-06], ['no->is_type_declaration())', 3.4019391052900155e-06], ['no->type_declaration_value()->set_in_function(f,', 3.4019391052900155e-06], ['Gogo::declare_package_type(const', 3.4019391052900155e-06], ['this->package_->bindings()->add_type_declaration(name,', 3.4019391052900155e-06], ['Gogo::declare_package_function(const', 3.4019391052900155e-06], ['this->package_->bindings()->add_function_declaration(name,', 3.4019391052900155e-06], ['Gogo::add_imported_inlinable_function(Named_object*', 3.4019391052900155e-06], ['go_assert(no->is_function_declaration());', 3.4019391052900155e-06], ['no->func_declaration_value();', 3.4019391052900155e-06], ['(fd->is_on_inlinable_list())', 3.4019391052900155e-06], ['this->imported_inlinable_functions_.push_back(no);', 3.4019391052900155e-06], ['fd->set_is_on_inlinable_list();', 3.4019391052900155e-06], ['Gogo::define_type(Named_object*', 3.4019391052900155e-06], ['this->current_bindings()->define_type(no,', 3.4019391052900155e-06], ['Gogo::add_variable(const', 3.4019391052900155e-06], ['this->current_bindings()->add_variable(name,', 3.4019391052900155e-06], ['variable);', 3.4019391052900155e-06], ['DECL_EXPR', 3.4019391052900155e-06], ['!no->var_value()->is_parameter()', 3.4019391052900155e-06], ['!this->functions_.empty())', 3.4019391052900155e-06], ['this->add_statement(Statement::make_variable_declaration(no));', 3.4019391052900155e-06], ['sink--a', 3.4019391052900155e-06], ['Gogo::add_sink()', 3.4019391052900155e-06], ['dot', 3.4019391052900155e-06], ['Gogo::add_dot_import_object(Named_object*', 3.4019391052900155e-06], ['exists,', 3.4019391052900155e-06], ['this->package_->bindings()->lookup(no->name());', 3.4019391052900155e-06], ['e->package()', 3.4019391052900155e-06], ['(e->is_unknown())', 3.4019391052900155e-06], ['e->resolve();', 3.4019391052900155e-06], ['(e->package()', 3.4019391052900155e-06], ['(e->is_type_declaration()', 3.4019391052900155e-06], ['e->is_function_declaration()', 3.4019391052900155e-06], ['e->is_unknown()))', 3.4019391052900155e-06], ['this->add_file_block_name(no->name(),', 3.4019391052900155e-06], ['no->location());', 3.4019391052900155e-06], ['this->current_bindings()->add_named_object(no);', 3.4019391052900155e-06], ['linkname.', 3.4019391052900155e-06], ['Gogo::add_linkname(const', 3.4019391052900155e-06], ['go_name,', 3.4019391052900155e-06], ['is_exported,', 3.4019391052900155e-06], ['ext_name,', 3.4019391052900155e-06], ['this->package_->bindings()->lookup(this->pack_hidden_name(go_name,', 3.4019391052900155e-06], ['is_exported));', 3.4019391052900155e-06], ['no->func_value()->set_asm_name(ext_name);', 3.4019391052900155e-06], ['no->func_declaration_value()->set_asm_name(ext_name);', 3.4019391052900155e-06], ['"//go:linkname', 3.4019391052900155e-06], ['functions"),', 3.4019391052900155e-06], ['Gogo::mark_locals_used()', 3.4019391052900155e-06], ['(Open_functions::iterator', 3.4019391052900155e-06], ['this->functions_.begin();', 3.4019391052900155e-06], ['this->functions_.end();', 3.4019391052900155e-06], ['(std::vector<Block*>::iterator', 3.4019391052900155e-06], ['pf->blocks.begin();', 3.4019391052900155e-06], ['pf->blocks.end();', 3.4019391052900155e-06], ['(*pb)->bindings()->mark_locals_used();', 3.4019391052900155e-06], ['Gogo::record_interface_type(Interface_type*', 3.4019391052900155e-06], ['itype)', 3.4019391052900155e-06], ['this->interface_types_.push_back(itype);', 3.4019391052900155e-06], ['Gogo::define_global_names()', 3.4019391052900155e-06], ['Every', 3.4019391052900155e-06], ['this->import_package("runtime",', 3.4019391052900155e-06], ['this->globals_->begin_declarations();', 3.4019391052900155e-06], ['this->globals_->end_declarations();', 3.4019391052900155e-06], ['global_no', 3.4019391052900155e-06], ['name(Gogo::pack_hidden_name(global_no->name(),', 3.4019391052900155e-06], ['no->resolve();', 3.4019391052900155e-06], ['(no->is_type_declaration())', 3.4019391052900155e-06], ['(global_no->is_type())', 3.4019391052900155e-06], ['(no->type_declaration_value()->has_methods())', 3.4019391052900155e-06], ['no->type_declaration_value()->methods()->begin();', 3.4019391052900155e-06], ['no->type_declaration_value()->methods()->end();', 3.4019391052900155e-06], ['no->set_type_value(global_no->type_value());', 3.4019391052900155e-06], ['errtype', 3.4019391052900155e-06], ['Named_object::make_type("erroneous_type",', 3.4019391052900155e-06], ['errtype,', 3.4019391052900155e-06], ['no->set_type_value(err->type_value());', 3.4019391052900155e-06], ['(no->is_unknown())', 3.4019391052900155e-06], ['no->unknown_value()->set_real_named_object(global_no);', 3.4019391052900155e-06], ['"fmt"', 3.4019391052900155e-06], ['fmt.', 3.4019391052900155e-06], ['this->package_->bindings()->begin_declarations();', 3.4019391052900155e-06], ['this->package_->bindings()->end_declarations();', 3.4019391052900155e-06], ['(p->second->is_unknown()', 3.4019391052900155e-06], ['p->second->unknown_value()->real_named_object()', 3.4019391052900155e-06], ['File_block_names::const_iterator', 3.4019391052900155e-06], ['this->file_block_names_.find(p->second->name());', 3.4019391052900155e-06], ['this->file_block_names_.end())', 3.4019391052900155e-06], ['p->second->message_name();', 3.4019391052900155e-06], ['go_inform(pf->second,', 3.4019391052900155e-06], ['"init".', 3.4019391052900155e-06], ['(!p->second->is_function()', 3.4019391052900155e-06], ['func");', 3.4019391052900155e-06], ['Gogo::clear_file_scope()', 3.4019391052900155e-06], ['this->package_->bindings()->clear_file_scope(this);', 3.4019391052900155e-06], ['quiet', 3.4019391052900155e-06], ['saw_errors();', 3.4019391052900155e-06], ['!quiet)', 3.4019391052900155e-06], ['(Package::Aliases::const_iterator', 3.4019391052900155e-06], ['package->aliases().begin();', 3.4019391052900155e-06], ['package->aliases().end();', 3.4019391052900155e-06], ['(!p1->second->used())', 3.4019391052900155e-06], ['refined', 3.4019391052900155e-06], ['(p1->first', 3.4019391052900155e-06], ['p1->first[0]', 3.4019391052900155e-06], ['Gogo::message_name(pkg_name).c_str(),', 3.4019391052900155e-06], ['Gogo::message_name(p1->first).c_str());', 3.4019391052900155e-06], ['Gogo::message_name(pkg_name).c_str());', 3.4019391052900155e-06], ['package->clear_used();', 3.4019391052900155e-06], ['Queue', 3.4019391052900155e-06], ['writing.', 3.4019391052900155e-06], ['write_specific_type_functions,', 3.4019391052900155e-06], ['Gogo::queue_specific_type_function(Type*', 3.4019391052900155e-06], ['equal_fntype)', 3.4019391052900155e-06], ['go_assert(!this->specific_type_functions_are_written_);', 3.4019391052900155e-06], ['go_assert(!this->in_global_scope());', 3.4019391052900155e-06], ['Specific_type_function(type,', 3.4019391052900155e-06], ['equal_fntype);', 3.4019391052900155e-06], ['this->specific_type_functions_.push_back(tsf);', 3.4019391052900155e-06], ['Specific_type_functions(Gogo*', 3.4019391052900155e-06], ['Specific_type_functions::type(Type*', 3.4019391052900155e-06], ['(rt->struct_type()', 3.4019391052900155e-06], ['is_defined_elsewhere', 3.4019391052900155e-06], ['(is_defined_elsewhere', 3.4019391052900155e-06], ['Gogo::is_hidden_name(p->field_name()))', 3.4019391052900155e-06], ['(Type::traverse(p->type(),', 3.4019391052900155e-06], ['Gogo::write_specific_type_functions()', 3.4019391052900155e-06], ['stf(this);', 3.4019391052900155e-06], ['this->traverse(&stf);', 3.4019391052900155e-06], ['(!this->specific_type_functions_.empty())', 3.4019391052900155e-06], ['this->specific_type_functions_.back();', 3.4019391052900155e-06], ['this->specific_type_functions_.pop_back();', 3.4019391052900155e-06], ['tsf->type->write_specific_type_functions(this,', 3.4019391052900155e-06], ['tsf->name,', 3.4019391052900155e-06], ['tsf->size,', 3.4019391052900155e-06], ['tsf->hash_name,', 3.4019391052900155e-06], ['tsf->hash_fntype,', 3.4019391052900155e-06], ['tsf->equal_name,', 3.4019391052900155e-06], ['tsf->equal_fntype);', 3.4019391052900155e-06], ['tsf;', 3.4019391052900155e-06], ['this->specific_type_functions_are_written_', 3.4019391052900155e-06], ['Gogo::traverse(Traverse*', 3.4019391052900155e-06], ['consistency.', 3.4019391052900155e-06], ['(this->package_->bindings()->traverse(traverse,', 3.4019391052900155e-06], ['this->package_)', 3.4019391052900155e-06], ['(p->second->bindings()->traverse(traverse,', 3.4019391052900155e-06], ['verify.', 3.4019391052900155e-06], ['Gogo::add_type_to_verify(Type*', 3.4019391052900155e-06], ['this->verify_types_.push_back(type);', 3.4019391052900155e-06], ['Verify_types()', 3.4019391052900155e-06], ['Traverse(traverse_types)', 3.4019391052900155e-06], ['Verify_types::type(Type*', 3.4019391052900155e-06], ['(!t->verify())', 3.4019391052900155e-06], ['Gogo::verify_types()', 3.4019391052900155e-06], ['(*p)->verify();', 3.4019391052900155e-06], ['this->verify_types_.clear();', 3.4019391052900155e-06], ['Lower_parse_tree(Gogo*', 3.4019391052900155e-06], ['iota_value_(-1),', 3.4019391052900155e-06], ['Value', 3.4019391052900155e-06], ['iota_value_;', 3.4019391052900155e-06], ['Lower_parse_tree::variable(Named_object*', 3.4019391052900155e-06], ['lower_init_expression.', 3.4019391052900155e-06], ['no->var_value()->lower_init_expression(this->gogo_,', 3.4019391052900155e-06], ['TRAVERSE_SKIP_COMPONENTS', 3.4019391052900155e-06], ['ourselves.', 3.4019391052900155e-06], ['(no->var_value()->has_type())', 3.4019391052900155e-06], ['(Type::traverse(type,', 3.4019391052900155e-06], ['Lower_parse_tree::constant(Named_object*', 3.4019391052900155e-06], ['no->const_value();', 3.4019391052900155e-06], ['trouble', 3.4019391052900155e-06], ["constant's", 3.4019391052900155e-06], ['(nc->lowering())', 3.4019391052900155e-06], ['nc->set_lowering();', 3.4019391052900155e-06], ['go_assert(this->iota_value_', 3.4019391052900155e-06], ['nc->iota_value();', 3.4019391052900155e-06], ['nc->traverse_expression(this);', 3.4019391052900155e-06], ['nc->clear_lowering();', 3.4019391052900155e-06], ['fast.', 3.4019391052900155e-06], ['Lower_parse_tree::function(Named_object*', 3.4019391052900155e-06], ['no->func_value()->set_closure_type();', 3.4019391052900155e-06], ['Lower_parse_tree::statement(Block*', 3.4019391052900155e-06], ['s->lower(this->gogo_,', 3.4019391052900155e-06], ['Lower_parse_tree::expression(Expression**', 3.4019391052900155e-06], ['awkward,', 3.4019391052900155e-06], ['postorder', 3.4019391052900155e-06], ['((*pexpr)->traverse_subexpressions(this)', 3.4019391052900155e-06], ['e->lower(this->gogo_,', 3.4019391052900155e-06], ['&this->inserter_,', 3.4019391052900155e-06], ['this->iota_value_);', 3.4019391052900155e-06], ['(enew->traverse_subexpressions(this)', 3.4019391052900155e-06], ['Unknown_expression,', 3.4019391052900155e-06], ['((*pexpr)->unknown_expression()', 3.4019391052900155e-06], ['Type::traverse((*pexpr)->type(),', 3.4019391052900155e-06], ['Gogo::lower_parse_tree()', 3.4019391052900155e-06], ['this->traverse(&lower_parse_tree);', 3.4019391052900155e-06], ['inlinables,', 3.4019391052900155e-06], ['iterator.', 3.4019391052900155e-06], ['this->imported_inlinable_functions_.size();', 3.4019391052900155e-06], ['this->imported_inlinable_functions_[i];', 3.4019391052900155e-06], ['no->func_declaration_value()->import_function_body(this,', 3.4019391052900155e-06], ['involve', 3.4019391052900155e-06], ['unexpected', 3.4019391052900155e-06], ['Type::traverse(*p,', 3.4019391052900155e-06], ['&lower_parse_tree);', 3.4019391052900155e-06], ['Gogo::lower_block(Named_object*', 3.4019391052900155e-06], ['block->traverse(&lower_parse_tree);', 3.4019391052900155e-06], ['Gogo::lower_expression(Named_object*', 3.4019391052900155e-06], ['lower_parse_tree.set_inserter(inserter);', 3.4019391052900155e-06], ['lower_parse_tree.expression(pexpr);', 3.4019391052900155e-06], ['Gogo::lower_constant(Named_object*', 3.4019391052900155e-06], ['go_assert(no->is_const());', 3.4019391052900155e-06], ['lower(this,', 3.4019391052900155e-06], ['lower.constant(no,', 3.4019391052900155e-06], ['Create_function_descriptors(Gogo*', 3.4019391052900155e-06], ['Create_function_descriptors::function(Named_object*', 3.4019391052900155e-06], ['!no->func_value()->is_method()', 3.4019391052900155e-06], ['!Gogo::is_hidden_name(no->name())', 3.4019391052900155e-06], ['!Gogo::is_thunk(no))', 3.4019391052900155e-06], ['Create_function_descriptors::expression(Expression**', 3.4019391052900155e-06], ['expr->func_expression();', 3.4019391052900155e-06], ['fe->named_object();', 3.4019391052900155e-06], ['!no->func_value()->is_method())', 3.4019391052900155e-06], ['!Linemap::is_predeclared_location(no->location()))', 3.4019391052900155e-06], ['no->func_declaration_value()->descriptor(this->gogo_,', 3.4019391052900155e-06], ['expr->bound_method_expression();', 3.4019391052900155e-06], ['Bound_method_expression::create_thunk(this->gogo_,', 3.4019391052900155e-06], ['bme->method(),', 3.4019391052900155e-06], ['bme->function());', 3.4019391052900155e-06], ['expr->interface_field_reference_expression();', 3.4019391052900155e-06], ['(ifre', 3.4019391052900155e-06], ['ifre->expr()->type()->interface_type();', 3.4019391052900155e-06], ['Interface_field_reference_expression::create_thunk(this->gogo_,', 3.4019391052900155e-06], ['ifre->name());', 3.4019391052900155e-06], ['expr->call_expression();', 3.4019391052900155e-06], ['ce->fn();', 3.4019391052900155e-06], ['(fn->func_expression()', 3.4019391052900155e-06], ['fn->bound_method_expression()', 3.4019391052900155e-06], ['fn->interface_field_reference_expression()', 3.4019391052900155e-06], ['ce->args();', 3.4019391052900155e-06], ['(args->traverse(this)', 3.4019391052900155e-06], ['Gogo::create_function_descriptors()', 3.4019391052900155e-06], ['assembly.', 3.4019391052900155e-06], ['Gather', 3.4019391052900155e-06], ['fndecls;', 3.4019391052900155e-06], ['b->begin_declarations();', 3.4019391052900155e-06], ['b->end_declarations();', 3.4019391052900155e-06], ['!Linemap::is_predeclared_location(no->location())', 3.4019391052900155e-06], ['fndecls.push_back(no);', 3.4019391052900155e-06], ['fndecls.begin();', 3.4019391052900155e-06], ['fndecls.end();', 3.4019391052900155e-06], ['(*p)->func_declaration_value()->descriptor(this,', 3.4019391052900155e-06], ['fndecls.clear();', 3.4019391052900155e-06], ['cfd(this);', 3.4019391052900155e-06], ['this->traverse(&cfd);', 3.4019391052900155e-06], ['Finalize_methods(Gogo*', 3.4019391052900155e-06], ['Finalize_methods::type(Type*', 3.4019391052900155e-06], ['t->interface_type()->finalize_methods();', 3.4019391052900155e-06], ['(rt->classification()', 3.4019391052900155e-06], ['cycle,', 3.4019391052900155e-06], ['(pf->is_anonymous())', 3.4019391052900155e-06], ['(Type::traverse(pf->type(),', 3.4019391052900155e-06], ['(rt->struct_type()->traverse_field_types(this)', 3.4019391052900155e-06], ['nt->has_any_methods())', 3.4019391052900155e-06], ['Methods*', 3.4019391052900155e-06], ['nt->methods();', 3.4019391052900155e-06], ['(Methods::const_iterator', 3.4019391052900155e-06], ['(Type::traverse(p->second->type(),', 3.4019391052900155e-06], ['nt->local_methods()', 3.4019391052900155e-06], ['p->second->func_declaration_value()->type();', 3.4019391052900155e-06], ['(Type::traverse(mt,', 3.4019391052900155e-06], ['inherit.', 3.4019391052900155e-06], ['(t->struct_type()->traverse_field_types(this)', 3.4019391052900155e-06], ['t->struct_type()->finalize_methods(this->gogo_);', 3.4019391052900155e-06], ['Gogo::finalize_methods()', 3.4019391052900155e-06], ['this->traverse(&finalize);', 3.4019391052900155e-06], ['finalize_methods', 3.4019391052900155e-06], ['Gogo::finalize_methods_for_type(Type*', 3.4019391052900155e-06], ['Type::traverse(type,', 3.4019391052900155e-06], ['&finalize);', 3.4019391052900155e-06], ['Gogo::determine_types()', 3.4019391052900155e-06], ['((*p)->is_function())', 3.4019391052900155e-06], ['(*p)->func_value()->determine_types();', 3.4019391052900155e-06], ['(*p)->var_value()->determine_type();', 3.4019391052900155e-06], ['(!this->need_init_fn_', 3.4019391052900155e-06], ['(*p)->is_variable())', 3.4019391052900155e-06], ['(!variable->is_global())', 3.4019391052900155e-06], ['(variable->init()', 3.4019391052900155e-06], ['(variable->type()->interface_type()', 3.4019391052900155e-06], ['(variable->init()->is_constant())', 3.4019391052900155e-06], ['(!variable->init()->is_composite_literal())', 3.4019391052900155e-06], ['(variable->init()->is_nonconstant_composite_literal())', 3.4019391052900155e-06], ['(variable->is_global()', 3.4019391052900155e-06], ['variable->type()->has_pointer())', 3.4019391052900155e-06], ['p->second->determine_types();', 3.4019391052900155e-06], ['Check_types_traverse(Gogo*', 3.4019391052900155e-06], ['Check_types_traverse::variable(Named_object*', 3.4019391052900155e-06], ['(named_object->is_variable())', 3.4019391052900155e-06], ['named_object->var_value();', 3.4019391052900155e-06], ['var->type()->base();', 3.4019391052900155e-06], ['!Type::are_assignable(var->type(),', 3.4019391052900155e-06], ['init->type(),', 3.4019391052900155e-06], ['initialization");', 3.4019391052900155e-06], ['Expression::make_error(named_object->location());', 3.4019391052900155e-06], ['var->clear_init();', 3.4019391052900155e-06], ['init->func_expression()', 3.4019391052900155e-06], ['init->func_expression()->named_object();', 3.4019391052900155e-06], ['go_error_at(init->location(),', 3.4019391052900155e-06], ['(!var->is_used()', 3.4019391052900155e-06], ['!var->is_global()', 3.4019391052900155e-06], ['!var->is_parameter()', 3.4019391052900155e-06], ['!var->is_receiver()', 3.4019391052900155e-06], ['!var->type()->is_error()', 3.4019391052900155e-06], ['!init->is_error_expression())', 3.4019391052900155e-06], ['!Lex::is_invalid_identifier(named_object->name()))', 3.4019391052900155e-06], ['named_object->message_name().c_str());', 3.4019391052900155e-06], ['Check_types_traverse::constant(Named_object*', 3.4019391052900155e-06], ['named_object,', 3.4019391052900155e-06], ['named_object->const_value();', 3.4019391052900155e-06], ['constant->type();', 3.4019391052900155e-06], ['(ctype->integer_type()', 3.4019391052900155e-06], ['ctype->float_type()', 3.4019391052900155e-06], ['ctype->complex_type()', 3.4019391052900155e-06], ['!ctype->is_boolean_type()', 3.4019391052900155e-06], ['!ctype->is_string_type())', 3.4019391052900155e-06], ['(ctype->is_nil_type())', 3.4019391052900155e-06], ['"const', 3.4019391052900155e-06], ['(!ctype->is_error())', 3.4019391052900155e-06], ['(!constant->expr()->is_constant())', 3.4019391052900155e-06], ['go_error_at(constant->expr()->location(),', 3.4019391052900155e-06], ['"expression', 3.4019391052900155e-06], ['(!Type::are_assignable(constant->type(),', 3.4019391052900155e-06], ['constant->expr()->type(),', 3.4019391052900155e-06], ['Check_types_traverse::function(Named_object*', 3.4019391052900155e-06], ['no->func_value()->check_labels();', 3.4019391052900155e-06], ['Check_types_traverse::statement(Block*,', 3.4019391052900155e-06], ['s->check_types(this->gogo_);', 3.4019391052900155e-06], ['Check_types_traverse::expression(Expression**', 3.4019391052900155e-06], ['(*expr)->check_types(this->gogo_);', 3.4019391052900155e-06], ['Gogo::check_types()', 3.4019391052900155e-06], ['signature.', 3.4019391052900155e-06], ['no->func_declaration_value()->check_types();', 3.4019391052900155e-06], ['Gogo::check_types_in_block(Block*', 3.4019391052900155e-06], ['block->traverse(&traverse);', 3.4019391052900155e-06], ['std::vector<Expression**>', 3.4019391052900155e-06], ['Expression_pointers;', 3.4019391052900155e-06], ['Find_eval_ordering()', 3.4019391052900155e-06], ['exprs_()', 3.4019391052900155e-06], ['size()', 3.4019391052900155e-06], ['this->exprs_.size();', 3.4019391052900155e-06], ['Expression_pointers::const_iterator', 3.4019391052900155e-06], ['this->exprs_.begin();', 3.4019391052900155e-06], ['this->exprs_.end();', 3.4019391052900155e-06], ['Expression_pointers', 3.4019391052900155e-06], ['exprs_;', 3.4019391052900155e-06], ['Find_eval_ordering::expression(Expression**', 3.4019391052900155e-06], ['expression_pointer)', 3.4019391052900155e-06], ['binexp', 3.4019391052900155e-06], ['(*expression_pointer)->binary_expression();', 3.4019391052900155e-06], ['(binexp', 3.4019391052900155e-06], ['(binexp->op()', 3.4019391052900155e-06], ['OPERATOR_ANDAND', 3.4019391052900155e-06], ['binexp->op()', 3.4019391052900155e-06], ['OPERATOR_OROR))', 3.4019391052900155e-06], ['Shortcut', 3.4019391052900155e-06], ['ordered,', 3.4019391052900155e-06], ['conditionally.', 3.4019391052900155e-06], ['remove_shortcuts.', 3.4019391052900155e-06], ['((*expression_pointer)->traverse_subexpressions(this)', 3.4019391052900155e-06], ['((*expression_pointer)->must_eval_in_order())', 3.4019391052900155e-06], ['Order_eval(Gogo*', 3.4019391052900155e-06], ['Order_eval::statement(Block*', 3.4019391052900155e-06], ['(stmt->switch_statement()', 3.4019391052900155e-06], ['stmt->variable_declaration_statement();', 3.4019391052900155e-06], ['stmt->traverse_contents(&find_eval_ordering);', 3.4019391052900155e-06], ['init->traverse_subexpressions.', 3.4019391052900155e-06], ['os.Error', 3.4019391052900155e-06], ['newvar,', 3.4019391052900155e-06], ['call(arg())', 3.4019391052900155e-06], ['newvar', 3.4019391052900155e-06], ['call(arg()).', 3.4019391052900155e-06], ['subexpressions,', 3.4019391052900155e-06], ['err,', 3.4019391052900155e-06], ['call()', 3.4019391052900155e-06], ['newvar.', 3.4019391052900155e-06], ['problem,', 3.4019391052900155e-06], ['find_eval_ordering.size();', 3.4019391052900155e-06], ['(stmt->classification())', 3.4019391052900155e-06], ['side,', 3.4019391052900155e-06], ['mishandle', 3.4019391052900155e-06], ['m[0]', 3.4019391052900155e-06], ['len(m)', 3.4019391052900155e-06], ['Statement::STATEMENT_EXPRESSION:', 3.4019391052900155e-06], ['counted', 3.4019391052900155e-06], ['stmt->expression_statement()->expr();', 3.4019391052900155e-06], ['expr->call_expression()->result_count()', 3.4019391052900155e-06], ['is_thunk', 3.4019391052900155e-06], ['stmt->thunk_statement()', 3.4019391052900155e-06], ['Expression_statement*', 3.4019391052900155e-06], ['es', 3.4019391052900155e-06], ['stmt->expression_statement();', 3.4019391052900155e-06], ['early.', 3.4019391052900155e-06], ['(is_thunk', 3.4019391052900155e-06], ['find_eval_ordering.end())', 3.4019391052900155e-06], ['Call_result_expressions,', 3.4019391052900155e-06], ['hoisting', 3.4019391052900155e-06], ['multi-return', 3.4019391052900155e-06], ['(this->remember_expression(*pexpr))', 3.4019391052900155e-06], ['(es', 3.4019391052900155e-06], ['es->expr())', 3.4019391052900155e-06], ['Order_eval::variable(Named_object*', 3.4019391052900155e-06], ['(find_eval_ordering.size()', 3.4019391052900155e-06], ['Gogo::order_evaluations()', 3.4019391052900155e-06], ['order_eval(this);', 3.4019391052900155e-06], ['this->traverse(&order_eval);', 3.4019391052900155e-06], ['Find_shortcut()', 3.4019391052900155e-06], ['found_(NULL)', 3.4019391052900155e-06], ['Find_shortcut::expression(Expression**', 3.4019391052900155e-06], ['expr->binary_expression();', 3.4019391052900155e-06], ['(be', 3.4019391052900155e-06], ['be->op();', 3.4019391052900155e-06], ['go_assert(this->found_', 3.4019391052900155e-06], ['pexpr;', 3.4019391052900155e-06], ['Shortcuts(Gogo*', 3.4019391052900155e-06], ['convert_shortcut(Block*', 3.4019391052900155e-06], ['Shortcuts::statement(Block*', 3.4019391052900155e-06], ['(s->switch_statement()', 3.4019391052900155e-06], ['s->variable_declaration_statement();', 3.4019391052900155e-06], ['s->traverse_contents(&find_shortcut);', 3.4019391052900155e-06], ['this->convert_shortcut(block,', 3.4019391052900155e-06], ['Shortcuts::variable(Named_object*', 3.4019391052900155e-06], ['this->convert_shortcut(NULL,', 3.4019391052900155e-06], ['*PSHORTCUT', 3.4019391052900155e-06], ['Shortcuts::convert_shortcut(Block*', 3.4019391052900155e-06], ['pshortcut)', 3.4019391052900155e-06], ['(*pshortcut)->binary_expression();', 3.4019391052900155e-06], ['shortcut->left();', 3.4019391052900155e-06], ['shortcut->right();', 3.4019391052900155e-06], ['shortcut->location();', 3.4019391052900155e-06], ['retblock', 3.4019391052900155e-06], ['retblock->set_end_location(loc);', 3.4019391052900155e-06], ['Statement::make_temporary(shortcut->type(),', 3.4019391052900155e-06], ['retblock->add_statement(ts);', 3.4019391052900155e-06], ['Block(retblock,', 3.4019391052900155e-06], ['block->set_end_location(loc);', 3.4019391052900155e-06], ['tmpref', 3.4019391052900155e-06], ['Statement::make_assignment(tmpref,', 3.4019391052900155e-06], ['block->add_statement(assign);', 3.4019391052900155e-06], ['(shortcut->binary_expression()->op()', 3.4019391052900155e-06], ['OPERATOR_OROR)', 3.4019391052900155e-06], ['if_statement', 3.4019391052900155e-06], ['retblock->add_statement(if_statement);', 3.4019391052900155e-06], ['*pshortcut', 3.4019391052900155e-06], ['shortcut;', 3.4019391052900155e-06], ['Gogo::order_evaluations.', 3.4019391052900155e-06], ['order_eval(this->gogo_);', 3.4019391052900155e-06], ['retblock->traverse(&order_eval);', 3.4019391052900155e-06], ['shortcuts(this->gogo_);', 3.4019391052900155e-06], ['retblock->traverse(&shortcuts);', 3.4019391052900155e-06], ['Statement::make_block_statement(retblock,', 3.4019391052900155e-06], ['considerably', 3.4019391052900155e-06], ['Gogo::remove_shortcuts()', 3.4019391052900155e-06], ['shortcuts(this);', 3.4019391052900155e-06], ['this->traverse(&shortcuts);', 3.4019391052900155e-06], ['Flatten(Gogo*', 3.4019391052900155e-06], ['Flatten::variable(Named_object*', 3.4019391052900155e-06], ['flatten_init_expression.', 3.4019391052900155e-06], ['no->var_value()->flatten_init_expression(this->gogo_,', 3.4019391052900155e-06], ['(!no->var_value()->is_parameter()', 3.4019391052900155e-06], ['!no->var_value()->is_receiver()', 3.4019391052900155e-06], ['!no->var_value()->is_closure()', 3.4019391052900155e-06], ['no->var_value()->is_non_escaping_address_taken()', 3.4019391052900155e-06], ['!no->var_value()->is_in_heap()', 3.4019391052900155e-06], ['no->var_value()->toplevel_decl()', 3.4019391052900155e-06], ['top_block', 3.4019391052900155e-06], ['function_->func_value()->block();', 3.4019391052900155e-06], ['(top_block->bindings()->lookup_local(no->name())', 3.4019391052900155e-06], ['top_block->add_statement_at_front(ts);', 3.4019391052900155e-06], ['Flatten::function(Named_object*', 3.4019391052900155e-06], ['Flatten::statement(Block*', 3.4019391052900155e-06], ['s->flatten(this->gogo_,', 3.4019391052900155e-06], ['Flatten::expression(Expression**', 3.4019391052900155e-06], ['(e->traverse_subexpressions(this)', 3.4019391052900155e-06], ['e->flatten(this->gogo_,', 3.4019391052900155e-06], ['Gogo::flatten_block(Named_object*', 3.4019391052900155e-06], ['block->traverse(&flatten);', 3.4019391052900155e-06], ['Gogo::flatten_expression(Named_object*', 3.4019391052900155e-06], ['flatten.set_inserter(inserter);', 3.4019391052900155e-06], ['flatten.expression(pexpr);', 3.4019391052900155e-06], ['Gogo::flatten()', 3.4019391052900155e-06], ['this->traverse(&flatten);', 3.4019391052900155e-06], ['Convert_recover(Named_object*', 3.4019391052900155e-06], ['arg_(arg)', 3.4019391052900155e-06], ['arg_;', 3.4019391052900155e-06], ['Convert_recover::expression(Expression**', 3.4019391052900155e-06], ['pp)', 3.4019391052900155e-06], ['(*pp)->call_expression();', 3.4019391052900155e-06], ['ce->is_recover_call())', 3.4019391052900155e-06], ['ce->set_recover_arg(Expression::make_var_reference(this->arg_,', 3.4019391052900155e-06], ['ce->location()));', 3.4019391052900155e-06], ['build_recover_thunks.', 3.4019391052900155e-06], ['Build_recover_thunks(Gogo*', 3.4019391052900155e-06], ['Traverse(traverse_functions),', 3.4019391052900155e-06], ['can_recover_arg(Location);', 3.4019391052900155e-06], ['Build_recover_thunks::function(Named_object*', 3.4019391052900155e-06], ['orig_no)', 3.4019391052900155e-06], ['orig_func', 3.4019391052900155e-06], ['orig_no->func_value();', 3.4019391052900155e-06], ['(!orig_func->calls_recover()', 3.4019391052900155e-06], ['orig_func->is_recover_thunk()', 3.4019391052900155e-06], ['orig_func->has_recover_thunk())', 3.4019391052900155e-06], ['this->gogo_;', 3.4019391052900155e-06], ['orig_func->location();', 3.4019391052900155e-06], ['orig_func->type();', 3.4019391052900155e-06], ['receiver_name;', 3.4019391052900155e-06], ['orig_fntype->receiver();', 3.4019391052900155e-06], ['"rt.%u",', 3.4019391052900155e-06], ['new_params->push_back(Typed_identifier(receiver_name,', 3.4019391052900155e-06], ['receiver->type(),', 3.4019391052900155e-06], ['receiver->location()));', 3.4019391052900155e-06], ['!orig_params->empty())', 3.4019391052900155e-06], ['orig_params->begin();', 3.4019391052900155e-06], ['orig_params->end();', 3.4019391052900155e-06], ['"pt.%u",', 3.4019391052900155e-06], ['new_params->push_back(Typed_identifier(buf,', 3.4019391052900155e-06], ['"pr.%u",', 3.4019391052900155e-06], ['can_recover_name', 3.4019391052900155e-06], ['new_params->push_back(Typed_identifier(can_recover_name,', 3.4019391052900155e-06], ['Type::lookup_bool_type(),', 3.4019391052900155e-06], ['orig_fntype->location()));', 3.4019391052900155e-06], ['orig_results', 3.4019391052900155e-06], ['orig_fntype->results();', 3.4019391052900155e-06], ['new_results;', 3.4019391052900155e-06], ['(orig_results', 3.4019391052900155e-06], ['orig_results->empty())', 3.4019391052900155e-06], ['orig_results->begin();', 3.4019391052900155e-06], ['orig_results->end();', 3.4019391052900155e-06], ['new_results->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['*new_fntype', 3.4019391052900155e-06], ['new_params,', 3.4019391052900155e-06], ['new_results,', 3.4019391052900155e-06], ['orig_fntype->location());', 3.4019391052900155e-06], ['(orig_fntype->is_varargs())', 3.4019391052900155e-06], ['new_fntype->set_is_varargs();', 3.4019391052900155e-06], ['orig_fntype->receiver()->type();', 3.4019391052900155e-06], ['name(gogo->recover_thunk_name(orig_no->name(),', 3.4019391052900155e-06], ['rtype));', 3.4019391052900155e-06], ['*new_no', 3.4019391052900155e-06], ['gogo->start_function(name,', 3.4019391052900155e-06], ['*new_func', 3.4019391052900155e-06], ['new_no->func_value();', 3.4019391052900155e-06], ['(orig_func->enclosing()', 3.4019391052900155e-06], ['new_func->set_enclosing(orig_func->enclosing());', 3.4019391052900155e-06], ['bodies.', 3.4019391052900155e-06], ['confusing,', 3.4019391052900155e-06], ['NEW_NO', 3.4019391052900155e-06], ['(orig_func->needs_closure())', 3.4019391052900155e-06], ['creating,', 3.4019391052900155e-06], ['NEW_CLOSURE_NO', 3.4019391052900155e-06], ['words,', 3.4019391052900155e-06], ['creating.', 3.4019391052900155e-06], ['orig_closure_no', 3.4019391052900155e-06], ['orig_func->closure_var();', 3.4019391052900155e-06], ['orig_closure_var', 3.4019391052900155e-06], ['orig_closure_no->var_value();', 3.4019391052900155e-06], ['Variable(orig_closure_var->type(),', 3.4019391052900155e-06], ['new_var->set_is_closure();', 3.4019391052900155e-06], ['"closure.%u",', 3.4019391052900155e-06], ['new_closure_no', 3.4019391052900155e-06], ['new_func->set_closure_var(new_closure_no);', 3.4019391052900155e-06], ['Expression::make_var_reference(new_closure_no,', 3.4019391052900155e-06], ['Expression::make_func_reference(new_no,', 3.4019391052900155e-06], ['(new_params', 3.4019391052900155e-06], ['succed.', 3.4019391052900155e-06], ['args->push_back(this->can_recover_arg(location));', 3.4019391052900155e-06], ['s->determine_types();', 3.4019391052900155e-06], ['new_func->swap_for_recover(orig_func);', 3.4019391052900155e-06], ['orig_func->set_is_recover_thunk();', 3.4019391052900155e-06], ['new_func->set_calls_recover();', 3.4019391052900155e-06], ['new_func->set_has_recover_thunk();', 3.4019391052900155e-06], ['orig_bindings', 3.4019391052900155e-06], ['orig_func->block()->bindings();', 3.4019391052900155e-06], ['new_bindings', 3.4019391052900155e-06], ['new_func->block()->bindings();', 3.4019391052900155e-06], ['accordingly', 3.4019391052900155e-06], ['orig_rec_no', 3.4019391052900155e-06], ['orig_bindings->lookup_local(receiver_name);', 3.4019391052900155e-06], ['go_assert(orig_rec_no', 3.4019391052900155e-06], ['orig_rec_no->is_variable()', 3.4019391052900155e-06], ['!orig_rec_no->var_value()->is_receiver());', 3.4019391052900155e-06], ['orig_rec_no->var_value()->set_is_receiver();', 3.4019391052900155e-06], ['new_receiver_name(orig_fntype->receiver()->name());', 3.4019391052900155e-06], ['(new_receiver_name.empty())', 3.4019391052900155e-06], ['"r.NNN"', 3.4019391052900155e-06], ['Gogo::start_function.', 3.4019391052900155e-06], ['new_bindings->begin_definitions();', 3.4019391052900155e-06], ['new_bindings->end_definitions();', 3.4019391052900155e-06], ['pname((*p)->name());', 3.4019391052900155e-06], ['(pname[0]', 3.4019391052900155e-06], ["'r'", 3.4019391052900155e-06], ['pname[1]', 3.4019391052900155e-06], ['new_receiver_name', 3.4019391052900155e-06], ['go_assert(!new_receiver_name.empty());', 3.4019391052900155e-06], ['new_rec_no', 3.4019391052900155e-06], ['new_bindings->lookup_local(new_receiver_name);', 3.4019391052900155e-06], ['(new_rec_no', 3.4019391052900155e-06], ['go_assert(new_rec_no->is_variable()', 3.4019391052900155e-06], ['new_rec_no->var_value()->is_receiver());', 3.4019391052900155e-06], ['new_rec_no->var_value()->set_is_not_receiver();', 3.4019391052900155e-06], ['flipped', 3.4019391052900155e-06], ['Change', 3.4019391052900155e-06], ['whereupon', 3.4019391052900155e-06], ['orig_bindings->lookup_local(can_recover_name);', 3.4019391052900155e-06], ['go_assert(can_recover_no', 3.4019391052900155e-06], ['can_recover_no->is_variable()', 3.4019391052900155e-06], ['can_recover_no->var_value()->is_parameter());', 3.4019391052900155e-06], ['orig_bindings->remove_binding(can_recover_no);', 3.4019391052900155e-06], ['bindings,', 3.4019391052900155e-06], ['attach', 3.4019391052900155e-06], ['can_recover_var', 3.4019391052900155e-06], ['Variable(Type::lookup_bool_type(),', 3.4019391052900155e-06], ['new_bindings->add_variable(can_recover_name,', 3.4019391052900155e-06], ['can_recover_var);', 3.4019391052900155e-06], ['convert_recover(can_recover_no);', 3.4019391052900155e-06], ['new_func->traverse(&convert_recover);', 3.4019391052900155e-06], ['new_func->update_result_variables();', 3.4019391052900155e-06], ['orig_func->update_result_variables();', 3.4019391052900155e-06], ['.can_recover', 3.4019391052900155e-06], ['non-nil.', 3.4019391052900155e-06], ['Build_recover_thunks::can_recover_arg(Location', 3.4019391052900155e-06], ['(builtin_return_address', 3.4019391052900155e-06], ['builtin_return_address', 3.4019391052900155e-06], ['Gogo::declare_builtin_rf_address("__builtin_return_address",', 3.4019391052900155e-06], ['can_recover;', 3.4019391052900155e-06], ['(can_recover', 3.4019391052900155e-06], ['param_types->push_back(Typed_identifier("a",', 3.4019391052900155e-06], ['boolean_type', 3.4019391052900155e-06], ['boolean_type,', 3.4019391052900155e-06], ['Named_object::make_function_declaration("runtime_canrecover",', 3.4019391052900155e-06], ['can_recover->func_declaration_value()->set_asm_name("runtime.canrecover");', 3.4019391052900155e-06], ['Expression::make_func_reference(builtin_return_address,', 3.4019391052900155e-06], ['args->push_back(zexpr);', 3.4019391052900155e-06], ['args->push_back(call);', 3.4019391052900155e-06], ['Expression::make_func_reference(can_recover,', 3.4019391052900155e-06], ['cooperate', 3.4019391052900155e-06], ['Gogo::build_recover_thunks()', 3.4019391052900155e-06], ['build_recover_thunks(this);', 3.4019391052900155e-06], ['this->traverse(&build_recover_thunks);', 3.4019391052900155e-06], ['Gogo::declare_builtin_rf_address(const', 3.4019391052900155e-06], ['hasarg)', 3.4019391052900155e-06], ['(hasarg)', 3.4019391052900155e-06], ['uint32_type', 3.4019391052900155e-06], ['Type::lookup_integer_type("uint32");', 3.4019391052900155e-06], ['param_types->push_back(Typed_identifier("l",', 3.4019391052900155e-06], ['uint32_type,', 3.4019391052900155e-06], ['return_types', 3.4019391052900155e-06], ['return_types->push_back(Typed_identifier("",', 3.4019391052900155e-06], ['return_types,', 3.4019391052900155e-06], ['ret->func_declaration_value()->set_asm_name(name);', 3.4019391052900155e-06], ['Gogo::runtime_error(int', 3.4019391052900155e-06], ['code_expr', 3.4019391052900155e-06], ['Expression::make_integer_ul(code,', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::RUNTIME_ERROR,', 3.4019391052900155e-06], ['code_expr);', 3.4019391052900155e-06], ['Build_method_tables(Gogo*', 3.4019391052900155e-06], ['interfaces)', 3.4019391052900155e-06], ['interfaces_(interfaces)', 3.4019391052900155e-06], ['interfaces_;', 3.4019391052900155e-06], ['Normally', 3.4019391052900155e-06], ["type's", 3.4019391052900155e-06], ['Gogo::build_interface_method_tables()', 3.4019391052900155e-06], ['std::vector<Interface_type*>', 3.4019391052900155e-06], ['hidden_interfaces;', 3.4019391052900155e-06], ['hidden_interfaces.reserve(this->interface_types_.size());', 3.4019391052900155e-06], ['this->interface_types_.begin();', 3.4019391052900155e-06], ['this->interface_types_.end();', 3.4019391052900155e-06], ['++pi)', 3.4019391052900155e-06], ['(*pi)->methods();', 3.4019391052900155e-06], ['(Gogo::is_hidden_name(pm->name()))', 3.4019391052900155e-06], ['hidden_interfaces.push_back(*pi);', 3.4019391052900155e-06], ['(!hidden_interfaces.empty())', 3.4019391052900155e-06], ['bmt(this,', 3.4019391052900155e-06], ['hidden_interfaces);', 3.4019391052900155e-06], ['this->traverse(&bmt);', 3.4019391052900155e-06], ['this->interface_types_.clear();', 3.4019391052900155e-06], ['implements,', 3.4019391052900155e-06], ['Build_method_tables::type(Type*', 3.4019391052900155e-06], ['context(this->gogo_,', 3.4019391052900155e-06], ['this->interfaces_.begin();', 3.4019391052900155e-06], ['this->interfaces_.end();', 3.4019391052900155e-06], ['((*p)->implements_interface(Type::make_pointer_type(nt),', 3.4019391052900155e-06], ['((*p)->implements_interface(Type::make_pointer_type(st),', 3.4019391052900155e-06], ['Gogo::allocate_memory(Type*', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::NEW,', 3.4019391052900155e-06], ['td);', 3.4019391052900155e-06], ['Check_return_statements_traverse()', 3.4019391052900155e-06], ['Traverse(traverse_functions)', 3.4019391052900155e-06], ['Check_return_statements_traverse::function(Named_object*', 3.4019391052900155e-06], ['func->type();', 3.4019391052900155e-06], ['(func->block()->may_fall_through())', 3.4019391052900155e-06], ['go_error_at(func->block()->end_location(),', 3.4019391052900155e-06], ['"missing', 3.4019391052900155e-06], ['function");', 3.4019391052900155e-06], ['Gogo::check_return_statements()', 3.4019391052900155e-06], ['decide', 3.4019391052900155e-06], ['*available', 3.4019391052900155e-06], ['goes,', 3.4019391052900155e-06], ['stops', 3.4019391052900155e-06], ['Inline_within_budget(int*', 3.4019391052900155e-06], ['available)', 3.4019391052900155e-06], ['available_(available)', 3.4019391052900155e-06], ['available_;', 3.4019391052900155e-06], ['Inline_within_budget::statement(Block*,', 3.4019391052900155e-06], ['s->inlining_cost();', 3.4019391052900155e-06], ['Inline_within_budget::expression(Expression**', 3.4019391052900155e-06], ['(*pexpr)->inlining_cost();', 3.4019391052900155e-06], ['Mark_inline_candidates()', 3.4019391052900155e-06], ['budget,', 3.4019391052900155e-06], ['decrease', 3.4019391052900155e-06], ['negative,', 3.4019391052900155e-06], ['heuristic.', 3.4019391052900155e-06], ['spirit,', 3.4019391052900155e-06], ['budget_heuristic', 3.4019391052900155e-06], ['80;', 3.4019391052900155e-06], ['candidate.', 3.4019391052900155e-06], ['Mark_inline_candidates::function(Named_object*', 3.4019391052900155e-06], ['Mark_inline_candidates::type(Type*', 3.4019391052900155e-06], ['nt->is_alias())', 3.4019391052900155e-06], ['Gogo::do_exports()', 3.4019391052900155e-06], ['mic;', 3.4019391052900155e-06], ['this->traverse(&mic);', 3.4019391052900155e-06], ['streaming', 3.4019391052900155e-06], ['Stream_to_section', 3.4019391052900155e-06], ['stream(this->backend());', 3.4019391052900155e-06], ['prefix;', 3.4019391052900155e-06], ['pkgpath;', 3.4019391052900155e-06], ['(this->pkgpath_from_option_)', 3.4019391052900155e-06], ['(this->prefix_from_option_)', 3.4019391052900155e-06], ['this->prefix_;', 3.4019391052900155e-06], ['"main";', 3.4019391052900155e-06], ['exp(&stream);', 3.4019391052900155e-06], ['exp.register_builtin_types(this);', 3.4019391052900155e-06], ['exp.export_globals(this->package_name(),', 3.4019391052900155e-06], ['this->packages_,', 3.4019391052900155e-06], ['this->imports_,', 3.4019391052900155e-06], ['!this->is_main_package()', 3.4019391052900155e-06], ['this->get_init_fn_name()', 3.4019391052900155e-06], ['""),', 3.4019391052900155e-06], ['this->imported_init_fns_,', 3.4019391052900155e-06], ['this->package_->bindings());', 3.4019391052900155e-06], ['(!this->c_header_.empty()', 3.4019391052900155e-06], ['this->write_c_header();', 3.4019391052900155e-06], ['Gogo::write_c_header()', 3.4019391052900155e-06], ['out.open(this->c_header_.c_str());', 3.4019391052900155e-06], ['std::list<Named_object*>', 3.4019391052900155e-06], ['top->begin_definitions();', 3.4019391052900155e-06], ['top->end_definitions();', 3.4019391052900155e-06], ['letter,', 3.4019391052900155e-06], ['mkrsysinfo.sh', 3.4019391052900155e-06], ['_defer', 3.4019391052900155e-06], ['_panic.', 3.4019391052900155e-06], ['Gogo::unpack_hidden_name(no->name());', 3.4019391052900155e-06], ['(name[1]', 3.4019391052900155e-06], ["'Z')", 3.4019391052900155e-06], ['"_defer"', 3.4019391052900155e-06], ['"_panic"))', 3.4019391052900155e-06], ['(no->is_type()', 3.4019391052900155e-06], ['no->type_value()->struct_type()', 3.4019391052900155e-06], ['no->const_value()->type()->integer_type()', 3.4019391052900155e-06], ['!no->const_value()->is_sink())', 3.4019391052900155e-06], ['(no->const_value()->expr()->numeric_constant_value(&nc)', 3.4019391052900155e-06], ['written;', 3.4019391052900155e-06], ['(!types.empty())', 3.4019391052900155e-06], ['types.front();', 3.4019391052900155e-06], ['types.pop_front();', 3.4019391052900155e-06], ['requires;', 3.4019391052900155e-06], ['declare;', 3.4019391052900155e-06], ['(!no->type_value()->struct_type()->can_write_to_c_header(&requires,', 3.4019391052900155e-06], ['&declare))', 3.4019391052900155e-06], ['requires.begin();', 3.4019391052900155e-06], ['requires.end()', 3.4019391052900155e-06], ['++pr)', 3.4019391052900155e-06], ['(std::list<Named_object*>::const_iterator', 3.4019391052900155e-06], ['types.begin();', 3.4019391052900155e-06], ['types.end()', 3.4019391052900155e-06], ['++pt)', 3.4019391052900155e-06], ['(*pr', 3.4019391052900155e-06], ['*pt)', 3.4019391052900155e-06], ['++loop;', 3.4019391052900155e-06], ['10000)', 3.4019391052900155e-06], ['declare.begin();', 3.4019391052900155e-06], ['declare.end();', 3.4019391052900155e-06], ['(*pd', 3.4019391052900155e-06], ['drequires;', 3.4019391052900155e-06], ['ddeclare;', 3.4019391052900155e-06], ['(!(*pd)->type_value()->struct_type()->', 3.4019391052900155e-06], ['can_write_to_c_header(&drequires,', 3.4019391052900155e-06], ['&ddeclare))', 3.4019391052900155e-06], ['written.begin();', 3.4019391052900155e-06], ['written.end();', 3.4019391052900155e-06], ['++pw)', 3.4019391052900155e-06], ['(*pw', 3.4019391052900155e-06], ['*pd)', 3.4019391052900155e-06], ['(!done)', 3.4019391052900155e-06], ['(*pd)->message_name()', 3.4019391052900155e-06], ['";"', 3.4019391052900155e-06], ['written.push_back(*pd);', 3.4019391052900155e-06], ['{"', 3.4019391052900155e-06], ['no->type_value()->struct_type()->write_to_c_header(out);', 3.4019391052900155e-06], ['"};"', 3.4019391052900155e-06], ['written.push_back(no);', 3.4019391052900155e-06], ['Convert_named_types(Gogo*', 3.4019391052900155e-06], ['Traverse(traverse_blocks),', 3.4019391052900155e-06], ['block(Block*', 3.4019391052900155e-06], ['Convert_named_types::block(Block*', 3.4019391052900155e-06], ['this->gogo_->convert_named_types_in_bindings(block->bindings());', 3.4019391052900155e-06], ['sequence,', 3.4019391052900155e-06], ['Named_type::convert.', 3.4019391052900155e-06], ['arrange', 3.4019391052900155e-06], ['Gogo::convert_named_types()', 3.4019391052900155e-06], ['this->convert_named_types_in_bindings(this->globals_);', 3.4019391052900155e-06], ['this->convert_named_types_in_bindings(package->bindings());', 3.4019391052900155e-06], ['cnt(this);', 3.4019391052900155e-06], ['this->traverse(&cnt);', 3.4019391052900155e-06], ['Type::make_type_descriptor_type();', 3.4019391052900155e-06], ['Function_type::make_function_type_descriptor_type();', 3.4019391052900155e-06], ['Pointer_type::make_pointer_type_descriptor_type();', 3.4019391052900155e-06], ['Struct_type::make_struct_type_descriptor_type();', 3.4019391052900155e-06], ['Array_type::make_array_type_descriptor_type();', 3.4019391052900155e-06], ['Array_type::make_slice_type_descriptor_type();', 3.4019391052900155e-06], ['Map_type::make_map_type_descriptor_type();', 3.4019391052900155e-06], ['Channel_type::make_chan_type_descriptor_type();', 3.4019391052900155e-06], ['Interface_type::make_interface_type_descriptor_type();', 3.4019391052900155e-06], ['Expression::make_func_descriptor_type();', 3.4019391052900155e-06], ['Type::convert_builtin_named_types(this);', 3.4019391052900155e-06], ['Runtime::convert_types(this);', 3.4019391052900155e-06], ['this->named_types_are_converted_', 3.4019391052900155e-06], ['Type::finish_pointer_types(this);', 3.4019391052900155e-06], ['Gogo::convert_named_types_in_bindings(Bindings*', 3.4019391052900155e-06], ['((*p)->is_type())', 3.4019391052900155e-06], ['(*p)->type_value()->convert(this);', 3.4019391052900155e-06], ['Function.', 3.4019391052900155e-06], ['Function::Function(Function_type*', 3.4019391052900155e-06], ['results_(NULL),', 3.4019391052900155e-06], ['closure_var_(NULL),', 3.4019391052900155e-06], ['block_(block),', 3.4019391052900155e-06], ['labels_(),', 3.4019391052900155e-06], ['local_type_count_(0),', 3.4019391052900155e-06], ['descriptor_(NULL),', 3.4019391052900155e-06], ['fndecl_(NULL),', 3.4019391052900155e-06], ['defer_stack_(NULL),', 3.4019391052900155e-06], ['pragmas_(0),', 3.4019391052900155e-06], ['nested_functions_(0),', 3.4019391052900155e-06], ['is_sink_(false),', 3.4019391052900155e-06], ['results_are_named_(false),', 3.4019391052900155e-06], ['is_unnamed_type_stub_method_(false),', 3.4019391052900155e-06], ['calls_recover_(false),', 3.4019391052900155e-06], ['is_recover_thunk_(false),', 3.4019391052900155e-06], ['has_recover_thunk_(false),', 3.4019391052900155e-06], ['calls_defer_retaddr_(false),', 3.4019391052900155e-06], ['is_type_specific_function_(false),', 3.4019391052900155e-06], ['export_for_inlining_(false),', 3.4019391052900155e-06], ['is_inline_only_(false)', 3.4019391052900155e-06], ['Function::create_result_variables(Gogo*', 3.4019391052900155e-06], ['(!results->front().name().empty())', 3.4019391052900155e-06], ['this->results_are_named_', 3.4019391052900155e-06], ['this->results_', 3.4019391052900155e-06], ['Results();', 3.4019391052900155e-06], ['this->results_->reserve(results->size());', 3.4019391052900155e-06], ['(name.empty()', 3.4019391052900155e-06], ['Gogo::is_sink_name(name))', 3.4019391052900155e-06], ['result_counter;', 3.4019391052900155e-06], ['"$ret%d",', 3.4019391052900155e-06], ['result_counter);', 3.4019391052900155e-06], ['++result_counter;', 3.4019391052900155e-06], ['Result_variable(p->type(),', 3.4019391052900155e-06], ['dummy_result_count;', 3.4019391052900155e-06], ['"$dret%d",', 3.4019391052900155e-06], ['dummy_result_count);', 3.4019391052900155e-06], ['++dummy_result_count;', 3.4019391052900155e-06], ['cloning', 3.4019391052900155e-06], ['Function::update_result_variables()', 3.4019391052900155e-06], ['(this->results_', 3.4019391052900155e-06], ['(Results::iterator', 3.4019391052900155e-06], ['this->results_->begin();', 3.4019391052900155e-06], ['this->results_->end();', 3.4019391052900155e-06], ['(*p)->result_var_value()->set_function(this);', 3.4019391052900155e-06], ['Function::nointerface()', 3.4019391052900155e-06], ['Function::set_nointerface()', 3.4019391052900155e-06], ['Function::closure_var()', 3.4019391052900155e-06], ['go_assert(this->descriptor_', 3.4019391052900155e-06], ['this->type_->location();', 3.4019391052900155e-06], ['struct_type->set_is_struct_incomparable();', 3.4019391052900155e-06], ['Variable(Type::make_pointer_type(struct_type),', 3.4019391052900155e-06], ['var->set_is_used();', 3.4019391052900155e-06], ['var->set_is_closure();', 3.4019391052900155e-06], ['this->closure_var_', 3.4019391052900155e-06], ['Named_object::make_variable("$closure",', 3.4019391052900155e-06], ['Function::set_closure_type()', 3.4019391052900155e-06], ['closure->var_value()->type()->deref()->struct_type();', 3.4019391052900155e-06], ['st->push_field(Struct_field(Typed_identifier(".f",', 3.4019391052900155e-06], ['this->location_)));', 3.4019391052900155e-06], ['(Closure_fields::const_iterator', 3.4019391052900155e-06], ['this->closure_fields_.begin();', 3.4019391052900155e-06], ['this->closure_fields_.end();', 3.4019391052900155e-06], ['(no->is_variable())', 3.4019391052900155e-06], ['no->result_var_value()->type();', 3.4019391052900155e-06], ['Type::make_pointer_type(var_type);', 3.4019391052900155e-06], ['st->push_field(Struct_field(Typed_identifier(n,', 3.4019391052900155e-06], ['field_type,', 3.4019391052900155e-06], ['p->second)));', 3.4019391052900155e-06], ['Function::is_method()', 3.4019391052900155e-06], ['this->type_->is_method();', 3.4019391052900155e-06], ['Function::add_label_definition(Gogo*', 3.4019391052900155e-06], ['(label_name', 3.4019391052900155e-06], ['Label::create_dummy_label();', 3.4019391052900155e-06], ['(label->is_defined())', 3.4019391052900155e-06], ['go_inform(label->location(),', 3.4019391052900155e-06], ['label->define(location,', 3.4019391052900155e-06], ['gogo->bindings_snapshot(location));', 3.4019391052900155e-06], ["goto's", 3.4019391052900155e-06], ['std::vector<Bindings_snapshot*>&', 3.4019391052900155e-06], ['refs(label->refs());', 3.4019391052900155e-06], ['(std::vector<Bindings_snapshot*>::const_iterator', 3.4019391052900155e-06], ['refs.begin();', 3.4019391052900155e-06], ['refs.end();', 3.4019391052900155e-06], ['(*p)->check_goto_to(gogo->current_block());', 3.4019391052900155e-06], ['label->clear_refs();', 3.4019391052900155e-06], ['Function::add_label_reference(Gogo*', 3.4019391052900155e-06], ['label->set_is_used();', 3.4019391052900155e-06], ['(issue_goto_errors)', 3.4019391052900155e-06], ['snapshot', 3.4019391052900155e-06], ['label->snapshot();', 3.4019391052900155e-06], ['(snapshot', 3.4019391052900155e-06], ['snapshot->check_goto_from(gogo->current_block(),', 3.4019391052900155e-06], ['label->add_snapshot_ref(gogo->bindings_snapshot(location));', 3.4019391052900155e-06], ['Function::check_labels()', 3.4019391052900155e-06], ['(Labels::const_iterator', 3.4019391052900155e-06], ['this->labels_.begin();', 3.4019391052900155e-06], ['this->labels_.end();', 3.4019391052900155e-06], ['(!label->is_used())', 3.4019391052900155e-06], ['go_error_at(label->location(),', 3.4019391052900155e-06], ['Gogo::message_name(label->name()).c_str());', 3.4019391052900155e-06], ['Function::swap_for_recover(Function', 3.4019391052900155e-06], ['*x)', 3.4019391052900155e-06], ['go_assert(this->enclosing_', 3.4019391052900155e-06], ['x->enclosing_);', 3.4019391052900155e-06], ['std::swap(this->results_,', 3.4019391052900155e-06], ['x->results_);', 3.4019391052900155e-06], ['std::swap(this->closure_var_,', 3.4019391052900155e-06], ['x->closure_var_);', 3.4019391052900155e-06], ['std::swap(this->block_,', 3.4019391052900155e-06], ['x->block_);', 3.4019391052900155e-06], ['go_assert(this->location_', 3.4019391052900155e-06], ['x->location_);', 3.4019391052900155e-06], ['x->fndecl_', 3.4019391052900155e-06], ['go_assert(this->defer_stack_', 3.4019391052900155e-06], ['x->defer_stack_', 3.4019391052900155e-06], ['Function::traverse(Traverse*', 3.4019391052900155e-06], ['(Traverse::traverse_types', 3.4019391052900155e-06], ['Traverse::traverse_expressions))', 3.4019391052900155e-06], ['(this->block_->traverse(traverse)', 3.4019391052900155e-06], ['Function::determine_types()', 3.4019391052900155e-06], ['this->block_->determine_types();', 3.4019391052900155e-06], ['Function::descriptor(Gogo*,', 3.4019391052900155e-06], ['go_assert(!this->is_method());', 3.4019391052900155e-06], ['go_assert(this->closure_var_', 3.4019391052900155e-06], ['returning,', 3.4019391052900155e-06], ['function-specific', 3.4019391052900155e-06], ['Function::defer_stack(Location', 3.4019391052900155e-06], ['Statement::make_temporary(t,', 3.4019391052900155e-06], ['this->defer_stack_->set_is_address_taken();', 3.4019391052900155e-06], ['Function::export_func(Export*', 3.4019391052900155e-06], ['(this->export_for_inlining())', 3.4019391052900155e-06], ['Function::export_func_with_type(exp,', 3.4019391052900155e-06], ['this->results_,', 3.4019391052900155e-06], ['this->is_method()', 3.4019391052900155e-06], ['this->nointerface(),', 3.4019391052900155e-06], ['Function::export_func_with_type(Export*', 3.4019391052900155e-06], ['result_vars,', 3.4019391052900155e-06], ['exp->write_c_string("func', 3.4019391052900155e-06], ['(nointerface)', 3.4019391052900155e-06], ['go_assert(fntype->is_method());', 3.4019391052900155e-06], ['exp->write_c_string("/*nointerface*/', 3.4019391052900155e-06], ['exp->write_c_string("(");', 3.4019391052900155e-06], ['exp->write_name(receiver->name());', 3.4019391052900155e-06], ['exp->write_escape(receiver->note());', 3.4019391052900155e-06], ['exp->write_type(receiver->type());', 3.4019391052900155e-06], ['exp->write_c_string(")', 3.4019391052900155e-06], ['exp->write_name(p->name());', 3.4019391052900155e-06], ['exp->write_escape(p->note());', 3.4019391052900155e-06], ['(!is_varargs', 3.4019391052900155e-06], ['exp->write_type(p->type());', 3.4019391052900155e-06], ['exp->write_c_string("...");', 3.4019391052900155e-06], ['exp->write_type(p->type()->array_type()->element_type());', 3.4019391052900155e-06], ['result_decls', 3.4019391052900155e-06], ['(result_decls', 3.4019391052900155e-06], ['(result_decls->size()', 3.4019391052900155e-06], ['result_decls->begin()->name().empty()', 3.4019391052900155e-06], ['exp->write_type(result_decls->begin()->type());', 3.4019391052900155e-06], ['Results::const_iterator', 3.4019391052900155e-06], ['pr;', 3.4019391052900155e-06], ['result_vars->begin();', 3.4019391052900155e-06], ['result_decls->begin();', 3.4019391052900155e-06], ['result_decls->end();', 3.4019391052900155e-06], ['pr->name,', 3.4019391052900155e-06], ['result_vars', 3.4019391052900155e-06], ['exp->write_name(pd->name());', 3.4019391052900155e-06], ['exp->write_name((*pr)->name());', 3.4019391052900155e-06], ['exp->write_escape(pd->note());', 3.4019391052900155e-06], ['exp->write_type(pd->type());', 3.4019391052900155e-06], ['go_assert(pr', 3.4019391052900155e-06], ['result_vars->end());', 3.4019391052900155e-06], ['indent++;', 3.4019391052900155e-06], ['efb.indent();', 3.4019391052900155e-06], ['efb.write_c_string("//', 3.4019391052900155e-06], ['efb.write_string(Linemap::location_to_file(block->start_location()));', 3.4019391052900155e-06], ["efb.write_char(':');", 3.4019391052900155e-06], ['efb.write_c_string(buf);', 3.4019391052900155e-06], ["efb.write_char('\\n');", 3.4019391052900155e-06], ['block->export_block(&efb);', 3.4019391052900155e-06], ['body(efb.body());', 3.4019391052900155e-06], ['<inl:%lu>\\n",', 3.4019391052900155e-06], ['long>(body.length()));', 3.4019391052900155e-06], ['exp->write_string(body);', 3.4019391052900155e-06], ['Function::import_func(Import*', 3.4019391052900155e-06], ['Typed_identifier**', 3.4019391052900155e-06], ['preceiver,', 3.4019391052900155e-06], ['pparameters,', 3.4019391052900155e-06], ['presults,', 3.4019391052900155e-06], ['imp->require_c_string("func', 3.4019391052900155e-06], ['(imp->match_c_string("/*"))', 3.4019391052900155e-06], ['imp->require_c_string("/*nointerface*/', 3.4019391052900155e-06], ['nointerface.', 3.4019391052900155e-06], ['go_assert(imp->peek_char()', 3.4019391052900155e-06], ["'(');", 3.4019391052900155e-06], ['(*preceiver)->set_note(escape_note);', 3.4019391052900155e-06], ['imp->require_c_string(")', 3.4019391052900155e-06], ["')')", 3.4019391052900155e-06], ['(imp->match_c_string("..."))', 3.4019391052900155e-06], ['(*is_varargs)', 3.4019391052900155e-06], ['Type::make_array_type(ptype,', 3.4019391052900155e-06], ['t.set_note(escape_note);', 3.4019391052900155e-06], ['parameters->push_back(t);', 3.4019391052900155e-06], ['go_assert(!*is_varargs);', 3.4019391052900155e-06], ['*pparameters', 3.4019391052900155e-06], ['imp->match_c_string("', 3.4019391052900155e-06], ['<inl"))', 3.4019391052900155e-06], ['imp->location()));', 3.4019391052900155e-06], ['t.set_note(note);', 3.4019391052900155e-06], ['results->push_back(t);', 3.4019391052900155e-06], ['*presults', 3.4019391052900155e-06], ['(!imp->match_c_string("', 3.4019391052900155e-06], ['<inl:"))', 3.4019391052900155e-06], ['body->clear();', 3.4019391052900155e-06], ['<inl:");', 3.4019391052900155e-06], ['lenstr;', 3.4019391052900155e-06], ['lenstr', 3.4019391052900155e-06], ['imp->require_c_string(">\\n");', 3.4019391052900155e-06], ['strtol(lenstr.c_str(),', 3.4019391052900155e-06], ['(llen', 3.4019391052900155e-06], ['LONG_MAX', 3.4019391052900155e-06], ['ERANGE))', 3.4019391052900155e-06], ['lenstr.c_str());', 3.4019391052900155e-06], ['*body', 3.4019391052900155e-06], ['imp->read(static_cast<size_t>(llen));', 3.4019391052900155e-06], ['Function::get_or_make_decl(Gogo*', 3.4019391052900155e-06], ['Gogo::is_thunk(no))', 3.4019391052900155e-06], ['!this->type_->is_method())', 3.4019391052900155e-06], ['(no->name()', 3.4019391052900155e-06], ['gogo->get_init_fn_name())', 3.4019391052900155e-06], ['gogo->is_main_package())', 3.4019391052900155e-06], ['pulled', 3.4019391052900155e-06], ['(!Gogo::is_hidden_name(no->name())', 3.4019391052900155e-06], ['this->type_->is_method())', 3.4019391052900155e-06], ['(!this->is_unnamed_type_stub_method_)', 3.4019391052900155e-06], ['(this->type_->is_method())', 3.4019391052900155e-06], ['this->type_->receiver()->type();', 3.4019391052900155e-06], ['this->asm_name_;', 3.4019391052900155e-06], ['(is_init_fn)', 3.4019391052900155e-06], ['Gogo::init_imports.', 3.4019391052900155e-06], ['recovered,', 3.4019391052900155e-06], ['!(this->calls_recover_', 3.4019391052900155e-06], ['this->is_recover_thunk_);', 3.4019391052900155e-06], ['__go_set_defer_retaddr,', 3.4019391052900155e-06], ['uninlinable.', 3.4019391052900155e-06], ['(this->calls_defer_retaddr_)', 3.4019391052900155e-06], ['//go:noinline', 3.4019391052900155e-06], ['GOPRAGMA_NOINLINE)', 3.4019391052900155e-06], ['(is_inlinable)', 3.4019391052900155e-06], ['Backend::function_is_inlinable;', 3.4019391052900155e-06], ['disable', 3.4019391052900155e-06], ['this->is_recover_thunk_;', 3.4019391052900155e-06], ['//go:nosplit', 3.4019391052900155e-06], ['GOPRAGMA_NOSPLIT)', 3.4019391052900155e-06], ['(disable_split_stack)', 3.4019391052900155e-06], ['Backend::function_no_split_stack;', 3.4019391052900155e-06], ['(this->in_unique_section_', 3.4019391052900155e-06], ['(this->is_method()', 3.4019391052900155e-06], ['this->nointerface()))', 3.4019391052900155e-06], ['Backend::function_in_unique_section;', 3.4019391052900155e-06], ['(this->is_inline_only_)', 3.4019391052900155e-06], ['Backend::function_only_inline;', 3.4019391052900155e-06], ['this->type_->get_backend_fntype(gogo);', 3.4019391052900155e-06], ['Function_declaration::get_or_make_decl(Gogo*', 3.4019391052900155e-06], ['asm', 3.4019391052900155e-06], ['builtin_decl', 3.4019391052900155e-06], ['gogo->backend()->lookup_builtin(this->asm_name_);', 3.4019391052900155e-06], ['(builtin_decl', 3.4019391052900155e-06], ['builtin_decl;', 3.4019391052900155e-06], ['(this->asm_name_', 3.4019391052900155e-06], ['"runtime.gopanic"', 3.4019391052900155e-06], ['this->asm_name_', 3.4019391052900155e-06], ['"__go_runtime_error")', 3.4019391052900155e-06], ['Backend::function_does_not_return;', 3.4019391052900155e-06], ['(this->asm_name_.empty())', 3.4019391052900155e-06], ['(this->fntype_->is_method())', 3.4019391052900155e-06], ['this->fntype_->receiver()->type();', 3.4019391052900155e-06], ['(go_id_needs_encoding(no->get_id(gogo)))', 3.4019391052900155e-06], ['go_encode_id(no->get_id(gogo));', 3.4019391052900155e-06], ['this->fntype_->get_backend_fntype(gogo);', 3.4019391052900155e-06], ['Function_declaration::build_backend_descriptor(Gogo*', 3.4019391052900155e-06], ['Function_declaration::check_types()', 3.4019391052900155e-06], ['Type::base', 3.4019391052900155e-06], ['fntype->receiver()->type()->base();', 3.4019391052900155e-06], ['p->type()->base();', 3.4019391052900155e-06], ['Function::get_decl()', 3.4019391052900155e-06], ['Function::build(Gogo*', 3.4019391052900155e-06], ['named_function)', 3.4019391052900155e-06], ['param_vars;', 3.4019391052900155e-06], ['std::vector<Statement*>', 3.4019391052900155e-06], ['var_decls_stmts;', 3.4019391052900155e-06], ['this->block_->bindings()->begin_definitions();', 3.4019391052900155e-06], ['this->block_->bindings()->end_definitions();', 3.4019391052900155e-06], ['((*p)->is_variable()', 3.4019391052900155e-06], ['(*p)->var_value()->is_parameter())', 3.4019391052900155e-06], ['((*p)->var_value()->is_receiver()', 3.4019391052900155e-06], ['(*p)->var_value()->type()->points_to()', 3.4019391052900155e-06], ['".pointer";', 3.4019391052900155e-06], ['(*p)->var_value()->type();', 3.4019391052900155e-06], ['Variable(Type::make_pointer_type(var_type),', 3.4019391052900155e-06], ['Named_object::make_variable(name,', 3.4019391052900155e-06], ['Expression::make_dereference(parm_ref,', 3.4019391052900155e-06], ['Expression::NIL_CHECK_NEEDED,', 3.4019391052900155e-06], ['Expression::make_heap_expression(parm_ref,', 3.4019391052900155e-06], ['var_inits.push_back(parm_ref->get_backend(&context));', 3.4019391052900155e-06], ['parm_name', 3.4019391052900155e-06], ['".param";', 3.4019391052900155e-06], ['Variable((*p)->var_value()->type(),', 3.4019391052900155e-06], ['Named_object::make_variable(parm_name,', 3.4019391052900155e-06], ['Expression::make_heap_expression(var_ref,', 3.4019391052900155e-06], ['var_inits.push_back(var_ref->get_backend(&context));', 3.4019391052900155e-06], ['param_vars.push_back(parm_bvar);', 3.4019391052900155e-06], ['((*p)->is_result_variable())', 3.4019391052900155e-06], ['(*p)->result_var_value()->type();', 3.4019391052900155e-06], ['(!(*p)->result_var_value()->is_in_heap())', 3.4019391052900155e-06], ['Expression::make_allocation(type,', 3.4019391052900155e-06], ['loc)->get_backend(&context);', 3.4019391052900155e-06], ['var_inits.push_back(init);', 3.4019391052900155e-06], ['(*p)->is_variable()', 3.4019391052900155e-06], ['(*p)->var_value()->is_non_escaping_address_taken()', 3.4019391052900155e-06], ['!(*p)->var_value()->is_in_heap())', 3.4019391052900155e-06], ['address-taken', 3.4019391052900155e-06], ['var_decls_stmts.push_back(ts);', 3.4019391052900155e-06], ['(!gogo->backend()->function_set_parameters(this->fndecl_,', 3.4019391052900155e-06], ['param_vars))', 3.4019391052900155e-06], ['creation.', 3.4019391052900155e-06], ['go_assert(this->closure_var_->var_value()->is_closure());', 3.4019391052900155e-06], ['this->closure_var_->get_backend_variable(gogo,', 3.4019391052900155e-06], ['var_decls_bstmt_list;', 3.4019391052900155e-06], ['(!vars.empty()', 3.4019391052900155e-06], ['gogo->backend()->block(this->fndecl_,', 3.4019391052900155e-06], ['this->block_->start_location(),', 3.4019391052900155e-06], ['this->block_->end_location());', 3.4019391052900155e-06], ['dcontext(gogo,', 3.4019391052900155e-06], ['this->defer_stack_->get_backend(&dcontext);', 3.4019391052900155e-06], ['var_decls_bstmt_list.push_back(defer_init);', 3.4019391052900155e-06], ['(std::vector<Statement*>::iterator', 3.4019391052900155e-06], ['var_decls_stmts.begin();', 3.4019391052900155e-06], ['var_decls_stmts.end();', 3.4019391052900155e-06], ['bstmt', 3.4019391052900155e-06], ['(*p)->get_backend(&dcontext);', 3.4019391052900155e-06], ['var_decls_bstmt_list.push_back(bstmt);', 3.4019391052900155e-06], ['code_block', 3.4019391052900155e-06], ['this->block_->get_backend(&context);', 3.4019391052900155e-06], ['go_assert(vars.size()', 3.4019391052900155e-06], ['var_inits.size());', 3.4019391052900155e-06], ['vars.size();', 3.4019391052900155e-06], ['gogo->backend()->init_statement(this->fndecl_,', 3.4019391052900155e-06], ['vars[i],', 3.4019391052900155e-06], ['var_inits[i]);', 3.4019391052900155e-06], ['init.push_back(init_stmt);', 3.4019391052900155e-06], ['var_init', 3.4019391052900155e-06], ['gogo->backend()->statement_list(init);', 3.4019391052900155e-06], ['gogo->backend()->block_statement(code_block);', 3.4019391052900155e-06], ['gogo->backend()->compound_statement(var_init,', 3.4019391052900155e-06], ['stack,', 3.4019391052900155e-06], ['fini', 3.4019391052900155e-06], ['(defer_init', 3.4019391052900155e-06], ['Clean', 3.4019391052900155e-06], ['this->build_defer_wrapper(gogo,', 3.4019391052900155e-06], ['&except,', 3.4019391052900155e-06], ['&fini);', 3.4019391052900155e-06], ['gogo->backend()->exception_handler_statement(code_stmt,', 3.4019391052900155e-06], ['fini,', 3.4019391052900155e-06], ['Stick', 3.4019391052900155e-06], ['(var_decls', 3.4019391052900155e-06], ['var_decls_bstmt_list.push_back(code_stmt);', 3.4019391052900155e-06], ['gogo->backend()->block_add_statements(var_decls,', 3.4019391052900155e-06], ['var_decls_bstmt_list);', 3.4019391052900155e-06], ['gogo->backend()->block_statement(var_decls);', 3.4019391052900155e-06], ['(!gogo->backend()->function_set_body(this->fndecl_,', 3.4019391052900155e-06], ['*EXCEPT', 3.4019391052900155e-06], ['*FINI', 3.4019391052900155e-06], ['Function::build_defer_wrapper(Gogo*', 3.4019391052900155e-06], ['fini)', 3.4019391052900155e-06], ['end_loc', 3.4019391052900155e-06], ['this->block_->end_location();', 3.4019391052900155e-06], ['Its', 3.4019391052900155e-06], ['unwinding', 3.4019391052900155e-06], ['libgo/runtime/go-unwind.c.', 3.4019391052900155e-06], ['stmts;', 3.4019391052900155e-06], ['defer));', 3.4019391052900155e-06], ['(ret_bstmt', 3.4019391052900155e-06], ['stmts.push_back(ret_bstmt);', 3.4019391052900155e-06], ['go_assert(*except', 3.4019391052900155e-06], ['*except', 3.4019391052900155e-06], ['Runtime::make_call(Runtime::DEFERRETURN,', 3.4019391052900155e-06], ['undefer', 3.4019391052900155e-06], ['function_defer', 3.4019391052900155e-06], ['gogo->backend()->function_defer_statement(this->fndecl_,', 3.4019391052900155e-06], ['std::vector<Bstatement*>(1,', 3.4019391052900155e-06], ['function_defer);', 3.4019391052900155e-06], ['(this->type_->results()', 3.4019391052900155e-06], ['!this->type_->results()->empty()', 3.4019391052900155e-06], ['!this->type_->results()->front().name().empty())', 3.4019391052900155e-06], ['named,', 3.4019391052900155e-06], ['defer_stack', 3.4019391052900155e-06], ['Expression::make_nil(end_loc)->get_backend(&context);', 3.4019391052900155e-06], ['gogo->backend()->compound_expression(ret_bstmt,', 3.4019391052900155e-06], ['ref->get_backend(&context);', 3.4019391052900155e-06], ['gogo->backend()->conditional_expression(this->fndecl_,', 3.4019391052900155e-06], ['ret));', 3.4019391052900155e-06], ['go_assert(*fini', 3.4019391052900155e-06], ['*fini', 3.4019391052900155e-06], ['Function::return_value(Gogo*', 3.4019391052900155e-06], ['go_assert(this->results_', 3.4019391052900155e-06], ['(this->results_->size()', 3.4019391052900155e-06], ['results->size())', 3.4019391052900155e-06], ['gogo->backend()->error_statement();', 3.4019391052900155e-06], ['vals(results->size());', 3.4019391052900155e-06], ['(*this->results_)[i];', 3.4019391052900155e-06], ['no->get_backend_variable(gogo,', 3.4019391052900155e-06], ['(no->result_var_value()->is_in_heap())', 3.4019391052900155e-06], ['no->result_var_value()->type()->get_backend(gogo);', 3.4019391052900155e-06], ['gogo->backend()->indirect_expression(bt,', 3.4019391052900155e-06], ['vals[i]', 3.4019391052900155e-06], ['gogo->backend()->return_statement(this->fndecl_,', 3.4019391052900155e-06], ['Block.', 3.4019391052900155e-06], ['Block::Block(Block*', 3.4019391052900155e-06], ['statements_(),', 3.4019391052900155e-06], ['Bindings(enclosing', 3.4019391052900155e-06], ['enclosing->bindings())),', 3.4019391052900155e-06], ['start_location_(location),', 3.4019391052900155e-06], ['end_location_(Linemap::unknown_location())', 3.4019391052900155e-06], ['Block::add_statement(Statement*', 3.4019391052900155e-06], ['this->statements_.push_back(statement);', 3.4019391052900155e-06], ['slow', 3.4019391052900155e-06], ['Block::add_statement_at_front(Statement*', 3.4019391052900155e-06], ['this->statements_.insert(this->statements_.begin(),', 3.4019391052900155e-06], ['statement);', 3.4019391052900155e-06], ['Block::replace_statement(size_t', 3.4019391052900155e-06], ['this->statements_[index]', 3.4019391052900155e-06], ['Block::insert_statement_before(size_t', 3.4019391052900155e-06], ['Block::insert_statement_after(size_t', 3.4019391052900155e-06], ['Block::traverse(Traverse*', 3.4019391052900155e-06], ['Traverse::traverse_blocks)', 3.4019391052900155e-06], ['traverse->block(this);', 3.4019391052900155e-06], ['((*pb)->classification())', 3.4019391052900155e-06], ['traverse->constant(*pb,', 3.4019391052900155e-06], ['(*pb)->const_value()->type();', 3.4019391052900155e-06], ['(*pb)->const_value()->traverse_expression(traverse);', 3.4019391052900155e-06], ['traverse->variable(*pb);', 3.4019391052900155e-06], ['((*pb)->is_result_variable()', 3.4019391052900155e-06], ['(*pb)->var_value()->has_type())', 3.4019391052900155e-06], ['((*pb)->is_variable()', 3.4019391052900155e-06], ['(*pb)->var_value()->type()', 3.4019391052900155e-06], ['(*pb)->result_var_value()->type());', 3.4019391052900155e-06], ['(*pb)->is_variable())', 3.4019391052900155e-06], ['(*pb)->var_value()->traverse_expression(traverse,', 3.4019391052900155e-06], ['Type::traverse((*pb)->type_value(),', 3.4019391052900155e-06], ['here--if', 3.4019391052900155e-06], ['Inserting', 3.4019391052900155e-06], ['pointer;', 3.4019391052900155e-06], ['traversed.', 3.4019391052900155e-06], ['this->statements_.size();', 3.4019391052900155e-06], ['(this->statements_[i]->traverse(this,', 3.4019391052900155e-06], ['&i,', 3.4019391052900155e-06], ['Block::determine_types()', 3.4019391052900155e-06], ['((*pb)->is_variable())', 3.4019391052900155e-06], ['(*pb)->var_value()->determine_type();', 3.4019391052900155e-06], ['((*pb)->is_const())', 3.4019391052900155e-06], ['(*pb)->const_value()->determine_type();', 3.4019391052900155e-06], ['++ps)', 3.4019391052900155e-06], ['(*ps)->determine_types();', 3.4019391052900155e-06], ['Block::may_fall_through()', 3.4019391052900155e-06], ['(this->statements_.empty())', 3.4019391052900155e-06], ['this->statements_.back()->may_fall_through();', 3.4019391052900155e-06], ['Block::export_block(Export_function_body*', 3.4019391052900155e-06], ['(Block::iterator', 3.4019391052900155e-06], ['efb->indent();', 3.4019391052900155e-06], ['efb->increment_indent();', 3.4019391052900155e-06], ['(*p)->export_statement(efb);', 3.4019391052900155e-06], ['efb->decrement_indent();', 3.4019391052900155e-06], ['((*p)->is_block_statement())', 3.4019391052900155e-06], ['brace', 3.4019391052900155e-06], ['Block_statement::do_export_statement.', 3.4019391052900155e-06], ['brace.', 3.4019391052900155e-06], ['(*p)->block_statement()->block()->end_location();', 3.4019391052900155e-06], ['//%d\\n",', 3.4019391052900155e-06], ['SET,', 3.4019391052900155e-06], ['OFF.', 3.4019391052900155e-06], ['succeeded.', 3.4019391052900155e-06], ['Block::import_block(Block*', 3.4019391052900155e-06], ['*ifb,', 3.4019391052900155e-06], ['ifb->location();', 3.4019391052900155e-06], ['body(ifb->body());', 3.4019391052900155e-06], ['ifb->indent();', 3.4019391052900155e-06], ['insufficient', 3.4019391052900155e-06], ['i]', 3.4019391052900155e-06], ["'}')", 3.4019391052900155e-06], ['newline",', 3.4019391052900155e-06], ['body.find("', 3.4019391052900155e-06], ['//",', 3.4019391052900155e-06], ['(lineno_pos', 3.4019391052900155e-06], ['nl)', 3.4019391052900155e-06], ['nl;', 3.4019391052900155e-06], ['body[i];', 3.4019391052900155e-06], ['ifb->gogo()->linemap()->start_line(lineno,', 3.4019391052900155e-06], ['ifb->gogo()->linemap()->get_location(0);', 3.4019391052900155e-06], ['(at_end)', 3.4019391052900155e-06], ['Statement::import_statement(ifb,', 3.4019391052900155e-06], ['sloc);', 3.4019391052900155e-06], ['set->add_statement(s);', 3.4019391052900155e-06], ['set->set_end_location(sloc);', 3.4019391052900155e-06], ['Block::get_backend(Translate_context*', 3.4019391052900155e-06], ['vars.reserve(this->bindings_->size_definitions());', 3.4019391052900155e-06], ['((*pv)->is_variable()', 3.4019391052900155e-06], ['!(*pv)->var_value()->is_parameter())', 3.4019391052900155e-06], ['vars.push_back((*pv)->get_backend_variable(gogo,', 3.4019391052900155e-06], ['go_assert(function', 3.4019391052900155e-06], ['context->backend()->block(bfunction,', 3.4019391052900155e-06], ['this->start_location_,', 3.4019391052900155e-06], ['this->end_location_);', 3.4019391052900155e-06], ['bstatements;', 3.4019391052900155e-06], ['bstatements.reserve(this->statements_.size());', 3.4019391052900155e-06], ['bstatements.push_back((*p)->get_backend(&subcontext));', 3.4019391052900155e-06], ['context->backend()->block_add_statements(ret,', 3.4019391052900155e-06], ['bstatements);', 3.4019391052900155e-06], ['Bindings_snapshot.', 3.4019391052900155e-06], ['Bindings_snapshot::Bindings_snapshot(const', 3.4019391052900155e-06], ['block_(b),', 3.4019391052900155e-06], ['counts_(),', 3.4019391052900155e-06], ['this->counts_.push_back(b->bindings()->size_definitions());', 3.4019391052900155e-06], ['b->enclosing();', 3.4019391052900155e-06], ['Bindings_snapshot::check_goto_from(const', 3.4019391052900155e-06], ['dummy;', 3.4019391052900155e-06], ['(!this->check_goto_block(loc,', 3.4019391052900155e-06], ['&dummy))', 3.4019391052900155e-06], ['this->check_goto_defs(loc,', 3.4019391052900155e-06], ['this->block_->bindings()->size_definitions(),', 3.4019391052900155e-06], ['this->counts_[0]);', 3.4019391052900155e-06], ['Bindings_snapshot::check_goto_to(const', 3.4019391052900155e-06], ['(!this->check_goto_block(this->location_,', 3.4019391052900155e-06], ['&index))', 3.4019391052900155e-06], ['this->check_goto_defs(this->location_,', 3.4019391052900155e-06], ['this->counts_[index],', 3.4019391052900155e-06], ['b->bindings()->size_definitions());', 3.4019391052900155e-06], ['BTO.', 3.4019391052900155e-06], ['*PINDEX', 3.4019391052900155e-06], ['Bindings_snapshot::check_goto_block(Location', 3.4019391052900155e-06], ['bfrom,', 3.4019391052900155e-06], ['bto,', 3.4019391052900155e-06], ['pindex)', 3.4019391052900155e-06], ['bfrom;', 3.4019391052900155e-06], ['bto;', 3.4019391052900155e-06], ['pb->enclosing(),', 3.4019391052900155e-06], ['(pb', 3.4019391052900155e-06], ['go_inform(bto->start_location(),', 3.4019391052900155e-06], ['here");', 3.4019391052900155e-06], ['*pindex', 3.4019391052900155e-06], ['ending', 3.4019391052900155e-06], ['BLOCK,', 3.4019391052900155e-06], ['CFROM', 3.4019391052900155e-06], ['CTO', 3.4019391052900155e-06], ['Bindings_snapshot::check_goto_defs(Location', 3.4019391052900155e-06], ['cfrom,', 3.4019391052900155e-06], ['(cfrom', 3.4019391052900155e-06], ['Bindings::const_definitions_iterator', 3.4019391052900155e-06], ['block->bindings()->begin_definitions();', 3.4019391052900155e-06], ['cfrom;', 3.4019391052900155e-06], ['block->bindings()->end_definitions();', 3.4019391052900155e-06], ['(*p)->message_name();', 3.4019391052900155e-06], ['go_inform((*p)->location(),', 3.4019391052900155e-06], ['Function_declaration.', 3.4019391052900155e-06], ['Function_declaration::is_method()', 3.4019391052900155e-06], ['this->fntype_->is_method();', 3.4019391052900155e-06], ['Function_declaration::nointerface()', 3.4019391052900155e-06], ['Function_declaration::set_nointerface()', 3.4019391052900155e-06], ['Redeclare', 3.4019391052900155e-06], ['Function_declaration::import_function_body(Gogo*', 3.4019391052900155e-06], ['go_assert(no->func_declaration_value()', 3.4019391052900155e-06], ['go_assert(no->package()', 3.4019391052900155e-06], ['body(this->imported_body_);', 3.4019391052900155e-06], ['go_assert(!body.empty());', 3.4019391052900155e-06], ['"//FILE:LINE"', 3.4019391052900155e-06], ['(this->is_method())', 3.4019391052900155e-06], ['(body.at(i)', 3.4019391052900155e-06], ['(body.substr(i,', 3.4019391052900155e-06], ['"//")', 3.4019391052900155e-06], ['comment",', 3.4019391052900155e-06], ["body.find(':',", 3.4019391052900155e-06], ['colon)', 3.4019391052900155e-06], ['body.substr(i', 3.4019391052900155e-06], ['linestr', 3.4019391052900155e-06], ['body.substr(colon', 3.4019391052900155e-06], ['linenol', 3.4019391052900155e-06], ['strtol(linestr.c_str(),', 3.4019391052900155e-06], ['int>(linenol);', 3.4019391052900155e-06], ['alc', 3.4019391052900155e-06], ['char[file.length()', 3.4019391052900155e-06], ['memcpy(alc,', 3.4019391052900155e-06], ['file.data(),', 3.4019391052900155e-06], ['file.length());', 3.4019391052900155e-06], ['alc[file.length()]', 3.4019391052900155e-06], ['gogo->linemap()->start_file(alc,', 3.4019391052900155e-06], ['lineno);', 3.4019391052900155e-06], ['gogo->linemap()->start_line(lineno,', 3.4019391052900155e-06], ['gogo->linemap()->get_location(0);', 3.4019391052900155e-06], ['this->fntype_;', 3.4019391052900155e-06], ['fn->set_is_inline_only();', 3.4019391052900155e-06], ['(this->nointerface())', 3.4019391052900155e-06], ['fn->set_nointerface();', 3.4019391052900155e-06], ['recv_param', 3.4019391052900155e-06], ['outer->bindings()->add_variable(receiver->name(),', 3.4019391052900155e-06], ['recv_param);', 3.4019391052900155e-06], ['params->end())', 3.4019391052900155e-06], ['outer->bindings()->add_variable(p->name(),', 3.4019391052900155e-06], ['fn->create_result_variables(gogo);', 3.4019391052900155e-06], ['(!fntype->is_method())', 3.4019391052900155e-06], ['package->bindings()->add_function(no->name(),', 3.4019391052900155e-06], ['fntype->receiver()->type()->deref()->named_type();', 3.4019391052900155e-06], ['go_assert(rtype', 3.4019391052900155e-06], ['rtype->add_method(no->name(),', 3.4019391052900155e-06], ['ifb(gogo,', 3.4019391052900155e-06], ['this->imp_,', 3.4019391052900155e-06], ['(!Block::import_block(outer,', 3.4019391052900155e-06], ['&ifb,', 3.4019391052900155e-06], ['start_loc))', 3.4019391052900155e-06], ['gogo->add_imported_inline_function(no);', 3.4019391052900155e-06], ['Function_declaration::descriptor(Gogo*,', 3.4019391052900155e-06], ['go_assert(!this->fntype_->is_method());', 3.4019391052900155e-06], ['Variable::Variable(Type*', 3.4019391052900155e-06], ['is_global,', 3.4019391052900155e-06], ['is_parameter,', 3.4019391052900155e-06], ['is_receiver,', 3.4019391052900155e-06], ['preinit_(NULL),', 3.4019391052900155e-06], ['backend_(NULL),', 3.4019391052900155e-06], ['is_global_(is_global),', 3.4019391052900155e-06], ['is_parameter_(is_parameter),', 3.4019391052900155e-06], ['is_closure_(false),', 3.4019391052900155e-06], ['is_receiver_(is_receiver),', 3.4019391052900155e-06], ['is_varargs_parameter_(false),', 3.4019391052900155e-06], ['is_used_(false),', 3.4019391052900155e-06], ['is_address_taken_(false),', 3.4019391052900155e-06], ['is_non_escaping_address_taken_(false),', 3.4019391052900155e-06], ['init_is_lowered_(false),', 3.4019391052900155e-06], ['init_is_flattened_(false),', 3.4019391052900155e-06], ['type_from_init_tuple_(false),', 3.4019391052900155e-06], ['type_from_range_index_(false),', 3.4019391052900155e-06], ['type_from_range_value_(false),', 3.4019391052900155e-06], ['type_from_chan_element_(false),', 3.4019391052900155e-06], ['is_type_switch_var_(false),', 3.4019391052900155e-06], ['determined_type_(false),', 3.4019391052900155e-06], ['toplevel_decl_(NULL)', 3.4019391052900155e-06], ['go_assert(!is_parameter', 3.4019391052900155e-06], ['Variable::traverse_expression(Traverse*', 3.4019391052900155e-06], ['traverse_mask)', 3.4019391052900155e-06], ['(this->preinit_->traverse(traverse)', 3.4019391052900155e-06], ['Variable::lower_init_expression(Gogo*', 3.4019391052900155e-06], ['dep->var_value()->lower_init_expression(gogo,', 3.4019391052900155e-06], ['!this->init_is_lowered_)', 3.4019391052900155e-06], ['this->init_is_lowered_', 3.4019391052900155e-06], ['Variable::flatten_init_expression(Gogo*', 3.4019391052900155e-06], ['dep->var_value()->flatten_init_expression(gogo,', 3.4019391052900155e-06], ['!this->init_is_flattened_)', 3.4019391052900155e-06], ['this->init_->type(),', 3.4019391052900155e-06], ['this->init_->type()->interface_type()', 3.4019391052900155e-06], ['!this->init_->is_variable())', 3.4019391052900155e-06], ['this->init_is_flattened_', 3.4019391052900155e-06], ['Variable::preinit_block(Gogo*', 3.4019391052900155e-06], ['this->preinit_', 3.4019391052900155e-06], ['preinitialization', 3.4019391052900155e-06], ['gogo->set_need_init_fn();', 3.4019391052900155e-06], ['this->preinit_;', 3.4019391052900155e-06], ['Variable::add_preinit_statement(Gogo*', 3.4019391052900155e-06], ['this->preinit_block(gogo);', 3.4019391052900155e-06], ['b->add_statement(s);', 3.4019391052900155e-06], ['b->set_end_location(s->location());', 3.4019391052900155e-06], ['Variable::has_type()', 3.4019391052900155e-06], ["initializer's", 3.4019391052900155e-06], ['determine_type.', 3.4019391052900155e-06], ['Variable::type_from_tuple(Expression*', 3.4019391052900155e-06], ['(expr->map_index_expression()', 3.4019391052900155e-06], ['expr->map_index_expression()->get_map_type();', 3.4019391052900155e-06], ['(expr->receive_expression()', 3.4019391052900155e-06], ['expr->receive_expression()->channel();', 3.4019391052900155e-06], ['channel->type();', 3.4019391052900155e-06], ['(channel_type->channel_type()', 3.4019391052900155e-06], ['channel_type->channel_type()->element_type();', 3.4019391052900155e-06], ['clause,', 3.4019391052900155e-06], ['range,', 3.4019391052900155e-06], ['GET_INDEX_TYPE.', 3.4019391052900155e-06], ['Variable::type_from_range(Expression*', 3.4019391052900155e-06], ['get_index_type,', 3.4019391052900155e-06], ['t->points_to()->array_type()', 3.4019391052900155e-06], ['!t->points_to()->is_slice_type()))', 3.4019391052900155e-06], ['t->deref()->array_type()->element_type();', 3.4019391052900155e-06], ['(t->is_string_type())', 3.4019391052900155e-06], ['t->map_type()->key_type();', 3.4019391052900155e-06], ['t->map_type()->val_type();', 3.4019391052900155e-06], ['clause");', 3.4019391052900155e-06], ['channel.', 3.4019391052900155e-06], ["channel's", 3.4019391052900155e-06], ['Variable::type_from_chan_element(Expression*', 3.4019391052900155e-06], ['channel");', 3.4019391052900155e-06], ['Variable::determine_type', 3.4019391052900155e-06], ['determination,', 3.4019391052900155e-06], ['unnecessary.', 3.4019391052900155e-06], ['determine_type,', 3.4019391052900155e-06], ['go_assert(init', 3.4019391052900155e-06], ['init->type();', 3.4019391052900155e-06], ['Variable::determine_type()', 3.4019391052900155e-06], ['(this->determined_type_)', 3.4019391052900155e-06], ['this->determined_type_', 3.4019391052900155e-06], ['this->preinit_->determine_types();', 3.4019391052900155e-06], ['guard.', 3.4019391052900155e-06], ['guard,', 3.4019391052900155e-06], ['!this->type_->is_abstract());', 3.4019391052900155e-06], ['this->init_->determine_type(&context);', 3.4019391052900155e-06], ['this->init_->type();', 3.4019391052900155e-06], ['(type->is_nil_type())', 3.4019391052900155e-06], ['(type->is_call_multiple_result_type())', 3.4019391052900155e-06], ['"single', 3.4019391052900155e-06], ['multiple-value', 3.4019391052900155e-06], ['call");', 3.4019391052900155e-06], ['heap--it', 3.4019391052900155e-06], ['Variable::get_init(Gogo*', 3.4019391052900155e-06], ['go_assert(!this->is_parameter_);', 3.4019391052900155e-06], ['(this->is_global_', 3.4019391052900155e-06], ['this->is_in_heap())', 3.4019391052900155e-06], ['init->get_backend(&context);', 3.4019391052900155e-06], ['Variable::get_init_block(Gogo*', 3.4019391052900155e-06], ['bblock', 3.4019391052900155e-06], ['this->preinit_->get_backend(&context);', 3.4019391052900155e-06], ['init_bexpr', 3.4019391052900155e-06], ['this->init_->get_backend(&context);', 3.4019391052900155e-06], ['init_bexpr);', 3.4019391052900155e-06], ['val_expr->get_backend(&context);', 3.4019391052900155e-06], ['gogo->backend()->var_expression(var_decl,', 3.4019391052900155e-06], ['gogo->backend()->block_statement(bblock);', 3.4019391052900155e-06], ['(decl_init', 3.4019391052900155e-06], ['gogo->backend()->compound_statement(block_stmt,', 3.4019391052900155e-06], ['decl_init);', 3.4019391052900155e-06], ['block_stmt;', 3.4019391052900155e-06], ['Variable::export_var(Export*', 3.4019391052900155e-06], ['exp->write_c_string("var', 3.4019391052900155e-06], ['exp->write_type(this->type());', 3.4019391052900155e-06], ['Variable::import_var(Import*', 3.4019391052900155e-06], ['ptype)', 3.4019391052900155e-06], ['imp->require_c_string("var', 3.4019391052900155e-06], ['Variable::get_backend_variable(Gogo*', 3.4019391052900155e-06], ['(type->is_undefined()', 3.4019391052900155e-06], ['(!this->is_global_', 3.4019391052900155e-06], ['this->is_parameter_;', 3.4019391052900155e-06], ['(this->is_receiver_', 3.4019391052900155e-06], ['(Map_type::is_zero_value(this))', 3.4019391052900155e-06], ['Map_type::backend_zero_value(gogo);', 3.4019391052900155e-06], ['var_name(package', 3.4019391052900155e-06], ['package->package_name()', 3.4019391052900155e-06], ['gogo->package_name());', 3.4019391052900155e-06], ["var_name.push_back('.');", 3.4019391052900155e-06], ['var_name.append(n);', 3.4019391052900155e-06], ['asm_name(gogo->global_var_asm_name(name,', 3.4019391052900155e-06], ['Gogo::is_hidden_name(name);', 3.4019391052900155e-06], ['Hack', 3.4019391052900155e-06], ['runtime.writeBarrier.', 3.4019391052900155e-06], ['"runtime.writeBarrier")', 3.4019391052900155e-06], ['backend->global_variable(var_name,', 3.4019391052900155e-06], ['this->in_unique_section_,', 3.4019391052900155e-06], ['(this->is_closure())', 3.4019391052900155e-06], ['backend->static_chain_variable(bfunction,', 3.4019391052900155e-06], ['(is_parameter)', 3.4019391052900155e-06], ['backend->parameter_variable(bfunction,', 3.4019391052900155e-06], ['(this->toplevel_decl_', 3.4019391052900155e-06], ['this->toplevel_decl_->temporary_statement()', 3.4019391052900155e-06], ['->get_backend_variable(&context);', 3.4019391052900155e-06], ['bvar_decl,', 3.4019391052900155e-06], ['Result_variable.', 3.4019391052900155e-06], ['Result_variable::get_backend_variable(Gogo*', 3.4019391052900155e-06], ['Named_constant.', 3.4019391052900155e-06], ['Named_constant::set_type(Type*', 3.4019391052900155e-06], ['t->is_error_type());', 3.4019391052900155e-06], ['Named_constant::traverse_expression(Traverse*', 3.4019391052900155e-06], ['Named_constant::determine_type()', 3.4019391052900155e-06], ['context(NULL,', 3.4019391052900155e-06], ['Indicate', 3.4019391052900155e-06], ['Named_constant::set_error()', 3.4019391052900155e-06], ['Expression::make_error(this->location_);', 3.4019391052900155e-06], ['Named_constant::export_const(Export*', 3.4019391052900155e-06], ['exp->write_c_string("const', 3.4019391052900155e-06], ['exp->write_type(this->type_);', 3.4019391052900155e-06], ['exp->write_c_string("=', 3.4019391052900155e-06], ['efb.set_type_context(this->type_);', 3.4019391052900155e-06], ['this->expr()->export_expression(&efb);', 3.4019391052900155e-06], ['exp->write_string(efb.body());', 3.4019391052900155e-06], ['Named_constant::import_const(Import*', 3.4019391052900155e-06], ['imp->require_c_string("const', 3.4019391052900155e-06], ["'=')", 3.4019391052900155e-06], ['imp->require_c_string("=', 3.4019391052900155e-06], ['Named_constant::get_backend(Gogo*', 3.4019391052900155e-06], ['const_no)', 3.4019391052900155e-06], ['(this->bconst_', 3.4019391052900155e-06], ['const_ref', 3.4019391052900155e-06], ['Expression::make_const_reference(const_no,', 3.4019391052900155e-06], ['const_ref->get_backend(&subcontext);', 3.4019391052900155e-06], ['type->is_numeric_type())', 3.4019391052900155e-06], ['const_no->get_id(gogo);', 3.4019391052900155e-06], ['gogo->backend()->named_constant_expression(btype,', 3.4019391052900155e-06], ['const_decl,', 3.4019391052900155e-06], ['this->bconst_', 3.4019391052900155e-06], ['const_decl;', 3.4019391052900155e-06], ['this->bconst_;', 3.4019391052900155e-06], ['Type_declaration::add_method(const', 3.4019391052900155e-06], ['Type_declaration::add_method_declaration(const', 3.4019391052900155e-06], ['Type_declaration::has_methods()', 3.4019391052900155e-06], ['!this->methods_.empty();', 3.4019391052900155e-06], ['Type_declaration::define_methods(Named_type*', 3.4019391052900155e-06], ['(this->methods_.empty())', 3.4019391052900155e-06], ['nt->real_type()->forwarded();', 3.4019391052900155e-06], ['(t->forward_declaration_type()', 3.4019391052900155e-06], ['t->forward_declaration_type()->named_object();', 3.4019391052900155e-06], ['no->type_declaration_value();', 3.4019391052900155e-06], ['td->methods_.insert(td->methods_.end(),', 3.4019391052900155e-06], ['this->methods_.begin(),', 3.4019391052900155e-06], ['this->methods_.end());', 3.4019391052900155e-06], ['this->methods_.clear();', 3.4019391052900155e-06], ['(!(*p)->func_value()->is_sink())', 3.4019391052900155e-06], ['nt->add_existing_method(*p);', 3.4019391052900155e-06], ['Type_declaration::using_type()', 3.4019391052900155e-06], ['!this->issued_warning_;', 3.4019391052900155e-06], ['this->issued_warning_', 3.4019391052900155e-06], ['Unknown_name.', 3.4019391052900155e-06], ['Unknown_name::set_real_named_object(Named_object*', 3.4019391052900155e-06], ['go_assert(this->real_named_object_', 3.4019391052900155e-06], ['go_assert(!no->is_unknown());', 3.4019391052900155e-06], ['this->real_named_object_', 3.4019391052900155e-06], ['Named_object.', 3.4019391052900155e-06], ['Named_object::Named_object(const', 3.4019391052900155e-06], ['Classification', 3.4019391052900155e-06], ['classification)', 3.4019391052900155e-06], ['package_(package),', 3.4019391052900155e-06], ['is_redefinition_(false)', 3.4019391052900155e-06], ['go_assert(classification', 3.4019391052900155e-06], ['parser.', 3.4019391052900155e-06], ['Named_object::make_unknown_name(const', 3.4019391052900155e-06], ['Unknown_name(location);', 3.4019391052900155e-06], ['named_object->u_.unknown_value', 3.4019391052900155e-06], ['Named_object::make_constant(const', 3.4019391052900155e-06], ['Named_object(tid.name(),', 3.4019391052900155e-06], ['NAMED_OBJECT_CONST);', 3.4019391052900155e-06], ['named_constant', 3.4019391052900155e-06], ['Named_constant(tid.type(),', 3.4019391052900155e-06], ['iota_value,', 3.4019391052900155e-06], ['tid.location());', 3.4019391052900155e-06], ['named_object->u_.const_value', 3.4019391052900155e-06], ['named_constant;', 3.4019391052900155e-06], ['Named_object::make_type(const', 3.4019391052900155e-06], ['NAMED_OBJECT_TYPE);', 3.4019391052900155e-06], ['Type::make_named_type(named_object,', 3.4019391052900155e-06], ['named_object->u_.type_value', 3.4019391052900155e-06], ['Named_object::make_type_declaration(const', 3.4019391052900155e-06], ['type_declaration', 3.4019391052900155e-06], ['Type_declaration(location);', 3.4019391052900155e-06], ['named_object->u_.type_declaration', 3.4019391052900155e-06], ['type_declaration;', 3.4019391052900155e-06], ['Named_object::make_variable(const', 3.4019391052900155e-06], ['NAMED_OBJECT_VAR);', 3.4019391052900155e-06], ['named_object->u_.var_value', 3.4019391052900155e-06], ['Named_object::make_result_variable(const', 3.4019391052900155e-06], ['NAMED_OBJECT_RESULT_VAR);', 3.4019391052900155e-06], ['named_object->u_.result_var_value', 3.4019391052900155e-06], ['Named_object::make_sink()', 3.4019391052900155e-06], ['Named_object("_",', 3.4019391052900155e-06], ['Named_object::make_function(const', 3.4019391052900155e-06], ['NAMED_OBJECT_FUNC);', 3.4019391052900155e-06], ['named_object->u_.func_value', 3.4019391052900155e-06], ['Named_object::make_function_declaration(const', 3.4019391052900155e-06], ['Function_declaration', 3.4019391052900155e-06], ['*func_decl', 3.4019391052900155e-06], ['Function_declaration(fntype,', 3.4019391052900155e-06], ['named_object->u_.func_declaration_value', 3.4019391052900155e-06], ['Named_object::make_package(const', 3.4019391052900155e-06], ['package)', 3.4019391052900155e-06], ['Named_object(alias,', 3.4019391052900155e-06], ['NAMED_OBJECT_PACKAGE);', 3.4019391052900155e-06], ['named_object->u_.package_value', 3.4019391052900155e-06], ['Named_object::message_name()', 3.4019391052900155e-06], ['(this->package_->has_package_name())', 3.4019391052900155e-06], ['this->package_->pkgpath();', 3.4019391052900155e-06], ['Gogo::message_name(ret);', 3.4019391052900155e-06], ['Named_object::set_type_value(Named_type*', 3.4019391052900155e-06], ['this->u_.type_declaration;', 3.4019391052900155e-06], ['td->define_methods(named_type);', 3.4019391052900155e-06], ['in_function', 3.4019391052900155e-06], ['td->in_function(&index);', 3.4019391052900155e-06], ['(in_function', 3.4019391052900155e-06], ['named_type->set_in_function(in_function,', 3.4019391052900155e-06], ['td;', 3.4019391052900155e-06], ['NAMED_OBJECT_TYPE;', 3.4019391052900155e-06], ['this->u_.type_value', 3.4019391052900155e-06], ['Named_object::set_function_value(Function*', 3.4019391052900155e-06], ['(this->func_declaration_value()->has_descriptor())', 3.4019391052900155e-06], ['this->func_declaration_value()->descriptor(NULL,', 3.4019391052900155e-06], ['function->set_descriptor(descriptor);', 3.4019391052900155e-06], ['NAMED_OBJECT_FUNC;', 3.4019391052900155e-06], ['this->u_.func_value', 3.4019391052900155e-06], ['Named_object::declare_as_type()', 3.4019391052900155e-06], ['unk', 3.4019391052900155e-06], ['this->u_.unknown_value;', 3.4019391052900155e-06], ['NAMED_OBJECT_TYPE_DECLARATION;', 3.4019391052900155e-06], ['this->u_.type_declaration', 3.4019391052900155e-06], ['Type_declaration(unk->location());', 3.4019391052900155e-06], ['unk;', 3.4019391052900155e-06], ['Named_object::location()', 3.4019391052900155e-06], ['this->unknown_value()->location();', 3.4019391052900155e-06], ['this->const_value()->location();', 3.4019391052900155e-06], ['this->type_value()->location();', 3.4019391052900155e-06], ['this->type_declaration_value()->location();', 3.4019391052900155e-06], ['this->var_value()->location();', 3.4019391052900155e-06], ['this->result_var_value()->location();', 3.4019391052900155e-06], ['this->func_value()->location();', 3.4019391052900155e-06], ['this->func_declaration_value()->location();', 3.4019391052900155e-06], ['NAMED_OBJECT_PACKAGE:', 3.4019391052900155e-06], ['this->package_value()->location();', 3.4019391052900155e-06], ['Named_object::export_named_object(Export*', 3.4019391052900155e-06], ['this->const_value()->export_const(exp,', 3.4019391052900155e-06], ['export::write_types.', 3.4019391052900155e-06], ['go_error_at(this->type_declaration_value()->location(),', 3.4019391052900155e-06], ['%<%s%>', 3.4019391052900155e-06], ['this->func_declaration_value()->export_func(exp,', 3.4019391052900155e-06], ['this->var_value()->export_var(exp,', 3.4019391052900155e-06], ['this->func_value()->export_func(exp,', 3.4019391052900155e-06], ['Named_object::get_backend_variable(Gogo*', 3.4019391052900155e-06], ['NAMED_OBJECT_VAR)', 3.4019391052900155e-06], ['this->var_value()->get_backend_variable(gogo,', 3.4019391052900155e-06], ['this->package_,', 3.4019391052900155e-06], ['NAMED_OBJECT_RESULT_VAR)', 3.4019391052900155e-06], ['this->result_var_value()->get_backend_variable(gogo,', 3.4019391052900155e-06], ['Named_object::get_id(Gogo*', 3.4019391052900155e-06], ['go_assert(!this->is_variable()', 3.4019391052900155e-06], ['!this->is_result_variable()', 3.4019391052900155e-06], ['!this->is_type());', 3.4019391052900155e-06], ['(this->is_function_declaration()', 3.4019391052900155e-06], ['!this->func_declaration_value()->asm_name().empty())', 3.4019391052900155e-06], ['this->func_declaration_value()->asm_name();', 3.4019391052900155e-06], ['gogo->package_name();', 3.4019391052900155e-06], ['misleading', 3.4019391052900155e-06], ['Fixing', 3.4019391052900155e-06], ['Function::get_or_make_decl', 3.4019391052900155e-06], ['(this->is_function())', 3.4019391052900155e-06], ['this->func_value()->type();', 3.4019391052900155e-06], ['(this->is_function_declaration())', 3.4019391052900155e-06], ['this->func_declaration_value()->type();', 3.4019391052900155e-06], ["decl_name.push_back('.');", 3.4019391052900155e-06], ['decl_name.append(fntype->receiver()->type()->mangled_name(gogo));', 3.4019391052900155e-06], ['Named_object::get_backend(Gogo*', 3.4019391052900155e-06], ['func_decls)', 3.4019391052900155e-06], ['crash.', 3.4019391052900155e-06], ['(this->is_redefinition_)', 3.4019391052900155e-06], ['const_decls.push_back(this->u_.const_value->get_backend(gogo,', 3.4019391052900155e-06], ['this->u_.type_value;', 3.4019391052900155e-06], ['(!Gogo::is_erroneous_name(this->name_)', 3.4019391052900155e-06], ['!named_type->is_alias())', 3.4019391052900155e-06], ['type_decls.push_back(named_type->get_backend(gogo));', 3.4019391052900155e-06], ['Simply', 3.4019391052900155e-06], ['type_descriptor', 3.4019391052900155e-06], ['named_type->', 3.4019391052900155e-06], ['type_descriptor_pointer(gogo,', 3.4019391052900155e-06], ['named_type->gc_symbol_pointer(gogo);', 3.4019391052900155e-06], ['Type::make_pointer_type(named_type);', 3.4019391052900155e-06], ['pn->type_descriptor_pointer(gogo,', 3.4019391052900155e-06], ['pn->gc_symbol_pointer(gogo);', 3.4019391052900155e-06], ['this->u_.func_value;', 3.4019391052900155e-06], ['func_decls.push_back(func->get_or_make_decl(gogo,', 3.4019391052900155e-06], ['(func->block()', 3.4019391052900155e-06], ['func->build(gogo,', 3.4019391052900155e-06], ['Bindings.', 3.4019391052900155e-06], ['Bindings::Bindings(Bindings*', 3.4019391052900155e-06], ['named_objects_(),', 3.4019391052900155e-06], ['bindings_()', 3.4019391052900155e-06], ['Bindings::clear_file_scope(Gogo*', 3.4019391052900155e-06], ['this->bindings_.begin();', 3.4019391052900155e-06], ['keep;', 3.4019391052900155e-06], ['(p->second->package()', 3.4019391052900155e-06], ['(p->second->is_package())', 3.4019391052900155e-06], ['(p->second->is_function()', 3.4019391052900155e-06], ['!p->second->func_value()->type()->is_method()', 3.4019391052900155e-06], ['(keep)', 3.4019391052900155e-06], ['gogo->add_file_block_name(p->second->name(),', 3.4019391052900155e-06], ['p->second->location());', 3.4019391052900155e-06], ['this->bindings_.erase(p);', 3.4019391052900155e-06], ['Bindings::lookup(const', 3.4019391052900155e-06], ['p->second->resolve();', 3.4019391052900155e-06], ['this->enclosing_->lookup(name);', 3.4019391052900155e-06], ['locally.', 3.4019391052900155e-06], ['Bindings::lookup_local(const', 3.4019391052900155e-06], ['Bindings::remove_binding(Named_object*', 3.4019391052900155e-06], ['this->bindings_.find(no->name());', 3.4019391052900155e-06], ['go_assert(pb', 3.4019391052900155e-06], ['this->bindings_.end());', 3.4019391052900155e-06], ['this->bindings_.erase(pb);', 3.4019391052900155e-06], ['++pn)', 3.4019391052900155e-06], ['(*pn', 3.4019391052900155e-06], ['this->named_objects_.erase(pn);', 3.4019391052900155e-06], ['Bindings::add_method(Named_object*', 3.4019391052900155e-06], ['method)', 3.4019391052900155e-06], ['this->named_objects_.push_back(method);', 3.4019391052900155e-06], ['Contour.', 3.4019391052900155e-06], ['Bindings::add_named_object_to_contour(Contour*', 3.4019391052900155e-06], ['contour,', 3.4019391052900155e-06], ['named_object->resolve());', 3.4019391052900155e-06], ['name(named_object->name());', 3.4019391052900155e-06], ['go_assert(!Gogo::is_sink_name(name));', 3.4019391052900155e-06], ['std::pair<Contour::iterator,', 3.4019391052900155e-06], ['contour->insert(std::make_pair(name,', 3.4019391052900155e-06], ['named_object));', 3.4019391052900155e-06], ['(named_object->package()', 3.4019391052900155e-06], ['ins.first->second->package()', 3.4019391052900155e-06], ['named_object->package()', 3.4019391052900155e-06], ['(ins.first->second->classification()', 3.4019391052900155e-06], ['named_object->classification()))', 3.4019391052900155e-06], ['this->new_definition(ins.first->second,', 3.4019391052900155e-06], ['named_object);', 3.4019391052900155e-06], ['genericize', 3.4019391052900155e-06], ['(!named_object->is_type_declaration()', 3.4019391052900155e-06], ['!named_object->is_function_declaration()', 3.4019391052900155e-06], ['!named_object->is_unknown())', 3.4019391052900155e-06], ['this->named_objects_.push_back(named_object);', 3.4019391052900155e-06], ['OLD_OBJECT,', 3.4019391052900155e-06], ['NEW_OBJECT', 3.4019391052900155e-06], ['Bindings::new_definition(Named_object*', 3.4019391052900155e-06], ['old_object,', 3.4019391052900155e-06], ['new_object)', 3.4019391052900155e-06], ['(new_object->is_erroneous()', 3.4019391052900155e-06], ['!old_object->is_erroneous())', 3.4019391052900155e-06], ['(old_object->classification())', 3.4019391052900155e-06], ['Named_object::NAMED_OBJECT_UNINITIALIZED:', 3.4019391052900155e-06], ['old_object->unknown_value()->real_named_object();', 3.4019391052900155e-06], ['this->new_definition(real,', 3.4019391052900155e-06], ['new_object);', 3.4019391052900155e-06], ['go_assert(!new_object->is_unknown());', 3.4019391052900155e-06], ['old_object->unknown_value()->set_real_named_object(new_object);', 3.4019391052900155e-06], ['(!new_object->is_type_declaration()', 3.4019391052900155e-06], ['!new_object->is_function_declaration())', 3.4019391052900155e-06], ['this->named_objects_.push_back(new_object);', 3.4019391052900155e-06], ['(new_object->is_type())', 3.4019391052900155e-06], ['old_object->set_type_value(new_object->type_value());', 3.4019391052900155e-06], ['new_object->type_value()->set_named_object(old_object);', 3.4019391052900155e-06], ['redeclares', 3.4019391052900155e-06], ['((new_object->is_variable()', 3.4019391052900155e-06], ['new_object->var_value()->is_parameter())', 3.4019391052900155e-06], ['new_object->is_result_variable())', 3.4019391052900155e-06], ['(new_object->is_function()', 3.4019391052900155e-06], ['((Linemap::is_predeclared_location(old_object->location())', 3.4019391052900155e-06], ['Linemap::is_predeclared_location(new_object->location()))', 3.4019391052900155e-06], ['(Gogo::unpack_hidden_name(old_object->name())', 3.4019391052900155e-06], ['Linemap::is_unknown_location(old_object->location()))', 3.4019391052900155e-06], ['(new_object->package()', 3.4019391052900155e-06], ['old_object->func_declaration_value()->has_imported_body()', 3.4019391052900155e-06], ['new_object->func_value()->is_inline_only())))', 3.4019391052900155e-06], ['old_type', 3.4019391052900155e-06], ['old_object->func_declaration_value()->type();', 3.4019391052900155e-06], ['new_object->func_value()->type();', 3.4019391052900155e-06], ['(old_type->is_valid_redeclaration(new_type,', 3.4019391052900155e-06], ['old_object->func_declaration_value();', 3.4019391052900155e-06], ['go_assert(fd->asm_name().empty());', 3.4019391052900155e-06], ['old_object->set_function_value(new_object->func_value());', 3.4019391052900155e-06], ['old_object->message_name();', 3.4019391052900155e-06], ['n.c_str(),', 3.4019391052900155e-06], ['old_object->set_is_redefinition();', 3.4019391052900155e-06], ['new_object->set_is_redefinition();', 3.4019391052900155e-06], ['(!Linemap::is_unknown_location(old_object->location())', 3.4019391052900155e-06], ['!Linemap::is_predeclared_location(old_object->location()))', 3.4019391052900155e-06], ['go_inform(old_object->location(),', 3.4019391052900155e-06], ['Bindings::add_named_type(Named_type*', 3.4019391052900155e-06], ['this->add_named_object(named_type->named_object());', 3.4019391052900155e-06], ['Bindings::add_function(const', 3.4019391052900155e-06], ['this->add_named_object(Named_object::make_function(name,', 3.4019391052900155e-06], ['Bindings::add_function_declaration(const', 3.4019391052900155e-06], ['this->add_named_object(no);', 3.4019391052900155e-06], ['Bindings::define_type(Named_object*', 3.4019391052900155e-06], ['no->set_type_value(type);', 3.4019391052900155e-06], ['this->named_objects_.push_back(no);', 3.4019391052900155e-06], ['Bindings::mark_locals_used()', 3.4019391052900155e-06], ['(*p)->var_value()->set_is_used();', 3.4019391052900155e-06], ['Bindings::traverse(Traverse*', 3.4019391052900155e-06], ['is_global)', 3.4019391052900155e-06], ['this->named_objects_.size();', 3.4019391052900155e-06], ['this->named_objects_[i];', 3.4019391052900155e-06], ['(p->classification())', 3.4019391052900155e-06], ['traverse->constant(p,', 3.4019391052900155e-06], ['is_global);', 3.4019391052900155e-06], ['p->const_value()->type();', 3.4019391052900155e-06], ['p->const_value()->traverse_expression(traverse);', 3.4019391052900155e-06], ['traverse->variable(p);', 3.4019391052900155e-06], ['(p->is_result_variable()', 3.4019391052900155e-06], ['p->var_value()->has_type())', 3.4019391052900155e-06], ['(p->is_variable()', 3.4019391052900155e-06], ['p->var_value()->type()', 3.4019391052900155e-06], ['p->result_var_value()->type());', 3.4019391052900155e-06], ['p->is_variable())', 3.4019391052900155e-06], ['p->var_value()->traverse_expression(traverse,', 3.4019391052900155e-06], ['Traverse::traverse_functions)', 3.4019391052900155e-06], ['traverse->function(p);', 3.4019391052900155e-06], ['Traverse::traverse_functions', 3.4019391052900155e-06], ['p->func_value()->traverse(traverse);', 3.4019391052900155e-06], ['Gogo::traverse.', 3.4019391052900155e-06], ['go_assert(is_global);', 3.4019391052900155e-06], ['Type::traverse(p->type_value(),', 3.4019391052900155e-06], ['(Type::traverse(p->second->func_declaration_value()->type(),', 3.4019391052900155e-06], ['(p->second->is_type_declaration())', 3.4019391052900155e-06], ['p->second->type_declaration_value()->methods();', 3.4019391052900155e-06], ['pm++)', 3.4019391052900155e-06], ['*pm;', 3.4019391052900155e-06], ['*t;', 3.4019391052900155e-06], ['(Type::traverse(t,', 3.4019391052900155e-06], ['Traverse::traverse_func_declarations)', 3.4019391052900155e-06], ['(traverse->function_declaration(p->second)', 3.4019391052900155e-06], ['Label.', 3.4019391052900155e-06], ['Label::clear_refs()', 3.4019391052900155e-06], ['(std::vector<Bindings_snapshot*>::iterator', 3.4019391052900155e-06], ['this->refs_.begin();', 3.4019391052900155e-06], ['this->refs_.end();', 3.4019391052900155e-06], ['this->refs_.clear();', 3.4019391052900155e-06], ['Label::get_backend_label(Translate_context*', 3.4019391052900155e-06], ['Label::get_addr(Translate_context*', 3.4019391052900155e-06], ['this->get_backend_label(context);', 3.4019391052900155e-06], ['context->backend()->label_address(label,', 3.4019391052900155e-06], ['Label::create_dummy_label()', 3.4019391052900155e-06], ['(dummy_label', 3.4019391052900155e-06], ['dummy_label', 3.4019391052900155e-06], ['Label("_");', 3.4019391052900155e-06], ['dummy_label->set_is_used();', 3.4019391052900155e-06], ['Unnamed_label.', 3.4019391052900155e-06], ['Unnamed_label::get_blabel(Translate_context*', 3.4019391052900155e-06], ['Unnamed_label::get_definition(Translate_context*', 3.4019391052900155e-06], ['context->backend()->label_definition_statement(blabel);', 3.4019391052900155e-06], ['Unnamed_label::get_goto(Translate_context*', 3.4019391052900155e-06], ['context->backend()->goto_statement(blabel,', 3.4019391052900155e-06], ['Package.', 3.4019391052900155e-06], ['Package::Package(const', 3.4019391052900155e-06], ['pkgpath_(pkgpath),', 3.4019391052900155e-06], ['pkgpath_symbol_(pkgpath_symbol),', 3.4019391052900155e-06], ['package_name_(),', 3.4019391052900155e-06], ['Package::set_package_name(const', 3.4019391052900155e-06], ['go_assert(!package_name.empty());', 3.4019391052900155e-06], ['(this->package_name_.empty())', 3.4019391052900155e-06], ['this->package_name_', 3.4019391052900155e-06], ['(this->package_name_', 3.4019391052900155e-06], ['("saw', 3.4019391052900155e-06], ['%s"),', 3.4019391052900155e-06], ['this->pkgpath_.c_str(),', 3.4019391052900155e-06], ['this->package_name_.c_str(),', 3.4019391052900155e-06], ['package_name.c_str());', 3.4019391052900155e-06], ['Package::pkgpath_symbol()', 3.4019391052900155e-06], ['Package::set_pkgpath_symbol(const', 3.4019391052900155e-06], ['pkgpath_symbol)', 3.4019391052900155e-06], ['go_assert(!pkgpath_symbol.empty());', 3.4019391052900155e-06], ['pkgpath_symbol;', 3.4019391052900155e-06], ['go_assert(this->pkgpath_symbol_', 3.4019391052900155e-06], ['pkgpath_symbol);', 3.4019391052900155e-06], ['ALIAS.', 3.4019391052900155e-06], ['Package::note_usage(const', 3.4019391052900155e-06], ['alias)', 3.4019391052900155e-06], ['this->aliases_.end());', 3.4019391052900155e-06], ['p->second->note_usage();', 3.4019391052900155e-06], ['Forget', 3.4019391052900155e-06], ['forgetting', 3.4019391052900155e-06], ['unused,', 3.4019391052900155e-06], ['Package::forget_usage(Expression*', 3.4019391052900155e-06], ['usage)', 3.4019391052900155e-06], ['std::set<Expression*>::iterator', 3.4019391052900155e-06], ['this->fake_uses_.find(usage);', 3.4019391052900155e-06], ['this->fake_uses_.end());', 3.4019391052900155e-06], ['this->fake_uses_.erase(p);', 3.4019391052900155e-06], ['Gogo::message_name(this->package_name()).c_str());', 3.4019391052900155e-06], ['fake,', 3.4019391052900155e-06], ['Package::clear_used()', 3.4019391052900155e-06], ['this->package_name();', 3.4019391052900155e-06], ['this->aliases_.find(dot_alias);', 3.4019391052900155e-06], ['this->aliases_.end()', 3.4019391052900155e-06], ['p->second->used()', 3.4019391052900155e-06], ['this->fake_uses_.size())', 3.4019391052900155e-06], ['this->fake_uses_.clear();', 3.4019391052900155e-06], ['this->aliases_.clear();', 3.4019391052900155e-06], ['Package_alias*', 3.4019391052900155e-06], ['Package::add_alias(const', 3.4019391052900155e-06], ['this->aliases_.end())', 3.4019391052900155e-06], ['std::pair<Aliases::iterator,', 3.4019391052900155e-06], ['this->aliases_.insert(std::make_pair(alias,', 3.4019391052900155e-06], ['Package_alias(location)));', 3.4019391052900155e-06], ['ret.first;', 3.4019391052900155e-06], ['Everything', 3.4019391052900155e-06], ['(variables,', 3.4019391052900155e-06], ['declarations)', 3.4019391052900155e-06], ['Constants', 3.4019391052900155e-06], ['Package::determine_types()', 3.4019391052900155e-06], ['this->bindings_;', 3.4019391052900155e-06], ['Traverse.', 3.4019391052900155e-06], ['Traverse::~Traverse()', 3.4019391052900155e-06], ['this->types_seen_;', 3.4019391052900155e-06], ['this->expressions_seen_;', 3.4019391052900155e-06], ['Traverse::remember_type(const', 3.4019391052900155e-06], ['(type->is_error_type())', 3.4019391052900155e-06], ['go_assert((this->traverse_mask()', 3.4019391052900155e-06], ['(this->traverse_mask()', 3.4019391052900155e-06], ['traverse_expressions)', 3.4019391052900155e-06], ['inheritance,', 3.4019391052900155e-06], ['F()', 3.4019391052900155e-06], ['interface{I}', 3.4019391052900155e-06], ['[uintptr(unsafe.Sizeof(&x))]byte', 3.4019391052900155e-06], ['Type::TYPE_NAMED', 3.4019391052900155e-06], ['Type::TYPE_ARRAY', 3.4019391052900155e-06], ['this->types_seen_', 3.4019391052900155e-06], ['Types_seen();', 3.4019391052900155e-06], ['std::pair<Types_seen::iterator,', 3.4019391052900155e-06], ['this->types_seen_->insert(type);', 3.4019391052900155e-06], ['NB:', 3.4019391052900155e-06], ['expressions/types', 3.4019391052900155e-06], ['walks', 3.4019391052900155e-06], ['Traverse::remember_expression(const', 3.4019391052900155e-06], ['expression)', 3.4019391052900155e-06], ['this->expressions_seen_', 3.4019391052900155e-06], ['Expressions_seen();', 3.4019391052900155e-06], ['std::pair<Expressions_seen::iterator,', 3.4019391052900155e-06], ['this->expressions_seen_->insert(expression);', 3.4019391052900155e-06], ['called:', 3.4019391052900155e-06], ['Traverse::variable(Named_object*)', 3.4019391052900155e-06], ['Traverse::constant(Named_object*,', 3.4019391052900155e-06], ['Traverse::function(Named_object*)', 3.4019391052900155e-06], ['Traverse::block(Block*)', 3.4019391052900155e-06], ['Traverse::statement(Block*,', 3.4019391052900155e-06], ['Traverse::expression(Expression**)', 3.4019391052900155e-06], ['Traverse::type(Type*)', 3.4019391052900155e-06], ['Traverse::function_declaration(Named_object*)', 3.4019391052900155e-06], ['Statement_inserter.', 3.4019391052900155e-06], ['Statement_inserter::insert(Statement*', 3.4019391052900155e-06], ['(this->statements_added_', 3.4019391052900155e-06], ['this->statements_added_->insert(s);', 3.4019391052900155e-06], ['go_assert(this->pindex_', 3.4019391052900155e-06], ['this->block_->insert_statement_before(*this->pindex_,', 3.4019391052900155e-06], ['++*this->pindex_;', 3.4019391052900155e-06], ['(this->var_', 3.4019391052900155e-06], ['this->var_->add_preinit_statement(this->gogo_,', 3.4019391052900155e-06]]